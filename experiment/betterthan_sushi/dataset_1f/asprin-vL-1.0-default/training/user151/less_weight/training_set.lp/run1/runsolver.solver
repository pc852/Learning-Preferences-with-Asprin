asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,9) output(8,eq,7) output(8,eq,32) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,9) output(6,eq,7) output(6,eq,32) output(1,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,7) output(1,eq,32) output(11,eq,31) output(11,eq,23) output(11,eq,15) output(11,eq,9) output(11,eq,7) output(11,eq,32) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(23,eq,32) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 45 0
Answer: 2
preference(1,(1,3),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasOiliness(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(1,better,23) output(1,better,32) output(6,better,23) output(6,better,32) output(7,better,32) output(8,better,23) output(8,better,32) output(9,better,32) output(11,better,23) output(11,better,32) output(15,better,32) output(31,better,23) output(31,better,32) output(23,worse,15) output(23,worse,9) output(23,worse,7) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,15) output(8,eq,9) output(8,eq,7) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,15) output(6,eq,9) output(6,eq,7) output(1,eq,11) output(1,eq,31) output(1,eq,15) output(1,eq,9) output(1,eq,7) output(11,eq,31) output(11,eq,15) output(11,eq,9) output(11,eq,7) output(31,eq,15) output(31,eq,9) output(31,eq,7) output(23,eq,32) output(15,eq,9) output(15,eq,7) output(9,eq,7)
Optimization: 32 7
Answer: 3
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,13),1,for(atom(hasStyle(1))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),5) preference(1,less(weight)) output(1,better,9) output(1,better,7) output(6,better,9) output(6,better,7) output(8,better,9) output(8,better,7) output(11,better,9) output(11,better,7) output(15,better,9) output(15,better,7) output(23,better,9) output(23,better,7) output(31,better,9) output(31,better,7) output(7,worse,32) output(9,worse,32) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,32) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,32) output(1,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,32) output(11,eq,31) output(11,eq,23) output(11,eq,15) output(11,eq,32) output(31,eq,23) output(31,eq,15) output(31,eq,32) output(23,eq,15) output(23,eq,32) output(15,eq,32) output(9,eq,7)
Optimization: 31 14
Answer: 4
preference(1,(1,4),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(1,better,23) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,23) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,23) output(8,better,9) output(8,better,7) output(8,better,32) output(11,better,23) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(23,worse,15) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,15) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,15) output(1,eq,11) output(1,eq,31) output(1,eq,15) output(11,eq,31) output(11,eq,15) output(31,eq,15) output(23,eq,9) output(23,eq,7) output(23,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 22 4
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(6,eq,1) output(6,eq,11) output(1,eq,11) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(23,eq,32) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 18 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasOiliness(0))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),2) preference(1,less(weight)) output(1,better,23) output(1,better,32) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,32) output(7,better,32) output(8,better,6) output(8,better,1) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,32) output(31,better,23) output(31,better,32) output(1,worse,11) output(1,worse,7) output(6,worse,11) output(8,worse,11) output(9,worse,7) output(15,worse,7) output(23,worse,15) output(23,worse,9) output(23,worse,7) output(31,worse,7) output(6,eq,7) output(1,eq,31) output(1,eq,15) output(1,eq,9) output(31,eq,15) output(31,eq,9) output(23,eq,32) output(15,eq,9)
Optimization: 18 12
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,13),1,for(atom(hasStyle(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,23) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,11) output(8,better,23) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,23) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(6,worse,1) output(6,worse,31) output(6,worse,15) output(8,worse,1) output(11,worse,31) output(11,worse,15) output(23,worse,15) output(23,worse,9) output(8,eq,31) output(8,eq,15) output(6,eq,11) output(6,eq,9) output(11,eq,9) output(31,eq,15) output(23,eq,7) output(23,eq,32) output(7,eq,32)
Optimization: 17 14
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,11),1,for(atom(hasOiliness(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),2) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,11) output(8,better,23) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(11,better,7) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(7,worse,32) output(8,worse,6) output(8,worse,1) output(11,worse,31) output(11,worse,15) output(23,worse,15) output(8,eq,31) output(8,eq,15) output(6,eq,1) output(11,eq,23) output(11,eq,9) output(11,eq,32) output(31,eq,15) output(23,eq,9) output(23,eq,32) output(9,eq,32)
Optimization: 16 11
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(1,better,9) output(1,better,7) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(23,better,9) output(23,better,7) output(31,better,9) output(31,better,7) output(1,worse,11) output(6,worse,11) output(7,worse,32) output(8,worse,11) output(9,worse,32) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,32) output(31,eq,23) output(31,eq,15) output(31,eq,32) output(23,eq,15) output(23,eq,32) output(15,eq,32)
Optimization: 15 13
Answer: 10
preference(1,(1,1),1,for(atom(hasStyle(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),2) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,23) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(7,worse,32) output(8,worse,6) output(8,worse,1) output(8,worse,11) output(23,worse,15) output(8,eq,31) output(8,eq,15) output(6,eq,1) output(6,eq,11) output(1,eq,11) output(31,eq,15) output(23,eq,9) output(23,eq,32) output(9,eq,32)
Optimization: 14 11
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,11) output(8,better,23) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,23) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(6,worse,1) output(7,worse,32) output(8,worse,6) output(8,worse,1) output(8,worse,31) output(8,worse,15) output(11,worse,31) output(11,worse,15) output(23,worse,15) output(23,worse,9) output(31,eq,15) output(23,eq,32)
Optimization: 12 13
Progression : [ 3;12] (Error: 3)
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,7) output(31,better,32) output(1,worse,11) output(15,worse,9) output(23,worse,15) output(23,worse,9) output(31,worse,9) output(6,eq,11) output(1,eq,9) output(31,eq,15) output(23,eq,7) output(23,eq,32) output(7,eq,32)
Optimization: 11 11
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(7,better,32) output(8,better,6) output(8,better,1) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(1,worse,11) output(6,worse,11) output(8,worse,11) output(9,worse,7) output(23,worse,15) output(23,worse,7) output(6,eq,1) output(31,eq,15) output(23,eq,9) output(23,eq,32) output(9,eq,32)
Optimization: 11 10
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),6) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,7) output(31,better,32) output(1,worse,11) output(23,worse,15) output(23,worse,9) output(6,eq,11) output(31,eq,15) output(31,eq,9) output(23,eq,7) output(23,eq,32) output(15,eq,9) output(7,eq,32)
Optimization: 10 11
Answer: 15
preference(1,(1,2),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,7) output(31,better,32) output(23,worse,15) output(23,worse,9) output(1,eq,11) output(31,eq,15) output(31,eq,9) output(23,eq,7) output(23,eq,32) output(15,eq,9) output(7,eq,32)
Optimization: 9 10
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(11,better,23) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(7,worse,32) output(23,worse,15) output(11,eq,31) output(11,eq,15) output(31,eq,15) output(23,eq,9) output(23,eq,32) output(9,eq,32)
Optimization: 8 10
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(7,worse,32) output(23,worse,15) output(1,eq,11) output(31,eq,15) output(23,eq,9) output(23,eq,32) output(9,eq,32)
Optimization: 7 9
Progression : [4;7] (Error: 0.75)
Answer: 18
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),7) preference(1,less(weight)) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,9) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(1,worse,11) output(7,worse,32) output(9,worse,32) output(23,worse,15) output(31,eq,15) output(23,eq,32)
Optimization: 6 11
Progression : [5;6] (Error: 0.2)
Answer: 19
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasStyle(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(7,worse,32) output(23,worse,15) output(23,worse,9) output(31,eq,15) output(23,eq,32)
Optimization: 5 11
Progression : 5 [ 1;11] (Error: 10)
Answer: 20
preference(1,(1,3),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,14),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,7) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(7,worse,32) output(23,worse,15) output(23,worse,9) output(31,eq,15) output(23,eq,32)
Optimization: 5 8
Progression : 5 [2;8] (Error: 3)
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasOiliness(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(7,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(23,worse,15) output(23,worse,9) output(23,worse,7) output(31,eq,15) output(23,eq,32)
Optimization: 5 7
Progression : 5 [3;7] (Error: 1.33333)
Answer: 22
preference(1,(1,3),1,for(atom(hasPrice(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(7,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(31,better,23) output(31,better,9) output(31,better,7) output(31,better,32) output(23,worse,15) output(23,worse,9) output(23,worse,7) output(31,eq,15) output(23,eq,32)
Optimization: 5 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 5 6
Bounds       : 5 [3;6]
Calls        : 1
Time         : 296.516s (Solving: 294.92s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1177.566s
Threads      : 4        (Winner: 4)

Choices      : 6401076  (Domain: 665961)
Conflicts    : 5838786  (Analyzed: 5838780)
Restarts     : 5151     (Average: 1133.52 Last: 255519)
Model-Level  : 44.5    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 5916003  (Deleted: 5618409)
  Binary     : 664      (Ratio:   0.01%)
  Ternary    : 3386     (Ratio:   0.06%)
  Conflict   : 5838780  (Average Length:  227.8 Ratio:  98.69%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 77223    (Average Length:  154.3 Ratio:   1.31%) 
  Distributed: 25912    (Ratio:   0.44% Average LBD: 3.74) 
  Integrated : 77736    (Ratio: 300.00% Unit: 68 Average Jumps: 6.76)
Backjumps    : 5838780  (Average:  1.08 Max:  47 Sum: 6328433)
  Executed   : 5838776  (Average:  1.08 Max:  47 Sum: 6328376 Ratio: 100.00%)
  Bounded    : 4        (Average: 14.25 Max:  18 Sum:     57 Ratio:   0.00%)

Rules        : 174776  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8135    
  Sum        : 64      
  Count      : 14      
Equivalences : 8192     (Atom=Atom: 519 Body=Body: 256 Other: 7417)
Tight        : Yes
Variables    : 6939     (Eliminated:    0 Frozen: 4279)
Constraints  : 177329   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(1)) 
}.
