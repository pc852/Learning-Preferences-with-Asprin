asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(11,eq,20) output(11,eq,24) output(11,eq,68) output(11,eq,5) output(11,eq,16) output(11,eq,8) output(11,eq,61) output(11,eq,50) output(11,eq,7) output(20,eq,24) output(20,eq,68) output(20,eq,5) output(20,eq,16) output(20,eq,8) output(20,eq,61) output(20,eq,50) output(20,eq,7) output(24,eq,68) output(24,eq,5) output(24,eq,16) output(24,eq,8) output(24,eq,61) output(24,eq,50) output(24,eq,7) output(68,eq,5) output(68,eq,16) output(68,eq,8) output(68,eq,61) output(68,eq,50) output(68,eq,7) output(5,eq,16) output(5,eq,8) output(5,eq,61) output(5,eq,50) output(5,eq,7) output(16,eq,8) output(16,eq,61) output(16,eq,50) output(16,eq,7) output(8,eq,61) output(8,eq,50) output(8,eq,7) output(61,eq,50) output(61,eq,7) output(50,eq,7)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(11,better,24) output(11,better,68) output(20,better,24) output(20,better,68) output(24,worse,5) output(24,worse,16) output(24,worse,8) output(24,worse,61) output(24,worse,50) output(24,worse,7) output(68,worse,5) output(68,worse,16) output(68,worse,8) output(68,worse,61) output(68,worse,50) output(68,worse,7) output(11,eq,20) output(11,eq,5) output(11,eq,16) output(11,eq,8) output(11,eq,61) output(11,eq,50) output(11,eq,7) output(20,eq,5) output(20,eq,16) output(20,eq,8) output(20,eq,61) output(20,eq,50) output(20,eq,7) output(24,eq,68) output(5,eq,16) output(5,eq,8) output(5,eq,61) output(5,eq,50) output(5,eq,7) output(16,eq,8) output(16,eq,61) output(16,eq,50) output(16,eq,7) output(8,eq,61) output(8,eq,50) output(8,eq,7) output(61,eq,50) output(61,eq,7) output(50,eq,7)
Optimization: 41 1
Answer: 3
preference(1,(1,14),1,for(atom(hasMajorGrp(1))),1) preference(1,less(weight)) output(61,better,7) output(5,better,7) output(8,better,7) output(11,better,7) output(16,better,7) output(20,better,7) output(24,better,7) output(50,better,7) output(68,better,7) output(11,eq,20) output(11,eq,24) output(11,eq,68) output(11,eq,5) output(11,eq,16) output(11,eq,8) output(11,eq,61) output(11,eq,50) output(20,eq,24) output(20,eq,68) output(20,eq,5) output(20,eq,16) output(20,eq,8) output(20,eq,61) output(20,eq,50) output(24,eq,68) output(24,eq,5) output(24,eq,16) output(24,eq,8) output(24,eq,61) output(24,eq,50) output(68,eq,5) output(68,eq,16) output(68,eq,8) output(68,eq,61) output(68,eq,50) output(5,eq,16) output(5,eq,8) output(5,eq,61) output(5,eq,50) output(16,eq,8) output(16,eq,61) output(16,eq,50) output(8,eq,61) output(8,eq,50) output(61,eq,50)
Optimization: 36 1
Answer: 4
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),1) preference(1,less(weight)) output(5,better,61) output(5,better,7) output(8,better,61) output(8,better,7) output(11,better,61) output(11,better,7) output(16,better,61) output(16,better,7) output(20,better,61) output(20,better,7) output(24,better,61) output(24,better,7) output(50,better,7) output(68,better,61) output(68,better,7) output(61,worse,50) output(11,eq,20) output(11,eq,24) output(11,eq,68) output(11,eq,5) output(11,eq,16) output(11,eq,8) output(11,eq,50) output(20,eq,24) output(20,eq,68) output(20,eq,5) output(20,eq,16) output(20,eq,8) output(20,eq,50) output(24,eq,68) output(24,eq,5) output(24,eq,16) output(24,eq,8) output(24,eq,50) output(68,eq,5) output(68,eq,16) output(68,eq,8) output(68,eq,50) output(5,eq,16) output(5,eq,8) output(5,eq,50) output(16,eq,8) output(16,eq,50) output(8,eq,50) output(61,eq,7)
Optimization: 30 9
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(11,eq,24) output(11,eq,68) output(11,eq,5) output(11,eq,16) output(20,eq,24) output(20,eq,68) output(20,eq,5) output(20,eq,16) output(24,eq,68) output(24,eq,5) output(24,eq,16) output(68,eq,5) output(68,eq,16) output(5,eq,16) output(8,eq,61) output(8,eq,50) output(8,eq,7) output(61,eq,50) output(61,eq,7) output(50,eq,7)
Optimization: 21 11
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(0))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),1) preference(1,less(weight)) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(11,eq,24) output(11,eq,68) output(11,eq,5) output(20,eq,24) output(20,eq,68) output(20,eq,5) output(24,eq,68) output(24,eq,5) output(68,eq,5) output(16,eq,8) output(16,eq,61) output(16,eq,50) output(16,eq,7) output(8,eq,61) output(8,eq,50) output(8,eq,7) output(61,eq,50) output(61,eq,7) output(50,eq,7)
Optimization: 20 12
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,(1,14),1,for(atom(hasPrice(1))),1) preference(1,less(weight)) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,7) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(61,worse,50) output(8,worse,50) output(16,worse,50) output(11,eq,20) output(11,eq,24) output(11,eq,68) output(20,eq,24) output(20,eq,68) output(24,eq,68) output(5,eq,50) output(16,eq,8) output(16,eq,61) output(16,eq,7) output(8,eq,61) output(8,eq,7) output(61,eq,7)
Optimization: 16 14
Answer: 8
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 12
Progression : 2 [ 1;12] (Error: 11)
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 11
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasStyle(0))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),3) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 10
Progression : 2 [ 2;10] (Error: 4)
Answer: 12
preference(1,(1,2),1,for(atom(hasOiliness(0))),7) preference(1,(1,3),1,for(atom(hasStyle(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,6),1,for(atom(hasStyle(1))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 9
Answer: 13
preference(1,(1,2),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),4) preference(1,(1,8),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasStyle(0))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 8
Progression : 2 [3;8] (Error: 1.66667)
Answer: 14
preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),8) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 7
Answer: 15
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasPrice(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(61,better,50) output(61,better,7) output(5,better,16) output(5,better,8) output(5,better,61) output(5,better,50) output(5,better,7) output(8,better,61) output(8,better,50) output(8,better,7) output(11,better,24) output(11,better,68) output(11,better,5) output(11,better,16) output(11,better,8) output(11,better,61) output(11,better,50) output(11,better,7) output(16,better,8) output(16,better,61) output(16,better,50) output(16,better,7) output(20,better,24) output(20,better,68) output(20,better,5) output(20,better,16) output(20,better,8) output(20,better,61) output(20,better,50) output(20,better,7) output(24,better,5) output(24,better,16) output(24,better,8) output(24,better,61) output(24,better,50) output(24,better,7) output(50,better,7) output(68,better,5) output(68,better,16) output(68,better,8) output(68,better,61) output(68,better,50) output(68,better,7) output(11,eq,20) output(24,eq,68)
Optimization: 2 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.049 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 2 6
Calls        : 1
Time         : 296.475s (Solving: 294.88s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.937s
Threads      : 4        (Winner: 4)

Choices      : 9696386  (Domain: 508881)
Conflicts    : 5750746  (Analyzed: 5750743)
Restarts     : 4768     (Average: 1206.11 Last: 257207)
Model-Level  : 160.8   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 5803496  (Deleted: 5481231)
  Binary     : 476      (Ratio:   0.01%)
  Ternary    : 1800     (Ratio:   0.03%)
  Conflict   : 5750743  (Average Length:  276.9 Ratio:  99.09%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 52753    (Average Length:  217.2 Ratio:   0.91%) 
  Distributed: 17595    (Ratio:   0.31% Average LBD: 3.73) 
  Integrated : 52785    (Ratio: 300.00% Unit: 24 Average Jumps: 39.83)
Backjumps    : 5750743  (Average:  1.51 Max: 858 Sum: 8671447)
  Executed   : 5750742  (Average:  1.51 Max: 858 Sum: 8671423 Ratio: 100.00%)
  Bounded    : 1        (Average: 24.00 Max:  24 Sum:     24 Ratio:   0.00%)

Rules        : 174776  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8129    
  Sum        : 58      
  Count      : 14      
Equivalences : 8183     (Atom=Atom: 534 Body=Body: 271 Other: 7378)
Tight        : Yes
Variables    : 6930     (Eliminated:    0 Frozen: 4270)
Constraints  : 177314   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.
