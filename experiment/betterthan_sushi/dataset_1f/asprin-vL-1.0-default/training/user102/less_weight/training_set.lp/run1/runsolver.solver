asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,48) output(1,eq,21) output(1,eq,14) output(1,eq,39) output(1,eq,15) output(1,eq,46) output(1,eq,23) output(1,eq,50) output(1,eq,60) output(48,eq,21) output(48,eq,14) output(48,eq,39) output(48,eq,15) output(48,eq,46) output(48,eq,23) output(48,eq,50) output(48,eq,60) output(21,eq,14) output(21,eq,39) output(21,eq,15) output(21,eq,46) output(21,eq,23) output(21,eq,50) output(21,eq,60) output(14,eq,39) output(14,eq,15) output(14,eq,46) output(14,eq,23) output(14,eq,50) output(14,eq,60) output(39,eq,15) output(39,eq,46) output(39,eq,23) output(39,eq,50) output(39,eq,60) output(15,eq,46) output(15,eq,23) output(15,eq,50) output(15,eq,60) output(46,eq,23) output(46,eq,50) output(46,eq,60) output(23,eq,50) output(23,eq,60) output(50,eq,60)
Optimization: 45 0
Answer: 2
preference(1,(1,6),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(1,better,48) output(1,better,46) output(1,better,60) output(14,better,46) output(14,better,60) output(15,better,46) output(15,better,60) output(21,better,46) output(21,better,60) output(23,better,60) output(39,better,46) output(39,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,23) output(48,worse,50) output(46,worse,23) output(46,worse,50) output(1,eq,21) output(1,eq,14) output(1,eq,39) output(1,eq,15) output(1,eq,23) output(1,eq,50) output(48,eq,46) output(48,eq,60) output(21,eq,14) output(21,eq,39) output(21,eq,15) output(21,eq,23) output(21,eq,50) output(14,eq,39) output(14,eq,15) output(14,eq,23) output(14,eq,50) output(39,eq,15) output(39,eq,23) output(39,eq,50) output(15,eq,23) output(15,eq,50) output(46,eq,60) output(23,eq,50)
Optimization: 32 2
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(48,better,21) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,46) output(1,better,23) output(1,better,60) output(14,better,46) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(23,better,60) output(39,better,46) output(39,better,60) output(50,better,60) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,23) output(48,worse,50) output(1,worse,15) output(1,worse,50) output(14,worse,39) output(14,worse,15) output(14,worse,23) output(14,worse,50) output(21,worse,14) output(21,worse,39) output(21,worse,15) output(21,worse,46) output(21,worse,23) output(21,worse,50) output(21,worse,60) output(23,worse,50) output(39,worse,15) output(39,worse,50) output(46,worse,23) output(46,worse,50) output(48,eq,46) output(48,eq,60) output(39,eq,23) output(46,eq,60)
Optimization: 27 14
Progression : [ 3;27] (Error: 8)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),5) preference(1,(1,6),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(48,better,39) output(48,better,15) output(48,better,23) output(48,better,50) output(14,better,39) output(14,better,15) output(14,better,23) output(14,better,50) output(14,better,60) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,23) output(21,better,50) output(21,better,60) output(46,better,23) output(46,better,50) output(46,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,46) output(1,worse,48) output(1,worse,21) output(1,worse,14) output(1,worse,46) output(1,worse,60) output(14,worse,46) output(15,worse,46) output(15,worse,60) output(23,worse,60) output(39,worse,46) output(39,worse,60) output(50,worse,60) output(1,eq,39) output(1,eq,15) output(1,eq,23) output(1,eq,50) output(48,eq,60) output(21,eq,46) output(39,eq,15) output(39,eq,23) output(39,eq,50) output(15,eq,23) output(15,eq,50) output(23,eq,50)
Optimization: 27 8
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,13),1,for(atom(hasPrice(1))),4) preference(1,(1,14),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(21,better,39) output(21,better,23) output(21,better,60) output(23,better,60) output(39,better,60) output(46,better,23) output(46,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(14,worse,15) output(21,worse,14) output(21,worse,15) output(21,worse,50) output(23,worse,50) output(39,worse,15) output(39,worse,46) output(39,worse,50) output(46,worse,50) output(1,eq,15) output(48,eq,60) output(21,eq,46) output(39,eq,23)
Optimization: 20 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(21,better,39) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,46) output(39,better,50) output(39,better,60) output(46,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(14,worse,15) output(21,worse,15) output(39,worse,15) output(46,worse,23) output(46,worse,50) output(1,eq,15) output(48,eq,60) output(21,eq,14) output(39,eq,23)
Optimization: 16 11
Progression : [ 4;16] (Error: 3)
Progression : [ 5;16] (Error: 2.2)
Progression : [ 6;16] (Error: 1.66667)
Progression : [ 7;16] (Error: 1.28571)
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,7),1,for(atom(hasStyle(0))),3) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(48,better,50) output(1,better,48) output(1,better,15) output(1,better,46) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,50) output(15,better,60) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,50) output(39,better,60) output(46,better,50) output(46,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(1,worse,21) output(1,worse,14) output(15,worse,23) output(46,worse,23) output(50,worse,60) output(1,eq,39) output(1,eq,23) output(48,eq,60) output(39,eq,23)
Optimization: 15 13
Answer: 8
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,8),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,11),1,for(atom(hasPrice(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(48,better,21) output(48,better,14) output(48,better,39) output(48,better,15) output(48,better,46) output(48,better,23) output(48,better,50) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(14,better,39) output(14,better,46) output(14,better,23) output(14,better,50) output(15,better,46) output(15,better,23) output(15,better,50) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(23,better,50) output(39,better,50) output(46,better,23) output(46,better,50) output(14,worse,60) output(15,worse,60) output(21,worse,60) output(23,worse,60) output(39,worse,15) output(39,worse,46) output(39,worse,60) output(46,worse,60) output(50,worse,60) output(1,eq,48) output(1,eq,60) output(48,eq,60) output(14,eq,15) output(39,eq,23)
Optimization: 14 10
Progression : [ 8;14] (Error: 0.75)
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(1,better,48) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,50) output(39,better,60) output(46,better,23) output(46,better,50) output(46,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(39,worse,15) output(39,worse,46) output(1,eq,21) output(48,eq,60) output(14,eq,15) output(39,eq,23)
Optimization: 13 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,10),1,for(atom(hasStyle(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(48,better,39) output(48,better,23) output(48,better,50) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(39,better,50) output(46,better,23) output(46,better,50) output(46,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,15) output(48,worse,46) output(23,worse,60) output(39,worse,15) output(39,worse,46) output(39,worse,60) output(50,worse,60) output(48,eq,60) output(21,eq,14) output(39,eq,23)
Optimization: 12 13
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasStyle(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,13),1,for(atom(hasStyle(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,46) output(39,better,50) output(39,better,60) output(46,better,50) output(46,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(39,worse,15) output(46,worse,23) output(48,eq,60) output(21,eq,14) output(39,eq,23)
Optimization: 12 11
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasStyle(0))),8) preference(1,(1,10),1,for(atom(hasPrice(0))),2) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,50) output(15,better,60) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,50) output(39,better,60) output(46,better,50) output(46,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(15,worse,23) output(46,worse,23) output(48,eq,60) output(39,eq,23)
Optimization: 11 12
Progression : [11;11] (Error: 0)
Answer: 13
preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(48,better,21) output(48,better,14) output(48,better,39) output(48,better,15) output(48,better,46) output(48,better,23) output(48,better,50) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(15,better,46) output(15,better,50) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(23,better,50) output(39,better,15) output(39,better,46) output(39,better,50) output(46,better,50) output(14,worse,60) output(15,worse,23) output(15,worse,60) output(21,worse,60) output(23,worse,60) output(39,worse,60) output(46,worse,23) output(46,worse,60) output(50,worse,60) output(48,eq,60) output(39,eq,23)
Optimization: 11 9
Progression : 11 [1;9] (Error: 8)
Progression : 11 [2;9] (Error: 3.5)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasOiliness(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,46) output(39,better,50) output(39,better,60) output(46,better,50) output(46,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(39,worse,15) output(46,worse,23) output(48,eq,60) output(39,eq,23)
Optimization: 11 8
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,13),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(48,better,21) output(48,better,14) output(48,better,39) output(48,better,15) output(48,better,46) output(48,better,23) output(48,better,50) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(15,better,46) output(15,better,50) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(23,better,50) output(39,better,15) output(39,better,46) output(39,better,50) output(46,better,50) output(14,worse,60) output(15,worse,23) output(15,worse,60) output(21,worse,60) output(23,worse,60) output(39,worse,60) output(46,worse,23) output(46,worse,60) output(50,worse,60) output(48,eq,60) output(39,eq,23)
Optimization: 11 7
Progression : 11 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.049 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 11 7
Bounds       : 11 [3;7]
Calls        : 1
Time         : 298.216s (Solving: 296.49s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.529s
Threads      : 4        (Winner: 4)

Choices      : 8945546  (Domain: 761552)
Conflicts    : 7154400  (Analyzed: 7154387)
Restarts     : 7402     (Average: 966.55 Last: 460751)
Model-Level  : 49.7    
Problems     : 20       (Average Length: 0.20 Splits: 0)
Lemmas       : 7227096  (Deleted: 6887965)
  Binary     : 1008     (Ratio:   0.01%)
  Ternary    : 8238     (Ratio:   0.11%)
  Conflict   : 7154386  (Average Length:  201.9 Ratio:  98.99%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 72710    (Average Length:   29.6 Ratio:   1.01%) 
  Distributed: 24257    (Ratio:   0.34% Average LBD: 3.62) 
  Integrated : 72771    (Ratio: 300.00% Unit: 219 Average Jumps: 11.65)
Backjumps    : 7154387  (Average:  1.20 Max: 450 Sum: 8607165)
  Executed   : 7154360  (Average:  1.20 Max: 450 Sum: 8606923 Ratio: 100.00%)
  Bounded    : 27       (Average:  8.96 Max:  35 Sum:    242 Ratio:   0.00%)

Rules        : 174776  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8145    
  Sum        : 74      
  Count      : 14      
Equivalences : 8207     (Atom=Atom: 494 Body=Body: 231 Other: 7482)
Tight        : Yes
Variables    : 6954     (Eliminated:    0 Frozen: 4294)
Constraints  : 177354   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOiliness(1)) 
}.
