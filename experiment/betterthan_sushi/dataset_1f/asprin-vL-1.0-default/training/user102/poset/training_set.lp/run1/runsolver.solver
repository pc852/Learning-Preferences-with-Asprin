asprin_vL version 1.0
Reading from stdin
-:309:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:319:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:334:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:415:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:689:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:866:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:995:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1067:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1071:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1071:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1077:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1176:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1202:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1322:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1356:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1378:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:226:1-16: info: no atoms over signature occur in program:
  output/3

-:218:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:219:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:220:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(48,eq,60) output(39,eq,23) preference(1,poset) output(1,eq,48) output(1,eq,21) output(1,eq,14) output(1,eq,39) output(1,eq,15) output(1,eq,46) output(1,eq,23) output(1,eq,50) output(1,eq,60) output(48,eq,21) output(48,eq,14) output(48,eq,39) output(48,eq,15) output(48,eq,46) output(48,eq,23) output(48,eq,50) output(21,eq,14) output(21,eq,39) output(21,eq,15) output(21,eq,46) output(21,eq,23) output(21,eq,50) output(21,eq,60) output(14,eq,39) output(14,eq,15) output(14,eq,46) output(14,eq,23) output(14,eq,50) output(14,eq,60) output(39,eq,15) output(39,eq,46) output(39,eq,50) output(39,eq,60) output(15,eq,46) output(15,eq,23) output(15,eq,50) output(15,eq,60) output(46,eq,23) output(46,eq,50) output(46,eq,60) output(23,eq,50) output(23,eq,60) output(50,eq,60)
Optimization: 45 0
Answer: 2
output(48,eq,60) output(39,eq,23) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset) output(1,better,48) output(1,better,60) output(21,better,60) output(14,better,60) output(39,better,60) output(15,better,60) output(46,better,60) output(23,better,60) output(50,better,60) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(21,eq,14) output(21,eq,39) output(21,eq,15) output(21,eq,46) output(21,eq,23) output(21,eq,50) output(14,eq,39) output(14,eq,15) output(14,eq,46) output(14,eq,23) output(14,eq,50) output(39,eq,15) output(39,eq,46) output(39,eq,50) output(15,eq,46) output(15,eq,23) output(15,eq,50) output(46,eq,23) output(46,eq,50) output(23,eq,50)
Optimization: 29 1
Answer: 3
output(48,eq,60) output(39,eq,23) preference(1,(1,6),1,for(atom(hasOiliness(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset) output(1,better,48) output(1,better,60) output(21,better,60) output(14,better,60) output(39,better,60) output(15,better,60) output(46,better,60) output(23,better,60) output(50,better,60) output(15,better,46) output(15,better,23) output(46,better,23) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(14,better,39) output(14,better,23) output(21,better,39) output(21,better,23) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(21,worse,15) output(14,worse,15) output(39,worse,15) output(39,worse,46) output(21,worse,50) output(14,worse,50) output(39,worse,50) output(46,worse,50) output(23,worse,50) output(21,eq,14) output(21,eq,46) output(14,eq,46) output(15,eq,50)
Optimization: 22 2
Answer: 4
output(48,eq,60) output(39,eq,23) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(48,better,15) output(48,better,50) output(1,better,48) output(1,better,60) output(21,better,60) output(14,better,60) output(46,better,60) output(21,better,15) output(21,better,50) output(39,better,15) output(39,better,50) output(23,better,50) output(46,better,23) output(46,better,50) output(1,better,39) output(1,better,15) output(1,better,23) output(1,better,50) output(14,better,39) output(14,better,15) output(14,better,23) output(14,better,50) output(21,better,39) output(21,better,23) output(15,worse,60) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,46) output(15,worse,23) output(39,worse,46) output(15,worse,46) output(48,eq,39) output(48,eq,23) output(21,eq,14) output(21,eq,46) output(14,eq,46) output(39,eq,60) output(15,eq,50) output(23,eq,60) output(1,unc,21) output(1,unc,14) output(1,unc,46)
Optimization: 21 2
Answer: 5
output(48,eq,60) output(39,eq,23) preference(1,(1,1),1,for(atom(hasStyle(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,10),1,for(atom(hasPrice(1))),()) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,3),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(6))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(11))),()) preference(1,(1,11),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,48) output(1,better,60) output(21,better,60) output(14,better,60) output(39,better,60) output(15,better,60) output(46,better,60) output(23,better,60) output(50,better,60) output(21,better,15) output(21,better,50) output(15,better,23) output(15,better,50) output(46,better,23) output(46,better,50) output(1,better,39) output(1,better,23) output(1,better,50) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(21,better,39) output(21,better,23) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(1,worse,21) output(39,worse,15) output(1,worse,46) output(39,worse,46) output(15,worse,46) output(1,worse,14) output(21,worse,14) output(21,eq,46) output(39,eq,50) output(23,eq,50) output(1,unc,15)
Optimization: 20 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.031 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 5+
  Optimum    : unknown
Optimization : 20 12
Calls        : 1
Time         : 296.439s (Solving: 287.81s 1st Model: 1.63s Unsat: 0.00s)
CPU Time     : 1158.498s
Threads      : 4        (Winner: 4)

Choices      : 2896866  (Domain: 916)
Conflicts    : 79172    (Analyzed: 79172)
Restarts     : 84       (Average: 942.52 Last: 2877)
Model-Level  : 771.0   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 11035640 (Deleted: 10951480)
  Binary     : 466      (Ratio:   0.00%)
  Ternary    : 23039    (Ratio:   0.21%)
  Conflict   : 79172    (Average Length: 2500.2 Ratio:   0.72%) 
  Loop       : 10936003 (Average Length:  281.0 Ratio:  99.10%) 
  Other      : 20465    (Average Length:    3.2 Ratio:   0.19%) 
  Distributed: 6832     (Ratio:   0.06% Average LBD: 2.85) 
  Integrated : 20494    (Ratio: 299.97% Unit: 41 Average Jumps: 3492.17)
Backjumps    : 79172    (Average: 31.42 Max: 178686 Sum: 2487730)
  Executed   : 79160    (Average: 31.42 Max: 178686 Sum: 2487708 Ratio: 100.00%)
  Bounded    : 12       (Average:  1.83 Max:   2 Sum:     22 Ratio:   0.00%)

Rules        : 1888283 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 35932   
Bodies       : 1399958 
  Count      : 48      
Equivalences : 33731    (Atom=Atom: 5377 Body=Body: 8170 Other: 20184)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 1339880 Gammas: 0)
Variables    : 1356250  (Eliminated:    0 Frozen: 1342926)
Constraints  : 7841778  (Binary:  82.4% Ternary:   4.3% Other:  13.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(10)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasStyle(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMajorGrp(1)) ; 
  atom(hasStyle(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMinorGrp(4)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(4)) >> atom(hasMajorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(11)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPrice(1)) >> atom(hasMajorGrp(1)) ; 
  atom(hasMajorGrp(0)) >> atom(hasMinorGrp(6)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(11)) ; 
  atom(hasMajorGrp(0)) >> atom(hasMajorGrp(1)) ; 
  atom(hasMajorGrp(1)) >> atom(hasMinorGrp(1)) 
}.
