asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(22,eq,31) output(22,eq,60) output(22,eq,21) output(22,eq,8) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(22,eq,17) output(22,eq,76) output(31,eq,60) output(31,eq,21) output(31,eq,8) output(31,eq,24) output(31,eq,6) output(31,eq,12) output(31,eq,17) output(31,eq,76) output(60,eq,21) output(60,eq,8) output(60,eq,24) output(60,eq,6) output(60,eq,12) output(60,eq,17) output(60,eq,76) output(21,eq,8) output(21,eq,24) output(21,eq,6) output(21,eq,12) output(21,eq,17) output(21,eq,76) output(8,eq,24) output(8,eq,6) output(8,eq,12) output(8,eq,17) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(24,eq,17) output(24,eq,76) output(6,eq,12) output(6,eq,17) output(6,eq,76) output(12,eq,17) output(12,eq,76) output(17,eq,76)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,10),1,for(atom(hasOiliness(0))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),5) preference(1,(1,12),1,for(atom(hasStyle(0))),7) preference(1,(1,13),1,for(atom(hasStyle(1))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(6,better,17) output(6,better,76) output(12,better,17) output(12,better,76) output(21,better,8) output(21,better,6) output(21,better,17) output(21,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(60,worse,21) output(60,worse,24) output(60,worse,6) output(60,worse,12) output(6,worse,12) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(22,worse,21) output(22,worse,24) output(22,worse,6) output(22,worse,12) output(31,worse,21) output(31,worse,24) output(31,worse,6) output(31,worse,12) output(22,eq,31) output(22,eq,60) output(22,eq,8) output(22,eq,17) output(22,eq,76) output(31,eq,60) output(31,eq,8) output(31,eq,17) output(31,eq,76) output(60,eq,8) output(60,eq,17) output(60,eq,76) output(21,eq,24) output(21,eq,12) output(8,eq,17) output(8,eq,76) output(24,eq,12) output(17,eq,76)
Optimization: 34 8
Answer: 3
preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(6,better,17) output(6,better,76) output(12,better,17) output(12,better,76) output(21,better,8) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,8) output(22,better,17) output(22,better,76) output(24,better,17) output(24,better,76) output(60,worse,21) output(60,worse,24) output(60,worse,6) output(60,worse,12) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(31,worse,21) output(31,worse,24) output(31,worse,6) output(31,worse,12) output(22,eq,21) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(31,eq,60) output(31,eq,8) output(31,eq,17) output(31,eq,76) output(60,eq,8) output(60,eq,17) output(60,eq,76) output(21,eq,24) output(21,eq,6) output(21,eq,12) output(8,eq,17) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(6,eq,12) output(17,eq,76)
Optimization: 31 2
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(6,better,12) output(6,better,17) output(6,better,76) output(21,better,8) output(21,better,24) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,8) output(22,better,24) output(22,better,12) output(22,better,17) output(22,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,24) output(60,worse,6) output(60,worse,12) output(60,worse,17) output(60,worse,76) output(8,worse,6) output(22,worse,21) output(22,worse,6) output(24,worse,6) output(31,worse,21) output(31,worse,8) output(31,worse,24) output(31,worse,6) output(31,worse,12) output(31,worse,17) output(31,worse,76) output(31,eq,60) output(21,eq,6) output(8,eq,24) output(8,eq,12) output(8,eq,17) output(8,eq,76) output(24,eq,12) output(24,eq,17) output(24,eq,76) output(12,eq,17) output(12,eq,76) output(17,eq,76)
Optimization: 30 9
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(60,better,24) output(60,better,12) output(6,better,12) output(8,better,24) output(8,better,6) output(8,better,12) output(21,better,24) output(21,better,6) output(21,better,12) output(22,better,60) output(22,better,24) output(22,better,6) output(22,better,12) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(60,worse,21) output(60,worse,8) output(60,worse,6) output(60,worse,17) output(60,worse,76) output(6,worse,17) output(6,worse,76) output(12,worse,17) output(12,worse,76) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(22,eq,31) output(22,eq,21) output(22,eq,8) output(22,eq,17) output(22,eq,76) output(31,eq,21) output(31,eq,8) output(31,eq,17) output(31,eq,76) output(21,eq,8) output(21,eq,17) output(21,eq,76) output(8,eq,17) output(8,eq,76) output(24,eq,12) output(17,eq,76)
Optimization: 28 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(60,better,24) output(60,better,12) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,12) output(21,better,8) output(21,better,24) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,8) output(22,better,24) output(22,better,12) output(22,better,17) output(22,better,76) output(31,better,24) output(31,better,12) output(60,worse,21) output(60,worse,8) output(60,worse,6) output(60,worse,17) output(60,worse,76) output(8,worse,6) output(12,worse,17) output(12,worse,76) output(22,worse,21) output(22,worse,6) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(31,worse,21) output(31,worse,8) output(31,worse,6) output(31,worse,17) output(31,worse,76) output(31,eq,60) output(21,eq,6) output(8,eq,17) output(8,eq,76) output(24,eq,12) output(17,eq,76)
Optimization: 24 9
Progression : [ 3;24] (Error: 7)
Answer: 7
preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,6) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,8) output(22,better,6) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(6,worse,12) output(6,worse,17) output(8,worse,24) output(8,worse,12) output(8,worse,17) output(22,worse,60) output(31,worse,60) output(31,worse,21) output(31,worse,8) output(31,worse,24) output(31,worse,6) output(31,worse,12) output(31,worse,17) output(31,worse,76) output(22,eq,21) output(22,eq,24) output(22,eq,12) output(21,eq,24) output(21,eq,12) output(8,eq,6) output(8,eq,76) output(24,eq,12) output(6,eq,76)
Optimization: 23 9
Progression : [ 4;23] (Error: 4.75)
Answer: 8
preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,8) output(22,better,6) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(6,worse,12) output(6,worse,17) output(8,worse,24) output(8,worse,12) output(8,worse,17) output(22,worse,60) output(22,worse,21) output(31,worse,60) output(31,worse,21) output(31,worse,8) output(31,worse,24) output(31,worse,6) output(31,worse,12) output(31,worse,17) output(31,worse,76) output(22,eq,24) output(22,eq,12) output(60,eq,21) output(8,eq,6) output(8,eq,76) output(24,eq,12) output(6,eq,76)
Optimization: 22 10
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasPrice(1))),5) preference(1,(1,5),1,for(atom(hasOiliness(1))),6) preference(1,(1,6),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,12),1,for(atom(hasStyle(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,12) output(60,better,76) output(6,better,12) output(6,better,76) output(8,better,24) output(8,better,12) output(17,better,76) output(21,better,24) output(21,better,12) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,12) output(22,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,12) output(31,better,76) output(60,worse,6) output(60,worse,17) output(6,worse,17) output(8,worse,6) output(8,worse,17) output(12,worse,17) output(12,worse,76) output(21,worse,8) output(21,worse,6) output(21,worse,17) output(21,worse,76) output(22,worse,6) output(22,worse,17) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(31,worse,6) output(31,worse,17) output(22,eq,31) output(8,eq,76) output(24,eq,12)
Optimization: 21 13
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),5) preference(1,(1,12),1,for(atom(hasPrice(1))),7) preference(1,(1,13),1,for(atom(hasStyle(1))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(8,better,24) output(8,better,12) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,76) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,76) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,76) output(6,worse,17) output(8,worse,17) output(12,worse,17) output(12,worse,76) output(21,worse,17) output(22,worse,31) output(22,worse,60) output(22,worse,17) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(31,worse,60) output(31,worse,17) output(22,eq,21) output(8,eq,6) output(8,eq,76) output(24,eq,12) output(6,eq,76)
Optimization: 18 10
Answer: 11
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(6,better,12) output(6,better,17) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(60,worse,21) output(60,worse,8) output(60,worse,76) output(6,worse,76) output(12,worse,17) output(12,worse,76) output(17,worse,76) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(31,worse,21) output(22,eq,21) output(31,eq,8) output(31,eq,76) output(8,eq,76) output(24,eq,12)
Optimization: 16 9
Answer: 12
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(6,better,12) output(6,better,17) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,76) output(6,worse,76) output(12,worse,17) output(12,worse,76) output(17,worse,76) output(22,worse,31) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(21,eq,8) output(21,eq,76) output(8,eq,76) output(24,eq,12)
Optimization: 15 8
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(6,better,12) output(6,better,17) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,60) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,76) output(6,worse,76) output(12,worse,17) output(12,worse,76) output(17,worse,76) output(22,worse,31) output(24,worse,6) output(24,worse,17) output(24,worse,76) output(22,eq,21) output(8,eq,76) output(24,eq,12)
Optimization: 14 7
Answer: 14
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,5),1,for(atom(hasPrice(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasStyle(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasPrice(1))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(8,better,17) output(12,better,17) output(12,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(17,worse,76) output(22,worse,31) output(22,worse,21) output(31,worse,21) output(22,eq,60) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(6,eq,12)
Optimization: 13 11
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasStyle(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasPrice(1))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(8,better,17) output(12,better,17) output(12,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(17,worse,76) output(22,worse,31) output(22,eq,60) output(22,eq,21) output(60,eq,21) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(6,eq,12)
Optimization: 12 13
Answer: 16
preference(1,(1,2),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasStyle(0))),7) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,17) output(12,better,17) output(21,better,8) output(21,better,24) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,17) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(8,worse,6) output(17,worse,76) output(24,worse,6) output(31,eq,60) output(21,eq,6) output(8,eq,24) output(8,eq,12) output(8,eq,76) output(24,eq,12) output(24,eq,76) output(12,eq,76)
Optimization: 11 9
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasStyle(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasPrice(1))),8) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasStyle(1))),6) preference(1,(1,10),1,for(atom(hasOiliness(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(8,better,6) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(6,worse,12) output(6,worse,17) output(6,worse,76) output(8,worse,24) output(8,worse,12) output(8,worse,17) output(22,worse,31) output(8,eq,76) output(24,eq,12)
Optimization: 9 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasOiliness(1))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(8,better,6) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(6,worse,12) output(6,worse,17) output(6,worse,76) output(8,worse,24) output(8,worse,12) output(8,worse,17) output(8,eq,76) output(24,eq,12)
Optimization: 8 13
Progression : [5;8] (Error: 0.6)
Progression : [6;8] (Error: 0.333333)
Progression : [7;8] (Error: 0.142857)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,13),1,for(atom(hasOiliness(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),7) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(6,worse,12) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,17) output(8,eq,76) output(24,eq,12)
Optimization: 7 12
Progression : 7 [ 1;12] (Error: 11)
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasPrice(0))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,13),1,for(atom(hasOiliness(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),7) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(6,worse,12) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,17) output(8,eq,76) output(24,eq,12)
Optimization: 7 11
Progression : 7 [ 2;11] (Error: 4.5)
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,13),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,12) output(8,better,17) output(12,better,17) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,17) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(8,worse,6) output(12,worse,76) output(17,worse,76) output(24,worse,6) output(24,worse,76) output(8,eq,76) output(24,eq,12)
Optimization: 7 10
Answer: 22
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(8,better,17) output(12,better,17) output(12,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(6,worse,12) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(17,worse,76) output(8,eq,76) output(24,eq,12)
Optimization: 7 8
Progression : 7 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.047 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 7 8
Bounds       : 7 [3;8]
Calls        : 1
Time         : 296.424s (Solving: 294.83s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.658s
Threads      : 4        (Winner: 4)

Choices      : 6760731  (Domain: 737732)
Conflicts    : 6207846  (Analyzed: 6207838)
Restarts     : 5575     (Average: 1113.51 Last: 343422)
Model-Level  : 50.3    
Problems     : 15       (Average Length: 0.27 Splits: 0)
Lemmas       : 6369229  (Deleted: 6030345)
  Binary     : 219      (Ratio:   0.00%)
  Ternary    : 5935     (Ratio:   0.09%)
  Conflict   : 6207838  (Average Length:  190.0 Ratio:  97.47%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 161391   (Average Length:  127.0 Ratio:   2.53%) 
  Distributed: 53873    (Ratio:   0.87% Average LBD: 3.73) 
  Integrated : 161619   (Ratio: 300.00% Unit: 254 Average Jumps: 5.02)
Backjumps    : 6207838  (Average:  1.08 Max:  39 Sum: 6692076)
  Executed   : 6207830  (Average:  1.08 Max:  39 Sum: 6692043 Ratio: 100.00%)
  Bounded    : 8        (Average:  4.12 Max:  19 Sum:     33 Ratio:   0.00%)

Rules        : 174776  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8137    
  Sum        : 66      
  Count      : 14      
Equivalences : 8195     (Atom=Atom: 514 Body=Body: 251 Other: 7430)
Tight        : Yes
Variables    : 6942     (Eliminated:    0 Frozen: 4282)
Constraints  : 177334   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasStyle(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(4)) 
}.
