asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(0,eq,22) output(0,eq,5) output(0,eq,25) output(0,eq,19) output(0,eq,8) output(0,eq,6) output(0,eq,44) output(0,eq,69) output(0,eq,49) output(22,eq,5) output(22,eq,25) output(22,eq,19) output(22,eq,8) output(22,eq,6) output(22,eq,44) output(22,eq,69) output(22,eq,49) output(5,eq,25) output(5,eq,19) output(5,eq,8) output(5,eq,6) output(5,eq,44) output(5,eq,69) output(5,eq,49) output(25,eq,19) output(25,eq,8) output(25,eq,6) output(25,eq,44) output(25,eq,69) output(25,eq,49) output(19,eq,8) output(19,eq,6) output(19,eq,44) output(19,eq,69) output(19,eq,49) output(8,eq,6) output(8,eq,44) output(8,eq,69) output(8,eq,49) output(6,eq,44) output(6,eq,69) output(6,eq,49) output(44,eq,69) output(44,eq,49) output(69,eq,49)
Optimization: 45 0
Answer: 2
preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),2) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(6,better,44) output(6,better,69) output(8,better,44) output(8,better,69) output(19,better,44) output(19,better,69) output(22,better,5) output(22,better,44) output(22,better,69) output(25,better,44) output(25,better,69) output(0,worse,22) output(0,worse,25) output(0,worse,19) output(0,worse,8) output(0,worse,6) output(0,worse,49) output(5,worse,25) output(5,worse,19) output(5,worse,8) output(5,worse,6) output(5,worse,49) output(44,worse,49) output(69,worse,49) output(0,eq,5) output(0,eq,44) output(0,eq,69) output(22,eq,25) output(22,eq,19) output(22,eq,8) output(22,eq,6) output(22,eq,49) output(5,eq,44) output(5,eq,69) output(25,eq,19) output(25,eq,8) output(25,eq,6) output(25,eq,49) output(19,eq,8) output(19,eq,6) output(19,eq,49) output(8,eq,6) output(8,eq,49) output(6,eq,49) output(44,eq,69)
Optimization: 34 6
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),1) preference(1,less(weight)) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(5,better,19) output(5,better,8) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(25,better,19) output(25,better,8) output(5,worse,6) output(5,worse,44) output(5,worse,69) output(5,worse,49) output(8,worse,6) output(8,worse,44) output(8,worse,69) output(8,worse,49) output(19,worse,6) output(19,worse,44) output(19,worse,69) output(19,worse,49) output(25,worse,6) output(25,worse,44) output(25,worse,69) output(25,worse,49) output(0,eq,22) output(0,eq,6) output(0,eq,44) output(0,eq,69) output(0,eq,49) output(22,eq,6) output(22,eq,44) output(22,eq,69) output(22,eq,49) output(5,eq,25) output(19,eq,8) output(6,eq,44) output(6,eq,69) output(6,eq,49) output(44,eq,69) output(44,eq,49) output(69,eq,49)
Optimization: 33 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(0,better,19) output(0,better,8) output(0,better,69) output(5,better,19) output(5,better,8) output(5,better,69) output(6,better,69) output(22,better,19) output(22,better,8) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,69) output(44,better,69) output(8,worse,6) output(8,worse,44) output(8,worse,49) output(19,worse,6) output(19,worse,44) output(19,worse,49) output(69,worse,49) output(0,eq,22) output(0,eq,5) output(0,eq,25) output(0,eq,6) output(0,eq,44) output(0,eq,49) output(22,eq,5) output(22,eq,25) output(22,eq,6) output(22,eq,44) output(22,eq,49) output(5,eq,25) output(5,eq,6) output(5,eq,44) output(5,eq,49) output(25,eq,6) output(25,eq,44) output(25,eq,49) output(19,eq,8) output(19,eq,69) output(8,eq,69) output(6,eq,44) output(6,eq,49) output(44,eq,49)
Optimization: 31 14
Answer: 5
preference(1,(1,11),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(6,better,44) output(6,better,69) output(8,better,44) output(8,better,69) output(19,better,44) output(19,better,69) output(22,better,5) output(22,better,19) output(22,better,8) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,44) output(25,better,69) output(0,worse,22) output(0,worse,25) output(0,worse,19) output(0,worse,8) output(0,worse,6) output(0,worse,49) output(5,worse,25) output(5,worse,19) output(5,worse,8) output(5,worse,6) output(5,worse,49) output(8,worse,6) output(8,worse,49) output(19,worse,6) output(19,worse,49) output(44,worse,49) output(69,worse,49) output(0,eq,5) output(0,eq,44) output(0,eq,69) output(22,eq,25) output(22,eq,6) output(22,eq,49) output(5,eq,44) output(5,eq,69) output(25,eq,6) output(25,eq,49) output(19,eq,8) output(6,eq,49) output(44,eq,69)
Optimization: 30 2
Answer: 6
preference(1,(1,11),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),2) preference(1,less(weight)) output(0,better,44) output(5,better,44) output(6,better,44) output(6,better,69) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(0,worse,22) output(0,worse,25) output(0,worse,19) output(0,worse,8) output(0,worse,6) output(0,worse,49) output(5,worse,25) output(5,worse,19) output(5,worse,8) output(5,worse,6) output(5,worse,49) output(44,worse,69) output(44,worse,49) output(69,worse,49) output(0,eq,5) output(0,eq,69) output(22,eq,25) output(22,eq,19) output(22,eq,8) output(5,eq,69) output(25,eq,19) output(25,eq,8) output(19,eq,8) output(6,eq,49)
Optimization: 24 2
Answer: 7
preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49) output(19,eq,8)
Optimization: 1 14
Progression : 1 [ 1;14] (Error: 13)
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,2),1,for(atom(hasStyle(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49) output(19,eq,8)
Optimization: 1 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasOiliness(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,12),1,for(atom(hasStyle(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49) output(19,eq,8)
Optimization: 1 12
Progression : 1 [ 2;12] (Error: 5)
Answer: 10
preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),5) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49) output(19,eq,8)
Optimization: 1 11
Answer: 11
preference(1,(1,3),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,12),1,for(atom(hasOiliness(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49) output(19,eq,8)
Optimization: 1 9
Progression : 1 [3;9] (Error: 2)
Progression : 1 [4;9] (Error: 1.25)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.063 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 1 9
Calls        : 1
Time         : 296.474s (Solving: 294.88s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.790s
Threads      : 4        (Winner: 4)

Choices      : 7886288  (Domain: 806867)
Conflicts    : 6568598  (Analyzed: 6568594)
Restarts     : 5802     (Average: 1132.13 Last: 569965)
Model-Level  : 42.9    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6652500  (Deleted: 6404795)
  Binary     : 472      (Ratio:   0.01%)
  Ternary    : 7289     (Ratio:   0.11%)
  Conflict   : 6568594  (Average Length:  202.1 Ratio:  98.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 83906    (Average Length:   40.7 Ratio:   1.26%) 
  Distributed: 28097    (Ratio:   0.43% Average LBD: 3.68) 
  Integrated : 84291    (Ratio: 300.00% Unit: 763 Average Jumps: 13.73)
Backjumps    : 6568594  (Average:  1.16 Max: 641 Sum: 7630445)
  Executed   : 6568591  (Average:  1.16 Max: 641 Sum: 7630419 Ratio: 100.00%)
  Bounded    : 3        (Average:  8.67 Max:  24 Sum:     26 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8144    
  Sum        : 73      
  Count      : 14      
Equivalences : 8213     (Atom=Atom: 501 Body=Body: 235 Other: 7477)
Tight        : Yes
Variables    : 6961     (Eliminated:    0 Frozen: 4301)
Constraints  : 177922   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) 
}.
