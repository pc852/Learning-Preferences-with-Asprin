asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,2) output(19,eq,11) output(19,eq,0) output(19,eq,6) output(19,eq,18) output(19,eq,16) output(19,eq,60) output(19,eq,35) output(19,eq,74) output(2,eq,11) output(2,eq,0) output(2,eq,6) output(2,eq,18) output(2,eq,16) output(2,eq,60) output(2,eq,35) output(2,eq,74) output(11,eq,0) output(11,eq,6) output(11,eq,18) output(11,eq,16) output(11,eq,60) output(11,eq,35) output(11,eq,74) output(0,eq,6) output(0,eq,18) output(0,eq,16) output(0,eq,60) output(0,eq,35) output(0,eq,74) output(6,eq,18) output(6,eq,16) output(6,eq,60) output(6,eq,35) output(6,eq,74) output(18,eq,16) output(18,eq,60) output(18,eq,35) output(18,eq,74) output(16,eq,60) output(16,eq,35) output(16,eq,74) output(60,eq,35) output(60,eq,74) output(35,eq,74)
Optimization: 45 0
Answer: 2
preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(60,better,35) output(0,better,35) output(2,better,35) output(6,better,35) output(11,better,35) output(16,better,35) output(18,better,35) output(19,better,35) output(35,worse,74) output(19,eq,2) output(19,eq,11) output(19,eq,0) output(19,eq,6) output(19,eq,18) output(19,eq,16) output(19,eq,60) output(19,eq,74) output(2,eq,11) output(2,eq,0) output(2,eq,6) output(2,eq,18) output(2,eq,16) output(2,eq,60) output(2,eq,74) output(11,eq,0) output(11,eq,6) output(11,eq,18) output(11,eq,16) output(11,eq,60) output(11,eq,74) output(0,eq,6) output(0,eq,18) output(0,eq,16) output(0,eq,60) output(0,eq,74) output(6,eq,18) output(6,eq,16) output(6,eq,60) output(6,eq,74) output(18,eq,16) output(18,eq,60) output(18,eq,74) output(16,eq,60) output(16,eq,74) output(60,eq,74)
Optimization: 37 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),4) preference(1,less(weight)) output(60,better,35) output(2,better,11) output(2,better,0) output(2,better,18) output(6,better,18) output(11,better,0) output(11,better,18) output(19,better,11) output(19,better,0) output(19,better,18) output(0,worse,6) output(0,worse,16) output(0,worse,60) output(0,worse,35) output(0,worse,74) output(2,worse,6) output(2,worse,16) output(2,worse,60) output(2,worse,35) output(2,worse,74) output(6,worse,60) output(6,worse,74) output(11,worse,6) output(11,worse,16) output(11,worse,60) output(11,worse,35) output(11,worse,74) output(16,worse,60) output(16,worse,74) output(18,worse,16) output(18,worse,60) output(18,worse,35) output(18,worse,74) output(19,worse,6) output(19,worse,16) output(19,worse,60) output(19,worse,35) output(19,worse,74) output(35,worse,74) output(19,eq,2) output(0,eq,18) output(6,eq,16) output(6,eq,35) output(16,eq,35) output(60,eq,74)
Optimization: 35 14
Progression : [ 2;35] (Error: 16.5)
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,7),1,for(atom(hasStyle(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),4) preference(1,less(weight)) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,11) output(19,better,0) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(0,worse,6) output(0,worse,18) output(6,worse,18) output(11,worse,0) output(11,worse,6) output(11,worse,18) output(11,worse,16) output(11,worse,60) output(11,worse,35) output(11,worse,74) output(19,worse,2) output(19,worse,18) output(19,eq,6) output(2,eq,18) output(60,eq,35) output(60,eq,74) output(35,eq,74)
Optimization: 17 11
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,12),1,for(atom(hasStyle(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(0,better,60) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(60,worse,35) output(0,worse,6) output(0,worse,18) output(0,worse,16) output(2,worse,6) output(2,worse,18) output(11,worse,6) output(11,worse,18) output(11,worse,16) output(19,worse,6) output(2,eq,16) output(0,eq,35) output(60,eq,74)
Optimization: 13 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,12),1,for(atom(hasStyle(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(0,better,18) output(0,better,60) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,18) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,18) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,60) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(60,worse,35) output(0,worse,6) output(0,worse,16) output(2,worse,6) output(11,worse,6) output(11,worse,16) output(18,worse,16) output(18,worse,35) output(19,worse,6) output(2,eq,16) output(0,eq,35) output(60,eq,74)
Optimization: 12 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,18) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,18) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(60,worse,35) output(0,worse,6) output(0,worse,16) output(2,worse,6) output(11,worse,6) output(11,worse,16) output(18,worse,16) output(19,worse,6) output(2,eq,16) output(0,eq,18) output(60,eq,74)
Optimization: 11 12
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(60,better,35) output(0,better,18) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,18) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,18) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(0,worse,6) output(0,worse,16) output(2,worse,6) output(11,worse,6) output(11,worse,16) output(18,worse,16) output(19,worse,6) output(35,worse,74) output(2,eq,16) output(60,eq,74)
Optimization: 10 12
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,7),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(0,worse,6) output(19,worse,2) output(19,eq,11) output(16,eq,60) output(16,eq,35) output(16,eq,74) output(60,eq,35) output(60,eq,74) output(35,eq,74)
Optimization: 9 11
Answer: 10
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasStyle(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(0,worse,6) output(19,eq,2) output(0,eq,18) output(60,eq,35) output(60,eq,74) output(35,eq,74)
Optimization: 6 12
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(0,worse,18) output(6,worse,18) output(35,worse,74) output(19,eq,2) output(60,eq,74)
Optimization: 5 11
Answer: 12
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(19,eq,2) output(6,eq,18) output(60,eq,74)
Optimization: 4 12
Answer: 13
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,5),1,for(atom(hasOiliness(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasStyle(0))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(19,eq,2) output(60,eq,74)
Optimization: 3 12
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasStyle(0))),7) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 14
Progression : 2 [ 1;14] (Error: 13)
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasStyle(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasStyle(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 10
Answer: 18
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 9
Answer: 19
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,13),1,for(atom(hasStyle(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 8
Progression : 2 [2;8] (Error: 3)
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(60,better,35) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,worse,74) output(60,eq,74)
Optimization: 2 7
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),7) preference(1,less(weight)) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(60,worse,35) output(60,eq,74)
Optimization: 2 6
Progression : 2 [3;6] (Error: 1)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.043 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 2 6
Bounds       : 2 [3;6]
Calls        : 1
Time         : 298.317s (Solving: 296.57s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.806s
Threads      : 4        (Winner: 4)

Choices      : 10656986 (Domain: 583225)
Conflicts    : 5912506  (Analyzed: 5912502)
Restarts     : 5224     (Average: 1131.80 Last: 414925)
Model-Level  : 145.8   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 5954801  (Deleted: 5686017)
  Binary     : 548      (Ratio:   0.01%)
  Ternary    : 9132     (Ratio:   0.15%)
  Conflict   : 5912502  (Average Length:  230.9 Ratio:  99.29%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 42299    (Average Length:   27.2 Ratio:   0.71%) 
  Distributed: 14212    (Ratio:   0.24% Average LBD: 3.57) 
  Integrated : 42636    (Ratio: 300.00% Unit: 99 Average Jumps: 26.97)
Backjumps    : 5912502  (Average:  1.66 Max: 812 Sum: 9787855)
  Executed   : 5912501  (Average:  1.66 Max: 812 Sum: 9787819 Ratio: 100.00%)
  Bounded    : 1        (Average: 36.00 Max:  36 Sum:     36 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8146    
  Sum        : 75      
  Count      : 14      
Equivalences : 8216     (Atom=Atom: 496 Body=Body: 230 Other: 7490)
Tight        : Yes
Variables    : 6964     (Eliminated:    0 Frozen: 4304)
Constraints  : 177927   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(8)) 
}.
