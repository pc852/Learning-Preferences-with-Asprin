asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(11,eq,20) output(11,eq,17) output(11,eq,27) output(11,eq,57) output(11,eq,1) output(11,eq,15) output(11,eq,43) output(11,eq,16) output(11,eq,93) output(20,eq,17) output(20,eq,27) output(20,eq,57) output(20,eq,1) output(20,eq,15) output(20,eq,43) output(20,eq,16) output(20,eq,93) output(17,eq,27) output(17,eq,57) output(17,eq,1) output(17,eq,15) output(17,eq,43) output(17,eq,16) output(17,eq,93) output(27,eq,57) output(27,eq,1) output(27,eq,15) output(27,eq,43) output(27,eq,16) output(27,eq,93) output(57,eq,1) output(57,eq,15) output(57,eq,43) output(57,eq,16) output(57,eq,93) output(1,eq,15) output(1,eq,43) output(1,eq,16) output(1,eq,93) output(15,eq,43) output(15,eq,16) output(15,eq,93) output(43,eq,16) output(43,eq,93) output(16,eq,93)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,14),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(1,better,43) output(11,better,43) output(15,better,43) output(17,better,43) output(20,better,43) output(27,better,43) output(57,better,43) output(43,worse,16) output(43,worse,93) output(11,eq,20) output(11,eq,17) output(11,eq,27) output(11,eq,57) output(11,eq,1) output(11,eq,15) output(11,eq,16) output(11,eq,93) output(20,eq,17) output(20,eq,27) output(20,eq,57) output(20,eq,1) output(20,eq,15) output(20,eq,16) output(20,eq,93) output(17,eq,27) output(17,eq,57) output(17,eq,1) output(17,eq,15) output(17,eq,16) output(17,eq,93) output(27,eq,57) output(27,eq,1) output(27,eq,15) output(27,eq,16) output(27,eq,93) output(57,eq,1) output(57,eq,15) output(57,eq,16) output(57,eq,93) output(1,eq,15) output(1,eq,16) output(1,eq,93) output(15,eq,16) output(15,eq,93) output(16,eq,93)
Optimization: 38 7
Answer: 3
preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(11,better,17) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,93) output(16,better,93) output(20,better,17) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,93) output(1,worse,16) output(15,worse,16) output(17,worse,27) output(17,worse,16) output(43,worse,16) output(57,worse,16) output(11,eq,20) output(11,eq,27) output(11,eq,16) output(20,eq,27) output(20,eq,16) output(17,eq,57) output(17,eq,1) output(17,eq,15) output(17,eq,43) output(17,eq,93) output(27,eq,16) output(57,eq,1) output(57,eq,15) output(57,eq,43) output(57,eq,93) output(1,eq,15) output(1,eq,43) output(1,eq,93) output(15,eq,43) output(15,eq,93) output(43,eq,93)
Optimization: 27 1
Answer: 4
preference(1,(1,3),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20) output(11,eq,17) output(11,eq,27) output(11,eq,57) output(20,eq,17) output(20,eq,27) output(20,eq,57) output(17,eq,27) output(17,eq,57) output(27,eq,57) output(1,eq,15) output(1,eq,43) output(1,eq,16) output(1,eq,93) output(15,eq,43) output(15,eq,16) output(15,eq,93) output(43,eq,16) output(43,eq,93) output(16,eq,93)
Optimization: 20 5
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasStyle(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(1,better,43) output(1,better,16) output(11,better,17) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(17,better,57) output(17,better,43) output(17,better,16) output(20,better,17) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(16,worse,93) output(17,worse,27) output(43,worse,93) output(57,worse,1) output(57,worse,15) output(57,worse,93) output(11,eq,20) output(11,eq,27) output(20,eq,27) output(17,eq,1) output(17,eq,15) output(17,eq,93) output(57,eq,43) output(57,eq,16) output(1,eq,15) output(1,eq,93) output(15,eq,93) output(43,eq,16)
Optimization: 18 14
Answer: 6
preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,93) output(16,better,93) output(17,better,27) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,93) output(1,worse,16) output(15,worse,16) output(17,worse,16) output(27,worse,57) output(27,worse,16) output(43,worse,16) output(57,worse,16) output(11,eq,20) output(11,eq,16) output(20,eq,16) output(17,eq,57) output(1,eq,15) output(1,eq,43) output(1,eq,93) output(15,eq,43) output(15,eq,93) output(43,eq,93)
Optimization: 17 4
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(1,better,16) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,16) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,worse,17) output(16,worse,93) output(20,worse,17) output(11,eq,20) output(11,eq,27) output(11,eq,57) output(20,eq,27) output(20,eq,57) output(27,eq,57) output(1,eq,15) output(1,eq,43) output(1,eq,93) output(15,eq,43) output(15,eq,93) output(43,eq,93)
Optimization: 15 8
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(11,better,17) output(11,better,27) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(16,better,93) output(17,better,27) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(1,worse,43) output(1,worse,16) output(1,worse,93) output(15,worse,43) output(15,worse,16) output(15,worse,93) output(17,worse,57) output(27,worse,57) output(27,worse,16) output(43,worse,16) output(11,eq,20) output(11,eq,57) output(20,eq,57) output(1,eq,15)
Optimization: 14 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(16,better,93) output(17,better,27) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(1,worse,16) output(15,worse,43) output(15,worse,16) output(15,worse,93) output(17,worse,57) output(17,worse,16) output(27,worse,57) output(27,worse,16) output(43,worse,16) output(11,eq,20) output(11,eq,57) output(20,eq,57) output(27,eq,1)
Optimization: 13 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(16,better,93) output(17,better,27) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(1,worse,16) output(15,worse,43) output(15,worse,16) output(15,worse,93) output(17,worse,57) output(27,worse,57) output(27,worse,16) output(43,worse,16) output(11,eq,20) output(11,eq,57) output(20,eq,57) output(27,eq,1)
Optimization: 12 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(1,worse,16) output(15,worse,16) output(17,worse,57) output(27,worse,57) output(27,worse,16) output(43,worse,16) output(11,eq,20) output(11,eq,57) output(20,eq,57) output(27,eq,1) output(15,eq,43)
Optimization: 11 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(17,worse,57) output(27,worse,57) output(11,eq,20) output(11,eq,57) output(20,eq,57) output(27,eq,1) output(27,eq,15) output(1,eq,15) output(43,eq,16)
Optimization: 9 13
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),8) preference(1,less(weight)) output(1,better,43) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,93) output(1,worse,16) output(15,worse,16) output(27,worse,16) output(43,worse,16) output(57,worse,16) output(11,eq,20) output(27,eq,57) output(1,eq,15)
Optimization: 8 7
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),8) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,93) output(1,worse,16) output(15,worse,16) output(27,worse,16) output(43,worse,16) output(57,worse,16) output(11,eq,20) output(27,eq,57)
Optimization: 7 9
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,14),1,for(atom(hasOiliness(0))),8) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,93) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(1,worse,16) output(15,worse,16) output(27,worse,57) output(27,worse,16) output(43,worse,16) output(11,eq,20)
Optimization: 6 8
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,5),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(17,worse,27) output(11,eq,20) output(17,eq,57) output(17,eq,1) output(57,eq,1)
Optimization: 5 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(17,worse,27) output(11,eq,20) output(17,eq,57) output(1,eq,15)
Optimization: 4 12
Answer: 18
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasPrice(0))),7) preference(1,(1,12),1,for(atom(hasPrice(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),4) preference(1,less(weight)) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20) output(17,eq,27) output(1,eq,15)
Optimization: 3 13
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20) output(27,eq,57)
Optimization: 2 12
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20)
Optimization: 1 12
Progression : 1 [ 1;12] (Error: 11)
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,8),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20)
Optimization: 1 10
Progression : 1 [ 2;10] (Error: 4)
Answer: 22
preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),3) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20)
Optimization: 1 9
Answer: 23
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,9),1,for(atom(hasPrice(1))),2) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20)
Optimization: 1 8
Answer: 24
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),2) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(1,better,15) output(1,better,43) output(1,better,16) output(1,better,93) output(11,better,17) output(11,better,27) output(11,better,57) output(11,better,1) output(11,better,15) output(11,better,43) output(11,better,16) output(11,better,93) output(15,better,43) output(15,better,16) output(15,better,93) output(16,better,93) output(17,better,27) output(17,better,57) output(17,better,1) output(17,better,15) output(17,better,43) output(17,better,16) output(17,better,93) output(20,better,17) output(20,better,27) output(20,better,57) output(20,better,1) output(20,better,15) output(20,better,43) output(20,better,16) output(20,better,93) output(27,better,57) output(27,better,1) output(27,better,15) output(27,better,43) output(27,better,16) output(27,better,93) output(43,better,16) output(43,better,93) output(57,better,1) output(57,better,15) output(57,better,43) output(57,better,16) output(57,better,93) output(11,eq,20)
Optimization: 1 7
Progression : 1 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.058 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 1 7
Calls        : 1
Time         : 296.439s (Solving: 294.86s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.721s
Threads      : 4        (Winner: 4)

Choices      : 7172732  (Domain: 701545)
Conflicts    : 6035815  (Analyzed: 6035812)
Restarts     : 5504     (Average: 1096.62 Last: 265919)
Model-Level  : 36.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6101260  (Deleted: 5860082)
  Binary     : 480      (Ratio:   0.01%)
  Ternary    : 5777     (Ratio:   0.09%)
  Conflict   : 6035812  (Average Length:  201.2 Ratio:  98.93%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 65448    (Average Length:   39.9 Ratio:   1.07%) 
  Distributed: 21845    (Ratio:   0.36% Average LBD: 3.68) 
  Integrated : 65535    (Ratio: 300.00% Unit: 373 Average Jumps: 9.20)
Backjumps    : 6035812  (Average:  1.16 Max: 408 Sum: 6983082)
  Executed   : 6035808  (Average:  1.16 Max: 408 Sum: 6983043 Ratio: 100.00%)
  Bounded    : 4        (Average:  9.75 Max:  35 Sum:     39 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8144    
  Sum        : 73      
  Count      : 14      
Equivalences : 8213     (Atom=Atom: 501 Body=Body: 235 Other: 7477)
Tight        : Yes
Variables    : 6961     (Eliminated:    0 Frozen: 4301)
Constraints  : 177922   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.
