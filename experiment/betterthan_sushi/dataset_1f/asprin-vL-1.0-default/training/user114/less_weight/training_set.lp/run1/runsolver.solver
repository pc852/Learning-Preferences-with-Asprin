asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(11,eq,41) output(11,eq,3) output(11,eq,0) output(11,eq,1) output(11,eq,14) output(11,eq,43) output(11,eq,6) output(11,eq,12) output(11,eq,33) output(41,eq,3) output(41,eq,0) output(41,eq,1) output(41,eq,14) output(41,eq,43) output(41,eq,6) output(41,eq,12) output(41,eq,33) output(3,eq,0) output(3,eq,1) output(3,eq,14) output(3,eq,43) output(3,eq,6) output(3,eq,12) output(3,eq,33) output(0,eq,1) output(0,eq,14) output(0,eq,43) output(0,eq,6) output(0,eq,12) output(0,eq,33) output(1,eq,14) output(1,eq,43) output(1,eq,6) output(1,eq,12) output(1,eq,33) output(14,eq,43) output(14,eq,6) output(14,eq,12) output(14,eq,33) output(43,eq,6) output(43,eq,12) output(43,eq,33) output(6,eq,12) output(6,eq,33) output(12,eq,33)
Optimization: 45 0
Answer: 2
preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(0,better,14) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,12) output(1,better,33) output(3,better,14) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,14) output(11,better,12) output(11,better,33) output(41,better,14) output(41,better,12) output(41,better,33) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(11,eq,41) output(11,eq,3) output(11,eq,0) output(11,eq,1) output(11,eq,43) output(11,eq,6) output(41,eq,3) output(41,eq,0) output(41,eq,1) output(41,eq,43) output(41,eq,6) output(3,eq,0) output(3,eq,1) output(3,eq,43) output(3,eq,6) output(0,eq,1) output(0,eq,43) output(0,eq,6) output(1,eq,43) output(1,eq,6) output(14,eq,12) output(14,eq,33) output(43,eq,6) output(12,eq,33)
Optimization: 26 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(0,better,14) output(0,better,43) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,12) output(1,better,33) output(3,better,43) output(6,better,12) output(6,better,33) output(11,better,3) output(11,better,14) output(11,better,43) output(11,better,12) output(11,better,33) output(14,better,43) output(41,better,3) output(41,better,14) output(41,better,43) output(41,better,12) output(41,better,33) output(3,worse,0) output(3,worse,1) output(3,worse,6) output(14,worse,6) output(43,worse,6) output(43,worse,12) output(43,worse,33) output(11,eq,41) output(11,eq,0) output(11,eq,1) output(11,eq,6) output(41,eq,0) output(41,eq,1) output(41,eq,6) output(3,eq,14) output(3,eq,12) output(3,eq,33) output(0,eq,1) output(0,eq,6) output(1,eq,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 23 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(0,better,14) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,6) output(11,better,3) output(11,better,14) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,6) output(41,better,3) output(41,better,14) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(3,worse,0) output(3,worse,1) output(3,worse,43) output(6,worse,12) output(6,worse,33) output(14,worse,43) output(11,eq,41) output(11,eq,0) output(11,eq,1) output(11,eq,43) output(41,eq,0) output(41,eq,1) output(41,eq,43) output(3,eq,14) output(3,eq,12) output(3,eq,33) output(0,eq,1) output(0,eq,43) output(1,eq,43) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 22 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,43) output(3,better,6) output(11,better,3) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,43) output(14,better,6) output(41,better,3) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(3,worse,0) output(3,worse,1) output(6,worse,12) output(6,worse,33) output(43,worse,12) output(43,worse,33) output(11,eq,41) output(11,eq,0) output(11,eq,1) output(41,eq,0) output(41,eq,1) output(3,eq,14) output(3,eq,12) output(3,eq,33) output(0,eq,1) output(14,eq,12) output(14,eq,33) output(43,eq,6) output(12,eq,33)
Optimization: 19 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),2) preference(1,less(weight)) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,6) output(11,better,3) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,6) output(41,better,3) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(3,worse,0) output(3,worse,1) output(3,worse,43) output(6,worse,12) output(6,worse,33) output(14,worse,43) output(11,eq,41) output(11,eq,0) output(11,eq,1) output(41,eq,0) output(41,eq,1) output(3,eq,14) output(3,eq,12) output(3,eq,33) output(0,eq,1) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 18 14
Progression : [ 4;18] (Error: 3.5)
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,43) output(3,better,6) output(11,better,3) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,43) output(14,better,6) output(41,better,3) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(3,worse,0) output(3,worse,1) output(6,worse,12) output(6,worse,33) output(43,worse,12) output(43,worse,33) output(11,eq,41) output(11,eq,0) output(41,eq,0) output(3,eq,14) output(3,eq,12) output(3,eq,33) output(14,eq,12) output(14,eq,33) output(43,eq,6) output(12,eq,33)
Optimization: 16 13
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,6) output(11,better,3) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,6) output(41,better,3) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(3,worse,0) output(3,worse,1) output(3,worse,43) output(6,worse,12) output(6,worse,33) output(14,worse,43) output(11,eq,41) output(11,eq,0) output(41,eq,0) output(3,eq,14) output(3,eq,12) output(3,eq,33) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 15 13
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,43) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(1,worse,6) output(14,worse,6) output(43,worse,6) output(43,worse,12) output(43,worse,33) output(11,eq,41) output(11,eq,3) output(11,eq,0) output(41,eq,3) output(41,eq,0) output(3,eq,0) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 14 12
Answer: 10
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasStyle(1))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasOiliness(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(11,worse,3) output(11,worse,0) output(14,worse,43) output(14,worse,6) output(41,worse,3) output(41,worse,0) output(11,eq,41) output(3,eq,0) output(1,eq,43) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 12 9
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,3) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,43) output(41,better,3) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(3,worse,0) output(14,worse,6) output(43,worse,6) output(43,worse,12) output(43,worse,33) output(11,eq,41) output(11,eq,0) output(41,eq,0) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 11 13
Answer: 12
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),3) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,3) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(3,worse,0) output(14,worse,43) output(14,worse,6) output(11,eq,41) output(11,eq,0) output(41,eq,0) output(1,eq,43) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 10 14
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(43,worse,6) output(41,eq,3) output(41,eq,0) output(3,eq,0) output(1,eq,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 10 8
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(14,better,6) output(41,better,3) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(3,worse,0) output(6,worse,12) output(6,worse,33) output(14,worse,43) output(41,worse,0) output(1,eq,43) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 9 12
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,8),1,for(atom(hasStyle(1))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,12),1,for(atom(hasPrice(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(43,worse,6) output(3,eq,0) output(1,eq,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 8 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasStyle(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,13),1,for(atom(hasOiliness(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),2) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(11,worse,41) output(14,worse,43) output(14,worse,6) output(3,eq,0) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 7 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),8) preference(1,less(weight)) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(0,eq,1) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 6 11
Progression : [5;6] (Error: 0.2)
Answer: 18
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),5) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 14
Progression : 5 [ 1;14] (Error: 13)
Progression : 5 [ 2;14] (Error: 6)
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,8),1,for(atom(hasStyle(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,11),1,for(atom(hasPrice(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 12
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,3),1,for(atom(hasPrice(1))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 11
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasPrice(0))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 10
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasPrice(0))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 9
Progression : 5 [3;9] (Error: 2)
Answer: 23
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,12),1,for(atom(hasPrice(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 8
Answer: 24
preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,9),1,for(atom(hasPrice(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 7
Answer: 25
preference(1,(1,3),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,10),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(0,better,1) output(0,better,14) output(0,better,43) output(0,better,6) output(0,better,12) output(0,better,33) output(1,better,14) output(1,better,43) output(1,better,6) output(1,better,12) output(1,better,33) output(3,better,0) output(3,better,1) output(3,better,14) output(3,better,43) output(3,better,6) output(3,better,12) output(3,better,33) output(6,better,12) output(6,better,33) output(11,better,41) output(11,better,3) output(11,better,0) output(11,better,1) output(11,better,14) output(11,better,43) output(11,better,6) output(11,better,12) output(11,better,33) output(41,better,3) output(41,better,0) output(41,better,1) output(41,better,14) output(41,better,43) output(41,better,6) output(41,better,12) output(41,better,33) output(43,better,6) output(43,better,12) output(43,better,33) output(14,worse,43) output(14,worse,6) output(14,eq,12) output(14,eq,33) output(12,eq,33)
Optimization: 5 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.031 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 5 6
Bounds       : 5 [3;6]
Calls        : 1
Time         : 296.338s (Solving: 294.74s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.098s
Threads      : 4        (Winner: 4)

Choices      : 9055958  (Domain: 637135)
Conflicts    : 6049604  (Analyzed: 6049599)
Restarts     : 5671     (Average: 1066.76 Last: 389648)
Model-Level  : 60.7    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 6184835  (Deleted: 5930953)
  Binary     : 608      (Ratio:   0.01%)
  Ternary    : 3671     (Ratio:   0.06%)
  Conflict   : 6049598  (Average Length:  234.9 Ratio:  97.81%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 135237   (Average Length:  225.1 Ratio:   2.19%) 
  Distributed: 45238    (Ratio:   0.75% Average LBD: 3.76) 
  Integrated : 135714   (Ratio: 300.00% Unit: 147 Average Jumps: 14.60)
Backjumps    : 6049599  (Average:  1.42 Max: 586 Sum: 8598264)
  Executed   : 6049597  (Average:  1.42 Max: 586 Sum: 8598241 Ratio: 100.00%)
  Bounded    : 2        (Average: 11.50 Max:  22 Sum:     23 Ratio:   0.00%)

Rules        : 174773  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8132    
  Sum        : 61      
  Count      : 14      
Equivalences : 8177     (Atom=Atom: 521 Body=Body: 261 Other: 7395)
Tight        : Yes
Variables    : 6935     (Eliminated:    0 Frozen: 4275)
Constraints  : 177324   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(0)) 
}.
