asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(48,eq,60) preference(1,poset) output(48,eq,21) output(48,eq,14) output(48,eq,39) output(48,eq,15) output(48,eq,46) output(48,eq,23) output(48,eq,50) output(21,eq,14) output(21,eq,39) output(21,eq,15) output(21,eq,46) output(21,eq,23) output(21,eq,50) output(21,eq,60) output(14,eq,39) output(14,eq,15) output(14,eq,46) output(14,eq,23) output(14,eq,50) output(14,eq,60) output(39,eq,15) output(39,eq,46) output(39,eq,23) output(39,eq,50) output(39,eq,60) output(15,eq,46) output(15,eq,23) output(15,eq,50) output(15,eq,60) output(46,eq,23) output(46,eq,50) output(46,eq,60) output(23,eq,50) output(23,eq,60) output(50,eq,60)
Optimization: 36 0
Answer: 2
output(48,eq,60) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(21,better,50) output(21,better,60) output(15,better,50) output(15,better,60) output(23,better,50) output(23,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(15,better,46) output(21,better,39) output(21,better,46) output(48,worse,21) output(48,worse,15) output(48,worse,23) output(48,worse,14) output(21,worse,14) output(39,worse,15) output(46,worse,23) output(39,worse,23) output(48,eq,39) output(48,eq,46) output(48,eq,50) output(21,eq,15) output(21,eq,23) output(39,eq,46) output(39,eq,50) output(39,eq,60) output(15,eq,23) output(46,eq,50) output(46,eq,60) output(50,eq,60)
Optimization: 21 1
Answer: 3
output(48,eq,60) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(21,better,14) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,50) output(23,better,60) output(14,better,39) output(14,better,46) output(14,better,50) output(14,better,60) output(15,better,46) output(21,better,39) output(21,better,46) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(14,worse,15) output(14,worse,23) output(48,worse,14) output(39,worse,15) output(46,worse,23) output(39,worse,23) output(48,eq,50) output(21,eq,15) output(21,eq,23) output(39,eq,46) output(15,eq,23) output(50,eq,60)
Optimization: 18 1
Answer: 4
output(48,eq,60) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(21,better,14) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,50) output(23,better,60) output(14,better,15) output(14,better,23) output(14,better,50) output(14,better,60) output(21,better,15) output(39,better,15) output(21,better,23) output(46,better,23) output(39,better,23) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(14,worse,39) output(14,worse,46) output(48,worse,14) output(15,worse,46) output(48,eq,50) output(21,eq,39) output(21,eq,46) output(39,eq,46) output(15,eq,23) output(50,eq,60)
Optimization: 16 1
Answer: 5
output(48,eq,60) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(21,better,14) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,50) output(23,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(21,better,15) output(21,better,39) output(21,better,23) output(21,better,46) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,14) output(48,eq,50) output(39,eq,46) output(15,eq,23) output(50,eq,60) output(39,unc,15) output(39,unc,23) output(15,unc,46) output(46,unc,23)
Optimization: 15 2
Answer: 6
output(48,eq,60) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,50) output(23,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(50,better,60) output(15,better,23) output(21,better,15) output(21,better,39) output(21,better,23) output(21,better,46) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,14) output(48,worse,50) output(21,eq,14) output(39,eq,46) output(39,unc,15) output(39,unc,23) output(15,unc,46) output(46,unc,23)
Optimization: 14 2
Answer: 7
output(48,eq,60) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(21,better,14) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,60) output(14,better,39) output(14,better,15) output(14,better,23) output(14,better,50) output(14,better,60) output(50,better,60) output(15,better,23) output(21,better,15) output(39,better,15) output(21,better,39) output(21,better,23) output(46,better,23) output(39,better,23) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(14,worse,46) output(48,worse,14) output(48,worse,50) output(15,worse,46) output(39,worse,46) output(21,eq,46) output(23,unc,50)
Optimization: 13 2
Answer: 8
output(48,eq,60) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(21,better,14) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,50) output(23,better,60) output(14,better,39) output(14,better,15) output(14,better,23) output(14,better,50) output(14,better,60) output(50,better,60) output(15,better,23) output(21,better,15) output(39,better,15) output(21,better,39) output(21,better,23) output(46,better,23) output(39,better,23) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(14,worse,46) output(48,worse,14) output(48,worse,50) output(15,worse,46) output(39,worse,46) output(21,eq,46)
Optimization: 12 4
Answer: 9
output(48,eq,60) preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasOftenSold(0))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasOftenSold(1))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasPrice(0))),()) preference(1,poset) output(21,better,50) output(21,better,60) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(23,better,50) output(23,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(48,better,50) output(21,better,15) output(39,better,15) output(39,better,46) output(21,better,39) output(21,better,23) output(46,better,23) output(39,better,23) output(21,better,46) output(48,worse,21) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,14) output(21,worse,14) output(50,worse,60) output(15,worse,46) output(15,worse,23)
Optimization: 11 10
Answer: 10
output(48,eq,60) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,(1,9),2,for(atom(hasOftenSold(1))),()) preference(1,poset) output(21,better,14) output(21,better,50) output(39,better,50) output(15,better,50) output(46,better,50) output(23,better,50) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(48,better,21) output(48,better,14) output(48,better,39) output(48,better,15) output(48,better,46) output(48,better,23) output(48,better,50) output(15,better,23) output(21,better,15) output(39,better,15) output(21,better,39) output(21,better,23) output(46,better,23) output(39,better,23) output(21,better,46) output(21,worse,60) output(14,worse,60) output(39,worse,60) output(15,worse,60) output(46,worse,60) output(23,worse,60) output(50,worse,60) output(15,worse,46) output(39,eq,46)
Optimization: 10 5
SATISFIABLE

Models       : 10+
  Optimum    : unknown
Optimization : 10 5
Calls        : 1
Time         : 834.441s (Solving: 830.47s 1st Model: 0.62s Unsat: 0.00s)
CPU Time     : 3323.880s
Threads      : 4        (Winner: 3)

Choices      : 10471242 (Domain: 6692)
Conflicts    : 382393   (Analyzed: 382393)
Restarts     : 477      (Average: 801.66 Last: 11041)
Model-Level  : 166.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 30362395 (Deleted: 30155671)
  Binary     : 5849     (Ratio:   0.02%)
  Ternary    : 79943    (Ratio:   0.26%)
  Conflict   : 382393   (Average Length:  843.5 Ratio:   1.26%) 
  Loop       : 29876380 (Average Length:  139.5 Ratio:  98.40%) 
  Other      : 103622   (Average Length:    3.7 Ratio:   0.34%) 
  Distributed: 34598    (Ratio:   0.11% Average LBD: 2.84) 
  Integrated : 103794   (Ratio: 300.00% Unit: 298 Average Jumps: 1098.16)
Backjumps    : 382393   (Average: 24.63 Max: 98610 Sum: 9416773)
  Executed   : 382363   (Average: 24.63 Max: 98610 Sum: 9416682 Ratio: 100.00%)
  Bounded    : 30       (Average:  3.03 Max:  37 Sum:     91 Ratio:   0.00%)

Rules        : 722806  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 22833   
Bodies       : 510151  
  Count      : 40      
Equivalences : 22580    (Atom=Atom: 3948 Body=Body: 5300 Other: 13332)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490587   (Eliminated:    0 Frozen: 483657)
Constraints  : 2822232  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) 
}.
Time limit reached
