asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(10,eq,6) output(10,eq,27) output(10,eq,18) output(10,eq,7) output(10,eq,19) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(0,eq,6) output(0,eq,27) output(0,eq,18) output(0,eq,7) output(0,eq,19) output(5,eq,12) output(5,eq,47) output(5,eq,6) output(5,eq,27) output(5,eq,18) output(5,eq,7) output(5,eq,19) output(12,eq,47) output(12,eq,6) output(12,eq,27) output(12,eq,18) output(12,eq,7) output(12,eq,19) output(47,eq,6) output(47,eq,27) output(47,eq,18) output(47,eq,7) output(47,eq,19) output(6,eq,27) output(6,eq,18) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,6) output(10,better,19) output(12,better,6) output(12,better,19) output(5,better,6) output(5,better,19) output(0,better,6) output(0,better,19) output(47,better,6) output(47,better,19) output(7,better,19) output(6,worse,27) output(6,worse,18) output(6,worse,7) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(10,eq,27) output(10,eq,18) output(10,eq,7) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(0,eq,27) output(0,eq,18) output(0,eq,7) output(5,eq,12) output(5,eq,47) output(5,eq,27) output(5,eq,18) output(5,eq,7) output(12,eq,47) output(12,eq,27) output(12,eq,18) output(12,eq,7) output(47,eq,27) output(47,eq,18) output(47,eq,7) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(18,eq,7)
Optimization: 32 1
Answer: 3
preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(atom(hasOftenSold(0))),12) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,47) output(10,better,6) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,19) output(5,better,47) output(5,better,6) output(5,better,19) output(0,better,47) output(0,better,6) output(0,better,19) output(7,better,19) output(47,worse,27) output(47,worse,18) output(47,worse,7) output(6,worse,27) output(6,worse,18) output(6,worse,7) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,27) output(10,eq,18) output(10,eq,7) output(0,eq,5) output(0,eq,12) output(0,eq,27) output(0,eq,18) output(0,eq,7) output(5,eq,12) output(5,eq,27) output(5,eq,18) output(5,eq,7) output(12,eq,27) output(12,eq,18) output(12,eq,7) output(47,eq,6) output(47,eq,19) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(18,eq,7)
Optimization: 30 2
Answer: 4
preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,7) output(27,better,19) output(10,better,6) output(10,better,7) output(10,better,19) output(12,better,6) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,7) output(5,better,19) output(0,better,6) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,7) output(47,better,19) output(6,worse,27) output(6,worse,18) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(10,eq,27) output(10,eq,18) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(0,eq,27) output(0,eq,18) output(5,eq,12) output(5,eq,47) output(5,eq,27) output(5,eq,18) output(12,eq,47) output(12,eq,27) output(12,eq,18) output(47,eq,27) output(47,eq,18) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(7,eq,19)
Optimization: 26 2
Answer: 5
preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,14),1,for(atom(hasOftenSold(0))),12) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,7) output(27,better,19) output(10,better,47) output(10,better,6) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,7) output(12,better,19) output(5,better,47) output(5,better,6) output(5,better,7) output(5,better,19) output(0,better,47) output(0,better,6) output(0,better,7) output(0,better,19) output(47,worse,27) output(47,worse,18) output(6,worse,27) output(6,worse,18) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,27) output(10,eq,18) output(0,eq,5) output(0,eq,12) output(0,eq,27) output(0,eq,18) output(5,eq,12) output(5,eq,27) output(5,eq,18) output(12,eq,27) output(12,eq,18) output(47,eq,6) output(47,eq,7) output(47,eq,19) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(7,eq,19)
Optimization: 25 4
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(5,eq,12) output(5,eq,47) output(12,eq,47) output(6,eq,27) output(6,eq,18) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 20 3
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),12) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(10,better,5) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,19) output(0,better,5) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(7,better,19) output(18,worse,7) output(18,worse,19) output(27,worse,7) output(27,worse,19) output(10,worse,12) output(10,worse,47) output(5,worse,12) output(5,worse,47) output(0,worse,12) output(0,worse,47) output(6,worse,7) output(10,eq,0) output(5,eq,7) output(12,eq,47) output(6,eq,19) output(27,eq,18)
Optimization: 16 6
Answer: 8
preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),12) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),12) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(10,better,5) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,27) output(5,better,18) output(5,better,19) output(0,better,5) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19) output(18,worse,7) output(27,worse,7) output(5,worse,12) output(5,worse,47) output(5,worse,6) output(10,eq,0) output(10,eq,12) output(10,eq,47) output(0,eq,12) output(0,eq,47) output(5,eq,7) output(12,eq,47) output(27,eq,18) output(27,eq,19) output(18,eq,19)
Optimization: 15 6
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),2) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),12) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(0)))),12) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,12),1,for(neg(atom(hasOiliness(1)))),11) preference(1,(1,14),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(27,better,18) output(10,better,5) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(7,better,19) output(18,worse,7) output(18,worse,19) output(27,worse,7) output(27,worse,19) output(10,worse,0) output(10,worse,12) output(10,worse,47) output(12,worse,47) output(5,worse,12) output(5,worse,47) output(5,worse,7) output(6,worse,7) output(0,eq,47) output(6,eq,19)
Optimization: 14 11
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),2) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,11),1,for(neg(atom(hasOiliness(1)))),11) preference(1,(1,14),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,18) output(5,better,19) output(0,better,5) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(18,worse,7) output(10,worse,12) output(5,worse,12) output(5,worse,47) output(5,worse,27) output(5,worse,7) output(0,worse,12) output(0,worse,47) output(6,worse,27) output(6,worse,18) output(6,worse,7) output(6,eq,19)
Optimization: 12 14
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),2) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),11) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,11),1,for(neg(atom(hasOiliness(1)))),11) preference(1,(1,12),1,for(neg(atom(hasOilyLevel(0)))),8) preference(1,(1,14),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,18) output(5,better,19) output(0,better,5) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,19) output(7,better,19) output(18,worse,7) output(10,worse,12) output(5,worse,12) output(5,worse,47) output(5,worse,27) output(5,worse,7) output(0,worse,12) output(0,worse,47) output(6,worse,27) output(6,worse,18) output(6,worse,7)
Optimization: 11 14
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),11) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,4),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),2) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,14),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),12) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,13),1,for(atom(hasOftenSold(0))),9) preference(1,less(weight)) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,6) output(5,better,18) output(5,better,19) output(0,better,5) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,19) output(7,better,19) output(18,worse,7) output(10,worse,12) output(5,worse,12) output(5,worse,47) output(5,worse,27) output(5,worse,7) output(0,worse,12) output(6,worse,27) output(6,worse,18) output(6,worse,7)
Optimization: 10 14
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),10) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,6),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,11),1,for(neg(atom(hasPrice(1)))),9) preference(1,(1,3),1,for(atom(hasPrice(1))),11) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),2) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),9) preference(1,(1,13),1,for(atom(hasOiliness(1))),1) preference(1,(1,14),1,for(atom(hasPriceLevel(2))),6) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,7) output(27,better,19) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,7) output(6,better,19) output(7,better,19) output(27,worse,18) output(10,worse,0) output(12,worse,47) output(5,worse,47) output(6,worse,18)
Optimization: 5 14
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(2)))),8) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasOftenSold(0))),3) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasPriceLevel(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 15
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(0)))),2) preference(1,(1,13),1,for(neg(atom(hasOilyLevel(0)))),6) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),12) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19)
Optimization: 0 12
Answer: 16
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,13),1,for(neg(atom(hasOilyLevel(0)))),2) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19)
Optimization: 0 11
Answer: 17
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,13),1,for(neg(atom(hasOilyLevel(0)))),6) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19)
Optimization: 0 10
Answer: 18
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 19
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,12),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),12) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,6) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,7) output(6,better,19) output(7,better,19)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.168 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 597.694s (Solving: 591.20s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2370.665s
Threads      : 4        (Winner: 4)

Choices      : 9452028  (Domain: 2905)
Conflicts    : 1903624  (Analyzed: 1903622)
Restarts     : 2429     (Average: 783.71 Last: 138062)
Model-Level  : 775.9   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1912883  (Deleted: 1756267)
  Binary     : 1044     (Ratio:   0.05%)
  Ternary    : 321      (Ratio:   0.02%)
  Conflict   : 1903622  (Average Length: 1282.7 Ratio:  99.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 9261     (Average Length:  134.5 Ratio:   0.48%) 
  Distributed: 3087     (Ratio:   0.16% Average LBD: 3.40) 
  Integrated : 9261     (Ratio: 300.00% Unit: 25 Average Jumps: 214.56)
Backjumps    : 1903622  (Average:  3.58 Max: 2546 Sum: 6818069)
  Executed   : 1903621  (Average:  3.58 Max: 2546 Sum: 6818035 Ratio: 100.00%)
  Bounded    : 1        (Average: 34.00 Max:  34 Sum:     34 Ratio:   0.00%)

Rules        : 2222916 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 611317  
Bodies       : 621003  
  Sum        : 270     
  Count      : 14      
Equivalences : 1827270  (Atom=Atom: 590797 Body=Body: 603812 Other: 632661)
Tight        : Yes
Variables    : 20979    (Eliminated:    0 Frozen: 14035)
Constraints  : 1652803  (Binary:  99.1% Ternary:   0.4% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOftenSold(0)) ; 
  12 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOiliness(1))  ; 
  12 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: not atom(hasPriceLevel(1))  ; 
  1 :: not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOiliness(1))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasPriceLevel(1))  ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  1 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(2))  ; 
  3 :: not atom(hasPrice(1))  ; 
  12 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasPriceLevel(1))  ; 
  1 :: not atom(hasOftenSold(1))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: not atom(hasPriceLevel(0))  ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  11 :: not atom(hasOiliness(1))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(2))  ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasOiliness(0)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  11 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  3 :: atom(hasPriceLevel(2)) ; 
  11 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(2))  ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasOiliness(0)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  11 :: atom(hasOilyLevel(2)) ; 
  11 :: not atom(hasPriceLevel(0))  ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  11 :: not atom(hasOiliness(1))  ; 
  8 :: not atom(hasOilyLevel(0))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasMinorGrp(1))  ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOftenSold(1))  ; 
  3 :: not atom(hasOiliness(1))  ; 
  1 :: atom(hasMinorGrp(0)) ; 
  11 :: atom(hasOilyLevel(2)) ; 
  2 :: not atom(hasOilyLevel(2))  ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  12 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  4 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasPriceLevel(1))  ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  11 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOilyLevel(0)) ; 
  1 :: not atom(hasPrice(0))  ; 
  7 :: not atom(hasOiliness(0))  ; 
  8 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasOilyLevel(2))  ; 
  8 :: not atom(hasOilyLevel(1))  ; 
  9 :: not atom(hasPrice(1))  ; 
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  8 :: not atom(hasPriceLevel(2))  ; 
  2 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOiliness(1))  ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPriceLevel(2)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasPrice(1))  ; 
  7 :: not atom(hasMinorGrp(1))  ; 
  12 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: not atom(hasPriceLevel(0))  ; 
  8 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasOilyLevel(0))  ; 
  6 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasPrice(1))  ; 
  7 :: not atom(hasMinorGrp(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: not atom(hasOilyLevel(0))  ; 
  6 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasPrice(1))  ; 
  7 :: not atom(hasMinorGrp(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasOilyLevel(0))  ; 
  6 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasPrice(1))  ; 
  7 :: not atom(hasMinorGrp(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  9 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasPriceLevel(1))  ; 
  12 :: not atom(hasMinorGrp(1))  
}.
