asprin_vL version 1.0
Reading from stdin
-:322:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:332:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:347:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:428:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:702:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:879:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1008:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1080:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1084:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1084:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1189:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1215:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1335:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1369:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1391:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:239:1-16: info: no atoms over signature occur in program:
  output/3

-:231:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:232:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:233:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,29) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(6,eq,51) output(6,eq,35) output(6,eq,59) output(6,eq,9) output(16,eq,20) output(16,eq,29) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(20,eq,29) output(20,eq,51) output(20,eq,35) output(20,eq,59) output(20,eq,9) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 45 0
Answer: 2
preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,51) output(16,better,51) output(29,better,51) output(29,better,35) output(29,better,59) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(35,worse,9) output(59,worse,9) output(51,worse,9) output(11,eq,2) output(11,eq,20) output(2,eq,20) output(6,eq,16) output(6,eq,29) output(6,eq,9) output(16,eq,29) output(16,eq,9) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(35,eq,59)
Optimization: 17 1
Answer: 3
preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,35) output(2,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(29,better,35) output(29,better,59) output(11,better,2) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(29,worse,9) output(35,worse,9) output(59,worse,9) output(51,worse,9) output(2,worse,20) output(11,eq,20) output(6,eq,16) output(35,eq,59) output(2,unc,6) output(2,unc,16) output(2,unc,51) output(2,unc,9) output(29,unc,51)
Optimization: 15 2
Answer: 4
preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(11,better,2) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(35,worse,9) output(59,worse,9) output(51,worse,9) output(2,worse,20) output(11,eq,20) output(6,eq,16) output(51,eq,35) output(51,eq,59) output(35,eq,59) output(2,unc,6) output(2,unc,16) output(2,unc,29)
Optimization: 14 2
Answer: 5
preference(1,(1,1),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(hasOftenSold(1))),()) preference(1,(1,10),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(2,better,20) output(6,better,16) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(29,worse,9) output(35,worse,9) output(59,worse,9) output(11,worse,6) output(11,worse,16) output(2,worse,6) output(2,worse,16) output(51,worse,35) output(51,worse,59) output(11,worse,2) output(51,worse,9) output(11,eq,20) output(35,eq,59)
Optimization: 13 4
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),2,for(atom(hasOftenSold(0))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(11,better,2) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(29,worse,51) output(29,worse,9) output(29,worse,35) output(29,worse,59) output(51,worse,35) output(51,worse,59) output(2,worse,20) output(6,worse,16) output(11,eq,20) output(35,eq,59)
Optimization: 12 7
Answer: 7
preference(1,(1,1),1,for(atom(hasPrice(1))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasOiliness(0))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(6,better,16) output(11,better,2) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(59,worse,9) output(2,worse,20) output(11,worse,20) output(35,eq,9) output(11,unc,6) output(2,unc,6) output(2,unc,16) output(2,unc,29) output(2,unc,51)
Optimization: 11 9
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasOiliness(1))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,7),2,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,poset) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(11,better,2) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(51,worse,35) output(2,worse,20) output(11,worse,20) output(11,unc,6) output(2,unc,6) output(6,unc,16) output(6,unc,29) output(51,unc,59)
Optimization: 10 10
Answer: 9
preference(1,(1,2),1,for(atom(hasPrice(1))),()) preference(1,(1,3),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOiliness(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(29,better,35) output(29,better,59) output(29,better,9) output(11,better,2) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(6,worse,51) output(59,worse,9) output(6,worse,29) output(2,worse,20) output(6,worse,16) output(11,eq,20) output(29,eq,51)
Optimization: 9 6
Answer: 10
preference(1,(1,1),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,10),2,for(atom(hasPrice(1))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(11,better,2) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(51,worse,35) output(51,worse,59) output(2,worse,20) output(6,worse,16) output(11,eq,20) output(6,unc,29)
Optimization: 8 9
SATISFIABLE

Models       : 10+
  Optimum    : unknown
Optimization : 8 9
Calls        : 1
Time         : 683.145s (Solving: 679.75s 1st Model: 0.62s Unsat: 0.00s)
CPU Time     : 2721.747s
Threads      : 4        (Winner: 0)

Choices      : 5504866  (Domain: 5389)
Conflicts    : 293416   (Analyzed: 293416)
Restarts     : 334      (Average: 878.49 Last: 17227)
Model-Level  : 2741.9  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 26555174 (Deleted: 26385058)
  Binary     : 4142     (Ratio:   0.02%)
  Ternary    : 63948    (Ratio:   0.24%)
  Conflict   : 293416   (Average Length:  737.4 Ratio:   1.10%) 
  Loop       : 26177630 (Average Length:  158.5 Ratio:  98.58%) 
  Other      : 84128    (Average Length:    3.7 Ratio:   0.32%) 
  Distributed: 28078    (Ratio:   0.11% Average LBD: 2.85) 
  Integrated : 84234    (Ratio: 300.00% Unit: 233 Average Jumps: 789.68)
Backjumps    : 293416   (Average: 16.14 Max: 84018 Sum: 4734445)
  Executed   : 293395   (Average: 16.14 Max: 84018 Sum: 4734363 Ratio: 100.00%)
  Bounded    : 21       (Average:  3.90 Max:  46 Sum:     82 Ratio:   0.00%)

Rules        : 802371  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 27160   
Bodies       : 542834  
  Count      : 40      
Equivalences : 25891    (Atom=Atom: 4646 Body=Body: 5969 Other: 15276)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 513600 Gammas: 0)
Variables    : 524802   (Eliminated:    0 Frozen: 516717)
Constraints  : 2996253  (Binary:  82.1% Ternary:   5.6% Other:  12.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(1)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(1)) 
}.
Time limit reached
