asprin_vL version 1.0
Reading from stdin
-:322:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:332:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:347:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:428:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:702:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:879:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1008:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1080:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1084:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1084:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1189:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1215:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1335:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1369:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1391:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:239:1-16: info: no atoms over signature occur in program:
  output/3

-:231:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:232:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:233:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(3,eq,5) output(6,eq,4) preference(1,poset) output(7,eq,2) output(7,eq,1) output(7,eq,8) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(7,eq,0) output(7,eq,4) output(7,eq,5) output(2,eq,1) output(2,eq,8) output(2,eq,3) output(2,eq,6) output(2,eq,9) output(2,eq,0) output(2,eq,4) output(2,eq,5) output(1,eq,8) output(1,eq,3) output(1,eq,6) output(1,eq,9) output(1,eq,0) output(1,eq,4) output(1,eq,5) output(8,eq,3) output(8,eq,6) output(8,eq,9) output(8,eq,0) output(8,eq,4) output(8,eq,5) output(3,eq,6) output(3,eq,9) output(3,eq,0) output(3,eq,4) output(6,eq,9) output(6,eq,0) output(6,eq,5) output(9,eq,0) output(9,eq,4) output(9,eq,5) output(0,eq,4) output(0,eq,5) output(4,eq,5)
Optimization: 45 0
Answer: 2
output(3,eq,5) output(6,eq,4) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,worse,3) output(7,worse,9) output(7,worse,0) output(7,worse,5) output(2,worse,3) output(2,worse,9) output(2,worse,0) output(2,worse,5) output(1,worse,3) output(1,worse,9) output(1,worse,0) output(1,worse,5) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(8,worse,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(7,eq,2) output(7,eq,1) output(7,eq,8) output(7,eq,6) output(7,eq,4) output(2,eq,1) output(2,eq,8) output(2,eq,6) output(2,eq,4) output(1,eq,8) output(1,eq,6) output(1,eq,4) output(8,eq,6) output(8,eq,4) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5)
Optimization: 41 1
Answer: 3
output(3,eq,5) output(6,eq,4) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(7,better,2) output(7,better,1) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(6,better,9) output(6,better,0) output(6,better,5) output(4,better,5) output(2,worse,6) output(2,worse,4) output(1,worse,6) output(1,worse,4) output(8,worse,6) output(8,worse,4) output(3,worse,6) output(3,worse,4) output(9,worse,4) output(0,worse,4) output(7,eq,6) output(7,eq,4) output(2,eq,1) output(2,eq,8) output(2,eq,3) output(2,eq,9) output(2,eq,0) output(2,eq,5) output(1,eq,8) output(1,eq,3) output(1,eq,9) output(1,eq,0) output(1,eq,5) output(8,eq,3) output(8,eq,9) output(8,eq,0) output(8,eq,5) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5)
Optimization: 34 1
Answer: 4
output(3,eq,5) output(6,eq,4) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(7,eq,0) output(7,eq,4) output(7,eq,5) output(2,eq,1) output(2,eq,8) output(1,eq,8) output(3,eq,6) output(3,eq,9) output(3,eq,0) output(3,eq,4) output(6,eq,9) output(6,eq,0) output(6,eq,5) output(9,eq,0) output(9,eq,4) output(9,eq,5) output(0,eq,4) output(0,eq,5) output(4,eq,5)
Optimization: 27 1
Answer: 5
output(3,eq,5) output(6,eq,4) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(2,better,3) output(2,better,9) output(2,better,0) output(2,better,5) output(1,better,3) output(1,better,9) output(1,better,0) output(1,better,5) output(8,better,3) output(8,better,9) output(8,better,0) output(8,better,5) output(7,better,3) output(7,better,0) output(7,better,5) output(6,better,9) output(6,better,0) output(6,better,5) output(4,better,5) output(9,better,0) output(9,better,5) output(3,worse,6) output(3,worse,4) output(9,worse,4) output(0,worse,4) output(7,worse,6) output(7,worse,4) output(3,worse,9) output(2,eq,1) output(2,eq,8) output(1,eq,8) output(3,eq,0) output(0,eq,5) output(7,unc,2) output(7,unc,1) output(7,unc,8) output(7,unc,9) output(2,unc,6) output(2,unc,4) output(1,unc,6) output(1,unc,4) output(8,unc,6) output(8,unc,4)
Optimization: 24 2
Answer: 6
output(3,eq,5) output(6,eq,4) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(6,better,0) output(6,better,5) output(4,better,5) output(9,better,0) output(9,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(7,worse,9) output(3,worse,6) output(3,worse,4) output(0,worse,4) output(7,worse,6) output(7,worse,4) output(3,worse,9) output(7,eq,3) output(7,eq,0) output(7,eq,5) output(2,eq,1) output(2,eq,8) output(1,eq,8) output(3,eq,0) output(6,eq,9) output(9,eq,4) output(0,eq,5)
Optimization: 22 1
Answer: 7
output(3,eq,5) output(6,eq,4) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(6,better,0) output(6,better,5) output(4,better,5) output(9,better,0) output(9,better,5) output(0,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(7,worse,9) output(7,worse,0) output(3,worse,6) output(3,worse,4) output(0,worse,4) output(7,worse,6) output(7,worse,4) output(3,worse,9) output(3,worse,0) output(7,eq,3) output(7,eq,5) output(2,eq,1) output(2,eq,8) output(1,eq,8) output(6,eq,9) output(9,eq,4)
Optimization: 21 2
Answer: 8
output(3,eq,5) output(6,eq,4) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(8,worse,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5) output(7,unc,2) output(7,unc,1) output(8,unc,6) output(8,unc,4)
Optimization: 20 2
Answer: 9
output(3,eq,5) output(6,eq,4) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(6,better,9) output(6,better,0) output(6,better,5) output(4,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(3,worse,6) output(3,worse,4) output(9,worse,4) output(0,worse,4) output(7,eq,6) output(7,eq,4) output(2,eq,1) output(2,eq,8) output(1,eq,8) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5)
Optimization: 19 2
Answer: 10
output(3,eq,5) output(6,eq,4) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,2) output(7,better,1) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(8,worse,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(8,worse,6) output(8,worse,4) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5)
Optimization: 18 3
Answer: 11
output(3,eq,5) output(6,eq,4) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(9,better,0) output(9,better,5) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(0,better,5) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(8,worse,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(3,worse,9) output(3,worse,0) output(2,eq,1) output(7,unc,2) output(7,unc,1) output(8,unc,6) output(8,unc,4)
Optimization: 17 10
Answer: 12
output(3,eq,5) output(6,eq,4) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,2) output(7,better,1) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(9,better,0) output(9,better,5) output(7,better,6) output(7,better,4) output(2,better,1) output(2,better,8) output(1,better,8) output(0,better,5) output(1,worse,9) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(8,worse,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(8,worse,6) output(8,worse,4) output(3,worse,9) output(3,worse,0) output(2,eq,9)
Optimization: 16 10
Answer: 13
output(3,eq,5) output(6,eq,4) preference(1,(1,1),1,for(atom(hasOftenSold(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),1,for(atom(hasOiliness(0))),()) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),2,for(atom(hasOftenSold(0))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,11),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(1))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(9,better,4) output(0,better,4) output(7,better,3) output(7,better,5) output(6,better,5) output(4,better,5) output(9,better,0) output(9,better,5) output(2,better,1) output(2,better,8) output(1,better,8) output(0,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(7,worse,9) output(7,worse,0) output(6,worse,9) output(6,worse,0) output(3,worse,6) output(3,worse,4) output(7,worse,6) output(7,worse,4) output(3,worse,9) output(3,worse,0)
Optimization: 15 12
Answer: 14
output(3,eq,5) output(6,eq,4) preference(1,(1,1),1,for(atom(hasOftenSold(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),1,for(atom(hasOiliness(0))),()) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),2,for(atom(hasOftenSold(0))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,11),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(1))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,3) output(7,better,5) output(9,better,0) output(9,better,5) output(7,better,6) output(7,better,4) output(2,better,1) output(2,better,8) output(1,better,8) output(0,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(7,worse,9) output(7,worse,0) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(3,worse,9) output(3,worse,0)
Optimization: 13 12
Answer: 15
output(3,eq,5) output(6,eq,4) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,12),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOftenSold(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(hasOftenSold(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(8,better,5) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(6,better,9) output(6,better,0) output(6,better,5) output(4,better,5) output(9,better,0) output(9,better,5) output(7,better,6) output(7,better,4) output(2,better,1) output(2,better,8) output(1,better,8) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(3,worse,6) output(3,worse,4) output(9,worse,4) output(0,worse,4) output(3,worse,9) output(3,eq,0) output(0,eq,5)
Optimization: 12 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.050 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 12 12
Calls        : 1
Time         : 597.967s (Solving: 592.59s 1st Model: 0.87s Unsat: 0.00s)
CPU Time     : 2374.852s
Threads      : 4        (Winner: 4)

Choices      : 4376217  (Domain: 5958)
Conflicts    : 219913   (Analyzed: 219913)
Restarts     : 257      (Average: 855.69 Last: 11957)
Model-Level  : 604.6   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 20596088 (Deleted: 20444367)
  Binary     : 4048     (Ratio:   0.02%)
  Ternary    : 65158    (Ratio:   0.32%)
  Conflict   : 219913   (Average Length: 1060.2 Ratio:   1.07%) 
  Loop       : 20290028 (Average Length:  184.2 Ratio:  98.51%) 
  Other      : 86147    (Average Length:    3.7 Ratio:   0.42%) 
  Distributed: 29593    (Ratio:   0.14% Average LBD: 2.84) 
  Integrated : 88779    (Ratio: 300.00% Unit: 274 Average Jumps: 1181.66)
Backjumps    : 219913   (Average: 15.74 Max: 54305 Sum: 3462077)
  Executed   : 219880   (Average: 15.74 Max: 54305 Sum: 3461928 Ratio: 100.00%)
  Bounded    : 33       (Average:  4.52 Max:  44 Sum:    149 Ratio:   0.00%)

Rules        : 1030826 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 27501   
Bodies       : 715913  
  Count      : 48      
Equivalences : 26947    (Atom=Atom: 4773 Body=Body: 6330 Other: 15844)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 675360 Gammas: 0)
Variables    : 686730   (Eliminated:    0 Frozen: 678222)
Constraints  : 4019979  (Binary:  82.5% Ternary:   4.2% Other:  13.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPrice(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPrice(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(3)) 
}.
