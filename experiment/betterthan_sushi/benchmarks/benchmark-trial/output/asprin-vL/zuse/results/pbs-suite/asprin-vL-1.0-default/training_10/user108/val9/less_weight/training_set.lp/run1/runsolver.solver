asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,2) output(7,eq,5) output(7,eq,0) output(7,eq,1) output(7,eq,6) output(7,eq,8) output(7,eq,4) output(7,eq,3) output(2,eq,5) output(2,eq,0) output(2,eq,1) output(2,eq,6) output(2,eq,8) output(2,eq,4) output(2,eq,3) output(5,eq,0) output(5,eq,1) output(5,eq,6) output(5,eq,8) output(5,eq,4) output(5,eq,3) output(0,eq,1) output(0,eq,6) output(0,eq,8) output(0,eq,4) output(0,eq,3) output(1,eq,6) output(1,eq,8) output(1,eq,4) output(1,eq,3) output(6,eq,8) output(6,eq,4) output(6,eq,3) output(8,eq,4) output(8,eq,3) output(4,eq,3)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,4) output(7,better,6) output(7,better,8) output(7,better,4) output(8,worse,3) output(6,worse,3) output(4,worse,3) output(7,eq,2) output(7,eq,5) output(7,eq,0) output(7,eq,1) output(7,eq,3) output(2,eq,5) output(2,eq,0) output(2,eq,1) output(2,eq,3) output(5,eq,0) output(5,eq,1) output(5,eq,3) output(0,eq,1) output(0,eq,3) output(1,eq,3) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 21 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(8,worse,3) output(1,worse,3) output(6,worse,3) output(4,worse,3) output(7,eq,2) output(7,eq,5) output(7,eq,0) output(7,eq,3) output(2,eq,5) output(2,eq,0) output(2,eq,3) output(5,eq,0) output(5,eq,3) output(0,eq,3) output(1,eq,6) output(1,eq,8) output(1,eq,4) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 20 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(2,better,8) output(1,better,8) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(6,better,8) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(2,worse,5) output(2,worse,0) output(2,worse,6) output(2,worse,4) output(2,worse,3) output(8,worse,4) output(8,worse,3) output(1,worse,6) output(1,worse,4) output(1,worse,3) output(6,worse,3) output(4,worse,3) output(2,eq,1) output(5,eq,0) output(5,eq,3) output(0,eq,3) output(6,eq,4)
Optimization: 17 4
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,6) output(2,better,8) output(2,better,4) output(2,better,3) output(1,better,6) output(1,better,8) output(1,better,4) output(1,better,3) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,4) output(7,better,5) output(7,better,0) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(8,worse,3) output(5,worse,1) output(0,worse,1) output(6,worse,3) output(4,worse,3) output(7,eq,2) output(7,eq,1) output(2,eq,1) output(5,eq,0) output(5,eq,3) output(0,eq,3) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 14 3
Answer: 6
preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),1) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(2,better,3) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,4) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(8,worse,3) output(6,worse,3) output(4,worse,3) output(7,eq,2) output(5,eq,0) output(5,eq,1) output(5,eq,3) output(0,eq,1) output(0,eq,3) output(1,eq,3) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 13 5
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),9) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),8) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),4) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(2,better,3) output(1,better,8) output(5,better,1) output(5,better,8) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(0,better,3) output(6,better,8) output(6,better,3) output(4,better,3) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(8,worse,4) output(8,worse,3) output(1,worse,6) output(1,worse,4) output(1,worse,3) output(5,worse,0) output(5,worse,6) output(5,worse,4) output(7,worse,2) output(5,eq,3) output(6,eq,4)
Optimization: 11 9
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),9) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),4) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(2,better,3) output(1,better,6) output(1,better,8) output(1,better,4) output(1,better,3) output(5,better,8) output(0,better,6) output(0,better,8) output(0,better,4) output(0,better,3) output(6,better,8) output(6,better,3) output(4,better,3) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(8,worse,4) output(8,worse,3) output(5,worse,0) output(5,worse,1) output(5,worse,6) output(5,worse,4) output(0,worse,1) output(7,worse,2) output(5,eq,3) output(6,eq,4)
Optimization: 10 8
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),9) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),12) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),4) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(2,better,3) output(1,better,6) output(1,better,8) output(1,better,4) output(1,better,3) output(5,better,8) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(0,better,3) output(6,better,8) output(6,better,3) output(4,better,3) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(8,worse,4) output(8,worse,3) output(5,worse,0) output(5,worse,1) output(5,worse,6) output(5,worse,4) output(7,worse,2) output(5,eq,3) output(6,eq,4)
Optimization: 9 9
Progression : [1;9] (Error: 8)
Progression : [2;9] (Error: 3.5)
Answer: 10
preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,1),1,for(atom(hasPrice(1))),12) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),1) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(2,better,3) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(7,better,3) output(8,worse,3) output(1,worse,3) output(0,worse,3) output(6,worse,8) output(6,worse,3) output(4,worse,3) output(5,eq,3) output(6,eq,4)
Optimization: 8 10
Progression : [3;8] (Error: 1.66667)
Progression : [4;8] (Error: 1)
Progression : [5;8] (Error: 0.6)
Progression : [6;8] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.098 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 8 10
Bounds       : [6;8] [0;10]
Calls        : 1
Time         : 1197.059s (Solving: 1192.55s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 4772.327s
Threads      : 4        (Winner: 4)

Choices      : 14388907 (Domain: 7344)
Conflicts    : 10291870 (Analyzed: 10291864)
Restarts     : 13825    (Average: 744.44 Last: 361065)
Model-Level  : 610.0   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 10341562 (Deleted: 9509094)
  Binary     : 11298    (Ratio:   0.11%)
  Ternary    : 1384     (Ratio:   0.01%)
  Conflict   : 10291864 (Average Length:  281.4 Ratio:  99.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 49698    (Average Length:   71.3 Ratio:   0.48%) 
  Distributed: 16571    (Ratio:   0.16% Average LBD: 3.25) 
  Integrated : 49713    (Ratio: 300.00% Unit: 1246 Average Jumps: 20.48)
Backjumps    : 10291864 (Average:  1.34 Max: 1207 Sum: 13806794)
  Executed   : 10291813 (Average:  1.34 Max: 1207 Sum: 13806322 Ratio: 100.00%)
  Bounded    : 51       (Average:  9.25 Max:  36 Sum:    472 Ratio:   0.00%)

Rules        : 1299435 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 367739  
Bodies       : 371852  
  Sum        : 216     
  Count      : 10      
Equivalences : 1092152  (Atom=Atom: 351459 Body=Body: 360148 Other: 380545)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPriceLevel(2)) ; 
  4 :: not atom(hasPrice(0))  ; 
  5 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  ; 
  5 :: atom(hasOilyLevel(2)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOilyLevel(0))  ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMinorGrp(0))  ; 
  8 :: atom(hasPriceLevel(2)) ; 
  8 :: not atom(hasPriceLevel(0))  ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMinorGrp(0))  ; 
  8 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMinorGrp(0))  ; 
  8 :: atom(hasPriceLevel(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasOilyLevel(0))  ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  5 :: not atom(hasOiliness(1))  ; 
  6 :: not atom(hasPrice(0))  ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPriceLevel(1)) ; 
  2 :: not atom(hasOiliness(0))  ; 
  10 :: not atom(hasOilyLevel(1))  
}.
