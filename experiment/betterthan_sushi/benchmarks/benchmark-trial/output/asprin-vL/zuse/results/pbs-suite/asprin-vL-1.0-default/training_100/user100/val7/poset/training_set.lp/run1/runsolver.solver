asprin_vL version 1.0
Reading from stdin
-:322:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:332:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:347:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:428:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:702:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:879:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1008:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1080:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1084:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1084:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1189:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1215:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1335:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1369:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1391:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:239:1-16: info: no atoms over signature occur in program:
  output/3

-:231:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:232:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:233:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(5,eq,3) preference(1,poset) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,5) output(37,eq,35) output(37,eq,3) output(37,eq,52) output(37,eq,14) output(37,eq,4) output(1,eq,18) output(1,eq,11) output(1,eq,5) output(1,eq,35) output(1,eq,3) output(1,eq,52) output(1,eq,14) output(1,eq,4) output(18,eq,11) output(18,eq,5) output(18,eq,35) output(18,eq,3) output(18,eq,52) output(18,eq,14) output(18,eq,4) output(11,eq,5) output(11,eq,35) output(11,eq,3) output(11,eq,52) output(11,eq,14) output(11,eq,4) output(5,eq,35) output(5,eq,52) output(5,eq,14) output(5,eq,4) output(35,eq,3) output(35,eq,52) output(35,eq,14) output(35,eq,4) output(3,eq,52) output(3,eq,14) output(3,eq,4) output(52,eq,14) output(52,eq,4) output(14,eq,4)
Optimization: 45 0
Answer: 2
output(5,eq,3) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(37,better,35) output(37,better,52) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(5,better,35) output(5,better,52) output(3,better,52) output(37,worse,5) output(37,worse,3) output(37,worse,14) output(35,worse,3) output(35,worse,14) output(37,worse,4) output(52,worse,4) output(37,worse,11) output(37,worse,18) output(37,worse,1) output(35,worse,4) output(52,worse,14) output(1,eq,18) output(1,eq,11) output(18,eq,11) output(5,eq,14) output(5,eq,4) output(35,eq,52) output(3,eq,14) output(3,eq,4) output(14,eq,4)
Optimization: 22 1
Answer: 3
output(5,eq,3) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,3) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,3) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,3) output(11,better,14) output(11,better,4) output(52,better,4) output(35,better,3) output(35,better,14) output(37,better,11) output(35,better,4) output(52,better,14) output(37,better,1) output(37,better,18) output(1,worse,52) output(18,worse,52) output(11,worse,52) output(1,worse,35) output(18,worse,35) output(11,worse,35) output(5,worse,35) output(5,worse,52) output(3,worse,52) output(1,eq,18) output(1,eq,11) output(18,eq,11) output(5,eq,14) output(5,eq,4) output(35,eq,52) output(3,eq,14) output(3,eq,4) output(14,eq,4)
Optimization: 19 1
Answer: 4
output(5,eq,3) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,3) output(11,better,52) output(11,better,14) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,11) output(1,better,11) output(18,better,11) output(11,worse,35) output(11,worse,4) output(5,worse,35) output(5,worse,4) output(3,worse,4) output(52,worse,4) output(14,worse,4) output(37,eq,1) output(37,eq,18) output(1,eq,18) output(5,eq,52) output(5,eq,14) output(35,eq,4) output(3,eq,52) output(3,eq,14) output(52,eq,14)
Optimization: 17 1
Answer: 5
output(5,eq,3) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,3) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,3) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,3) output(11,better,14) output(11,better,4) output(5,better,4) output(3,better,4) output(52,better,4) output(14,better,4) output(35,better,3) output(35,better,14) output(37,better,11) output(35,better,4) output(52,better,14) output(37,better,1) output(37,better,18) output(1,worse,52) output(18,worse,52) output(11,worse,52) output(35,worse,52) output(1,worse,35) output(18,worse,35) output(11,worse,35) output(5,worse,35) output(5,worse,52) output(3,worse,52) output(1,eq,18) output(1,eq,11) output(18,eq,11) output(5,eq,14) output(3,eq,14)
Optimization: 16 2
Answer: 6
output(5,eq,3) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(52,better,4) output(35,better,3) output(35,better,14) output(37,better,11) output(35,better,4) output(52,better,14) output(37,better,1) output(37,better,18) output(5,worse,35) output(5,worse,52) output(3,worse,52) output(1,eq,18) output(1,eq,11) output(18,eq,11) output(5,eq,14) output(5,eq,4) output(35,eq,52) output(3,eq,14) output(3,eq,4) output(14,eq,4)
Optimization: 13 1
Answer: 7
output(5,eq,3) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(5,better,35) output(5,better,4) output(3,better,4) output(52,better,4) output(14,better,4) output(18,better,11) output(5,better,52) output(3,better,52) output(35,better,4) output(35,worse,3) output(35,worse,52) output(35,worse,14) output(37,worse,11) output(1,worse,11) output(37,worse,18) output(1,worse,18) output(37,worse,1) output(5,unc,14) output(3,unc,14) output(52,unc,14)
Optimization: 12 10
Answer: 8
output(5,eq,3) preference(1,(1,1),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),2,for(atom(hasOiliness(0))),()) preference(1,(1,10),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,11) output(1,better,11) output(18,better,11) output(5,better,52) output(3,better,52) output(37,better,18) output(1,better,18) output(5,worse,35) output(5,worse,4) output(3,worse,4) output(52,worse,4) output(14,worse,4) output(37,worse,1) output(5,worse,14) output(35,worse,4) output(3,worse,14) output(52,worse,14)
Optimization: 11 11
Answer: 9
output(5,eq,3) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,9),2,for(atom(hasOftenSold(0))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(52,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,11) output(1,better,11) output(35,better,4) output(52,better,14) output(37,better,1) output(37,better,18) output(1,better,18) output(5,worse,35) output(5,worse,52) output(3,worse,52) output(14,eq,4) output(18,unc,11) output(5,unc,14) output(5,unc,4) output(3,unc,14) output(3,unc,4)
Optimization: 10 5
Answer: 10
output(5,eq,3) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(5,better,4) output(3,better,4) output(52,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,11) output(5,better,14) output(3,better,14) output(35,better,4) output(52,better,14) output(37,better,1) output(37,better,18) output(1,better,18) output(5,worse,35) output(1,worse,11) output(18,worse,11) output(5,worse,52) output(3,worse,52) output(14,eq,4)
Optimization: 7 7
Answer: 11
output(5,eq,3) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(5,better,4) output(3,better,4) output(52,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,11) output(1,better,11) output(18,better,11) output(5,better,14) output(3,better,14) output(35,better,4) output(52,better,14) output(37,better,1) output(37,better,18) output(1,better,18) output(5,worse,35) output(5,worse,52) output(3,worse,52) output(14,eq,4)
Optimization: 5 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.052 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 5 7
Calls        : 1
Time         : 598.104s (Solving: 592.74s 1st Model: 0.88s Unsat: 0.00s)
CPU Time     : 2375.522s
Threads      : 4        (Winner: 4)

Choices      : 4816850  (Domain: 3672)
Conflicts    : 217484   (Analyzed: 217484)
Restarts     : 242      (Average: 898.69 Last: 15157)
Model-Level  : 410.3   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 19529526 (Deleted: 19383716)
  Binary     : 3011     (Ratio:   0.02%)
  Ternary    : 44692    (Ratio:   0.23%)
  Conflict   : 217484   (Average Length:  956.0 Ratio:   1.11%) 
  Loop       : 19248422 (Average Length:  175.7 Ratio:  98.56%) 
  Other      : 63620    (Average Length:    3.6 Ratio:   0.33%) 
  Distributed: 21246    (Ratio:   0.11% Average LBD: 2.87) 
  Integrated : 63738    (Ratio: 300.00% Unit: 320 Average Jumps: 1018.22)
Backjumps    : 217484   (Average: 19.08 Max: 47100 Sum: 4150315)
  Executed   : 217448   (Average: 19.08 Max: 47100 Sum: 4150155 Ratio: 100.00%)
  Bounded    : 36       (Average:  4.44 Max:  46 Sum:    160 Ratio:   0.00%)

Rules        : 1031715 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28147   
Bodies       : 716649  
  Count      : 48      
Equivalences : 28475    (Atom=Atom: 5028 Body=Body: 6678 Other: 16769)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 675360 Gammas: 0)
Variables    : 687134   (Eliminated:    0 Frozen: 678569)
Constraints  : 4021398  (Binary:  82.5% Ternary:   4.2% Other:  13.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOiliness(0)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOiliness(0)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPrice(1)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) 
}.
