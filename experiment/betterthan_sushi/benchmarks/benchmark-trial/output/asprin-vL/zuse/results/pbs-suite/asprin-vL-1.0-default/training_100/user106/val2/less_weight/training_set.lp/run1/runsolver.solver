asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(48,eq,11) output(48,eq,7) output(48,eq,53) output(48,eq,18) output(48,eq,24) output(48,eq,97) output(48,eq,25) output(48,eq,1) output(48,eq,52) output(11,eq,7) output(11,eq,53) output(11,eq,18) output(11,eq,24) output(11,eq,97) output(11,eq,25) output(11,eq,1) output(11,eq,52) output(7,eq,53) output(7,eq,18) output(7,eq,24) output(7,eq,97) output(7,eq,25) output(7,eq,1) output(7,eq,52) output(53,eq,18) output(53,eq,24) output(53,eq,97) output(53,eq,25) output(53,eq,1) output(53,eq,52) output(18,eq,24) output(18,eq,97) output(18,eq,25) output(18,eq,1) output(18,eq,52) output(24,eq,97) output(24,eq,25) output(24,eq,1) output(24,eq,52) output(97,eq,25) output(97,eq,1) output(97,eq,52) output(25,eq,1) output(25,eq,52) output(1,eq,52)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(18,better,25) output(18,better,1) output(11,better,53) output(11,better,25) output(11,better,1) output(24,better,25) output(24,better,1) output(97,better,25) output(97,better,1) output(7,better,53) output(7,better,25) output(7,better,1) output(48,better,53) output(48,better,25) output(48,better,1) output(53,worse,18) output(53,worse,24) output(53,worse,97) output(53,worse,52) output(1,worse,52) output(25,worse,52) output(48,eq,11) output(48,eq,7) output(48,eq,18) output(48,eq,24) output(48,eq,97) output(48,eq,52) output(11,eq,7) output(11,eq,18) output(11,eq,24) output(11,eq,97) output(11,eq,52) output(7,eq,18) output(7,eq,24) output(7,eq,97) output(7,eq,52) output(53,eq,25) output(53,eq,1) output(18,eq,24) output(18,eq,97) output(18,eq,52) output(24,eq,97) output(24,eq,52) output(97,eq,52) output(25,eq,1)
Optimization: 30 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),4) preference(1,less(weight)) output(11,better,53) output(11,better,18) output(11,better,97) output(11,better,25) output(11,better,1) output(24,better,97) output(24,better,25) output(24,better,1) output(7,better,53) output(7,better,18) output(7,better,97) output(7,better,25) output(7,better,1) output(48,better,53) output(48,better,18) output(48,better,97) output(48,better,25) output(48,better,1) output(18,worse,24) output(18,worse,52) output(53,worse,24) output(53,worse,52) output(1,worse,52) output(25,worse,52) output(97,worse,52) output(48,eq,11) output(48,eq,7) output(48,eq,24) output(48,eq,52) output(11,eq,7) output(11,eq,24) output(11,eq,52) output(7,eq,24) output(7,eq,52) output(53,eq,18) output(53,eq,97) output(53,eq,25) output(53,eq,1) output(18,eq,97) output(18,eq,25) output(18,eq,1) output(24,eq,52) output(97,eq,25) output(97,eq,1) output(25,eq,1)
Optimization: 27 1
Answer: 4
preference(1,(1,2),1,for(atom(hasOiliness(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(18,worse,24) output(18,worse,52) output(53,worse,24) output(53,worse,52) output(1,worse,52) output(25,worse,52) output(97,worse,52) output(48,eq,11) output(48,eq,7) output(11,eq,7) output(53,eq,18) output(53,eq,97) output(53,eq,25) output(53,eq,1) output(18,eq,97) output(18,eq,25) output(18,eq,1) output(24,eq,52) output(97,eq,25) output(97,eq,1) output(25,eq,1)
Optimization: 21 2
Answer: 5
preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),6) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),10) preference(1,(1,8),1,for(atom(hasPrice(0))),3) preference(1,(1,9),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,24) output(53,better,25) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(53,worse,18) output(53,worse,97) output(11,worse,18) output(25,worse,1) output(24,worse,97) output(24,worse,25) output(24,worse,1) output(24,worse,52) output(7,worse,53) output(7,worse,18) output(7,worse,24) output(7,worse,97) output(7,worse,25) output(7,worse,1) output(7,worse,52) output(53,eq,1) output(25,eq,52)
Optimization: 17 10
Answer: 6
preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),6) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),8) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,24) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(53,worse,18) output(53,worse,97) output(11,worse,18) output(25,worse,1) output(24,worse,97) output(24,worse,25) output(24,worse,1) output(24,worse,52) output(7,worse,53) output(7,worse,18) output(7,worse,24) output(7,worse,97) output(7,worse,25) output(7,worse,1) output(7,worse,52) output(25,eq,52)
Optimization: 16 10
Answer: 7
preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),6) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),10) preference(1,(1,9),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(97,better,1) output(97,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(53,worse,18) output(11,worse,18) output(24,worse,97) output(24,worse,25) output(24,worse,1) output(24,worse,52) output(7,worse,53) output(7,worse,18) output(7,worse,24) output(7,worse,97) output(7,worse,25) output(7,worse,1) output(7,worse,52) output(11,eq,53) output(97,eq,25)
Optimization: 15 10
Answer: 8
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),5) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),12) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),7) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(2)))),10) preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),6) preference(1,less(weight)) output(18,better,24) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,1) output(53,better,52) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(97,better,1) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,1) output(48,better,52) output(18,worse,97) output(18,worse,25) output(53,worse,25) output(11,worse,7) output(24,worse,97) output(24,worse,25) output(24,worse,1) output(24,worse,52) output(97,worse,25) output(48,worse,11) output(48,worse,7) output(48,worse,25) output(53,eq,97) output(18,eq,1)
Optimization: 14 10
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),5) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),7) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),7) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),9) preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(97,better,52) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,1) output(48,better,52) output(18,worse,25) output(53,worse,25) output(24,worse,97) output(24,worse,25) output(24,worse,1) output(24,worse,52) output(97,worse,25) output(97,worse,1) output(7,worse,25) output(48,worse,11) output(48,eq,25) output(7,eq,53) output(18,eq,1)
Optimization: 13 10
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),5) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),7) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(18,better,97) output(18,better,1) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,1) output(53,better,52) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,1) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,11) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(18,worse,25) output(18,worse,52) output(11,worse,7) output(1,worse,52) output(24,worse,25) output(24,worse,52) output(97,worse,25) output(97,worse,52) output(48,eq,7) output(53,eq,25) output(18,eq,24) output(97,eq,1)
Optimization: 12 10
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),2) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),2) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(2)))),2) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),2) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),11) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),2) preference(1,less(weight)) output(18,better,24) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(18,worse,97) output(24,worse,97) output(24,worse,25) output(24,worse,1) output(24,worse,52) output(11,eq,7) output(53,eq,97) output(18,eq,25) output(18,eq,1) output(25,eq,1)
Optimization: 10 10
Answer: 12
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasOftenSold(1))),1) preference(1,(1,10),1,for(atom(hasOftenSold(0))),3) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,53) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,52) output(7,better,53) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(53,worse,18) output(11,worse,18) output(7,worse,18) output(48,worse,18) output(11,eq,7) output(53,eq,24) output(97,eq,25) output(97,eq,1) output(25,eq,1)
Optimization: 9 10
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),12) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,10),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,less(weight)) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,1) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(18,worse,24) output(53,worse,18) output(53,worse,24) output(1,worse,52) output(97,worse,25) output(97,worse,52) output(48,worse,11)
Optimization: 7 10
Answer: 14
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,3),1,for(atom(hasOftenSold(0))),12) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasOftenSold(1))),3) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,52) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(97,worse,25) output(97,worse,1) output(7,worse,53) output(48,worse,11) output(48,worse,53) output(7,eq,18)
Optimization: 6 10
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,3),1,for(atom(hasOftenSold(0))),12) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasOftenSold(1))),3) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,52) output(7,better,53) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(53,worse,18) output(97,worse,25) output(97,worse,1) output(48,worse,11) output(7,eq,18)
Optimization: 5 10
Answer: 16
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,3),1,for(atom(hasOftenSold(0))),12) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasOiliness(0))),6) preference(1,(1,9),1,for(atom(hasOftenSold(1))),3) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),5) preference(1,less(weight)) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(97,worse,25) output(97,worse,1) output(48,worse,11) output(18,eq,24)
Optimization: 4 9
Answer: 17
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),10) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,3),1,for(atom(hasOftenSold(0))),12) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),11) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,52) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(48,worse,11) output(24,eq,97) output(25,eq,1)
Optimization: 3 10
Answer: 18
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),10) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),2) preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,3),1,for(atom(hasOftenSold(0))),12) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasOftenSold(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),11) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52) output(48,worse,11) output(24,eq,97)
Optimization: 2 10
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),4) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(3)))),8) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,2),1,for(atom(hasOftenSold(0))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),2) preference(1,(1,7),1,for(atom(hasOftenSold(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 20
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,9),1,for(atom(hasOftenSold(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),12) preference(1,less(weight)) output(18,better,24) output(18,better,97) output(18,better,25) output(18,better,1) output(18,better,52) output(53,better,18) output(53,better,24) output(53,better,97) output(53,better,25) output(53,better,1) output(53,better,52) output(11,better,7) output(11,better,53) output(11,better,18) output(11,better,24) output(11,better,97) output(11,better,25) output(11,better,1) output(11,better,52) output(1,better,52) output(25,better,1) output(25,better,52) output(24,better,97) output(24,better,25) output(24,better,1) output(24,better,52) output(97,better,25) output(97,better,1) output(97,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,97) output(7,better,25) output(7,better,1) output(7,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,1) output(48,better,52)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.140 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 1195.338s (Solving: 1190.59s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 4766.452s
Threads      : 4        (Winner: 4)

Choices      : 21180579 (Domain: 12284)
Conflicts    : 5654046  (Analyzed: 5654044)
Restarts     : 6462     (Average: 874.97 Last: 239595)
Model-Level  : 1041.3  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 5683300  (Deleted: 5344800)
  Binary     : 2844     (Ratio:   0.05%)
  Ternary    : 875      (Ratio:   0.02%)
  Conflict   : 5654044  (Average Length:  949.5 Ratio:  99.49%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 29256    (Average Length:   91.3 Ratio:   0.51%) 
  Distributed: 9752     (Ratio:   0.17% Average LBD: 3.47) 
  Integrated : 29256    (Ratio: 300.00% Unit: 68 Average Jumps: 123.84)
Backjumps    : 5654044  (Average:  2.92 Max: 1940 Sum: 16536918)
  Executed   : 5654043  (Average:  2.92 Max: 1940 Sum: 16536884 Ratio: 100.00%)
  Bounded    : 1        (Average: 34.00 Max:  34 Sum:     34 Ratio:   0.00%)

Rules        : 1626348 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 478301  
Bodies       : 482027  
  Sum        : 270     
  Count      : 10      
Equivalences : 1422650  (Atom=Atom: 460113 Body=Body: 470224 Other: 492313)
Tight        : Yes
Variables    : 16675    (Eliminated:    0 Frozen: 11715)
Constraints  : 1181671  (Binary:  98.9% Ternary:   0.4% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  12 :: not atom(hasOftenSold(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPriceLevel(2)) ; 
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  12 :: not atom(hasOftenSold(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPriceLevel(2)) ; 
  3 :: not atom(hasPrice(1))  ; 
  4 :: not atom(hasPrice(0))  ; 
  6 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  12 :: not atom(hasOftenSold(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  3 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  5 :: not atom(hasOilyLevel(2))  ; 
  7 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasOiliness(0))  ; 
  7 :: not atom(hasPrice(1))  ; 
  3 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPriceLevel(1)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  9 :: not atom(hasOiliness(1))  ; 
  10 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  5 :: not atom(hasOilyLevel(2))  ; 
  6 :: not atom(hasPrice(0))  ; 
  7 :: not atom(hasMinorGrp(0))  ; 
  7 :: not atom(hasPrice(1))  ; 
  3 :: atom(hasMinorGrp(2)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  4 :: not atom(hasOftenSold(1))  ; 
  10 :: atom(hasMinorGrp(1)) ; 
  9 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  5 :: not atom(hasOilyLevel(2))  ; 
  7 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: not atom(hasPrice(1))  ; 
  9 :: atom(hasOiliness(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  4 :: not atom(hasOftenSold(1))  ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMinorGrp(3))  ; 
  2 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasPriceLevel(2))  ; 
  12 :: atom(hasPriceLevel(0)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  2 :: not atom(hasMinorGrp(1))  ; 
  11 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasOftenSold(0))  ; 
  6 :: not atom(hasOiliness(1))  ; 
  2 :: atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  3 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasMinorGrp(0))  ; 
  2 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  8 :: not atom(hasOilyLevel(1))  ; 
  10 :: atom(hasOiliness(0)) ; 
  2 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasMinorGrp(0))  ; 
  4 :: not atom(hasOiliness(1))  ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: not atom(hasOftenSold(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasOilyLevel(2))  ; 
  5 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  1 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOftenSold(1)) ; 
  5 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasOilyLevel(2))  ; 
  5 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  9 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  5 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(1)) ; 
  10 :: not atom(hasOilyLevel(2))  ; 
  12 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  6 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  10 :: not atom(hasOilyLevel(2))  ; 
  12 :: atom(hasOftenSold(0)) ; 
  5 :: not atom(hasPriceLevel(1))  ; 
  3 :: not atom(hasOftenSold(0))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  11 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  10 :: not atom(hasOilyLevel(2))  ; 
  12 :: atom(hasOftenSold(0)) ; 
  5 :: not atom(hasPriceLevel(1))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  2 :: not atom(hasPrice(1))  ; 
  3 :: atom(hasOftenSold(1)) ; 
  11 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPriceLevel(2))  ; 
  9 :: atom(hasOftenSold(0)) ; 
  12 :: atom(hasMinorGrp(1)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  8 :: not atom(hasMinorGrp(3))  ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  5 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  7 :: not atom(hasOilyLevel(1))  ; 
  5 :: not atom(hasOftenSold(0))  ; 
  9 :: atom(hasOftenSold(0)) ; 
  12 :: atom(hasMinorGrp(1)) 
}.
