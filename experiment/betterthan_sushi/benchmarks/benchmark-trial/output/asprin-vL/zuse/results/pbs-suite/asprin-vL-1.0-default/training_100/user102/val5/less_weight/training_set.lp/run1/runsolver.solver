asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,48) output(1,eq,21) output(1,eq,14) output(1,eq,39) output(1,eq,15) output(1,eq,46) output(1,eq,23) output(1,eq,50) output(1,eq,60) output(48,eq,21) output(48,eq,14) output(48,eq,39) output(48,eq,15) output(48,eq,46) output(48,eq,23) output(48,eq,50) output(48,eq,60) output(21,eq,14) output(21,eq,39) output(21,eq,15) output(21,eq,46) output(21,eq,23) output(21,eq,50) output(21,eq,60) output(14,eq,39) output(14,eq,15) output(14,eq,46) output(14,eq,23) output(14,eq,50) output(14,eq,60) output(39,eq,15) output(39,eq,46) output(39,eq,23) output(39,eq,50) output(39,eq,60) output(15,eq,46) output(15,eq,23) output(15,eq,50) output(15,eq,60) output(46,eq,23) output(46,eq,50) output(46,eq,60) output(23,eq,50) output(23,eq,60) output(50,eq,60)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(21,better,39) output(21,better,23) output(21,better,60) output(15,better,23) output(15,better,60) output(46,better,23) output(46,better,60) output(1,better,48) output(1,better,39) output(1,better,23) output(1,better,60) output(14,better,39) output(14,better,23) output(14,better,60) output(50,better,60) output(23,worse,50) output(39,worse,15) output(39,worse,46) output(39,worse,50) output(48,worse,21) output(48,worse,14) output(48,worse,15) output(48,worse,46) output(48,worse,50) output(1,eq,21) output(1,eq,14) output(1,eq,15) output(1,eq,46) output(1,eq,50) output(48,eq,39) output(48,eq,23) output(48,eq,60) output(21,eq,14) output(21,eq,15) output(21,eq,46) output(21,eq,50) output(14,eq,15) output(14,eq,46) output(14,eq,50) output(39,eq,23) output(39,eq,60) output(15,eq,46) output(15,eq,50) output(46,eq,50) output(23,eq,60)
Optimization: 30 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,less(weight)) output(21,better,39) output(21,better,46) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(15,better,46) output(15,better,50) output(15,better,60) output(1,better,48) output(1,better,39) output(1,better,46) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,46) output(14,better,50) output(14,better,60) output(39,worse,15) output(39,worse,23) output(46,worse,23) output(48,worse,21) output(48,worse,14) output(48,worse,15) output(48,worse,23) output(1,eq,21) output(1,eq,14) output(1,eq,15) output(1,eq,23) output(48,eq,39) output(48,eq,46) output(48,eq,50) output(48,eq,60) output(21,eq,14) output(21,eq,15) output(21,eq,23) output(14,eq,15) output(14,eq,23) output(39,eq,46) output(39,eq,50) output(39,eq,60) output(15,eq,23) output(46,eq,50) output(46,eq,60) output(50,eq,60)
Optimization: 27 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,less(weight)) output(21,better,15) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,50) output(1,better,60) output(14,better,15) output(14,better,50) output(14,better,60) output(48,better,50) output(21,worse,39) output(21,worse,23) output(15,worse,46) output(15,worse,23) output(46,worse,23) output(1,worse,21) output(1,worse,14) output(1,worse,39) output(1,worse,46) output(1,worse,23) output(14,worse,39) output(14,worse,23) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(1,eq,15) output(48,eq,60) output(21,eq,14) output(21,eq,46) output(14,eq,46) output(39,eq,23)
Optimization: 25 5
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,less(weight)) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,46) output(39,better,50) output(39,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,50) output(14,better,60) output(48,better,50) output(21,worse,39) output(21,worse,15) output(21,worse,23) output(39,worse,15) output(46,worse,23) output(14,worse,39) output(14,worse,15) output(14,worse,23) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(1,eq,15) output(48,eq,60) output(21,eq,14) output(21,eq,46) output(14,eq,46) output(39,eq,23)
Optimization: 21 4
Answer: 6
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,3),1,for(atom(hasOftenSold(0))),12) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,less(weight)) output(21,better,39) output(21,better,46) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,46) output(39,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,46) output(14,better,50) output(14,better,60) output(50,better,60) output(21,worse,15) output(21,worse,23) output(39,worse,15) output(39,worse,23) output(39,worse,50) output(46,worse,23) output(46,worse,50) output(14,worse,15) output(14,worse,23) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(1,eq,15) output(48,eq,60) output(21,eq,14)
Optimization: 19 4
Answer: 7
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,8),1,for(atom(hasOftenSold(0))),12) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,less(weight)) output(21,better,39) output(21,better,46) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,46) output(39,better,50) output(39,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,46) output(14,better,50) output(14,better,60) output(48,better,50) output(21,worse,15) output(21,worse,23) output(39,worse,15) output(39,worse,23) output(46,worse,23) output(14,worse,15) output(14,worse,23) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(1,eq,15) output(48,eq,60) output(21,eq,14)
Optimization: 17 5
Answer: 8
preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,2),1,for(atom(hasOftenSold(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,50) output(23,better,50) output(39,better,50) output(15,better,46) output(15,better,50) output(46,better,50) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(48,better,21) output(48,better,39) output(48,better,15) output(48,better,46) output(48,better,23) output(48,better,50) output(21,worse,14) output(21,worse,60) output(23,worse,60) output(39,worse,15) output(39,worse,23) output(39,worse,60) output(15,worse,23) output(15,worse,60) output(46,worse,23) output(46,worse,60) output(50,worse,60) output(48,worse,14) output(48,eq,60) output(21,eq,23) output(39,eq,46)
Optimization: 15 10
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),5) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),12) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),5) preference(1,less(weight)) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(39,better,15) output(39,better,23) output(39,better,50) output(39,better,60) output(15,better,50) output(46,better,23) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(48,better,15) output(48,better,23) output(48,better,50) output(21,worse,14) output(23,worse,60) output(15,worse,46) output(15,worse,60) output(1,worse,14) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,46) output(1,eq,21) output(48,eq,60) output(39,eq,46) output(15,eq,23)
Optimization: 14 10
Progression : [ 1;14] (Error: 13)
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasOftenSold(0))),9) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),3) preference(1,less(weight)) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,50) output(39,better,60) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(48,better,50) output(39,worse,23) output(15,worse,23) output(46,worse,23) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,eq,60) output(21,eq,14) output(15,eq,46)
Optimization: 13 9
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasOftenSold(0))),9) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),3) preference(1,less(weight)) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,50) output(39,better,60) output(15,better,46) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(48,better,50) output(39,worse,23) output(15,worse,23) output(46,worse,23) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,eq,60) output(21,eq,14)
Optimization: 12 9
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasOftenSold(0))),9) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),3) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),1) preference(1,less(weight)) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,50) output(39,better,60) output(15,better,46) output(15,better,50) output(15,better,60) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(48,better,50) output(39,worse,23) output(15,worse,23) output(46,worse,23) output(50,worse,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,eq,60)
Optimization: 11 10
Progression : [ 2;11] (Error: 4.5)
Progression : [ 3;11] (Error: 2.66667)
Progression : [ 4;11] (Error: 1.75)
Progression : [ 5;11] (Error: 1.2)
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),6) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasOftenSold(0))),1) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),7) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(39,better,15) output(39,better,46) output(39,better,23) output(39,better,50) output(15,better,46) output(15,better,23) output(15,better,50) output(46,better,23) output(46,better,50) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(48,better,14) output(48,better,39) output(48,better,15) output(48,better,46) output(48,better,23) output(48,better,50) output(23,worse,60) output(39,worse,60) output(15,worse,60) output(46,worse,60) output(14,worse,60) output(50,worse,60) output(48,worse,21) output(48,eq,60)
Optimization: 8 10
Progression : [6;8] (Error: 0.333333)
Progression : [7;8] (Error: 0.142857)
Progression : [8;8] (Error: 0)
Progression : 8 [ 1;10] (Error: 9)
Progression : 8 [ 2;10] (Error: 4)
Answer: 14
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),8) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),5) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),7) preference(1,(1,6),1,for(atom(hasOftenSold(0))),9) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(21,better,14) output(21,better,39) output(21,better,15) output(21,better,46) output(21,better,23) output(21,better,50) output(21,better,60) output(23,better,50) output(23,better,60) output(39,better,15) output(39,better,46) output(39,better,23) output(39,better,50) output(39,better,60) output(15,better,46) output(15,better,23) output(15,better,50) output(15,better,60) output(46,better,23) output(46,better,50) output(46,better,60) output(1,better,48) output(1,better,21) output(1,better,14) output(1,better,39) output(1,better,15) output(1,better,46) output(1,better,23) output(1,better,50) output(1,better,60) output(14,better,39) output(14,better,15) output(14,better,46) output(14,better,23) output(14,better,50) output(14,better,60) output(50,better,60) output(48,worse,21) output(48,worse,14) output(48,worse,39) output(48,worse,15) output(48,worse,46) output(48,worse,23) output(48,worse,50) output(48,eq,60)
Optimization: 8 9
SATISFIABLE

Models       : 14+
  Optimum    : unknown
Optimization : 8 9
Bounds       : 8 [2;9]
Calls        : 1
Time         : 1107.626s (Solving: 1102.10s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 4413.545s
Threads      : 4        (Winner: 0)

Choices      : 14168720 (Domain: 4756)
Conflicts    : 9191160  (Analyzed: 9191150)
Restarts     : 15369    (Average: 598.03 Last: 95388)
Model-Level  : 886.0   
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 9235233  (Deleted: 8721047)
  Binary     : 12368    (Ratio:   0.13%)
  Ternary    : 891      (Ratio:   0.01%)
  Conflict   : 9191150  (Average Length:  279.5 Ratio:  99.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 44083    (Average Length:   61.6 Ratio:   0.48%) 
  Distributed: 14697    (Ratio:   0.16% Average LBD: 3.18) 
  Integrated : 44091    (Ratio: 300.00% Unit: 1020 Average Jumps: 17.03)
Backjumps    : 9191150  (Average:  1.42 Max: 1842 Sum: 13079878)
  Executed   : 9191114  (Average:  1.42 Max: 1842 Sum: 13079719 Ratio: 100.00%)
  Bounded    : 36       (Average:  4.42 Max:  46 Sum:    159 Ratio:   0.00%)

Rules        : 1604748 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 456701  
Bodies       : 459947  
  Sum        : 270     
  Count      : 10      
Equivalences : 1356410  (Atom=Atom: 438513 Body=Body: 448144 Other: 469753)
Tight        : Yes
Variables    : 16675    (Eliminated:    0 Frozen: 11715)
Constraints  : 1181671  (Binary:  98.9% Ternary:   0.4% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPrice(0))  ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPrice(0))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPrice(0))  ; 
  12 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOftenSold(1)) ; 
  5 :: not atom(hasPrice(0))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasPriceLevel(0)) ; 
  5 :: not atom(hasPriceLevel(1))  ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  12 :: not atom(hasOftenSold(1))  ; 
  9 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  9 :: not atom(hasOiliness(1))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOilyLevel(2)) ; 
  5 :: not atom(hasOftenSold(0))  ; 
  12 :: atom(hasOilyLevel(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  9 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasOilyLevel(2))  ; 
  11 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  5 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  9 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasOilyLevel(2))  ; 
  11 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  9 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasOilyLevel(2))  ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: not atom(hasMinorGrp(3))  ; 
  1 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasOilyLevel(2)) ; 
  8 :: not atom(hasPriceLevel(1))  ; 
  7 :: atom(hasPriceLevel(2)) ; 
  12 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasOilyLevel(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasOilyLevel(2)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  5 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasPriceLevel(2)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  8 :: not atom(hasPriceLevel(1))  
}.
Time limit reached
