asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,0) output(9,eq,3) output(9,eq,5) output(9,eq,8) output(9,eq,6) output(9,eq,7) output(9,eq,1) output(9,eq,2) output(0,eq,3) output(0,eq,5) output(0,eq,8) output(0,eq,6) output(0,eq,7) output(0,eq,1) output(0,eq,2) output(3,eq,5) output(3,eq,8) output(3,eq,6) output(3,eq,7) output(3,eq,1) output(3,eq,2) output(5,eq,8) output(5,eq,6) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(8,eq,6) output(8,eq,7) output(8,eq,1) output(8,eq,2) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,less(weight)) output(3,better,8) output(3,better,6) output(5,better,8) output(5,better,6) output(0,better,8) output(0,better,6) output(9,better,8) output(9,better,6) output(8,worse,7) output(8,worse,1) output(8,worse,2) output(6,worse,7) output(6,worse,1) output(6,worse,2) output(9,eq,0) output(9,eq,3) output(9,eq,5) output(9,eq,7) output(9,eq,1) output(9,eq,2) output(0,eq,3) output(0,eq,5) output(0,eq,7) output(0,eq,1) output(0,eq,2) output(3,eq,5) output(3,eq,7) output(3,eq,1) output(3,eq,2) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(8,eq,6) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 28 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(3,better,8) output(3,better,6) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,1) output(0,better,8) output(0,better,6) output(0,better,1) output(9,better,8) output(9,better,6) output(9,better,1) output(7,better,1) output(8,worse,7) output(8,worse,2) output(1,worse,2) output(6,worse,7) output(6,worse,2) output(9,eq,0) output(9,eq,3) output(9,eq,5) output(9,eq,7) output(9,eq,2) output(0,eq,3) output(0,eq,5) output(0,eq,7) output(0,eq,2) output(3,eq,5) output(3,eq,7) output(3,eq,2) output(5,eq,7) output(5,eq,2) output(8,eq,6) output(8,eq,1) output(6,eq,1) output(7,eq,2)
Optimization: 23 1
Answer: 4
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(3,better,8) output(3,better,1) output(3,better,2) output(5,better,8) output(5,better,1) output(5,better,2) output(0,better,8) output(0,better,1) output(0,better,2) output(9,better,8) output(9,better,1) output(9,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(8,worse,6) output(8,worse,7) output(9,eq,0) output(9,eq,3) output(9,eq,5) output(9,eq,6) output(9,eq,7) output(0,eq,3) output(0,eq,5) output(0,eq,6) output(0,eq,7) output(3,eq,5) output(3,eq,6) output(3,eq,7) output(5,eq,6) output(5,eq,7) output(8,eq,1) output(8,eq,2) output(6,eq,7) output(1,eq,2)
Optimization: 20 1
Progression : [ 1;20] (Error: 19)
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),2) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),8) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),11) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(8,better,2) output(3,better,1) output(3,better,2) output(5,better,1) output(5,better,2) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,5) output(9,better,7) output(9,better,1) output(9,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(8,worse,6) output(1,worse,2) output(3,worse,8) output(3,worse,6) output(5,worse,8) output(5,worse,6) output(0,worse,3) output(0,worse,5) output(0,worse,8) output(0,worse,6) output(0,worse,7) output(9,worse,8) output(9,worse,6) output(0,eq,2) output(3,eq,5) output(3,eq,7) output(5,eq,7)
Optimization: 17 10
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),10) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),11) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(8,better,2) output(3,better,1) output(3,better,2) output(5,better,1) output(5,better,2) output(0,better,1) output(0,better,2) output(9,better,0) output(9,better,3) output(9,better,5) output(9,better,7) output(9,better,1) output(9,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(8,worse,6) output(1,worse,2) output(3,worse,8) output(3,worse,6) output(5,worse,8) output(5,worse,6) output(0,worse,3) output(0,worse,5) output(0,worse,8) output(0,worse,6) output(0,worse,7) output(9,worse,8) output(9,worse,6) output(3,eq,5) output(3,eq,7) output(5,eq,7)
Optimization: 16 10
Answer: 7
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,1),1,for(atom(hasPrice(0))),11) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),7) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(8,better,2) output(1,better,2) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(3,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(0,better,3) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(9,better,0) output(9,better,3) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(3,eq,5)
Optimization: 1 10
Progression : 1 [ 1;10] (Error: 9)
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),6) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),9) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(8,better,2) output(1,better,2) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(3,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(0,better,3) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(9,better,0) output(9,better,3) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(3,eq,5)
Optimization: 1 9
Progression : 1 [2;9] (Error: 3.5)
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,6),1,for(atom(hasOilyLevel(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(8,better,2) output(1,better,2) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(3,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(0,better,3) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(9,better,0) output(9,better,3) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(3,eq,5)
Optimization: 1 8
Answer: 10
preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),11) preference(1,(1,2),1,for(atom(hasPrice(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),1) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(8,better,2) output(1,better,2) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(3,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(0,better,3) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(9,better,0) output(9,better,3) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(3,eq,5)
Optimization: 1 7
SATISFIABLE

Models       : 10+
  Optimum    : unknown
Optimization : 1 7
Bounds       : 1 [2;7]
Calls        : 1
Time         : 680.851s (Solving: 675.79s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2707.810s
Threads      : 4        (Winner: 0)

Choices      : 13646030 (Domain: 13370)
Conflicts    : 3349480  (Analyzed: 3349477)
Restarts     : 4891     (Average: 684.82 Last: 117087)
Model-Level  : 459.9   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 3366975  (Deleted: 3084236)
  Binary     : 1435     (Ratio:   0.04%)
  Ternary    : 871      (Ratio:   0.03%)
  Conflict   : 3349476  (Average Length:  907.1 Ratio:  99.48%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 17499    (Average Length:  101.0 Ratio:   0.52%) 
  Distributed: 5834     (Ratio:   0.17% Average LBD: 3.46) 
  Integrated : 17502    (Ratio: 300.00% Unit: 49 Average Jumps: 74.61)
Backjumps    : 3349477  (Average:  3.01 Max: 1987 Sum: 10095691)
  Executed   : 3349469  (Average:  3.01 Max: 1987 Sum: 10095483 Ratio: 100.00%)
  Bounded    : 8        (Average: 26.00 Max:  32 Sum:    208 Ratio:   0.00%)

Rules        : 1299435 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 367739  
Bodies       : 371852  
  Sum        : 216     
  Count      : 10      
Equivalences : 1092152  (Atom=Atom: 351459 Body=Body: 360148 Other: 380545)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPriceLevel(1)) ; 
  7 :: not atom(hasOilyLevel(1))  ; 
  10 :: atom(hasOilyLevel(1)) ; 
  2 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  2 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasPrice(0)) ; 
  12 :: not atom(hasOftenSold(0))  ; 
  7 :: not atom(hasPriceLevel(1))  ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasMinorGrp(1))  ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  10 :: atom(hasOilyLevel(1)) ; 
  8 :: atom(hasPriceLevel(1)) ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  2 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasPrice(0)) ; 
  12 :: not atom(hasOftenSold(0))  ; 
  7 :: not atom(hasPriceLevel(1))  ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMinorGrp(2))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  7 :: atom(hasPriceLevel(2)) ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasOiliness(0))  ; 
  11 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPrice(1))  ; 
  6 :: not atom(hasOilyLevel(2))  ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasMinorGrp(1))  ; 
  10 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOilyLevel(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasOilyLevel(1)) ; 
  11 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasOilyLevel(2)) 
}.
Time limit reached
