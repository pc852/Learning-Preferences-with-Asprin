asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,9) output(20,eq,44) output(20,eq,32) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,68) output(10,eq,12) output(10,eq,9) output(10,eq,44) output(10,eq,32) output(10,eq,8) output(10,eq,11) output(10,eq,19) output(68,eq,12) output(68,eq,9) output(68,eq,44) output(68,eq,32) output(68,eq,8) output(68,eq,11) output(68,eq,19) output(12,eq,9) output(12,eq,44) output(12,eq,32) output(12,eq,8) output(12,eq,11) output(12,eq,19) output(9,eq,44) output(9,eq,32) output(9,eq,8) output(9,eq,11) output(9,eq,19) output(44,eq,32) output(44,eq,8) output(44,eq,11) output(44,eq,19) output(32,eq,8) output(32,eq,11) output(32,eq,19) output(8,eq,11) output(8,eq,19) output(11,eq,19)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(20,better,44) output(10,better,44) output(12,better,44) output(68,better,44) output(9,better,44) output(44,worse,32) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,9) output(20,eq,32) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,68) output(10,eq,12) output(10,eq,9) output(10,eq,32) output(10,eq,8) output(10,eq,11) output(10,eq,19) output(68,eq,12) output(68,eq,9) output(68,eq,32) output(68,eq,8) output(68,eq,11) output(68,eq,19) output(12,eq,9) output(12,eq,32) output(12,eq,8) output(12,eq,11) output(12,eq,19) output(9,eq,32) output(9,eq,8) output(9,eq,11) output(9,eq,19) output(32,eq,8) output(32,eq,11) output(32,eq,19) output(8,eq,11) output(8,eq,19) output(11,eq,19)
Optimization: 40 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,8) output(20,better,19) output(10,better,8) output(10,better,19) output(12,better,8) output(12,better,19) output(68,better,8) output(68,better,19) output(9,better,8) output(9,better,19) output(44,better,8) output(44,better,19) output(8,worse,11) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,9) output(20,eq,44) output(20,eq,32) output(20,eq,11) output(10,eq,68) output(10,eq,12) output(10,eq,9) output(10,eq,44) output(10,eq,32) output(10,eq,11) output(68,eq,12) output(68,eq,9) output(68,eq,44) output(68,eq,32) output(68,eq,11) output(12,eq,9) output(12,eq,44) output(12,eq,32) output(12,eq,11) output(9,eq,44) output(9,eq,32) output(9,eq,11) output(44,eq,32) output(44,eq,11) output(32,eq,11) output(8,eq,19)
Optimization: 30 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),4) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,9) output(20,better,44) output(20,better,8) output(20,better,19) output(10,better,9) output(10,better,44) output(10,better,8) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,8) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,8) output(68,better,19) output(8,worse,11) output(9,worse,32) output(9,worse,11) output(44,worse,32) output(44,worse,11) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,32) output(20,eq,11) output(10,eq,68) output(10,eq,12) output(10,eq,32) output(10,eq,11) output(68,eq,12) output(68,eq,32) output(68,eq,11) output(12,eq,32) output(12,eq,11) output(9,eq,44) output(9,eq,8) output(9,eq,19) output(44,eq,8) output(44,eq,19) output(32,eq,11) output(8,eq,19)
Optimization: 26 1
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,8) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,19) output(9,better,8) output(9,better,19) output(44,better,8) output(44,better,19) output(32,worse,11) output(8,worse,11) output(10,worse,68) output(10,worse,12) output(10,worse,11) output(9,worse,11) output(44,worse,11) output(20,eq,68) output(20,eq,12) output(20,eq,11) output(10,eq,9) output(10,eq,44) output(10,eq,32) output(68,eq,12) output(68,eq,11) output(12,eq,11) output(9,eq,44) output(9,eq,32) output(44,eq,32) output(8,eq,19)
Optimization: 20 2
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,8) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,19) output(9,better,8) output(9,better,19) output(44,better,8) output(44,better,19) output(32,worse,11) output(8,worse,11) output(10,worse,68) output(10,worse,12) output(10,worse,44) output(10,worse,32) output(10,worse,11) output(12,worse,11) output(68,worse,11) output(9,worse,44) output(9,worse,32) output(9,worse,11) output(44,worse,11) output(20,eq,11) output(10,eq,9) output(68,eq,12) output(44,eq,32) output(8,eq,19)
Optimization: 18 3
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,19) output(9,better,44) output(9,better,8) output(9,better,19) output(32,worse,11) output(8,worse,11) output(20,worse,10) output(20,worse,11) output(10,worse,11) output(12,worse,11) output(68,worse,11) output(9,worse,32) output(9,worse,11) output(44,worse,32) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(20,eq,68) output(20,eq,12) output(68,eq,12) output(8,eq,19)
Optimization: 17 6
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,19) output(9,better,44) output(9,better,8) output(9,better,19) output(32,worse,11) output(8,worse,11) output(20,worse,10) output(9,worse,32) output(9,worse,11) output(44,worse,32) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(20,eq,68) output(20,eq,12) output(20,eq,11) output(68,eq,12) output(68,eq,11) output(12,eq,11) output(8,eq,19)
Optimization: 16 7
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,8) output(9,better,19) output(32,worse,11) output(8,worse,11) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(9,worse,32) output(9,worse,11) output(44,worse,32) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(20,eq,11) output(68,eq,12) output(8,eq,19)
Optimization: 14 8
Progression : [ 1;14] (Error: 13)
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),5) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),10) preference(1,(1,5),1,for(atom(hasOiliness(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),6) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(8,better,11) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,8) output(44,better,11) output(44,better,19) output(11,worse,19) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,9) output(20,worse,32) output(10,worse,12) output(68,worse,12) output(9,worse,32) output(44,worse,32) output(20,eq,44) output(10,eq,68) output(8,eq,19)
Optimization: 13 10
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),12) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasOftenSold(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,9) output(20,worse,44) output(10,worse,68) output(12,worse,9) output(12,worse,44) output(20,eq,32) output(8,eq,19)
Optimization: 11 10
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasOftenSold(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,12) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,12) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(32,worse,11) output(8,worse,11) output(20,worse,68) output(10,worse,68) output(12,worse,9) output(12,worse,44) output(12,eq,11) output(8,eq,19)
Optimization: 8 10
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),10) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),9) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(8,better,11) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(11,worse,19) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(10,worse,68) output(10,worse,12) output(8,eq,19)
Optimization: 7 10
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),10) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),9) preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),11) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(8,better,11) output(20,better,68) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(11,worse,19) output(20,worse,10) output(20,worse,12) output(10,worse,12) output(68,worse,12) output(8,eq,19)
Optimization: 6 10
Progression : [2;6] (Error: 2)
Answer: 15
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,4),1,for(neg(atom(hasPrice(1)))),10) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),11) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,eq,11) output(8,eq,19) output(11,eq,19)
Optimization: 3 9
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,4),1,for(neg(atom(hasPrice(1)))),10) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),11) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(8,eq,19)
Optimization: 2 10
Progression : 2 [ 1;10] (Error: 9)
Progression : 2 [ 2;10] (Error: 4)
Answer: 17
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(2)))),11) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(2)))),11) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),2) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),10) preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,9) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,9) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,9) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,9) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(8,eq,19)
Optimization: 2 9
SATISFIABLE

Models       : 17+
  Optimum    : unknown
Optimization : 2 9
Bounds       : 2 [2;9]
Calls        : 1
Time         : 662.652s (Solving: 656.50s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2631.573s
Threads      : 4        (Winner: 0)

Choices      : 10045419 (Domain: 2873)
Conflicts    : 3081649  (Analyzed: 3081645)
Restarts     : 3994     (Average: 771.57 Last: 213663)
Model-Level  : 775.5   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 3107922  (Deleted: 2911231)
  Binary     : 2853     (Ratio:   0.09%)
  Ternary    : 1706     (Ratio:   0.05%)
  Conflict   : 3081645  (Average Length:  721.3 Ratio:  99.15%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 26277    (Average Length:   77.7 Ratio:   0.85%) 
  Distributed: 8759     (Ratio:   0.28% Average LBD: 3.39) 
  Integrated : 26277    (Ratio: 300.00% Unit: 71 Average Jumps: 50.80)
Backjumps    : 3081645  (Average:  2.56 Max: 2282 Sum: 7901636)
  Executed   : 3081627  (Average:  2.56 Max: 2282 Sum: 7901141 Ratio:  99.99%)
  Bounded    : 18       (Average: 27.50 Max:  46 Sum:    495 Ratio:   0.01%)

Rules        : 1588548 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 440501  
Bodies       : 443387  
  Sum        : 270     
  Count      : 10      
Equivalences : 1306730  (Atom=Atom: 422313 Body=Body: 431584 Other: 452833)
Tight        : Yes
Variables    : 16675    (Eliminated:    0 Frozen: 11715)
Constraints  : 1181671  (Binary:  98.9% Ternary:   0.4% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasOilyLevel(1))  ; 
  3 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasOilyLevel(1))  ; 
  3 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPrice(0))  ; 
  3 :: not atom(hasPrice(1))  ; 
  3 :: not atom(hasOftenSold(1))  ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  5 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPrice(0))  ; 
  3 :: not atom(hasPrice(1))  ; 
  3 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasOilyLevel(2)) ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  5 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPrice(0))  ; 
  3 :: not atom(hasPrice(1))  ; 
  3 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  5 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOftenSold(0))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  10 :: atom(hasOilyLevel(2)) ; 
  10 :: atom(hasOiliness(0)) ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasPriceLevel(2)) ; 
  3 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(1))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasOilyLevel(2)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  9 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: not atom(hasPriceLevel(2))  ; 
  8 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(1))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasOilyLevel(2)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  9 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: not atom(hasPriceLevel(2))  ; 
  8 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPriceLevel(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  3 :: atom(hasPrice(1)) ; 
  10 :: not atom(hasOftenSold(0))  ; 
  5 :: not atom(hasOiliness(1))  ; 
  9 :: not atom(hasMinorGrp(0))  ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPriceLevel(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  3 :: atom(hasPrice(1)) ; 
  10 :: not atom(hasOftenSold(0))  ; 
  5 :: not atom(hasOiliness(1))  ; 
  9 :: not atom(hasMinorGrp(0))  ; 
  11 :: not atom(hasOftenSold(1))  ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOilyLevel(2))  ; 
  5 :: not atom(hasMinorGrp(1))  ; 
  10 :: not atom(hasPrice(1))  ; 
  11 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  9 :: not atom(hasPriceLevel(2))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  ; 
  9 :: not atom(hasOilyLevel(2))  ; 
  5 :: not atom(hasMinorGrp(1))  ; 
  10 :: not atom(hasPrice(1))  ; 
  11 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  9 :: not atom(hasPriceLevel(2))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  11 :: not atom(hasPriceLevel(2))  ; 
  3 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasOiliness(0)) ; 
  10 :: not atom(hasPrice(0))  ; 
  8 :: atom(hasMinorGrp(0)) 
}.
Time limit reached
