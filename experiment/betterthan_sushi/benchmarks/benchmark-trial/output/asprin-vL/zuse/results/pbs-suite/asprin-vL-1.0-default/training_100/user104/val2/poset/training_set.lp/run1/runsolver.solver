asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(6,eq,51) output(6,eq,35) output(6,eq,59) output(6,eq,9) output(16,eq,20) output(16,eq,29) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(20,eq,29) output(20,eq,51) output(20,eq,35) output(20,eq,59) output(20,eq,9) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 36 0
Answer: 2
preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(11,better,51) output(11,better,35) output(11,better,59) output(20,better,51) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(6,better,51) output(16,better,51) output(29,better,51) output(29,better,35) output(29,better,59) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(11,worse,9) output(6,worse,9) output(16,worse,9) output(20,worse,9) output(29,worse,9) output(35,worse,9) output(59,worse,9) output(51,worse,9) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(16,eq,20) output(16,eq,29) output(20,eq,29) output(35,eq,59)
Optimization: 19 1
Answer: 3
preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,51) output(16,better,51) output(29,better,51) output(29,better,35) output(29,better,59) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(35,worse,9) output(59,worse,9) output(51,worse,9) output(11,eq,20) output(6,eq,16) output(6,eq,29) output(6,eq,9) output(16,eq,29) output(16,eq,9) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(35,eq,59)
Optimization: 15 1
Answer: 4
preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(11,eq,20) output(6,eq,16) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 14 1
Answer: 5
preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(11,worse,6) output(11,worse,16) output(29,worse,35) output(29,worse,59) output(51,worse,35) output(51,worse,59) output(11,eq,20) output(6,eq,16) output(29,eq,51) output(29,eq,9) output(51,eq,9) output(35,eq,59)
Optimization: 12 1
Answer: 6
preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(29,better,35) output(29,better,59) output(16,better,35) output(16,better,59) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(29,worse,9) output(35,worse,9) output(59,worse,9) output(51,worse,9) output(11,eq,20) output(6,eq,16) output(35,eq,59) output(29,unc,51)
Optimization: 10 2
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(35,worse,9) output(59,worse,9) output(6,worse,16) output(11,eq,20) output(35,eq,59) output(6,unc,29) output(6,unc,51)
Optimization: 9 3
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(11,better,6) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(6,worse,20) output(11,worse,16) output(6,worse,16) output(11,eq,20) output(35,eq,59) output(6,unc,29) output(6,unc,51)
Optimization: 7 3
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,4),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(6,better,16) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(11,worse,6) output(11,worse,16) output(11,worse,20) output(35,eq,59)
Optimization: 6 4
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(6,worse,20) output(16,worse,20) output(6,worse,16) output(11,eq,20) output(35,eq,59)
Optimization: 5 4
Answer: 11
preference(1,(1,1),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,1),2,for(atom(hasOftenSold(0))),()) preference(1,(1,2),2,for(atom(hasOftenSold(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(1))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(6,worse,16) output(11,worse,20)
Optimization: 4 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrice(1))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasOiliness(1))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),2,for(atom(hasOftenSold(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(2))),()) preference(1,poset) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(6,better,29) output(6,better,51) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(6,better,16) output(16,better,35) output(16,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(11,worse,20)
Optimization: 3 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.037 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 3 10
Calls        : 1
Time         : 1198.042s (Solving: 1194.10s 1st Model: 0.64s Unsat: 0.00s)
CPU Time     : 4777.094s
Threads      : 4        (Winner: 4)

Choices      : 8423021  (Domain: 4115)
Conflicts    : 670250   (Analyzed: 670250)
Restarts     : 722      (Average: 928.32 Last: 31735)
Model-Level  : 607.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 39942744 (Deleted: 39689253)
  Binary     : 6120     (Ratio:   0.02%)
  Ternary    : 135350   (Ratio:   0.34%)
  Conflict   : 670250   (Average Length:  774.2 Ratio:   1.68%) 
  Loop       : 39098988 (Average Length:  166.6 Ratio:  97.89%) 
  Other      : 173506   (Average Length:    3.8 Ratio:   0.43%) 
  Distributed: 58217    (Ratio:   0.15% Average LBD: 2.91) 
  Integrated : 174651   (Ratio: 300.00% Unit: 399 Average Jumps: 783.67)
Backjumps    : 670250   (Average: 10.67 Max: 55029 Sum: 7154786)
  Executed   : 670222   (Average: 10.67 Max: 55029 Sum: 7154704 Ratio: 100.00%)
  Bounded    : 28       (Average:  2.93 Max:  37 Sum:     82 Ratio:   0.00%)

Rules        : 723472  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 23297   
Bodies       : 510665  
  Count      : 40      
Equivalences : 23743    (Atom=Atom: 4182 Body=Body: 5577 Other: 13984)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490823   (Eliminated:    0 Frozen: 483866)
Constraints  : 2823128  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(2)) 
}.
