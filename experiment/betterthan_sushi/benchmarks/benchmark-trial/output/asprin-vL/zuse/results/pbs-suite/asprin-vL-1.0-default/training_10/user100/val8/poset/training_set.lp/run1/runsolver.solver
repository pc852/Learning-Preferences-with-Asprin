asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(3,eq,5) output(6,eq,4) preference(1,poset) output(7,eq,2) output(7,eq,1) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(7,eq,0) output(7,eq,4) output(7,eq,5) output(2,eq,1) output(2,eq,3) output(2,eq,6) output(2,eq,9) output(2,eq,0) output(2,eq,4) output(2,eq,5) output(1,eq,3) output(1,eq,6) output(1,eq,9) output(1,eq,0) output(1,eq,4) output(1,eq,5) output(3,eq,6) output(3,eq,9) output(3,eq,0) output(3,eq,4) output(6,eq,9) output(6,eq,0) output(6,eq,5) output(9,eq,0) output(9,eq,4) output(9,eq,5) output(0,eq,4) output(0,eq,5) output(4,eq,5)
Optimization: 36 0
Answer: 2
output(3,eq,5) output(6,eq,4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(7,worse,2) output(7,worse,1) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(7,eq,0) output(7,eq,4) output(7,eq,5) output(2,eq,1) output(3,eq,6) output(3,eq,9) output(3,eq,0) output(3,eq,4) output(6,eq,9) output(6,eq,0) output(6,eq,5) output(9,eq,0) output(9,eq,4) output(9,eq,5) output(0,eq,4) output(0,eq,5) output(4,eq,5)
Optimization: 24 1
Answer: 3
output(3,eq,5) output(6,eq,4) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(6,better,5) output(4,better,5) output(9,better,5) output(0,better,5) output(7,worse,2) output(7,worse,1) output(7,worse,9) output(7,worse,0) output(3,worse,6) output(3,worse,4) output(7,worse,6) output(7,worse,4) output(3,worse,9) output(3,worse,0) output(7,eq,3) output(7,eq,5) output(2,eq,1) output(6,eq,9) output(6,eq,0) output(9,eq,0) output(9,eq,4) output(0,eq,4)
Optimization: 20 1
Answer: 4
output(3,eq,5) output(6,eq,4) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(7,better,6) output(7,better,4) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5) output(7,unc,2) output(7,unc,1)
Optimization: 14 2
Answer: 5
output(3,eq,5) output(6,eq,4) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,2) output(7,better,1) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(7,better,6) output(7,better,4) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(9,eq,5) output(0,eq,5)
Optimization: 12 3
Answer: 6
output(3,eq,5) output(6,eq,4) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasPrice(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(1))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,2) output(7,better,1) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(9,better,5) output(7,better,6) output(7,better,4) output(0,better,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(3,worse,9) output(3,worse,0) output(2,eq,1) output(9,eq,0)
Optimization: 10 5
Answer: 7
output(3,eq,5) output(6,eq,4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasPrice(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(hasOftenSold(1))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(1))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(2,better,5) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(1,better,5) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,2) output(7,better,1) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,5) output(9,better,5) output(7,better,6) output(7,better,4) output(2,better,1) output(0,better,5) output(6,worse,9) output(6,worse,0) output(6,worse,5) output(4,worse,5) output(3,worse,9) output(3,worse,0) output(9,eq,0)
Optimization: 9 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.057 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 9 5
Calls        : 1
Time         : 597.376s (Solving: 592.98s 1st Model: 0.81s Unsat: 0.00s)
CPU Time     : 2375.534s
Threads      : 4        (Winner: 4)

Choices      : 4966001  (Domain: 5642)
Conflicts    : 264705   (Analyzed: 264705)
Restarts     : 333      (Average: 794.91 Last: 18637)
Model-Level  : 182.1   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 19236046 (Deleted: 19077448)
  Binary     : 3039     (Ratio:   0.02%)
  Ternary    : 67390    (Ratio:   0.35%)
  Conflict   : 264705   (Average Length: 1337.9 Ratio:   1.38%) 
  Loop       : 18880336 (Average Length:  161.3 Ratio:  98.15%) 
  Other      : 91005    (Average Length:    3.7 Ratio:   0.47%) 
  Distributed: 30400    (Ratio:   0.16% Average LBD: 2.88) 
  Integrated : 91200    (Ratio: 300.00% Unit: 361 Average Jumps: 1451.48)
Backjumps    : 264705   (Average: 14.35 Max: 63717 Sum: 3797708)
  Executed   : 264669   (Average: 14.35 Max: 63717 Sum: 3797580 Ratio: 100.00%)
  Bounded    : 36       (Average:  3.56 Max:  35 Sum:    128 Ratio:   0.00%)

Rules        : 942766  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 23482   
Bodies       : 683578  
  Count      : 48      
Equivalences : 24391    (Atom=Atom: 4219 Body=Body: 5837 Other: 14335)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 642960 Gammas: 0)
Variables    : 652688   (Eliminated:    0 Frozen: 645310)
Constraints  : 3837947  (Binary:  82.6% Ternary:   3.5% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) 
}.
