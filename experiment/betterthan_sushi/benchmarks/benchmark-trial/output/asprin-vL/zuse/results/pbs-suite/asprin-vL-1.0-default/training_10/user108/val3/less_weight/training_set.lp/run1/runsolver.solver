asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,2) output(7,eq,5) output(7,eq,0) output(7,eq,1) output(7,eq,6) output(7,eq,8) output(7,eq,9) output(7,eq,4) output(2,eq,5) output(2,eq,0) output(2,eq,1) output(2,eq,6) output(2,eq,8) output(2,eq,9) output(2,eq,4) output(5,eq,0) output(5,eq,1) output(5,eq,6) output(5,eq,8) output(5,eq,9) output(5,eq,4) output(0,eq,1) output(0,eq,6) output(0,eq,8) output(0,eq,9) output(0,eq,4) output(1,eq,6) output(1,eq,8) output(1,eq,9) output(1,eq,4) output(6,eq,8) output(6,eq,9) output(6,eq,4) output(8,eq,9) output(8,eq,4) output(9,eq,4)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,6) output(7,better,8) output(7,better,4) output(8,worse,9) output(6,worse,9) output(7,eq,2) output(7,eq,5) output(7,eq,0) output(7,eq,1) output(7,eq,9) output(2,eq,5) output(2,eq,0) output(2,eq,1) output(2,eq,9) output(5,eq,0) output(5,eq,1) output(5,eq,9) output(0,eq,1) output(0,eq,9) output(1,eq,9) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 20 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(8,worse,9) output(1,worse,9) output(6,worse,9) output(7,eq,2) output(7,eq,5) output(7,eq,0) output(7,eq,9) output(2,eq,5) output(2,eq,0) output(2,eq,9) output(5,eq,0) output(5,eq,9) output(0,eq,9) output(1,eq,6) output(1,eq,8) output(1,eq,4) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 19 1
Answer: 4
preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(2,better,1) output(2,better,8) output(1,better,8) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(2,worse,5) output(2,worse,0) output(2,worse,6) output(2,worse,9) output(2,worse,4) output(8,worse,9) output(8,worse,4) output(1,worse,6) output(1,worse,9) output(1,worse,4) output(6,worse,9) output(7,eq,5) output(7,eq,0) output(7,eq,9) output(5,eq,0) output(5,eq,9) output(0,eq,9) output(6,eq,4)
Optimization: 18 3
Answer: 5
preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(2,better,8) output(1,better,8) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(2,worse,5) output(2,worse,0) output(2,worse,6) output(2,worse,9) output(2,worse,4) output(8,worse,9) output(8,worse,4) output(1,worse,6) output(1,worse,9) output(1,worse,4) output(6,worse,9) output(7,eq,5) output(7,eq,0) output(2,eq,1) output(5,eq,0) output(6,eq,4)
Optimization: 16 3
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,9),1,for(atom(hasPrice(1))),5) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(2,worse,5) output(2,worse,0) output(2,worse,9) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(6,worse,9) output(7,eq,5) output(7,eq,0) output(7,eq,9) output(2,eq,1) output(5,eq,0) output(5,eq,9) output(0,eq,9) output(6,eq,4)
Optimization: 15 5
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(2,worse,5) output(2,worse,0) output(2,worse,9) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(5,worse,9) output(0,worse,9) output(6,worse,9) output(7,worse,9) output(7,eq,5) output(7,eq,0) output(5,eq,0) output(6,eq,4)
Optimization: 14 7
Answer: 8
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),12) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,5),1,for(atom(hasPrice(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,6) output(7,better,8) output(7,better,4) output(2,worse,5) output(2,worse,0) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(6,worse,9) output(7,worse,2) output(7,worse,5) output(7,worse,0) output(7,worse,1) output(7,worse,9) output(5,eq,0) output(6,eq,4)
Optimization: 13 9
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),12) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,4) output(2,worse,5) output(2,worse,0) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(6,worse,9) output(7,worse,2) output(7,worse,5) output(7,worse,0) output(7,eq,9) output(5,eq,0) output(6,eq,4)
Optimization: 12 10
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),12) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(2,worse,5) output(2,worse,0) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(6,worse,9) output(7,worse,2) output(7,worse,5) output(7,worse,0) output(5,eq,0) output(6,eq,4)
Optimization: 11 9
Answer: 11
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,10),1,for(atom(hasOiliness(0))),9) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(2,worse,5) output(2,worse,0) output(8,worse,9) output(8,worse,4) output(1,worse,6) output(1,worse,9) output(1,worse,4) output(6,worse,9) output(1,eq,8) output(6,eq,4)
Optimization: 10 9
Progression : [ 1;10] (Error: 9)
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),4) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(2)))),11) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),10) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(2,worse,5) output(2,worse,0) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(6,worse,9) output(2,eq,9) output(5,eq,0) output(6,eq,4)
Optimization: 9 10
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),10) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),10) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(2)))),11) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),4) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(2,worse,5) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(0,worse,9) output(6,worse,9) output(2,eq,9) output(6,eq,4)
Optimization: 8 10
Answer: 14
preference(1,(1,1),1,for(neg(atom(hasOiliness(1)))),7) preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),10) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),4) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(2)))),11) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),2) preference(1,less(weight)) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(1,better,6) output(1,better,8) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(6,better,8) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(2,worse,5) output(2,worse,0) output(8,worse,9) output(8,worse,4) output(1,worse,9) output(6,worse,9) output(6,eq,4)
Optimization: 7 10
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasPrice(1)))),9) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),5) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),11) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(6,better,9) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(5,worse,1) output(0,worse,1) output(9,worse,4) output(6,worse,8) output(5,eq,0) output(6,eq,4)
Optimization: 6 10
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasPrice(0))),9) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),2) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),10) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(6,better,9) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(9,worse,4) output(5,eq,0) output(6,eq,8) output(6,eq,4) output(8,eq,4)
Optimization: 5 10
Answer: 17
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),1) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),9) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),10) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,2),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(6,better,9) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(9,worse,4) output(6,worse,8) output(5,eq,0) output(6,eq,4)
Optimization: 4 10
Progression : [2;4] (Error: 1)
Answer: 18
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),6) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(2)))),7) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),10) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,8),1,for(atom(hasPrice(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(6,better,9) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(9,worse,4) output(6,worse,8) output(6,eq,4)
Optimization: 3 10
Progression : [3;3] (Error: 0)
Progression : 3 [ 1;10] (Error: 9)
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,4),1,for(neg(atom(hasOiliness(1)))),12) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),11) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(6,worse,8) output(6,worse,9) output(6,eq,4)
Optimization: 3 9
Progression : 3 [2;9] (Error: 3.5)
Answer: 20
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(6,worse,8) output(6,worse,9) output(6,eq,4)
Optimization: 3 8
Answer: 21
preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),8) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(6,worse,8) output(6,worse,9) output(6,eq,4)
Optimization: 3 7
Answer: 22
preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),10) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),7) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),2) preference(1,less(weight)) output(2,better,5) output(2,better,0) output(2,better,1) output(2,better,6) output(2,better,8) output(2,better,9) output(2,better,4) output(8,better,9) output(8,better,4) output(1,better,6) output(1,better,8) output(1,better,9) output(1,better,4) output(5,better,0) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,9) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,9) output(0,better,4) output(9,better,4) output(7,better,2) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,6) output(7,better,8) output(7,better,9) output(7,better,4) output(6,worse,8) output(6,worse,9) output(6,eq,4)
Optimization: 3 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.088 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 3 6
Bounds       : 3 [2;6]
Calls        : 1
Time         : 1195.483s (Solving: 1191.26s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 4768.600s
Threads      : 4        (Winner: 4)

Choices      : 21633769 (Domain: 18037)
Conflicts    : 6428276  (Analyzed: 6428270)
Restarts     : 8350     (Average: 769.85 Last: 162252)
Model-Level  : 997.8   
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 6453589  (Deleted: 6083497)
  Binary     : 1777     (Ratio:   0.03%)
  Ternary    : 1391     (Ratio:   0.02%)
  Conflict   : 6428270  (Average Length:  715.4 Ratio:  99.61%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 25319    (Average Length:   85.0 Ratio:   0.39%) 
  Distributed: 8440     (Ratio:   0.13% Average LBD: 3.51) 
  Integrated : 25320    (Ratio: 300.00% Unit: 111 Average Jumps: 59.49)
Backjumps    : 6428270  (Average:  2.70 Max: 2030 Sum: 17372363)
  Executed   : 6428260  (Average:  2.70 Max: 2030 Sum: 17372237 Ratio: 100.00%)
  Bounded    : 10       (Average: 12.60 Max:  37 Sum:    126 Ratio:   0.00%)

Rules        : 1299435 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 367739  
Bodies       : 371852  
  Sum        : 216     
  Count      : 10      
Equivalences : 1092152  (Atom=Atom: 351459 Body=Body: 360148 Other: 380545)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPrice(0))  ; 
  9 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasOilyLevel(1))  ; 
  8 :: atom(hasPrice(1)) ; 
  12 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasPrice(0))  ; 
  2 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  ; 
  8 :: atom(hasPrice(1)) ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  9 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasOiliness(1))  ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  ; 
  8 :: atom(hasPrice(1)) ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasOiliness(1))  ; 
  5 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPriceLevel(1)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(1)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  11 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOilyLevel(2)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  11 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasPrice(1))  ; 
  11 :: not atom(hasMinorGrp(2))  ; 
  6 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: not atom(hasPrice(0))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasOiliness(1))  ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMinorGrp(0))  ; 
  10 :: not atom(hasMinorGrp(1))  ; 
  4 :: atom(hasPriceLevel(1)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: not atom(hasPrice(0))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasOiliness(1))  ; 
  11 :: not atom(hasMinorGrp(2))  ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasOiliness(1))  ; 
  10 :: not atom(hasOftenSold(0))  ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPrice(0))  ; 
  8 :: atom(hasPrice(1)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasPriceLevel(1)) ; 
  4 :: not atom(hasMinorGrp(0))  ; 
  11 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasPrice(1))  ; 
  5 :: not atom(hasMinorGrp(2))  ; 
  11 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  10 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasOilyLevel(1))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  6 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOilyLevel(2)) ; 
  10 :: atom(hasPriceLevel(2)) ; 
  3 :: atom(hasOilyLevel(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  9 :: not atom(hasPrice(1))  ; 
  10 :: not atom(hasPrice(0))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  7 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPriceLevel(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: not atom(hasPriceLevel(1))  ; 
  6 :: not atom(hasMinorGrp(0))  ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  3 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: not atom(hasOilyLevel(2))  ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  12 :: not atom(hasOiliness(1))  ; 
  8 :: atom(hasOilyLevel(2)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  11 :: atom(hasMinorGrp(1)) ; 
  6 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  12 :: atom(hasOiliness(0)) ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  8 :: not atom(hasOilyLevel(1))  ; 
  9 :: atom(hasPriceLevel(2)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPriceLevel(1)) ; 
  12 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasOilyLevel(1))  ; 
  8 :: not atom(hasPrice(0))  ; 
  11 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasOiliness(1))  ; 
  9 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPriceLevel(1)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasPrice(0))  
}.
