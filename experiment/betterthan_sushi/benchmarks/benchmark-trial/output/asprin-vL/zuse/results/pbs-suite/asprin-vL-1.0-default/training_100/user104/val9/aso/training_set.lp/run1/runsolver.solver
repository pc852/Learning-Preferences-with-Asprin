asprin_vL version 1.0
Reading from stdin
-:328:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:353:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:434:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:708:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:885:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1086:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1090:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1096:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1195:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1221:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1341:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1375:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1397:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:245:1-16: info: no atoms over signature occur in program:
  output/3

-:237:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:238:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:239:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:240:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:270:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,51) output(2,better,51) output(6,better,51) output(16,better,51) output(20,better,51) output(29,better,51) output(51,worse,35) output(51,worse,59) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(11,eq,35) output(11,eq,59) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,29) output(2,eq,35) output(2,eq,59) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(6,eq,35) output(6,eq,59) output(16,eq,20) output(16,eq,29) output(16,eq,35) output(16,eq,59) output(20,eq,29) output(20,eq,35) output(20,eq,59) output(29,eq,35) output(29,eq,59) output(35,eq,59)
Optimization: 30 6
Answer: 2
preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,51) output(2,better,51) output(6,better,16) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,51) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(11,worse,6) output(11,worse,20) output(11,worse,29) output(2,worse,6) output(2,worse,20) output(2,worse,29) output(16,worse,20) output(16,worse,29) output(51,worse,35) output(51,worse,59) output(11,eq,2) output(11,eq,16) output(11,eq,35) output(11,eq,59) output(2,eq,16) output(2,eq,35) output(2,eq,59) output(6,eq,20) output(6,eq,29) output(16,eq,35) output(16,eq,59) output(20,eq,29) output(35,eq,59)
Optimization: 23 7
Answer: 3
preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,51) output(2,better,35) output(2,better,59) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(6,worse,20) output(6,worse,29) output(16,worse,20) output(16,worse,29) output(11,eq,2) output(11,eq,20) output(11,eq,29) output(2,eq,20) output(2,eq,29) output(6,eq,16) output(6,eq,35) output(6,eq,59) output(16,eq,35) output(16,eq,59) output(20,eq,29) output(35,eq,59)
Optimization: 20 7
Answer: 4
preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,worse,35) output(51,worse,59) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,29) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(16,eq,20) output(16,eq,29) output(20,eq,29) output(35,eq,59)
Optimization: 18 7
Answer: 5
preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(51,worse,35) output(51,worse,59) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(6,eq,16) output(6,eq,20) output(16,eq,20) output(29,eq,35) output(29,eq,59) output(35,eq,59)
Optimization: 15 7
Answer: 6
preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(16,worse,20) output(11,eq,2) output(6,eq,20) output(16,eq,29) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(51,eq,35) output(51,eq,59) output(35,eq,59)
Optimization: 13 1
Progression : [ 1;13] (Error: 12)
Answer: 7
preference(1,(1,5),0,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,8),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),3,for(atom(hasOilyLevel(0))),()) preference(1,aso) output(11,better,2) output(11,better,6) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,29) output(2,better,35) output(2,better,59) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(2,worse,6) output(2,worse,16) output(2,worse,20) output(6,worse,16) output(29,worse,51) output(11,eq,16) output(2,eq,51) output(6,eq,20)
Optimization: 10 3
Answer: 8
preference(1,(1,5),0,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,8),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),3,for(atom(hasPrice(0))),()) preference(1,(1,8),3,for(atom(hasOilyLevel(0))),()) preference(1,aso) output(11,better,2) output(11,better,6) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(35,better,59) output(2,worse,6) output(2,worse,16) output(2,worse,20) output(6,worse,16) output(11,eq,16) output(2,eq,29) output(6,eq,20)
Optimization: 9 3
Answer: 9
preference(1,(1,3),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrice(0)))),()) preference(1,(1,6),0,for(atom(hasOiliness(1))),()) preference(1,(1,7),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),3,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(16,worse,20) output(11,eq,2) output(6,eq,20) output(16,eq,29) output(35,eq,59)
Optimization: 7 5
Progression : [2;7] (Error: 2.5)
Answer: 10
preference(1,(1,1),0,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),0,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20)
Optimization: 6 8
Progression : [3;6] (Error: 1)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,5),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),3,for(atom(hasOftenSold(0))),()) preference(1,(1,8),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(11,worse,2) output(16,worse,20)
Optimization: 3 8
Progression : 3 [1;8] (Error: 7)
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),0,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,8),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasOftenSold(0))),()) preference(1,(1,6),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(11,worse,2) output(16,worse,20)
Optimization: 3 7
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),0,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(11,worse,2) output(16,worse,20)
Optimization: 3 6
Answer: 14
preference(1,(1,2),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),0,for(atom(hasPrice(0))),()) preference(1,(1,4),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(11,worse,2) output(16,worse,20)
Optimization: 3 5
Answer: 15
preference(1,(1,5),0,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,6),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),3,for(atom(hasOftenSold(0))),()) preference(1,(1,5),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(11,worse,2) output(16,worse,20)
Optimization: 3 4
Progression : 3 [2;4] (Error: 1)
Answer: 16
preference(1,(1,2),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,4),0,for(atom(hasOftenSold(0))),()) preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,4),1,for(atom(hasOiliness(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,better,35) output(51,better,59) output(35,better,59) output(16,worse,20) output(11,eq,2) output(6,eq,20)
Optimization: 3 3
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 3 3
Calls        : 1
Time         : 7.824s (Solving: 4.37s 1st Model: 0.07s Unsat: 2.45s)
CPU Time     : 20.809s
Threads      : 4        (Winner: 1)

Choices      : 153146   (Domain: 3252)
Conflicts    : 27991    (Analyzed: 27984)
Restarts     : 48       (Average: 583.00 Last: 1939)
Model-Level  : 294.4   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 50897    (Deleted: 3444)
  Binary     : 2947     (Ratio:   5.79%)
  Ternary    : 7299     (Ratio:  14.34%)
  Conflict   : 27983    (Average Length:   47.1 Ratio:  54.98%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 22914    (Average Length:   20.2 Ratio:  45.02%) 
  Distributed: 7689     (Ratio:  27.48% Average LBD: 2.94) 
  Integrated : 23059    (Ratio: 299.90% Unit: 153 Average Jumps: 81.66)
Backjumps    : 27984    (Average:  4.78 Max: 689 Sum: 133645)
  Executed   : 27962    (Average:  4.76 Max: 689 Sum: 133288 Ratio:  99.73%)
  Bounded    : 22       (Average: 16.23 Max:  35 Sum:    357 Ratio:   0.27%)

Rules        : 1184880 
  Choice     : 33      
  Minimize   : 2       
Atoms        : 315449  
Bodies       : 361245  
  Count      : 1760    
Equivalences : 933684   (Atom=Atom: 273905 Body=Body: 296102 Other: 363677)
Tight        : Yes
Variables    : 45429    (Eliminated:    0 Frozen: 28981)
Constraints  : 946554   (Binary:  95.3% Ternary:   3.7% Other:   1.0%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasMinorGrp(2)) >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(1)) ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPrice(1))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasPrice(0)) >> not atom(hasOilyLevel(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasMinorGrp(2)) >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(1)) ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPrice(1))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasPrice(0)) >> not atom(hasOilyLevel(0))  ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasMinorGrp(2)) >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(1)) ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPrice(1))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasPrice(0)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasMinorGrp(2)) >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(1)) ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPrice(1))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasPrice(0)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasMinorGrp(2)) >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(2)) >> not atom(hasPrice(1))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPrice(1))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasPrice(0)) >> not atom(hasOilyLevel(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(1)) >> atom(hasOilyLevel(0)) || not atom(hasOiliness(0))  ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(1)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(2)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(0)) || not atom(hasOiliness(0))  ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(1)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(2)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  || not atom(hasPrice(1))  ; 
  atom(hasMinorGrp(2)) || not atom(hasPrice(0))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) || atom(hasOiliness(1)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  || atom(hasOilyLevel(0)) ; 
  not atom(hasOftenSold(0))  >> not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrice(1))  >> not atom(hasOilyLevel(0))  >> not atom(hasOiliness(1))  || atom(hasOilyLevel(1)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || not atom(hasPriceLevel(2))  ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(1))  || atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(0))  ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(1))  || not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOftenSold(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  atom(hasPriceLevel(2)) >> atom(hasPrice(0)) >> not atom(hasPriceLevel(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPriceLevel(2)) >> atom(hasOiliness(1)) >> atom(hasMinorGrp(2)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(2)) >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(2))  ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPrice(1)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || not atom(hasPriceLevel(2))  ; 
  atom(hasPriceLevel(1)) >> atom(hasPriceLevel(0)) || atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(0))  || not atom(hasPriceLevel(2))  ; 
  atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(0))  >> not atom(hasOiliness(1))  || not atom(hasOiliness(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  atom(hasPrice(1)) >> not atom(hasMinorGrp(0))  >> atom(hasOftenSold(0)) ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOiliness(0))  >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || not atom(hasPriceLevel(2))  ; 
  atom(hasPriceLevel(1)) >> atom(hasPriceLevel(0)) || atom(hasMinorGrp(2)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(0)) || not atom(hasOftenSold(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  || not atom(hasPrice(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOiliness(0))  >> not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || not atom(hasPriceLevel(2))  ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(0)) || atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(1)) >> not atom(hasOilyLevel(1))  || not atom(hasPrice(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOiliness(0))  >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(1)) >> not atom(hasOftenSold(1))  >> atom(hasPriceLevel(2)) || not atom(hasPriceLevel(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasOiliness(0))  >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) || not atom(hasPriceLevel(2))  ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(1)) >> not atom(hasOilyLevel(2))  || atom(hasOftenSold(0)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  
}.
