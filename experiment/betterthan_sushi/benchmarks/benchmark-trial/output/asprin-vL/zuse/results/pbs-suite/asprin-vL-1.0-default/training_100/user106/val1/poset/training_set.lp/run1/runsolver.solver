asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(48,eq,11) output(48,eq,7) output(48,eq,53) output(48,eq,18) output(48,eq,24) output(48,eq,97) output(48,eq,25) output(48,eq,52) output(11,eq,7) output(11,eq,53) output(11,eq,18) output(11,eq,24) output(11,eq,97) output(11,eq,25) output(11,eq,52) output(7,eq,53) output(7,eq,18) output(7,eq,24) output(7,eq,97) output(7,eq,25) output(7,eq,52) output(53,eq,18) output(53,eq,24) output(53,eq,97) output(53,eq,25) output(53,eq,52) output(18,eq,24) output(18,eq,97) output(18,eq,25) output(18,eq,52) output(24,eq,97) output(24,eq,25) output(24,eq,52) output(97,eq,25) output(97,eq,52) output(25,eq,52)
Optimization: 36 0
Answer: 2
preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,97) output(53,better,52) output(18,better,24) output(18,better,97) output(18,better,52) output(25,better,52) output(24,better,97) output(7,better,53) output(7,better,52) output(11,better,53) output(7,better,97) output(24,better,52) output(48,worse,11) output(48,worse,53) output(48,worse,18) output(48,worse,25) output(7,worse,18) output(7,worse,25) output(24,worse,25) output(97,worse,25) output(48,worse,24) output(53,worse,24) output(48,worse,7) output(53,worse,18) output(53,worse,25) output(48,eq,97) output(48,eq,52) output(11,eq,18) output(11,eq,25) output(7,eq,24) output(18,eq,25) output(97,eq,52)
Optimization: 20 1
Answer: 3
preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,25) output(97,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,53) output(11,better,18) output(11,better,25) output(53,worse,97) output(18,worse,97) output(24,worse,97) output(48,eq,11) output(7,eq,97) output(53,eq,18) output(53,eq,24) output(53,eq,25) output(53,eq,52) output(18,eq,24) output(18,eq,25) output(18,eq,52) output(24,eq,25) output(24,eq,52) output(25,eq,52)
Optimization: 15 1
Answer: 4
preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(18,better,97) output(18,better,52) output(25,better,52) output(24,better,97) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,52) output(48,better,53) output(48,better,97) output(48,better,52) output(11,better,53) output(11,better,18) output(11,better,25) output(7,better,97) output(24,better,52) output(48,worse,11) output(97,worse,25) output(53,worse,24) output(53,worse,97) output(53,worse,18) output(53,worse,25) output(53,eq,52) output(18,eq,24) output(18,eq,25) output(24,eq,25) output(48,unc,7) output(48,unc,18) output(48,unc,24) output(48,unc,25)
Optimization: 14 2
Answer: 5
preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,24) output(53,better,97) output(53,better,52) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,25) output(97,better,52) output(48,better,7) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,18) output(11,better,25) output(53,better,18) output(53,better,25) output(7,worse,53) output(18,worse,97) output(24,worse,97) output(48,eq,11) output(7,eq,97) output(18,eq,24) output(18,eq,25) output(18,eq,52) output(24,eq,25) output(24,eq,52) output(25,eq,52) output(48,unc,53) output(11,unc,53)
Optimization: 13 2
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,24) output(53,better,52) output(18,better,24) output(18,better,52) output(25,better,52) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,25) output(97,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,53) output(11,better,18) output(11,better,25) output(48,worse,11) output(24,worse,25) output(53,worse,97) output(18,worse,97) output(24,worse,97) output(7,eq,97) output(53,eq,18) output(53,eq,25) output(18,eq,25) output(24,eq,52)
Optimization: 10 3
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,24) output(53,better,97) output(53,better,52) output(18,better,24) output(18,better,52) output(25,better,52) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,25) output(97,better,52) output(48,better,11) output(48,better,7) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,18) output(11,better,25) output(53,better,18) output(53,better,25) output(7,worse,53) output(24,worse,25) output(18,worse,97) output(24,worse,97) output(7,eq,97) output(18,eq,25) output(24,eq,52) output(48,unc,53) output(11,unc,53)
Optimization: 9 4
Answer: 8
preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(1))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,12),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(0))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(18,better,24) output(18,better,97) output(18,better,52) output(25,better,52) output(24,better,97) output(7,better,53) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,52) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,53) output(11,better,18) output(11,better,25) output(7,better,97) output(18,better,25) output(24,better,52) output(48,worse,11) output(97,worse,25) output(53,worse,24) output(53,worse,18) output(53,worse,25) output(24,eq,25) output(53,unc,97) output(53,unc,52)
Optimization: 8 10
Answer: 9
preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasOftenSold(1))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,24) output(53,better,97) output(53,better,52) output(18,better,97) output(18,better,52) output(25,better,52) output(24,better,97) output(24,better,25) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,18) output(11,better,25) output(7,better,97) output(18,better,25) output(53,better,18) output(24,better,52) output(53,better,25) output(7,worse,53) output(97,worse,25) output(18,worse,24) output(97,worse,52) output(11,unc,53)
Optimization: 5 8
Answer: 10
preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasPrice(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasOftenSold(1))),()) preference(1,(1,11),2,for(atom(hasOiliness(1))),()) preference(1,(1,12),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,24) output(53,better,97) output(53,better,52) output(18,better,24) output(18,better,97) output(18,better,52) output(25,better,52) output(24,better,97) output(24,better,25) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,18) output(11,better,25) output(7,better,97) output(18,better,25) output(53,better,18) output(24,better,52) output(53,better,25) output(7,worse,53) output(97,worse,25) output(97,worse,52) output(11,unc,53)
Optimization: 4 9
Answer: 11
preference(1,(1,1),1,for(atom(hasOftenSold(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,12),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasOftenSold(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(11,better,7) output(11,better,24) output(11,better,97) output(11,better,52) output(53,better,24) output(53,better,97) output(53,better,52) output(18,better,24) output(18,better,97) output(18,better,52) output(25,better,52) output(24,better,97) output(7,better,18) output(7,better,24) output(7,better,25) output(7,better,52) output(97,better,52) output(48,better,11) output(48,better,7) output(48,better,53) output(48,better,18) output(48,better,24) output(48,better,97) output(48,better,25) output(48,better,52) output(11,better,53) output(11,better,18) output(11,better,25) output(7,better,97) output(18,better,25) output(53,better,18) output(24,better,52) output(53,better,25) output(7,worse,53) output(97,worse,25) output(24,eq,25)
Optimization: 3 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.040 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 3 11
Calls        : 1
Time         : 597.991s (Solving: 592.77s 1st Model: 0.82s Unsat: 0.00s)
CPU Time     : 2375.479s
Threads      : 4        (Winner: 4)

Choices      : 4332383  (Domain: 4719)
Conflicts    : 229581   (Analyzed: 229581)
Restarts     : 270      (Average: 850.30 Last: 14067)
Model-Level  : 1866.1  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 15168231 (Deleted: 15043244)
  Binary     : 3311     (Ratio:   0.02%)
  Ternary    : 53896    (Ratio:   0.36%)
  Conflict   : 229581   (Average Length:  817.4 Ratio:   1.51%) 
  Loop       : 14862533 (Average Length:  184.7 Ratio:  97.98%) 
  Other      : 76117    (Average Length:    3.7 Ratio:   0.50%) 
  Distributed: 25388    (Ratio:   0.17% Average LBD: 2.84) 
  Integrated : 76161    (Ratio: 299.99% Unit: 252 Average Jumps: 715.61)
Backjumps    : 229581   (Average: 16.06 Max: 89804 Sum: 3686482)
  Executed   : 229547   (Average: 16.06 Max: 89804 Sum: 3686344 Ratio: 100.00%)
  Bounded    : 34       (Average:  4.06 Max:  38 Sum:    138 Ratio:   0.00%)

Rules        : 943656  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 24126   
Bodies       : 684307  
  Count      : 48      
Equivalences : 25940    (Atom=Atom: 4474 Body=Body: 6174 Other: 15292)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 642960 Gammas: 0)
Variables    : 653090   (Eliminated:    0 Frozen: 645662)
Constraints  : 3839375  (Binary:  82.6% Ternary:   3.5% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOftenSold(1)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPriceLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(0)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasPrice(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) 
}.
