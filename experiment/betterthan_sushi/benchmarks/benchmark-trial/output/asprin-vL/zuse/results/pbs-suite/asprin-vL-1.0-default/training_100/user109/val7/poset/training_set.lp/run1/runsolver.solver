asprin_vL version 1.0
Reading from stdin
-:322:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:332:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:347:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:428:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:702:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:879:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1008:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1080:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1084:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1084:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1189:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1215:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1335:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1369:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1391:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:239:1-16: info: no atoms over signature occur in program:
  output/3

-:231:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:232:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:233:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(8,eq,19) preference(1,poset) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,9) output(20,eq,44) output(20,eq,32) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,68) output(10,eq,12) output(10,eq,9) output(10,eq,44) output(10,eq,32) output(10,eq,8) output(10,eq,11) output(10,eq,19) output(68,eq,12) output(68,eq,9) output(68,eq,44) output(68,eq,32) output(68,eq,8) output(68,eq,11) output(68,eq,19) output(12,eq,9) output(12,eq,44) output(12,eq,32) output(12,eq,8) output(12,eq,11) output(12,eq,19) output(9,eq,44) output(9,eq,32) output(9,eq,8) output(9,eq,11) output(9,eq,19) output(44,eq,32) output(44,eq,8) output(44,eq,11) output(44,eq,19) output(32,eq,8) output(32,eq,11) output(32,eq,19) output(8,eq,11) output(11,eq,19)
Optimization: 45 0
Answer: 2
output(8,eq,19) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(10,better,8) output(10,better,11) output(10,better,19) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,8) output(44,better,11) output(44,better,19) output(32,better,8) output(32,better,19) output(10,better,68) output(10,better,12) output(32,better,11) output(68,worse,32) output(12,worse,32) output(20,worse,10) output(20,worse,9) output(20,worse,44) output(68,worse,44) output(12,worse,44) output(68,worse,9) output(12,worse,9) output(20,worse,32) output(20,eq,68) output(20,eq,12) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,9) output(10,eq,44) output(10,eq,32) output(68,eq,12) output(68,eq,8) output(68,eq,11) output(68,eq,19) output(12,eq,8) output(12,eq,11) output(12,eq,19) output(9,eq,44) output(9,eq,32) output(44,eq,32) output(8,eq,11) output(11,eq,19)
Optimization: 31 1
Answer: 3
output(8,eq,19) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(10,better,8) output(10,better,11) output(10,better,19) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,better,11) output(32,better,8) output(32,better,19) output(10,better,68) output(10,better,12) output(32,better,11) output(68,worse,32) output(68,worse,8) output(68,worse,19) output(12,worse,32) output(12,worse,8) output(12,worse,19) output(20,worse,10) output(20,worse,9) output(20,worse,44) output(10,worse,44) output(68,worse,44) output(12,worse,44) output(20,worse,8) output(20,worse,19) output(10,worse,9) output(68,worse,9) output(12,worse,9) output(11,worse,19) output(20,worse,32) output(20,eq,68) output(20,eq,12) output(20,eq,11) output(10,eq,32) output(68,eq,12) output(68,eq,11) output(12,eq,11) output(9,eq,44)
Optimization: 28 1
Answer: 4
output(8,eq,19) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(20,better,68) output(20,better,44) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(68,better,44) output(68,better,32) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(20,better,32) output(10,better,68) output(68,worse,8) output(68,worse,11) output(68,worse,19) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(20,worse,10) output(20,worse,12) output(20,worse,9) output(68,worse,9) output(32,worse,8) output(32,worse,19) output(32,worse,11) output(68,worse,12) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,12) output(10,eq,9) output(12,eq,9) output(44,eq,32) output(8,eq,11) output(11,eq,19)
Optimization: 24 1
Answer: 5
output(8,eq,19) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(10,better,8) output(10,better,11) output(10,better,19) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(12,better,8) output(12,better,11) output(12,better,19) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,8) output(44,better,11) output(44,better,19) output(68,better,9) output(32,better,8) output(32,better,19) output(32,better,11) output(68,better,12) output(10,worse,32) output(12,worse,32) output(9,worse,32) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,9) output(20,worse,44) output(10,worse,44) output(12,worse,44) output(9,worse,44) output(20,worse,32) output(10,worse,68) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,12) output(10,eq,9) output(12,eq,9) output(44,eq,32) output(8,eq,11) output(11,eq,19)
Optimization: 23 1
Answer: 6
output(8,eq,19) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(20,better,9) output(20,better,44) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(9,better,44) output(9,better,8) output(9,better,19) output(20,better,8) output(20,better,19) output(10,better,9) output(68,better,9) output(12,better,9) output(32,better,8) output(32,better,19) output(11,better,19) output(9,worse,32) output(9,worse,11) output(44,worse,32) output(44,worse,11) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(8,worse,11) output(20,eq,32) output(20,eq,11) output(10,eq,68) output(10,eq,12) output(68,eq,12) output(44,eq,8) output(44,eq,19) output(32,eq,11)
Optimization: 17 2
Answer: 7
output(8,eq,19) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasOftenSold(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(0))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(0))),()) preference(1,poset) output(20,better,9) output(20,better,44) output(10,better,44) output(10,better,8) output(10,better,11) output(10,better,19) output(68,better,44) output(68,better,8) output(68,better,11) output(68,better,19) output(12,better,44) output(12,better,8) output(12,better,11) output(12,better,19) output(9,better,8) output(9,better,19) output(44,better,8) output(44,better,19) output(20,better,8) output(20,better,19) output(10,better,9) output(68,better,9) output(12,better,9) output(32,better,8) output(32,better,19) output(11,better,19) output(10,better,68) output(10,better,12) output(32,better,11) output(20,better,11) output(68,better,12) output(10,worse,32) output(68,worse,32) output(12,worse,32) output(9,worse,32) output(9,worse,11) output(44,worse,32) output(44,worse,11) output(20,worse,10) output(20,worse,68) output(9,worse,44) output(8,worse,11) output(20,worse,32) output(20,eq,12)
Optimization: 14 9
Answer: 8
output(8,eq,19) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,3),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,7),2,for(atom(hasOiliness(0))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(0))),()) preference(1,poset) output(20,better,44) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,8) output(44,better,19) output(20,better,8) output(20,better,19) output(10,better,9) output(68,better,9) output(12,better,9) output(32,better,8) output(32,better,19) output(11,better,19) output(10,better,68) output(10,better,12) output(32,better,11) output(20,better,11) output(68,better,12) output(44,worse,32) output(44,worse,11) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,9) output(8,worse,11) output(20,worse,32)
Optimization: 9 9
Answer: 9
output(8,eq,19) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,1),2,for(atom(hasOftenSold(0))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasOiliness(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(20,better,10) output(20,better,68) output(20,better,9) output(20,better,44) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(9,better,44) output(9,better,32) output(9,better,8) output(9,better,11) output(9,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(20,better,8) output(20,better,19) output(12,better,9) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,32) output(32,better,11) output(20,better,11) output(20,worse,12) output(10,worse,9) output(68,worse,9) output(8,worse,11) output(10,worse,68) output(10,worse,12) output(68,worse,12)
Optimization: 8 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.023 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 8 10
Calls        : 1
Time         : 1195.329s (Solving: 1191.81s 1st Model: 0.58s Unsat: 0.00s)
CPU Time     : 4770.247s
Threads      : 4        (Winner: 4)

Choices      : 11262847 (Domain: 9737)
Conflicts    : 547824   (Analyzed: 547824)
Restarts     : 690      (Average: 793.95 Last: 28879)
Model-Level  : 325.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 42753002 (Deleted: 42526993)
  Binary     : 6581     (Ratio:   0.02%)
  Ternary    : 124445   (Ratio:   0.29%)
  Conflict   : 547824   (Average Length:  700.8 Ratio:   1.28%) 
  Loop       : 42069393 (Average Length:  164.7 Ratio:  98.40%) 
  Other      : 135785   (Average Length:    3.7 Ratio:   0.32%) 
  Distributed: 45772    (Ratio:   0.11% Average LBD: 2.88) 
  Integrated : 137316   (Ratio: 300.00% Unit: 460 Average Jumps: 1318.69)
Backjumps    : 547824   (Average: 17.70 Max: 60519 Sum: 9696677)
  Executed   : 547776   (Average: 17.70 Max: 60519 Sum: 9696381 Ratio: 100.00%)
  Bounded    : 48       (Average:  6.17 Max:  46 Sum:    296 Ratio:   0.00%)

Rules        : 801811  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 26765   
Bodies       : 542393  
  Count      : 40      
Equivalences : 24905    (Atom=Atom: 4458 Body=Body: 5745 Other: 14702)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 513600 Gammas: 0)
Variables    : 524590   (Eliminated:    0 Frozen: 516530)
Constraints  : 2995459  (Binary:  82.1% Ternary:   5.6% Other:  12.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(0)) 
}.
