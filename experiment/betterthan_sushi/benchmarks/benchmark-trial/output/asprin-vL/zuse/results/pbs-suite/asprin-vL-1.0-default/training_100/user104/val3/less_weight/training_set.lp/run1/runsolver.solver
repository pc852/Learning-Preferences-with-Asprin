asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,29) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(6,eq,51) output(6,eq,35) output(6,eq,59) output(6,eq,9) output(16,eq,20) output(16,eq,29) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(20,eq,29) output(20,eq,51) output(20,eq,35) output(20,eq,59) output(20,eq,9) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPriceLevel(2))),12) preference(1,less(weight)) output(2,better,6) output(2,better,20) output(11,better,6) output(11,better,20) output(16,better,20) output(20,worse,29) output(20,worse,51) output(20,worse,35) output(20,worse,59) output(20,worse,9) output(6,worse,16) output(6,worse,29) output(6,worse,51) output(6,worse,35) output(6,worse,59) output(6,worse,9) output(11,eq,2) output(11,eq,16) output(11,eq,29) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(2,eq,16) output(2,eq,29) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(6,eq,20) output(16,eq,29) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 40 1
Answer: 3
preference(1,(1,2),1,for(atom(hasMinorGrp(1))),12) preference(1,less(weight)) output(2,better,51) output(2,better,9) output(11,better,51) output(11,better,9) output(20,better,51) output(20,better,9) output(6,better,51) output(6,better,9) output(16,better,51) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,9) output(51,worse,35) output(51,worse,59) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(11,eq,35) output(11,eq,59) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,29) output(2,eq,35) output(2,eq,59) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(6,eq,35) output(6,eq,59) output(16,eq,20) output(16,eq,29) output(16,eq,35) output(16,eq,59) output(20,eq,29) output(20,eq,35) output(20,eq,59) output(29,eq,35) output(29,eq,59) output(51,eq,9) output(35,eq,59)
Optimization: 31 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,less(weight)) output(2,better,29) output(2,better,51) output(2,better,59) output(11,better,29) output(11,better,51) output(11,better,59) output(20,better,29) output(20,better,51) output(20,better,59) output(6,better,29) output(6,better,51) output(6,better,59) output(16,better,29) output(16,better,51) output(16,better,59) output(35,better,59) output(51,worse,35) output(51,worse,9) output(59,worse,9) output(29,worse,35) output(29,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,35) output(11,eq,9) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,35) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(6,eq,35) output(6,eq,9) output(16,eq,20) output(16,eq,35) output(16,eq,9) output(20,eq,35) output(20,eq,9) output(29,eq,51) output(29,eq,59) output(51,eq,59) output(35,eq,9)
Optimization: 29 1
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,less(weight)) output(2,better,51) output(2,better,35) output(2,better,59) output(11,better,51) output(11,better,35) output(11,better,59) output(20,better,51) output(20,better,35) output(20,better,59) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,51) output(16,better,35) output(16,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(51,worse,9) output(35,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,29) output(11,eq,9) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,29) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(6,eq,29) output(6,eq,9) output(16,eq,20) output(16,eq,29) output(16,eq,9) output(20,eq,29) output(20,eq,9) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(35,eq,59)
Optimization: 27 1
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,5),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),1) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),2) preference(1,less(weight)) output(11,better,2) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(2,worse,6) output(2,worse,16) output(2,worse,20) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(2,eq,29) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(16,eq,20) output(29,eq,51) output(29,eq,35) output(29,eq,59) output(29,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 24 10
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,51) output(2,better,35) output(2,better,59) output(11,better,16) output(11,better,20) output(11,better,51) output(11,better,35) output(11,better,59) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(6,better,16) output(6,better,20) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,35) output(16,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(2,worse,9) output(11,worse,9) output(20,worse,29) output(20,worse,51) output(20,worse,9) output(51,worse,9) output(6,worse,9) output(16,worse,20) output(16,worse,29) output(16,worse,51) output(16,worse,9) output(35,worse,9) output(59,worse,9) output(29,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,29) output(2,eq,6) output(2,eq,29) output(6,eq,29) output(35,eq,59)
Optimization: 21 7
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,51) output(2,better,35) output(2,better,59) output(11,better,16) output(11,better,20) output(11,better,51) output(11,better,35) output(11,better,59) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(6,better,16) output(6,better,20) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,35) output(16,better,59) output(35,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(2,worse,9) output(11,worse,9) output(20,worse,29) output(20,worse,51) output(20,worse,9) output(51,worse,9) output(6,worse,9) output(16,worse,20) output(16,worse,29) output(16,worse,51) output(16,worse,9) output(35,worse,9) output(59,worse,9) output(29,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,29) output(2,eq,6) output(2,eq,29) output(6,eq,29)
Optimization: 20 8
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,4),1,for(atom(hasOftenSold(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,51) output(2,better,35) output(2,better,59) output(11,better,16) output(11,better,20) output(11,better,51) output(11,better,35) output(11,better,59) output(20,better,51) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(6,better,16) output(6,better,20) output(6,better,51) output(6,better,35) output(6,better,59) output(16,better,51) output(16,better,35) output(16,better,59) output(35,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(2,worse,9) output(11,worse,9) output(20,worse,29) output(20,worse,9) output(51,worse,9) output(6,worse,9) output(16,worse,20) output(16,worse,29) output(16,worse,9) output(35,worse,9) output(59,worse,9) output(29,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,29) output(2,eq,6) output(2,eq,29) output(6,eq,29)
Optimization: 18 9
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,5),1,for(atom(hasOftenSold(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,16) output(11,better,20) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(6,better,16) output(6,better,20) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,35) output(16,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(20,worse,29) output(20,worse,51) output(20,worse,9) output(16,worse,20) output(16,worse,29) output(16,worse,51) output(16,worse,9) output(35,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,29) output(2,eq,6) output(2,eq,29) output(6,eq,29) output(51,eq,9) output(35,eq,59)
Optimization: 17 8
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,5),1,for(atom(hasOftenSold(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,16) output(11,better,20) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,35) output(20,better,59) output(51,better,35) output(51,better,59) output(6,better,16) output(6,better,20) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,35) output(16,better,59) output(35,better,59) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(20,worse,29) output(20,worse,51) output(20,worse,9) output(16,worse,20) output(16,worse,29) output(16,worse,51) output(16,worse,9) output(35,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,29) output(2,eq,6) output(2,eq,29) output(6,eq,29) output(51,eq,9)
Optimization: 16 9
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,2),1,for(atom(hasOftenSold(1))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),12) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),1) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,6) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(59,better,9) output(29,better,51) output(11,worse,2) output(51,worse,35) output(51,worse,59) output(51,worse,9) output(6,worse,16) output(6,worse,20) output(35,worse,59) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(11,eq,16) output(11,eq,20) output(6,eq,59) output(16,eq,20) output(35,eq,9)
Optimization: 15 10
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),7) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),12) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasOftenSold(1))),7) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,9),1,for(atom(hasOftenSold(0))),1) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(51,better,59) output(6,better,29) output(6,better,59) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,59) output(29,better,59) output(51,worse,9) output(6,worse,16) output(6,worse,20) output(6,worse,51) output(6,worse,35) output(6,worse,9) output(35,worse,9) output(59,worse,9) output(29,worse,51) output(29,worse,35) output(29,worse,9) output(11,eq,2) output(20,eq,9) output(51,eq,35)
Optimization: 14 10
Answer: 14
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),9) preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),5) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(2)))),10) preference(1,(1,3),1,for(atom(hasOftenSold(1))),2) preference(1,(1,6),1,for(atom(hasOftenSold(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),7) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),6) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,35) output(16,better,59) output(16,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(2,worse,20) output(2,worse,29) output(6,worse,20) output(6,worse,29) output(16,worse,20) output(16,worse,29) output(35,worse,59) output(35,worse,9) output(11,eq,20) output(16,eq,51) output(59,eq,9)
Optimization: 11 10
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasOiliness(0)))),9) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),2) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,2),1,for(atom(hasOftenSold(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),7) preference(1,(1,10),1,for(atom(hasPrice(0))),10) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(2,worse,6) output(11,worse,2) output(11,worse,6) output(51,worse,59) output(51,worse,9) output(16,worse,20) output(16,worse,29) output(35,worse,59) output(35,worse,9) output(11,eq,20)
Optimization: 10 10
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOiliness(0)))),9) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),2) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),10) preference(1,(1,2),1,for(atom(hasOftenSold(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),7) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(11,worse,2) output(51,worse,59) output(51,worse,9) output(6,worse,20) output(16,worse,20) output(16,worse,29) output(35,worse,59) output(35,worse,9) output(11,eq,20)
Optimization: 9 10
Answer: 17
preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),12) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(2)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),7) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasOftenSold(0))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),11) preference(1,less(weight)) output(2,better,6) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(2,worse,16) output(2,worse,20) output(2,worse,29) output(6,worse,16) output(6,worse,20) output(6,worse,29) output(6,worse,51)
Optimization: 7 10
Answer: 18
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),3) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),5) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasOftenSold(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,worse,20) output(16,worse,29) output(11,eq,2) output(6,eq,20) output(6,eq,29) output(20,eq,29)
Optimization: 6 10
Answer: 19
preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),12) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(0))),7) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),6) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(6,worse,20) output(16,worse,20) output(2,eq,20) output(16,eq,29) output(35,eq,59)
Optimization: 5 10
Answer: 20
preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),12) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(0))),7) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),6) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,eq,20) output(16,eq,29) output(20,eq,29) output(35,eq,59)
Optimization: 4 10
Answer: 21
preference(1,(1,1),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,2),1,for(atom(hasOiliness(0))),7) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),9) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),6) preference(1,less(weight)) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,9) output(59,better,9) output(29,better,35) output(29,better,59) output(29,better,9) output(2,worse,6) output(29,eq,51) output(35,eq,59)
Optimization: 3 10
Answer: 22
preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),10) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),8) preference(1,(1,4),1,for(atom(hasPrice(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),3) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(29,better,35) output(29,better,59) output(29,better,9) output(16,eq,20) output(29,eq,51)
Optimization: 2 10
Answer: 23
preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,4),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),2) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),11) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),9) preference(1,less(weight)) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9)
Optimization: 0 10
SATISFIABLE

Models       : 23+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 1080.981s (Solving: 1074.82s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 4304.917s
Threads      : 4        (Winner: 1)

Choices      : 17519336 (Domain: 1993)
Conflicts    : 4543374  (Analyzed: 4543374)
Restarts     : 6310     (Average: 720.03 Last: 195590)
Model-Level  : 558.6   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 4577831  (Deleted: 4315434)
  Binary     : 3476     (Ratio:   0.08%)
  Ternary    : 1437     (Ratio:   0.03%)
  Conflict   : 4543374  (Average Length:  865.6 Ratio:  99.25%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 34457    (Average Length:   76.3 Ratio:   0.75%) 
  Distributed: 11487    (Ratio:   0.25% Average LBD: 3.45) 
  Integrated : 34461    (Ratio: 300.00% Unit: 208 Average Jumps: 116.71)
Backjumps    : 4543374  (Average:  2.93 Max: 2900 Sum: 13331285)
  Executed   : 4543373  (Average:  2.93 Max: 2900 Sum: 13331251 Ratio: 100.00%)
  Bounded    : 1        (Average: 34.00 Max:  34 Sum:     34 Ratio:   0.00%)

Rules        : 1599348 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 451301  
Bodies       : 454427  
  Sum        : 270     
  Count      : 10      
Equivalences : 1339850  (Atom=Atom: 433113 Body=Body: 442624 Other: 464113)
Tight        : Yes
Variables    : 16675    (Eliminated:    0 Frozen: 11715)
Constraints  : 1181671  (Binary:  98.9% Ternary:   0.4% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasOiliness(1))  ; 
  1 :: not atom(hasOilyLevel(0))  ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  7 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasOilyLevel(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  7 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasOilyLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  7 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasOilyLevel(2)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOilyLevel(2)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  7 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOilyLevel(2)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  7 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  4 :: atom(hasOftenSold(1)) ; 
  5 :: not atom(hasOiliness(1))  ; 
  5 :: not atom(hasPriceLevel(1))  ; 
  7 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  12 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: not atom(hasOiliness(1))  ; 
  4 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  7 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  12 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMinorGrp(0))  ; 
  5 :: not atom(hasOiliness(1))  ; 
  2 :: atom(hasOftenSold(1)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  6 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: not atom(hasMinorGrp(2))  ; 
  7 :: atom(hasPriceLevel(1)) ; 
  6 :: atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOiliness(0))  ; 
  8 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: not atom(hasPrice(1))  ; 
  2 :: not atom(hasOftenSold(0))  ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPriceLevel(1)) ; 
  10 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOiliness(0))  ; 
  8 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: not atom(hasPrice(1))  ; 
  2 :: not atom(hasOftenSold(0))  ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPriceLevel(1)) ; 
  10 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasPriceLevel(1))  ; 
  3 :: not atom(hasMinorGrp(2))  ; 
  11 :: atom(hasPriceLevel(1)) ; 
  7 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOilyLevel(1)) ; 
  3 :: not atom(hasMinorGrp(2))  ; 
  1 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  2 :: atom(hasOilyLevel(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasMinorGrp(0))  ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasOiliness(0))  ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  2 :: atom(hasOilyLevel(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasMinorGrp(0))  ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasOiliness(0))  ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOftenSold(1))  ; 
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasPrice(1))  ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasOilyLevel(1)) ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOilyLevel(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  10 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  8 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPriceLevel(2)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  11 :: atom(hasOiliness(0)) ; 
  6 :: not atom(hasPrice(1))  ; 
  12 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOftenSold(0))  ; 
  7 :: not atom(hasOftenSold(1))  ; 
  9 :: atom(hasOilyLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  
}.
Time limit reached
