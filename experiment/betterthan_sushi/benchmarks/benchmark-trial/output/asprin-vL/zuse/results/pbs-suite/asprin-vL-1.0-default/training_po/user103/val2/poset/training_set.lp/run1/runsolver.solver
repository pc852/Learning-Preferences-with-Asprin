asprin_vL version 1.0
Reading from stdin
-:243:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:253:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:268:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:349:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:623:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:800:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:929:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1001:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1005:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1005:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1011:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1110:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1136:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1256:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1290:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1312:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:160:1-16: info: no atoms over signature occur in program:
  output/3

-:152:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:153:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:154:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(9,eq,0) output(9,eq,3) output(9,eq,4) output(9,eq,5) output(9,eq,8) output(9,eq,6) output(9,eq,7) output(9,eq,1) output(0,eq,3) output(0,eq,4) output(0,eq,5) output(0,eq,8) output(0,eq,6) output(0,eq,7) output(0,eq,1) output(3,eq,4) output(3,eq,5) output(3,eq,8) output(3,eq,6) output(3,eq,7) output(3,eq,1) output(4,eq,5) output(4,eq,8) output(4,eq,6) output(4,eq,7) output(4,eq,1) output(5,eq,8) output(5,eq,6) output(5,eq,7) output(5,eq,1) output(8,eq,6) output(8,eq,7) output(8,eq,1) output(6,eq,7) output(6,eq,1) output(7,eq,1)
Optimization: 36 0
Answer: 2
preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(isMaguro(1))),()) preference(1,poset) output(4,better,5) output(4,better,7) output(4,better,1) output(6,better,7) output(6,better,1) output(9,better,5) output(9,better,7) output(9,better,1) output(8,better,7) output(3,better,7) output(3,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(0,worse,4) output(0,worse,6) output(5,worse,6) output(0,worse,8) output(5,worse,8) output(0,worse,3) output(9,eq,3) output(9,eq,4) output(9,eq,8) output(9,eq,6) output(0,eq,5) output(0,eq,7) output(0,eq,1) output(3,eq,4) output(3,eq,8) output(3,eq,6) output(4,eq,8) output(4,eq,6) output(5,eq,7) output(5,eq,1) output(8,eq,6) output(7,eq,1)
Optimization: 22 1
Answer: 3
preference(1,(1,7),1,for(atom(isShrimp(1))),()) preference(1,(1,7),2,for(atom(isCreamy(1))),()) preference(1,poset) output(4,better,5) output(4,better,8) output(4,better,6) output(4,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(7,better,1) output(3,worse,4) output(3,worse,7) output(5,worse,7) output(8,worse,7) output(6,worse,7) output(9,eq,0) output(3,eq,5) output(3,eq,8) output(3,eq,6) output(3,eq,1) output(4,eq,7) output(5,eq,8) output(5,eq,6) output(5,eq,1) output(8,eq,6) output(8,eq,1) output(6,eq,1)
Optimization: 17 1
Answer: 4
preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,5) output(4,better,7) output(4,better,1) output(5,better,7) output(5,better,1) output(6,better,7) output(6,better,1) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,7) output(0,better,1) output(8,better,7) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(0,worse,4) output(0,worse,6) output(5,worse,6) output(0,worse,8) output(5,worse,8) output(0,worse,3) output(9,eq,3) output(0,eq,5) output(4,eq,8) output(4,eq,6) output(8,eq,6) output(7,eq,1)
Optimization: 12 1
Answer: 5
preference(1,(1,7),1,for(atom(isShrimp(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,poset) output(4,better,5) output(4,better,7) output(4,better,1) output(6,better,7) output(6,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(8,better,7) output(3,better,7) output(3,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(5,worse,6) output(5,worse,8) output(3,eq,4) output(3,eq,8) output(3,eq,6) output(4,eq,8) output(4,eq,6) output(5,eq,7) output(5,eq,1) output(8,eq,6) output(7,eq,1)
Optimization: 11 1
Answer: 6
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(isUrchin(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,poset) output(4,better,8) output(4,better,6) output(4,better,7) output(4,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(6,better,7) output(6,better,1) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(8,better,7) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(4,worse,5) output(0,worse,3) output(9,eq,3) output(0,eq,5) output(8,eq,6) output(7,eq,1)
Optimization: 6 2
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(isMaguro(1))),()) preference(1,(1,5),1,for(atom(isUrchin(1))),()) preference(1,(1,7),1,for(atom(isFattyFish(1))),()) preference(1,(1,8),1,for(atom(isShrimp(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(isUrchin(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,8),2,for(atom(isFattyFish(1))),()) preference(1,(1,9),2,for(atom(isFattyFish(1))),()) preference(1,(1,10),2,for(atom(isMaguro(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(isFattyFish(1))),()) preference(1,poset) output(4,better,5) output(4,better,8) output(4,better,6) output(4,better,7) output(4,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(6,better,7) output(6,better,1) output(9,better,3) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,3) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(7,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(3,worse,4) output(9,unc,4) output(0,unc,4) output(8,unc,6) output(8,unc,7)
Optimization: 5 11
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(isMaguro(1))),()) preference(1,(1,5),1,for(atom(isMaguro(1))),()) preference(1,(1,7),1,for(atom(isFattyFish(1))),()) preference(1,(1,8),1,for(atom(isShrimp(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(isMaguro(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,8),2,for(atom(isFattyFish(1))),()) preference(1,(1,9),2,for(atom(isFattyFish(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(isFattyFish(1))),()) preference(1,poset) output(4,better,8) output(4,better,6) output(4,better,7) output(4,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(6,better,7) output(6,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(7,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(4,worse,5) output(8,unc,6) output(8,unc,7)
Optimization: 3 10
Answer: 9
preference(1,(1,4),1,for(atom(isRaw(1))),()) preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(isShrimp(1))),()) preference(1,(1,11),1,for(atom(isChewy(1))),()) preference(1,(1,12),1,for(atom(isCreamy(1))),()) preference(1,(1,4),2,for(atom(isCreamy(1))),()) preference(1,(1,6),2,for(atom(isSweet(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,9),2,for(atom(isChewy(1))),()) preference(1,(1,11),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(4,better,8) output(4,better,6) output(4,better,7) output(4,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(6,better,7) output(6,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(8,better,6) output(8,better,7) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(7,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(4,worse,5)
Optimization: 1 6
Answer: 10
preference(1,(1,1),1,for(atom(isChewy(1))),()) preference(1,(1,4),1,for(atom(isRaw(1))),()) preference(1,(1,6),1,for(atom(isShrimp(1))),()) preference(1,(1,9),1,for(atom(isRaw(0))),()) preference(1,(1,12),1,for(atom(isCreamy(1))),()) preference(1,(1,1),2,for(atom(isRaw(1))),()) preference(1,(1,4),2,for(atom(isCreamy(1))),()) preference(1,(1,6),2,for(atom(isChewy(1))),()) preference(1,(1,9),2,for(atom(isFattyFish(1))),()) preference(1,(1,12),2,for(atom(isRaw(0))),()) preference(1,poset) output(4,better,8) output(4,better,6) output(4,better,7) output(4,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(6,better,7) output(6,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(8,better,6) output(8,better,7) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(7,better,1) output(9,better,0) output(8,better,1) output(3,better,5) output(4,worse,5)
Optimization: 1 5
SATISFIABLE

Models       : 10+
  Optimum    : unknown
Optimization : 1 5
Calls        : 1
Time         : 1119.534s (Solving: 1114.44s 1st Model: 1.01s Unsat: 0.00s)
CPU Time     : 4461.920s
Threads      : 4        (Winner: 2)

Choices      : 6331672  (Domain: 2516)
Conflicts    : 384482   (Analyzed: 384482)
Restarts     : 411      (Average: 935.48 Last: 25565)
Model-Level  : 974.6   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 18462565 (Deleted: 18249186)
  Binary     : 5804     (Ratio:   0.03%)
  Ternary    : 85404    (Ratio:   0.46%)
  Conflict   : 384482   (Average Length: 1034.9 Ratio:   2.08%) 
  Loop       : 17959365 (Average Length:  223.3 Ratio:  97.27%) 
  Other      : 118718   (Average Length:    3.8 Ratio:   0.64%) 
  Distributed: 39597    (Ratio:   0.22% Average LBD: 2.84) 
  Integrated : 118791   (Ratio: 300.00% Unit: 260 Average Jumps: 832.31)
Backjumps    : 384482   (Average: 13.90 Max: 74058 Sum: 5344525)
  Executed   : 384455   (Average: 13.90 Max: 74058 Sum: 5344436 Ratio: 100.00%)
  Bounded    : 27       (Average:  3.30 Max:  38 Sum:     89 Ratio:   0.00%)

Rules        : 1111081 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 24303   
Bodies       : 820661  
  Count      : 48      
Equivalences : 27597    (Atom=Atom: 4650 Body=Body: 6636 Other: 16311)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 774656 Gammas: 0)
Variables    : 785779   (Eliminated:    0 Frozen: 777391)
Constraints  : 4605474  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isShrimp(1)) >> atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isShrimp(1)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isMaguro(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isUrchin(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isRaw(1)) ; 
  atom(isShrimp(1)) >> atom(isFattyFish(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isFattyFish(1)) ; 
  atom(isUrchin(1)) >> atom(isMaguro(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isMaguro(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isRaw(1)) ; 
  atom(isShrimp(1)) >> atom(isFattyFish(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isFattyFish(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isMaguro(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isCreamy(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) ; 
  atom(hasPrice(1)) >> atom(isRaw(1)) ; 
  atom(isShrimp(1)) >> atom(isChewy(1)) ; 
  atom(isChewy(1)) >> atom(hasPrice(1)) ; 
  atom(isCreamy(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isChewy(1)) >> atom(isRaw(1)) ; 
  atom(isRaw(1)) >> atom(isCreamy(1)) ; 
  atom(isShrimp(1)) >> atom(isChewy(1)) ; 
  atom(isRaw(0)) >> atom(isFattyFish(1)) ; 
  atom(isCreamy(1)) >> atom(isRaw(0)) 
}.
Time limit reached
