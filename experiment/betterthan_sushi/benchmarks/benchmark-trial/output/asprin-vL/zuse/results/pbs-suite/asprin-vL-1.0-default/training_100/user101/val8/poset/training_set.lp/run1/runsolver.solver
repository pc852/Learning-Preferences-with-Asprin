asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,13) output(32,eq,20) output(32,eq,25) output(32,eq,1) output(32,eq,6) output(31,eq,11) output(31,eq,5) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(31,eq,6) output(11,eq,5) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(5,eq,13) output(5,eq,20) output(5,eq,25) output(5,eq,1) output(5,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 36 0
Answer: 2
preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,5) output(31,better,6) output(31,better,11) output(31,better,20) output(32,better,13) output(32,better,25) output(32,better,1) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(32,eq,31) output(11,eq,5) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(5,eq,13) output(5,eq,20) output(5,eq,25) output(5,eq,1) output(5,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 22 1
Answer: 3
preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,5) output(31,better,6) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(31,better,11) output(31,better,20) output(32,better,13) output(32,better,25) output(32,better,1) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(11,worse,5) output(32,eq,31) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 17 1
Answer: 4
preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,6) output(11,better,6) output(13,better,6) output(20,better,6) output(1,better,6) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(31,better,11) output(31,better,20) output(13,better,20) output(32,better,31) output(32,better,13) output(32,better,25) output(32,better,1) output(11,better,25) output(20,better,25) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(13,better,25) output(11,worse,5) output(11,worse,13) output(11,worse,1) output(20,worse,1) output(25,worse,1) output(11,eq,20) output(13,eq,1) output(25,eq,6) output(31,unc,5)
Optimization: 9 2
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,6) output(11,better,6) output(13,better,6) output(20,better,6) output(25,better,6) output(1,better,6) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(31,better,11) output(31,better,20) output(13,better,20) output(32,better,31) output(32,better,13) output(32,better,25) output(32,better,1) output(11,better,25) output(20,better,25) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(13,better,25) output(11,worse,5) output(11,worse,13) output(11,worse,1) output(20,worse,1) output(25,worse,1) output(11,eq,20) output(13,eq,1) output(31,unc,5)
Optimization: 8 4
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,5) output(31,better,6) output(11,better,5) output(11,better,6) output(13,better,6) output(20,better,6) output(25,better,6) output(1,better,6) output(5,better,13) output(5,better,25) output(5,better,1) output(5,better,6) output(31,better,11) output(31,better,20) output(32,better,13) output(32,better,25) output(32,better,1) output(11,better,13) output(11,better,25) output(11,better,1) output(20,better,25) output(20,better,1) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(5,worse,20) output(13,worse,20) output(32,eq,31) output(11,eq,20) output(13,eq,25) output(13,eq,1) output(25,eq,1)
Optimization: 7 4
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,5) output(31,better,6) output(11,better,5) output(11,better,6) output(13,better,6) output(20,better,6) output(25,better,6) output(1,better,6) output(5,better,13) output(5,better,25) output(5,better,1) output(5,better,6) output(31,better,11) output(31,better,20) output(32,better,31) output(32,better,13) output(32,better,25) output(32,better,1) output(11,better,13) output(11,better,25) output(11,better,1) output(20,better,25) output(20,better,1) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(5,worse,20) output(13,worse,20) output(11,eq,20) output(13,eq,25) output(13,eq,1) output(25,eq,1)
Optimization: 6 5
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPrice(0))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),2,for(atom(hasOftenSold(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(32,better,5) output(32,better,6) output(31,better,5) output(31,better,6) output(11,better,6) output(13,better,6) output(20,better,6) output(25,better,6) output(1,better,6) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(31,better,11) output(31,better,20) output(32,better,31) output(32,better,13) output(32,better,25) output(32,better,1) output(11,better,13) output(11,better,25) output(11,better,1) output(20,better,25) output(20,better,1) output(31,better,13) output(31,better,25) output(31,better,1) output(32,better,11) output(32,better,20) output(13,better,25) output(11,worse,5) output(13,worse,20) output(25,worse,1) output(11,worse,20) output(13,eq,1)
Optimization: 5 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.019 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 5 8
Calls        : 1
Time         : 1195.652s (Solving: 1192.36s 1st Model: 0.59s Unsat: 0.00s)
CPU Time     : 4771.964s
Threads      : 4        (Winner: 4)

Choices      : 8414967  (Domain: 3978)
Conflicts    : 542379   (Analyzed: 542379)
Restarts     : 566      (Average: 958.27 Last: 42951)
Model-Level  : 190.4   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 33921993 (Deleted: 33728924)
  Binary     : 5866     (Ratio:   0.02%)
  Ternary    : 99455    (Ratio:   0.29%)
  Conflict   : 542379   (Average Length:  691.3 Ratio:   1.60%) 
  Loop       : 33243929 (Average Length:  132.2 Ratio:  98.00%) 
  Other      : 135685   (Average Length:    3.7 Ratio:   0.40%) 
  Distributed: 45261    (Ratio:   0.13% Average LBD: 2.88) 
  Integrated : 135783   (Ratio: 300.00% Unit: 348 Average Jumps: 652.87)
Backjumps    : 542379   (Average: 13.65 Max: 79831 Sum: 7403551)
  Executed   : 542352   (Average: 13.65 Max: 79831 Sum: 7403500 Ratio: 100.00%)
  Bounded    : 27       (Average:  1.89 Max:   2 Sum:     51 Ratio:   0.00%)

Rules        : 722610  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 22693   
Bodies       : 509997  
  Count      : 40      
Equivalences : 22259    (Atom=Atom: 3891 Body=Body: 5220 Other: 13148)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490505   (Eliminated:    0 Frozen: 483586)
Constraints  : 2821953  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPrice(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(1)) 
}.
