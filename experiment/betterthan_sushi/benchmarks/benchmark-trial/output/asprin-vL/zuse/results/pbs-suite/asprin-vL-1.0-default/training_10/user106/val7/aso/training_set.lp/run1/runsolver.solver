asprin_vL version 1.0
Reading from stdin
-:328:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:353:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:434:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:708:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:885:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1086:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1090:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1096:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1195:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1221:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1341:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1375:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1397:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:245:1-16: info: no atoms over signature occur in program:
  output/3

-:237:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:238:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:239:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:240:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:270:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,6),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasMinorGrp(3))),()) preference(1,aso) output(2,eq,5) output(2,eq,4) output(2,eq,8) output(2,eq,0) output(2,eq,6) output(2,eq,3) output(2,eq,9) output(2,eq,1) output(5,eq,4) output(5,eq,8) output(5,eq,0) output(5,eq,6) output(5,eq,3) output(5,eq,9) output(5,eq,1) output(4,eq,8) output(4,eq,0) output(4,eq,6) output(4,eq,3) output(4,eq,9) output(4,eq,1) output(8,eq,0) output(8,eq,6) output(8,eq,3) output(8,eq,9) output(8,eq,1) output(0,eq,6) output(0,eq,3) output(0,eq,9) output(0,eq,1) output(6,eq,3) output(6,eq,9) output(6,eq,1) output(3,eq,9) output(3,eq,1) output(9,eq,1)
Optimization: 36 8
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,1),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,6),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(2,better,4) output(2,better,8) output(2,better,6) output(5,better,4) output(5,better,8) output(5,better,6) output(0,better,6) output(4,worse,0) output(4,worse,3) output(4,worse,9) output(4,worse,1) output(8,worse,0) output(8,worse,3) output(8,worse,9) output(8,worse,1) output(6,worse,3) output(6,worse,9) output(6,worse,1) output(2,eq,5) output(2,eq,0) output(2,eq,3) output(2,eq,9) output(2,eq,1) output(5,eq,0) output(5,eq,3) output(5,eq,9) output(5,eq,1) output(4,eq,8) output(4,eq,6) output(8,eq,6) output(0,eq,3) output(0,eq,9) output(0,eq,1) output(3,eq,9) output(3,eq,1) output(9,eq,1)
Optimization: 29 8
Answer: 3
preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,1),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),3,for(atom(hasOftenSold(1))),()) preference(1,(1,6),3,for(atom(hasOftenSold(1))),()) preference(1,(1,7),3,for(atom(hasOftenSold(1))),()) preference(1,(1,8),3,for(atom(hasOilyLevel(1))),()) preference(1,aso) output(4,better,0) output(4,better,3) output(4,better,9) output(8,better,0) output(8,better,3) output(8,better,9) output(6,better,3) output(6,better,9) output(2,worse,4) output(2,worse,8) output(2,worse,6) output(2,worse,1) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(5,worse,1) output(0,worse,6) output(0,worse,1) output(3,worse,1) output(9,worse,1) output(2,eq,5) output(2,eq,0) output(2,eq,3) output(2,eq,9) output(5,eq,0) output(5,eq,3) output(5,eq,9) output(4,eq,8) output(4,eq,6) output(4,eq,1) output(8,eq,6) output(8,eq,1) output(0,eq,3) output(0,eq,9) output(6,eq,1) output(3,eq,9)
Optimization: 28 8
Answer: 4
preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,1),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),3,for(atom(hasOftenSold(1))),()) preference(1,(1,6),3,for(atom(hasOftenSold(1))),()) preference(1,(1,7),3,for(atom(hasOftenSold(1))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,aso) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(2,worse,4) output(2,worse,8) output(2,worse,6) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(0,worse,6) output(2,eq,5) output(2,eq,0) output(2,eq,3) output(2,eq,9) output(2,eq,1) output(5,eq,0) output(5,eq,3) output(5,eq,9) output(5,eq,1) output(4,eq,8) output(4,eq,6) output(8,eq,6) output(0,eq,3) output(0,eq,9) output(0,eq,1) output(3,eq,9) output(3,eq,1) output(9,eq,1)
Optimization: 25 8
Answer: 5
preference(1,(1,1),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),0,for(atom(hasOftenSold(0))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),0,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,7),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,1),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),3,for(atom(hasPrice(0))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(5,better,0) output(5,better,9) output(4,better,0) output(4,better,3) output(4,better,9) output(8,better,0) output(8,better,3) output(8,better,9) output(6,better,3) output(6,better,9) output(3,better,9) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(5,worse,1) output(0,worse,6) output(0,worse,3) output(0,worse,1) output(3,worse,1) output(9,worse,1) output(2,eq,4) output(2,eq,8) output(2,eq,6) output(2,eq,1) output(5,eq,3) output(4,eq,8) output(4,eq,6) output(4,eq,1) output(8,eq,6) output(8,eq,1) output(0,eq,9) output(6,eq,1)
Optimization: 21 8
Answer: 6
preference(1,(1,1),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),0,for(atom(hasOftenSold(0))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),0,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,8),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,1),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasOiliness(0))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,1) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,1) output(0,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,1) output(9,better,1) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(0,worse,6) output(2,eq,4) output(2,eq,8) output(2,eq,6) output(5,eq,0) output(5,eq,3) output(5,eq,9) output(4,eq,8) output(4,eq,6) output(8,eq,6) output(0,eq,3) output(0,eq,9) output(3,eq,9)
Optimization: 16 8
Progression : [ 1;16] (Error: 15)
Progression : [ 2;16] (Error: 7)
Progression : [ 3;16] (Error: 4.33333)
Answer: 7
preference(1,(1,4),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),0,for(atom(hasPrice(0))),()) preference(1,(1,7),0,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,1) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,1) output(0,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,1) output(9,better,1) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(0,worse,6) output(2,eq,4) output(2,eq,8) output(2,eq,6) output(5,eq,0) output(5,eq,3) output(5,eq,9) output(4,eq,8) output(4,eq,6) output(8,eq,6) output(0,eq,3) output(0,eq,9) output(3,eq,9)
Optimization: 16 3
Progression : [ 4;16] (Error: 3)
Progression : [ 5;16] (Error: 2.2)
Answer: 8
preference(1,(1,3),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),0,for(atom(hasOiliness(0))),()) preference(1,(1,7),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),2,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),3,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),1,for(atom(hasOiliness(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),3,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),3,for(atom(hasOftenSold(0))),()) preference(1,aso) output(2,better,4) output(2,better,8) output(2,better,6) output(2,better,9) output(2,better,1) output(5,better,4) output(5,better,8) output(5,better,6) output(5,better,9) output(5,better,1) output(4,better,8) output(4,better,9) output(4,better,1) output(8,better,1) output(0,better,6) output(0,better,9) output(0,better,1) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(4,worse,0) output(4,worse,3) output(8,worse,0) output(8,worse,6) output(8,worse,3) output(6,worse,3) output(5,eq,0) output(5,eq,3) output(4,eq,6) output(0,eq,3)
Optimization: 15 8
Answer: 9
preference(1,(1,1),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),0,for(atom(hasPrice(0))),()) preference(1,(1,5),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),0,for(atom(hasOiliness(1))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),3,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),3,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,0) output(5,better,9) output(5,better,1) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,1) output(0,better,9) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(2,worse,4) output(2,worse,8) output(2,worse,6) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(0,worse,6) output(0,worse,3) output(5,eq,3) output(4,eq,8) output(4,eq,6) output(8,eq,6)
Optimization: 14 7
Answer: 10
preference(1,(1,1),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),0,for(atom(hasPrice(0))),()) preference(1,(1,5),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),0,for(atom(hasOiliness(1))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),3,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,0) output(5,better,9) output(5,better,1) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,1) output(0,better,9) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(2,worse,4) output(2,worse,8) output(2,worse,6) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(4,worse,8) output(0,worse,6) output(0,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 13 7
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),0,for(atom(hasPrice(0))),()) preference(1,(1,4),0,for(atom(hasPrice(0))),()) preference(1,(1,5),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),0,for(atom(hasOiliness(1))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),3,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,0) output(5,better,9) output(5,better,1) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,1) output(0,better,9) output(0,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(2,worse,4) output(2,worse,8) output(2,worse,6) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(4,worse,8) output(0,worse,6) output(0,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 12 7
Progression : [ 6;12] (Error: 1)
Progression : [ 7;12] (Error: 0.714286)
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),0,for(atom(hasPrice(0))),()) preference(1,(1,4),0,for(atom(hasPrice(0))),()) preference(1,(1,5),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),0,for(atom(hasOiliness(1))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),3,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,0) output(5,better,9) output(5,better,1) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,1) output(0,better,9) output(0,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(9,better,1) output(2,worse,4) output(2,worse,8) output(2,worse,6) output(5,worse,4) output(5,worse,8) output(5,worse,6) output(4,worse,8) output(0,worse,6) output(0,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 11 7
Progression : [ 8;11] (Error: 0.375)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,4),0,for(atom(hasPrice(0))),()) preference(1,(1,5),0,for(atom(hasPrice(0))),()) preference(1,(1,6),0,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),0,for(atom(hasOiliness(0))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),3,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(2,better,5) output(2,better,4) output(2,better,8) output(2,better,0) output(2,better,6) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,8) output(5,better,0) output(5,better,9) output(5,better,1) output(4,better,8) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,1) output(0,better,9) output(0,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(9,better,1) output(5,worse,4) output(5,worse,6) output(8,worse,6) output(8,worse,3) output(0,worse,6) output(0,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 10 7
Progression : [ 9;10] (Error: 0.111111)
Progression : [10;10] (Error: 0)
Progression : 10 [1;7] (Error: 6)
Answer: 14
preference(1,(1,3),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),0,for(atom(hasOftenSold(0))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,6),0,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,7),0,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),3,for(atom(hasOilyLevel(1))),()) preference(1,aso) output(2,better,5) output(2,better,4) output(2,better,8) output(2,better,0) output(2,better,6) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,4) output(5,better,8) output(5,better,0) output(5,better,6) output(5,better,9) output(5,better,1) output(4,better,8) output(4,better,9) output(4,better,1) output(8,better,1) output(0,better,6) output(0,better,9) output(0,better,1) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(9,better,1) output(4,worse,0) output(4,worse,3) output(8,worse,0) output(8,worse,6) output(8,worse,3) output(0,worse,3) output(6,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 10 6
Answer: 15
preference(1,(1,1),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),0,for(atom(hasOftenSold(0))),()) preference(1,(1,5),0,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(2,better,5) output(2,better,4) output(2,better,8) output(2,better,0) output(2,better,6) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,4) output(5,better,8) output(5,better,0) output(5,better,6) output(5,better,9) output(5,better,1) output(4,better,8) output(4,better,9) output(4,better,1) output(8,better,1) output(0,better,6) output(0,better,9) output(0,better,1) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(9,better,1) output(4,worse,0) output(4,worse,3) output(8,worse,0) output(8,worse,6) output(8,worse,3) output(0,worse,3) output(6,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 10 5
Answer: 16
preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(2,better,5) output(2,better,4) output(2,better,8) output(2,better,0) output(2,better,6) output(2,better,3) output(2,better,9) output(2,better,1) output(5,better,8) output(5,better,0) output(5,better,9) output(5,better,1) output(4,better,8) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(8,better,1) output(0,better,9) output(0,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(3,better,9) output(3,better,1) output(9,better,1) output(5,worse,4) output(5,worse,6) output(8,worse,6) output(8,worse,3) output(0,worse,6) output(0,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 10 4
Progression : 10 [2;4] (Error: 1)
Progression : 10 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 10 4
Calls        : 1
Time         : 31.273s (Solving: 27.62s 1st Model: 0.06s Unsat: 21.25s)
CPU Time     : 114.000s
Threads      : 4        (Winner: 3)

Choices      : 481159   (Domain: 14365)
Conflicts    : 147340   (Analyzed: 147326)
Restarts     : 196      (Average: 751.66 Last: 5805)
Model-Level  : 425.1   
Problems     : 20       (Average Length: 0.20 Splits: 0)
Lemmas       : 224126   (Deleted: 123123)
  Binary     : 9899     (Ratio:   4.42%)
  Ternary    : 18268    (Ratio:   8.15%)
  Conflict   : 147325   (Average Length:   77.1 Ratio:  65.73%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 76801    (Average Length:   28.4 Ratio:  34.27%) 
  Distributed: 25633    (Ratio:  17.40% Average LBD: 2.99) 
  Integrated : 76899    (Ratio: 300.00% Unit: 620 Average Jumps: 42.51)
Backjumps    : 147326   (Average:  3.02 Max: 523 Sum: 444296)
  Executed   : 147270   (Average:  3.01 Max: 523 Sum: 443671 Ratio:  99.86%)
  Bounded    : 56       (Average: 11.16 Max:  38 Sum:    625 Ratio:   0.14%)

Rules        : 1184808 
  Choice     : 33      
  Minimize   : 2       
Atoms        : 315425  
Bodies       : 359933  
  Count      : 1760    
Equivalences : 932820   (Atom=Atom: 274769 Body=Body: 296462 Other: 361589)
Tight        : Yes
Variables    : 44565    (Eliminated:    0 Frozen: 28117)
Constraints  : 943490   (Binary:  95.4% Ternary:   3.7% Other:   0.9%)


Learned preference statement: 

#preference(1,aso){
  atom(hasOftenSold(0)) >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOftenSold(0)) >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasOftenSold(1))  >> atom(hasOftenSold(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOftenSold(0)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(0))  ; 
  atom(hasOftenSold(0)) >> not atom(hasOftenSold(1))  >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  || atom(hasMinorGrp(3)) ; 
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(1))  >> not atom(hasOftenSold(0))  || atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(0))  >> atom(hasOilyLevel(0)) || atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(0))  || atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || not atom(hasPriceLevel(0))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasOftenSold(0))  >> not atom(hasOilyLevel(2))  || not atom(hasOftenSold(1))  ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) >> not atom(hasPriceLevel(2))  || atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(0)) >> atom(hasOilyLevel(0)) >> not atom(hasOftenSold(0))  || not atom(hasPriceLevel(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  || atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(0))  >> atom(hasOilyLevel(0)) || atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(0))  || atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || not atom(hasPriceLevel(0))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasOftenSold(0))  >> not atom(hasOilyLevel(2))  || not atom(hasOftenSold(1))  ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) >> atom(hasOiliness(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(0)) >> atom(hasOilyLevel(0)) >> not atom(hasOftenSold(0))  || not atom(hasPriceLevel(0))  ; 
  not atom(hasPrice(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(1))  || not atom(hasPriceLevel(2))  ; 
  atom(hasPrice(1)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(0))  >> atom(hasOilyLevel(2)) || atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(3)) >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(1))  || not atom(hasPriceLevel(2))  ; 
  not atom(hasMinorGrp(1))  >> not atom(hasOilyLevel(2))  >> atom(hasOilyLevel(1)) || atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(0)) >> not atom(hasPriceLevel(1))  || atom(hasPriceLevel(1)) ; 
  atom(hasOiliness(1)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) ; 
  not atom(hasOilyLevel(1))  >> not atom(hasOftenSold(1))  >> atom(hasMinorGrp(3)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasOftenSold(1))  >> atom(hasOilyLevel(0)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  ; 
  not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(2)) >> atom(hasOiliness(1)) >> atom(hasMinorGrp(1)) || atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasOftenSold(1))  >> atom(hasPrice(1)) >> atom(hasPriceLevel(0)) || atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) || atom(hasOiliness(1)) ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(3)) ; 
  not atom(hasOiliness(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(1))  || not atom(hasMinorGrp(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasOiliness(1)) >> not atom(hasPriceLevel(2))  || atom(hasPriceLevel(1)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) >> not atom(hasPrice(1))  || atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) || atom(hasOiliness(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(3)) ; 
  not atom(hasOiliness(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(1))  || not atom(hasMinorGrp(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> atom(hasOiliness(1)) >> not atom(hasPriceLevel(2))  || not atom(hasOiliness(1))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) >> not atom(hasPrice(1))  || atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) || atom(hasOiliness(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(3)) ; 
  not atom(hasOiliness(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(1))  || not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrice(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || not atom(hasOiliness(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) >> not atom(hasPrice(1))  || atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) || atom(hasOiliness(1)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  || atom(hasMinorGrp(3)) ; 
  not atom(hasOiliness(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(1))  || not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(2)) >> atom(hasOiliness(1)) >> not atom(hasOftenSold(1))  || not atom(hasOiliness(1))  ; 
  not atom(hasPriceLevel(1))  >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(1)) || not atom(hasPriceLevel(1))  ; 
  atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(1)) >> not atom(hasMinorGrp(2))  || atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) >> atom(hasOilyLevel(1)) || not atom(hasPriceLevel(1))  ; 
  atom(hasPrice(1)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || not atom(hasOiliness(1))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOiliness(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPriceLevel(1)) ; 
  not atom(hasPriceLevel(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  || atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(1)) >> not atom(hasMinorGrp(2))  || atom(hasOftenSold(0)) ; 
  not atom(hasPrice(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || not atom(hasOilyLevel(2))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || atom(hasOiliness(0)) ; 
  not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  || atom(hasPrice(0)) ; 
  not atom(hasOftenSold(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(1))  ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  
}.
