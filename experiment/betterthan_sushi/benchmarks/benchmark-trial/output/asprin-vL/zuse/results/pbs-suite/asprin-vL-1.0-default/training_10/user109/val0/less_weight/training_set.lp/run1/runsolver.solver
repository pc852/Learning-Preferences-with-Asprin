asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,7) output(1,eq,5) output(1,eq,4) output(1,eq,2) output(1,eq,6) output(1,eq,3) output(1,eq,8) output(1,eq,9) output(7,eq,5) output(7,eq,4) output(7,eq,2) output(7,eq,6) output(7,eq,3) output(7,eq,8) output(7,eq,9) output(5,eq,4) output(5,eq,2) output(5,eq,6) output(5,eq,3) output(5,eq,8) output(5,eq,9) output(4,eq,2) output(4,eq,6) output(4,eq,3) output(4,eq,8) output(4,eq,9) output(2,eq,6) output(2,eq,3) output(2,eq,8) output(2,eq,9) output(6,eq,3) output(6,eq,8) output(6,eq,9) output(3,eq,8) output(3,eq,9) output(8,eq,9)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(1,better,4) output(1,better,6) output(1,better,8) output(3,better,8) output(5,better,4) output(5,better,6) output(5,better,8) output(7,better,4) output(7,better,6) output(7,better,8) output(8,worse,9) output(6,worse,3) output(6,worse,9) output(4,worse,2) output(4,worse,3) output(4,worse,9) output(1,eq,7) output(1,eq,5) output(1,eq,2) output(1,eq,3) output(1,eq,9) output(7,eq,5) output(7,eq,2) output(7,eq,3) output(7,eq,9) output(5,eq,2) output(5,eq,3) output(5,eq,9) output(4,eq,6) output(4,eq,8) output(2,eq,3) output(2,eq,9) output(6,eq,8) output(3,eq,9)
Optimization: 24 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrice(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),11) preference(1,less(weight)) output(2,better,8) output(1,better,8) output(3,better,8) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(6,better,8) output(4,better,2) output(4,better,8) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,8) output(2,worse,6) output(2,worse,3) output(2,worse,9) output(8,worse,9) output(1,worse,7) output(1,worse,5) output(1,worse,4) output(1,worse,6) output(1,worse,3) output(1,worse,9) output(6,worse,3) output(6,worse,9) output(4,worse,3) output(4,worse,9) output(1,eq,2) output(7,eq,5) output(7,eq,3) output(7,eq,9) output(5,eq,3) output(5,eq,9) output(4,eq,6) output(3,eq,9)
Optimization: 22 2
Answer: 4
preference(1,(1,1),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),11) preference(1,less(weight)) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(4,better,2) output(4,better,8) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,8) output(7,better,9) output(2,worse,6) output(2,worse,3) output(2,worse,9) output(8,worse,9) output(1,worse,7) output(1,worse,5) output(1,worse,4) output(1,worse,6) output(1,worse,3) output(1,worse,9) output(6,worse,3) output(4,worse,3) output(1,eq,2) output(1,eq,8) output(7,eq,5) output(7,eq,3) output(5,eq,3) output(4,eq,6) output(4,eq,9) output(2,eq,8) output(6,eq,9)
Optimization: 21 2
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),5) preference(1,less(weight)) output(2,better,8) output(1,better,8) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(4,better,2) output(4,better,8) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,8) output(7,better,9) output(2,worse,6) output(2,worse,3) output(2,worse,9) output(8,worse,9) output(1,worse,7) output(1,worse,5) output(1,worse,4) output(1,worse,6) output(1,worse,3) output(1,worse,9) output(6,worse,3) output(6,worse,9) output(4,worse,3) output(4,worse,9) output(1,eq,2) output(7,eq,5) output(7,eq,3) output(5,eq,3) output(4,eq,6)
Optimization: 19 3
Progression : [ 1;19] (Error: 18)
Answer: 6
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(1,better,4) output(1,better,6) output(1,better,8) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(4,better,8) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,8) output(7,better,9) output(2,worse,3) output(2,worse,9) output(8,worse,9) output(1,worse,7) output(1,worse,5) output(1,worse,3) output(1,worse,9) output(6,worse,3) output(6,worse,9) output(4,worse,2) output(4,worse,3) output(4,worse,9) output(1,eq,2) output(7,eq,5) output(7,eq,3) output(5,eq,3) output(4,eq,6)
Optimization: 17 4
Answer: 7
preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),1) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,8) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(4,better,8) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,8) output(7,better,9) output(2,worse,3) output(2,worse,9) output(8,worse,9) output(1,worse,7) output(1,worse,5) output(1,worse,3) output(1,worse,9) output(6,worse,3) output(6,worse,9) output(4,worse,2) output(4,worse,3) output(4,worse,9) output(7,eq,5) output(7,eq,3) output(5,eq,3) output(4,eq,6)
Optimization: 16 7
Progression : [ 2;16] (Error: 7)
Answer: 8
preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),1) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,8) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(4,better,8) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,3) output(2,worse,9) output(8,worse,9) output(1,worse,7) output(1,worse,5) output(1,worse,3) output(1,worse,9) output(6,worse,3) output(6,worse,9) output(4,worse,2) output(4,worse,3) output(4,worse,9) output(5,eq,3) output(4,eq,6)
Optimization: 14 8
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),4) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),6) preference(1,less(weight)) output(2,better,6) output(2,better,9) output(8,better,9) output(1,better,5) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,3) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,3) output(6,worse,3) output(6,worse,8) output(6,worse,9) output(4,worse,2) output(4,worse,3) output(4,worse,8) output(4,worse,9) output(1,eq,7) output(5,eq,3) output(4,eq,6) output(2,eq,8)
Optimization: 12 10
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),9) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(2,better,9) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(6,better,9) output(4,better,8) output(4,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,3) output(1,worse,7) output(1,worse,5) output(1,worse,3) output(6,worse,3) output(4,worse,2) output(4,worse,3) output(5,eq,3) output(4,eq,6) output(8,eq,9)
Optimization: 10 10
Answer: 11
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),9) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),3) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(2,better,9) output(8,better,9) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,8) output(6,better,9) output(4,better,8) output(4,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,3) output(1,worse,7) output(1,worse,5) output(1,worse,3) output(6,worse,3) output(4,worse,2) output(4,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 9 10
Answer: 12
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,1),1,for(atom(hasPrice(1))),1) preference(1,(1,2),1,for(atom(hasOftenSold(0))),3) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),11) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),7) preference(1,less(weight)) output(2,better,6) output(2,better,8) output(2,better,9) output(8,better,9) output(1,better,7) output(1,better,5) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,3) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,4) output(5,better,2) output(5,better,6) output(5,better,8) output(5,better,9) output(6,better,9) output(4,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,3) output(6,worse,3) output(6,worse,8) output(4,worse,2) output(4,worse,3) output(4,worse,8) output(5,eq,3) output(4,eq,6)
Optimization: 8 10
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,4),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),6) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,10),1,for(atom(hasOftenSold(0))),9) preference(1,less(weight)) output(2,better,9) output(8,better,9) output(1,better,7) output(1,better,5) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,3) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,2) output(5,better,8) output(5,better,9) output(6,better,3) output(6,better,8) output(6,better,9) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,6) output(2,worse,3) output(5,worse,4) output(5,worse,6) output(5,eq,3) output(4,eq,6) output(2,eq,8)
Optimization: 7 10
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,4),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(2,better,8) output(2,better,9) output(8,better,9) output(1,better,7) output(1,better,5) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,3) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,2) output(5,better,8) output(5,better,9) output(6,better,3) output(6,better,8) output(6,better,9) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(2,worse,6) output(2,worse,3) output(5,worse,4) output(5,worse,6) output(5,eq,3) output(4,eq,6)
Optimization: 6 10
Progression : [3;6] (Error: 1)
Progression : [4;6] (Error: 0.5)
Progression : [5;6] (Error: 0.2)
Progression : [6;6] (Error: 0)
Progression : 6 [ 1;10] (Error: 9)
Progression : 6 [ 2;10] (Error: 4)
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),11) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(2)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),8) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),5) preference(1,less(weight)) output(2,better,6) output(2,better,3) output(2,better,8) output(2,better,9) output(8,better,9) output(1,better,7) output(1,better,5) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,3) output(1,better,8) output(1,better,9) output(3,better,8) output(3,better,9) output(5,better,8) output(5,better,9) output(6,better,3) output(6,better,8) output(6,better,9) output(4,better,3) output(4,better,8) output(4,better,9) output(7,better,5) output(7,better,4) output(7,better,2) output(7,better,6) output(7,better,3) output(7,better,8) output(7,better,9) output(5,worse,4) output(5,worse,2) output(5,worse,6) output(4,worse,2) output(5,eq,3) output(4,eq,6)
Optimization: 6 9
SATISFIABLE

Models       : 15+
  Optimum    : unknown
Optimization : 6 9
Bounds       : 6 [2;9]
Calls        : 1
Time         : 891.732s (Solving: 887.25s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 3552.925s
Threads      : 4        (Winner: 0)

Choices      : 10237045 (Domain: 6839)
Conflicts    : 7657627  (Analyzed: 7657619)
Restarts     : 13288    (Average: 576.28 Last: 326552)
Model-Level  : 1056.9  
Problems     : 16       (Average Length: 0.25 Splits: 0)
Lemmas       : 7692764  (Deleted: 7250270)
  Binary     : 4088     (Ratio:   0.05%)
  Ternary    : 491      (Ratio:   0.01%)
  Conflict   : 7657619  (Average Length:  289.7 Ratio:  99.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 35145    (Average Length:   89.5 Ratio:   0.46%) 
  Distributed: 11715    (Ratio:   0.15% Average LBD: 3.61) 
  Integrated : 35145    (Ratio: 300.00% Unit: 494 Average Jumps: 8.47)
Backjumps    : 7657619  (Average:  1.27 Max: 1519 Sum: 9755599)
  Executed   : 7657588  (Average:  1.27 Max: 1519 Sum: 9755378 Ratio: 100.00%)
  Bounded    : 31       (Average:  7.13 Max:  35 Sum:    221 Ratio:   0.00%)

Rules        : 1304235 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 372539  
Bodies       : 376772  
  Sum        : 216     
  Count      : 10      
Equivalences : 1106912  (Atom=Atom: 356259 Body=Body: 365068 Other: 385585)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  11 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPriceLevel(1)) ; 
  11 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPriceLevel(1)) ; 
  9 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPriceLevel(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: not atom(hasMinorGrp(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOilyLevel(2)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  2 :: not atom(hasMinorGrp(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOilyLevel(1)) ; 
  4 :: not atom(hasMinorGrp(2))  ; 
  4 :: not atom(hasMinorGrp(0))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOiliness(0)) ; 
  3 :: not atom(hasPrice(0))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  6 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOilyLevel(1)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasPrice(0))  ; 
  9 :: not atom(hasPriceLevel(0))  ; 
  9 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOilyLevel(1)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  9 :: not atom(hasPriceLevel(0))  ; 
  9 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  3 :: atom(hasOilyLevel(1)) ; 
  9 :: atom(hasOiliness(0)) ; 
  3 :: not atom(hasPrice(0))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  11 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOilyLevel(1)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  1 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOilyLevel(1)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasPrice(0))  ; 
  8 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasMinorGrp(2))  ; 
  6 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasOilyLevel(1)) 
}.
Time limit reached
