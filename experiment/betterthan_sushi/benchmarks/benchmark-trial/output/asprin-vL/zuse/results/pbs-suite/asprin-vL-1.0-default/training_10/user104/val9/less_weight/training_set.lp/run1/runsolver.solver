asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(2,eq,7) output(2,eq,1) output(2,eq,5) output(2,eq,4) output(2,eq,6) output(2,eq,8) output(2,eq,3) output(2,eq,0) output(7,eq,1) output(7,eq,5) output(7,eq,4) output(7,eq,6) output(7,eq,8) output(7,eq,3) output(7,eq,0) output(1,eq,5) output(1,eq,4) output(1,eq,6) output(1,eq,8) output(1,eq,3) output(1,eq,0) output(5,eq,4) output(5,eq,6) output(5,eq,8) output(5,eq,3) output(5,eq,0) output(4,eq,6) output(4,eq,8) output(4,eq,3) output(4,eq,0) output(6,eq,8) output(6,eq,3) output(6,eq,0) output(8,eq,3) output(8,eq,0) output(3,eq,0)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,less(weight)) output(2,better,7) output(2,better,5) output(2,better,3) output(8,better,3) output(1,better,5) output(1,better,3) output(6,better,3) output(4,better,3) output(3,worse,0) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(5,worse,0) output(7,worse,1) output(7,worse,4) output(7,worse,6) output(7,worse,8) output(7,worse,0) output(2,eq,1) output(2,eq,4) output(2,eq,6) output(2,eq,8) output(2,eq,0) output(7,eq,5) output(7,eq,3) output(1,eq,4) output(1,eq,6) output(1,eq,8) output(1,eq,0) output(5,eq,3) output(4,eq,6) output(4,eq,8) output(4,eq,0) output(6,eq,8) output(6,eq,0) output(8,eq,0)
Optimization: 28 1
Answer: 3
preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(2,better,5) output(2,better,3) output(2,better,0) output(8,better,3) output(8,better,0) output(1,better,5) output(1,better,3) output(1,better,0) output(6,better,3) output(6,better,0) output(4,better,3) output(4,better,0) output(7,better,5) output(7,better,3) output(7,better,0) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(2,eq,7) output(2,eq,1) output(2,eq,4) output(2,eq,6) output(2,eq,8) output(7,eq,1) output(7,eq,4) output(7,eq,6) output(7,eq,8) output(1,eq,4) output(1,eq,6) output(1,eq,8) output(5,eq,3) output(5,eq,0) output(4,eq,6) output(4,eq,8) output(6,eq,8) output(3,eq,0)
Optimization: 21 1
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(2,better,5) output(2,better,3) output(2,better,0) output(8,better,3) output(8,better,0) output(1,better,5) output(1,better,3) output(1,better,0) output(6,better,3) output(6,better,0) output(4,better,3) output(4,better,0) output(7,better,1) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(2,worse,7) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(2,eq,1) output(2,eq,4) output(2,eq,6) output(2,eq,8) output(1,eq,4) output(1,eq,6) output(1,eq,8) output(5,eq,3) output(5,eq,0) output(4,eq,6) output(4,eq,8) output(6,eq,8) output(3,eq,0)
Optimization: 17 4
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),7) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(2,better,5) output(2,better,3) output(2,better,0) output(8,better,3) output(8,better,0) output(1,better,5) output(1,better,3) output(1,better,0) output(3,better,0) output(5,better,0) output(6,better,3) output(6,better,0) output(4,better,3) output(4,better,0) output(7,better,1) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(2,worse,7) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(2,eq,1) output(2,eq,4) output(2,eq,6) output(2,eq,8) output(1,eq,4) output(1,eq,6) output(1,eq,8) output(5,eq,3) output(4,eq,6) output(4,eq,8) output(6,eq,8)
Optimization: 15 5
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),4) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),8) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(2,better,7) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,3) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(6,better,8) output(6,better,3) output(6,better,0) output(4,better,8) output(4,better,3) output(4,better,0) output(7,better,5) output(7,better,3) output(2,worse,1) output(8,worse,0) output(3,worse,0) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(5,worse,0) output(7,worse,1) output(7,worse,4) output(7,worse,6) output(7,worse,8) output(7,worse,0) output(5,eq,3) output(4,eq,6)
Optimization: 14 10
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),8) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),5) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),5) preference(1,less(weight)) output(2,better,7) output(2,better,1) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,3) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(5,better,4) output(5,better,6) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(3,worse,0) output(5,worse,8) output(5,worse,0) output(6,worse,8) output(6,worse,3) output(6,worse,0) output(4,worse,8) output(4,worse,3) output(4,worse,0) output(7,worse,1) output(5,eq,3) output(4,eq,6) output(8,eq,0)
Optimization: 13 10
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),5) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),5) preference(1,less(weight)) output(2,better,7) output(2,better,1) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,3) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(6,better,8) output(6,better,3) output(6,better,0) output(4,better,8) output(4,better,3) output(4,better,0) output(7,better,5) output(7,better,8) output(7,better,3) output(7,better,0) output(3,worse,0) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(5,worse,0) output(7,worse,1) output(7,worse,4) output(7,worse,6) output(5,eq,3) output(4,eq,6) output(8,eq,0)
Optimization: 11 10
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),8) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,3) output(8,better,0) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(3,better,0) output(5,better,4) output(5,better,6) output(5,better,0) output(6,better,0) output(4,better,0) output(7,better,1) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(2,worse,7) output(5,worse,8) output(6,worse,8) output(6,worse,3) output(4,worse,8) output(4,worse,3) output(2,eq,1) output(5,eq,3) output(4,eq,6)
Optimization: 9 10
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(2,better,1) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,3) output(8,better,0) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(3,better,0) output(5,better,4) output(5,better,6) output(5,better,0) output(6,better,0) output(4,better,0) output(7,better,1) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(2,worse,7) output(5,worse,8) output(6,worse,8) output(6,worse,3) output(4,worse,8) output(4,worse,3) output(5,eq,3) output(4,eq,6)
Optimization: 8 10
Progression : [1;8] (Error: 7)
Progression : [2;8] (Error: 3)
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),1) preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),10) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),10) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,9),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),9) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),12) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(2,better,7) output(2,better,1) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,3) output(8,better,0) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(3,better,0) output(5,better,0) output(6,better,8) output(6,better,3) output(6,better,0) output(4,better,8) output(4,better,3) output(4,better,0) output(7,better,1) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(5,worse,4) output(5,worse,6) output(5,worse,8) output(5,eq,3) output(4,eq,6)
Optimization: 5 10
Progression : [3;5] (Error: 0.666667)
Progression : [4;5] (Error: 0.25)
Progression : [5;5] (Error: 0)
Progression : 5 [ 1;10] (Error: 9)
Answer: 12
preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,4),1,for(atom(hasOiliness(1))),11) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),9) preference(1,less(weight)) output(2,better,7) output(2,better,1) output(2,better,5) output(2,better,4) output(2,better,6) output(2,better,8) output(2,better,3) output(2,better,0) output(8,better,0) output(1,better,5) output(1,better,4) output(1,better,6) output(1,better,8) output(1,better,3) output(1,better,0) output(3,better,0) output(5,better,8) output(5,better,0) output(6,better,8) output(6,better,3) output(6,better,0) output(4,better,8) output(4,better,3) output(4,better,0) output(7,better,1) output(7,better,5) output(7,better,4) output(7,better,6) output(7,better,8) output(7,better,3) output(7,better,0) output(8,worse,3) output(5,worse,4) output(5,worse,6) output(5,eq,3) output(4,eq,6)
Optimization: 5 9
SATISFIABLE

Models       : 12+
  Optimum    : unknown
Optimization : 5 9
Bounds       : 5 [1;9]
Calls        : 1
Time         : 652.334s (Solving: 647.33s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2593.989s
Threads      : 4        (Winner: 0)

Choices      : 5482498  (Domain: 3084)
Conflicts    : 4828807  (Analyzed: 4828801)
Restarts     : 7525     (Average: 641.70 Last: 184271)
Model-Level  : 1033.8  
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 4851778  (Deleted: 4397108)
  Binary     : 1637     (Ratio:   0.03%)
  Ternary    : 525      (Ratio:   0.01%)
  Conflict   : 4828801  (Average Length:  258.7 Ratio:  99.53%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 22977    (Average Length:   79.0 Ratio:   0.47%) 
  Distributed: 7659     (Ratio:   0.16% Average LBD: 3.56) 
  Integrated : 22977    (Ratio: 300.00% Unit: 288 Average Jumps: 11.01)
Backjumps    : 4828801  (Average:  1.10 Max: 1656 Sum: 5295160)
  Executed   : 4828759  (Average:  1.10 Max: 1656 Sum: 5294496 Ratio:  99.99%)
  Bounded    : 42       (Average: 15.81 Max:  37 Sum:    664 Ratio:   0.01%)

Rules        : 1299435 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 367739  
Bodies       : 371852  
  Sum        : 216     
  Count      : 10      
Equivalences : 1092152  (Atom=Atom: 351459 Body=Body: 360148 Other: 380545)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOilyLevel(2)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasPriceLevel(1)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasMinorGrp(2))  ; 
  7 :: atom(hasPriceLevel(2)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  4 :: not atom(hasMinorGrp(1))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasOilyLevel(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(1))  ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: not atom(hasPrice(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasPriceLevel(2))  ; 
  5 :: atom(hasPriceLevel(2)) ; 
  2 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(1))  ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasPriceLevel(2))  ; 
  5 :: atom(hasPriceLevel(2)) ; 
  2 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasPrice(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  8 :: atom(hasPriceLevel(1)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  12 :: atom(hasMinorGrp(1)) ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  3 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasPrice(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  8 :: atom(hasPriceLevel(1)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(1)) ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  3 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOilyLevel(0))  ; 
  10 :: not atom(hasOiliness(0))  ; 
  11 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasPriceLevel(1)) ; 
  10 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOilyLevel(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  11 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasPrice(1))  ; 
  9 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPriceLevel(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  11 :: atom(hasOiliness(1)) ; 
  10 :: not atom(hasOilyLevel(1))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOilyLevel(2)) ; 
  2 :: not atom(hasPriceLevel(1))  ; 
  6 :: not atom(hasPrice(0))  
}.
Time limit reached
