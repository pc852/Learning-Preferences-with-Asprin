asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,5) output(37,eq,35) output(37,eq,52) output(37,eq,14) output(37,eq,4) output(1,eq,18) output(1,eq,11) output(1,eq,5) output(1,eq,35) output(1,eq,52) output(1,eq,14) output(1,eq,4) output(18,eq,11) output(18,eq,5) output(18,eq,35) output(18,eq,52) output(18,eq,14) output(18,eq,4) output(11,eq,5) output(11,eq,35) output(11,eq,52) output(11,eq,14) output(11,eq,4) output(5,eq,35) output(5,eq,52) output(5,eq,14) output(5,eq,4) output(35,eq,52) output(35,eq,14) output(35,eq,4) output(52,eq,14) output(52,eq,4) output(14,eq,4)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(37,better,11) output(37,better,5) output(1,better,11) output(1,better,5) output(11,worse,35) output(11,worse,52) output(11,worse,14) output(11,worse,4) output(5,worse,35) output(5,worse,52) output(5,worse,14) output(5,worse,4) output(37,eq,1) output(37,eq,18) output(37,eq,35) output(37,eq,52) output(37,eq,14) output(37,eq,4) output(1,eq,18) output(1,eq,35) output(1,eq,52) output(1,eq,14) output(1,eq,4) output(18,eq,35) output(18,eq,52) output(18,eq,14) output(18,eq,4) output(11,eq,5) output(35,eq,52) output(35,eq,14) output(35,eq,4) output(52,eq,14) output(52,eq,4) output(14,eq,4)
Optimization: 30 1
Answer: 3
preference(1,(1,2),1,for(atom(hasPriceLevel(2))),12) preference(1,less(weight)) output(18,better,14) output(18,better,4) output(37,better,14) output(37,better,4) output(11,better,14) output(11,better,4) output(1,better,14) output(1,better,4) output(52,better,14) output(52,better,4) output(5,better,14) output(5,better,4) output(35,better,14) output(35,better,4) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,5) output(37,eq,35) output(37,eq,52) output(1,eq,18) output(1,eq,11) output(1,eq,5) output(1,eq,35) output(1,eq,52) output(18,eq,11) output(18,eq,5) output(18,eq,35) output(18,eq,52) output(11,eq,5) output(11,eq,35) output(11,eq,52) output(5,eq,35) output(5,eq,52) output(35,eq,52) output(14,eq,4)
Optimization: 22 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),12) preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasOftenSold(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(18,better,11) output(18,better,52) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(11,better,52) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(5,better,52) output(35,better,52) output(18,worse,35) output(18,worse,14) output(18,worse,4) output(37,worse,4) output(11,worse,5) output(11,worse,35) output(11,worse,14) output(11,worse,4) output(1,worse,4) output(14,worse,4) output(52,worse,14) output(52,worse,4) output(5,worse,35) output(5,worse,14) output(5,worse,4) output(35,worse,14) output(35,worse,4) output(37,eq,1) output(37,eq,14) output(1,eq,14) output(18,eq,5)
Optimization: 21 10
Answer: 5
preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),8) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,11) output(37,better,4) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,4) output(14,better,4) output(52,better,4) output(5,better,35) output(5,better,4) output(35,better,4) output(37,worse,1) output(37,worse,18) output(37,worse,5) output(37,worse,52) output(37,worse,14) output(11,worse,5) output(11,worse,35) output(11,worse,52) output(11,worse,14) output(11,worse,4) output(1,worse,18) output(52,worse,14) output(5,worse,52) output(5,worse,14) output(35,worse,52) output(35,worse,14) output(37,eq,35) output(1,eq,14)
Optimization: 18 10
Answer: 6
preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,14) output(18,better,4) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,4) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,4) output(35,better,4) output(18,worse,52) output(37,worse,18) output(37,worse,52) output(11,worse,5) output(11,worse,35) output(11,worse,52) output(11,worse,14) output(11,worse,4) output(1,worse,18) output(1,worse,52) output(5,worse,52) output(5,worse,14) output(35,worse,52) output(35,worse,14) output(37,eq,1) output(37,eq,14) output(1,eq,14)
Optimization: 17 9
Answer: 7
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),12) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,11) output(37,better,35) output(37,better,52) output(37,better,4) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,4) output(14,better,4) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,4) output(37,worse,1) output(37,worse,18) output(37,worse,14) output(11,worse,5) output(11,worse,35) output(11,worse,52) output(11,worse,14) output(11,worse,4) output(1,worse,18) output(52,worse,14) output(5,worse,14) output(35,worse,52) output(35,worse,14) output(35,worse,4) output(37,eq,5) output(1,eq,14)
Optimization: 16 10
Answer: 8
preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),12) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,11) output(37,better,52) output(37,better,4) output(11,better,4) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,4) output(14,better,4) output(52,better,4) output(5,better,52) output(5,better,4) output(35,better,52) output(35,better,4) output(37,worse,1) output(37,worse,18) output(37,worse,14) output(11,worse,5) output(11,worse,35) output(11,worse,52) output(11,worse,14) output(1,worse,18) output(52,worse,14) output(5,worse,14) output(35,worse,14) output(37,eq,5) output(37,eq,35) output(1,eq,14) output(5,eq,35)
Optimization: 15 10
Answer: 9
preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),12) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,4),1,for(atom(hasOiliness(0))),5) preference(1,(1,5),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,11) output(37,better,35) output(37,better,52) output(37,better,4) output(11,better,4) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,4) output(14,better,4) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,4) output(35,better,4) output(37,worse,1) output(37,worse,18) output(37,worse,14) output(11,worse,5) output(11,worse,35) output(11,worse,52) output(11,worse,14) output(1,worse,18) output(52,worse,14) output(5,worse,14) output(35,worse,52) output(35,worse,14) output(37,eq,5) output(1,eq,14)
Optimization: 14 10
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(2)))),8) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),5) preference(1,less(weight)) output(18,better,52) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,52) output(1,better,4) output(14,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4) output(18,worse,11) output(18,worse,5) output(18,worse,35) output(18,worse,14) output(37,worse,11) output(37,worse,5) output(11,worse,5) output(1,worse,11) output(1,worse,5) output(1,worse,35) output(52,worse,14) output(52,worse,4) output(1,eq,14)
Optimization: 13 10
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),12) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),5) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(2)))),5) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),5) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),11) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),5) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),5) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),11) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,14) output(5,better,4) output(37,worse,18) output(1,worse,18) output(35,worse,52) output(37,eq,1) output(37,eq,11) output(1,eq,11) output(5,eq,52) output(35,eq,14) output(35,eq,4) output(14,eq,4)
Optimization: 10 10
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,3),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),8) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),11) preference(1,less(weight)) output(18,better,52) output(18,better,4) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,4) output(5,better,52) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4) output(18,worse,11) output(18,worse,35) output(18,worse,14) output(52,worse,14) output(5,worse,35) output(5,worse,14) output(37,eq,1) output(18,eq,5)
Optimization: 8 10
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),8) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasOftenSold(1))),1) preference(1,less(weight)) output(18,better,52) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,4) output(5,better,52) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4) output(18,worse,11) output(18,worse,5) output(18,worse,35) output(18,worse,14) output(52,worse,14) output(5,worse,35) output(5,worse,14)
Optimization: 7 10
Answer: 14
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(2)))),11) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),4) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),7) preference(1,(1,3),1,for(atom(hasOftenSold(1))),1) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),10) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),11) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),11) preference(1,less(weight)) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,4) output(35,better,4) output(5,worse,52) output(35,worse,52) output(35,worse,14) output(18,eq,11) output(5,eq,14)
Optimization: 5 10
Answer: 15
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),2) preference(1,(1,2),1,for(atom(hasOftenSold(1))),12) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasOftenSold(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),11) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,14) output(5,better,4) output(35,better,14) output(35,better,4) output(1,worse,18) output(5,worse,52) output(35,worse,52) output(1,eq,11)
Optimization: 4 10
Answer: 16
preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),2) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,14) output(5,better,4) output(35,better,14) output(35,better,4) output(37,worse,1) output(35,worse,52) output(5,eq,52)
Optimization: 3 10
Answer: 17
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,6),1,for(atom(hasPrice(0))),9) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,10),1,for(atom(hasOftenSold(1))),9) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,14) output(5,better,4) output(35,better,14) output(35,better,4) output(35,worse,52) output(5,eq,52)
Optimization: 2 10
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),9) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,2),1,for(atom(hasOilyLevel(1))),8) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,5),1,for(atom(hasOftenSold(0))),5) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),6) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(35,better,14) output(35,better,4) output(35,worse,52)
Optimization: 1 10
Answer: 19
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),7) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasOftenSold(1))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 20
preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),8) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),8) preference(1,(1,2),1,for(atom(hasOftenSold(0))),2) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4)
Optimization: 0 9
Answer: 21
preference(1,(1,3),1,for(neg(atom(hasOilyLevel(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,8),1,for(atom(hasOftenSold(1))),3) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4)
Optimization: 0 8
Answer: 22
preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),8) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(2)))),11) preference(1,(1,9),1,for(neg(atom(hasOftenSold(0)))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),9) preference(1,less(weight)) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(11,better,5) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(14,better,4) output(52,better,14) output(52,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(35,better,52) output(35,better,14) output(35,better,4)
Optimization: 0 7
SATISFIABLE

Models       : 22+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 774.170s (Solving: 769.36s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 3080.290s
Threads      : 4        (Winner: 0)

Choices      : 17707377 (Domain: 10030)
Conflicts    : 4617690  (Analyzed: 4617688)
Restarts     : 5041     (Average: 916.03 Last: 131263)
Model-Level  : 617.0   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 4626310  (Deleted: 4317069)
  Binary     : 1100     (Ratio:   0.02%)
  Ternary    : 314      (Ratio:   0.01%)
  Conflict   : 4617688  (Average Length: 1075.0 Ratio:  99.81%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8622     (Average Length:   97.6 Ratio:   0.19%) 
  Distributed: 2874     (Ratio:   0.06% Average LBD: 3.42) 
  Integrated : 8622     (Ratio: 300.00% Unit: 9 Average Jumps: 116.67)
Backjumps    : 4617688  (Average:  2.83 Max: 2217 Sum: 13045004)
  Executed   : 4617687  (Average:  2.83 Max: 2217 Sum: 13044975 Ratio: 100.00%)
  Bounded    : 1        (Average: 29.00 Max:  29 Sum:     29 Ratio:   0.00%)

Rules        : 1309035 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 377339  
Bodies       : 381692  
  Sum        : 216     
  Count      : 10      
Equivalences : 1121672  (Atom=Atom: 361059 Body=Body: 369988 Other: 390625)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  12 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  8 :: not atom(hasOftenSold(1))  ; 
  4 :: not atom(hasOiliness(1))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOiliness(1))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasMinorGrp(1))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: not atom(hasOiliness(1))  ; 
  2 :: not atom(hasOftenSold(1))  ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  12 :: not atom(hasOiliness(0))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  5 :: atom(hasOiliness(0)) ; 
  12 :: atom(hasPriceLevel(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasPriceLevel(2)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasOftenSold(1))  ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPriceLevel(1))  ; 
  12 :: not atom(hasOftenSold(0))  ; 
  8 :: not atom(hasOilyLevel(2))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  10 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  5 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasMinorGrp(0))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasMinorGrp(3))  ; 
  5 :: atom(hasOilyLevel(0)) ; 
  5 :: atom(hasPriceLevel(0)) ; 
  5 :: not atom(hasMinorGrp(2))  ; 
  5 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasPriceLevel(2))  ; 
  11 :: atom(hasPriceLevel(1)) ; 
  11 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPriceLevel(1))  ; 
  12 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  3 :: atom(hasMinorGrp(1)) ; 
  12 :: atom(hasOilyLevel(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: not atom(hasOftenSold(1))  ; 
  11 :: atom(hasMinorGrp(2)) ; 
  8 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasPriceLevel(1))  ; 
  12 :: atom(hasPriceLevel(2)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  12 :: atom(hasOilyLevel(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: not atom(hasOftenSold(1))  ; 
  1 :: atom(hasOftenSold(1)) ; 
  8 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasOftenSold(0))  ; 
  1 :: atom(hasOftenSold(1)) ; 
  11 :: not atom(hasOilyLevel(2))  ; 
  2 :: atom(hasOilyLevel(1)) ; 
  10 :: atom(hasPriceLevel(0)) ; 
  4 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasMinorGrp(0))  ; 
  11 :: atom(hasPriceLevel(1)) ; 
  11 :: atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPriceLevel(1)) ; 
  12 :: atom(hasOftenSold(1)) ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  5 :: atom(hasOilyLevel(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasMinorGrp(2))  ; 
  3 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPriceLevel(1)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  7 :: atom(hasPriceLevel(2)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  9 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  1 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  9 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(0))  ; 
  8 :: atom(hasOilyLevel(1)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  9 :: not atom(hasOftenSold(0))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasPriceLevel(2)) ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  3 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOftenSold(0)) ; 
  7 :: not atom(hasOilyLevel(2))  ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasOftenSold(0))  ; 
  2 :: not atom(hasOiliness(0))  ; 
  3 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOilyLevel(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  12 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  4 :: atom(hasMinorGrp(1)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  8 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(1)) ; 
  10 :: not atom(hasOilyLevel(2))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  11 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  7 :: atom(hasPriceLevel(2)) ; 
  5 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  9 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasOftenSold(0))  ; 
  9 :: atom(hasPriceLevel(2)) 
}.
Time limit reached
