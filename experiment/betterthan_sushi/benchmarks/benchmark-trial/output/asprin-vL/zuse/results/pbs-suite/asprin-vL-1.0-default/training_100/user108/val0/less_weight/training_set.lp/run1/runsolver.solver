asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(15,eq,2) output(15,eq,13) output(15,eq,27) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(15,eq,4) output(15,eq,3) output(15,eq,48) output(2,eq,13) output(2,eq,27) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(2,eq,4) output(2,eq,3) output(2,eq,48) output(13,eq,27) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(13,eq,4) output(13,eq,3) output(13,eq,48) output(27,eq,55) output(27,eq,42) output(27,eq,32) output(27,eq,4) output(27,eq,3) output(27,eq,48) output(55,eq,42) output(55,eq,32) output(55,eq,4) output(55,eq,3) output(55,eq,48) output(42,eq,32) output(42,eq,4) output(42,eq,3) output(42,eq,48) output(32,eq,4) output(32,eq,3) output(32,eq,48) output(4,eq,3) output(4,eq,48) output(3,eq,48)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(32,better,4) output(2,better,27) output(2,better,4) output(15,better,27) output(15,better,4) output(55,better,4) output(42,better,4) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(27,worse,3) output(27,worse,48) output(4,worse,3) output(4,worse,48) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(15,eq,3) output(15,eq,48) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(2,eq,3) output(2,eq,48) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(13,eq,3) output(13,eq,48) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(55,eq,3) output(55,eq,48) output(42,eq,32) output(42,eq,3) output(42,eq,48) output(32,eq,3) output(32,eq,48) output(3,eq,48)
Optimization: 36 1
Answer: 3
preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(13,better,3) output(13,better,48) output(27,better,3) output(27,better,48) output(32,better,3) output(32,better,48) output(2,better,3) output(2,better,48) output(15,better,3) output(15,better,48) output(55,better,3) output(55,better,48) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(15,eq,2) output(15,eq,13) output(15,eq,27) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(15,eq,4) output(2,eq,13) output(2,eq,27) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(2,eq,4) output(13,eq,27) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(13,eq,4) output(27,eq,55) output(27,eq,42) output(27,eq,32) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(55,eq,4) output(42,eq,32) output(42,eq,4) output(32,eq,4) output(3,eq,48)
Optimization: 29 1
Progression : [ 1;29] (Error: 28)
Answer: 4
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),12) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,48) output(27,better,48) output(32,better,4) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,48) output(55,better,4) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,48) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(27,worse,3) output(4,worse,3) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(15,eq,3) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(2,eq,3) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(13,eq,3) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(55,eq,3) output(42,eq,32) output(42,eq,3) output(32,eq,3)
Optimization: 27 2
Answer: 5
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,3) output(13,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(27,worse,3) output(27,worse,48) output(4,worse,3) output(4,worse,48) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(42,eq,32) output(3,eq,48)
Optimization: 24 2
Answer: 6
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),1) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,4) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(27,worse,3) output(27,worse,48) output(4,worse,3) output(4,worse,48) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(55,eq,42) output(55,eq,32) output(42,eq,32) output(3,eq,48)
Optimization: 23 3
Answer: 7
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(4,worse,3) output(4,worse,48) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(55,eq,42) output(55,eq,32) output(42,eq,32) output(3,eq,48)
Optimization: 21 3
Answer: 8
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),4) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(42,eq,32) output(3,eq,48)
Optimization: 20 2
Answer: 9
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),5) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(55,eq,42) output(55,eq,32) output(42,eq,32) output(3,eq,48)
Optimization: 19 3
Answer: 10
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(13,better,27) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(15,eq,2) output(15,eq,13) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(2,eq,13) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(55,eq,42) output(55,eq,32) output(42,eq,32)
Optimization: 18 4
Answer: 11
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(42,eq,32) output(3,eq,48)
Optimization: 11 4
Answer: 12
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),4) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(27,eq,4) output(55,eq,42) output(55,eq,32) output(42,eq,32)
Optimization: 10 3
Answer: 13
preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),1) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),1) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,42) output(27,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(55,eq,42) output(55,eq,32) output(42,eq,32)
Optimization: 9 4
Answer: 14
preference(1,(1,4),1,for(neg(atom(hasOilyLevel(0)))),11) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,6),1,for(atom(hasOftenSold(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,32) output(42,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(55,eq,32) output(3,eq,48)
Optimization: 8 7
Answer: 15
preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),12) preference(1,(1,6),1,for(atom(hasOftenSold(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(27,worse,55) output(27,worse,32) output(42,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(55,eq,32)
Optimization: 7 9
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),4) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,6),1,for(atom(hasOftenSold(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(42,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(55,eq,32) output(42,eq,4)
Optimization: 6 8
Answer: 17
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),10) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),12) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,6),1,for(atom(hasOftenSold(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(42,worse,32) output(15,eq,2) output(15,eq,13) output(2,eq,13) output(55,eq,32)
Optimization: 5 10
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),10) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),12) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,6),1,for(atom(hasOftenSold(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,2) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,32) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(2,worse,13) output(55,worse,42) output(15,eq,13) output(55,eq,32)
Optimization: 4 10
Progression : [2;4] (Error: 1)
Progression : [3;4] (Error: 0.333333)
Progression : [4;4] (Error: 0)
Progression : 4 [ 1;10] (Error: 9)
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),9) preference(1,(1,8),1,for(atom(hasPrice(1))),11) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,13) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(15,worse,2) output(42,worse,32) output(15,eq,13) output(55,eq,32)
Optimization: 4 9
Answer: 20
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),5) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),11) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),12) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,2) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(2,worse,13) output(42,worse,32) output(15,eq,13) output(55,eq,32)
Optimization: 4 8
Progression : 4 [2;8] (Error: 3)
Answer: 21
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),12) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),12) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,13) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(15,worse,2) output(42,worse,32) output(15,eq,13) output(55,eq,32)
Optimization: 4 7
Answer: 22
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,13) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(15,worse,2) output(42,worse,32) output(15,eq,13) output(55,eq,32)
Optimization: 4 6
Answer: 23
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(13,better,27) output(13,better,55) output(13,better,42) output(13,better,32) output(13,better,4) output(13,better,3) output(13,better,48) output(27,better,55) output(27,better,42) output(27,better,32) output(27,better,4) output(27,better,3) output(27,better,48) output(32,better,4) output(32,better,3) output(32,better,48) output(2,better,13) output(2,better,27) output(2,better,55) output(2,better,42) output(2,better,32) output(2,better,4) output(2,better,3) output(2,better,48) output(15,better,27) output(15,better,55) output(15,better,42) output(15,better,32) output(15,better,4) output(15,better,3) output(15,better,48) output(55,better,42) output(55,better,4) output(55,better,3) output(55,better,48) output(3,better,48) output(42,better,4) output(42,better,3) output(42,better,48) output(4,better,3) output(4,better,48) output(15,worse,2) output(42,worse,32) output(15,eq,13) output(55,eq,32)
Optimization: 4 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.177 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 4 5
Bounds       : 4 [2;5]
Calls        : 1
Time         : 1197.051s (Solving: 1192.29s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 4773.073s
Threads      : 4        (Winner: 4)

Choices      : 20259017 (Domain: 5837)
Conflicts    : 4778278  (Analyzed: 4778271)
Restarts     : 6421     (Average: 744.16 Last: 175101)
Model-Level  : 914.8   
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 4790878  (Deleted: 4532925)
  Binary     : 903      (Ratio:   0.02%)
  Ternary    : 723      (Ratio:   0.02%)
  Conflict   : 4778265  (Average Length:  923.3 Ratio:  99.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12613    (Average Length:  453.4 Ratio:   0.26%) 
  Distributed: 4207     (Ratio:   0.09% Average LBD: 3.71) 
  Integrated : 12621    (Ratio: 300.00% Unit: 148 Average Jumps: 22.07)
Backjumps    : 4778271  (Average:  3.23 Max: 2515 Sum: 15417700)
  Executed   : 4778250  (Average:  3.23 Max: 2515 Sum: 15417199 Ratio: 100.00%)
  Bounded    : 21       (Average: 23.86 Max:  44 Sum:    501 Ratio:   0.00%)

Rules        : 1637148 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 489101  
Bodies       : 493067  
  Sum        : 270     
  Count      : 10      
Equivalences : 1455770  (Atom=Atom: 470913 Body=Body: 481264 Other: 503593)
Tight        : Yes
Variables    : 16675    (Eliminated:    0 Frozen: 11715)
Constraints  : 1181671  (Binary:  98.9% Ternary:   0.4% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(3)) ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPriceLevel(2)) ; 
  5 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPriceLevel(2)) ; 
  12 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(0)) ; 
  12 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasPriceLevel(2)) ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  11 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  11 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  11 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasMinorGrp(3)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  1 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasMinorGrp(2))  ; 
  6 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasMinorGrp(0))  ; 
  11 :: atom(hasOilyLevel(2)) ; 
  10 :: not atom(hasOftenSold(1))  ; 
  2 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMinorGrp(0))  ; 
  11 :: atom(hasOilyLevel(2)) ; 
  10 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  9 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMinorGrp(0))  ; 
  11 :: atom(hasOilyLevel(2)) ; 
  10 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPriceLevel(1)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  6 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasOiliness(0))  ; 
  10 :: not atom(hasOftenSold(1))  ; 
  4 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOilyLevel(2)) ; 
  11 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  ; 
  11 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  12 :: atom(hasOilyLevel(2)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasPriceLevel(2))  ; 
  6 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: not atom(hasOftenSold(1))  ; 
  12 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(1))  ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: not atom(hasOftenSold(1))  ; 
  8 :: atom(hasOilyLevel(2)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasOftenSold(1))  
}.
