asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(5,eq,33) output(5,eq,6) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,1) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(91,eq,7) output(91,eq,1) output(7,eq,1)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(38,better,5) output(5,worse,33) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(91,eq,7) output(91,eq,1) output(7,eq,1)
Optimization: 35 1
Answer: 3
preference(1,(1,2),1,for(atom(hasPriceLevel(2))),12) preference(1,less(weight)) output(33,better,6) output(5,better,6) output(38,better,6) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,7) output(6,worse,1) output(38,eq,5) output(38,eq,33) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(5,eq,33) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,1) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(91,eq,7) output(91,eq,1) output(7,eq,1)
Optimization: 33 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(5,better,33) output(5,better,62) output(5,better,91) output(6,better,62) output(6,better,91) output(91,worse,7) output(91,worse,1) output(33,worse,6) output(33,worse,18) output(33,worse,7) output(33,worse,1) output(62,worse,7) output(62,worse,1) output(38,worse,5) output(38,worse,6) output(38,worse,18) output(38,worse,7) output(38,worse,1) output(38,eq,33) output(38,eq,62) output(38,eq,91) output(5,eq,6) output(5,eq,18) output(5,eq,7) output(5,eq,1) output(33,eq,62) output(33,eq,91) output(6,eq,18) output(6,eq,7) output(6,eq,1) output(18,eq,7) output(18,eq,1) output(62,eq,91) output(7,eq,1)
Optimization: 29 1
Answer: 5
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(33,better,18) output(33,better,91) output(33,better,1) output(5,better,18) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,18) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,7) output(5,eq,33) output(5,eq,6) output(5,eq,62) output(5,eq,7) output(33,eq,6) output(33,eq,62) output(33,eq,7) output(6,eq,62) output(6,eq,7) output(18,eq,91) output(18,eq,1) output(62,eq,7) output(91,eq,1)
Optimization: 21 1
Answer: 6
preference(1,(1,1),1,for(atom(hasOftenSold(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(18,better,91) output(33,better,18) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,18) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(91,worse,1) output(33,worse,6) output(33,worse,7) output(62,worse,7) output(38,worse,5) output(38,worse,6) output(38,worse,7) output(38,eq,33) output(38,eq,62) output(5,eq,6) output(5,eq,7) output(33,eq,62) output(6,eq,7) output(18,eq,1)
Optimization: 17 2
Answer: 7
preference(1,(1,1),1,for(atom(hasOftenSold(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(18,better,91) output(33,better,18) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,33) output(38,better,18) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(91,worse,1) output(33,worse,6) output(33,worse,62) output(33,worse,7) output(5,worse,6) output(5,worse,7) output(62,worse,7) output(38,worse,5) output(38,worse,6) output(38,worse,7) output(38,eq,62) output(6,eq,7) output(18,eq,1)
Optimization: 16 3
Answer: 8
preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(18,better,91) output(33,better,18) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,33) output(38,better,18) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(91,worse,1) output(33,worse,6) output(33,worse,62) output(33,worse,7) output(5,worse,6) output(62,worse,7) output(38,worse,5) output(38,worse,6) output(38,worse,7) output(38,eq,62) output(5,eq,7) output(18,eq,1)
Optimization: 15 3
Answer: 9
preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(18,better,91) output(18,better,1) output(91,better,1) output(33,better,18) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,18) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(33,worse,6) output(33,worse,7) output(5,worse,7) output(6,worse,7) output(62,worse,7) output(38,worse,5) output(38,worse,6) output(38,worse,7) output(38,eq,33) output(38,eq,62) output(33,eq,62)
Optimization: 14 9
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),2) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),2) preference(1,less(weight)) output(18,better,91) output(18,better,1) output(91,better,1) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,18) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(33,worse,7) output(5,worse,7) output(6,worse,7) output(62,worse,7) output(38,worse,5) output(38,worse,33) output(38,worse,6) output(38,worse,62) output(38,worse,7) output(33,eq,6)
Optimization: 13 6
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),2) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,less(weight)) output(18,better,1) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(5,worse,33) output(6,worse,7) output(62,worse,7) output(38,worse,33) output(38,eq,5) output(38,eq,7) output(5,eq,7) output(6,eq,62) output(18,eq,91)
Optimization: 12 7
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),2) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(18,better,1) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(6,better,18) output(6,better,91) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,5) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(5,worse,33) output(6,worse,7) output(62,worse,7) output(38,eq,33) output(5,eq,7) output(6,eq,62) output(18,eq,91)
Optimization: 10 7
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),12) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),5) preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,4),1,for(atom(hasPrice(1))),12) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,7),1,for(atom(hasOftenSold(0))),7) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),2) preference(1,(1,9),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(62,better,91) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(18,worse,1) output(91,worse,7) output(91,worse,1) output(7,worse,1) output(62,worse,7) output(62,worse,1) output(38,worse,5) output(6,eq,1) output(18,eq,7)
Optimization: 9 10
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(2)))),12) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),9) preference(1,(1,1),1,for(atom(hasPriceLevel(0))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),5) preference(1,less(weight)) output(18,better,7) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(62,better,7) output(62,better,1) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(18,worse,62) output(18,worse,91) output(5,worse,33) output(7,worse,1) output(62,worse,91) output(38,worse,5) output(38,worse,33) output(18,eq,1)
Optimization: 8 10
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(2)))),2) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),8) preference(1,(1,2),1,for(atom(hasPrice(0))),11) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),10) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),4) preference(1,less(weight)) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(5,worse,33) output(5,worse,6) output(38,worse,33) output(38,worse,6) output(18,eq,62) output(18,eq,91) output(62,eq,91)
Optimization: 7 10
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(3)))),11) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),8) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),4) preference(1,(1,4),1,for(atom(hasPrice(0))),4) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),10) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,less(weight)) output(18,better,62) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(62,worse,91) output(62,worse,7) output(62,worse,1) output(5,eq,33) output(18,eq,91) output(7,eq,1)
Optimization: 6 10
Answer: 17
preference(1,(1,1),1,for(neg(atom(hasPrice(1)))),11) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),9) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),8) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),7) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,9),1,for(atom(hasPriceLevel(0))),10) preference(1,less(weight)) output(18,better,62) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(62,better,7) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(7,worse,1) output(62,worse,91) output(38,eq,5) output(18,eq,91) output(62,eq,1)
Optimization: 5 10
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),2) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),5) preference(1,less(weight)) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(62,eq,91)
Optimization: 4 10
Answer: 19
preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,5),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,2),1,for(atom(hasOftenSold(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(18,eq,62) output(18,eq,91) output(62,eq,91)
Optimization: 3 10
Answer: 20
preference(1,(1,1),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),5) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),10) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),12) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),9) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 21
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,9),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),11) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1)
Optimization: 0 9
Answer: 22
preference(1,(1,1),1,for(neg(atom(hasOiliness(0)))),8) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),2) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,3),1,for(atom(hasOftenSold(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),4) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1)
Optimization: 0 8
Answer: 23
preference(1,(1,1),1,for(neg(atom(hasOiliness(0)))),8) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,3),1,for(atom(hasOftenSold(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),11) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1)
Optimization: 0 7
Answer: 24
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,4),1,for(atom(hasOftenSold(0))),2) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),3) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,7) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1)
Optimization: 0 6
SATISFIABLE

Models       : 24+
  Optimum    : unknown
Optimization : 0 6
Calls        : 1
Time         : 1183.322s (Solving: 1177.86s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 4716.322s
Threads      : 4        (Winner: 0)

Choices      : 17097894 (Domain: 11608)
Conflicts    : 4735224  (Analyzed: 4735222)
Restarts     : 4811     (Average: 984.25 Last: 84786)
Model-Level  : 669.8   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 4754848  (Deleted: 4447992)
  Binary     : 1788     (Ratio:   0.04%)
  Ternary    : 456      (Ratio:   0.01%)
  Conflict   : 4735222  (Average Length:  990.0 Ratio:  99.59%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 19626    (Average Length:   95.6 Ratio:   0.41%) 
  Distributed: 6542     (Ratio:   0.14% Average LBD: 3.48) 
  Integrated : 19626    (Ratio: 300.00% Unit: 13 Average Jumps: 115.00)
Backjumps    : 4735222  (Average:  2.83 Max: 2274 Sum: 13395456)
  Executed   : 4735221  (Average:  2.83 Max: 2274 Sum: 13395431 Ratio: 100.00%)
  Bounded    : 1        (Average: 25.00 Max:  25 Sum:     25 Ratio:   0.00%)

Rules        : 1323435 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 391739  
Bodies       : 396452  
  Sum        : 216     
  Count      : 10      
Equivalences : 1165952  (Atom=Atom: 375459 Body=Body: 384748 Other: 405745)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: not atom(hasPrice(0))  ; 
  3 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(0))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasOftenSold(1))  ; 
  7 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(0))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(0))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  12 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOftenSold(0))  ; 
  7 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPriceLevel(1)) ; 
  4 :: atom(hasOftenSold(1)) ; 
  5 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPriceLevel(0)) ; 
  4 :: not atom(hasOftenSold(0))  ; 
  12 :: not atom(hasOilyLevel(2))  ; 
  10 :: atom(hasOiliness(0)) ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  6 :: not atom(hasMinorGrp(1))  ; 
  9 :: not atom(hasPrice(1))  ; 
  11 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasPriceLevel(2))  ; 
  11 :: atom(hasPrice(0)) ; 
  2 :: not atom(hasOilyLevel(2))  ; 
  5 :: atom(hasPriceLevel(0)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  6 :: not atom(hasPrice(1))  ; 
  8 :: not atom(hasMinorGrp(3))  ; 
  4 :: atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOilyLevel(2))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasPriceLevel(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOilyLevel(1)) ; 
  11 :: not atom(hasMinorGrp(3))  ; 
  8 :: not atom(hasPriceLevel(2))  ; 
  5 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasOilyLevel(0)) ; 
  2 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: not atom(hasMinorGrp(3))  ; 
  8 :: not atom(hasPriceLevel(2))  ; 
  3 :: atom(hasOilyLevel(0)) ; 
  12 :: atom(hasMinorGrp(2)) ; 
  7 :: not atom(hasOilyLevel(2))  ; 
  6 :: atom(hasPriceLevel(1)) ; 
  10 :: atom(hasPriceLevel(0)) ; 
  2 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasOilyLevel(1))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  2 :: not atom(hasPrice(1))  ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  7 :: not atom(hasOftenSold(0))  ; 
  5 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  7 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasPriceLevel(1)) ; 
  7 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOftenSold(1))  ; 
  5 :: not atom(hasOiliness(0))  ; 
  8 :: not atom(hasOilyLevel(1))  ; 
  10 :: not atom(hasOftenSold(0))  ; 
  11 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  12 :: not atom(hasMinorGrp(1))  ; 
  9 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasPrice(0))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOilyLevel(1)) ; 
  11 :: atom(hasOiliness(1)) ; 
  10 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOftenSold(0))  ; 
  8 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasOiliness(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasPrice(1))  ; 
  3 :: not atom(hasOftenSold(0))  ; 
  11 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  5 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasOiliness(0))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasOftenSold(0))  ; 
  11 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasOilyLevel(1)) ; 
  4 :: atom(hasOiliness(1)) 
}.
Time limit reached
