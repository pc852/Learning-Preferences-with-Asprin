asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(10,eq,0) output(10,eq,12) output(10,eq,47) output(10,eq,6) output(10,eq,27) output(10,eq,18) output(10,eq,7) output(10,eq,19) output(0,eq,12) output(0,eq,47) output(0,eq,6) output(0,eq,27) output(0,eq,18) output(0,eq,7) output(0,eq,19) output(12,eq,47) output(12,eq,6) output(12,eq,27) output(12,eq,18) output(12,eq,7) output(12,eq,19) output(47,eq,6) output(47,eq,27) output(47,eq,18) output(47,eq,7) output(47,eq,19) output(6,eq,27) output(6,eq,18) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 36 0
Answer: 2
preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(27,better,7) output(18,better,7) output(10,better,47) output(0,better,47) output(12,better,47) output(10,worse,27) output(10,worse,18) output(10,worse,19) output(0,worse,27) output(0,worse,18) output(0,worse,19) output(12,worse,27) output(12,worse,18) output(12,worse,19) output(47,worse,27) output(47,worse,18) output(47,worse,19) output(6,worse,27) output(6,worse,18) output(6,worse,19) output(7,worse,19) output(47,worse,6) output(47,worse,7) output(10,eq,0) output(10,eq,12) output(10,eq,6) output(10,eq,7) output(0,eq,12) output(0,eq,6) output(0,eq,7) output(12,eq,6) output(12,eq,7) output(6,eq,7) output(27,eq,18) output(27,eq,19) output(18,eq,19)
Optimization: 31 1
Answer: 3
preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(10,better,47) output(0,better,47) output(12,better,47) output(47,worse,27) output(47,worse,18) output(47,worse,19) output(47,worse,6) output(47,worse,7) output(10,eq,0) output(10,eq,12) output(0,eq,12) output(6,eq,27) output(6,eq,18) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 18 1
Answer: 4
preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(10,worse,47) output(12,worse,47) output(0,worse,47) output(10,eq,0) output(10,eq,12) output(0,eq,12) output(6,eq,27) output(6,eq,18) output(6,eq,7) output(6,eq,19) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 16 1
Answer: 5
preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,19) output(7,better,19) output(18,better,19) output(0,better,12) output(10,better,12) output(10,better,47) output(0,better,47) output(12,worse,18) output(47,worse,18) output(6,worse,18) output(12,worse,7) output(47,worse,7) output(27,worse,7) output(6,worse,7) output(27,worse,18) output(10,eq,0) output(12,eq,47) output(6,eq,27) output(6,eq,19) output(27,eq,19) output(18,eq,7)
Optimization: 14 1
Answer: 6
preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(27,better,7) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,18) output(6,better,7) output(27,better,18) output(7,worse,19) output(18,worse,19) output(10,eq,0) output(10,eq,12) output(10,eq,47) output(0,eq,12) output(0,eq,47) output(12,eq,47) output(6,eq,27) output(6,eq,19) output(27,eq,19) output(18,eq,7)
Optimization: 12 1
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(27,better,7) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,19) output(6,better,7) output(0,better,12) output(27,better,18) output(7,worse,19) output(10,worse,6) output(12,worse,6) output(18,worse,7) output(10,worse,0) output(10,worse,47) output(12,worse,47) output(18,worse,19) output(10,eq,12) output(0,eq,47) output(27,eq,19)
Optimization: 11 3
Answer: 8
preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),1,for(atom(hasOiliness(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,19) output(6,better,19) output(7,better,19) output(27,better,19) output(18,better,19) output(0,better,12) output(10,better,12) output(10,better,47) output(0,better,47) output(6,worse,27) output(6,worse,18) output(27,worse,7) output(18,worse,7) output(6,worse,7) output(27,worse,18) output(10,eq,0) output(12,eq,47) output(12,unc,7) output(47,unc,7)
Optimization: 10 3
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(27,better,7) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,19) output(6,better,7) output(0,better,12) output(27,better,18) output(7,worse,19) output(18,worse,7) output(10,worse,0) output(10,worse,47) output(12,worse,47) output(18,worse,19) output(10,eq,12) output(0,eq,47) output(27,eq,19)
Optimization: 9 4
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,poset) output(27,better,7) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,19) output(6,better,7) output(0,better,12) output(10,better,12) output(10,better,47) output(0,better,47) output(27,better,18) output(7,worse,19) output(18,worse,7) output(18,worse,19) output(10,eq,0) output(12,eq,47) output(27,eq,19)
Optimization: 6 4
Answer: 11
preference(1,(1,1),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),2,for(atom(hasOftenSold(1))),()) preference(1,(1,10),2,for(atom(hasOiliness(1))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(27,better,7) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,18) output(6,better,19) output(6,better,7) output(27,better,19) output(0,better,12) output(10,better,12) output(10,better,47) output(0,better,47) output(27,better,18) output(12,better,47) output(6,worse,27) output(7,worse,19) output(18,worse,7) output(18,worse,19) output(10,eq,0)
Optimization: 5 12
Answer: 12
preference(1,(1,1),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasPrice(0))),()) preference(1,(1,11),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(27,better,7) output(18,better,7) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,18) output(6,better,19) output(6,better,7) output(27,better,19) output(0,better,12) output(10,better,12) output(10,better,47) output(0,better,47) output(27,better,18) output(12,better,47) output(6,worse,27) output(7,worse,19) output(18,worse,19) output(10,eq,0)
Optimization: 4 12
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,12),1,for(atom(hasOiliness(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasOiliness(0))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,11),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(0))),()) preference(1,poset) output(27,better,7) output(18,better,7) output(10,better,6) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(0,better,6) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(12,better,6) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(47,better,6) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(6,better,27) output(6,better,18) output(6,better,19) output(6,better,7) output(27,better,19) output(18,better,19) output(0,better,12) output(10,better,47) output(0,better,47) output(27,better,18) output(12,better,47) output(7,worse,19) output(10,worse,0) output(10,worse,12)
Optimization: 3 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.027 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 3 12
Calls        : 1
Time         : 598.045s (Solving: 592.70s 1st Model: 0.84s Unsat: 0.00s)
CPU Time     : 2375.326s
Threads      : 4        (Winner: 4)

Choices      : 4782939  (Domain: 2869)
Conflicts    : 240119   (Analyzed: 240119)
Restarts     : 321      (Average: 748.03 Last: 13758)
Model-Level  : 564.9   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 15848682 (Deleted: 15708449)
  Binary     : 4239     (Ratio:   0.03%)
  Ternary    : 61638    (Ratio:   0.39%)
  Conflict   : 240118   (Average Length:  796.9 Ratio:   1.52%) 
  Loop       : 15512839 (Average Length:  180.5 Ratio:  97.88%) 
  Other      : 95725    (Average Length:    3.7 Ratio:   0.60%) 
  Distributed: 31934    (Ratio:   0.20% Average LBD: 2.88) 
  Integrated : 95802    (Ratio: 300.00% Unit: 359 Average Jumps: 1104.45)
Backjumps    : 240119   (Average: 16.70 Max: 30456 Sum: 4009598)
  Executed   : 240092   (Average: 16.70 Max: 30456 Sum: 4009512 Ratio: 100.00%)
  Bounded    : 27       (Average:  3.19 Max:  37 Sum:     86 Ratio:   0.00%)

Rules        : 943088  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 23726   
Bodies       : 683862  
  Count      : 48      
Equivalences : 24974    (Atom=Atom: 4294 Body=Body: 5945 Other: 14735)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 642960 Gammas: 0)
Variables    : 652864   (Eliminated:    0 Frozen: 645464)
Constraints  : 3838556  (Binary:  82.6% Ternary:   3.5% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPrice(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOilyLevel(0)) 
}.
