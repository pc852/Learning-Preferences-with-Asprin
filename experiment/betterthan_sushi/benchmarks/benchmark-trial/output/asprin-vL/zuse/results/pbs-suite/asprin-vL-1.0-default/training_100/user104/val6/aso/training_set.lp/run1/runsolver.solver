asprin_vL version 1.0
Reading from stdin
-:338:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:363:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:444:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:718:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:895:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1096:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1100:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1100:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1106:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1205:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1231:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1351:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1385:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1407:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:255:1-16: info: no atoms over signature occur in program:
  output/3

-:247:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:248:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:249:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:250:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:280:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),0,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,5),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasOftenSold(0))),()) preference(1,(1,4),4,for(atom(hasOftenSold(0))),()) preference(1,(1,5),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),4,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,20) output(11,better,29) output(2,better,20) output(2,better,29) output(16,better,20) output(16,better,29) output(20,worse,51) output(20,worse,35) output(20,worse,59) output(20,worse,9) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(11,eq,2) output(11,eq,16) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(2,eq,16) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 30 7
Answer: 2
preference(1,(1,4),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),4,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),4,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,6),4,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),3,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),4,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),4,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(11,better,20) output(11,better,59) output(2,better,20) output(2,better,59) output(16,better,20) output(16,better,59) output(51,better,59) output(35,better,59) output(11,worse,9) output(2,worse,9) output(16,worse,9) output(20,worse,35) output(20,worse,9) output(51,worse,9) output(35,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,16) output(11,eq,35) output(2,eq,16) output(2,eq,35) output(16,eq,35)
Optimization: 28 8
Answer: 3
preference(1,(1,1),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),0,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,7),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,5),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasOftenSold(0))),()) preference(1,(1,3),4,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),4,for(atom(hasOftenSold(0))),()) preference(1,(1,5),4,for(atom(hasOiliness(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(16,worse,20) output(16,worse,29) output(51,worse,35) output(51,worse,59) output(51,worse,9) output(11,eq,2) output(35,eq,59)
Optimization: 10 8
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),0,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),0,for(atom(hasOiliness(0))),()) preference(1,(1,7),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,5),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasOftenSold(0))),()) preference(1,(1,3),4,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),4,for(atom(hasOftenSold(0))),()) preference(1,(1,5),4,for(atom(hasOiliness(1))),()) preference(1,(1,7),4,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(16,worse,20) output(35,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,20) output(2,eq,20) output(16,eq,29) output(35,eq,59)
Optimization: 9 8
Answer: 5
preference(1,(1,2),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),0,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,3),2,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,5),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),4,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,2),1,for(atom(hasOiliness(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),3,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,9) output(59,better,9) output(11,eq,2) output(11,eq,16) output(11,eq,20) output(2,eq,16) output(2,eq,20) output(16,eq,20) output(29,eq,51) output(35,eq,59)
Optimization: 8 3
Progression : [1;8] (Error: 7)
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),0,for(atom(hasOiliness(0))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(atom(hasPrice(0))),()) preference(1,(1,7),0,for(atom(hasOftenSold(1))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,6),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,8),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),3,for(atom(hasOiliness(1))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),3,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),4,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),4,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(11,worse,2) output(11,eq,16)
Optimization: 7 8
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(atom(hasOiliness(1))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),4,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,2),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),4,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,6),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasOiliness(1))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,(1,3),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,9) output(59,better,9) output(16,worse,20) output(35,eq,59)
Optimization: 5 8
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),0,for(atom(hasOftenSold(1))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),3,for(atom(hasOftenSold(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),4,for(atom(hasPrice(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(11,better,2) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(2,worse,20)
Optimization: 4 8
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),3,for(atom(hasOftenSold(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),4,for(atom(hasPrice(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(11,better,2) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(2,worse,20)
Optimization: 3 8
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,3),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(11,worse,2) output(16,worse,20)
Optimization: 2 8
Progression : [2;2] (Error: 0)
Progression : 2 [1;8] (Error: 7)
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(11,worse,2) output(16,worse,20)
Optimization: 2 7
Answer: 12
preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(11,worse,2) output(16,worse,20)
Optimization: 2 6
Answer: 13
preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(11,worse,2) output(16,worse,20)
Optimization: 2 5
Progression : 2 [2;5] (Error: 1.5)
Answer: 14
preference(1,(1,7),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,8),0,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),3,for(atom(hasOiliness(1))),()) preference(1,(1,8),3,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2)
Optimization: 2 4
Answer: 15
preference(1,(1,5),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,8),0,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,8),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),4,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,aso) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2)
Optimization: 2 3
OPTIMUM FOUND

Models       : 15
  Optimum    : yes
Optimization : 2 3
Calls        : 1
Time         : 17.274s (Solving: 12.07s 1st Model: 0.16s Unsat: 6.12s)
CPU Time     : 53.352s
Threads      : 4        (Winner: 1)

Choices      : 280770   (Domain: 3859)
Conflicts    : 56986    (Analyzed: 56980)
Restarts     : 95       (Average: 599.79 Last: 4013)
Model-Level  : 366.5   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 106095   (Deleted: 29803)
  Binary     : 3696     (Ratio:   3.48%)
  Ternary    : 7475     (Ratio:   7.05%)
  Conflict   : 56978    (Average Length:   75.5 Ratio:  53.70%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 49117    (Average Length:   28.3 Ratio:  46.30%) 
  Distributed: 16394    (Ratio:  28.77% Average LBD: 3.19) 
  Integrated : 49176    (Ratio: 299.96% Unit: 346 Average Jumps: 61.58)
Backjumps    : 56980    (Average:  4.26 Max: 979 Sum: 242720)
  Executed   : 56958    (Average:  4.25 Max: 979 Sum: 242369 Ratio:  99.86%)
  Bounded    : 22       (Average: 15.95 Max:  35 Sum:    351 Ratio:   0.14%)

Rules        : 1756713 
  Choice     : 41      
  Minimize   : 2       
Atoms        : 530491  
Bodies       : 612470  
  Count      : 1768    
Equivalences : 1600614  (Atom=Atom: 460849 Body=Body: 492774 Other: 646991)
Tight        : Yes
Variables    : 72887    (Eliminated:    0 Frozen: 52471)
Constraints  : 1358645  (Binary:  94.7% Ternary:   4.3% Other:   0.9%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) || not atom(hasOilyLevel(0))  ; 
  not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(3))  >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(2))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(0)) ; 
  not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(2)) >> atom(hasPriceLevel(1)) ; 
  not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(0))  >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) >> not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(1)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasPrice(0))  || not atom(hasPrice(1))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) >> not atom(hasMinorGrp(3))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) >> not atom(hasMinorGrp(1))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(1))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(3))  >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) || not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) || not atom(hasOilyLevel(0))  ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasOilyLevel(1)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(2))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(0)) || atom(hasMinorGrp(1)) ; 
  not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(3)) >> atom(hasOiliness(1)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(0))  >> atom(hasPriceLevel(0)) || atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) >> atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) >> not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(3))  >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) || not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) || not atom(hasOilyLevel(0))  ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasOilyLevel(1)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(2))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(0))  >> atom(hasOftenSold(0)) || atom(hasMinorGrp(1)) ; 
  not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(3)) >> atom(hasOiliness(1)) || not atom(hasPriceLevel(2))  ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) || atom(hasOiliness(0)) ; 
  not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(2))  >> not atom(hasMinorGrp(0))  >> atom(hasPriceLevel(0)) || atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) >> not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOiliness(1)) >> not atom(hasOftenSold(0))  || atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(2))  >> not atom(hasPrice(1))  >> not atom(hasOiliness(1))  || not atom(hasPriceLevel(0))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasOiliness(0))  >> atom(hasPriceLevel(0)) || atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> atom(hasOilyLevel(2)) || atom(hasOiliness(0)) ; 
  not atom(hasOilyLevel(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(1))  || atom(hasPrice(0)) ; 
  atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(1))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  || atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(1)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(0))  || not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasPriceLevel(2))  >> atom(hasOilyLevel(0)) >> not atom(hasOilyLevel(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasPrice(0)) >> atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(2))  || not atom(hasPriceLevel(2))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(1))  >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> not atom(hasOiliness(1))  || atom(hasOiliness(1)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) >> atom(hasPrice(0)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(0)) >> not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasPrice(0))  >> atom(hasPriceLevel(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOilyLevel(0))  >> atom(hasPrice(0)) >> atom(hasPriceLevel(2)) || not atom(hasPrice(1))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(2))  || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> atom(hasMinorGrp(0)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOiliness(0))  >> not atom(hasPriceLevel(1))  >> atom(hasOftenSold(1)) || not atom(hasMinorGrp(0))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(1))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  || atom(hasOftenSold(1)) ; 
  atom(hasPrice(0)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOilyLevel(0))  >> atom(hasPrice(0)) >> atom(hasPriceLevel(2)) || not atom(hasPrice(1))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(2))  || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(0)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOiliness(0))  >> not atom(hasPriceLevel(1))  >> atom(hasOftenSold(1)) || not atom(hasMinorGrp(0))  ; 
  atom(hasPrice(0)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(0))  >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(2)) >> not atom(hasMinorGrp(0))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> atom(hasPriceLevel(2)) || not atom(hasPrice(1))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(0)) || not atom(hasMinorGrp(0))  ; 
  atom(hasPrice(0)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasPrice(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(1))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasMinorGrp(0))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> atom(hasPriceLevel(2)) || not atom(hasPrice(1))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(0)) || not atom(hasMinorGrp(0))  ; 
  atom(hasPrice(0)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPriceLevel(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasMinorGrp(0))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(0)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPrice(0))  >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasMinorGrp(0))  >> atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) >> atom(hasPriceLevel(2)) || not atom(hasMinorGrp(3))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPrice(1)) >> not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(1)) || not atom(hasMinorGrp(1))  ; 
  atom(hasPrice(1)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || not atom(hasOiliness(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPriceLevel(1))  ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) >> not atom(hasOiliness(0))  >> not atom(hasOiliness(1))  || not atom(hasPrice(1))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> not atom(hasOftenSold(0))  || not atom(hasOiliness(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPriceLevel(1))  
}.
