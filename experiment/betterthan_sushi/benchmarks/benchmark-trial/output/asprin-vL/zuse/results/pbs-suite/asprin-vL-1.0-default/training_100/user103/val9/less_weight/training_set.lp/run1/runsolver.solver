asprin_vL version 1.0
Reading from stdin
-:314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:324:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:681:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1000:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:231:1-16: info: no atoms over signature occur in program:
  output/3

-:223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:224:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(38,eq,2) output(5,eq,33) output(5,eq,6) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(33,eq,2) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(62,eq,2) output(91,eq,7) output(91,eq,1) output(91,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(5,better,33) output(5,better,62) output(5,better,91) output(6,better,62) output(6,better,91) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,7) output(33,worse,1) output(33,worse,2) output(62,worse,7) output(62,worse,1) output(62,worse,2) output(38,worse,5) output(38,worse,6) output(38,worse,18) output(38,worse,7) output(38,worse,1) output(38,worse,2) output(38,eq,33) output(38,eq,62) output(38,eq,91) output(5,eq,6) output(5,eq,18) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,62) output(33,eq,91) output(6,eq,18) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(18,eq,7) output(18,eq,1) output(18,eq,2) output(62,eq,91) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 38 1
Answer: 3
preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),12) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,6),1,for(atom(hasPrice(1))),12) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(5,better,33) output(5,better,6) output(5,better,62) output(5,better,91) output(5,better,7) output(91,worse,1) output(91,worse,2) output(33,worse,18) output(33,worse,1) output(33,worse,2) output(6,worse,18) output(6,worse,1) output(6,worse,2) output(7,worse,1) output(7,worse,2) output(62,worse,1) output(62,worse,2) output(38,worse,5) output(38,worse,18) output(38,worse,1) output(38,worse,2) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(5,eq,18) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(18,eq,1) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(91,eq,7) output(1,eq,2)
Optimization: 37 4
Answer: 4
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,7),1,for(atom(hasPrice(1))),12) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,1) output(5,better,33) output(5,better,6) output(5,better,62) output(5,better,91) output(5,better,1) output(7,better,1) output(91,worse,7) output(91,worse,2) output(1,worse,2) output(33,worse,18) output(33,worse,7) output(33,worse,2) output(6,worse,18) output(6,worse,7) output(6,worse,2) output(62,worse,7) output(62,worse,2) output(38,worse,5) output(38,worse,18) output(38,worse,7) output(38,worse,2) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,91) output(38,eq,1) output(5,eq,18) output(5,eq,7) output(5,eq,2) output(33,eq,6) output(33,eq,62) output(33,eq,91) output(33,eq,1) output(6,eq,62) output(6,eq,91) output(6,eq,1) output(18,eq,7) output(18,eq,2) output(62,eq,91) output(62,eq,1) output(91,eq,1) output(7,eq,2)
Optimization: 36 3
Answer: 5
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,7),1,for(atom(hasPrice(1))),12) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(5,better,33) output(5,better,6) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(91,worse,2) output(1,worse,2) output(33,worse,18) output(33,worse,2) output(6,worse,18) output(6,worse,2) output(7,worse,2) output(62,worse,2) output(38,worse,5) output(38,worse,18) output(38,worse,2) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(5,eq,18) output(5,eq,2) output(33,eq,6) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(91,eq,7) output(91,eq,1) output(7,eq,1)
Optimization: 35 4
Answer: 6
preference(1,(1,7),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(18,better,62) output(18,better,7) output(91,better,7) output(33,better,6) output(33,better,62) output(33,better,7) output(5,better,6) output(5,better,62) output(5,better,7) output(38,better,6) output(38,better,62) output(38,better,7) output(6,worse,18) output(6,worse,91) output(6,worse,1) output(6,worse,2) output(7,worse,1) output(7,worse,2) output(62,worse,91) output(62,worse,1) output(62,worse,2) output(38,eq,5) output(38,eq,33) output(38,eq,18) output(38,eq,91) output(38,eq,1) output(38,eq,2) output(5,eq,33) output(5,eq,18) output(5,eq,91) output(5,eq,1) output(5,eq,2) output(33,eq,18) output(33,eq,91) output(33,eq,1) output(33,eq,2) output(6,eq,62) output(6,eq,7) output(18,eq,91) output(18,eq,1) output(18,eq,2) output(62,eq,7) output(91,eq,1) output(91,eq,2) output(1,eq,2)
Optimization: 33 1
Answer: 7
preference(1,(1,7),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(33,better,18) output(33,better,91) output(33,better,1) output(33,better,2) output(5,better,18) output(5,better,91) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,1) output(62,better,2) output(38,better,18) output(38,better,91) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,7) output(5,eq,33) output(5,eq,6) output(5,eq,62) output(5,eq,7) output(33,eq,6) output(33,eq,62) output(33,eq,7) output(6,eq,62) output(6,eq,7) output(18,eq,91) output(18,eq,1) output(18,eq,2) output(62,eq,7) output(91,eq,1) output(91,eq,2) output(1,eq,2)
Optimization: 24 1
Answer: 8
preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,14),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,8),1,for(atom(hasOiliness(1))),12) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(18,better,91) output(1,better,2) output(5,better,33) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,1) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(33,worse,2) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(5,worse,2) output(7,worse,1) output(18,eq,7) output(18,eq,2) output(7,eq,2)
Optimization: 23 10
Answer: 9
preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,14),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),12) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,12),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(18,better,91) output(1,better,2) output(5,better,33) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,7) output(18,worse,1) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(33,worse,2) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(5,worse,2) output(7,worse,1) output(18,eq,2)
Optimization: 22 10
Answer: 10
preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,14),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),2) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,8),1,for(atom(hasOiliness(1))),12) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(18,better,91) output(18,better,2) output(1,better,2) output(5,better,33) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,1) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(33,worse,2) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(5,worse,2) output(7,worse,1) output(18,eq,7)
Optimization: 21 10
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,11),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),1) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),1) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOftenSold(1))),3) preference(1,less(weight)) output(91,better,7) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,18) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(5,worse,33) output(5,worse,62) output(5,worse,91) output(6,worse,62) output(6,worse,91) output(38,eq,33) output(38,eq,62) output(5,eq,6) output(5,eq,7) output(33,eq,62) output(6,eq,7) output(18,eq,1) output(18,eq,2) output(1,eq,2)
Optimization: 17 14
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,11),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),1) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),1) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOftenSold(1))),3) preference(1,less(weight)) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,18) output(5,better,91) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(91,worse,7) output(5,worse,33) output(5,worse,62) output(6,worse,62) output(38,eq,33) output(38,eq,62) output(5,eq,6) output(5,eq,7) output(33,eq,62) output(6,eq,7) output(18,eq,1) output(18,eq,2) output(1,eq,2)
Optimization: 16 14
Answer: 13
preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),4) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),10) preference(1,(1,10),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,11),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,14),1,for(neg(atom(hasOiliness(0)))),10) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasOftenSold(0))),9) preference(1,(1,9),1,for(atom(hasOftenSold(1))),5) preference(1,(1,12),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,1) output(91,better,7) output(91,better,1) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,1) output(7,better,1) output(62,better,91) output(62,better,7) output(62,better,1) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,2) output(91,worse,2) output(1,worse,2) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,7) output(6,worse,2) output(7,worse,2) output(38,worse,5) output(33,eq,62) output(33,eq,2) output(62,eq,2)
Optimization: 14 14
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),7) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),5) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,13),1,for(neg(atom(hasOiliness(0)))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,7),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasOilyLevel(2))),3) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(33,better,62) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(62,better,91) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(1,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,7) output(33,worse,2) output(7,worse,2) output(62,worse,7) output(62,worse,1) output(62,worse,2) output(18,eq,2)
Optimization: 13 12
Answer: 15
preference(1,(1,2),1,for(neg(atom(hasOiliness(0)))),5) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),12) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,7),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,14),1,for(neg(atom(hasPriceLevel(0)))),10) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,13),1,for(atom(hasOilyLevel(2))),3) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(33,better,62) output(33,better,91) output(33,better,1) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(62,better,91) output(62,better,1) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(1,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,7) output(33,worse,2) output(7,worse,2) output(62,worse,7) output(62,worse,2) output(18,eq,2)
Optimization: 12 13
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),2) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),11) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),12) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(2)))),6) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,12),1,for(neg(atom(hasOftenSold(0)))),6) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),5) preference(1,(1,7),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),9) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),5) preference(1,(1,11),1,for(atom(hasOftenSold(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,14),1,for(atom(hasOilyLevel(0))),4) preference(1,less(weight)) output(91,better,7) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,1) output(62,better,2) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(5,worse,33) output(62,worse,91) output(62,worse,7) output(38,worse,5) output(38,worse,33) output(18,eq,1) output(18,eq,2) output(1,eq,2)
Optimization: 11 14
Answer: 17
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),4) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),7) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasOftenSold(0))),2) preference(1,(1,4),1,for(atom(hasOftenSold(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,14),1,for(atom(hasPriceLevel(1))),1) preference(1,less(weight)) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(33,worse,62) output(5,worse,62) output(6,worse,62) output(38,worse,5) output(38,worse,62) output(6,eq,91) output(1,eq,2)
Optimization: 10 14
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),4) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),7) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasOftenSold(0))),2) preference(1,(1,4),1,for(atom(hasOftenSold(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,14),1,for(atom(hasPriceLevel(1))),1) preference(1,less(weight)) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(33,worse,62) output(5,worse,62) output(6,worse,62) output(38,worse,5) output(38,worse,62) output(1,eq,2)
Optimization: 9 14
Answer: 19
preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),10) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,11),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,13),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(6,worse,18) output(6,worse,62) output(33,eq,62) output(1,eq,2)
Optimization: 8 14
Answer: 20
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),9) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,11),1,for(neg(atom(hasOilyLevel(0)))),6) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasPriceLevel(2))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(91,worse,7) output(91,worse,1) output(6,worse,18) output(6,worse,62) output(33,eq,62) output(91,eq,2)
Optimization: 7 14
Answer: 21
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(0)))),10) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasOftenSold(0))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,11),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(91,worse,7) output(91,worse,1) output(6,worse,62) output(33,eq,62) output(91,eq,2)
Optimization: 6 14
Answer: 22
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),11) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,11),1,for(neg(atom(hasOilyLevel(0)))),6) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,12),1,for(atom(hasOilyLevel(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(6,worse,62) output(33,eq,62) output(18,eq,91) output(1,eq,2)
Optimization: 5 14
Answer: 23
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,9),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(0)))),5) preference(1,(1,11),1,for(neg(atom(hasOilyLevel(0)))),3) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,13),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(18,worse,62) output(6,worse,62) output(33,eq,62) output(18,eq,91)
Optimization: 4 13
Answer: 24
preference(1,(1,1),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(0)))),10) preference(1,(1,13),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,14),1,for(neg(atom(hasOiliness(0)))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,6),1,for(atom(hasOftenSold(0))),3) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),9) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasPriceLevel(2))),2) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,worse,2) output(5,worse,33) output(62,eq,91)
Optimization: 3 14
Answer: 25
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),12) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,12),1,for(neg(atom(hasOilyLevel(0)))),11) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,6),1,for(atom(hasOftenSold(0))),3) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),9) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,worse,33)
Optimization: 1 14
Answer: 26
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(0)))),1) preference(1,(1,11),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,6),1,for(atom(hasOftenSold(0))),2) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2)
Optimization: 0 14
Answer: 27
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,11),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,6),1,for(atom(hasOftenSold(0))),2) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2)
Optimization: 0 13
Answer: 28
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),1) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,11),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,14),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2)
Optimization: 0 12
Answer: 29
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,11),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Answer: 30
preference(1,(1,11),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,14),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
Answer: 31
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),8) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,13),1,for(neg(atom(hasOftenSold(0)))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),9) preference(1,(1,12),1,for(atom(hasOilyLevel(1))),4) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.147 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 31+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 598.108s (Solving: 589.58s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 2366.107s
Threads      : 4        (Winner: 4)

Choices      : 9111163  (Domain: 3235)
Conflicts    : 1802745  (Analyzed: 1802743)
Restarts     : 2337     (Average: 771.39 Last: 77309)
Model-Level  : 627.1   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 1820224  (Deleted: 1669706)
  Binary     : 1476     (Ratio:   0.08%)
  Ternary    : 713      (Ratio:   0.04%)
  Conflict   : 1802743  (Average Length: 1251.9 Ratio:  99.04%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 17481    (Average Length:  132.3 Ratio:   0.96%) 
  Distributed: 5827     (Ratio:   0.32% Average LBD: 3.43) 
  Integrated : 17481    (Ratio: 300.00% Unit: 13 Average Jumps: 263.62)
Backjumps    : 1802743  (Average:  3.78 Max: 2425 Sum: 6809167)
  Executed   : 1802742  (Average:  3.78 Max: 2425 Sum: 6809124 Ratio: 100.00%)
  Bounded    : 1        (Average: 43.00 Max:  43 Sum:     43 Ratio:   0.00%)

Rules        : 2283396 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 671797  
Bodies       : 682827  
  Sum        : 270     
  Count      : 14      
Equivalences : 2012742  (Atom=Atom: 651277 Body=Body: 665636 Other: 695829)
Tight        : Yes
Variables    : 20979    (Eliminated:    0 Frozen: 14035)
Constraints  : 1652803  (Binary:  99.1% Ternary:   0.4% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasPrice(0))  ; 
  12 :: atom(hasPrice(1)) ; 
  12 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasPrice(1)) ; 
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  12 :: atom(hasPrice(1)) ; 
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOilyLevel(1)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  2 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasPriceLevel(2)) ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOilyLevel(1)) ; 
  3 :: atom(hasPriceLevel(2)) ; 
  2 :: not atom(hasOiliness(0))  ; 
  6 :: not atom(hasPrice(0))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOilyLevel(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOilyLevel(1)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  2 :: not atom(hasOiliness(0))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  12 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: atom(hasOilyLevel(0)) ; 
  1 :: atom(hasPriceLevel(0)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  1 :: not atom(hasOiliness(1))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: atom(hasOilyLevel(0)) ; 
  1 :: atom(hasPriceLevel(0)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  1 :: not atom(hasOiliness(1))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPriceLevel(1)) ; 
  12 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasOftenSold(1))  ; 
  4 :: not atom(hasPriceLevel(0))  ; 
  9 :: atom(hasOftenSold(0)) ; 
  10 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasOftenSold(1)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasOilyLevel(1))  ; 
  7 :: not atom(hasOilyLevel(0))  ; 
  5 :: not atom(hasPriceLevel(0))  ; 
  9 :: not atom(hasOftenSold(1))  ; 
  9 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: not atom(hasPrice(0))  ; 
  6 :: atom(hasPriceLevel(2)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOilyLevel(2)) ; 
  5 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasOiliness(0))  ; 
  12 :: not atom(hasOilyLevel(0))  ; 
  9 :: atom(hasMinorGrp(3)) ; 
  9 :: not atom(hasOftenSold(1))  ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPriceLevel(2)) ; 
  3 :: atom(hasOilyLevel(2)) ; 
  10 :: not atom(hasPriceLevel(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMinorGrp(3))  ; 
  5 :: atom(hasPriceLevel(0)) ; 
  11 :: not atom(hasMinorGrp(1))  ; 
  12 :: not atom(hasPriceLevel(2))  ; 
  5 :: not atom(hasPrice(1))  ; 
  6 :: not atom(hasOilyLevel(2))  ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasOiliness(1))  ; 
  9 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOilyLevel(1)) ; 
  8 :: atom(hasOftenSold(1)) ; 
  6 :: not atom(hasOftenSold(0))  ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMinorGrp(0))  ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOilyLevel(1)) ; 
  4 :: not atom(hasOiliness(0))  ; 
  7 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPriceLevel(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMinorGrp(0))  ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOilyLevel(1)) ; 
  4 :: not atom(hasOiliness(0))  ; 
  7 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOilyLevel(2)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  10 :: not atom(hasOilyLevel(0))  ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  5 :: not atom(hasOftenSold(1))  ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOilyLevel(2)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  9 :: not atom(hasPriceLevel(0))  ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  5 :: not atom(hasOftenSold(1))  ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOilyLevel(1)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  10 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  10 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasPriceLevel(1)) ; 
  11 :: not atom(hasPriceLevel(0))  ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  1 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  5 :: atom(hasPriceLevel(2)) ; 
  6 :: not atom(hasOilyLevel(0))  ; 
  7 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPriceLevel(1)) ; 
  1 :: atom(hasPriceLevel(2)) ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  1 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  5 :: not atom(hasPriceLevel(0))  ; 
  3 :: not atom(hasOilyLevel(0))  ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOftenSold(1))  ; 
  4 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  10 :: not atom(hasOilyLevel(0))  ; 
  9 :: atom(hasPriceLevel(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPriceLevel(2)) ; 
  3 :: not atom(hasPrice(1))  ; 
  9 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasPrice(0))  ; 
  4 :: not atom(hasOiliness(1))  ; 
  5 :: atom(hasPriceLevel(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasPriceLevel(0))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  3 :: not atom(hasOftenSold(0))  ; 
  2 :: not atom(hasOftenSold(1))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  11 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  1 :: not atom(hasOilyLevel(0))  ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasPriceLevel(0))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasPriceLevel(1)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  3 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasPriceLevel(0))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasPriceLevel(1)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  6 :: not atom(hasPrice(0))  ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: not atom(hasOiliness(0))  ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasPrice(0))  ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  2 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasOiliness(1))  ; 
  5 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasPriceLevel(1)) ; 
  5 :: not atom(hasPrice(0))  ; 
  2 :: not atom(hasOftenSold(1))  ; 
  4 :: atom(hasOilyLevel(1)) ; 
  8 :: not atom(hasOftenSold(0))  
}.
