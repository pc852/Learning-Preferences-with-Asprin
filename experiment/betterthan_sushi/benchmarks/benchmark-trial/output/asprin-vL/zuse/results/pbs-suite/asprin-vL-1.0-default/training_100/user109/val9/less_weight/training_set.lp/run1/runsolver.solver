asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,44) output(20,eq,32) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,68) output(10,eq,12) output(10,eq,44) output(10,eq,32) output(10,eq,8) output(10,eq,11) output(10,eq,19) output(68,eq,12) output(68,eq,44) output(68,eq,32) output(68,eq,8) output(68,eq,11) output(68,eq,19) output(12,eq,44) output(12,eq,32) output(12,eq,8) output(12,eq,11) output(12,eq,19) output(44,eq,32) output(44,eq,8) output(44,eq,11) output(44,eq,19) output(32,eq,8) output(32,eq,11) output(32,eq,19) output(8,eq,11) output(8,eq,19) output(11,eq,19)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,8) output(20,better,19) output(10,better,8) output(10,better,19) output(12,better,8) output(12,better,19) output(68,better,8) output(68,better,19) output(44,better,8) output(44,better,19) output(8,worse,11) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,44) output(20,eq,32) output(20,eq,11) output(10,eq,68) output(10,eq,12) output(10,eq,44) output(10,eq,32) output(10,eq,11) output(68,eq,12) output(68,eq,44) output(68,eq,32) output(68,eq,11) output(12,eq,44) output(12,eq,32) output(12,eq,11) output(44,eq,32) output(44,eq,11) output(32,eq,11) output(8,eq,19)
Optimization: 23 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),4) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,44) output(20,better,8) output(20,better,19) output(10,better,44) output(10,better,8) output(10,better,19) output(12,better,44) output(12,better,8) output(12,better,19) output(68,better,44) output(68,better,8) output(68,better,19) output(8,worse,11) output(44,worse,32) output(44,worse,11) output(20,eq,10) output(20,eq,68) output(20,eq,12) output(20,eq,32) output(20,eq,11) output(10,eq,68) output(10,eq,12) output(10,eq,32) output(10,eq,11) output(68,eq,12) output(68,eq,32) output(68,eq,11) output(12,eq,32) output(12,eq,11) output(44,eq,8) output(44,eq,19) output(32,eq,11) output(8,eq,19)
Optimization: 21 1
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,5),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),1) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,44) output(20,eq,32) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,68) output(10,eq,12) output(10,eq,44) output(68,eq,12) output(68,eq,44) output(12,eq,44) output(32,eq,8) output(32,eq,11) output(32,eq,19) output(8,eq,11) output(8,eq,19) output(11,eq,19)
Optimization: 20 10
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(2)))),8) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,9),1,for(atom(hasOiliness(0))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),12) preference(1,less(weight)) output(8,better,11) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,32) output(20,better,11) output(10,better,68) output(10,better,32) output(10,better,11) output(12,better,32) output(12,better,11) output(68,better,32) output(68,better,11) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(32,worse,8) output(32,worse,11) output(32,worse,19) output(11,worse,19) output(20,worse,44) output(20,worse,8) output(20,worse,19) output(10,worse,44) output(10,worse,8) output(10,worse,19) output(12,worse,44) output(12,worse,8) output(12,worse,19) output(68,worse,12) output(68,worse,44) output(68,worse,8) output(68,worse,19) output(10,eq,12) output(8,eq,19)
Optimization: 19 10
Answer: 6
preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(2)))),8) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),12) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasOftenSold(0))),10) preference(1,(1,9),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(32,better,11) output(8,better,11) output(20,better,44) output(20,better,32) output(20,better,11) output(10,better,68) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,44) output(68,better,32) output(68,better,11) output(32,worse,8) output(32,worse,19) output(11,worse,19) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,8) output(20,worse,19) output(68,worse,12) output(68,worse,8) output(68,worse,19) output(44,worse,32) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(10,eq,12) output(8,eq,19)
Optimization: 17 10
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),6) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(2)))),6) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,10),1,for(atom(hasOilyLevel(0))),6) preference(1,less(weight)) output(32,better,11) output(8,better,11) output(10,better,68) output(10,better,12) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(32,worse,8) output(32,worse,19) output(11,worse,19) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,44) output(20,worse,32) output(20,worse,8) output(20,worse,19) output(12,worse,44) output(68,worse,44) output(20,eq,11) output(10,eq,44) output(68,eq,12) output(8,eq,19)
Optimization: 16 10
Answer: 8
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),9) preference(1,(1,7),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),12) preference(1,(1,9),1,for(neg(atom(hasOftenSold(0)))),11) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,1),1,for(atom(hasPriceLevel(0))),9) preference(1,(1,2),1,for(atom(hasOilyLevel(1))),9) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),9) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),9) preference(1,(1,6),1,for(atom(hasPrice(1))),9) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,8) output(44,better,11) output(44,better,19) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,44) output(20,worse,32) output(10,worse,68) output(20,eq,8) output(20,eq,11) output(20,eq,19) output(10,eq,12) output(44,eq,32) output(8,eq,11) output(8,eq,19) output(11,eq,19)
Optimization: 14 10
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,4),1,for(neg(atom(hasPrice(1)))),8) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),10) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasOftenSold(0))),2) preference(1,less(weight)) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,44) output(10,better,32) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(32,worse,8) output(32,worse,11) output(32,worse,19) output(8,worse,11) output(10,worse,68) output(10,worse,12) output(10,worse,8) output(10,worse,11) output(10,worse,19) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(8,eq,19)
Optimization: 13 10
Answer: 10
preference(1,(1,5),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),8) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),7) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,2),1,for(atom(hasOiliness(0))),10) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),1) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),9) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(32,worse,11) output(8,worse,11) output(20,worse,68) output(10,worse,68) output(10,worse,11) output(12,worse,11) output(44,worse,32) output(44,worse,8) output(44,worse,11) output(44,worse,19) output(20,eq,11) output(8,eq,19)
Optimization: 12 10
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),7) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),4) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,68) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,19) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,19) output(32,worse,11) output(8,worse,11) output(10,worse,12) output(10,worse,11) output(68,worse,12) output(68,worse,11) output(44,worse,11) output(20,eq,12) output(20,eq,11) output(12,eq,11) output(8,eq,19)
Optimization: 11 10
Answer: 12
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),4) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),9) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),5) preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,6),1,for(atom(hasOftenSold(1))),12) preference(1,(1,10),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,44) output(20,worse,32) output(10,worse,68) output(10,worse,12) output(44,eq,32) output(8,eq,19)
Optimization: 10 10
Answer: 13
preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),4) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),2) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,1),1,for(atom(hasOilyLevel(0))),1) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),1) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(8,better,11) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(44,better,8) output(44,better,11) output(44,better,19) output(11,worse,19) output(68,worse,12) output(68,worse,44) output(68,worse,32) output(68,worse,8) output(68,worse,11) output(68,worse,19) output(44,eq,32) output(8,eq,19)
Optimization: 9 10
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),6) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),4) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(2)))),4) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,7),1,for(neg(atom(hasOiliness(0)))),9) preference(1,(1,1),1,for(atom(hasOftenSold(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasOiliness(0))),5) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,less(weight)) output(32,better,8) output(32,better,19) output(11,better,19) output(20,better,32) output(20,better,8) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(32,worse,11) output(8,worse,11) output(20,worse,10) output(20,worse,68) output(20,worse,12) output(20,worse,44) output(20,eq,11) output(8,eq,19)
Optimization: 8 10
Progression : [1;8] (Error: 7)
Answer: 15
preference(1,(1,4),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),5) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),2) preference(1,(1,2),1,for(atom(hasOftenSold(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasOftenSold(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(8,eq,19)
Optimization: 2 10
Progression : [2;2] (Error: 0)
Progression : 2 [ 1;10] (Error: 9)
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),9) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(8,eq,19)
Optimization: 2 9
Progression : 2 [2;9] (Error: 3.5)
Answer: 17
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),6) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),11) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),11) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(8,eq,19)
Optimization: 2 8
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(2)))),11) preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(2)))),11) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(32,better,8) output(32,better,11) output(32,better,19) output(11,better,19) output(20,better,10) output(20,better,68) output(20,better,12) output(20,better,44) output(20,better,32) output(20,better,8) output(20,better,11) output(20,better,19) output(10,better,68) output(10,better,12) output(10,better,44) output(10,better,32) output(10,better,8) output(10,better,11) output(10,better,19) output(12,better,44) output(12,better,32) output(12,better,8) output(12,better,11) output(12,better,19) output(68,better,12) output(68,better,44) output(68,better,32) output(68,better,8) output(68,better,11) output(68,better,19) output(44,better,32) output(44,better,8) output(44,better,11) output(44,better,19) output(8,worse,11) output(8,eq,19)
Optimization: 2 7
SATISFIABLE

Models       : 18+
  Optimum    : unknown
Optimization : 2 7
Bounds       : 2 [2;7]
Calls        : 1
Time         : 1044.468s (Solving: 1039.38s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 4162.174s
Threads      : 4        (Winner: 0)

Choices      : 20391594 (Domain: 14832)
Conflicts    : 6252973  (Analyzed: 6252969)
Restarts     : 7290     (Average: 857.75 Last: 389699)
Model-Level  : 597.3   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 6275013  (Deleted: 5919726)
  Binary     : 2078     (Ratio:   0.03%)
  Ternary    : 1311     (Ratio:   0.02%)
  Conflict   : 6252969  (Average Length:  793.0 Ratio:  99.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 22044    (Average Length:   80.1 Ratio:   0.35%) 
  Distributed: 7349     (Ratio:   0.12% Average LBD: 3.45) 
  Integrated : 22047    (Ratio: 300.00% Unit: 65 Average Jumps: 73.92)
Backjumps    : 6252969  (Average:  2.59 Max: 2548 Sum: 16223226)
  Executed   : 6252963  (Average:  2.59 Max: 2548 Sum: 16223045 Ratio: 100.00%)
  Bounded    : 6        (Average: 30.17 Max:  36 Sum:    181 Ratio:   0.00%)

Rules        : 1285035 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 353339  
Bodies       : 357092  
  Sum        : 216     
  Count      : 10      
Equivalences : 1047872  (Atom=Atom: 337059 Body=Body: 345388 Other: 365425)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasOiliness(1))  ; 
  1 :: not atom(hasOilyLevel(0))  ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasOftenSold(0))  ; 
  8 :: not atom(hasPriceLevel(2))  ; 
  6 :: not atom(hasOiliness(1))  ; 
  6 :: not atom(hasOiliness(0))  ; 
  10 :: not atom(hasOftenSold(1))  ; 
  4 :: atom(hasMinorGrp(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  8 :: not atom(hasMinorGrp(0))  ; 
  10 :: atom(hasOiliness(0)) ; 
  12 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPriceLevel(2)) ; 
  6 :: not atom(hasOiliness(0))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  8 :: not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasMinorGrp(3))  ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  6 :: not atom(hasMinorGrp(1))  ; 
  6 :: not atom(hasOilyLevel(2))  ; 
  6 :: atom(hasPriceLevel(1)) ; 
  9 :: not atom(hasPrice(0))  ; 
  5 :: atom(hasPriceLevel(0)) ; 
  10 :: atom(hasOilyLevel(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPriceLevel(0)) ; 
  9 :: atom(hasOilyLevel(1)) ; 
  9 :: atom(hasOilyLevel(0)) ; 
  9 :: not atom(hasMinorGrp(2))  ; 
  9 :: atom(hasPriceLevel(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasPrice(0))  ; 
  12 :: not atom(hasMinorGrp(1))  ; 
  11 :: not atom(hasOftenSold(0))  ; 
  9 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOilyLevel(1))  ; 
  9 :: atom(hasPriceLevel(2)) ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  8 :: not atom(hasPrice(1))  ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOftenSold(0)) ; 
  10 :: not atom(hasPriceLevel(2))  ; 
  1 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOilyLevel(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  8 :: not atom(hasPrice(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasPriceLevel(2)) ; 
  7 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasOftenSold(1))  ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  5 :: atom(hasOilyLevel(1)) ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  9 :: atom(hasMinorGrp(0)) ; 
  7 :: not atom(hasOiliness(1))  ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasMinorGrp(1))  ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasOftenSold(1)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  9 :: not atom(hasPriceLevel(1))  ; 
  5 :: not atom(hasPriceLevel(2))  ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOilyLevel(0)) ; 
  1 :: atom(hasPriceLevel(0)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  1 :: atom(hasPriceLevel(1)) ; 
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  4 :: not atom(hasOilyLevel(2))  ; 
  2 :: not atom(hasMinorGrp(1))  ; 
  10 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(0)) ; 
  6 :: not atom(hasPriceLevel(1))  ; 
  4 :: not atom(hasMinorGrp(1))  ; 
  4 :: not atom(hasPriceLevel(2))  ; 
  1 :: not atom(hasOiliness(1))  ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  9 :: not atom(hasOiliness(0))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPriceLevel(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  7 :: not atom(hasOftenSold(0))  ; 
  5 :: not atom(hasMinorGrp(1))  ; 
  9 :: not atom(hasOilyLevel(2))  ; 
  1 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasPriceLevel(2))  ; 
  12 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  9 :: not atom(hasOilyLevel(2))  ; 
  1 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasOilyLevel(2))  ; 
  11 :: atom(hasPriceLevel(2)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  10 :: not atom(hasPriceLevel(2))  ; 
  8 :: not atom(hasOilyLevel(1))  ; 
  11 :: atom(hasOilyLevel(2)) ; 
  7 :: not atom(hasPriceLevel(1))  ; 
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(2))  ; 
  9 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  11 :: not atom(hasOilyLevel(2))  ; 
  1 :: atom(hasPriceLevel(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasOiliness(1))  
}.
Time limit reached
