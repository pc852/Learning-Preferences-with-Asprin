asprin_vL version 1.0
Reading from stdin
-:338:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:363:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:444:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:718:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:895:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1096:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1100:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1100:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1106:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1205:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1231:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1351:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1385:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1407:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:255:1-16: info: no atoms over signature occur in program:
  output/3

-:247:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:248:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:249:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:250:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:280:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,3),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasPrice(0))),()) preference(1,(1,4),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),4,for(atom(hasPrice(0))),()) preference(1,(1,8),4,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(1,better,78) output(4,better,78) output(23,better,78) output(5,better,78) output(17,better,78) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,4) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,19) output(1,eq,8) output(1,eq,59) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,19) output(4,eq,8) output(4,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,19) output(23,eq,8) output(23,eq,59) output(5,eq,17) output(5,eq,19) output(5,eq,8) output(5,eq,59) output(17,eq,19) output(17,eq,8) output(17,eq,59) output(19,eq,8) output(19,eq,59) output(8,eq,59)
Optimization: 31 8
Answer: 2
preference(1,(1,1),0,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),0,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,4),0,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,5),0,for(atom(hasOftenSold(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,3),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasPrice(0))),()) preference(1,(1,4),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),4,for(atom(hasPrice(0))),()) preference(1,(1,8),4,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(1,better,59) output(4,better,59) output(23,better,59) output(5,better,59) output(17,better,59) output(78,better,59) output(19,better,59) output(8,better,59) output(1,eq,4) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,78) output(1,eq,19) output(1,eq,8) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,19) output(4,eq,8) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(5,eq,78) output(5,eq,19) output(5,eq,8) output(17,eq,78) output(17,eq,19) output(17,eq,8) output(78,eq,19) output(78,eq,8) output(19,eq,8)
Optimization: 28 8
Answer: 3
preference(1,(1,1),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,3),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,4),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,5),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,8),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,1),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),4,for(atom(hasPrice(0))),()) preference(1,(1,4),4,for(atom(hasPrice(1))),()) preference(1,(1,5),4,for(atom(hasPrice(1))),()) preference(1,(1,6),4,for(atom(hasPrice(1))),()) preference(1,(1,7),4,for(atom(hasPrice(1))),()) preference(1,(1,8),4,for(atom(hasPrice(1))),()) preference(1,aso) output(4,better,23) output(4,better,19) output(4,better,8) output(5,better,19) output(5,better,8) output(17,better,19) output(17,better,8) output(78,better,19) output(78,better,8) output(1,worse,4) output(1,worse,5) output(1,worse,17) output(1,worse,78) output(1,worse,59) output(23,worse,5) output(23,worse,17) output(23,worse,78) output(23,worse,59) output(19,worse,59) output(8,worse,59) output(1,eq,23) output(1,eq,19) output(1,eq,8) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,59) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(5,eq,78) output(5,eq,59) output(17,eq,78) output(17,eq,59) output(78,eq,59) output(19,eq,8)
Optimization: 27 8
Answer: 4
preference(1,(1,1),0,for(atom(hasOftenSold(1))),()) preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,3),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasPrice(0))),()) preference(1,(1,4),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),4,for(atom(hasPrice(0))),()) preference(1,(1,8),4,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(1,better,78) output(1,better,59) output(4,better,78) output(4,better,59) output(23,better,78) output(23,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(19,better,59) output(8,better,59) output(78,worse,19) output(78,worse,8) output(1,eq,4) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,19) output(1,eq,8) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,19) output(4,eq,8) output(23,eq,5) output(23,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(5,eq,19) output(5,eq,8) output(17,eq,19) output(17,eq,8) output(19,eq,8)
Optimization: 24 8
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,3),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasPrice(0))),()) preference(1,(1,4),4,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),4,for(atom(hasPrice(0))),()) preference(1,(1,8),4,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(1,better,5) output(1,better,78) output(1,better,59) output(4,better,5) output(4,better,78) output(4,better,59) output(23,better,5) output(23,better,78) output(23,better,59) output(5,better,78) output(17,better,78) output(17,better,59) output(19,better,59) output(8,better,59) output(5,worse,17) output(5,worse,19) output(5,worse,8) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,4) output(1,eq,23) output(1,eq,17) output(1,eq,19) output(1,eq,8) output(4,eq,23) output(4,eq,17) output(4,eq,19) output(4,eq,8) output(23,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,59) output(17,eq,19) output(17,eq,8) output(19,eq,8)
Optimization: 22 8
Answer: 6
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),3,for(atom(hasOftenSold(1))),()) preference(1,(1,3),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),4,for(atom(hasPrice(1))),()) preference(1,(1,2),4,for(atom(hasPrice(0))),()) preference(1,(1,5),4,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),4,for(atom(hasPrice(0))),()) preference(1,(1,8),4,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(5,better,78) output(17,better,78) output(19,better,59) output(8,better,59) output(5,worse,19) output(5,worse,8) output(17,worse,19) output(17,worse,8) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,4) output(1,eq,23) output(1,eq,19) output(1,eq,8) output(4,eq,23) output(4,eq,19) output(4,eq,8) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(5,eq,59) output(17,eq,59) output(19,eq,8)
Optimization: 20 8
Answer: 7
preference(1,(1,4),0,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),3,for(atom(hasPrice(1))),()) preference(1,aso) output(1,better,4) output(1,better,17) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,19) output(4,better,8) output(23,better,17) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,17) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,19) output(17,better,8) output(78,better,19) output(78,better,8) output(78,better,59) output(4,worse,23) output(4,worse,5) output(4,worse,78) output(17,worse,78) output(19,worse,59) output(8,worse,59) output(1,eq,23) output(1,eq,5) output(1,eq,78) output(4,eq,17) output(4,eq,59) output(23,eq,5) output(23,eq,78) output(5,eq,78) output(17,eq,59) output(19,eq,8)
Optimization: 16 1
Answer: 8
preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),3,for(atom(hasPrice(1))),()) preference(1,aso) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,19) output(4,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,19) output(5,better,8) output(17,better,19) output(17,better,8) output(78,better,19) output(78,better,8) output(4,worse,23) output(19,worse,59) output(8,worse,59) output(1,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,59) output(17,eq,78) output(17,eq,59) output(78,eq,59) output(19,eq,8)
Optimization: 15 1
Progression : [ 1;15] (Error: 14)
Answer: 9
preference(1,(1,1),0,for(atom(hasOftenSold(0))),()) preference(1,(1,2),0,for(atom(hasOiliness(1))),()) preference(1,(1,4),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),0,for(atom(hasOiliness(0))),()) preference(1,(1,7),0,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),0,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,4),3,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,1),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,aso) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(1,eq,4) output(1,eq,23) output(4,eq,23) output(5,eq,17) output(19,eq,8)
Optimization: 14 8
Answer: 10
preference(1,(1,1),0,for(atom(hasOftenSold(1))),()) preference(1,(1,2),0,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),0,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,4),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),4,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),4,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(atom(hasPrice(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),3,for(atom(hasOiliness(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),4,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),4,for(atom(hasMinorGrp(3))),()) preference(1,aso) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,5) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,78) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(1,worse,23) output(4,worse,23) output(5,worse,17) output(5,worse,59) output(78,worse,59) output(4,eq,17) output(19,eq,8)
Optimization: 13 8
Progression : [ 2;13] (Error: 5.5)
Answer: 11
preference(1,(1,1),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),0,for(atom(hasPrice(1))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),0,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,1),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,2),2,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),2,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),3,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,1),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,1),4,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,78) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(8,better,59) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,23) output(4,eq,19) output(4,eq,8) output(5,eq,17) output(19,eq,8)
Optimization: 11 6
Progression : [ 3;11] (Error: 2.66667)
Answer: 12
preference(1,(1,8),0,for(atom(hasPrice(0))),()) preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,8),4,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,1),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),3,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),3,for(atom(hasOiliness(1))),()) preference(1,(1,8),3,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),4,for(atom(hasOftenSold(0))),()) preference(1,(1,4),4,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,aso) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(5,better,17) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(78,better,59) output(19,better,59) output(8,better,59) output(23,worse,19) output(23,worse,8) output(5,worse,19) output(5,worse,8) output(17,worse,19) output(17,worse,8) output(78,worse,19) output(78,worse,8) output(19,eq,8)
Optimization: 10 6
Answer: 13
preference(1,(1,1),0,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),0,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,3),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,4),0,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),0,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,7),0,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),2,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),4,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),4,for(atom(hasOftenSold(0))),()) preference(1,(1,3),4,for(atom(hasPrice(1))),()) preference(1,(1,4),4,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),4,for(atom(hasPrice(1))),()) preference(1,aso) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(1,eq,23) output(5,eq,17) output(5,eq,78) output(17,eq,78) output(19,eq,8)
Optimization: 9 8
Progression : [4;9] (Error: 1.25)
Answer: 14
preference(1,(1,2),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,3),0,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,2),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,6),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),3,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),3,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(1,better,4) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(78,better,19) output(78,better,8) output(5,eq,17) output(19,eq,8)
Optimization: 8 5
Progression : [5;8] (Error: 0.6)
Answer: 15
preference(1,(1,4),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,5),0,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),4,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),4,for(atom(hasPrice(1))),()) preference(1,(1,7),4,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(1,better,4) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,19) output(17,better,8) output(78,better,19) output(78,better,8) output(19,eq,8)
Optimization: 8 4
Progression : [6;8] (Error: 0.333333)
Progression : [7;8] (Error: 0.142857)
Progression : [8;8] (Error: 0)
Progression : 8 [1;4] (Error: 3)
Progression : 8 [2;4] (Error: 1)
Answer: 16
preference(1,(1,5),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),0,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),4,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(1,better,4) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(4,better,19) output(4,better,8) output(4,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(5,eq,17) output(19,eq,8)
Optimization: 8 2
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 8 2
Calls        : 1
Time         : 185.065s (Solving: 179.76s 1st Model: 0.16s Unsat: 0.04s)
CPU Time     : 724.097s
Threads      : 4        (Winner: 1)

Choices      : 4080769  (Domain: 76507)
Conflicts    : 883025   (Analyzed: 883014)
Restarts     : 902      (Average: 978.95 Last: 25744)
Model-Level  : 223.1   
Problems     : 18       (Average Length: 0.22 Splits: 0)
Lemmas       : 1243733  (Deleted: 989133)
  Binary     : 15585    (Ratio:   1.25%)
  Ternary    : 42415    (Ratio:   3.41%)
  Conflict   : 883013   (Average Length:  202.8 Ratio:  71.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 360720   (Average Length:   40.3 Ratio:  29.00%) 
  Distributed: 120546   (Ratio:  13.65% Average LBD: 3.28) 
  Integrated : 361638   (Ratio: 300.00% Unit: 1474 Average Jumps: 58.21)
Backjumps    : 883014   (Average:  4.44 Max: 1085 Sum: 3921848)
  Executed   : 882988   (Average:  4.44 Max: 1085 Sum: 3921425 Ratio:  99.99%)
  Bounded    : 26       (Average: 16.27 Max:  38 Sum:    423 Ratio:   0.01%)

Rules        : 1762505 
  Choice     : 41      
  Minimize   : 2       
Atoms        : 533371  
Bodies       : 616809  
  Count      : 1768    
Equivalences : 1610617  (Atom=Atom: 463150 Body=Body: 495894 Other: 651573)
Tight        : Yes
Variables    : 73071    (Eliminated:    0 Frozen: 52655)
Constraints  : 1358861  (Binary:  94.7% Ternary:   4.3% Other:   0.9%)


Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(0)) >> atom(hasOilyLevel(0)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(2))  >> atom(hasOilyLevel(2)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(1))  >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) || not atom(hasOftenSold(0))  ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  || not atom(hasOftenSold(0))  ; 
  not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(3))  >> atom(hasPrice(0)) >> atom(hasOilyLevel(0)) || not atom(hasOilyLevel(2))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(2))  >> atom(hasOilyLevel(2)) || atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(1))  >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasOilyLevel(2)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasPrice(0)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasPrice(1)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasPrice(1)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasPrice(1)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasPrice(1)) || atom(hasMinorGrp(0)) ; 
  not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(2))  >> atom(hasPrice(1)) || atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) || atom(hasOftenSold(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(3))  >> atom(hasPrice(0)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(2)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(2))  >> atom(hasOilyLevel(2)) || atom(hasMinorGrp(1)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(1))  >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) || not atom(hasOilyLevel(0))  ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(0)) >> atom(hasOilyLevel(1)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(2))  >> atom(hasOilyLevel(2)) || not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(1))  >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> atom(hasPrice(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(0)) >> not atom(hasMinorGrp(0))  || not atom(hasPrice(1))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasPriceLevel(2))  >> atom(hasOilyLevel(2)) || not atom(hasPriceLevel(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> not atom(hasOftenSold(1))  >> atom(hasPrice(1)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(1))  >> atom(hasPriceLevel(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(2)) >> not atom(hasMinorGrp(0))  >> atom(hasPrice(1)) || not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOiliness(0)) >> atom(hasPriceLevel(0)) >> not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(0))  || atom(hasOftenSold(0)) ; 
  not atom(hasOilyLevel(1))  || atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(1))  || not atom(hasPriceLevel(0))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(0))  || atom(hasMinorGrp(3)) ; 
  not atom(hasPrice(1))  >> not atom(hasOiliness(0))  >> not atom(hasMinorGrp(2))  || atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> atom(hasMinorGrp(2)) || not atom(hasOilyLevel(0))  ; 
  atom(hasOilyLevel(1)) >> not atom(hasMinorGrp(1))  || not atom(hasOftenSold(1))  ; 
  atom(hasPrice(1)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(3)) || atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(1)) >> not atom(hasOiliness(0))  >> atom(hasOiliness(1)) >> not atom(hasPriceLevel(0))  || not atom(hasOilyLevel(2))  ; 
  atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> not atom(hasPriceLevel(1))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(2))  >> not atom(hasPriceLevel(2))  >> atom(hasMinorGrp(0)) || not atom(hasMinorGrp(0))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(3)) || not atom(hasMinorGrp(3))  ; 
  not atom(hasMinorGrp(3))  >> not atom(hasMinorGrp(2))  >> not atom(hasOilyLevel(2))  >> not atom(hasMinorGrp(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(1)) >> not atom(hasOilyLevel(2))  >> not atom(hasMinorGrp(0))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) || atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasOftenSold(0))  || atom(hasPrice(1)) ; 
  not atom(hasOilyLevel(1))  >> atom(hasMinorGrp(0)) || atom(hasOiliness(0)) ; 
  not atom(hasOftenSold(0))  >> not atom(hasMinorGrp(1))  >> not atom(hasOiliness(0))  || atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(1)) >> not atom(hasMinorGrp(2))  || not atom(hasOftenSold(1))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(1)) >> atom(hasPriceLevel(2)) >> not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) >> atom(hasPriceLevel(1)) >> not atom(hasMinorGrp(1))  || atom(hasPrice(0)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasOilyLevel(0)) ; 
  atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(0)) >> atom(hasPriceLevel(2)) >> atom(hasMinorGrp(3)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) >> not atom(hasPriceLevel(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasPrice(0))  >> atom(hasOiliness(1)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasOilyLevel(0))  >> not atom(hasPrice(1))  >> atom(hasMinorGrp(0)) || atom(hasPriceLevel(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(1)) >> atom(hasMinorGrp(0)) >> atom(hasOftenSold(0)) || not atom(hasPriceLevel(1))  ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) >> atom(hasPrice(1)) || not atom(hasMinorGrp(2))  ; 
  not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) || atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(2)) >> not atom(hasOftenSold(1))  >> not atom(hasOilyLevel(0))  >> not atom(hasOilyLevel(1))  || atom(hasPriceLevel(2)) ; 
  not atom(hasPrice(1))  >> atom(hasMinorGrp(3)) >> not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(1)) || not atom(hasPriceLevel(2))  ; 
  atom(hasMinorGrp(2)) >> not atom(hasPrice(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  || atom(hasPriceLevel(0)) ; 
  not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> atom(hasPrice(1)) || atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(0))  || not atom(hasMinorGrp(2))  ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(0)) >> atom(hasPriceLevel(1)) || not atom(hasOftenSold(1))  ; 
  not atom(hasMinorGrp(2))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) || not atom(hasPriceLevel(1))  ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(0))  || not atom(hasMinorGrp(2))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) >> not atom(hasOiliness(0))  >> not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasOilyLevel(2)) >> atom(hasMinorGrp(1)) >> atom(hasPriceLevel(2)) || not atom(hasMinorGrp(2))  ; 
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(2))  >> not atom(hasPriceLevel(0))  || not atom(hasOilyLevel(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(1)) >> atom(hasMinorGrp(3)) >> atom(hasPrice(1)) || not atom(hasMinorGrp(2))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(2)) >> not atom(hasOiliness(0))  >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasOilyLevel(1)) >> atom(hasPriceLevel(2)) >> not atom(hasOftenSold(1))  || atom(hasOilyLevel(0)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(1)) >> not atom(hasMinorGrp(0))  >> atom(hasPriceLevel(2)) || atom(hasPriceLevel(0)) 
}.
