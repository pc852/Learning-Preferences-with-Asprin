asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(15,eq,13) output(55,eq,32) preference(1,poset) output(15,eq,2) output(15,eq,27) output(15,eq,55) output(15,eq,42) output(15,eq,32) output(15,eq,4) output(15,eq,48) output(2,eq,13) output(2,eq,27) output(2,eq,55) output(2,eq,42) output(2,eq,32) output(2,eq,4) output(2,eq,48) output(13,eq,27) output(13,eq,55) output(13,eq,42) output(13,eq,32) output(13,eq,4) output(13,eq,48) output(27,eq,55) output(27,eq,42) output(27,eq,32) output(27,eq,4) output(27,eq,48) output(55,eq,42) output(55,eq,4) output(55,eq,48) output(42,eq,32) output(42,eq,4) output(42,eq,48) output(32,eq,4) output(32,eq,48) output(4,eq,48)
Optimization: 36 0
Answer: 2
output(15,eq,13) output(55,eq,32) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(15,better,42) output(15,better,48) output(2,better,42) output(2,better,48) output(13,better,42) output(13,better,48) output(27,better,42) output(27,better,48) output(4,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(27,better,55) output(27,better,32) output(55,worse,4) output(32,worse,4) output(42,worse,4) output(15,eq,2) output(15,eq,27) output(15,eq,4) output(2,eq,13) output(2,eq,27) output(2,eq,4) output(13,eq,27) output(13,eq,4) output(27,eq,4) output(55,eq,42) output(55,eq,48) output(42,eq,32) output(42,eq,48) output(32,eq,48)
Optimization: 19 1
Answer: 3
output(15,eq,13) output(55,eq,32) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,48) output(55,better,42) output(55,better,48) output(32,better,48) output(4,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(27,better,55) output(27,better,32) output(42,worse,32) output(55,worse,4) output(32,worse,4) output(42,worse,4) output(15,eq,2) output(15,eq,27) output(2,eq,13) output(2,eq,27) output(13,eq,27) output(42,eq,48)
Optimization: 12 1
Answer: 4
output(15,eq,13) output(55,eq,32) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,4) output(55,better,42) output(55,better,4) output(55,better,48) output(32,better,4) output(32,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(42,better,4) output(15,better,27) output(2,better,27) output(13,better,27) output(42,worse,32) output(27,worse,42) output(27,worse,48) output(4,worse,48) output(27,worse,55) output(27,worse,32) output(15,eq,2) output(2,eq,13) output(42,eq,48)
Optimization: 11 2
Answer: 5
output(15,eq,13) output(55,eq,32) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,4) output(55,better,42) output(55,better,4) output(55,better,48) output(32,better,4) output(32,better,48) output(42,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(42,better,4) output(15,better,27) output(2,better,27) output(13,better,27) output(42,worse,32) output(27,worse,42) output(27,worse,48) output(4,worse,48) output(27,worse,55) output(27,worse,32) output(15,eq,2) output(2,eq,13)
Optimization: 10 3
Answer: 6
output(15,eq,13) output(55,eq,32) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,48) output(55,better,42) output(55,better,4) output(55,better,48) output(32,better,4) output(32,better,48) output(42,better,48) output(4,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(27,better,55) output(27,better,32) output(42,worse,32) output(42,worse,4) output(15,eq,2) output(15,eq,27) output(2,eq,13) output(2,eq,27) output(13,eq,27)
Optimization: 9 2
Answer: 7
output(15,eq,13) output(55,eq,32) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,48) output(55,better,42) output(55,better,48) output(32,better,48) output(42,better,48) output(4,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(27,better,55) output(27,better,32) output(15,better,27) output(2,better,27) output(13,better,27) output(42,worse,32) output(55,worse,4) output(32,worse,4) output(42,worse,4) output(15,eq,2) output(2,eq,13)
Optimization: 8 4
Answer: 8
output(15,eq,13) output(55,eq,32) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasPrice(0))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,48) output(55,better,42) output(55,better,4) output(55,better,48) output(32,better,4) output(32,better,48) output(42,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(42,better,4) output(2,better,13) output(15,better,27) output(2,better,27) output(13,better,27) output(42,worse,32) output(4,worse,48) output(27,worse,55) output(27,worse,32) output(15,worse,2)
Optimization: 7 7
Answer: 9
output(15,eq,13) output(55,eq,32) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOftenSold(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,48) output(55,better,42) output(55,better,4) output(55,better,48) output(32,better,4) output(32,better,48) output(42,better,48) output(4,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(27,better,55) output(27,better,32) output(15,better,27) output(2,better,27) output(13,better,27) output(42,worse,32) output(42,worse,4) output(15,eq,2) output(2,eq,13)
Optimization: 6 5
Answer: 10
output(15,eq,13) output(55,eq,32) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasOiliness(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(hasPrice(1))),()) preference(1,poset) output(15,better,42) output(15,better,4) output(15,better,48) output(2,better,42) output(2,better,4) output(2,better,48) output(13,better,42) output(13,better,4) output(13,better,48) output(27,better,42) output(27,better,4) output(27,better,48) output(55,better,42) output(55,better,4) output(55,better,48) output(32,better,4) output(32,better,48) output(42,better,48) output(4,better,48) output(15,better,55) output(15,better,32) output(2,better,55) output(2,better,32) output(13,better,55) output(13,better,32) output(27,better,55) output(27,better,32) output(2,better,13) output(15,better,27) output(2,better,27) output(13,better,27) output(42,worse,32) output(42,worse,4) output(15,worse,2)
Optimization: 5 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.054 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 5 10
Calls        : 1
Time         : 1198.025s (Solving: 1194.11s 1st Model: 0.62s Unsat: 0.00s)
CPU Time     : 4779.694s
Threads      : 4        (Winner: 4)

Choices      : 8473665  (Domain: 2694)
Conflicts    : 589986   (Analyzed: 589986)
Restarts     : 632      (Average: 933.52 Last: 37178)
Model-Level  : 1066.5  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 37569908 (Deleted: 37338515)
  Binary     : 7430     (Ratio:   0.02%)
  Ternary    : 102775   (Ratio:   0.27%)
  Conflict   : 589986   (Average Length:  702.2 Ratio:   1.57%) 
  Loop       : 36834062 (Average Length:  113.8 Ratio:  98.04%) 
  Other      : 145860   (Average Length:    4.0 Ratio:   0.39%) 
  Distributed: 48633    (Ratio:   0.13% Average LBD: 2.85) 
  Integrated : 145899   (Ratio: 300.00% Unit: 267 Average Jumps: 880.36)
Backjumps    : 589986   (Average: 12.64 Max: 91575 Sum: 7457287)
  Executed   : 589964   (Average: 12.64 Max: 91575 Sum: 7457147 Ratio: 100.00%)
  Bounded    : 22       (Average:  6.36 Max:  35 Sum:    140 Ratio:   0.00%)

Rules        : 722637  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 22694   
Bodies       : 509978  
  Count      : 40      
Equivalences : 22275    (Atom=Atom: 3911 Body=Body: 5226 Other: 13138)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490473   (Eliminated:    0 Frozen: 483568)
Constraints  : 2821894  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOiliness(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) 
}.
