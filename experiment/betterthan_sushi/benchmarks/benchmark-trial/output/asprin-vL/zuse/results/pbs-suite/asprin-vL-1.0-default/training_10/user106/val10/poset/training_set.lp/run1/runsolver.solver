asprin_vL version 1.0
Reading from stdin
-:322:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:332:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:347:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:428:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:702:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:879:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1008:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1080:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1084:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1084:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1090:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1189:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1215:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1335:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1369:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1391:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:239:1-16: info: no atoms over signature occur in program:
  output/3

-:231:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:232:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:233:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(5,eq,3) output(4,eq,6) preference(1,poset) output(2,eq,5) output(2,eq,4) output(2,eq,8) output(2,eq,0) output(2,eq,6) output(2,eq,3) output(2,eq,9) output(2,eq,1) output(2,eq,7) output(5,eq,4) output(5,eq,8) output(5,eq,0) output(5,eq,6) output(5,eq,9) output(5,eq,1) output(5,eq,7) output(4,eq,8) output(4,eq,0) output(4,eq,3) output(4,eq,9) output(4,eq,1) output(4,eq,7) output(8,eq,0) output(8,eq,6) output(8,eq,3) output(8,eq,9) output(8,eq,1) output(8,eq,7) output(0,eq,6) output(0,eq,3) output(0,eq,9) output(0,eq,1) output(0,eq,7) output(6,eq,3) output(6,eq,9) output(6,eq,1) output(6,eq,7) output(3,eq,9) output(3,eq,1) output(3,eq,7) output(9,eq,1) output(9,eq,7) output(1,eq,7)
Optimization: 45 0
Answer: 2
output(5,eq,3) output(4,eq,6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,5) output(2,better,4) output(2,better,0) output(2,better,6) output(2,better,3) output(2,better,9) output(2,better,7) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(5,worse,8) output(5,worse,1) output(4,worse,8) output(4,worse,1) output(0,worse,1) output(6,worse,1) output(3,worse,1) output(9,worse,1) output(2,eq,8) output(2,eq,1) output(5,eq,4) output(5,eq,0) output(5,eq,6) output(5,eq,9) output(5,eq,7) output(4,eq,0) output(4,eq,3) output(4,eq,9) output(4,eq,7) output(8,eq,1) output(0,eq,6) output(0,eq,3) output(0,eq,9) output(0,eq,7) output(6,eq,3) output(6,eq,9) output(6,eq,7) output(3,eq,9) output(3,eq,7) output(9,eq,7)
Optimization: 32 1
Answer: 3
output(5,eq,3) output(4,eq,6) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,7) output(5,better,1) output(5,better,7) output(0,better,1) output(0,better,7) output(3,better,1) output(3,better,7) output(9,better,1) output(9,better,7) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(4,better,7) output(6,better,7) output(8,better,1) output(5,worse,8) output(2,worse,5) output(2,worse,0) output(2,worse,3) output(2,worse,9) output(2,worse,4) output(2,worse,6) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(2,worse,8) output(2,eq,1) output(2,eq,7) output(5,eq,0) output(5,eq,9) output(4,eq,8) output(8,eq,6) output(0,eq,3) output(0,eq,9) output(3,eq,9) output(1,eq,7)
Optimization: 23 1
Answer: 4
output(5,eq,3) output(4,eq,6) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,5) output(2,better,0) output(2,better,3) output(2,better,9) output(2,better,7) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(0,better,7) output(9,better,7) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(4,better,7) output(6,better,7) output(8,better,1) output(0,better,3) output(5,worse,8) output(5,worse,1) output(4,worse,8) output(0,worse,1) output(3,worse,1) output(9,worse,1) output(2,worse,4) output(2,worse,6) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(5,worse,9) output(0,worse,9) output(3,worse,9) output(2,worse,8) output(5,worse,0) output(2,eq,1) output(5,eq,7) output(3,eq,7)
Optimization: 21 2
Answer: 5
output(5,eq,3) output(4,eq,6) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(2,better,5) output(2,better,3) output(2,better,7) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,7) output(0,better,1) output(0,better,7) output(3,better,7) output(9,better,1) output(9,better,7) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(4,better,7) output(6,better,7) output(8,better,1) output(0,better,3) output(5,worse,8) output(5,worse,1) output(3,worse,1) output(2,worse,0) output(2,worse,9) output(2,worse,4) output(2,worse,6) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(5,worse,9) output(3,worse,9) output(2,worse,8) output(5,worse,0) output(2,eq,1) output(4,eq,8) output(8,eq,6) output(0,eq,9)
Optimization: 20 2
Answer: 6
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasPrice(0))),()) preference(1,(1,12),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasPrice(0))),()) preference(1,(1,11),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(2))),()) preference(1,poset) output(2,better,7) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,1) output(5,better,7) output(0,better,1) output(0,better,7) output(3,better,1) output(3,better,7) output(9,better,7) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(4,better,7) output(6,better,7) output(5,better,9) output(0,better,9) output(3,better,9) output(8,better,1) output(0,better,3) output(5,worse,8) output(2,worse,5) output(2,worse,0) output(2,worse,3) output(2,worse,4) output(2,worse,6) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(2,worse,8) output(5,worse,0) output(2,eq,9) output(2,eq,1) output(4,eq,8) output(8,eq,6) output(9,eq,1)
Optimization: 18 12
Answer: 7
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasPrice(0))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(2))),()) preference(1,poset) output(2,better,5) output(2,better,4) output(2,better,0) output(2,better,6) output(2,better,3) output(2,better,9) output(2,better,7) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,7) output(0,better,7) output(3,better,7) output(9,better,7) output(4,better,0) output(4,better,3) output(4,better,9) output(6,better,3) output(6,better,9) output(4,better,7) output(6,better,7) output(5,better,9) output(0,better,9) output(3,better,9) output(8,better,1) output(0,better,3) output(5,worse,8) output(5,worse,1) output(4,worse,8) output(4,worse,1) output(0,worse,1) output(6,worse,1) output(3,worse,1) output(9,worse,1) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(2,worse,8) output(5,worse,0) output(2,eq,1)
Optimization: 16 12
Answer: 8
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasOftenSold(1))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,11),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(2,better,4) output(2,better,6) output(2,better,9) output(2,better,7) output(8,better,6) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,4) output(5,better,8) output(5,better,6) output(5,better,1) output(5,better,7) output(0,better,6) output(0,better,1) output(0,better,7) output(3,better,1) output(3,better,7) output(9,better,7) output(4,better,9) output(6,better,9) output(4,better,7) output(6,better,7) output(5,better,9) output(0,better,9) output(3,better,9) output(2,better,1) output(8,better,1) output(0,better,3) output(4,worse,8) output(4,worse,1) output(6,worse,1) output(9,worse,1) output(2,worse,5) output(2,worse,0) output(2,worse,3) output(4,worse,0) output(4,worse,3) output(8,worse,0) output(8,worse,3) output(6,worse,3) output(2,worse,8) output(5,worse,0)
Optimization: 16 11
Answer: 9
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(2,better,4) output(2,better,6) output(2,better,9) output(2,better,7) output(8,better,6) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,4) output(5,better,8) output(5,better,6) output(5,better,1) output(5,better,7) output(0,better,6) output(0,better,1) output(0,better,7) output(3,better,1) output(3,better,7) output(9,better,7) output(4,better,9) output(6,better,9) output(4,better,7) output(6,better,7) output(5,better,9) output(0,better,9) output(3,better,9) output(2,better,1) output(8,better,1) output(0,better,3) output(4,worse,8) output(4,worse,1) output(6,worse,1) output(9,worse,1) output(2,worse,5) output(2,worse,0) output(2,worse,3) output(4,worse,0) output(4,worse,3) output(8,worse,0) output(8,worse,3) output(6,worse,3) output(2,worse,8) output(5,worse,0)
Optimization: 16 10
Answer: 10
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),1,for(atom(hasOiliness(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,12),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,9),2,for(atom(hasOiliness(1))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,11),2,for(atom(hasOftenSold(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,9) output(2,better,7) output(8,better,0) output(8,better,6) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,1) output(5,better,7) output(0,better,1) output(0,better,7) output(3,better,1) output(3,better,7) output(9,better,7) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(4,better,7) output(6,better,7) output(5,better,9) output(0,better,9) output(3,better,9) output(2,better,1) output(8,better,1) output(0,better,3) output(5,worse,8) output(4,worse,8) output(2,worse,5) output(2,worse,0) output(2,worse,3) output(2,worse,4) output(2,worse,6) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(2,worse,8) output(5,worse,0) output(9,unc,1)
Optimization: 15 12
Answer: 11
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),1,for(atom(hasOiliness(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,12),1,for(atom(hasOiliness(1))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,9),2,for(atom(hasOiliness(1))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,11),2,for(atom(hasOftenSold(1))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,poset) output(2,better,9) output(2,better,7) output(8,better,0) output(8,better,3) output(8,better,9) output(8,better,7) output(1,better,7) output(5,better,1) output(5,better,7) output(0,better,1) output(0,better,7) output(3,better,1) output(3,better,7) output(9,better,1) output(9,better,7) output(4,better,8) output(4,better,0) output(4,better,3) output(4,better,9) output(4,better,1) output(6,better,3) output(6,better,9) output(6,better,1) output(4,better,7) output(6,better,7) output(5,better,9) output(0,better,9) output(3,better,9) output(2,better,1) output(8,better,1) output(0,better,3) output(5,worse,8) output(2,worse,5) output(2,worse,0) output(2,worse,3) output(2,worse,4) output(2,worse,6) output(5,worse,4) output(5,worse,6) output(8,worse,6) output(0,worse,6) output(2,worse,8) output(5,worse,0)
Optimization: 14 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.031 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 14 12
Calls        : 1
Time         : 597.616s (Solving: 593.06s 1st Model: 0.79s Unsat: 0.00s)
CPU Time     : 2375.805s
Threads      : 4        (Winner: 4)

Choices      : 11353700 (Domain: 5131)
Conflicts    : 173349   (Analyzed: 173349)
Restarts     : 246      (Average: 704.67 Last: 10688)
Model-Level  : 445.9   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 17876532 (Deleted: 17717495)
  Binary     : 3400     (Ratio:   0.02%)
  Ternary    : 44015    (Ratio:   0.25%)
  Conflict   : 173349   (Average Length: 1049.4 Ratio:   0.97%) 
  Loop       : 17650166 (Average Length:  193.0 Ratio:  98.73%) 
  Other      : 53017    (Average Length:    3.8 Ratio:   0.30%) 
  Distributed: 18155    (Ratio:   0.10% Average LBD: 2.80) 
  Integrated : 54464    (Ratio: 299.99% Unit: 286 Average Jumps: 1427.02)
Backjumps    : 173349   (Average: 59.29 Max: 153387 Sum: 10277460)
  Executed   : 173315   (Average: 59.29 Max: 153387 Sum: 10277309 Ratio: 100.00%)
  Bounded    : 34       (Average:  4.44 Max:  44 Sum:    151 Ratio:   0.00%)

Rules        : 1030820 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 27495   
Bodies       : 715907  
  Count      : 48      
Equivalences : 26929    (Atom=Atom: 4766 Body=Body: 6321 Other: 15842)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 675360 Gammas: 0)
Variables    : 686731   (Eliminated:    0 Frozen: 678223)
Constraints  : 4019982  (Binary:  82.5% Ternary:   4.2% Other:  13.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasPrice(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(1)) ; 
  atom(hasPrice(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOftenSold(1)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(1)) 
}.
