asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(10,eq,27) output(10,eq,18) output(10,eq,7) output(10,eq,19) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(0,eq,27) output(0,eq,18) output(0,eq,7) output(0,eq,19) output(5,eq,12) output(5,eq,47) output(5,eq,27) output(5,eq,18) output(5,eq,7) output(5,eq,19) output(12,eq,47) output(12,eq,27) output(12,eq,18) output(12,eq,7) output(12,eq,19) output(47,eq,27) output(47,eq,18) output(47,eq,7) output(47,eq,19) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,19) output(12,better,19) output(5,better,19) output(0,better,19) output(47,better,19) output(7,better,19) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(10,eq,27) output(10,eq,18) output(10,eq,7) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(0,eq,27) output(0,eq,18) output(0,eq,7) output(5,eq,12) output(5,eq,47) output(5,eq,27) output(5,eq,18) output(5,eq,7) output(12,eq,47) output(12,eq,27) output(12,eq,18) output(12,eq,7) output(47,eq,27) output(47,eq,18) output(47,eq,7) output(27,eq,18) output(27,eq,7) output(18,eq,7)
Optimization: 28 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,less(weight)) output(27,better,18) output(27,better,7) output(10,better,5) output(10,better,18) output(10,better,7) output(12,better,18) output(12,better,7) output(0,better,5) output(0,better,18) output(0,better,7) output(47,better,18) output(47,better,7) output(18,worse,19) output(5,worse,12) output(5,worse,47) output(5,worse,27) output(5,worse,19) output(7,worse,19) output(10,eq,0) output(10,eq,12) output(10,eq,47) output(10,eq,27) output(10,eq,19) output(0,eq,12) output(0,eq,47) output(0,eq,27) output(0,eq,19) output(5,eq,18) output(5,eq,7) output(12,eq,47) output(12,eq,27) output(12,eq,19) output(47,eq,27) output(47,eq,19) output(27,eq,19) output(18,eq,7)
Optimization: 24 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),4) preference(1,less(weight)) output(10,better,27) output(10,better,18) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,19) output(5,better,27) output(5,better,18) output(5,better,19) output(0,better,27) output(0,better,18) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,19) output(7,better,19) output(18,worse,7) output(27,worse,7) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(10,eq,7) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(0,eq,7) output(5,eq,12) output(5,eq,47) output(5,eq,7) output(12,eq,47) output(12,eq,7) output(47,eq,7) output(27,eq,18) output(27,eq,19) output(18,eq,19)
Optimization: 20 1
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),4) preference(1,less(weight)) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(5,eq,12) output(5,eq,47) output(12,eq,47) output(27,eq,18) output(27,eq,7) output(27,eq,19) output(18,eq,7) output(18,eq,19) output(7,eq,19)
Optimization: 16 1
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(10,eq,0) output(10,eq,5) output(10,eq,12) output(10,eq,47) output(0,eq,5) output(0,eq,12) output(0,eq,47) output(5,eq,12) output(5,eq,47) output(12,eq,47) output(27,eq,18) output(27,eq,7) output(18,eq,7)
Optimization: 13 2
Answer: 7
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),9) preference(1,(1,5),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,12) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(27,worse,18) output(27,worse,7) output(10,worse,0) output(10,worse,5) output(10,worse,47) output(12,worse,47) output(12,worse,18) output(12,worse,7) output(0,eq,5) output(18,eq,7)
Optimization: 10 4
Answer: 8
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),12) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasOftenSold(0))),5) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,12) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(18,worse,7) output(27,worse,18) output(27,worse,7) output(10,worse,0) output(10,worse,5) output(10,worse,47) output(12,worse,47) output(12,worse,7) output(0,eq,5)
Optimization: 9 6
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),12) preference(1,(1,3),1,for(atom(hasOftenSold(0))),5) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(18,better,19) output(27,better,19) output(10,better,12) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(18,worse,7) output(27,worse,18) output(27,worse,7) output(10,worse,0) output(10,worse,5) output(10,worse,47) output(12,worse,47) output(0,eq,5)
Optimization: 8 7
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),9) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),12) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,5) output(10,better,12) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(10,worse,0) output(10,worse,47) output(12,worse,47) output(5,worse,47) output(0,worse,47) output(18,eq,7)
Optimization: 6 9
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,2),1,for(neg(atom(hasOftenSold(0)))),9) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),8) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),12) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),2) preference(1,(1,5),1,for(atom(hasOftenSold(0))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,5) output(10,better,12) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(10,worse,0) output(10,worse,47) output(12,worse,47) output(5,worse,47) output(18,eq,7)
Optimization: 5 10
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),3) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,4),1,for(atom(hasOftenSold(1))),9) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(12,worse,47) output(5,worse,12) output(5,worse,47) output(5,worse,27)
Optimization: 4 10
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),3) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(5,worse,12) output(5,worse,47) output(18,eq,7)
Optimization: 3 10
Answer: 14
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,7),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasOftenSold(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(5,worse,12) output(27,eq,18)
Optimization: 2 10
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),9) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasOftenSold(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19) output(5,worse,12)
Optimization: 1 10
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,7),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),9) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Answer: 17
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),6) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),4) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(1)))),11) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),9) preference(1,(1,9),1,for(atom(hasOftenSold(0))),3) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 18
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19)
Optimization: 0 8
Answer: 19
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),6) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19)
Optimization: 0 7
Answer: 20
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),12) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),8) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),9) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),5) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19)
Optimization: 0 6
Answer: 21
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),6) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,9),1,for(atom(hasOiliness(0))),10) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),8) preference(1,less(weight)) output(18,better,7) output(18,better,19) output(27,better,18) output(27,better,7) output(27,better,19) output(10,better,0) output(10,better,5) output(10,better,12) output(10,better,47) output(10,better,27) output(10,better,18) output(10,better,7) output(10,better,19) output(12,better,47) output(12,better,27) output(12,better,18) output(12,better,7) output(12,better,19) output(5,better,12) output(5,better,47) output(5,better,27) output(5,better,18) output(5,better,7) output(5,better,19) output(0,better,5) output(0,better,12) output(0,better,47) output(0,better,27) output(0,better,18) output(0,better,7) output(0,better,19) output(47,better,27) output(47,better,18) output(47,better,7) output(47,better,19) output(7,better,19)
Optimization: 0 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.099 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 1196.938s (Solving: 1192.82s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 4774.732s
Threads      : 4        (Winner: 4)

Choices      : 23472268 (Domain: 9189)
Conflicts    : 5065987  (Analyzed: 5065985)
Restarts     : 5576     (Average: 908.53 Last: 322476)
Model-Level  : 1010.6  
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 5078699  (Deleted: 4701557)
  Binary     : 540      (Ratio:   0.01%)
  Ternary    : 597      (Ratio:   0.01%)
  Conflict   : 5065985  (Average Length: 1079.2 Ratio:  99.75%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12714    (Average Length:  254.1 Ratio:   0.25%) 
  Distributed: 4238     (Ratio:   0.08% Average LBD: 3.60) 
  Integrated : 12714    (Ratio: 300.00% Unit: 4 Average Jumps: 16.75)
Backjumps    : 5065985  (Average:  3.65 Max: 2632 Sum: 18483453)
  Executed   : 5065984  (Average:  3.65 Max: 2632 Sum: 18483424 Ratio: 100.00%)
  Bounded    : 1        (Average: 29.00 Max:  29 Sum:     29 Ratio:   0.00%)

Rules        : 1285035 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 353339  
Bodies       : 357092  
  Sum        : 216     
  Count      : 10      
Equivalences : 1047872  (Atom=Atom: 337059 Body=Body: 345388 Other: 365425)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOilyLevel(1))  ; 
  3 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasPrice(1)) ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  9 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  5 :: atom(hasOftenSold(0)) ; 
  12 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasMinorGrp(1))  ; 
  5 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  5 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  ; 
  9 :: not atom(hasOftenSold(0))  ; 
  5 :: not atom(hasOftenSold(1))  ; 
  11 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  ; 
  9 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOilyLevel(2)) ; 
  5 :: not atom(hasOftenSold(1))  ; 
  1 :: atom(hasOftenSold(0)) ; 
  8 :: not atom(hasOilyLevel(1))  ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  12 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  2 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  ; 
  9 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPriceLevel(2)) ; 
  10 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(1))  ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  4 :: not atom(hasPrice(0))  ; 
  9 :: not atom(hasOiliness(0))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(1))  ; 
  9 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasPrice(0))  ; 
  11 :: not atom(hasOilyLevel(1))  ; 
  9 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  6 :: not atom(hasMinorGrp(1))  ; 
  9 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasOftenSold(1))  ; 
  4 :: atom(hasMinorGrp(3)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  4 :: not atom(hasPrice(0))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  9 :: atom(hasPriceLevel(2)) ; 
  7 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasPriceLevel(2)) ; 
  6 :: not atom(hasOiliness(1))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  4 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  11 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPriceLevel(2)) ; 
  7 :: not atom(hasMinorGrp(1))  ; 
  8 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasPriceLevel(1))  ; 
  10 :: not atom(hasOilyLevel(1))  ; 
  5 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  12 :: atom(hasPriceLevel(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasPriceLevel(1))  ; 
  9 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasOiliness(1)) ; 
  12 :: not atom(hasMinorGrp(1))  ; 
  5 :: atom(hasPriceLevel(2)) ; 
  8 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  11 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPriceLevel(2)) 
}.
