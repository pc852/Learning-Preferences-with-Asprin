asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(19,eq,8) preference(1,poset) output(1,eq,4) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,78) output(1,eq,19) output(1,eq,8) output(1,eq,59) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,19) output(4,eq,8) output(4,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,19) output(23,eq,8) output(23,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,19) output(5,eq,8) output(5,eq,59) output(17,eq,78) output(17,eq,19) output(17,eq,8) output(17,eq,59) output(78,eq,19) output(78,eq,8) output(78,eq,59) output(19,eq,59) output(8,eq,59)
Optimization: 36 0
Answer: 2
output(19,eq,8) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(4,better,78) output(4,better,59) output(4,worse,23) output(4,worse,19) output(4,worse,8) output(5,worse,19) output(5,worse,8) output(17,worse,19) output(17,worse,8) output(78,worse,19) output(78,worse,8) output(1,eq,23) output(1,eq,19) output(1,eq,8) output(4,eq,5) output(4,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(78,eq,59)
Optimization: 19 1
Answer: 3
output(19,eq,8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,59) output(4,worse,23) output(4,worse,19) output(4,worse,8) output(5,worse,19) output(5,worse,8) output(17,worse,19) output(17,worse,8) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,23) output(1,eq,19) output(1,eq,8) output(23,eq,19) output(23,eq,8) output(5,eq,17)
Optimization: 17 2
Answer: 4
output(19,eq,8) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,5) output(1,better,78) output(1,better,59) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,23) output(4,better,5) output(4,better,78) output(4,better,19) output(4,better,8) output(1,better,23) output(4,better,59) output(5,worse,19) output(5,worse,8) output(78,worse,19) output(78,worse,8) output(1,worse,17) output(23,worse,5) output(23,worse,17) output(1,worse,4) output(78,worse,59) output(23,worse,19) output(23,worse,8) output(5,worse,17) output(1,eq,19) output(1,eq,8) output(4,unc,17)
Optimization: 16 2
Answer: 5
output(19,eq,8) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(23,better,19) output(23,better,8) output(1,better,19) output(1,better,8) output(4,worse,23) output(4,worse,19) output(4,worse,8) output(4,worse,5) output(4,worse,17) output(1,eq,23) output(5,eq,17) output(78,eq,59) output(4,unc,78) output(4,unc,59) output(78,unc,19) output(78,unc,8) output(19,unc,59) output(8,unc,59)
Optimization: 15 2
Answer: 6
output(19,eq,8) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(23,better,19) output(23,better,8) output(1,better,19) output(1,better,8) output(4,worse,23) output(4,worse,19) output(4,worse,8) output(4,worse,5) output(4,worse,17) output(19,worse,59) output(8,worse,59) output(4,worse,78) output(4,worse,59) output(1,eq,23) output(5,eq,17) output(78,eq,59)
Optimization: 13 2
Answer: 7
output(19,eq,8) preference(1,(1,1),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(23,better,19) output(23,better,8) output(5,better,17) output(1,better,19) output(1,better,8) output(4,better,59) output(78,worse,19) output(78,worse,8) output(1,worse,4) output(78,worse,59) output(1,worse,23) output(1,unc,5) output(1,unc,17) output(5,unc,19) output(5,unc,8) output(17,unc,19) output(17,unc,8)
Optimization: 12 10
Answer: 8
output(19,eq,8) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasPrice(0))),()) preference(1,(1,12),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(1,better,4) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(1,better,23) output(23,better,19) output(23,better,8) output(1,better,19) output(1,better,8) output(4,worse,23) output(4,worse,19) output(4,worse,8) output(4,worse,5) output(4,worse,17) output(19,worse,59) output(8,worse,59) output(4,worse,78) output(4,worse,59) output(5,worse,17)
Optimization: 11 10
Answer: 9
output(19,eq,8) preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasOiliness(1))),()) preference(1,(1,10),2,for(atom(hasPrice(1))),()) preference(1,(1,11),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(2))),()) preference(1,poset) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(78,better,59) output(23,better,19) output(23,better,8) output(5,better,17) output(4,better,59) output(78,worse,19) output(78,worse,8) output(1,worse,5) output(1,worse,17) output(1,worse,4) output(1,worse,23) output(1,unc,19) output(1,unc,8)
Optimization: 9 12
Answer: 10
output(19,eq,8) preference(1,(1,1),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,12),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(2))),()) preference(1,poset) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(78,better,59) output(23,better,19) output(23,better,8) output(5,better,17) output(1,better,19) output(1,better,8) output(4,better,59) output(78,worse,19) output(78,worse,8) output(1,worse,5) output(1,worse,17) output(1,worse,4) output(1,worse,23)
Optimization: 7 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.044 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 7 12
Calls        : 1
Time         : 598.099s (Solving: 593.02s 1st Model: 0.80s Unsat: 0.00s)
CPU Time     : 2376.157s
Threads      : 4        (Winner: 4)

Choices      : 5854294  (Domain: 4322)
Conflicts    : 242425   (Analyzed: 242425)
Restarts     : 300      (Average: 808.08 Last: 18234)
Model-Level  : 1138.6  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 20015691 (Deleted: 19854617)
  Binary     : 4047     (Ratio:   0.02%)
  Ternary    : 68628    (Ratio:   0.34%)
  Conflict   : 242425   (Average Length:  814.9 Ratio:   1.21%) 
  Loop       : 19674595 (Average Length:  194.6 Ratio:  98.30%) 
  Other      : 98671    (Average Length:    3.7 Ratio:   0.49%) 
  Distributed: 32917    (Ratio:   0.17% Average LBD: 2.85) 
  Integrated : 98751    (Ratio: 300.00% Unit: 333 Average Jumps: 3966.35)
Backjumps    : 242425   (Average: 16.46 Max: 39707 Sum: 3989330)
  Executed   : 242398   (Average: 16.46 Max: 39707 Sum: 3989247 Ratio: 100.00%)
  Bounded    : 27       (Average:  3.07 Max:  37 Sum:     83 Ratio:   0.00%)

Rules        : 943963  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 24326   
Bodies       : 684516  
  Count      : 48      
Equivalences : 26478    (Atom=Atom: 4604 Body=Body: 6315 Other: 15559)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 642960 Gammas: 0)
Variables    : 653148   (Eliminated:    0 Frozen: 645722)
Constraints  : 3839654  (Binary:  82.6% Ternary:   3.5% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOiliness(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(2)) 
}.
