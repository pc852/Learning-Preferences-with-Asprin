asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,2) output(5,eq,33) output(5,eq,6) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,2) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,2) output(91,eq,7) output(91,eq,2) output(7,eq,2)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(atom(hasOilyLevel(2))),12) preference(1,less(weight)) output(38,better,5) output(5,worse,33) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(5,worse,2) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,2) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,2) output(91,eq,7) output(91,eq,2) output(7,eq,2)
Optimization: 35 1
Answer: 3
preference(1,(1,2),1,for(atom(hasPriceLevel(2))),12) preference(1,less(weight)) output(33,better,6) output(5,better,6) output(38,better,6) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,7) output(6,worse,2) output(38,eq,5) output(38,eq,33) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,2) output(5,eq,33) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,2) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,2) output(91,eq,7) output(91,eq,2) output(7,eq,2)
Optimization: 33 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(5,better,33) output(5,better,62) output(5,better,91) output(6,better,62) output(6,better,91) output(91,worse,7) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,7) output(33,worse,2) output(62,worse,7) output(62,worse,2) output(38,worse,5) output(38,worse,6) output(38,worse,18) output(38,worse,7) output(38,worse,2) output(38,eq,33) output(38,eq,62) output(38,eq,91) output(5,eq,6) output(5,eq,18) output(5,eq,7) output(5,eq,2) output(33,eq,62) output(33,eq,91) output(6,eq,18) output(6,eq,7) output(6,eq,2) output(18,eq,7) output(18,eq,2) output(62,eq,91) output(7,eq,2)
Optimization: 29 1
Answer: 5
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(33,better,18) output(33,better,91) output(33,better,2) output(5,better,18) output(5,better,91) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,2) output(38,better,18) output(38,better,91) output(38,better,2) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,7) output(5,eq,33) output(5,eq,6) output(5,eq,62) output(5,eq,7) output(33,eq,6) output(33,eq,62) output(33,eq,7) output(6,eq,62) output(6,eq,7) output(18,eq,91) output(18,eq,2) output(62,eq,7) output(91,eq,2)
Optimization: 21 1
Answer: 6
preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),11) preference(1,less(weight)) output(33,better,6) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,2) output(7,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,7) output(91,worse,7) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,7) output(33,worse,2) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,7) output(6,worse,2) output(62,worse,7) output(5,eq,7) output(18,eq,62) output(18,eq,91) output(18,eq,2) output(62,eq,91) output(62,eq,2) output(91,eq,2)
Optimization: 20 4
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),10) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),8) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(2)))),8) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),8) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(2)))),8) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),8) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),8) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),8) preference(1,less(weight)) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,18) output(5,better,91) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(5,worse,33) output(5,worse,6) output(5,worse,62) output(38,worse,5) output(38,worse,33) output(38,worse,6) output(38,worse,62) output(38,worse,7) output(38,eq,18) output(38,eq,91) output(38,eq,2) output(5,eq,7) output(6,eq,62) output(18,eq,91) output(18,eq,2) output(91,eq,2)
Optimization: 19 10
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),6) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(18,better,7) output(91,better,7) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,7) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,6) output(38,better,7) output(18,worse,62) output(33,worse,62) output(5,worse,33) output(5,worse,62) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,2) output(7,worse,2) output(38,worse,5) output(38,worse,33) output(38,worse,62) output(38,eq,18) output(38,eq,91) output(38,eq,2) output(18,eq,91) output(18,eq,2) output(91,eq,2)
Optimization: 18 10
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),8) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(0)))),7) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,5),1,for(atom(hasOiliness(0))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(18,better,7) output(91,better,7) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,7) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,6) output(38,better,7) output(18,worse,62) output(33,worse,62) output(5,worse,62) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,2) output(7,worse,2) output(38,worse,5) output(38,worse,33) output(38,worse,62) output(38,eq,18) output(38,eq,91) output(38,eq,2) output(18,eq,91) output(18,eq,2) output(91,eq,2)
Optimization: 17 10
Answer: 10
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(91,better,7) output(33,better,91) output(33,better,7) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,91) output(6,better,7) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,2) output(5,worse,62) output(6,worse,18) output(6,worse,62) output(6,worse,2) output(7,worse,2) output(38,eq,62) output(18,eq,2)
Optimization: 13 8
Answer: 11
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(0)))),11) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(91,better,7) output(33,better,91) output(33,better,7) output(5,better,33) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,2) output(5,worse,62) output(6,worse,62) output(7,worse,2) output(38,eq,62) output(5,eq,6) output(18,eq,2)
Optimization: 12 9
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),8) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(91,better,7) output(33,better,91) output(33,better,7) output(5,better,33) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(91,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,2) output(5,worse,62) output(6,worse,62) output(7,worse,2) output(5,eq,6) output(18,eq,2)
Optimization: 11 9
Answer: 13
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(33,worse,18) output(33,worse,62) output(5,worse,62) output(6,worse,18) output(6,worse,62) output(38,eq,62) output(33,eq,6)
Optimization: 8 9
Answer: 14
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(33,worse,18) output(33,worse,62) output(5,worse,62) output(6,worse,18) output(6,worse,62) output(33,eq,6)
Optimization: 7 9
Answer: 15
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(6,worse,18) output(6,worse,62) output(18,eq,62)
Optimization: 6 8
Answer: 16
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(33,worse,18) output(33,worse,62) output(6,worse,18) output(6,worse,62) output(33,eq,6)
Optimization: 5 8
Answer: 17
preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),5) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(6,eq,62)
Optimization: 4 9
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(0)))),4) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),2) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),5) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(6,eq,62) output(18,eq,91)
Optimization: 3 9
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),7) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(1)))),2) preference(1,(1,7),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),6) preference(1,(1,2),1,for(atom(hasOftenSold(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),1) preference(1,(1,8),1,for(atom(hasPriceLevel(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(18,worse,62) output(6,eq,62)
Optimization: 2 10
Answer: 20
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),5) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasOftenSold(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2) output(91,worse,7)
Optimization: 1 10
Answer: 21
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,10),1,for(atom(hasOilyLevel(2))),1) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2)
Optimization: 0 10
Answer: 22
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),11) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2)
Optimization: 0 9
Answer: 23
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasPriceLevel(1))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),11) preference(1,less(weight)) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,2) output(91,better,7) output(91,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,2) output(7,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,2)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Progression : 0 [2;8] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.158 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 1197.059s (Solving: 1192.40s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 4773.629s
Threads      : 4        (Winner: 4)

Choices      : 19914337 (Domain: 14594)
Conflicts    : 5561894  (Analyzed: 5561892)
Restarts     : 6217     (Average: 894.63 Last: 289583)
Model-Level  : 614.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 5587977  (Deleted: 5278887)
  Binary     : 1852     (Ratio:   0.03%)
  Ternary    : 698      (Ratio:   0.01%)
  Conflict   : 5561892  (Average Length:  945.4 Ratio:  99.53%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 26085    (Average Length:  101.1 Ratio:   0.47%) 
  Distributed: 8695     (Ratio:   0.16% Average LBD: 3.51) 
  Integrated : 26085    (Ratio: 300.00% Unit: 37 Average Jumps: 66.68)
Backjumps    : 5561892  (Average:  2.79 Max: 2169 Sum: 15509678)
  Executed   : 5561891  (Average:  2.79 Max: 2169 Sum: 15509653 Ratio: 100.00%)
  Bounded    : 1        (Average: 25.00 Max:  25 Sum:     25 Ratio:   0.00%)

Rules        : 1318635 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 386939  
Bodies       : 391532  
  Sum        : 216     
  Count      : 10      
Equivalences : 1151192  (Atom=Atom: 370659 Body=Body: 379828 Other: 400705)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasOiliness(0))  ; 
  11 :: atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOiliness(1))  ; 
  10 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasOilyLevel(0)) ; 
  8 :: atom(hasPriceLevel(0)) ; 
  8 :: not atom(hasMinorGrp(3))  ; 
  8 :: not atom(hasOilyLevel(2))  ; 
  8 :: not atom(hasPriceLevel(2))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  8 :: atom(hasOilyLevel(1)) ; 
  8 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasMinorGrp(1))  ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPriceLevel(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPriceLevel(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasMinorGrp(1))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  8 :: not atom(hasOftenSold(0))  ; 
  6 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: not atom(hasOiliness(0))  ; 
  7 :: not atom(hasPriceLevel(0))  ; 
  8 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPriceLevel(2)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPriceLevel(2)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  11 :: not atom(hasOilyLevel(0))  ; 
  6 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasOilyLevel(0))  ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPriceLevel(2)) ; 
  6 :: not atom(hasOftenSold(1))  ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPriceLevel(1)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasPriceLevel(2)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPriceLevel(1)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasPriceLevel(2)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPriceLevel(1)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPriceLevel(1)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  6 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasPriceLevel(1)) ; 
  2 :: not atom(hasOilyLevel(1))  ; 
  5 :: not atom(hasPriceLevel(0))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(0))  ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasPriceLevel(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasPriceLevel(0))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  2 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasPriceLevel(2)) ; 
  5 :: not atom(hasPrice(1))  ; 
  4 :: atom(hasPriceLevel(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  6 :: not atom(hasOiliness(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPriceLevel(1)) ; 
  5 :: not atom(hasMinorGrp(3))  ; 
  10 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  11 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasOilyLevel(1))  ; 
  4 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasPriceLevel(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasPriceLevel(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOilyLevel(1))  ; 
  2 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasPriceLevel(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  3 :: not atom(hasPriceLevel(1))  ; 
  4 :: atom(hasOiliness(1)) ; 
  11 :: atom(hasMinorGrp(0)) 
}.
