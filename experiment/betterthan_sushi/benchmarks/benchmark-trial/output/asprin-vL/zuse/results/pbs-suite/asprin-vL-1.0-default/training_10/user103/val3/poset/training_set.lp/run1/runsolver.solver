asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(4,eq,6) preference(1,poset) output(9,eq,0) output(9,eq,4) output(9,eq,5) output(9,eq,8) output(9,eq,6) output(9,eq,7) output(9,eq,1) output(9,eq,2) output(0,eq,4) output(0,eq,5) output(0,eq,8) output(0,eq,6) output(0,eq,7) output(0,eq,1) output(0,eq,2) output(4,eq,5) output(4,eq,8) output(4,eq,7) output(4,eq,1) output(4,eq,2) output(5,eq,8) output(5,eq,6) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(8,eq,6) output(8,eq,7) output(8,eq,1) output(8,eq,2) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 36 0
Answer: 2
output(4,eq,6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(8,better,6) output(8,better,7) output(9,worse,8) output(9,worse,1) output(9,worse,2) output(0,worse,8) output(0,worse,1) output(0,worse,2) output(4,worse,8) output(4,worse,1) output(4,worse,2) output(5,worse,8) output(5,worse,1) output(5,worse,2) output(6,worse,1) output(6,worse,2) output(7,worse,1) output(7,worse,2) output(9,eq,0) output(9,eq,4) output(9,eq,5) output(9,eq,6) output(9,eq,7) output(0,eq,4) output(0,eq,5) output(0,eq,6) output(0,eq,7) output(4,eq,5) output(4,eq,7) output(5,eq,6) output(5,eq,7) output(8,eq,1) output(8,eq,2) output(6,eq,7) output(1,eq,2)
Optimization: 34 1
Answer: 3
output(4,eq,6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,worse,5) output(9,eq,0) output(9,eq,5) output(0,eq,5) output(4,eq,8) output(4,eq,7) output(4,eq,1) output(4,eq,2) output(8,eq,6) output(8,eq,7) output(8,eq,1) output(8,eq,2) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 19 1
Answer: 4
output(4,eq,6) preference(1,(1,8),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(8,better,7) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,5) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(9,worse,8) output(0,worse,8) output(5,worse,8) output(9,worse,4) output(9,worse,6) output(0,worse,4) output(0,worse,6) output(5,worse,6) output(9,eq,0) output(9,eq,5) output(0,eq,5) output(4,eq,8) output(8,eq,6) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 17 1
Answer: 5
output(4,eq,6) preference(1,(1,7),1,for(atom(hasOiliness(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(8,better,1) output(8,better,2) output(4,worse,5) output(8,worse,7) output(9,worse,0) output(9,worse,5) output(4,worse,7) output(6,worse,7) output(0,eq,5) output(4,eq,8) output(8,eq,6) output(1,eq,2) output(9,unc,4) output(9,unc,8) output(9,unc,6) output(9,unc,7)
Optimization: 15 2
Answer: 6
output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOiliness(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasOiliness(1))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasOftenSold(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),2,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(8,better,7) output(9,better,1) output(9,better,2) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,5) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(0,better,5) output(9,worse,8) output(0,worse,8) output(5,worse,8) output(9,worse,4) output(9,worse,6) output(0,worse,4) output(0,worse,6) output(5,worse,6) output(8,worse,6) output(9,worse,0) output(9,worse,5) output(1,worse,2) output(9,unc,7)
Optimization: 14 10
Answer: 7
output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOiliness(1))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasOftenSold(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(6,better,1) output(7,better,1) output(7,better,2) output(8,better,1) output(0,better,5) output(4,worse,5) output(8,worse,6) output(9,worse,0) output(9,worse,5) output(1,worse,2) output(9,unc,7) output(4,unc,7) output(4,unc,2) output(8,unc,7) output(8,unc,2) output(6,unc,7) output(6,unc,2)
Optimization: 13 10
Answer: 8
output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOftenSold(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(8,better,7) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,7) output(4,better,5) output(4,better,8) output(4,better,1) output(6,better,1) output(9,better,0) output(9,better,5) output(4,better,7) output(6,better,7) output(8,better,1) output(0,better,5) output(4,worse,2) output(5,worse,8) output(5,worse,1) output(5,worse,2) output(6,worse,2) output(7,worse,1) output(7,worse,2) output(5,worse,6) output(8,worse,6) output(8,worse,2) output(1,worse,2)
Optimization: 12 10
Answer: 9
output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasOftenSold(1))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(8,better,1) output(8,better,2) output(0,better,5) output(4,worse,5) output(8,worse,6) output(9,worse,0) output(1,eq,2) output(9,unc,5) output(4,unc,7) output(8,unc,7) output(6,unc,7) output(7,unc,1) output(7,unc,2)
Optimization: 11 9
Answer: 10
output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),1,for(atom(hasOiliness(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasOftenSold(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,poset) output(8,better,7) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(0,better,5) output(7,worse,1) output(7,worse,2) output(4,worse,5) output(8,worse,6) output(9,worse,0) output(1,eq,2) output(9,unc,5)
Optimization: 8 9
Answer: 11
output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),1,for(atom(hasOiliness(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasOftenSold(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasOiliness(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,poset) output(8,better,7) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(9,better,5) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(0,better,5) output(7,worse,1) output(7,worse,2) output(4,worse,5) output(8,worse,6) output(9,worse,0) output(1,eq,2)
Optimization: 7 10
Answer: 12
output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),1,for(atom(hasOftenSold(1))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(9,better,0) output(9,better,5) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(0,better,5) output(4,worse,5) output(8,worse,6) output(8,worse,7) output(1,worse,2)
Optimization: 5 9
Answer: 13
output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(hasOftenSold(1))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),1,for(atom(hasOiliness(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasOftenSold(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(8,better,7) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(9,better,0) output(9,better,5) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(0,better,5) output(4,worse,5) output(8,worse,6) output(1,worse,2)
Optimization: 4 10
Answer: 14
output(4,eq,6) preference(1,(1,1),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(8,better,7) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(9,better,2) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(0,better,2) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(5,better,2) output(4,better,8) output(4,better,1) output(4,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(9,better,0) output(9,better,5) output(4,better,7) output(6,better,7) output(8,better,1) output(8,better,2) output(0,better,5) output(4,worse,5) output(8,worse,6) output(1,worse,2)
Optimization: 4 9
SATISFIABLE

Models       : 14+
  Optimum    : unknown
Optimization : 4 9
Calls        : 1
Time         : 833.420s (Solving: 829.32s 1st Model: 0.64s Unsat: 0.00s)
CPU Time     : 3320.692s
Threads      : 4        (Winner: 2)

Choices      : 4589890  (Domain: 2557)
Conflicts    : 412385   (Analyzed: 412385)
Restarts     : 442      (Average: 933.00 Last: 21374)
Model-Level  : 891.8   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 23627702 (Deleted: 23441782)
  Binary     : 5259     (Ratio:   0.02%)
  Ternary    : 80027    (Ratio:   0.34%)
  Conflict   : 412385   (Average Length:  819.1 Ratio:   1.75%) 
  Loop       : 23111424 (Average Length:  168.6 Ratio:  97.81%) 
  Other      : 103893   (Average Length:    4.0 Ratio:   0.44%) 
  Distributed: 34657    (Ratio:   0.15% Average LBD: 2.83) 
  Integrated : 103971   (Ratio: 300.00% Unit: 265 Average Jumps: 726.95)
Backjumps    : 412385   (Average:  9.46 Max: 34734 Sum: 3900502)
  Executed   : 412357   (Average:  9.46 Max: 34734 Sum: 3900353 Ratio: 100.00%)
  Bounded    : 28       (Average:  5.32 Max:  36 Sum:    149 Ratio:   0.00%)

Rules        : 722405  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 22538   
Bodies       : 509808  
  Count      : 40      
Equivalences : 21891    (Atom=Atom: 3840 Body=Body: 5139 Other: 12912)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490396   (Eliminated:    0 Frozen: 483497)
Constraints  : 2821562  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOiliness(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(1)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOftenSold(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOilyLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOiliness(0)) 
}.
Time limit reached
