asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(6,eq,4) preference(1,poset) output(7,eq,2) output(7,eq,1) output(7,eq,8) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(7,eq,0) output(7,eq,4) output(2,eq,1) output(2,eq,8) output(2,eq,3) output(2,eq,6) output(2,eq,9) output(2,eq,0) output(2,eq,4) output(1,eq,8) output(1,eq,3) output(1,eq,6) output(1,eq,9) output(1,eq,0) output(1,eq,4) output(8,eq,3) output(8,eq,6) output(8,eq,9) output(8,eq,0) output(8,eq,4) output(3,eq,6) output(3,eq,9) output(3,eq,0) output(3,eq,4) output(6,eq,9) output(6,eq,0) output(9,eq,0) output(9,eq,4) output(0,eq,4)
Optimization: 36 0
Answer: 2
output(6,eq,4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(7,eq,0) output(7,eq,4) output(2,eq,1) output(2,eq,8) output(1,eq,8) output(3,eq,6) output(3,eq,9) output(3,eq,0) output(3,eq,4) output(6,eq,9) output(6,eq,0) output(9,eq,0) output(9,eq,4) output(0,eq,4)
Optimization: 21 1
Answer: 3
output(6,eq,4) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(2,better,6) output(2,better,4) output(1,better,6) output(1,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,2) output(7,better,1) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(6,worse,9) output(6,worse,0) output(8,worse,6) output(8,worse,4) output(2,eq,1) output(2,eq,3) output(2,eq,9) output(2,eq,0) output(1,eq,3) output(1,eq,9) output(1,eq,0) output(3,eq,9) output(3,eq,0) output(9,eq,0)
Optimization: 18 1
Answer: 4
output(6,eq,4) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(6,worse,9) output(6,worse,0) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(7,unc,2) output(7,unc,1) output(7,unc,8) output(8,unc,3) output(8,unc,6) output(8,unc,9) output(8,unc,0) output(8,unc,4)
Optimization: 15 2
Answer: 5
output(6,eq,4) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(6,worse,9) output(6,worse,0) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0) output(7,unc,2) output(7,unc,1) output(8,unc,6) output(8,unc,4)
Optimization: 14 2
Answer: 6
output(6,eq,4) preference(1,(1,2),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(8,better,6) output(8,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,8) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,6) output(7,better,4) output(2,better,8) output(1,better,8) output(7,worse,2) output(7,worse,1) output(8,worse,3) output(8,worse,9) output(8,worse,0) output(6,worse,9) output(6,worse,0) output(2,eq,1) output(3,eq,9) output(3,eq,0) output(9,eq,0)
Optimization: 12 3
Answer: 7
output(6,eq,4) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,9) output(7,better,6) output(7,better,4) output(3,better,9) output(2,better,1) output(2,better,8) output(1,better,8) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(6,worse,9) output(6,worse,0) output(9,worse,0) output(7,eq,3) output(7,eq,0) output(3,eq,0)
Optimization: 10 8
Answer: 8
output(6,eq,4) preference(1,(1,1),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,12),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,6) output(7,better,4) output(3,better,9) output(2,better,8) output(1,better,8) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(6,worse,9) output(6,worse,0) output(9,worse,0) output(2,eq,1) output(3,eq,0)
Optimization: 9 7
Answer: 9
output(6,eq,4) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,10),2,for(atom(hasPrice(0))),()) preference(1,(1,11),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(2,better,3) output(2,better,6) output(2,better,9) output(2,better,0) output(2,better,4) output(1,better,3) output(1,better,6) output(1,better,9) output(1,better,0) output(1,better,4) output(8,better,3) output(8,better,6) output(8,better,9) output(8,better,0) output(8,better,4) output(3,better,6) output(3,better,4) output(9,better,4) output(0,better,4) output(7,better,3) output(7,better,9) output(7,better,0) output(7,better,6) output(7,better,4) output(3,better,9) output(2,better,1) output(2,better,8) output(1,better,8) output(7,worse,2) output(7,worse,1) output(7,worse,8) output(6,worse,9) output(6,worse,0) output(9,worse,0) output(3,eq,0)
Optimization: 8 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.035 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 8 7
Calls        : 1
Time         : 598.173s (Solving: 593.08s 1st Model: 0.85s Unsat: 0.00s)
CPU Time     : 2376.513s
Threads      : 4        (Winner: 4)

Choices      : 4396701  (Domain: 6379)
Conflicts    : 250645   (Analyzed: 250645)
Restarts     : 283      (Average: 885.67 Last: 8590)
Model-Level  : 352.7   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 18964402 (Deleted: 18822405)
  Binary     : 2488     (Ratio:   0.01%)
  Ternary    : 56037    (Ratio:   0.30%)
  Conflict   : 250645   (Average Length:  796.7 Ratio:   1.32%) 
  Loop       : 18641139 (Average Length:  168.5 Ratio:  98.30%) 
  Other      : 72618    (Average Length:    3.9 Ratio:   0.38%) 
  Distributed: 24230    (Ratio:   0.13% Average LBD: 2.83) 
  Integrated : 72687    (Ratio: 299.99% Unit: 160 Average Jumps: 906.31)
Backjumps    : 250645   (Average: 14.63 Max: 78363 Sum: 3667223)
  Executed   : 250620   (Average: 14.63 Max: 78363 Sum: 3667142 Ratio: 100.00%)
  Bounded    : 25       (Average:  3.24 Max:  36 Sum:     81 Ratio:   0.00%)

Rules        : 942823  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 23528   
Bodies       : 683630  
  Count      : 48      
Equivalences : 24511    (Atom=Atom: 4233 Body=Body: 5854 Other: 14424)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 642960 Gammas: 0)
Variables    : 652721   (Eliminated:    0 Frozen: 645342)
Constraints  : 3838061  (Binary:  82.6% Ternary:   3.5% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOilyLevel(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOiliness(0)) 
}.
