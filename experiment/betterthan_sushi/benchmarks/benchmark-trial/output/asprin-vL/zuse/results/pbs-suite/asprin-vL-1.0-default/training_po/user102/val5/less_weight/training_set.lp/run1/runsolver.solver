asprin_vL version 1.0
Reading from stdin
-:235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:152:1-16: info: no atoms over signature occur in program:
  output/3

-:144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,1) output(8,eq,7) output(8,eq,4) output(8,eq,0) output(8,eq,2) output(8,eq,3) output(8,eq,6) output(8,eq,9) output(1,eq,7) output(1,eq,4) output(1,eq,0) output(1,eq,2) output(1,eq,3) output(1,eq,6) output(1,eq,9) output(7,eq,4) output(7,eq,0) output(7,eq,2) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(4,eq,0) output(4,eq,2) output(4,eq,3) output(4,eq,6) output(4,eq,9) output(0,eq,2) output(0,eq,3) output(0,eq,6) output(0,eq,9) output(2,eq,3) output(2,eq,6) output(2,eq,9) output(3,eq,6) output(3,eq,9) output(6,eq,9)
Optimization: 36 0
Answer: 2
preference(1,(1,10),1,for(atom(isMaguro(1))),15) preference(1,less(weight)) output(4,better,2) output(0,better,2) output(1,better,2) output(8,better,2) output(7,better,2) output(2,worse,3) output(2,worse,6) output(2,worse,9) output(8,eq,1) output(8,eq,7) output(8,eq,4) output(8,eq,0) output(8,eq,3) output(8,eq,6) output(8,eq,9) output(1,eq,7) output(1,eq,4) output(1,eq,0) output(1,eq,3) output(1,eq,6) output(1,eq,9) output(7,eq,4) output(7,eq,0) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(4,eq,0) output(4,eq,3) output(4,eq,6) output(4,eq,9) output(0,eq,3) output(0,eq,6) output(0,eq,9) output(3,eq,6) output(3,eq,9) output(6,eq,9)
Optimization: 31 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(isUrchin(1)))),1) preference(1,(1,2),1,for(neg(atom(isOctopus(1)))),1) preference(1,(1,3),1,for(neg(atom(isMaguro(1)))),1) preference(1,(1,4),1,for(neg(atom(isRoe(1)))),1) preference(1,(1,5),1,for(neg(atom(isShrimp(1)))),1) preference(1,(1,6),1,for(neg(atom(isFattyFish(1)))),1) preference(1,(1,7),1,for(neg(atom(isChewy(1)))),1) preference(1,(1,8),1,for(neg(atom(isCreamy(1)))),1) preference(1,(1,9),1,for(neg(atom(isUnique(1)))),1) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),2) preference(1,less(weight)) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,6) output(4,better,9) output(8,better,1) output(8,better,7) output(8,better,0) output(8,better,2) output(8,better,3) output(8,better,6) output(8,better,9) output(1,worse,4) output(7,worse,4) output(8,eq,4) output(1,eq,7) output(1,eq,0) output(1,eq,2) output(1,eq,3) output(1,eq,6) output(1,eq,9) output(7,eq,0) output(7,eq,2) output(7,eq,3) output(7,eq,6) output(7,eq,9) output(0,eq,2) output(0,eq,3) output(0,eq,6) output(0,eq,9) output(2,eq,3) output(2,eq,6) output(2,eq,9) output(3,eq,6) output(3,eq,9) output(6,eq,9)
Optimization: 24 10
Answer: 4
preference(1,(1,10),1,for(atom(isUnique(1))),15) preference(1,less(weight)) output(4,better,6) output(4,better,9) output(2,better,6) output(2,better,9) output(0,better,6) output(0,better,9) output(1,better,6) output(1,better,9) output(8,better,6) output(8,better,9) output(3,better,6) output(3,better,9) output(7,better,6) output(7,better,9) output(8,eq,1) output(8,eq,7) output(8,eq,4) output(8,eq,0) output(8,eq,2) output(8,eq,3) output(1,eq,7) output(1,eq,4) output(1,eq,0) output(1,eq,2) output(1,eq,3) output(7,eq,4) output(7,eq,0) output(7,eq,2) output(7,eq,3) output(4,eq,0) output(4,eq,2) output(4,eq,3) output(0,eq,2) output(0,eq,3) output(2,eq,3) output(6,eq,9)
Optimization: 22 1
Answer: 5
preference(1,(1,2),1,for(neg(atom(isShrimp(1)))),3) preference(1,(1,8),1,for(neg(atom(isSweet(1)))),1) preference(1,(1,1),1,for(atom(isShrimp(1))),9) preference(1,(1,3),1,for(atom(isRaw(0))),3) preference(1,(1,4),1,for(atom(isMaguro(1))),4) preference(1,(1,5),1,for(atom(isRoe(1))),4) preference(1,(1,6),1,for(atom(isUnique(1))),15) preference(1,(1,7),1,for(atom(isSweet(1))),1) preference(1,(1,9),1,for(atom(isRaw(1))),2) preference(1,(1,10),1,for(atom(isCreamy(1))),5) preference(1,less(weight)) output(4,better,0) output(4,better,6) output(4,better,9) output(2,better,6) output(2,better,9) output(6,better,9) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,2) output(1,better,3) output(1,better,6) output(1,better,9) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,2) output(8,better,6) output(8,better,9) output(3,better,6) output(3,better,9) output(7,better,4) output(7,better,0) output(7,better,2) output(7,better,6) output(7,better,9) output(4,worse,2) output(4,worse,3) output(2,worse,3) output(0,worse,2) output(0,worse,3) output(8,worse,1) output(7,worse,3) output(8,eq,3)
Optimization: 8 10
Answer: 6
preference(1,(1,4),1,for(neg(atom(isRaw(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,1),1,for(atom(isMaguro(1))),5) preference(1,(1,2),1,for(atom(isRaw(0))),1) preference(1,(1,3),1,for(atom(isChewy(1))),6) preference(1,(1,5),1,for(atom(isUrchin(1))),2) preference(1,(1,6),1,for(atom(isShrimp(1))),2) preference(1,(1,8),1,for(atom(isFattyFish(1))),4) preference(1,(1,9),1,for(atom(isUnique(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,6) output(4,better,9) output(2,better,3) output(2,better,6) output(2,better,9) output(6,better,9) output(0,better,2) output(0,better,3) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,2) output(1,better,3) output(1,better,6) output(1,better,9) output(8,better,1) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,2) output(8,better,3) output(8,better,6) output(8,better,9) output(3,better,6) output(3,better,9) output(7,better,4) output(7,better,0) output(7,better,2) output(7,better,3) output(7,better,6) output(7,better,9)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 7
preference(1,(1,2),1,for(neg(atom(isMaguro(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(0)))),12) preference(1,(1,1),1,for(atom(isUnique(1))),15) preference(1,(1,4),1,for(atom(isUrchin(1))),4) preference(1,(1,5),1,for(atom(isChewy(1))),14) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(isRaw(0))),2) preference(1,(1,9),1,for(atom(isShrimp(1))),4) preference(1,(1,10),1,for(atom(isMaguro(1))),14) preference(1,less(weight)) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,6) output(4,better,9) output(2,better,3) output(2,better,6) output(2,better,9) output(6,better,9) output(0,better,2) output(0,better,3) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,2) output(1,better,3) output(1,better,6) output(1,better,9) output(8,better,1) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,2) output(8,better,3) output(8,better,6) output(8,better,9) output(3,better,6) output(3,better,9) output(7,better,4) output(7,better,0) output(7,better,2) output(7,better,3) output(7,better,6) output(7,better,9)
Optimization: 0 9
Answer: 8
preference(1,(1,3),1,for(neg(atom(isRaw(1)))),1) preference(1,(1,9),1,for(neg(atom(isFattyFish(1)))),9) preference(1,(1,2),1,for(atom(isChewy(1))),12) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(isShrimp(1))),2) preference(1,(1,7),1,for(atom(isFattyFish(1))),2) preference(1,(1,8),1,for(atom(isUnique(1))),14) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,6) output(4,better,9) output(2,better,3) output(2,better,6) output(2,better,9) output(6,better,9) output(0,better,2) output(0,better,3) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,2) output(1,better,3) output(1,better,6) output(1,better,9) output(8,better,1) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,2) output(8,better,3) output(8,better,6) output(8,better,9) output(3,better,6) output(3,better,9) output(7,better,4) output(7,better,0) output(7,better,2) output(7,better,3) output(7,better,6) output(7,better,9)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.121 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 1198.161s (Solving: 1190.93s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 4770.451s
Threads      : 4        (Winner: 4)

Choices      : 21597440 (Domain: 3280)
Conflicts    : 3985867  (Analyzed: 3985865)
Restarts     : 6658     (Average: 598.66 Last: 82267)
Model-Level  : 1116.5  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 3996974  (Deleted: 3762550)
  Binary     : 1376     (Ratio:   0.03%)
  Ternary    : 577      (Ratio:   0.01%)
  Conflict   : 3985865  (Average Length: 1345.5 Ratio:  99.72%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 11109    (Average Length:  119.7 Ratio:   0.28%) 
  Distributed: 3703     (Ratio:   0.09% Average LBD: 3.44) 
  Integrated : 11109    (Ratio: 300.00% Unit: 4 Average Jumps: 369.75)
Backjumps    : 3985865  (Average:  3.51 Max: 3144 Sum: 13997103)
  Executed   : 3985864  (Average:  3.51 Max: 3144 Sum: 13997068 Ratio: 100.00%)
  Bounded    : 1        (Average: 35.00 Max:  35 Sum:     35 Ratio:   0.00%)

Rules        : 1885841 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 682781  
Bodies       : 696698  
  Sum        : 216     
  Count      : 10      
Equivalences : 2062432  (Atom=Atom: 666348 Body=Body: 682927 Other: 713157)
Tight        : Yes
Variables    : 18647    (Eliminated:    0 Frozen: 13037)
Constraints  : 1239262  (Binary:  98.9% Ternary:   0.5% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(isUrchin(1))  ; 
  1 :: not atom(isOctopus(1))  ; 
  1 :: not atom(isMaguro(1))  ; 
  1 :: not atom(isRoe(1))  ; 
  1 :: not atom(isShrimp(1))  ; 
  1 :: not atom(isFattyFish(1))  ; 
  1 :: not atom(isChewy(1))  ; 
  1 :: not atom(isCreamy(1))  ; 
  1 :: not atom(isUnique(1))  ; 
  2 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(isShrimp(1)) ; 
  3 :: not atom(isShrimp(1))  ; 
  3 :: atom(isRaw(0)) ; 
  4 :: atom(isMaguro(1)) ; 
  4 :: atom(isRoe(1)) ; 
  15 :: atom(isUnique(1)) ; 
  1 :: atom(isSweet(1)) ; 
  1 :: not atom(isSweet(1))  ; 
  2 :: atom(isRaw(1)) ; 
  5 :: atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(isMaguro(1)) ; 
  1 :: atom(isRaw(0)) ; 
  6 :: atom(isChewy(1)) ; 
  1 :: not atom(isRaw(1))  ; 
  2 :: atom(isUrchin(1)) ; 
  2 :: atom(isShrimp(1)) ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  4 :: atom(isFattyFish(1)) ; 
  8 :: atom(isUnique(1)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(isUnique(1)) ; 
  1 :: not atom(isMaguro(1))  ; 
  4 :: atom(isUrchin(1)) ; 
  14 :: atom(isChewy(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  12 :: not atom(hasMinorGrp(0))  ; 
  2 :: atom(isRaw(0)) ; 
  4 :: atom(isShrimp(1)) ; 
  14 :: atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(isChewy(1)) ; 
  1 :: not atom(isRaw(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(isShrimp(1)) ; 
  2 :: atom(isFattyFish(1)) ; 
  14 :: atom(isUnique(1)) ; 
  9 :: not atom(isFattyFish(1))  ; 
  2 :: atom(hasPrice(1)) 
}.
