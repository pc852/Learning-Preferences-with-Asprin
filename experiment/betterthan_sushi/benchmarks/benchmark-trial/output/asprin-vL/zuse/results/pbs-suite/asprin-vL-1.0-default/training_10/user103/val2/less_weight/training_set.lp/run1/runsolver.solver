asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,0) output(9,eq,3) output(9,eq,4) output(9,eq,5) output(9,eq,8) output(9,eq,6) output(9,eq,7) output(9,eq,1) output(0,eq,3) output(0,eq,4) output(0,eq,5) output(0,eq,8) output(0,eq,6) output(0,eq,7) output(0,eq,1) output(3,eq,4) output(3,eq,5) output(3,eq,8) output(3,eq,6) output(3,eq,7) output(3,eq,1) output(4,eq,5) output(4,eq,8) output(4,eq,6) output(4,eq,7) output(4,eq,1) output(5,eq,8) output(5,eq,6) output(5,eq,7) output(5,eq,1) output(8,eq,6) output(8,eq,7) output(8,eq,1) output(6,eq,7) output(6,eq,1) output(7,eq,1)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(3,better,8) output(3,better,1) output(5,better,8) output(5,better,1) output(0,better,8) output(0,better,1) output(9,better,8) output(9,better,1) output(6,better,1) output(4,better,8) output(4,better,1) output(7,better,1) output(8,worse,6) output(8,worse,7) output(9,eq,0) output(9,eq,3) output(9,eq,4) output(9,eq,5) output(9,eq,6) output(9,eq,7) output(0,eq,3) output(0,eq,4) output(0,eq,5) output(0,eq,6) output(0,eq,7) output(3,eq,4) output(3,eq,5) output(3,eq,6) output(3,eq,7) output(4,eq,5) output(4,eq,6) output(4,eq,7) output(5,eq,6) output(5,eq,7) output(8,eq,1) output(6,eq,7)
Optimization: 24 1
Answer: 3
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(3,better,4) output(3,better,6) output(3,better,7) output(5,better,6) output(5,better,7) output(0,better,4) output(0,better,6) output(0,better,7) output(9,better,4) output(9,better,6) output(9,better,7) output(6,worse,1) output(4,worse,5) output(4,worse,8) output(4,worse,1) output(7,worse,1) output(9,eq,0) output(9,eq,3) output(9,eq,5) output(9,eq,8) output(9,eq,1) output(0,eq,3) output(0,eq,5) output(0,eq,8) output(0,eq,1) output(3,eq,5) output(3,eq,8) output(3,eq,1) output(4,eq,6) output(4,eq,7) output(5,eq,8) output(5,eq,1) output(8,eq,1) output(6,eq,7)
Optimization: 23 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,less(weight)) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,1) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,1) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,1) output(7,better,1) output(8,worse,7) output(6,worse,7) output(4,worse,5) output(4,worse,7) output(9,eq,0) output(9,eq,3) output(9,eq,5) output(9,eq,7) output(0,eq,3) output(0,eq,5) output(0,eq,7) output(3,eq,5) output(3,eq,7) output(4,eq,8) output(4,eq,6) output(4,eq,1) output(5,eq,7) output(8,eq,6) output(8,eq,1) output(6,eq,1)
Optimization: 20 1
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(1)))),1) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),5) preference(1,less(weight)) output(8,better,7) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(4,better,5) output(4,better,7) output(3,worse,4) output(3,worse,8) output(3,worse,6) output(3,worse,1) output(5,worse,8) output(5,worse,6) output(5,worse,1) output(7,worse,1) output(9,eq,0) output(3,eq,5) output(3,eq,7) output(4,eq,8) output(4,eq,6) output(4,eq,1) output(5,eq,7) output(8,eq,6) output(8,eq,1) output(6,eq,1)
Optimization: 18 2
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),11) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(2)))),3) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),6) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),3) preference(1,(1,6),1,for(atom(hasPriceLevel(0))),3) preference(1,(1,7),1,for(atom(hasOftenSold(1))),3) preference(1,less(weight)) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,4) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,4) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(7,better,1) output(8,worse,7) output(0,worse,3) output(0,worse,5) output(9,worse,3) output(9,worse,5) output(6,worse,7) output(4,worse,5) output(4,worse,7) output(9,eq,0) output(3,eq,5) output(4,eq,8) output(4,eq,6) output(4,eq,1) output(8,eq,6) output(8,eq,1) output(6,eq,1)
Optimization: 16 10
Answer: 7
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,7) output(5,better,7) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,5) output(4,better,7) output(4,better,1) output(3,worse,4) output(3,worse,8) output(3,worse,6) output(3,worse,1) output(5,worse,8) output(5,worse,6) output(5,worse,1) output(7,worse,1) output(9,eq,0) output(3,eq,5) output(4,eq,8) output(4,eq,6) output(8,eq,6)
Optimization: 13 6
Answer: 8
preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),9) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(1)))),11) preference(1,(1,1),1,for(atom(hasPrice(1))),12) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,7) output(3,better,1) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,7) output(4,better,1) output(7,worse,1) output(9,eq,0) output(3,eq,4) output(3,eq,5) output(3,eq,8) output(3,eq,6) output(4,eq,5) output(4,eq,8) output(4,eq,6) output(5,eq,8) output(5,eq,6) output(8,eq,6)
Optimization: 12 6
Answer: 9
preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),1) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,4),1,for(atom(hasOftenSold(0))),9) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),11) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(3,better,7) output(3,better,1) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,5) output(4,better,7) output(4,better,1) output(7,better,1) output(3,worse,4) output(3,worse,8) output(3,worse,6) output(5,worse,8) output(5,worse,6) output(4,worse,8) output(9,eq,0) output(3,eq,5) output(4,eq,6)
Optimization: 9 8
Answer: 10
preference(1,(1,5),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(0)))),11) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),11) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),12) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(3,better,7) output(3,better,1) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,5) output(4,better,7) output(4,better,1) output(7,better,1) output(3,worse,4) output(3,worse,8) output(3,worse,6) output(5,worse,8) output(5,worse,6) output(4,worse,8) output(3,eq,5) output(4,eq,6)
Optimization: 8 8
Progression : [1;8] (Error: 7)
Answer: 11
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),12) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),2) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),11) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasPrice(1))),8) preference(1,(1,7),1,for(atom(hasOiliness(1))),7) preference(1,less(weight)) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,1) output(4,better,8) output(4,better,1) output(7,better,1) output(8,worse,6) output(8,worse,7) output(6,worse,7) output(4,worse,5) output(4,worse,7) output(3,eq,5) output(4,eq,6)
Optimization: 7 10
Answer: 12
preference(1,(1,5),1,for(neg(atom(hasOilyLevel(2)))),12) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),10) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(2)))),7) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),11) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,7),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,1) output(4,better,1) output(7,better,1) output(4,worse,5) output(4,worse,8) output(3,eq,5) output(4,eq,6) output(4,eq,7) output(6,eq,7)
Optimization: 6 10
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),5) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,6),1,for(atom(hasPrice(1))),10) preference(1,(1,7),1,for(atom(hasOiliness(1))),12) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,7) output(4,better,1) output(7,better,1) output(4,worse,5) output(3,eq,5) output(4,eq,8) output(4,eq,6) output(8,eq,6)
Optimization: 5 10
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),12) preference(1,(1,6),1,for(atom(hasPrice(1))),10) preference(1,(1,7),1,for(atom(hasOiliness(1))),12) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,8) output(4,better,7) output(4,better,1) output(7,better,1) output(8,worse,6) output(4,worse,5) output(3,eq,5) output(4,eq,6)
Optimization: 4 10
Progression : [2;4] (Error: 1)
Progression : [3;4] (Error: 0.333333)
Progression : [4;4] (Error: 0)
Progression : 4 [ 1;10] (Error: 9)
Answer: 15
preference(1,(1,2),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),12) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,8) output(4,better,7) output(4,better,1) output(7,better,1) output(8,worse,6) output(4,worse,5) output(3,eq,5) output(4,eq,6)
Optimization: 4 9
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),5) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,2),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),11) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,8) output(4,better,7) output(4,better,1) output(7,better,1) output(8,worse,6) output(4,worse,5) output(3,eq,5) output(4,eq,6)
Optimization: 4 8
Answer: 17
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,4),1,for(neg(atom(hasOilyLevel(1)))),9) preference(1,(1,9),1,for(neg(atom(hasPrice(1)))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),11) preference(1,(1,6),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),12) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,8) output(4,better,7) output(4,better,1) output(7,better,1) output(8,worse,6) output(4,worse,5) output(3,eq,5) output(4,eq,6)
Optimization: 4 7
Answer: 18
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(1)))),12) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),6) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),4) preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,9),1,for(atom(hasOilyLevel(2))),9) preference(1,less(weight)) output(8,better,6) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,7) output(4,better,1) output(7,better,1) output(4,worse,5) output(4,worse,8) output(3,eq,5) output(4,eq,6)
Optimization: 4 6
Progression : 4 [2;6] (Error: 2)
Answer: 19
preference(1,(1,3),1,for(neg(atom(hasPriceLevel(1)))),1) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(2)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(1)))),7) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(8,better,7) output(8,better,1) output(3,better,4) output(3,better,8) output(3,better,6) output(3,better,7) output(3,better,1) output(5,better,8) output(5,better,6) output(5,better,7) output(5,better,1) output(0,better,3) output(0,better,4) output(0,better,5) output(0,better,8) output(0,better,6) output(0,better,7) output(0,better,1) output(9,better,0) output(9,better,3) output(9,better,4) output(9,better,5) output(9,better,8) output(9,better,6) output(9,better,7) output(9,better,1) output(6,better,7) output(6,better,1) output(4,better,8) output(4,better,7) output(4,better,1) output(7,better,1) output(8,worse,6) output(4,worse,5) output(3,eq,5) output(4,eq,6)
Optimization: 4 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.097 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 4 5
Bounds       : 4 [2;5]
Calls        : 1
Time         : 1198.158s (Solving: 1193.14s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 4776.861s
Threads      : 4        (Winner: 4)

Choices      : 20341478 (Domain: 8107)
Conflicts    : 6172938  (Analyzed: 6172930)
Restarts     : 7785     (Average: 792.93 Last: 306688)
Model-Level  : 827.5   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 6214795  (Deleted: 5883883)
  Binary     : 1350     (Ratio:   0.02%)
  Ternary    : 713      (Ratio:   0.01%)
  Conflict   : 6172925  (Average Length:  704.8 Ratio:  99.33%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 41870    (Average Length:  735.1 Ratio:   0.67%) 
  Distributed: 13963    (Ratio:   0.23% Average LBD: 3.82) 
  Integrated : 41889    (Ratio: 300.00% Unit: 145 Average Jumps: 43.66)
Backjumps    : 6172930  (Average:  2.68 Max: 2705 Sum: 16535983)
  Executed   : 6172895  (Average:  2.68 Max: 2705 Sum: 16535682 Ratio: 100.00%)
  Bounded    : 35       (Average:  8.60 Max:  34 Sum:    301 Ratio:   0.00%)

Rules        : 1299435 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 367739  
Bodies       : 371852  
  Sum        : 216     
  Count      : 10      
Equivalences : 1092152  (Atom=Atom: 351459 Body=Body: 360148 Other: 380545)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOilyLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOilyLevel(1))  ; 
  5 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasMinorGrp(1))  ; 
  6 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  3 :: not atom(hasOftenSold(0))  ; 
  3 :: atom(hasOilyLevel(0)) ; 
  3 :: atom(hasPriceLevel(0)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  3 :: not atom(hasMinorGrp(2))  ; 
  3 :: not atom(hasOilyLevel(2))  ; 
  3 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasPriceLevel(1))  ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: atom(hasPrice(1)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasOftenSold(1))  ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  12 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasPriceLevel(2))  ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasPrice(1)) ; 
  11 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  12 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  11 :: not atom(hasMinorGrp(0))  ; 
  11 :: not atom(hasPrice(1))  ; 
  1 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  10 :: not atom(hasMinorGrp(2))  ; 
  10 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  12 :: not atom(hasOilyLevel(1))  ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasPriceLevel(1))  ; 
  11 :: not atom(hasPriceLevel(2))  ; 
  3 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  11 :: atom(hasOilyLevel(2)) ; 
  12 :: atom(hasOiliness(0)) ; 
  12 :: not atom(hasOilyLevel(2))  ; 
  10 :: not atom(hasOilyLevel(1))  ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: not atom(hasPriceLevel(2))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasPrice(1))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasOiliness(0)) ; 
  5 :: not atom(hasOilyLevel(0))  ; 
  10 :: atom(hasPrice(1)) ; 
  12 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasPrice(1))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  12 :: atom(hasOiliness(0)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  10 :: atom(hasPrice(1)) ; 
  12 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasPrice(1))  ; 
  8 :: not atom(hasPriceLevel(1))  ; 
  4 :: atom(hasOiliness(1)) ; 
  12 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  8 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPriceLevel(1))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  5 :: not atom(hasOilyLevel(1))  ; 
  11 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: not atom(hasMinorGrp(0))  ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasPriceLevel(1))  ; 
  9 :: not atom(hasOilyLevel(1))  ; 
  11 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasOilyLevel(1)) ; 
  2 :: not atom(hasPrice(1))  ; 
  12 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  12 :: not atom(hasMinorGrp(1))  ; 
  6 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasPriceLevel(1))  ; 
  9 :: atom(hasOilyLevel(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasPriceLevel(1))  ; 
  3 :: not atom(hasPriceLevel(2))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  7 :: not atom(hasMinorGrp(1))  
}.
