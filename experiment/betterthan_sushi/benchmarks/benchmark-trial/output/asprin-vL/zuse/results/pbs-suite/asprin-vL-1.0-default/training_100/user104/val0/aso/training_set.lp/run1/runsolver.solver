asprin_vL version 1.0
Reading from stdin
-:347:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:372:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:453:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:727:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:904:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1105:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1109:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1109:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1115:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1214:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1240:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1360:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1394:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1416:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:264:1-16: info: no atoms over signature occur in program:
  output/3

-:256:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:257:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:258:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:259:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:289:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,29) output(2,better,29) output(6,better,29) output(16,better,29) output(20,better,29) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(2,eq,6) output(2,eq,16) output(2,eq,20) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(6,eq,51) output(6,eq,35) output(6,eq,59) output(6,eq,9) output(16,eq,20) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(20,eq,51) output(20,eq,35) output(20,eq,59) output(20,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 40 8
Answer: 2
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,29) output(2,better,29) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(11,worse,6) output(11,worse,20) output(2,worse,6) output(2,worse,20) output(16,worse,20) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(11,eq,2) output(11,eq,16) output(11,eq,51) output(11,eq,35) output(11,eq,59) output(11,eq,9) output(2,eq,16) output(2,eq,51) output(2,eq,35) output(2,eq,59) output(2,eq,9) output(6,eq,20) output(16,eq,51) output(16,eq,35) output(16,eq,59) output(16,eq,9) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 31 8
Answer: 3
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,6),0,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOiliness(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,29) output(11,better,51) output(2,better,6) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,51) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(11,worse,2) output(11,worse,16) output(6,worse,16) output(51,worse,35) output(51,worse,59) output(51,worse,9) output(11,eq,20) output(2,eq,16) output(6,eq,35) output(6,eq,59) output(6,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 27 8
Answer: 4
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOiliness(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,29) output(11,better,51) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(11,worse,2) output(11,worse,6) output(11,worse,16) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(51,worse,35) output(51,worse,59) output(51,worse,9) output(11,eq,20) output(2,eq,6) output(2,eq,16) output(6,eq,16) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 23 8
Answer: 5
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,29) output(6,better,59) output(16,better,29) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,59) output(35,better,59) output(6,worse,20) output(16,worse,20) output(29,worse,51) output(29,worse,35) output(29,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,20) output(2,eq,20) output(6,eq,16) output(6,eq,51) output(6,eq,35) output(6,eq,9) output(16,eq,51) output(16,eq,35) output(16,eq,9) output(51,eq,35) output(51,eq,9) output(35,eq,9)
Optimization: 20 8
Answer: 6
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,6),0,for(atom(hasPrice(0))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,4),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,2) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,35) output(2,better,59) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(2,worse,6) output(2,worse,16) output(2,worse,20) output(29,worse,51) output(29,worse,9) output(35,worse,9) output(59,worse,9) output(11,eq,6) output(11,eq,16) output(11,eq,20) output(2,eq,51) output(2,eq,9) output(6,eq,16) output(6,eq,20) output(16,eq,20) output(51,eq,9) output(35,eq,59)
Optimization: 19 8
Answer: 7
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),0,for(atom(hasPrice(0))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(35,better,59) output(16,worse,20) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(51,worse,35) output(51,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,20) output(2,eq,6) output(2,eq,20) output(6,eq,20) output(16,eq,35) output(16,eq,9) output(51,eq,59) output(35,eq,9)
Optimization: 18 8
Answer: 8
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,35) output(16,better,59) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(51,better,35) output(51,better,59) output(16,worse,20) output(29,worse,51) output(29,worse,9) output(35,worse,9) output(59,worse,9) output(11,eq,2) output(11,eq,6) output(11,eq,20) output(2,eq,6) output(2,eq,20) output(6,eq,20) output(16,eq,51) output(16,eq,9) output(51,eq,9) output(35,eq,59)
Optimization: 17 8
Answer: 9
preference(1,(1,2),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),0,for(atom(hasPrice(0))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,4),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasOftenSold(1))),()) preference(1,(1,4),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,5),3,for(atom(hasPrice(1))),()) preference(1,(1,6),3,for(atom(hasPrice(1))),()) preference(1,(1,7),3,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),4,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),4,for(atom(hasOftenSold(0))),()) preference(1,(1,8),4,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(6,worse,20) output(16,worse,20) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(29,worse,9) output(11,eq,2) output(11,eq,20) output(2,eq,20) output(6,eq,16) output(51,eq,35) output(51,eq,59) output(51,eq,9) output(35,eq,59) output(35,eq,9) output(59,eq,9)
Optimization: 16 8
Answer: 10
preference(1,(1,1),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),0,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),0,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),0,for(atom(hasOftenSold(1))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,8),3,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),4,for(atom(hasOiliness(0))),()) preference(1,(1,8),4,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,6) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,59) output(2,better,9) output(6,better,29) output(6,better,51) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,59) output(20,better,9) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(6,worse,16) output(6,worse,35) output(20,worse,35) output(29,worse,51) output(29,worse,35) output(29,worse,59) output(51,worse,35) output(11,eq,2) output(11,eq,16) output(11,eq,35) output(2,eq,16) output(2,eq,35) output(6,eq,20) output(16,eq,35) output(51,eq,59)
Optimization: 16 7
Answer: 11
preference(1,(1,3),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,4),0,for(atom(hasOiliness(1))),()) preference(1,(1,5),0,for(atom(hasPrice(1))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(35,better,9) output(59,better,9) output(11,worse,6) output(11,worse,20) output(2,worse,6) output(2,worse,20) output(29,worse,35) output(29,worse,59) output(51,worse,35) output(51,worse,59) output(51,worse,9) output(11,eq,2) output(35,eq,59)
Optimization: 15 5
Answer: 12
preference(1,(1,3),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),0,for(atom(hasPrice(1))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,aso) output(11,better,2) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(35,better,9) output(59,better,9) output(11,worse,6) output(11,worse,20) output(2,worse,6) output(2,worse,20) output(51,worse,35) output(51,worse,59) output(51,eq,9) output(35,eq,59)
Optimization: 12 5
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),0,for(atom(hasPrice(1))),()) preference(1,(1,7),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,3),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,5),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,7),3,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,9) output(35,better,9) output(59,better,9) output(11,worse,6) output(11,worse,20) output(2,worse,6) output(2,worse,20) output(16,worse,20) output(11,eq,2) output(6,eq,20) output(16,eq,29) output(35,eq,59)
Optimization: 11 4
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,5),0,for(atom(hasPrice(1))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),2,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,7),3,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,7),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),3,for(atom(hasPriceLevel(0))),()) preference(1,aso) output(11,better,16) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,16) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,9) output(35,better,9) output(59,better,9) output(11,worse,6) output(11,worse,20) output(2,worse,6) output(2,worse,20) output(16,worse,20) output(11,eq,2) output(16,eq,29) output(35,eq,59)
Optimization: 10 4
Progression : [ 1;10] (Error: 9)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,8),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,7),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),2,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,8),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),3,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),3,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,5),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),4,for(atom(hasOiliness(0))),()) preference(1,(1,2),4,for(atom(hasOiliness(1))),()) preference(1,(1,4),4,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),4,for(atom(hasPrice(0))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(1))),()) preference(1,aso) output(11,better,2) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,9) output(59,better,9) output(2,worse,6) output(2,worse,20) output(6,eq,20) output(35,eq,59)
Optimization: 8 8
Answer: 16
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),0,for(atom(hasOiliness(0))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),0,for(atom(hasOftenSold(1))),()) preference(1,(1,7),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),3,for(atom(hasPrice(0))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,(1,3),4,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,2) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(11,worse,16) output(2,worse,6) output(2,worse,16) output(2,worse,20) output(6,worse,16)
Optimization: 7 8
Answer: 17
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),0,for(atom(hasOiliness(0))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),0,for(atom(hasOftenSold(1))),()) preference(1,(1,7),0,for(atom(hasOiliness(0))),()) preference(1,(1,1),1,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,3),2,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,1),4,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,2),4,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),4,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,5),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,(1,3),4,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,2) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,20) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,20) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(11,worse,16) output(2,worse,6) output(2,worse,16) output(2,worse,20) output(6,worse,16)
Optimization: 6 8
Progression : [2;6] (Error: 2)
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),0,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,8),0,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),()) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,5),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,1),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),3,for(atom(hasOftenSold(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),3,for(atom(hasOilyLevel(0))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,6),4,for(atom(hasPriceLevel(2))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2) output(6,eq,20)
Optimization: 5 5
Answer: 19
preference(1,(1,1),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),0,for(atom(hasOiliness(0))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),0,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,3),4,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,5),4,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),4,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2) output(6,eq,20) output(16,eq,29)
Optimization: 4 8
Answer: 20
preference(1,(1,1),0,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),0,for(atom(hasOiliness(0))),()) preference(1,(1,4),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),0,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),0,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),2,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,1),3,for(neg(atom(hasOftenSold(1)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,6),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,7),3,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),3,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,1),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,3),4,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,5),4,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,6),4,for(neg(atom(hasOiliness(1)))),()) preference(1,(1,7),4,for(neg(atom(hasOilyLevel(1)))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2) output(6,eq,20)
Optimization: 3 8
Progression : [3;3] (Error: 0)
Progression : 3 [1;8] (Error: 7)
Answer: 21
preference(1,(1,2),0,for(neg(atom(hasMinorGrp(3)))),()) preference(1,(1,3),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),0,for(atom(hasOiliness(0))),()) preference(1,(1,5),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),0,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),0,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(neg(atom(hasOilyLevel(2)))),()) preference(1,(1,5),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPriceLevel(0)))),()) preference(1,(1,5),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,7),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(hasOiliness(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),4,for(atom(hasMinorGrp(0))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2) output(6,eq,20)
Optimization: 3 6
Answer: 22
preference(1,(1,2),0,for(atom(hasOiliness(0))),()) preference(1,(1,6),0,for(atom(hasPrice(0))),()) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPriceLevel(1)))),()) preference(1,(1,6),3,for(neg(atom(hasOiliness(0)))),()) preference(1,(1,7),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,6),4,for(neg(atom(hasPriceLevel(2)))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),3,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(11,better,6) output(11,better,16) output(11,better,20) output(11,better,29) output(11,better,51) output(11,better,35) output(11,better,59) output(11,better,9) output(2,better,6) output(2,better,16) output(2,better,20) output(2,better,29) output(2,better,51) output(2,better,35) output(2,better,59) output(2,better,9) output(6,better,16) output(6,better,29) output(6,better,51) output(6,better,35) output(6,better,59) output(6,better,9) output(16,better,29) output(16,better,51) output(16,better,35) output(16,better,59) output(16,better,9) output(20,better,29) output(20,better,51) output(20,better,35) output(20,better,59) output(20,better,9) output(29,better,51) output(29,better,35) output(29,better,59) output(29,better,9) output(51,better,35) output(51,better,59) output(51,better,9) output(35,better,59) output(35,better,9) output(59,better,9) output(16,worse,20) output(11,eq,2) output(6,eq,20)
Optimization: 3 3
Progression : 3 [2;3] (Error: 0.5)
OPTIMUM FOUND

Models       : 22
  Optimum    : yes
Optimization : 3 3
Calls        : 1
Time         : 47.036s (Solving: 41.06s 1st Model: 0.18s Unsat: 31.19s)
CPU Time     : 169.956s
Threads      : 4        (Winner: 1)

Choices      : 533679   (Domain: 15739)
Conflicts    : 140946   (Analyzed: 140939)
Restarts     : 197      (Average: 715.43 Last: 6652)
Model-Level  : 278.5   
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 230149   (Deleted: 145025)
  Binary     : 5549     (Ratio:   2.41%)
  Ternary    : 12889    (Ratio:   5.60%)
  Conflict   : 140938   (Average Length:   91.5 Ratio:  61.24%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 89211    (Average Length:   35.2 Ratio:  38.76%) 
  Distributed: 29936    (Ratio:  21.24% Average LBD: 3.22) 
  Integrated : 89808    (Ratio: 300.00% Unit: 506 Average Jumps: 60.67)
Backjumps    : 140939   (Average:  3.40 Max: 979 Sum: 478741)
  Executed   : 140915   (Average:  3.39 Max: 979 Sum: 478386 Ratio:  99.93%)
  Bounded    : 24       (Average: 14.79 Max:  43 Sum:    355 Ratio:   0.07%)

Rules        : 2186280 
  Choice     : 41      
  Minimize   : 2       
Atoms        : 659557  
Bodies       : 758545  
  Count      : 2200    
Equivalences : 1993978  (Atom=Atom: 574031 Body=Body: 615311 Other: 804636)
Tight        : Yes
Variables    : 85583    (Eliminated:    0 Frozen: 65023)
Constraints  : 1676557  (Binary:  95.0% Ternary:   4.1% Other:   0.9%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  || not atom(hasMinorGrp(2))  ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || not atom(hasOilyLevel(2))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  || not atom(hasMinorGrp(2))  ; 
  not atom(hasPrice(0))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(1)) >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || atom(hasMinorGrp(2)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasOftenSold(0))  >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  || not atom(hasMinorGrp(1))  ; 
  not atom(hasPrice(0))  >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || atom(hasPrice(0)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  || not atom(hasMinorGrp(0))  ; 
  atom(hasPriceLevel(1)) >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || atom(hasPrice(0)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  || not atom(hasPriceLevel(2))  ; 
  atom(hasPriceLevel(2)) >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(3))  >> atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(0)) >> atom(hasPrice(1)) >> not atom(hasPriceLevel(0))  || atom(hasPrice(0)) ; 
  not atom(hasMinorGrp(3))  >> atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasOftenSold(1)) >> not atom(hasOftenSold(1))  ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOilyLevel(0))  ; 
  atom(hasPriceLevel(0)) >> not atom(hasMinorGrp(3))  >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) >> atom(hasOilyLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOilyLevel(0)) >> not atom(hasMinorGrp(3))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasOilyLevel(0)) || atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) || atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) || atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) || atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(2)) || atom(hasOftenSold(1)) ; 
  not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  >> not atom(hasMinorGrp(2))  >> atom(hasOiliness(0)) || atom(hasMinorGrp(3)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(3))  || not atom(hasPriceLevel(2))  ; 
  atom(hasPrice(1)) >> not atom(hasPriceLevel(2))  || atom(hasOiliness(1)) ; 
  not atom(hasPrice(1))  >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  || atom(hasPrice(1)) ; 
  atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(2))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(3))  || not atom(hasPriceLevel(2))  ; 
  atom(hasPrice(1)) >> not atom(hasPriceLevel(2))  || not atom(hasMinorGrp(3))  ; 
  not atom(hasPrice(1))  >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  || atom(hasPrice(1)) ; 
  atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(2))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  || not atom(hasPrice(1))  ; 
  atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(1))  >> not atom(hasMinorGrp(3))  || not atom(hasPriceLevel(2))  ; 
  not atom(hasPrice(1))  >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  || atom(hasPrice(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) >> atom(hasPriceLevel(0)) || not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasMinorGrp(1))  >> not atom(hasPriceLevel(2))  || not atom(hasPrice(1))  ; 
  atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(1))  >> atom(hasPriceLevel(0)) || not atom(hasPriceLevel(2))  ; 
  not atom(hasPrice(1))  >> atom(hasPrice(0)) >> not atom(hasOftenSold(1))  || atom(hasPrice(1)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> not atom(hasOiliness(0))  >> not atom(hasPriceLevel(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(2)) >> not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) || not atom(hasMinorGrp(0))  ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(0)) >> not atom(hasPriceLevel(0))  >> atom(hasOiliness(1)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasPrice(0))  >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(1)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasPriceLevel(1))  >> not atom(hasPriceLevel(0))  >> not atom(hasMinorGrp(0))  >> not atom(hasMinorGrp(2))  || atom(hasMinorGrp(1)) ; 
  not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(0)) >> not atom(hasPrice(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(0)) >> atom(hasMinorGrp(3)) >> atom(hasPriceLevel(2)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> atom(hasMinorGrp(3)) >> atom(hasPrice(0)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(0)) >> not atom(hasOilyLevel(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) >> not atom(hasMinorGrp(0))  || not atom(hasPrice(1))  ; 
  not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(2)) >> atom(hasMinorGrp(3)) || atom(hasOiliness(0)) ; 
  not atom(hasOiliness(0))  >> not atom(hasPrice(1))  >> not atom(hasPriceLevel(0))  >> not atom(hasOftenSold(1))  || not atom(hasMinorGrp(0))  ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  || atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  || not atom(hasMinorGrp(1))  ; 
  not atom(hasMinorGrp(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> atom(hasPrice(0)) >> atom(hasMinorGrp(1)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) >> not atom(hasMinorGrp(0))  || not atom(hasPrice(1))  ; 
  not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(2)) >> atom(hasMinorGrp(3)) || atom(hasOiliness(0)) ; 
  not atom(hasOiliness(0))  >> not atom(hasPrice(1))  >> not atom(hasPriceLevel(0))  >> not atom(hasOftenSold(1))  || not atom(hasMinorGrp(0))  ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(1))  >> not atom(hasOilyLevel(0))  || atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(0))  || atom(hasOiliness(0)) ; 
  not atom(hasMinorGrp(0))  >> atom(hasMinorGrp(1)) >> not atom(hasOilyLevel(0))  >> not atom(hasPriceLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> atom(hasPrice(0)) >> atom(hasMinorGrp(1)) ; 
  not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrice(1)) >> atom(hasOiliness(1)) >> not atom(hasMinorGrp(1))  >> atom(hasPrice(0)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOftenSold(0))  >> atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) || not atom(hasOftenSold(1))  ; 
  not atom(hasMinorGrp(1))  >> atom(hasOilyLevel(2)) >> atom(hasOilyLevel(0)) || not atom(hasOilyLevel(2))  ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  ; 
  atom(hasOilyLevel(2)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(1))  >> atom(hasOiliness(1)) >> not atom(hasOftenSold(1))  >> not atom(hasMinorGrp(2))  || atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOiliness(0))  || atom(hasOiliness(0)) ; 
  not atom(hasOiliness(0))  >> not atom(hasPrice(1))  >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(0))  ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(0)) >> not atom(hasOiliness(1))  >> not atom(hasOilyLevel(0))  || not atom(hasPriceLevel(2))  ; 
  not atom(hasOilyLevel(2))  >> atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(0))  >> atom(hasMinorGrp(1)) || not atom(hasMinorGrp(0))  ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasOilyLevel(1))  || atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(0)) >> not atom(hasMinorGrp(3))  || not atom(hasPriceLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPriceLevel(1))  >> atom(hasOiliness(1)) >> not atom(hasOftenSold(1))  >> not atom(hasMinorGrp(2))  || atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) >> not atom(hasOiliness(0))  || atom(hasOiliness(0)) ; 
  not atom(hasOiliness(0))  >> not atom(hasPrice(1))  >> not atom(hasPriceLevel(0))  || not atom(hasMinorGrp(0))  ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) >> not atom(hasOilyLevel(2))  >> not atom(hasOiliness(1))  || not atom(hasPriceLevel(2))  ; 
  not atom(hasOilyLevel(1))  >> atom(hasPriceLevel(2)) >> not atom(hasOilyLevel(0))  >> not atom(hasOiliness(1))  || not atom(hasMinorGrp(0))  ; 
  not atom(hasOftenSold(1))  >> not atom(hasPriceLevel(0))  >> not atom(hasOilyLevel(0))  >> not atom(hasOilyLevel(1))  || atom(hasOilyLevel(1)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(0)) >> not atom(hasMinorGrp(3))  || not atom(hasPriceLevel(0))  ; 
  not atom(hasPriceLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrice(1)) >> not atom(hasOiliness(0))  >> not atom(hasMinorGrp(0))  || not atom(hasMinorGrp(3))  ; 
  not atom(hasOilyLevel(2))  >> atom(hasOiliness(0)) >> not atom(hasPriceLevel(0))  >> atom(hasMinorGrp(0)) || atom(hasMinorGrp(3)) ; 
  atom(hasPriceLevel(2)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  || atom(hasOilyLevel(0)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  >> not atom(hasPrice(0))  || atom(hasMinorGrp(3)) ; 
  not atom(hasPrice(0))  >> not atom(hasMinorGrp(0))  || atom(hasOilyLevel(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMinorGrp(3)) >> not atom(hasPriceLevel(1))  >> atom(hasMinorGrp(1)) || atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(2)) >> not atom(hasOiliness(0))  >> not atom(hasPriceLevel(2))  || atom(hasPrice(0)) ; 
  not atom(hasOilyLevel(0))  >> atom(hasPriceLevel(2)) >> not atom(hasMinorGrp(0))  
}.
