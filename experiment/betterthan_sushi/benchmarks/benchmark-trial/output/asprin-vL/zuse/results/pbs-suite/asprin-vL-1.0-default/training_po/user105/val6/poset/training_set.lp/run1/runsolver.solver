asprin_vL version 1.0
Reading from stdin
-:243:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:253:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:268:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:349:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:623:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:800:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:929:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1001:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1005:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1005:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1011:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1110:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1136:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1256:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1290:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1312:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:160:1-16: info: no atoms over signature occur in program:
  output/3

-:152:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:153:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:154:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(4,eq,0) output(4,eq,3) output(4,eq,2) output(4,eq,8) output(4,eq,5) output(4,eq,1) output(4,eq,9) output(4,eq,7) output(0,eq,3) output(0,eq,2) output(0,eq,8) output(0,eq,5) output(0,eq,1) output(0,eq,9) output(0,eq,7) output(3,eq,2) output(3,eq,8) output(3,eq,5) output(3,eq,1) output(3,eq,9) output(3,eq,7) output(2,eq,8) output(2,eq,5) output(2,eq,1) output(2,eq,9) output(2,eq,7) output(8,eq,5) output(8,eq,1) output(8,eq,9) output(8,eq,7) output(5,eq,1) output(5,eq,9) output(5,eq,7) output(1,eq,9) output(1,eq,7) output(9,eq,7)
Optimization: 36 0
Answer: 2
preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(isRoe(1))),()) preference(1,poset) output(4,better,0) output(4,better,5) output(4,better,1) output(4,better,7) output(2,better,5) output(2,better,1) output(2,better,7) output(9,better,7) output(8,better,5) output(8,better,7) output(3,better,1) output(3,better,7) output(8,better,1) output(3,better,5) output(0,worse,2) output(5,worse,9) output(1,worse,9) output(0,worse,8) output(0,worse,3) output(0,worse,9) output(4,eq,3) output(4,eq,2) output(4,eq,8) output(4,eq,9) output(0,eq,5) output(0,eq,1) output(0,eq,7) output(3,eq,2) output(3,eq,8) output(3,eq,9) output(2,eq,8) output(2,eq,9) output(8,eq,9) output(5,eq,1) output(5,eq,7) output(1,eq,7)
Optimization: 22 1
Answer: 3
preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,0) output(4,better,3) output(4,better,2) output(4,better,8) output(4,better,5) output(4,better,1) output(4,better,9) output(4,better,7) output(2,better,5) output(2,better,1) output(2,better,7) output(9,better,7) output(8,better,5) output(8,better,7) output(3,better,1) output(3,better,7) output(8,better,1) output(3,better,5) output(0,worse,2) output(5,worse,9) output(1,worse,9) output(0,worse,8) output(0,worse,3) output(0,worse,9) output(0,eq,5) output(0,eq,1) output(0,eq,7) output(3,eq,2) output(3,eq,8) output(3,eq,9) output(2,eq,8) output(2,eq,9) output(8,eq,9) output(5,eq,1) output(5,eq,7) output(1,eq,7)
Optimization: 18 1
Answer: 4
preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,0) output(4,better,5) output(4,better,1) output(4,better,7) output(5,better,1) output(5,better,7) output(2,better,5) output(2,better,1) output(2,better,7) output(0,better,1) output(0,better,7) output(9,better,7) output(8,better,5) output(8,better,7) output(3,better,2) output(3,better,8) output(3,better,1) output(3,better,7) output(8,better,1) output(3,better,5) output(0,worse,2) output(4,worse,9) output(2,worse,9) output(8,worse,9) output(5,worse,9) output(1,worse,9) output(0,worse,8) output(4,worse,3) output(0,worse,3) output(0,worse,9) output(4,eq,2) output(4,eq,8) output(0,eq,5) output(3,eq,9) output(2,eq,8) output(1,eq,7)
Optimization: 16 1
Answer: 5
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,1),2,for(atom(isUrchin(1))),()) preference(1,(1,7),2,for(atom(isChewy(1))),()) preference(1,poset) output(4,better,0) output(4,better,2) output(4,better,8) output(4,better,5) output(4,better,1) output(4,better,9) output(4,better,7) output(5,better,1) output(5,better,7) output(2,better,5) output(2,better,1) output(2,better,7) output(9,better,7) output(8,better,5) output(8,better,7) output(3,better,2) output(3,better,8) output(3,better,1) output(3,better,9) output(3,better,7) output(8,better,1) output(3,better,5) output(0,worse,5) output(0,worse,2) output(5,worse,9) output(1,worse,9) output(0,worse,8) output(0,worse,3) output(0,worse,9) output(0,eq,1) output(0,eq,7) output(2,eq,8) output(2,eq,9) output(8,eq,9) output(1,eq,7) output(4,unc,3)
Optimization: 14 2
Answer: 6
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(isUrchin(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,0) output(4,better,3) output(4,better,2) output(4,better,8) output(4,better,5) output(4,better,1) output(4,better,9) output(4,better,7) output(5,better,1) output(5,better,7) output(2,better,1) output(2,better,7) output(0,better,1) output(0,better,7) output(9,better,7) output(8,better,5) output(8,better,9) output(8,better,7) output(3,better,2) output(3,better,1) output(3,better,7) output(8,better,1) output(3,better,5) output(2,worse,9) output(5,worse,9) output(1,worse,9) output(0,worse,8) output(3,worse,8) output(2,worse,8) output(0,worse,3) output(0,worse,9) output(0,eq,5) output(3,eq,9) output(1,eq,7) output(0,unc,2) output(2,unc,5)
Optimization: 13 2
Answer: 7
preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(isShrimp(1))),()) preference(1,(1,3),1,for(atom(isUrchin(1))),()) preference(1,(1,4),1,for(atom(isShrimp(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),1,for(atom(isMaguro(1))),()) preference(1,(1,7),1,for(atom(isCreamy(1))),()) preference(1,(1,8),1,for(atom(isOctopus(1))),()) preference(1,(1,9),1,for(atom(isUrchin(1))),()) preference(1,(1,10),1,for(atom(isRaw(0))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(isChewy(1))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(isRaw(0))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(isShrimp(1))),()) preference(1,(1,10),2,for(atom(isRaw(1))),()) preference(1,(1,11),2,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isMaguro(1))),()) preference(1,poset) output(4,better,0) output(4,better,3) output(4,better,2) output(4,better,8) output(4,better,1) output(4,better,9) output(4,better,7) output(5,better,1) output(5,better,7) output(2,better,8) output(2,better,1) output(2,better,7) output(0,better,3) output(0,better,2) output(0,better,8) output(0,better,1) output(0,better,7) output(9,better,7) output(1,better,7) output(3,better,2) output(3,better,8) output(3,better,1) output(3,better,7) output(0,better,9) output(3,worse,5) output(2,worse,5) output(8,worse,5) output(3,worse,9) output(2,worse,9) output(8,worse,9) output(1,worse,9) output(8,worse,1) output(4,unc,5) output(0,unc,5) output(8,unc,7) output(5,unc,9)
Optimization: 12 12
Answer: 8
preference(1,(1,1),1,for(atom(isShrimp(1))),()) preference(1,(1,2),1,for(atom(hasPrice(1))),()) preference(1,(1,3),1,for(atom(isUrchin(1))),()) preference(1,(1,4),1,for(atom(isOctopus(1))),()) preference(1,(1,5),1,for(atom(isRoe(1))),()) preference(1,(1,6),1,for(atom(isUrchin(1))),()) preference(1,(1,7),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,10),1,for(atom(isChewy(1))),()) preference(1,(1,11),1,for(atom(isChewy(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,3),2,for(atom(isMaguro(1))),()) preference(1,(1,4),2,for(atom(isRaw(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(isOctopus(1))),()) preference(1,(1,8),2,for(atom(isChewy(1))),()) preference(1,(1,9),2,for(atom(isShrimp(1))),()) preference(1,(1,10),2,for(atom(hasPrice(1))),()) preference(1,(1,11),2,for(atom(isRoe(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(4,better,0) output(4,better,3) output(4,better,2) output(4,better,8) output(4,better,5) output(4,better,1) output(4,better,9) output(4,better,7) output(5,better,1) output(5,better,9) output(5,better,7) output(2,better,1) output(2,better,9) output(2,better,7) output(0,better,1) output(0,better,7) output(9,better,7) output(8,better,9) output(8,better,7) output(1,better,7) output(3,better,2) output(3,better,8) output(3,better,1) output(3,better,9) output(3,better,7) output(8,better,1) output(0,worse,5) output(3,worse,5) output(2,worse,5) output(8,worse,5) output(0,worse,2) output(1,worse,9) output(0,worse,8) output(2,worse,8) output(0,worse,3) output(0,worse,9)
Optimization: 10 12
Answer: 9
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isUrchin(1))),()) preference(1,(1,3),1,for(atom(isChewy(1))),()) preference(1,(1,4),1,for(atom(isRaw(1))),()) preference(1,(1,5),1,for(atom(isMaguro(1))),()) preference(1,(1,6),1,for(atom(isShrimp(1))),()) preference(1,(1,7),1,for(atom(isUrchin(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,11),1,for(atom(isRaw(1))),()) preference(1,(1,12),1,for(atom(isFattyFish(1))),()) preference(1,(1,1),2,for(atom(isFattyFish(1))),()) preference(1,(1,2),2,for(atom(isShrimp(1))),()) preference(1,(1,3),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(isChewy(1))),()) preference(1,(1,5),2,for(atom(isShrimp(1))),()) preference(1,(1,6),2,for(atom(isChewy(1))),()) preference(1,(1,7),2,for(atom(isMaguro(1))),()) preference(1,(1,9),2,for(atom(isRaw(1))),()) preference(1,(1,11),2,for(atom(isShrimp(1))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,poset) output(4,better,0) output(4,better,3) output(4,better,2) output(4,better,8) output(4,better,5) output(4,better,1) output(4,better,9) output(4,better,7) output(5,better,1) output(5,better,7) output(2,better,8) output(2,better,5) output(2,better,1) output(2,better,9) output(2,better,7) output(0,better,5) output(0,better,1) output(0,better,7) output(9,better,7) output(8,better,5) output(8,better,7) output(1,better,7) output(3,better,8) output(3,better,1) output(3,better,7) output(8,better,1) output(3,better,5) output(0,worse,2) output(3,worse,2) output(3,worse,9) output(8,worse,9) output(5,worse,9) output(1,worse,9) output(0,worse,8) output(0,worse,3) output(0,worse,9)
Optimization: 9 10
SATISFIABLE

Models       : 9+
  Optimum    : unknown
Optimization : 9 10
Calls        : 1
Time         : 1123.467s (Solving: 1117.89s 1st Model: 0.98s Unsat: 0.00s)
CPU Time     : 4476.168s
Threads      : 4        (Winner: 0)

Choices      : 11697261 (Domain: 7733)
Conflicts    : 461156   (Analyzed: 461156)
Restarts     : 544      (Average: 847.71 Last: 21919)
Model-Level  : 6408.4  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 40031163 (Deleted: 39807338)
  Binary     : 6218     (Ratio:   0.02%)
  Ternary    : 111438   (Ratio:   0.28%)
  Conflict   : 461156   (Average Length:  868.9 Ratio:   1.15%) 
  Loop       : 39435687 (Average Length:  166.6 Ratio:  98.51%) 
  Other      : 134320   (Average Length:    3.7 Ratio:   0.34%) 
  Distributed: 45206    (Ratio:   0.11% Average LBD: 2.85) 
  Integrated : 135618   (Ratio: 300.00% Unit: 339 Average Jumps: 936.86)
Backjumps    : 461156   (Average: 21.39 Max: 193879 Sum: 9865369)
  Executed   : 461123   (Average: 21.39 Max: 193879 Sum: 9865304 Ratio: 100.00%)
  Bounded    : 33       (Average:  1.97 Max:   2 Sum:     65 Ratio:   0.00%)

Rules        : 1110939 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 24205   
Bodies       : 820551  
  Count      : 48      
Equivalences : 27350    (Atom=Atom: 4599 Body=Body: 6575 Other: 16176)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 774656 Gammas: 0)
Variables    : 785732   (Eliminated:    0 Frozen: 777350)
Constraints  : 4605295  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isRoe(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) ; 
  atom(isRaw(1)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(isChewy(1)) ; 
  atom(isShrimp(1)) >> atom(isMaguro(1)) ; 
  atom(isUrchin(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isShrimp(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isMaguro(1)) >> atom(isRaw(0)) ; 
  atom(isCreamy(1)) >> atom(isRaw(1)) ; 
  atom(isOctopus(1)) >> atom(hasPrice(0)) ; 
  atom(isUrchin(1)) >> atom(isShrimp(1)) ; 
  atom(isRaw(0)) >> atom(isRaw(1)) ; 
  atom(isMaguro(1)) >> atom(isCreamy(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isShrimp(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(isMaguro(1)) ; 
  atom(isUrchin(1)) >> atom(isMaguro(1)) ; 
  atom(isOctopus(1)) >> atom(isRaw(1)) ; 
  atom(isRoe(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isUrchin(1)) >> atom(isRaw(1)) ; 
  atom(isUrchin(1)) >> atom(isOctopus(1)) ; 
  atom(isUrchin(1)) >> atom(isChewy(1)) ; 
  atom(isMaguro(1)) >> atom(isShrimp(1)) ; 
  atom(isChewy(1)) >> atom(hasPrice(1)) ; 
  atom(isChewy(1)) >> atom(isRoe(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(isFattyFish(1)) ; 
  atom(isUrchin(1)) >> atom(isShrimp(1)) ; 
  atom(isChewy(1)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(isChewy(1)) ; 
  atom(isMaguro(1)) >> atom(isShrimp(1)) ; 
  atom(isShrimp(1)) >> atom(isChewy(1)) ; 
  atom(isUrchin(1)) >> atom(isMaguro(1)) ; 
  atom(isMaguro(1)) >> atom(isRaw(1)) ; 
  atom(isRaw(1)) >> atom(isShrimp(1)) ; 
  atom(isFattyFish(1)) >> atom(hasPrice(1)) 
}.
Time limit reached
