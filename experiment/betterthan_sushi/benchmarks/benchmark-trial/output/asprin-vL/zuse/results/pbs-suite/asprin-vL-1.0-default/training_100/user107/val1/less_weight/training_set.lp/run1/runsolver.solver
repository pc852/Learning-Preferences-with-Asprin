asprin_vL version 1.0
Reading from stdin
-:305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:222:1-16: info: no atoms over signature occur in program:
  output/3

-:214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,3) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,19) output(4,eq,8) output(4,eq,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,78) output(3,eq,19) output(3,eq,8) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,19) output(23,eq,8) output(23,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,19) output(5,eq,8) output(5,eq,59) output(17,eq,78) output(17,eq,19) output(17,eq,8) output(17,eq,59) output(78,eq,19) output(78,eq,8) output(78,eq,59) output(19,eq,8) output(19,eq,59) output(8,eq,59)
Optimization: 36 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),4) preference(1,less(weight)) output(23,better,19) output(23,better,8) output(3,better,19) output(3,better,8) output(5,better,19) output(5,better,8) output(17,better,19) output(17,better,8) output(78,better,19) output(78,better,8) output(8,worse,59) output(19,worse,59) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(4,worse,59) output(4,eq,19) output(4,eq,8) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,78) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,59) output(17,eq,78) output(17,eq,59) output(78,eq,59) output(19,eq,8)
Optimization: 26 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,less(weight)) output(23,better,78) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,78) output(3,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(4,better,78) output(4,better,59) output(78,worse,19) output(78,worse,8) output(4,eq,3) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,19) output(4,eq,8) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,19) output(3,eq,8) output(23,eq,5) output(23,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(5,eq,19) output(5,eq,8) output(17,eq,19) output(17,eq,8) output(78,eq,59) output(19,eq,8)
Optimization: 24 1
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),11) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(3,better,23) output(3,better,78) output(3,better,19) output(3,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,78) output(4,better,19) output(4,better,8) output(23,worse,5) output(23,worse,17) output(23,worse,59) output(8,worse,59) output(19,worse,59) output(3,worse,17) output(3,worse,59) output(5,worse,17) output(5,worse,59) output(17,worse,59) output(4,worse,59) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(4,eq,17) output(3,eq,5) output(19,eq,8)
Optimization: 17 7
Answer: 5
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(3,better,23) output(3,better,78) output(3,better,19) output(3,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,78) output(4,better,19) output(4,better,8) output(78,better,19) output(78,better,8) output(23,worse,5) output(23,worse,17) output(23,worse,59) output(8,worse,59) output(19,worse,59) output(3,worse,17) output(3,worse,59) output(5,worse,17) output(5,worse,59) output(17,worse,59) output(4,worse,59) output(78,worse,59) output(4,eq,17) output(3,eq,5) output(19,eq,8)
Optimization: 15 7
Answer: 6
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(3,better,23) output(3,better,78) output(3,better,19) output(3,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(78,better,19) output(78,better,8) output(23,worse,5) output(23,worse,17) output(23,worse,59) output(8,worse,59) output(19,worse,59) output(3,worse,59) output(5,worse,59) output(17,worse,59) output(4,worse,59) output(78,worse,59) output(3,eq,5) output(3,eq,17) output(5,eq,17) output(19,eq,8)
Optimization: 14 7
Answer: 7
preference(1,(1,2),1,for(neg(atom(hasOftenSold(1)))),5) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,7),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),7) preference(1,(1,6),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,19) output(4,better,8) output(78,better,19) output(78,better,8) output(23,worse,5) output(8,worse,59) output(19,worse,59) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(4,worse,59) output(78,worse,59) output(3,eq,5) output(23,eq,17) output(19,eq,8)
Optimization: 13 9
Progression : [ 1;13] (Error: 12)
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,2),1,for(neg(atom(hasPriceLevel(2)))),2) preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),5) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),12) preference(1,(1,9),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(3,worse,17) output(5,worse,17) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(4,worse,19) output(4,worse,8) output(3,eq,5) output(19,eq,8)
Optimization: 12 10
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),11) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(3)))),11) preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),11) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOilyLevel(1)))),3) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,1),1,for(atom(hasOftenSold(1))),11) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),11) preference(1,(1,8),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(4,eq,19) output(4,eq,8) output(3,eq,5) output(23,eq,17) output(19,eq,8)
Optimization: 11 10
Answer: 10
preference(1,(1,3),1,for(neg(atom(hasOftenSold(1)))),8) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(0)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(4,eq,19) output(4,eq,8) output(3,eq,5) output(19,eq,8)
Optimization: 10 10
Answer: 11
preference(1,(1,6),1,for(neg(atom(hasOilyLevel(1)))),4) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),9) preference(1,(1,3),1,for(atom(hasOftenSold(0))),10) preference(1,(1,4),1,for(atom(hasPriceLevel(2))),3) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),5) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,59) output(23,worse,5) output(23,worse,19) output(23,worse,8) output(17,worse,19) output(17,worse,8) output(78,worse,19) output(78,worse,8) output(3,eq,5) output(19,eq,8)
Optimization: 9 10
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),10) preference(1,(1,3),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,6),1,for(neg(atom(hasOilyLevel(2)))),5) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,8),1,for(neg(atom(hasPriceLevel(1)))),8) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,9),1,for(atom(hasPriceLevel(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(23,better,78) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,59) output(23,worse,5) output(23,worse,17) output(23,worse,19) output(23,worse,8) output(78,worse,19) output(78,worse,8) output(3,eq,5) output(19,eq,8)
Optimization: 8 10
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(2)))),5) preference(1,(1,5),1,for(neg(atom(hasPriceLevel(2)))),4) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(3)))),11) preference(1,(1,8),1,for(neg(atom(hasOftenSold(1)))),12) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),7) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),3) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),9) preference(1,(1,6),1,for(atom(hasOilyLevel(0))),9) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(23,eq,5) output(23,eq,17) output(5,eq,17) output(19,eq,8)
Optimization: 7 9
Answer: 14
preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),8) preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,1),1,for(atom(hasOftenSold(1))),9) preference(1,(1,2),1,for(atom(hasOiliness(0))),9) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),11) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,10),1,for(atom(hasOftenSold(0))),10) preference(1,less(weight)) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(4,eq,23) output(3,eq,5) output(3,eq,17) output(5,eq,17) output(19,eq,8)
Optimization: 6 10
Answer: 15
preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),8) preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,1),1,for(atom(hasOftenSold(1))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasOilyLevel(0))),11) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,10),1,for(atom(hasOftenSold(0))),10) preference(1,less(weight)) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(3,eq,5) output(3,eq,17) output(5,eq,17) output(19,eq,8)
Optimization: 5 10
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(2)))),11) preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),6) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),5) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,9),1,for(atom(hasOilyLevel(1))),1) preference(1,less(weight)) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(23,eq,17) output(19,eq,8)
Optimization: 4 10
Progression : [2;4] (Error: 1)
Progression : [3;4] (Error: 0.333333)
Answer: 17
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,5),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,7),1,for(neg(atom(hasOilyLevel(2)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,9),1,for(neg(atom(hasPriceLevel(2)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,4),1,for(atom(hasOftenSold(0))),11) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 10
Progression : 3 [ 1;10] (Error: 9)
Answer: 18
preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),11) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(2)))),8) preference(1,(1,10),1,for(neg(atom(hasPriceLevel(1)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,7),1,for(atom(hasOilyLevel(2))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 9
Answer: 19
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(1)))),4) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),8) preference(1,(1,2),1,for(atom(hasOilyLevel(2))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 8
Answer: 20
preference(1,(1,1),1,for(neg(atom(hasOilyLevel(1)))),2) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 7
Answer: 21
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,10),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 6
Progression : 3 [2;6] (Error: 2)
Answer: 22
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,2),1,for(neg(atom(hasOilyLevel(2)))),4) preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 5
Answer: 23
preference(1,(1,6),1,for(neg(atom(hasOilyLevel(2)))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasOftenSold(0))),9) preference(1,less(weight)) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(8,better,59) output(19,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 4
SATISFIABLE

Models       : 23+
  Optimum    : unknown
Optimization : 3 4
Bounds       : 3 [2;4]
Calls        : 1
Time         : 889.586s (Solving: 884.47s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 3541.639s
Threads      : 4        (Winner: 0)

Choices      : 16876370 (Domain: 17570)
Conflicts    : 5018224  (Analyzed: 5018219)
Restarts     : 6831     (Average: 734.62 Last: 179226)
Model-Level  : 804.7   
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 5043519  (Deleted: 4779032)
  Binary     : 1614     (Ratio:   0.03%)
  Ternary    : 459      (Ratio:   0.01%)
  Conflict   : 5018218  (Average Length:  708.6 Ratio:  99.50%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 25301    (Average Length:  561.5 Ratio:   0.50%) 
  Distributed: 8439     (Ratio:   0.17% Average LBD: 3.74) 
  Integrated : 25313    (Ratio: 299.95% Unit: 38 Average Jumps: 130.03)
Backjumps    : 5018219  (Average:  2.75 Max: 3133 Sum: 13796272)
  Executed   : 5018205  (Average:  2.75 Max: 3133 Sum: 13796060 Ratio: 100.00%)
  Bounded    : 14       (Average: 15.14 Max:  36 Sum:    212 Ratio:   0.00%)

Rules        : 1304235 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 372539  
Bodies       : 376772  
  Sum        : 216     
  Count      : 10      
Equivalences : 1106912  (Atom=Atom: 356259 Body=Body: 365068 Other: 385585)
Tight        : Yes
Variables    : 15523    (Eliminated:    0 Frozen: 10563)
Constraints  : 963061   (Binary:  98.8% Ternary:   0.5% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  12 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOftenSold(1))  ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  11 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOftenSold(1))  ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  8 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOilyLevel(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOftenSold(1))  ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasOftenSold(1))  ; 
  7 :: atom(hasPriceLevel(2)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  6 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPriceLevel(1)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasMinorGrp(2))  ; 
  2 :: not atom(hasPriceLevel(2))  ; 
  12 :: not atom(hasOftenSold(1))  ; 
  9 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasOiliness(0)) ; 
  12 :: atom(hasPriceLevel(2)) ; 
  5 :: not atom(hasOilyLevel(2))  ; 
  8 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasPrice(1)) ; 
  7 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: atom(hasOftenSold(1)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  11 :: atom(hasOilyLevel(0)) ; 
  11 :: not atom(hasMinorGrp(2))  ; 
  11 :: not atom(hasMinorGrp(3))  ; 
  11 :: not atom(hasOftenSold(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: not atom(hasOilyLevel(1))  ; 
  2 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  4 :: not atom(hasOilyLevel(0))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPriceLevel(1)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasPriceLevel(2)) ; 
  9 :: atom(hasOilyLevel(2)) ; 
  4 :: not atom(hasOilyLevel(1))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  8 :: not atom(hasPriceLevel(1))  ; 
  5 :: atom(hasPriceLevel(1)) ; 
  3 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  10 :: not atom(hasMinorGrp(1))  ; 
  3 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOilyLevel(2)) ; 
  5 :: not atom(hasOilyLevel(2))  ; 
  12 :: not atom(hasOftenSold(1))  ; 
  8 :: not atom(hasPriceLevel(1))  ; 
  10 :: atom(hasPriceLevel(1)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMinorGrp(1))  ; 
  3 :: atom(hasPriceLevel(0)) ; 
  5 :: not atom(hasMinorGrp(2))  ; 
  9 :: atom(hasPriceLevel(1)) ; 
  4 :: not atom(hasPriceLevel(2))  ; 
  9 :: atom(hasOilyLevel(0)) ; 
  11 :: not atom(hasMinorGrp(3))  ; 
  12 :: not atom(hasOftenSold(1))  ; 
  7 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOftenSold(1)) ; 
  9 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasOftenSold(1))  ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  8 :: not atom(hasPrice(0))  ; 
  11 :: atom(hasOilyLevel(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  10 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: not atom(hasOiliness(1))  ; 
  3 :: not atom(hasOftenSold(1))  ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  11 :: atom(hasOilyLevel(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  10 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(hasOilyLevel(2))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  5 :: not atom(hasPrice(0))  ; 
  6 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  5 :: not atom(hasMinorGrp(0))  ; 
  1 :: atom(hasOilyLevel(1)) ; 
  7 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  6 :: not atom(hasMinorGrp(1))  ; 
  11 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  8 :: atom(hasPriceLevel(1)) ; 
  1 :: not atom(hasOilyLevel(2))  ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  4 :: not atom(hasPriceLevel(2))  ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOftenSold(0)) ; 
  11 :: not atom(hasOilyLevel(2))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: not atom(hasMinorGrp(2))  ; 
  4 :: atom(hasOilyLevel(2)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasPriceLevel(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOilyLevel(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasMinorGrp(1))  ; 
  2 :: not atom(hasMinorGrp(0))  ; 
  1 :: atom(hasMinorGrp(1)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasOilyLevel(1))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPriceLevel(1)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  7 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  7 :: not atom(hasOftenSold(1))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOilyLevel(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasMinorGrp(1))  ; 
  4 :: not atom(hasOilyLevel(2))  ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasOilyLevel(2))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOftenSold(0)) 
}.
Time limit reached
