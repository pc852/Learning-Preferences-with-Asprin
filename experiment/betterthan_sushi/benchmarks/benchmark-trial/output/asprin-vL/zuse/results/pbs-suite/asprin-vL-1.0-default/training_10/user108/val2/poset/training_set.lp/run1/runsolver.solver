asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(5,eq,3) output(6,eq,4) preference(1,poset) output(7,eq,5) output(7,eq,0) output(7,eq,1) output(7,eq,6) output(7,eq,8) output(7,eq,9) output(7,eq,4) output(7,eq,3) output(5,eq,0) output(5,eq,1) output(5,eq,6) output(5,eq,8) output(5,eq,9) output(5,eq,4) output(0,eq,1) output(0,eq,6) output(0,eq,8) output(0,eq,9) output(0,eq,4) output(0,eq,3) output(1,eq,6) output(1,eq,8) output(1,eq,9) output(1,eq,4) output(1,eq,3) output(6,eq,8) output(6,eq,9) output(6,eq,3) output(8,eq,9) output(8,eq,4) output(8,eq,3) output(9,eq,4) output(9,eq,3) output(4,eq,3)
Optimization: 36 0
Answer: 2
output(5,eq,3) output(6,eq,4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,worse,5) output(7,worse,0) output(7,worse,9) output(7,worse,3) output(1,worse,9) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(7,eq,1) output(7,eq,6) output(7,eq,8) output(7,eq,4) output(5,eq,0) output(5,eq,9) output(0,eq,9) output(0,eq,3) output(1,eq,6) output(1,eq,8) output(1,eq,4) output(6,eq,8) output(8,eq,4) output(9,eq,3)
Optimization: 27 1
Answer: 3
output(5,eq,3) output(6,eq,4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,3) output(6,better,8) output(6,better,9) output(6,better,3) output(4,better,3) output(5,worse,6) output(5,worse,4) output(0,worse,6) output(0,worse,4) output(1,worse,6) output(1,worse,4) output(8,worse,4) output(9,worse,4) output(7,eq,6) output(7,eq,4) output(5,eq,0) output(5,eq,1) output(5,eq,8) output(5,eq,9) output(0,eq,1) output(0,eq,8) output(0,eq,9) output(0,eq,3) output(1,eq,8) output(1,eq,9) output(1,eq,3) output(8,eq,9) output(8,eq,3) output(9,eq,3)
Optimization: 26 1
Answer: 4
output(5,eq,3) output(6,eq,4) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(5,better,9) output(0,better,9) output(7,worse,1) output(7,worse,8) output(7,worse,5) output(7,worse,0) output(7,worse,9) output(7,worse,3) output(1,worse,9) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(7,worse,6) output(7,worse,4) output(9,worse,3) output(5,eq,0) output(0,eq,3) output(1,eq,6) output(1,eq,8) output(1,eq,4) output(6,eq,8) output(8,eq,4)
Optimization: 25 3
Answer: 5
output(5,eq,3) output(6,eq,4) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(1,better,6) output(1,better,4) output(1,better,3) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,8) output(9,better,3) output(7,better,6) output(7,better,4) output(1,better,8) output(7,worse,1) output(5,worse,1) output(0,worse,1) output(7,worse,9) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(5,worse,9) output(0,worse,9) output(7,eq,5) output(7,eq,0) output(7,eq,3) output(5,eq,0) output(0,eq,3) output(1,eq,9) output(6,eq,8) output(8,eq,4)
Optimization: 21 1
Answer: 6
output(5,eq,3) output(6,eq,4) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasOiliness(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,6) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,8) output(7,better,6) output(7,better,4) output(5,better,9) output(0,better,9) output(1,better,8) output(7,worse,1) output(7,worse,5) output(7,worse,0) output(7,worse,9) output(7,worse,3) output(1,worse,9) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(9,worse,3) output(5,eq,0) output(0,eq,3) output(6,eq,8) output(8,eq,4)
Optimization: 19 3
Answer: 7
output(5,eq,3) output(6,eq,4) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(1,better,6) output(1,better,4) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,3) output(6,better,8) output(7,better,6) output(7,better,4) output(1,better,8) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(8,worse,4) output(5,eq,0) output(5,eq,1) output(5,eq,9) output(0,eq,1) output(0,eq,9) output(0,eq,3) output(1,eq,9) output(1,eq,3) output(9,eq,3)
Optimization: 17 1
Answer: 8
output(5,eq,3) output(6,eq,4) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(1,better,6) output(1,better,9) output(1,better,4) output(8,better,9) output(8,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,6) output(7,better,4) output(5,better,9) output(0,better,9) output(6,worse,8) output(7,worse,5) output(7,worse,0) output(7,worse,3) output(1,worse,3) output(6,worse,3) output(8,worse,3) output(4,worse,3) output(9,worse,3) output(5,eq,0) output(0,eq,3) output(1,eq,8) output(6,eq,9) output(9,eq,4)
Optimization: 16 2
Answer: 9
output(5,eq,3) output(6,eq,4) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(1,better,6) output(1,better,9) output(1,better,4) output(8,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,6) output(7,better,4) output(5,better,9) output(0,better,9) output(1,better,8) output(6,worse,8) output(7,worse,5) output(7,worse,0) output(7,worse,3) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,3) output(4,worse,3) output(9,worse,3) output(5,eq,0) output(0,eq,3) output(8,unc,9)
Optimization: 15 3
Answer: 10
output(5,eq,3) output(6,eq,4) preference(1,(1,2),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasPrice(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOiliness(1))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),1,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,3),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasOiliness(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasOiliness(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(1,better,6) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,3) output(6,better,8) output(7,better,6) output(7,better,4) output(5,better,9) output(0,better,9) output(1,better,8) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(8,worse,4) output(9,worse,3) output(5,eq,0) output(0,eq,3) output(1,eq,9)
Optimization: 13 9
Answer: 11
output(5,eq,3) output(6,eq,4) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(1,better,6) output(1,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,3) output(6,better,8) output(7,better,6) output(7,better,4) output(5,better,9) output(0,better,9) output(1,better,8) output(0,better,3) output(1,worse,9) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,9) output(8,worse,3) output(4,worse,3) output(8,worse,4) output(9,worse,3) output(5,worse,0)
Optimization: 12 7
Answer: 12
output(5,eq,3) output(6,eq,4) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(hasOftenSold(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,6) output(1,better,9) output(1,better,4) output(8,better,9) output(8,better,4) output(5,better,1) output(5,better,6) output(5,better,8) output(5,better,4) output(0,better,1) output(0,better,6) output(0,better,8) output(0,better,4) output(9,better,4) output(7,better,5) output(7,better,0) output(7,better,1) output(7,better,8) output(7,better,9) output(7,better,3) output(7,better,6) output(7,better,4) output(5,better,9) output(0,better,9) output(1,better,8) output(0,better,3) output(6,worse,8) output(1,worse,3) output(6,worse,9) output(6,worse,3) output(8,worse,3) output(4,worse,3) output(9,worse,3) output(5,worse,0)
Optimization: 10 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.031 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 10 10
Calls        : 1
Time         : 1197.919s (Solving: 1193.73s 1st Model: 0.64s Unsat: 0.00s)
CPU Time     : 4778.405s
Threads      : 4        (Winner: 4)

Choices      : 11797082 (Domain: 7658)
Conflicts    : 579986   (Analyzed: 579986)
Restarts     : 752      (Average: 771.26 Last: 36704)
Model-Level  : 3711.8  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 42238316 (Deleted: 42014500)
  Binary     : 8963     (Ratio:   0.02%)
  Ternary    : 134992   (Ratio:   0.32%)
  Conflict   : 579986   (Average Length:  882.7 Ratio:   1.37%) 
  Loop       : 41484255 (Average Length:  135.9 Ratio:  98.21%) 
  Other      : 174075   (Average Length:    3.6 Ratio:   0.41%) 
  Distributed: 58429    (Ratio:   0.14% Average LBD: 2.85) 
  Integrated : 175286   (Ratio: 300.00% Unit: 444 Average Jumps: 769.86)
Backjumps    : 579986   (Average: 17.79 Max: 82769 Sum: 10315365)
  Executed   : 579943   (Average: 17.79 Max: 82769 Sum: 10315284 Ratio: 100.00%)
  Bounded    : 43       (Average:  1.88 Max:   2 Sum:     81 Ratio:   0.00%)

Rules        : 722744  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 22767   
Bodies       : 510059  
  Count      : 40      
Equivalences : 22462    (Atom=Atom: 3962 Body=Body: 5287 Other: 13213)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490500   (Eliminated:    0 Frozen: 483590)
Constraints  : 2821978  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOiliness(1)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(0)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) 
}.
