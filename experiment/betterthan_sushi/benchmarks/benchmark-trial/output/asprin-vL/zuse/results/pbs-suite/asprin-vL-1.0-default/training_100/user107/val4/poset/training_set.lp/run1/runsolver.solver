asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(3,eq,5) output(19,eq,8) preference(1,poset) output(1,eq,3) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,78) output(1,eq,19) output(1,eq,8) output(1,eq,59) output(3,eq,23) output(3,eq,17) output(3,eq,78) output(3,eq,19) output(3,eq,8) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,19) output(23,eq,8) output(23,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,19) output(5,eq,8) output(5,eq,59) output(17,eq,78) output(17,eq,19) output(17,eq,8) output(17,eq,59) output(78,eq,19) output(78,eq,8) output(78,eq,59) output(19,eq,59) output(8,eq,59)
Optimization: 36 0
Answer: 2
output(3,eq,5) output(19,eq,8) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(1,better,78) output(1,better,59) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(3,better,78) output(3,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,3) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,19) output(1,eq,8) output(3,eq,23) output(3,eq,17) output(3,eq,19) output(3,eq,8) output(23,eq,5) output(23,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(5,eq,19) output(5,eq,8) output(17,eq,19) output(17,eq,8)
Optimization: 24 1
Answer: 3
output(3,eq,5) output(19,eq,8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(3,better,78) output(3,better,59) output(5,better,78) output(5,better,59) output(17,better,78) output(17,better,59) output(3,worse,23) output(3,worse,19) output(3,worse,8) output(5,worse,19) output(5,worse,8) output(17,worse,19) output(17,worse,8) output(78,worse,19) output(78,worse,8) output(1,eq,23) output(1,eq,19) output(1,eq,8) output(3,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(78,eq,59)
Optimization: 19 1
Answer: 4
output(3,eq,5) output(19,eq,8) preference(1,(1,8),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,78) output(1,better,59) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(3,better,23) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,worse,19) output(78,worse,8) output(1,worse,3) output(1,worse,5) output(1,worse,17) output(23,worse,5) output(23,worse,17) output(1,eq,23) output(1,eq,19) output(1,eq,8) output(3,eq,17) output(23,eq,19) output(23,eq,8) output(5,eq,17) output(78,eq,59)
Optimization: 17 1
Answer: 5
output(3,eq,5) output(19,eq,8) preference(1,(1,4),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,8),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(23,better,17) output(23,better,59) output(3,better,23) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,better,19) output(23,better,8) output(3,better,17) output(5,better,17) output(1,worse,3) output(1,worse,5) output(1,worse,17) output(23,worse,5) output(1,worse,78) output(17,worse,78) output(1,worse,23) output(1,eq,19) output(1,eq,8) output(1,eq,59) output(23,eq,78) output(19,eq,59) output(8,eq,59)
Optimization: 15 2
Answer: 6
output(3,eq,5) output(19,eq,8) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(23,better,19) output(23,better,8) output(1,better,19) output(1,better,8) output(3,worse,23) output(1,eq,23) output(3,eq,17) output(5,eq,17) output(78,eq,59) output(78,unc,19) output(78,unc,8) output(19,unc,59) output(8,unc,59)
Optimization: 11 2
Answer: 7
output(3,eq,5) output(19,eq,8) preference(1,(1,2),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(23,better,19) output(23,better,8) output(1,better,19) output(1,better,8) output(3,worse,23) output(19,worse,59) output(8,worse,59) output(1,eq,23) output(3,eq,17) output(5,eq,17) output(78,eq,59)
Optimization: 9 3
Answer: 8
output(3,eq,5) output(19,eq,8) preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(0))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),2,for(atom(hasOiliness(1))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,poset) output(1,better,17) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,better,19) output(23,better,8) output(3,better,17) output(5,better,17) output(1,better,19) output(1,better,8) output(3,worse,23) output(1,worse,3) output(1,worse,5) output(1,worse,78) output(17,worse,78) output(1,worse,23)
Optimization: 8 11
Answer: 9
output(3,eq,5) output(19,eq,8) preference(1,(1,1),1,for(atom(hasOftenSold(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,6),1,for(atom(hasPrice(0))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),2,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,11),2,for(atom(hasOftenSold(0))),()) preference(1,poset) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(19,better,59) output(8,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,59) output(1,better,23) output(23,better,19) output(23,better,8) output(1,better,19) output(1,better,8) output(3,worse,23) output(78,worse,19) output(78,worse,8) output(3,worse,17) output(5,worse,17)
Optimization: 7 11
Answer: 10
output(3,eq,5) output(19,eq,8) preference(1,(1,1),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,3),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,10),1,for(atom(hasPrice(1))),()) preference(1,(1,11),1,for(atom(hasOftenSold(1))),()) preference(1,(1,12),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,6),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),2,for(atom(hasOftenSold(1))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasOilyLevel(2))),()) preference(1,poset) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,better,19) output(23,better,8) output(3,better,17) output(5,better,17) output(1,better,19) output(1,better,8) output(3,worse,23) output(19,worse,59) output(8,worse,59) output(1,worse,23)
Optimization: 6 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.032 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 6 11
Calls        : 1
Time         : 597.993s (Solving: 592.70s 1st Model: 0.85s Unsat: 0.00s)
CPU Time     : 2375.247s
Threads      : 4        (Winner: 4)

Choices      : 10756970 (Domain: 5349)
Conflicts    : 219556   (Analyzed: 219556)
Restarts     : 286      (Average: 767.68 Last: 16371)
Model-Level  : 38743.4 
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 18079298 (Deleted: 17924476)
  Binary     : 3159     (Ratio:   0.02%)
  Ternary    : 64569    (Ratio:   0.36%)
  Conflict   : 219556   (Average Length:  836.4 Ratio:   1.21%) 
  Loop       : 17773031 (Average Length:  185.6 Ratio:  98.31%) 
  Other      : 86711    (Average Length:    3.7 Ratio:   0.48%) 
  Distributed: 28929    (Ratio:   0.16% Average LBD: 2.85) 
  Integrated : 86786    (Ratio: 300.00% Unit: 276 Average Jumps: 1575.90)
Backjumps    : 219556   (Average: 43.79 Max: 278730 Sum: 9613775)
  Executed   : 219525   (Average: 43.79 Max: 278730 Sum: 9613649 Ratio: 100.00%)
  Bounded    : 31       (Average:  4.06 Max:  36 Sum:    126 Ratio:   0.00%)

Rules        : 943683  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 24126   
Bodies       : 684294  
  Count      : 48      
Equivalences : 25981    (Atom=Atom: 4513 Body=Body: 6204 Other: 15264)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 642960 Gammas: 0)
Variables    : 653035   (Eliminated:    0 Frozen: 645621)
Constraints  : 3839241  (Binary:  82.6% Ternary:   3.5% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(0)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(2)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasOilyLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPrice(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasMinorGrp(3)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPrice(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPriceLevel(0)) >> atom(hasPrice(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPrice(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasPrice(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasPrice(1)) >> atom(hasOilyLevel(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(2)) 
}.
