asprin_vL version 1.0
Reading from stdin
-:313:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:323:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:338:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:419:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:693:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:870:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:999:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1071:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1075:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1075:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1180:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1206:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1326:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1360:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1382:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:230:1-16: info: no atoms over signature occur in program:
  output/3

-:222:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:223:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:224:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(5,eq,3) output(4,eq,6) preference(1,poset) output(8,eq,1) output(8,eq,5) output(8,eq,7) output(8,eq,4) output(8,eq,0) output(8,eq,2) output(8,eq,3) output(8,eq,6) output(1,eq,5) output(1,eq,7) output(1,eq,4) output(1,eq,0) output(1,eq,2) output(1,eq,3) output(1,eq,6) output(5,eq,7) output(5,eq,4) output(5,eq,0) output(5,eq,2) output(5,eq,6) output(7,eq,4) output(7,eq,0) output(7,eq,2) output(7,eq,3) output(7,eq,6) output(4,eq,0) output(4,eq,2) output(4,eq,3) output(0,eq,2) output(0,eq,3) output(0,eq,6) output(2,eq,3) output(2,eq,6) output(3,eq,6)
Optimization: 36 0
Answer: 2
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,6),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,7),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(8,better,1) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(1,worse,2) output(5,eq,0) output(0,eq,3) output(8,unc,2) output(5,unc,7) output(5,unc,4) output(5,unc,6) output(7,unc,4) output(7,unc,0) output(7,unc,3) output(7,unc,6) output(4,unc,0) output(4,unc,3) output(0,unc,6) output(3,unc,6)
Optimization: 21 9
Answer: 3
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasOftenSold(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(5,better,7) output(8,better,1) output(8,better,2) output(0,better,3) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(7,worse,0) output(7,worse,3) output(7,worse,4) output(7,worse,6) output(5,worse,0) output(1,eq,2) output(5,unc,4) output(5,unc,6) output(4,unc,0) output(4,unc,3) output(0,unc,6) output(3,unc,6)
Optimization: 18 10
Answer: 4
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,4),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasOftenSold(1))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(5,better,7) output(4,better,0) output(4,better,3) output(8,better,1) output(8,better,2) output(0,better,3) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(7,worse,0) output(7,worse,3) output(5,worse,4) output(5,worse,6) output(0,worse,6) output(3,worse,6) output(7,worse,4) output(7,worse,6) output(5,worse,0) output(1,eq,2)
Optimization: 16 10
Answer: 5
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,2),2,for(atom(hasOiliness(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,4),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasPriceLevel(2))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(5,better,7) output(5,better,4) output(5,better,6) output(0,better,6) output(3,better,6) output(7,better,4) output(7,better,6) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(7,worse,0) output(7,worse,3) output(4,worse,0) output(4,worse,3) output(8,worse,2) output(8,worse,1) output(1,eq,2) output(5,eq,0) output(0,eq,3)
Optimization: 15 10
Answer: 6
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(hasOiliness(0))),()) preference(1,(1,4),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,9),2,for(atom(hasOiliness(0))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(1))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(5,better,4) output(5,better,6) output(0,better,6) output(3,better,6) output(7,better,3) output(7,better,4) output(7,better,6) output(8,better,1) output(0,better,3) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(7,worse,0) output(4,worse,0) output(4,worse,3) output(5,worse,7) output(8,worse,2) output(1,worse,2) output(5,worse,0)
Optimization: 13 10
Answer: 7
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOilyLevel(1))),()) preference(1,(1,2),1,for(atom(hasOilyLevel(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasPriceLevel(2))),()) preference(1,(1,7),1,for(atom(hasOiliness(1))),()) preference(1,(1,8),1,for(atom(hasOilyLevel(2))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasOilyLevel(0))),()) preference(1,(1,4),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasPriceLevel(2))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),2,for(atom(hasOilyLevel(2))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(5,better,7) output(5,better,4) output(5,better,6) output(0,better,6) output(3,better,6) output(7,better,4) output(7,better,6) output(8,better,1) output(8,better,2) output(0,better,3) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(7,worse,0) output(7,worse,3) output(4,worse,0) output(4,worse,3) output(1,worse,2) output(5,worse,0)
Optimization: 12 10
Answer: 8
output(5,eq,3) output(4,eq,6) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,2),1,for(atom(hasOiliness(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(0))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasPriceLevel(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(hasPriceLevel(1))),()) preference(1,(1,4),2,for(atom(hasOiliness(1))),()) preference(1,(1,5),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,6),2,for(atom(hasOftenSold(0))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasOilyLevel(1))),()) preference(1,(1,9),2,for(atom(hasOiliness(0))),()) preference(1,(1,10),2,for(atom(hasOilyLevel(0))),()) preference(1,poset) output(8,better,5) output(8,better,7) output(8,better,4) output(8,better,0) output(8,better,3) output(8,better,6) output(1,better,5) output(1,better,7) output(1,better,4) output(1,better,0) output(1,better,3) output(1,better,6) output(2,better,3) output(2,better,6) output(5,better,4) output(5,better,6) output(0,better,6) output(3,better,6) output(7,better,0) output(7,better,3) output(7,better,4) output(7,better,6) output(8,better,1) output(8,better,2) output(0,better,3) output(5,worse,2) output(7,worse,2) output(4,worse,2) output(0,worse,2) output(4,worse,0) output(4,worse,3) output(5,worse,7) output(1,worse,2) output(5,worse,0)
Optimization: 11 10
SATISFIABLE

Models       : 8+
  Optimum    : unknown
Optimization : 11 10
Calls        : 1
Time         : 915.492s (Solving: 912.18s 1st Model: 0.57s Unsat: 0.00s)
CPU Time     : 3651.379s
Threads      : 4        (Winner: 0)

Choices      : 6529256  (Domain: 5307)
Conflicts    : 415075   (Analyzed: 415075)
Restarts     : 479      (Average: 866.54 Last: 14723)
Model-Level  : 333.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 29415679 (Deleted: 29212016)
  Binary     : 4591     (Ratio:   0.02%)
  Ternary    : 103153   (Ratio:   0.35%)
  Conflict   : 415075   (Average Length:  870.4 Ratio:   1.41%) 
  Loop       : 28876100 (Average Length:  154.4 Ratio:  98.17%) 
  Other      : 124504   (Average Length:    3.7 Ratio:   0.42%) 
  Distributed: 41825    (Ratio:   0.14% Average LBD: 2.87) 
  Integrated : 125475   (Ratio: 300.00% Unit: 247 Average Jumps: 918.16)
Backjumps    : 415075   (Average: 13.55 Max: 63141 Sum: 5624544)
  Executed   : 415047   (Average: 13.55 Max: 63141 Sum: 5624492 Ratio: 100.00%)
  Bounded    : 28       (Average:  1.86 Max:   2 Sum:     52 Ratio:   0.00%)

Rules        : 722793  
  Choice     : 31      
  Minimize   : 2       
Atoms        : 22799   
Bodies       : 510095  
  Count      : 40      
Equivalences : 22544    (Atom=Atom: 3984 Body=Body: 5311 Other: 13249)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 481200 Gammas: 0)
Variables    : 490511   (Eliminated:    0 Frozen: 483598)
Constraints  : 2822025  (Binary:  82.2% Ternary:   4.8% Other:  13.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasPriceLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(3)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOiliness(1)) ; 
  atom(hasPriceLevel(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasPriceLevel(1)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOftenSold(1)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasOiliness(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOiliness(1)) ; 
  atom(hasPrice(0)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasOftenSold(1)) >> atom(hasPriceLevel(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(0)) ; 
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOiliness(0)) >> atom(hasOftenSold(0)) ; 
  atom(hasPriceLevel(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasOilyLevel(0)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOilyLevel(1)) >> atom(hasPriceLevel(1)) ; 
  atom(hasOilyLevel(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOilyLevel(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPriceLevel(2)) >> atom(hasOftenSold(0)) ; 
  atom(hasOiliness(1)) >> atom(hasPriceLevel(2)) ; 
  atom(hasOilyLevel(2)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOilyLevel(2)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPriceLevel(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasOiliness(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasPrice(1)) >> atom(hasOftenSold(0)) ; 
  atom(hasPrice(1)) >> atom(hasPrice(0)) ; 
  atom(hasPrice(0)) >> atom(hasOilyLevel(1)) ; 
  atom(hasOftenSold(0)) >> atom(hasOiliness(0)) ; 
  atom(hasPriceLevel(0)) >> atom(hasOilyLevel(0)) 
}.
Time limit reached
