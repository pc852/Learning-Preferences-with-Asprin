asprin_vL version 1.0
Reading from stdin
-:242:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:252:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:267:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:348:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:609:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:622:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:799:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:928:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1000:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1004:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1004:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1010:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1109:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1135:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1255:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1289:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1311:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:159:1-16: info: no atoms over signature occur in program:
  output/3

-:151:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:152:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,8) output(1,eq,2) output(1,eq,6) output(1,eq,0) output(1,eq,5) output(1,eq,9) output(1,eq,4) output(1,eq,3) output(8,eq,2) output(8,eq,6) output(8,eq,0) output(8,eq,5) output(8,eq,9) output(8,eq,4) output(8,eq,3) output(2,eq,6) output(2,eq,0) output(2,eq,5) output(2,eq,9) output(2,eq,4) output(2,eq,3) output(6,eq,0) output(6,eq,5) output(6,eq,9) output(6,eq,4) output(6,eq,3) output(0,eq,5) output(0,eq,9) output(0,eq,4) output(0,eq,3) output(5,eq,9) output(5,eq,4) output(5,eq,3) output(9,eq,4) output(9,eq,3) output(4,eq,3)
Optimization: 36 0
Answer: 2
preference(1,(1,10),1,for(atom(isCreamy(1))),15) preference(1,less(weight)) output(5,better,4) output(2,better,4) output(6,better,4) output(0,better,4) output(9,better,4) output(1,better,4) output(8,better,4) output(4,worse,3) output(1,eq,8) output(1,eq,2) output(1,eq,6) output(1,eq,0) output(1,eq,5) output(1,eq,9) output(1,eq,3) output(8,eq,2) output(8,eq,6) output(8,eq,0) output(8,eq,5) output(8,eq,9) output(8,eq,3) output(2,eq,6) output(2,eq,0) output(2,eq,5) output(2,eq,9) output(2,eq,3) output(6,eq,0) output(6,eq,5) output(6,eq,9) output(6,eq,3) output(0,eq,5) output(0,eq,9) output(0,eq,3) output(5,eq,9) output(5,eq,3) output(9,eq,3)
Optimization: 29 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(isUrchin(1)))),1) preference(1,(1,2),1,for(neg(atom(isOctopus(1)))),1) preference(1,(1,3),1,for(neg(atom(isMaguro(1)))),1) preference(1,(1,4),1,for(neg(atom(isRoe(1)))),1) preference(1,(1,5),1,for(neg(atom(isTamago(1)))),1) preference(1,(1,6),1,for(neg(atom(isShrimp(1)))),1) preference(1,(1,7),1,for(neg(atom(isFattyFish(1)))),1) preference(1,(1,8),1,for(neg(atom(isChewy(1)))),1) preference(1,(1,9),1,for(neg(atom(isButtery(1)))),1) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,less(weight)) output(2,better,6) output(2,better,0) output(2,better,5) output(2,better,9) output(2,better,4) output(2,better,3) output(1,better,6) output(1,better,0) output(1,better,5) output(1,better,9) output(1,better,4) output(1,better,3) output(8,better,6) output(8,better,0) output(8,better,5) output(8,better,9) output(8,better,4) output(8,better,3) output(1,eq,8) output(1,eq,2) output(8,eq,2) output(6,eq,0) output(6,eq,5) output(6,eq,9) output(6,eq,4) output(6,eq,3) output(0,eq,5) output(0,eq,9) output(0,eq,4) output(0,eq,3) output(5,eq,9) output(5,eq,4) output(5,eq,3) output(9,eq,4) output(9,eq,3) output(4,eq,3)
Optimization: 18 10
Answer: 4
preference(1,(1,4),1,for(atom(isShrimp(1))),6) preference(1,(1,8),1,for(atom(isCreamy(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(5,better,9) output(5,better,4) output(2,better,6) output(2,better,0) output(2,better,9) output(2,better,4) output(6,better,0) output(6,better,9) output(6,better,4) output(0,better,4) output(9,better,4) output(1,better,6) output(1,better,0) output(1,better,9) output(1,better,4) output(8,better,6) output(8,better,0) output(8,better,9) output(8,better,4) output(4,worse,3) output(6,worse,5) output(6,worse,3) output(0,worse,5) output(0,worse,3) output(9,worse,3) output(1,eq,8) output(1,eq,2) output(1,eq,5) output(1,eq,3) output(8,eq,2) output(8,eq,5) output(8,eq,3) output(2,eq,5) output(2,eq,3) output(0,eq,9) output(5,eq,3)
Optimization: 17 3
Answer: 5
preference(1,(1,2),1,for(neg(atom(isChewy(1)))),11) preference(1,(1,10),1,for(neg(atom(isRaw(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),15) preference(1,(1,3),1,for(atom(isOctopus(1))),5) preference(1,(1,4),1,for(atom(isSweet(1))),4) preference(1,(1,5),1,for(atom(isMaguro(1))),4) preference(1,(1,6),1,for(atom(isUnique(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(isShrimp(1))),5) preference(1,(1,9),1,for(atom(isRoe(1))),3) preference(1,less(weight)) output(5,better,9) output(2,better,0) output(2,better,5) output(2,better,9) output(2,better,4) output(6,better,0) output(6,better,5) output(6,better,9) output(6,better,4) output(0,better,9) output(1,better,2) output(1,better,6) output(1,better,0) output(1,better,5) output(1,better,9) output(1,better,4) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,0) output(8,better,5) output(8,better,9) output(8,better,4) output(8,better,3) output(4,worse,3) output(5,worse,4) output(5,worse,3) output(0,worse,4) output(0,worse,3) output(9,worse,4) output(9,worse,3) output(1,worse,8) output(2,eq,6) output(2,eq,3) output(6,eq,3) output(0,eq,5)
Optimization: 12 10
Answer: 6
preference(1,(1,1),1,for(neg(atom(isRaw(0)))),11) preference(1,(1,5),1,for(neg(atom(isRaw(1)))),2) preference(1,(1,2),1,for(atom(isUnique(1))),7) preference(1,(1,3),1,for(atom(isMaguro(1))),6) preference(1,(1,4),1,for(atom(isOctopus(1))),1) preference(1,(1,6),1,for(atom(isRaw(0))),2) preference(1,(1,7),1,for(atom(isUrchin(1))),14) preference(1,(1,8),1,for(atom(isRaw(1))),11) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,10),1,for(atom(isChewy(1))),14) preference(1,less(weight)) output(4,better,3) output(5,better,9) output(5,better,4) output(5,better,3) output(2,better,6) output(2,better,0) output(2,better,5) output(2,better,9) output(2,better,4) output(2,better,3) output(6,better,0) output(6,better,5) output(6,better,9) output(6,better,4) output(6,better,3) output(0,better,5) output(0,better,9) output(0,better,4) output(0,better,3) output(9,better,4) output(9,better,3) output(1,better,8) output(1,better,2) output(1,better,6) output(1,better,0) output(1,better,5) output(1,better,9) output(1,better,4) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,0) output(8,better,5) output(8,better,9) output(8,better,4) output(8,better,3)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Answer: 7
preference(1,(1,7),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,9),1,for(neg(atom(isShrimp(1)))),2) preference(1,(1,1),1,for(atom(isUnique(1))),7) preference(1,(1,2),1,for(atom(isRaw(1))),9) preference(1,(1,3),1,for(atom(isMaguro(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(isCreamy(1))),15) preference(1,(1,10),1,for(atom(isChewy(1))),12) preference(1,less(weight)) output(4,better,3) output(5,better,9) output(5,better,4) output(5,better,3) output(2,better,6) output(2,better,0) output(2,better,5) output(2,better,9) output(2,better,4) output(2,better,3) output(6,better,0) output(6,better,5) output(6,better,9) output(6,better,4) output(6,better,3) output(0,better,5) output(0,better,9) output(0,better,4) output(0,better,3) output(9,better,4) output(9,better,3) output(1,better,8) output(1,better,2) output(1,better,6) output(1,better,0) output(1,better,5) output(1,better,9) output(1,better,4) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,0) output(8,better,5) output(8,better,9) output(8,better,4) output(8,better,3)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 8
preference(1,(1,4),1,for(neg(atom(isRaw(1)))),2) preference(1,(1,5),1,for(neg(atom(isShrimp(1)))),1) preference(1,(1,1),1,for(atom(isUnique(1))),2) preference(1,(1,2),1,for(atom(isUrchin(1))),12) preference(1,(1,6),1,for(atom(hasPrice(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,9),1,for(atom(isRaw(1))),13) preference(1,(1,10),1,for(atom(isChewy(1))),8) preference(1,less(weight)) output(4,better,3) output(5,better,9) output(5,better,4) output(5,better,3) output(2,better,6) output(2,better,0) output(2,better,5) output(2,better,9) output(2,better,4) output(2,better,3) output(6,better,0) output(6,better,5) output(6,better,9) output(6,better,4) output(6,better,3) output(0,better,5) output(0,better,9) output(0,better,4) output(0,better,3) output(9,better,4) output(9,better,3) output(1,better,8) output(1,better,2) output(1,better,6) output(1,better,0) output(1,better,5) output(1,better,9) output(1,better,4) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,0) output(8,better,5) output(8,better,9) output(8,better,4) output(8,better,3)
Optimization: 0 8
Answer: 9
preference(1,(1,2),1,for(neg(atom(isUnique(1)))),11) preference(1,(1,6),1,for(neg(atom(isFattyFish(1)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),13) preference(1,(1,3),1,for(atom(isRaw(1))),12) preference(1,(1,4),1,for(atom(isOctopus(1))),2) preference(1,(1,5),1,for(atom(isUnique(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(4,better,3) output(5,better,9) output(5,better,4) output(5,better,3) output(2,better,6) output(2,better,0) output(2,better,5) output(2,better,9) output(2,better,4) output(2,better,3) output(6,better,0) output(6,better,5) output(6,better,9) output(6,better,4) output(6,better,3) output(0,better,5) output(0,better,9) output(0,better,4) output(0,better,3) output(9,better,4) output(9,better,3) output(1,better,8) output(1,better,2) output(1,better,6) output(1,better,0) output(1,better,5) output(1,better,9) output(1,better,4) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,0) output(8,better,5) output(8,better,9) output(8,better,4) output(8,better,3)
Optimization: 0 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.086 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 597.262s (Solving: 589.14s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2364.299s
Threads      : 4        (Winner: 4)

Choices      : 11029394 (Domain: 1636)
Conflicts    : 1835347  (Analyzed: 1835345)
Restarts     : 3003     (Average: 611.17 Last: 91154)
Model-Level  : 1257.8  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1844156  (Deleted: 1675217)
  Binary     : 600      (Ratio:   0.03%)
  Ternary    : 175      (Ratio:   0.01%)
  Conflict   : 1835345  (Average Length: 1219.1 Ratio:  99.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8811     (Average Length:  141.9 Ratio:   0.48%) 
  Distributed: 2937     (Ratio:   0.16% Average LBD: 3.52) 
  Integrated : 8811     (Ratio: 300.00% Unit: 3 Average Jumps: 761.00)
Backjumps    : 1835345  (Average:  4.39 Max: 2906 Sum: 8052608)
  Executed   : 1835344  (Average:  4.39 Max: 2906 Sum: 8052574 Ratio: 100.00%)
  Bounded    : 1        (Average: 34.00 Max:  34 Sum:     34 Ratio:   0.00%)

Rules        : 2146283 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 773687  
Bodies       : 791292  
  Sum        : 216     
  Count      : 10      
Equivalences : 2340702  (Atom=Atom: 756364 Body=Body: 775193 Other: 809145)
Tight        : Yes
Variables    : 20923    (Eliminated:    0 Frozen: 13893)
Constraints  : 1414006  (Binary:  98.9% Ternary:   0.5% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(isUrchin(1))  ; 
  1 :: not atom(isOctopus(1))  ; 
  1 :: not atom(isMaguro(1))  ; 
  1 :: not atom(isRoe(1))  ; 
  1 :: not atom(isTamago(1))  ; 
  1 :: not atom(isShrimp(1))  ; 
  1 :: not atom(isFattyFish(1))  ; 
  1 :: not atom(isChewy(1))  ; 
  1 :: not atom(isButtery(1))  ; 
  2 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(isShrimp(1)) ; 
  4 :: atom(isCreamy(1)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(hasMinorGrp(1)) ; 
  11 :: not atom(isChewy(1))  ; 
  5 :: atom(isOctopus(1)) ; 
  4 :: atom(isSweet(1)) ; 
  4 :: atom(isMaguro(1)) ; 
  2 :: atom(isUnique(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(isShrimp(1)) ; 
  3 :: atom(isRoe(1)) ; 
  2 :: not atom(isRaw(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(isRaw(0))  ; 
  7 :: atom(isUnique(1)) ; 
  6 :: atom(isMaguro(1)) ; 
  1 :: atom(isOctopus(1)) ; 
  2 :: not atom(isRaw(1))  ; 
  2 :: atom(isRaw(0)) ; 
  14 :: atom(isUrchin(1)) ; 
  11 :: atom(isRaw(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  14 :: atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(isUnique(1)) ; 
  9 :: atom(isRaw(1)) ; 
  3 :: atom(isMaguro(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: not atom(hasPrice(1))  ; 
  15 :: atom(isCreamy(1)) ; 
  2 :: not atom(isShrimp(1))  ; 
  12 :: atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(isUnique(1)) ; 
  12 :: atom(isUrchin(1)) ; 
  2 :: not atom(isRaw(1))  ; 
  1 :: not atom(isShrimp(1))  ; 
  3 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  13 :: atom(isRaw(1)) ; 
  8 :: atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  11 :: not atom(isUnique(1))  ; 
  12 :: atom(isRaw(1)) ; 
  2 :: atom(isOctopus(1)) ; 
  4 :: atom(isUnique(1)) ; 
  1 :: not atom(isFattyFish(1))  ; 
  13 :: not atom(hasMinorGrp(0))  ; 
  6 :: atom(hasMinorGrp(1)) 
}.
