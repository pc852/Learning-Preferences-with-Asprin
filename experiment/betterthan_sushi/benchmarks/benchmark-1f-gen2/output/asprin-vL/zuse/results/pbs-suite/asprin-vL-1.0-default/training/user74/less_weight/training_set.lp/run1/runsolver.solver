asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,70) output(41,eq,6) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,70) output(0,eq,6) output(0,eq,7) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,70) output(10,eq,6) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,70) output(8,eq,6) output(8,eq,7) output(8,eq,17) output(13,eq,20) output(13,eq,70) output(13,eq,6) output(13,eq,7) output(13,eq,17) output(20,eq,70) output(20,eq,6) output(20,eq,7) output(20,eq,17) output(70,eq,6) output(70,eq,7) output(70,eq,17) output(6,eq,7) output(6,eq,17) output(7,eq,17)
Optimization: 45 0
Answer: 2
preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasOiliness(0))),9) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(6,better,7) output(6,better,17) output(8,better,13) output(8,better,70) output(8,better,7) output(8,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,70) output(41,better,7) output(41,better,17) output(70,worse,6) output(0,worse,8) output(0,worse,20) output(0,worse,6) output(8,worse,20) output(10,worse,8) output(10,worse,13) output(10,worse,20) output(10,worse,70) output(10,worse,6) output(10,worse,7) output(10,worse,17) output(13,worse,20) output(13,worse,70) output(13,worse,6) output(13,worse,7) output(13,worse,17) output(41,worse,20) output(41,eq,8) output(41,eq,6) output(0,eq,70) output(0,eq,7) output(0,eq,17) output(8,eq,6) output(70,eq,7) output(70,eq,17) output(7,eq,17)
Optimization: 27 4
Answer: 3
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),3) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(70,better,17) output(0,better,10) output(0,better,13) output(0,better,20) output(0,better,6) output(8,better,13) output(8,better,20) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,13) output(10,better,20) output(13,better,20) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,6) output(41,better,7) output(41,better,17) output(0,worse,8) output(0,worse,70) output(6,worse,7) output(6,worse,17) output(8,worse,70) output(10,worse,8) output(10,worse,70) output(10,worse,6) output(10,worse,7) output(10,worse,17) output(13,worse,70) output(13,worse,6) output(13,worse,7) output(13,worse,17) output(20,worse,70) output(20,worse,6) output(20,worse,7) output(20,worse,17) output(41,worse,70) output(41,eq,8) output(0,eq,7) output(0,eq,17) output(7,eq,17)
Optimization: 23 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),6) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,13) output(10,better,20) output(10,better,6) output(10,better,7) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,8) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(10,worse,70) output(10,worse,17) output(13,worse,70) output(13,worse,6) output(13,worse,7) output(13,worse,17) output(20,worse,70) output(20,worse,6) output(20,worse,7) output(20,worse,17) output(41,eq,8) output(0,eq,17) output(13,eq,20) output(6,eq,7)
Optimization: 19 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),6) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,13) output(10,better,20) output(10,better,6) output(10,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,8) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(10,worse,70) output(10,worse,17) output(13,worse,70) output(13,worse,6) output(13,worse,7) output(13,worse,17) output(20,worse,70) output(20,worse,6) output(20,worse,7) output(20,worse,17) output(0,eq,17) output(13,eq,20) output(6,eq,7)
Optimization: 18 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),6) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),4) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,7) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,8) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(10,worse,13) output(10,worse,20) output(10,worse,70) output(10,worse,17) output(0,eq,13) output(0,eq,20) output(0,eq,17) output(10,eq,6) output(13,eq,20) output(13,eq,17) output(20,eq,17)
Optimization: 16 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,7) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,6) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(13,worse,17) output(20,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(20,eq,6) output(70,eq,7)
Optimization: 15 12
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,6) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(13,worse,17) output(20,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(70,eq,7)
Optimization: 14 12
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,12),1,for(atom(hasOiliness(1))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(70,better,7) output(0,better,70) output(0,better,7) output(6,better,7) output(6,better,17) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,70) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,6) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(0,worse,20) output(0,worse,6) output(7,worse,17) output(10,worse,8) output(10,worse,13) output(10,worse,20) output(10,worse,6) output(41,eq,8) output(0,eq,17)
Optimization: 14 11
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasStyle(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,70) output(13,better,7) output(20,better,70) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,6) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(13,worse,6) output(13,worse,17) output(20,worse,6) output(20,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(13,eq,20)
Optimization: 13 13
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,7) output(20,better,70) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,6) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,6) output(8,worse,17) output(10,worse,17) output(13,worse,6) output(13,worse,17) output(20,worse,6) output(20,worse,17) output(0,eq,17)
Optimization: 12 14
Progression : [ 2;12] (Error: 5)
Progression : [ 3;12] (Error: 3)
Progression : [ 4;12] (Error: 2)
Progression : [ 5;12] (Error: 1.4)
Progression : [ 6;12] (Error: 1)
Answer: 12
preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,2),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(20,worse,17) output(41,worse,8) output(0,eq,17) output(10,eq,13)
Optimization: 11 13
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,2),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(20,worse,17) output(41,worse,8) output(0,eq,17)
Optimization: 10 13
Progression : [ 7;10] (Error: 0.428571)
Progression : [ 8;10] (Error: 0.25)
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasStyle(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),2) preference(1,(1,14),1,for(atom(hasStyle(1))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 14
Progression : 8 [ 1;14] (Error: 13)
Progression : 8 [ 2;14] (Error: 6)
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasStyle(1))),1) preference(1,(1,14),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(6,worse,17) output(7,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 12
Answer: 16
preference(1,(1,3),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasOiliness(0))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(0,worse,20) output(6,worse,17) output(7,worse,17) output(0,eq,17)
Optimization: 8 11
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 9
Progression : 8 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.139 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 8 9
Bounds       : 8 [3;9]
Calls        : 1
Time         : 297.981s (Solving: 296.05s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1178.800s
Threads      : 4        (Winner: 4)

Choices      : 11214713 (Domain: 705931)
Conflicts    : 8245675  (Analyzed: 8245665)
Restarts     : 8956     (Average: 920.69 Last: 604236)
Model-Level  : 42.2    
Problems     : 16       (Average Length: 0.25 Splits: 0)
Lemmas       : 8322678  (Deleted: 7929865)
  Binary     : 2312     (Ratio:   0.03%)
  Ternary    : 7303     (Ratio:   0.09%)
  Conflict   : 8245663  (Average Length:  268.8 Ratio:  99.07%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 77015    (Average Length:   32.2 Ratio:   0.93%) 
  Distributed: 25729    (Ratio:   0.31% Average LBD: 3.64) 
  Integrated : 77187    (Ratio: 300.00% Unit: 211 Average Jumps: 9.79)
Backjumps    : 8245665  (Average:  1.29 Max: 544 Sum: 10631732)
  Executed   : 8245636  (Average:  1.29 Max: 544 Sum: 10631365 Ratio: 100.00%)
  Bounded    : 29       (Average: 12.66 Max:  42 Sum:    367 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8720    
  Sum        : 87      
  Count      : 14      
Equivalences : 9358     (Atom=Atom: 466 Body=Body: 200 Other: 8692)
Tight        : Yes
Variables    : 7564     (Eliminated:    0 Frozen: 4904)
Constraints  : 189321   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPrice(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasStyle(1)) ; 
  6 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMajorGrp(1)) 
}.
