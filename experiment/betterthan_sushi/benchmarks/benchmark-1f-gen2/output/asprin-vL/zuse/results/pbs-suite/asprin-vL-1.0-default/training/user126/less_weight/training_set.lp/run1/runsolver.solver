asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(42,eq,10) output(42,eq,44) output(42,eq,2) output(42,eq,50) output(42,eq,45) output(42,eq,35) output(42,eq,12) output(42,eq,28) output(42,eq,34) output(10,eq,44) output(10,eq,2) output(10,eq,50) output(10,eq,45) output(10,eq,35) output(10,eq,12) output(10,eq,28) output(10,eq,34) output(44,eq,2) output(44,eq,50) output(44,eq,45) output(44,eq,35) output(44,eq,12) output(44,eq,28) output(44,eq,34) output(2,eq,50) output(2,eq,45) output(2,eq,35) output(2,eq,12) output(2,eq,28) output(2,eq,34) output(50,eq,45) output(50,eq,35) output(50,eq,12) output(50,eq,28) output(50,eq,34) output(45,eq,35) output(45,eq,12) output(45,eq,28) output(45,eq,34) output(35,eq,12) output(35,eq,28) output(35,eq,34) output(12,eq,28) output(12,eq,34) output(28,eq,34)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,9),1,for(atom(hasOiliness(1))),10) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(2,better,45) output(10,better,45) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,45) output(44,better,2) output(44,better,45) output(44,better,12) output(44,better,28) output(44,better,34) output(50,better,45) output(50,better,12) output(50,better,28) output(50,better,34) output(2,worse,50) output(2,worse,35) output(10,worse,44) output(10,worse,50) output(10,worse,35) output(42,worse,44) output(42,worse,50) output(42,worse,35) output(45,worse,35) output(45,worse,12) output(45,worse,28) output(45,worse,34) output(42,eq,10) output(42,eq,2) output(42,eq,12) output(42,eq,28) output(42,eq,34) output(10,eq,2) output(10,eq,12) output(10,eq,28) output(10,eq,34) output(44,eq,50) output(44,eq,35) output(2,eq,12) output(2,eq,28) output(2,eq,34) output(50,eq,35) output(12,eq,28) output(12,eq,34) output(28,eq,34)
Optimization: 30 8
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,10),1,for(atom(hasOiliness(0))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),10) preference(1,less(weight)) output(10,better,2) output(10,better,45) output(10,better,35) output(10,better,34) output(12,better,34) output(28,better,34) output(42,better,2) output(42,better,45) output(42,better,35) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,34) output(50,better,45) output(50,better,35) output(50,better,34) output(2,worse,50) output(2,worse,12) output(2,worse,28) output(35,worse,12) output(35,worse,28) output(45,worse,12) output(45,worse,28) output(42,eq,10) output(42,eq,44) output(42,eq,50) output(42,eq,12) output(42,eq,28) output(10,eq,44) output(10,eq,50) output(10,eq,12) output(10,eq,28) output(44,eq,50) output(44,eq,12) output(44,eq,28) output(2,eq,45) output(2,eq,35) output(2,eq,34) output(50,eq,12) output(50,eq,28) output(45,eq,35) output(45,eq,34) output(35,eq,34) output(12,eq,28)
Optimization: 28 13
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,10),1,for(atom(hasOiliness(0))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),10) preference(1,less(weight)) output(2,better,45) output(2,better,35) output(2,better,34) output(10,better,2) output(10,better,45) output(10,better,35) output(10,better,34) output(12,better,34) output(28,better,34) output(42,better,2) output(42,better,45) output(42,better,35) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,34) output(50,better,45) output(50,better,35) output(50,better,34) output(2,worse,50) output(2,worse,12) output(2,worse,28) output(35,worse,12) output(35,worse,28) output(45,worse,35) output(45,worse,12) output(45,worse,28) output(45,worse,34) output(42,eq,10) output(42,eq,44) output(42,eq,50) output(42,eq,12) output(42,eq,28) output(10,eq,44) output(10,eq,50) output(10,eq,12) output(10,eq,28) output(44,eq,50) output(44,eq,12) output(44,eq,28) output(50,eq,12) output(50,eq,28) output(35,eq,34) output(12,eq,28)
Optimization: 25 13
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),3) preference(1,less(weight)) output(2,better,45) output(10,better,2) output(10,better,45) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,10) output(42,better,2) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(2,worse,50) output(2,worse,35) output(2,worse,12) output(2,worse,28) output(2,worse,34) output(10,worse,44) output(10,worse,50) output(10,worse,35) output(45,worse,35) output(45,worse,12) output(45,worse,28) output(45,worse,34) output(42,eq,44) output(42,eq,50) output(10,eq,12) output(10,eq,28) output(44,eq,50) output(12,eq,28)
Optimization: 18 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),3) preference(1,(1,6),1,for(atom(hasStyle(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),10) preference(1,less(weight)) output(2,better,50) output(2,better,45) output(2,better,35) output(2,better,12) output(2,better,28) output(2,better,34) output(10,better,45) output(10,better,35) output(10,better,12) output(10,better,28) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,10) output(42,better,44) output(42,better,50) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(45,better,35) output(45,better,12) output(45,better,28) output(45,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(10,worse,44) output(10,worse,2) output(10,worse,50) output(42,worse,2) output(44,worse,2) output(44,eq,50) output(12,eq,28)
Optimization: 7 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,13),1,for(atom(hasPrice(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),3) preference(1,less(weight)) output(2,better,50) output(2,better,45) output(2,better,35) output(2,better,12) output(2,better,28) output(2,better,34) output(10,better,44) output(10,better,2) output(10,better,50) output(10,better,45) output(10,better,35) output(10,better,12) output(10,better,28) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,34) output(42,better,10) output(42,better,44) output(42,better,2) output(42,better,50) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(45,better,35) output(45,better,12) output(45,better,28) output(45,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(44,worse,2) output(44,eq,50) output(35,eq,12) output(35,eq,28) output(12,eq,28)
Optimization: 5 11
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),5) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,8),1,for(atom(hasPrice(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(2,better,45) output(2,better,35) output(2,better,12) output(2,better,28) output(2,better,34) output(10,better,44) output(10,better,2) output(10,better,50) output(10,better,45) output(10,better,35) output(10,better,12) output(10,better,28) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,44) output(42,better,2) output(42,better,50) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(45,better,35) output(45,better,12) output(45,better,28) output(45,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(2,worse,50) output(42,eq,10) output(44,eq,50) output(12,eq,28)
Optimization: 4 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),9) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),3) preference(1,less(weight)) output(2,better,45) output(2,better,35) output(2,better,12) output(2,better,28) output(2,better,34) output(10,better,44) output(10,better,2) output(10,better,50) output(10,better,45) output(10,better,35) output(10,better,12) output(10,better,28) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,10) output(42,better,44) output(42,better,2) output(42,better,50) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(45,better,35) output(45,better,12) output(45,better,28) output(45,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(2,worse,50) output(44,eq,50) output(12,eq,28)
Optimization: 3 12
Progression : [3;3] (Error: 0)
Progression : 3 [ 1;12] (Error: 11)
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,12),1,for(atom(hasPrice(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(2,better,45) output(2,better,35) output(2,better,12) output(2,better,28) output(2,better,34) output(10,better,44) output(10,better,2) output(10,better,50) output(10,better,45) output(10,better,35) output(10,better,12) output(10,better,28) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,10) output(42,better,44) output(42,better,2) output(42,better,50) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(45,better,35) output(45,better,12) output(45,better,28) output(45,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(2,worse,50) output(44,eq,50) output(12,eq,28)
Optimization: 3 9
Answer: 11
preference(1,(1,2),1,for(atom(hasPrice(1))),9) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),4) preference(1,less(weight)) output(2,better,45) output(2,better,35) output(2,better,12) output(2,better,28) output(2,better,34) output(10,better,44) output(10,better,2) output(10,better,50) output(10,better,45) output(10,better,35) output(10,better,12) output(10,better,28) output(10,better,34) output(12,better,34) output(28,better,34) output(35,better,12) output(35,better,28) output(35,better,34) output(42,better,10) output(42,better,44) output(42,better,2) output(42,better,50) output(42,better,45) output(42,better,35) output(42,better,12) output(42,better,28) output(42,better,34) output(44,better,2) output(44,better,45) output(44,better,35) output(44,better,12) output(44,better,28) output(44,better,34) output(45,better,35) output(45,better,12) output(45,better,28) output(45,better,34) output(50,better,45) output(50,better,35) output(50,better,12) output(50,better,28) output(50,better,34) output(2,worse,50) output(44,eq,50) output(12,eq,28)
Optimization: 3 7
Progression : 3 [2;7] (Error: 2.5)
Progression : 3 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.079 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 3 7
Bounds       : 3 [3;7]
Calls        : 1
Time         : 298.179s (Solving: 296.23s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.641s
Threads      : 4        (Winner: 4)

Choices      : 8220847  (Domain: 447209)
Conflicts    : 6143485  (Analyzed: 6143479)
Restarts     : 5842     (Average: 1051.61 Last: 466755)
Model-Level  : 40.0    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 6173595  (Deleted: 5872661)
  Binary     : 1858     (Ratio:   0.03%)
  Ternary    : 6276     (Ratio:   0.10%)
  Conflict   : 6143479  (Average Length:  349.5 Ratio:  99.51%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 30116    (Average Length:   22.3 Ratio:   0.49%) 
  Distributed: 10136    (Ratio:   0.16% Average LBD: 3.51) 
  Integrated : 30408    (Ratio: 300.00% Unit: 110 Average Jumps: 5.75)
Backjumps    : 6143479  (Average:  1.26 Max: 476 Sum: 7738146)
  Executed   : 6143471  (Average:  1.26 Max: 476 Sum: 7738087 Ratio: 100.00%)
  Bounded    : 8        (Average:  7.38 Max:  16 Sum:     59 Ratio:   0.00%)

Rules        : 185980  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10459   
Bodies       : 8693    
  Sum        : 60      
  Count      : 14      
Equivalences : 9310     (Atom=Atom: 529 Body=Body: 266 Other: 8515)
Tight        : Yes
Variables    : 7513     (Eliminated:    0 Frozen: 4853)
Constraints  : 188541   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(8)) 
}.
