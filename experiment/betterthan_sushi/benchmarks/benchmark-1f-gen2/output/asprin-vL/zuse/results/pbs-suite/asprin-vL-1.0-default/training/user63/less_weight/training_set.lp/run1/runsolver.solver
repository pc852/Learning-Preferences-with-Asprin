asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,20) output(19,eq,0) output(19,eq,10) output(19,eq,13) output(19,eq,6) output(19,eq,51) output(16,eq,8) output(16,eq,69) output(16,eq,20) output(16,eq,0) output(16,eq,10) output(16,eq,13) output(16,eq,6) output(16,eq,51) output(8,eq,69) output(8,eq,20) output(8,eq,0) output(8,eq,10) output(8,eq,13) output(8,eq,6) output(8,eq,51) output(69,eq,20) output(69,eq,0) output(69,eq,10) output(69,eq,13) output(69,eq,6) output(69,eq,51) output(20,eq,0) output(20,eq,10) output(20,eq,13) output(20,eq,6) output(20,eq,51) output(0,eq,10) output(0,eq,13) output(0,eq,6) output(0,eq,51) output(10,eq,13) output(10,eq,6) output(10,eq,51) output(13,eq,6) output(13,eq,51) output(6,eq,51)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(8,better,69) output(16,better,69) output(19,better,69) output(69,worse,20) output(69,worse,0) output(69,worse,10) output(69,worse,13) output(69,worse,6) output(69,worse,51) output(19,eq,16) output(19,eq,8) output(19,eq,20) output(19,eq,0) output(19,eq,10) output(19,eq,13) output(19,eq,6) output(19,eq,51) output(16,eq,8) output(16,eq,20) output(16,eq,0) output(16,eq,10) output(16,eq,13) output(16,eq,6) output(16,eq,51) output(8,eq,20) output(8,eq,0) output(8,eq,10) output(8,eq,13) output(8,eq,6) output(8,eq,51) output(20,eq,0) output(20,eq,10) output(20,eq,13) output(20,eq,6) output(20,eq,51) output(0,eq,10) output(0,eq,13) output(0,eq,6) output(0,eq,51) output(10,eq,13) output(10,eq,6) output(10,eq,51) output(13,eq,6) output(13,eq,51) output(6,eq,51)
Optimization: 42 1
Answer: 3
preference(1,(1,10),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,10) output(8,better,51) output(13,better,51) output(16,better,10) output(16,better,51) output(19,better,10) output(19,better,51) output(20,better,10) output(20,better,51) output(69,better,10) output(69,better,51) output(10,worse,13) output(10,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,20) output(19,eq,0) output(19,eq,13) output(19,eq,6) output(16,eq,8) output(16,eq,69) output(16,eq,20) output(16,eq,0) output(16,eq,13) output(16,eq,6) output(8,eq,69) output(8,eq,20) output(8,eq,0) output(8,eq,13) output(8,eq,6) output(69,eq,20) output(69,eq,0) output(69,eq,13) output(69,eq,6) output(20,eq,0) output(20,eq,13) output(20,eq,6) output(0,eq,13) output(0,eq,6) output(10,eq,51) output(13,eq,6)
Optimization: 31 1
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(0,better,13) output(8,better,69) output(8,better,20) output(8,better,13) output(10,better,13) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,13) output(19,better,69) output(19,better,20) output(19,better,13) output(20,better,13) output(69,better,20) output(69,better,13) output(8,worse,0) output(8,worse,10) output(8,worse,6) output(8,worse,51) output(13,worse,6) output(13,worse,51) output(19,worse,16) output(19,worse,0) output(19,worse,10) output(19,worse,6) output(19,worse,51) output(20,worse,0) output(20,worse,10) output(20,worse,6) output(20,worse,51) output(69,worse,0) output(69,worse,10) output(69,worse,6) output(69,worse,51) output(19,eq,8) output(16,eq,0) output(16,eq,10) output(16,eq,6) output(16,eq,51) output(0,eq,10) output(0,eq,6) output(0,eq,51) output(10,eq,6) output(10,eq,51) output(6,eq,51)
Optimization: 30 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),2) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,10) output(8,better,51) output(13,better,51) output(16,better,69) output(16,better,10) output(16,better,51) output(19,better,69) output(19,better,10) output(19,better,51) output(20,better,10) output(20,better,51) output(69,better,10) output(69,better,51) output(10,worse,13) output(10,worse,6) output(69,worse,20) output(69,worse,0) output(69,worse,13) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,20) output(19,eq,0) output(19,eq,13) output(19,eq,6) output(16,eq,8) output(16,eq,20) output(16,eq,0) output(16,eq,13) output(16,eq,6) output(8,eq,20) output(8,eq,0) output(8,eq,13) output(8,eq,6) output(20,eq,0) output(20,eq,13) output(20,eq,6) output(0,eq,13) output(0,eq,6) output(10,eq,51) output(13,eq,6)
Optimization: 28 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,51) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,51) output(69,better,20) output(69,better,10) output(69,better,51) output(0,worse,6) output(10,worse,13) output(10,worse,6) output(13,worse,6) output(20,worse,0) output(20,worse,13) output(20,worse,6) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,6) output(16,eq,8) output(16,eq,6) output(8,eq,6) output(69,eq,0) output(69,eq,13) output(20,eq,10) output(20,eq,51) output(0,eq,13) output(10,eq,51)
Optimization: 20 4
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,5),1,for(atom(hasOiliness(0))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),3) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,14),1,for(atom(hasOiliness(1))),9) preference(1,less(weight)) output(6,better,51) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,51) output(19,better,16) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(0,worse,13) output(0,worse,6) output(10,worse,13) output(10,worse,6) output(16,worse,8) output(16,worse,69) output(16,worse,13) output(20,worse,13) output(20,worse,6) output(19,eq,8) output(19,eq,69) output(16,eq,6) output(8,eq,69) output(20,eq,0) output(20,eq,10) output(20,eq,51) output(0,eq,10) output(0,eq,51) output(10,eq,51)
Optimization: 19 14
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,7),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,51) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,51) output(0,worse,13) output(0,worse,6) output(10,worse,13) output(10,worse,6) output(13,worse,6) output(20,worse,0) output(20,worse,13) output(20,worse,6) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,6) output(16,eq,8) output(16,eq,6) output(8,eq,6) output(20,eq,10) output(20,eq,51) output(10,eq,51)
Optimization: 18 6
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,51) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,51) output(0,worse,6) output(10,worse,13) output(10,worse,6) output(13,worse,6) output(20,worse,0) output(20,worse,13) output(20,worse,6) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,6) output(16,eq,8) output(16,eq,6) output(8,eq,6) output(20,eq,10) output(20,eq,51) output(10,eq,51)
Optimization: 17 6
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,51) output(10,better,13) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,51) output(20,better,13) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,51) output(0,worse,6) output(10,worse,6) output(13,worse,6) output(13,worse,51) output(20,worse,0) output(20,worse,6) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,6) output(16,eq,8) output(16,eq,6) output(8,eq,6) output(20,eq,10) output(20,eq,51) output(10,eq,51)
Optimization: 16 7
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,51) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,51) output(20,better,10) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,51) output(0,worse,6) output(10,worse,13) output(10,worse,6) output(13,worse,6) output(20,worse,0) output(20,worse,13) output(20,worse,6) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,6) output(16,eq,8) output(16,eq,6) output(8,eq,6) output(10,eq,51)
Optimization: 15 6
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,51) output(10,better,13) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,51) output(20,better,10) output(20,better,13) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,51) output(0,worse,6) output(10,worse,6) output(13,worse,6) output(13,worse,51) output(20,worse,0) output(20,worse,6) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,6) output(16,eq,8) output(16,eq,6) output(8,eq,6) output(10,eq,51)
Optimization: 14 7
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(0))),9) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,12),1,for(atom(hasPrice(0))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,10) output(20,better,51) output(69,better,20) output(69,better,10) output(69,better,6) output(69,better,51) output(8,worse,0) output(10,worse,13) output(10,worse,6) output(19,worse,16) output(19,worse,0) output(20,worse,0) output(20,worse,13) output(69,worse,0) output(69,worse,13) output(19,eq,8) output(20,eq,6) output(10,eq,51)
Optimization: 12 12
Answer: 14
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,10),1,for(atom(hasOiliness(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),7) preference(1,less(weight)) output(0,better,13) output(0,better,6) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,13) output(10,better,6) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,0) output(69,better,13) output(69,better,6) output(0,worse,10) output(0,worse,51) output(6,worse,51) output(13,worse,6) output(13,worse,51) output(19,worse,16) output(69,worse,20) output(19,eq,8) output(69,eq,10) output(69,eq,51) output(10,eq,51)
Optimization: 11 9
Answer: 15
preference(1,(1,1),1,for(atom(hasStyle(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,10),1,for(atom(hasOiliness(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,16) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(10,worse,13) output(10,worse,6) output(16,worse,8) output(20,worse,0) output(20,worse,10) output(20,worse,13) output(20,worse,6) output(20,worse,51) output(19,eq,8) output(10,eq,51)
Optimization: 10 10
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasStyle(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(0,better,10) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(0,worse,13) output(8,worse,69) output(10,worse,13) output(10,worse,6) output(16,worse,69) output(19,worse,16) output(19,worse,69) output(19,eq,8) output(10,eq,51)
Optimization: 9 11
Answer: 17
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),1) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,13) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(13,worse,6) output(13,worse,51) output(19,worse,16) output(19,eq,8) output(69,eq,20) output(10,eq,6) output(10,eq,51) output(6,eq,51)
Optimization: 8 11
Answer: 18
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,13) output(10,better,6) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(6,worse,51) output(13,worse,6) output(13,worse,51) output(19,worse,16) output(19,eq,8) output(20,eq,0) output(10,eq,51)
Optimization: 7 12
Answer: 19
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,8),1,for(atom(hasOiliness(1))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),6) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),2) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,13) output(10,better,6) output(13,better,6) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(6,worse,51) output(13,worse,51) output(19,worse,16) output(19,eq,8) output(69,eq,20) output(10,eq,51)
Optimization: 6 13
Progression : [3;6] (Error: 1)
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,10),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(0,better,10) output(0,better,6) output(0,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,6) output(13,better,6) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,16) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(6,worse,51) output(10,worse,13) output(16,worse,8) output(19,eq,8) output(0,eq,13) output(10,eq,51)
Optimization: 6 12
Progression : [4;6] (Error: 0.5)
Answer: 21
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,12),1,for(atom(hasOiliness(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),9) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,16) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(10,worse,13) output(10,worse,6) output(16,worse,8) output(19,eq,8) output(10,eq,51)
Optimization: 5 11
Progression : [5;5] (Error: 0)
Progression : 5 [ 1;11] (Error: 10)
Progression : 5 [ 2;11] (Error: 4.5)
Answer: 22
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),3) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,16) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(10,worse,13) output(10,worse,6) output(16,worse,8) output(19,eq,8) output(10,eq,51)
Optimization: 5 10
Answer: 23
preference(1,(1,2),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),9) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(10,worse,13) output(10,worse,6) output(19,worse,16) output(19,eq,8) output(10,eq,51)
Optimization: 5 9
Answer: 24
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),9) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(10,worse,13) output(10,worse,6) output(19,worse,16) output(19,eq,8) output(10,eq,51)
Optimization: 5 8
Progression : 5 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.057 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 5 8
Bounds       : 5 [3;8]
Calls        : 1
Time         : 298.065s (Solving: 296.06s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.998s
Threads      : 4        (Winner: 4)

Choices      : 11685058 (Domain: 710243)
Conflicts    : 6530938  (Analyzed: 6530931)
Restarts     : 5763     (Average: 1133.25 Last: 350965)
Model-Level  : 246.3   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 6564755  (Deleted: 6303030)
  Binary     : 960      (Ratio:   0.01%)
  Ternary    : 6426     (Ratio:   0.10%)
  Conflict   : 6530930  (Average Length:  291.2 Ratio:  99.48%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 33825    (Average Length:   25.4 Ratio:   0.52%) 
  Distributed: 11295    (Ratio:   0.17% Average LBD: 3.57) 
  Integrated : 33885    (Ratio: 300.00% Unit: 186 Average Jumps: 15.78)
Backjumps    : 6530931  (Average:  1.64 Max: 513 Sum: 10702721)
  Executed   : 6530915  (Average:  1.64 Max: 513 Sum: 10702405 Ratio: 100.00%)
  Bounded    : 16       (Average: 19.75 Max:  30 Sum:    316 Ratio:   0.00%)

Rules        : 185980  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10459   
Bodies       : 8697    
  Sum        : 64      
  Count      : 14      
Equivalences : 9316     (Atom=Atom: 519 Body=Body: 256 Other: 8541)
Tight        : Yes
Variables    : 7519     (Eliminated:    0 Frozen: 4859)
Constraints  : 188551   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOiliness(0)) 
}.
