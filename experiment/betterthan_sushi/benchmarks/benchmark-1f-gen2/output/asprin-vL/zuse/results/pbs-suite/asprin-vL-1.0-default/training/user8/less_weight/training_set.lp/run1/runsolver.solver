asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,27) output(19,eq,29) output(19,eq,15) output(19,eq,16) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,27) output(38,eq,29) output(38,eq,15) output(38,eq,16) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,27) output(26,eq,29) output(26,eq,15) output(26,eq,16) output(0,eq,4) output(0,eq,22) output(0,eq,27) output(0,eq,29) output(0,eq,15) output(0,eq,16) output(4,eq,22) output(4,eq,27) output(4,eq,29) output(4,eq,15) output(4,eq,16) output(22,eq,27) output(22,eq,29) output(22,eq,15) output(22,eq,16) output(27,eq,29) output(27,eq,15) output(27,eq,16) output(29,eq,15) output(29,eq,16) output(15,eq,16)
Optimization: 45 0
Answer: 2
preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(29,better,15) output(38,better,26) output(38,better,15) output(0,better,15) output(4,better,15) output(22,better,15) output(27,better,15) output(26,worse,0) output(26,worse,4) output(26,worse,22) output(26,worse,27) output(26,worse,29) output(26,worse,16) output(15,worse,16) output(19,worse,38) output(19,worse,0) output(19,worse,4) output(19,worse,22) output(19,worse,27) output(19,worse,29) output(19,worse,16) output(19,eq,26) output(19,eq,15) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,27) output(38,eq,29) output(38,eq,16) output(26,eq,15) output(0,eq,4) output(0,eq,22) output(0,eq,27) output(0,eq,29) output(0,eq,16) output(4,eq,22) output(4,eq,27) output(4,eq,29) output(4,eq,16) output(22,eq,27) output(22,eq,29) output(22,eq,16) output(27,eq,29) output(27,eq,16) output(29,eq,16)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasStyle(0))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),3) preference(1,less(weight)) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,29) output(19,better,38) output(19,better,26) output(19,better,4) output(19,better,29) output(22,better,29) output(27,better,29) output(26,worse,0) output(26,worse,4) output(26,worse,22) output(26,worse,27) output(26,worse,29) output(26,worse,15) output(26,worse,16) output(29,worse,15) output(29,worse,16) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,27) output(38,worse,29) output(38,worse,15) output(38,worse,16) output(4,worse,22) output(4,worse,27) output(4,worse,15) output(4,worse,16) output(19,worse,0) output(19,eq,22) output(19,eq,27) output(19,eq,15) output(19,eq,16) output(38,eq,26) output(22,eq,27) output(22,eq,15) output(22,eq,16) output(27,eq,15) output(27,eq,16) output(15,eq,16)
Optimization: 32 13
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasStyle(0))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,29) output(19,better,16) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,0) output(26,worse,4) output(26,worse,22) output(26,worse,27) output(26,worse,29) output(26,worse,15) output(26,worse,16) output(29,worse,15) output(29,worse,16) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,27) output(38,worse,29) output(38,worse,15) output(38,worse,16) output(19,worse,0) output(19,eq,4) output(19,eq,22) output(19,eq,27) output(19,eq,15) output(38,eq,26) output(4,eq,22) output(4,eq,27) output(4,eq,15) output(22,eq,27) output(22,eq,15) output(27,eq,15)
Optimization: 28 13
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasStyle(0))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(26,better,16) output(29,better,16) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,0) output(26,worse,4) output(26,worse,22) output(26,worse,27) output(26,worse,29) output(26,worse,15) output(29,worse,15) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,27) output(38,worse,29) output(38,worse,15) output(19,worse,0) output(27,worse,15) output(19,eq,4) output(19,eq,22) output(19,eq,15) output(38,eq,26) output(4,eq,22) output(4,eq,15) output(22,eq,15)
Optimization: 22 13
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasStyle(0))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,16) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(27,better,29) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,27) output(38,worse,15) output(38,worse,16) output(0,worse,4) output(0,worse,15) output(4,worse,15) output(22,worse,15) output(27,worse,15) output(27,worse,16) output(19,eq,26) output(19,eq,15) output(38,eq,29) output(26,eq,15) output(0,eq,22)
Optimization: 20 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasStyle(1))),4) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),2) preference(1,less(weight)) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,16) output(29,better,16) output(38,better,26) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,22) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,22) output(19,better,29) output(19,better,16) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,0) output(26,worse,15) output(29,worse,15) output(38,worse,0) output(38,worse,15) output(0,worse,15) output(4,worse,15) output(19,worse,38) output(19,worse,26) output(19,worse,0) output(19,worse,4) output(19,worse,27) output(19,worse,15) output(22,worse,27) output(22,worse,29) output(22,worse,15) output(27,worse,15) output(4,eq,27)
Optimization: 18 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasStyle(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,5),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasPrice(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,16) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,16) output(4,better,22) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,16) output(27,better,16) output(29,worse,15) output(38,worse,26) output(38,worse,29) output(38,worse,15) output(0,worse,27) output(0,worse,29) output(0,worse,15) output(4,worse,27) output(4,worse,29) output(4,worse,15) output(19,worse,26) output(19,worse,15) output(22,worse,27) output(22,worse,29) output(22,worse,15) output(27,worse,29) output(27,worse,15)
Optimization: 17 14
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),9) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,11),1,for(atom(hasPrice(1))),9) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,14),1,for(atom(hasStyle(0))),4) preference(1,less(weight)) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,29) output(4,better,15) output(4,better,16) output(19,better,38) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16) output(38,worse,26) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,27) output(38,worse,29) output(38,worse,15) output(38,worse,16) output(19,worse,26) output(19,worse,0) output(19,worse,4) output(19,worse,27) output(22,worse,27) output(19,eq,22) output(26,eq,0) output(4,eq,27) output(15,eq,16)
Optimization: 17 13
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),5) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(38,better,0) output(38,better,22) output(38,better,29) output(0,better,22) output(0,better,29) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(27,better,29) output(27,better,16) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,4) output(38,worse,27) output(38,worse,15) output(38,worse,16) output(0,worse,4) output(0,worse,27) output(0,worse,15) output(0,worse,16) output(22,worse,27) output(22,worse,29) output(22,worse,15) output(22,worse,16) output(27,eq,15)
Optimization: 16 14
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),5) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(38,better,0) output(38,better,22) output(38,better,27) output(38,better,29) output(0,better,22) output(0,better,27) output(0,better,29) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(27,better,29) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,4) output(38,worse,15) output(38,worse,16) output(0,worse,4) output(0,worse,15) output(0,worse,16) output(22,worse,27) output(22,worse,29) output(22,worse,15) output(22,worse,16) output(27,worse,15) output(27,worse,16)
Optimization: 15 14
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,0) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,27) output(38,worse,29) output(38,worse,15) output(38,worse,16) output(19,worse,0) output(26,eq,4) output(27,eq,15)
Optimization: 14 14
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(38,better,27) output(38,better,29) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(26,worse,0) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,4) output(38,worse,22) output(38,worse,15) output(38,worse,16) output(19,worse,0) output(27,worse,15) output(27,worse,16) output(26,eq,4)
Optimization: 13 14
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(38,better,22) output(38,better,27) output(38,better,29) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(27,better,29) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,4) output(38,worse,15) output(38,worse,16) output(22,worse,15) output(22,worse,16) output(27,worse,15) output(27,worse,16) output(0,eq,4)
Optimization: 12 14
Answer: 15
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,13),1,for(atom(hasOiliness(1))),7) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,16) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,22) output(0,better,29) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,15) output(29,worse,15) output(38,worse,15) output(0,worse,4) output(0,worse,27) output(0,worse,15) output(4,worse,15) output(19,worse,15) output(22,worse,27) output(22,worse,29) output(22,worse,15) output(27,worse,15)
Optimization: 12 13
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasStyle(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,13),1,for(atom(hasStyle(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,16) output(29,better,16) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,15) output(29,worse,15) output(38,worse,26) output(38,worse,15) output(0,worse,15) output(4,worse,15) output(19,worse,15) output(22,worse,27) output(22,worse,15) output(27,worse,15) output(0,eq,4)
Optimization: 11 14
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasStyle(1))),4) preference(1,(1,6),1,for(atom(hasOiliness(0))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasStyle(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(26,better,4) output(26,better,27) output(26,better,29) output(26,better,16) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,0) output(26,worse,15) output(29,worse,15) output(38,worse,15) output(0,worse,15) output(4,worse,22) output(4,worse,15) output(22,worse,15) output(27,worse,15) output(19,eq,15) output(26,eq,22)
Optimization: 11 13
Answer: 18
preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasStyle(0))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,15) output(22,better,16) output(27,better,15) output(27,better,16) output(26,worse,29) output(38,worse,29) output(0,worse,29) output(4,worse,29) output(19,worse,38) output(19,worse,26) output(19,worse,0) output(19,worse,29) output(22,worse,29) output(27,worse,29)
Optimization: 10 13
Answer: 19
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasOiliness(0))),9) preference(1,(1,9),1,for(atom(hasStyle(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,15) output(27,better,16) output(0,worse,4) output(0,worse,22) output(19,worse,38) output(19,worse,26) output(19,worse,4) output(19,worse,22) output(19,eq,0) output(27,eq,29)
Optimization: 8 12
Answer: 20
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),10) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,10),1,for(atom(hasOiliness(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,14),1,for(atom(hasStyle(0))),10) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,15) output(22,better,16) output(27,better,15) output(27,better,16) output(26,worse,29) output(38,worse,29) output(0,worse,29) output(4,worse,29) output(19,worse,29) output(22,worse,29) output(27,worse,29)
Optimization: 7 14
Answer: 21
preference(1,(1,1),1,for(atom(hasPrice(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,9),1,for(atom(hasStyle(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16) output(38,worse,26) output(0,worse,4) output(0,worse,22) output(0,worse,27) output(0,worse,29) output(0,worse,15)
Optimization: 6 12
Answer: 22
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),10) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,0) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16) output(38,worse,26) output(38,worse,22) output(0,worse,22) output(4,worse,22) output(4,eq,27)
Optimization: 5 13
Answer: 23
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,8),1,for(atom(hasStyle(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16) output(19,worse,38) output(22,worse,27) output(4,eq,27) output(22,eq,29)
Optimization: 4 14
Answer: 24
preference(1,(1,1),1,for(atom(hasOiliness(1))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasStyle(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,5),1,for(atom(hasStyle(1))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasOiliness(0))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),6) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16) output(29,worse,15) output(0,worse,4) output(22,eq,27)
Optimization: 3 12
Answer: 25
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasStyle(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,14),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 26
preference(1,(1,1),1,for(atom(hasStyle(0))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),9) preference(1,(1,3),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasOiliness(0))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16)
Optimization: 0 13
Progression : 0 [ 3;13] (Error: 3.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.278 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 26+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 298.192s (Solving: 296.27s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.110s
Threads      : 4        (Winner: 4)

Choices      : 9221923  (Domain: 99202)
Conflicts    : 6875563  (Analyzed: 6875560)
Restarts     : 6148     (Average: 1118.34 Last: 479227)
Model-Level  : 44.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7081573  (Deleted: 6833536)
  Binary     : 1424     (Ratio:   0.02%)
  Ternary    : 11587    (Ratio:   0.16%)
  Conflict   : 6875560  (Average Length:  177.0 Ratio:  97.09%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 206013   (Average Length:   43.5 Ratio:   2.91%) 
  Distributed: 68831    (Ratio:   1.00% Average LBD: 3.72) 
  Integrated : 206486   (Ratio: 299.99% Unit: 267 Average Jumps: 6.15)
Backjumps    : 6875560  (Average:  1.28 Max: 595 Sum: 8821902)
  Executed   : 6875557  (Average:  1.28 Max: 595 Sum: 8821813 Ratio: 100.00%)
  Bounded    : 3        (Average: 29.67 Max:  47 Sum:     89 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasStyle(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(0)) ; 
  9 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.
