asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,19) output(9,eq,99) output(9,eq,55) output(9,eq,31) output(9,eq,13) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,19) output(47,eq,99) output(47,eq,55) output(47,eq,31) output(47,eq,13) output(50,eq,30) output(50,eq,4) output(50,eq,19) output(50,eq,99) output(50,eq,55) output(50,eq,31) output(50,eq,13) output(30,eq,4) output(30,eq,19) output(30,eq,99) output(30,eq,55) output(30,eq,31) output(30,eq,13) output(4,eq,19) output(4,eq,99) output(4,eq,55) output(4,eq,31) output(4,eq,13) output(19,eq,99) output(19,eq,55) output(19,eq,31) output(19,eq,13) output(99,eq,55) output(99,eq,31) output(99,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 45 0
Answer: 2
preference(1,(1,9),1,for(atom(hasMinorGrp(4))),5) preference(1,less(weight)) output(4,better,99) output(9,better,99) output(19,better,99) output(30,better,99) output(47,better,99) output(50,better,99) output(99,worse,55) output(99,worse,31) output(99,worse,13) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,19) output(9,eq,55) output(9,eq,31) output(9,eq,13) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,19) output(47,eq,55) output(47,eq,31) output(47,eq,13) output(50,eq,30) output(50,eq,4) output(50,eq,19) output(50,eq,55) output(50,eq,31) output(50,eq,13) output(30,eq,4) output(30,eq,19) output(30,eq,55) output(30,eq,31) output(30,eq,13) output(4,eq,19) output(4,eq,55) output(4,eq,31) output(4,eq,13) output(19,eq,55) output(19,eq,31) output(19,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 39 1
Answer: 3
preference(1,(1,9),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(4,better,55) output(9,better,47) output(9,better,30) output(9,better,55) output(19,better,55) output(50,better,30) output(50,better,55) output(99,better,55) output(30,worse,4) output(30,worse,19) output(30,worse,99) output(30,worse,31) output(30,worse,13) output(47,worse,50) output(47,worse,4) output(47,worse,19) output(47,worse,99) output(47,worse,31) output(47,worse,13) output(55,worse,31) output(55,worse,13) output(9,eq,50) output(9,eq,4) output(9,eq,19) output(9,eq,99) output(9,eq,31) output(9,eq,13) output(47,eq,30) output(47,eq,55) output(50,eq,4) output(50,eq,19) output(50,eq,99) output(50,eq,31) output(50,eq,13) output(30,eq,55) output(4,eq,19) output(4,eq,99) output(4,eq,31) output(4,eq,13) output(19,eq,99) output(19,eq,31) output(19,eq,13) output(99,eq,31) output(99,eq,13) output(31,eq,13)
Optimization: 37 1
Answer: 4
preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(4,better,13) output(9,better,13) output(19,better,13) output(30,better,13) output(31,better,13) output(47,better,13) output(50,better,13) output(55,better,13) output(99,better,13) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,19) output(9,eq,99) output(9,eq,55) output(9,eq,31) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,19) output(47,eq,99) output(47,eq,55) output(47,eq,31) output(50,eq,30) output(50,eq,4) output(50,eq,19) output(50,eq,99) output(50,eq,55) output(50,eq,31) output(30,eq,4) output(30,eq,19) output(30,eq,99) output(30,eq,55) output(30,eq,31) output(4,eq,19) output(4,eq,99) output(4,eq,55) output(4,eq,31) output(19,eq,99) output(19,eq,55) output(19,eq,31) output(99,eq,55) output(99,eq,31) output(55,eq,31)
Optimization: 36 2
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),1) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(4,better,55) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,55) output(9,better,13) output(19,better,55) output(19,better,13) output(31,better,13) output(50,better,30) output(50,better,55) output(50,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(4,worse,19) output(4,worse,99) output(4,worse,31) output(9,worse,19) output(9,worse,99) output(9,worse,31) output(19,worse,99) output(19,worse,31) output(30,worse,4) output(30,worse,19) output(30,worse,99) output(30,worse,31) output(47,worse,50) output(47,worse,4) output(47,worse,19) output(47,worse,99) output(47,worse,31) output(50,worse,4) output(50,worse,19) output(50,worse,99) output(50,worse,31) output(55,worse,31) output(9,eq,4) output(47,eq,30) output(47,eq,55) output(47,eq,13) output(30,eq,55) output(30,eq,13) output(55,eq,13)
Optimization: 29 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasOiliness(0))),4) preference(1,(1,7),1,for(atom(hasPrice(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(9,better,47) output(9,better,50) output(9,better,4) output(9,better,99) output(9,better,55) output(19,better,99) output(19,better,55) output(30,better,4) output(30,better,99) output(30,better,55) output(47,better,50) output(47,better,4) output(47,better,99) output(47,better,55) output(50,better,4) output(50,better,55) output(99,better,55) output(4,worse,19) output(4,worse,99) output(4,worse,31) output(4,worse,13) output(9,worse,30) output(9,worse,19) output(9,worse,31) output(9,worse,13) output(19,worse,31) output(19,worse,13) output(30,worse,31) output(30,worse,13) output(47,worse,30) output(47,worse,19) output(47,worse,31) output(47,worse,13) output(50,worse,30) output(50,worse,19) output(50,worse,99) output(50,worse,31) output(50,worse,13) output(55,worse,31) output(55,worse,13) output(99,worse,31) output(99,worse,13) output(30,eq,19) output(4,eq,55) output(31,eq,13)
Optimization: 28 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,13) output(9,better,99) output(9,better,55) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,13) output(30,better,99) output(30,better,55) output(30,better,13) output(31,better,13) output(47,better,99) output(47,better,55) output(47,better,13) output(50,better,99) output(50,better,55) output(50,better,13) output(55,worse,31) output(99,worse,31) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,19) output(9,eq,31) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,19) output(47,eq,31) output(50,eq,30) output(50,eq,4) output(50,eq,19) output(50,eq,31) output(30,eq,4) output(30,eq,19) output(30,eq,31) output(4,eq,19) output(4,eq,31) output(19,eq,31) output(99,eq,55) output(99,eq,13) output(55,eq,13)
Optimization: 26 4
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(9,better,4) output(9,better,99) output(9,better,55) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,13) output(30,better,4) output(30,better,99) output(30,better,55) output(30,better,13) output(31,better,13) output(47,better,4) output(47,better,99) output(47,better,55) output(47,better,13) output(50,better,4) output(50,better,99) output(50,better,55) output(50,better,13) output(4,worse,19) output(4,worse,31) output(55,worse,31) output(99,worse,31) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,19) output(9,eq,31) output(47,eq,50) output(47,eq,30) output(47,eq,19) output(47,eq,31) output(50,eq,30) output(50,eq,19) output(50,eq,31) output(30,eq,19) output(30,eq,31) output(4,eq,99) output(4,eq,55) output(4,eq,13) output(19,eq,31) output(99,eq,55) output(99,eq,13) output(55,eq,13)
Optimization: 25 5
Answer: 9
preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasStyle(1))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),10) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(30,better,19) output(30,better,31) output(47,better,19) output(47,better,31) output(50,better,30) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(55,better,31) output(99,better,55) output(99,better,31) output(4,worse,13) output(19,worse,99) output(19,worse,55) output(19,worse,31) output(19,worse,13) output(30,worse,4) output(30,worse,99) output(30,worse,13) output(31,worse,13) output(47,worse,50) output(47,worse,30) output(47,worse,4) output(47,worse,99) output(47,worse,55) output(47,worse,13) output(50,worse,13) output(55,worse,13) output(99,worse,13) output(9,eq,13) output(50,eq,4) output(30,eq,55)
Optimization: 21 14
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,9),1,for(atom(hasStyle(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(4,better,19) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,31) output(9,better,13) output(30,better,4) output(30,better,19) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,4) output(47,better,19) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,31) output(99,better,13) output(4,worse,99) output(4,worse,55) output(4,worse,31) output(9,worse,55) output(19,worse,99) output(19,worse,55) output(19,worse,31) output(19,worse,13) output(30,worse,99) output(30,worse,55) output(47,worse,99) output(47,worse,55) output(50,worse,30) output(50,worse,99) output(50,worse,55) output(99,worse,55) output(9,eq,99) output(47,eq,30) output(50,eq,31)
Optimization: 19 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrice(1))),9) preference(1,(1,2),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),9) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(47,better,30) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(30,worse,4) output(30,worse,19) output(47,worse,50) output(9,eq,50) output(47,eq,4) output(47,eq,19) output(30,eq,99) output(30,eq,55) output(30,eq,31) output(30,eq,13) output(4,eq,19) output(99,eq,55) output(99,eq,31) output(99,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 17 12
Answer: 12
preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),1) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(47,worse,50) output(47,worse,30) output(9,eq,50) output(9,eq,30) output(47,eq,4) output(47,eq,19) output(50,eq,30) output(4,eq,19) output(99,eq,55) output(99,eq,31) output(99,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 14 9
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,5),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),4) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(19,better,55) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(99,better,55) output(99,better,31) output(4,worse,13) output(19,worse,99) output(19,worse,13) output(30,worse,13) output(31,worse,13) output(50,worse,13) output(55,worse,31) output(55,worse,13) output(99,worse,13) output(9,eq,47) output(9,eq,13) output(47,eq,13) output(19,eq,31)
Optimization: 13 11
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,5),1,for(atom(hasStyle(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),2) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,31) output(4,better,13) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,13) output(4,worse,55) output(9,worse,47) output(9,worse,30) output(9,worse,55) output(19,worse,55) output(50,worse,30) output(50,worse,55) output(99,worse,55) output(99,worse,31) output(9,eq,50) output(30,eq,55) output(19,eq,31)
Optimization: 12 11
Answer: 15
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,31) output(99,better,13) output(31,worse,13) output(47,worse,50) output(47,worse,30) output(9,eq,50) output(9,eq,30) output(47,eq,4) output(47,eq,19) output(50,eq,30) output(4,eq,19) output(99,eq,55)
Optimization: 10 10
Answer: 16
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,31) output(99,better,13) output(47,worse,50) output(47,worse,30) output(9,eq,50) output(9,eq,30) output(47,eq,4) output(47,eq,19) output(50,eq,30) output(4,eq,19) output(99,eq,55)
Optimization: 9 10
Answer: 17
preference(1,(1,2),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(47,worse,50) output(47,worse,30) output(9,eq,50) output(9,eq,30) output(47,eq,4) output(47,eq,19) output(50,eq,30) output(4,eq,19)
Optimization: 8 10
Answer: 18
preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,31) output(99,better,13) output(9,worse,47) output(9,eq,50) output(9,eq,30) output(50,eq,30) output(4,eq,19) output(99,eq,55)
Optimization: 6 9
Answer: 19
preference(1,(1,2),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(9,worse,47) output(9,eq,50) output(9,eq,30) output(50,eq,30) output(4,eq,19)
Optimization: 5 9
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,8),1,for(atom(hasStyle(1))),7) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),7) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(19,worse,99) output(19,worse,55) output(19,worse,31) output(19,worse,13)
Optimization: 4 12
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasStyle(1))),7) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),7) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(19,worse,99) output(19,worse,55) output(19,eq,31)
Optimization: 3 13
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,8),1,for(atom(hasStyle(1))),3) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(9,worse,47) output(55,worse,31)
Optimization: 2 13
Answer: 23
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasStyle(1))),3) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(47,eq,50)
Optimization: 1 13
Answer: 24
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,9),1,for(atom(hasOiliness(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 25
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),10) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasOiliness(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,13),1,for(atom(hasStyle(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 12
Answer: 26
preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,13),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 11
Answer: 27
preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,13),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
Answer: 28
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasPrice(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.046 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 28+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 297.956s (Solving: 296.03s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.610s
Threads      : 4        (Winner: 4)

Choices      : 7436238  (Domain: 618620)
Conflicts    : 6707059  (Analyzed: 6707056)
Restarts     : 6602     (Average: 1015.91 Last: 464943)
Model-Level  : 61.1    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6848206  (Deleted: 6491105)
  Binary     : 953      (Ratio:   0.01%)
  Ternary    : 9607     (Ratio:   0.14%)
  Conflict   : 6707056  (Average Length:  229.1 Ratio:  97.94%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 141150   (Average Length:  157.2 Ratio:   2.06%) 
  Distributed: 47159    (Ratio:   0.70% Average LBD: 3.72) 
  Integrated : 141477   (Ratio: 300.00% Unit: 206 Average Jumps: 5.10)
Backjumps    : 6707056  (Average:  1.10 Max:  69 Sum: 7352232)
  Executed   : 6707054  (Average:  1.10 Max:  69 Sum: 7352188 Ratio: 100.00%)
  Bounded    : 2        (Average: 22.00 Max:  43 Sum:     44 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) 
}.
