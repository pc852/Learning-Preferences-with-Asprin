asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(38,eq,2) output(5,eq,33) output(5,eq,6) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(33,eq,2) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(62,eq,2) output(91,eq,7) output(91,eq,1) output(91,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(38,better,18) output(38,better,91) output(5,better,18) output(5,better,91) output(6,better,18) output(6,better,91) output(33,better,18) output(33,better,91) output(62,better,91) output(18,worse,62) output(18,worse,7) output(18,worse,1) output(18,worse,2) output(91,worse,7) output(91,worse,1) output(91,worse,2) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,62) output(38,eq,7) output(38,eq,1) output(38,eq,2) output(5,eq,33) output(5,eq,6) output(5,eq,62) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,62) output(33,eq,7) output(33,eq,1) output(33,eq,2) output(6,eq,62) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(18,eq,91) output(62,eq,7) output(62,eq,1) output(62,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 36 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),6) preference(1,less(weight)) output(5,better,33) output(5,better,62) output(5,better,7) output(6,better,62) output(6,better,7) output(18,better,62) output(18,better,7) output(33,better,7) output(62,better,7) output(91,better,7) output(38,worse,5) output(38,worse,33) output(38,worse,6) output(38,worse,18) output(38,worse,62) output(38,worse,91) output(38,worse,7) output(38,worse,1) output(38,worse,2) output(7,worse,1) output(7,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,1) output(33,worse,2) output(62,worse,91) output(62,worse,1) output(62,worse,2) output(5,eq,6) output(5,eq,18) output(5,eq,91) output(5,eq,1) output(5,eq,2) output(6,eq,18) output(6,eq,91) output(6,eq,1) output(6,eq,2) output(18,eq,91) output(18,eq,1) output(18,eq,2) output(91,eq,1) output(91,eq,2) output(1,eq,2)
Optimization: 35 14
Answer: 4
preference(1,(1,3),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),9) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,62) output(5,better,6) output(5,better,62) output(6,better,62) output(18,better,62) output(33,better,6) output(33,better,62) output(5,worse,18) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(5,worse,2) output(6,worse,18) output(6,worse,91) output(6,worse,7) output(6,worse,1) output(6,worse,2) output(33,worse,18) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(33,worse,2) output(62,worse,91) output(62,worse,7) output(62,worse,1) output(62,worse,2) output(38,eq,18) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(38,eq,2) output(5,eq,33) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(18,eq,2) output(91,eq,7) output(91,eq,1) output(91,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 35 4
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),6) preference(1,less(weight)) output(5,better,33) output(5,better,62) output(5,better,1) output(6,better,62) output(6,better,1) output(7,better,1) output(18,better,62) output(18,better,1) output(33,better,1) output(62,better,1) output(91,better,1) output(38,worse,5) output(38,worse,33) output(38,worse,6) output(38,worse,18) output(38,worse,62) output(38,worse,91) output(38,worse,7) output(38,worse,2) output(1,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,7) output(33,worse,2) output(62,worse,91) output(62,worse,7) output(62,worse,2) output(38,eq,1) output(5,eq,6) output(5,eq,18) output(5,eq,91) output(5,eq,7) output(5,eq,2) output(6,eq,18) output(6,eq,91) output(6,eq,7) output(6,eq,2) output(18,eq,91) output(18,eq,7) output(18,eq,2) output(91,eq,7) output(91,eq,2) output(7,eq,2)
Optimization: 34 13
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,1) output(38,better,2) output(5,better,33) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,1) output(18,better,2) output(62,better,1) output(62,better,2) output(91,better,1) output(91,better,2) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(5,worse,2) output(33,worse,6) output(33,worse,18) output(33,worse,62) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(33,worse,2) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(62,eq,91) output(62,eq,7) output(91,eq,7) output(1,eq,2)
Optimization: 30 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,better,18) output(5,better,91) output(5,better,7) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(62,better,91) output(62,better,7) output(5,worse,33) output(5,worse,6) output(5,worse,62) output(5,worse,1) output(5,worse,2) output(7,worse,1) output(7,worse,2) output(18,worse,62) output(18,worse,1) output(18,worse,2) output(33,worse,6) output(33,worse,1) output(33,worse,2) output(62,worse,1) output(62,worse,2) output(91,worse,1) output(91,worse,2) output(18,eq,91) output(18,eq,7) output(91,eq,7) output(1,eq,2)
Optimization: 21 10
Answer: 8
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),4) preference(1,less(weight)) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(18,better,62) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(38,worse,5) output(6,worse,1) output(6,worse,2) output(7,worse,1) output(7,worse,2) output(18,worse,1) output(18,worse,2) output(62,worse,91) output(62,worse,7) output(62,worse,1) output(62,worse,2) output(91,worse,1) output(91,worse,2) output(38,eq,33) output(18,eq,91) output(18,eq,7) output(91,eq,7) output(1,eq,2)
Optimization: 18 9
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,18) output(5,better,91) output(5,better,7) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(18,better,7) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,2) output(91,better,7) output(38,worse,6) output(5,worse,33) output(5,worse,6) output(5,worse,62) output(5,worse,1) output(7,worse,1) output(7,worse,2) output(18,worse,62) output(18,worse,1) output(18,worse,2) output(33,worse,6) output(33,worse,1) output(62,worse,1) output(91,worse,1) output(91,worse,2) output(5,eq,2) output(18,eq,91)
Optimization: 17 11
Answer: 10
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,2) output(33,better,18) output(33,better,91) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,1) output(62,better,2) output(91,better,2) output(5,worse,7) output(6,worse,7) output(18,worse,62) output(18,worse,7) output(33,worse,7) output(62,worse,7) output(91,worse,7) output(38,eq,7) output(33,eq,6) output(33,eq,62) output(6,eq,62) output(18,eq,91) output(18,eq,1) output(91,eq,1)
Optimization: 14 14
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,1) output(18,better,2) output(33,better,18) output(33,better,91) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,1) output(62,better,2) output(91,better,1) output(91,better,2) output(5,worse,7) output(6,worse,7) output(18,worse,62) output(18,worse,7) output(33,worse,7) output(62,worse,7) output(91,worse,7) output(38,eq,7) output(33,eq,6) output(33,eq,62) output(6,eq,62) output(18,eq,91)
Optimization: 12 14
Answer: 12
preference(1,(1,3),1,for(atom(hasPrice(1))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),6) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,62) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,62) output(33,better,7) output(33,better,1) output(33,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(6,worse,18) output(6,worse,91) output(62,worse,91) output(62,worse,7) output(62,worse,1) output(62,worse,2) output(33,eq,18) output(33,eq,91) output(6,eq,7) output(18,eq,91)
Optimization: 10 10
Answer: 13
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),6) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(38,better,5) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,1) output(38,worse,33) output(1,worse,2) output(5,worse,33) output(18,worse,62) output(18,worse,7) output(91,worse,7) output(18,eq,91) output(18,eq,2) output(91,eq,2)
Optimization: 9 13
Answer: 14
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),6) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(38,better,5) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(18,better,7) output(18,better,1) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(38,worse,33) output(1,worse,2) output(5,worse,33) output(7,worse,2) output(18,worse,62) output(18,eq,91) output(18,eq,2) output(91,eq,2)
Optimization: 8 12
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(1,worse,2) output(5,worse,33) output(5,worse,6) output(7,worse,2) output(18,eq,62) output(18,eq,91) output(62,eq,91)
Optimization: 7 10
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,6) output(5,better,18) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(5,worse,62) output(6,worse,62) output(18,worse,62) output(33,worse,62) output(5,eq,33) output(18,eq,91)
Optimization: 6 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasOiliness(1))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),3) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,1) output(62,better,2) output(91,better,1) output(91,better,2) output(6,worse,7) output(18,worse,7) output(62,worse,91) output(62,worse,7) output(91,worse,7) output(18,eq,91)
Optimization: 6 13
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),5) preference(1,(1,6),1,for(atom(hasPrice(0))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(6,worse,62) output(18,worse,62) output(33,worse,62) output(18,eq,91) output(7,eq,1)
Optimization: 5 14
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(6,worse,62) output(18,worse,62) output(5,eq,33) output(18,eq,91)
Optimization: 4 14
Answer: 20
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(18,eq,62) output(18,eq,91) output(62,eq,91)
Optimization: 3 12
Answer: 21
preference(1,(1,3),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(62,worse,91) output(18,eq,91)
Optimization: 2 12
Progression : [2;2] (Error: 0)
Progression : 2 [ 1;12] (Error: 11)
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,6),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasOiliness(1))),9) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(18,worse,62) output(18,eq,91)
Optimization: 2 11
Progression : 2 [ 2;11] (Error: 4.5)
Answer: 23
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,2),1,for(atom(hasStyle(1))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(62,worse,91) output(18,eq,91)
Optimization: 2 10
Progression : 2 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.048 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 2 10
Bounds       : 2 [3;10]
Calls        : 1
Time         : 297.956s (Solving: 295.99s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.653s
Threads      : 4        (Winner: 4)

Choices      : 5256790  (Domain: 558868)
Conflicts    : 4789964  (Analyzed: 4789958)
Restarts     : 4323     (Average: 1108.02 Last: 257281)
Model-Level  : 38.7    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 4880017  (Deleted: 4652603)
  Binary     : 2436     (Ratio:   0.05%)
  Ternary    : 3074     (Ratio:   0.06%)
  Conflict   : 4789958  (Average Length:  348.2 Ratio:  98.15%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 90059    (Average Length:  339.3 Ratio:   1.85%) 
  Distributed: 30055    (Ratio:   0.63% Average LBD: 3.65) 
  Integrated : 90165    (Ratio: 300.00% Unit: 70 Average Jumps: 8.99)
Backjumps    : 4789958  (Average:  1.08 Max:  63 Sum: 5196498)
  Executed   : 4789953  (Average:  1.08 Max:  63 Sum: 5196413 Ratio: 100.00%)
  Bounded    : 5        (Average: 17.00 Max:  29 Sum:     85 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8708    
  Sum        : 75      
  Count      : 14      
Equivalences : 9340     (Atom=Atom: 496 Body=Body: 230 Other: 8614)
Tight        : Yes
Variables    : 7546     (Eliminated:    0 Frozen: 4886)
Constraints  : 189291   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasStyle(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.
