asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,36) output(19,eq,11) output(19,eq,13) output(19,eq,6) output(19,eq,22) output(19,eq,64) output(19,eq,10) output(19,eq,1) output(19,eq,17) output(36,eq,11) output(36,eq,13) output(36,eq,6) output(36,eq,22) output(36,eq,64) output(36,eq,10) output(36,eq,1) output(36,eq,17) output(11,eq,13) output(11,eq,6) output(11,eq,22) output(11,eq,64) output(11,eq,10) output(11,eq,1) output(11,eq,17) output(13,eq,6) output(13,eq,22) output(13,eq,64) output(13,eq,10) output(13,eq,1) output(13,eq,17) output(6,eq,22) output(6,eq,64) output(6,eq,10) output(6,eq,1) output(6,eq,17) output(22,eq,64) output(22,eq,10) output(22,eq,1) output(22,eq,17) output(64,eq,10) output(64,eq,1) output(64,eq,17) output(10,eq,1) output(10,eq,17) output(1,eq,17)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(6,better,22) output(6,better,10) output(6,better,1) output(6,better,17) output(11,better,13) output(11,better,22) output(11,better,10) output(11,better,1) output(11,better,17) output(64,better,10) output(64,better,1) output(64,better,17) output(13,worse,6) output(13,worse,64) output(19,worse,11) output(19,worse,6) output(19,worse,64) output(22,worse,64) output(36,worse,11) output(36,worse,6) output(36,worse,64) output(19,eq,36) output(19,eq,13) output(19,eq,22) output(19,eq,10) output(19,eq,1) output(19,eq,17) output(36,eq,13) output(36,eq,22) output(36,eq,10) output(36,eq,1) output(36,eq,17) output(11,eq,6) output(11,eq,64) output(13,eq,22) output(13,eq,10) output(13,eq,1) output(13,eq,17) output(6,eq,64) output(22,eq,10) output(22,eq,1) output(22,eq,17) output(10,eq,1) output(10,eq,17) output(1,eq,17)
Optimization: 33 8
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(19,better,13) output(19,better,6) output(19,better,64) output(19,better,10) output(19,better,1) output(22,better,64) output(22,better,10) output(22,better,1) output(36,better,13) output(36,better,6) output(36,better,64) output(36,better,10) output(36,better,1) output(1,worse,17) output(6,worse,22) output(6,worse,17) output(10,worse,17) output(13,worse,22) output(13,worse,17) output(19,worse,36) output(19,worse,11) output(19,worse,22) output(19,worse,17) output(36,worse,11) output(64,worse,17) output(36,eq,22) output(36,eq,17) output(13,eq,6) output(13,eq,64) output(13,eq,10) output(13,eq,1) output(6,eq,64) output(6,eq,10) output(6,eq,1) output(22,eq,17) output(64,eq,10) output(64,eq,1) output(10,eq,1)
Optimization: 25 13
Answer: 4
preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),5) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,10) output(64,better,10) output(64,better,17) output(10,worse,1) output(10,worse,17) output(11,worse,13) output(11,worse,6) output(11,worse,22) output(11,worse,64) output(11,worse,10) output(11,worse,1) output(11,worse,17) output(13,worse,6) output(13,worse,1) output(22,worse,64) output(22,worse,1) output(36,worse,13) output(36,worse,6) output(36,worse,22) output(36,worse,64) output(36,worse,10) output(36,worse,1) output(36,worse,17) output(64,worse,1) output(19,eq,6) output(36,eq,11) output(22,eq,17)
Optimization: 24 13
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(6,better,64) output(6,better,10) output(6,better,1) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(19,better,13) output(19,better,64) output(19,better,10) output(19,better,1) output(22,better,64) output(22,better,10) output(22,better,1) output(36,better,13) output(36,better,6) output(36,better,64) output(36,better,10) output(36,better,1) output(1,worse,17) output(6,worse,22) output(6,worse,17) output(10,worse,17) output(13,worse,6) output(13,worse,22) output(13,worse,17) output(19,worse,36) output(19,worse,11) output(19,worse,22) output(19,worse,17) output(36,worse,11) output(64,worse,17) output(19,eq,6) output(36,eq,22) output(36,eq,17) output(13,eq,64) output(13,eq,10) output(13,eq,1) output(22,eq,17) output(64,eq,10) output(64,eq,1) output(10,eq,1)
Optimization: 23 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(11,better,13) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,64) output(13,better,10) output(13,better,1) output(19,better,64) output(19,better,10) output(19,better,1) output(22,better,64) output(22,better,10) output(22,better,1) output(36,better,64) output(36,better,10) output(36,better,1) output(1,worse,17) output(10,worse,17) output(13,worse,6) output(19,worse,36) output(19,worse,11) output(19,worse,13) output(19,worse,6) output(19,worse,22) output(19,worse,17) output(36,worse,11) output(36,worse,6) output(64,worse,17) output(36,eq,13) output(36,eq,22) output(36,eq,17) output(11,eq,6) output(13,eq,22) output(13,eq,17) output(22,eq,17) output(64,eq,10) output(64,eq,1) output(10,eq,1)
Optimization: 22 12
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(6,better,64) output(6,better,10) output(6,better,1) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,64) output(13,better,10) output(13,better,1) output(19,better,64) output(19,better,10) output(19,better,1) output(22,better,64) output(22,better,10) output(22,better,1) output(36,better,6) output(36,better,64) output(36,better,10) output(36,better,1) output(1,worse,17) output(6,worse,22) output(6,worse,17) output(10,worse,17) output(19,worse,36) output(19,worse,11) output(19,worse,13) output(19,worse,22) output(19,worse,17) output(36,worse,11) output(64,worse,17) output(19,eq,6) output(36,eq,13) output(36,eq,22) output(36,eq,17) output(13,eq,22) output(13,eq,17) output(22,eq,17) output(64,eq,10) output(64,eq,1) output(10,eq,1)
Optimization: 21 13
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(10,better,1) output(10,better,17) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,1) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,6) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,64) output(22,better,10) output(22,better,1) output(22,better,17) output(36,better,11) output(36,better,13) output(36,better,6) output(36,better,22) output(36,better,64) output(36,better,10) output(36,better,1) output(36,better,17) output(64,better,10) output(64,better,1) output(64,better,17)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(10,better,1) output(10,better,17) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,1) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,6) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,64) output(22,better,10) output(22,better,1) output(22,better,17) output(36,better,11) output(36,better,13) output(36,better,6) output(36,better,22) output(36,better,64) output(36,better,10) output(36,better,1) output(36,better,17) output(64,better,10) output(64,better,1) output(64,better,17)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasPrice(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),6) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(10,better,1) output(10,better,17) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,1) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,6) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,64) output(22,better,10) output(22,better,1) output(22,better,17) output(36,better,11) output(36,better,13) output(36,better,6) output(36,better,22) output(36,better,64) output(36,better,10) output(36,better,1) output(36,better,17) output(64,better,10) output(64,better,1) output(64,better,17)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.073 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 298.062s (Solving: 296.06s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1102.281s
Threads      : 4        (Winner: 4)

Choices      : 7117204  (Domain: 626033)
Conflicts    : 5625149  (Analyzed: 5625146)
Restarts     : 5603     (Average: 1003.95 Last: 292565)
Model-Level  : 60.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 5694421  (Deleted: 5461252)
  Binary     : 875      (Ratio:   0.02%)
  Ternary    : 10066    (Ratio:   0.18%)
  Conflict   : 5625146  (Average Length:  236.3 Ratio:  98.78%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 69275    (Average Length:   35.5 Ratio:   1.22%) 
  Distributed: 23124    (Ratio:   0.41% Average LBD: 3.63) 
  Integrated : 69372    (Ratio: 300.00% Unit: 164 Average Jumps: 7.90)
Backjumps    : 5625146  (Average:  1.21 Max: 494 Sum: 6778860)
  Executed   : 5625145  (Average:  1.21 Max: 494 Sum: 6778816 Ratio: 100.00%)
  Bounded    : 1        (Average: 44.00 Max:  44 Sum:     44 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) 
}.
