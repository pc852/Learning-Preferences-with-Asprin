asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(12,eq,33) output(12,eq,14) output(12,eq,5) output(12,eq,21) output(12,eq,52) output(12,eq,60) output(12,eq,49) output(12,eq,44) output(12,eq,23) output(33,eq,14) output(33,eq,5) output(33,eq,21) output(33,eq,52) output(33,eq,60) output(33,eq,49) output(33,eq,44) output(33,eq,23) output(14,eq,5) output(14,eq,21) output(14,eq,52) output(14,eq,60) output(14,eq,49) output(14,eq,44) output(14,eq,23) output(5,eq,21) output(5,eq,52) output(5,eq,60) output(5,eq,49) output(5,eq,44) output(5,eq,23) output(21,eq,52) output(21,eq,60) output(21,eq,49) output(21,eq,44) output(21,eq,23) output(52,eq,60) output(52,eq,49) output(52,eq,44) output(52,eq,23) output(60,eq,49) output(60,eq,44) output(60,eq,23) output(49,eq,44) output(49,eq,23) output(44,eq,23)
Optimization: 45 0
Answer: 2
preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(12,better,5) output(12,better,52) output(12,better,60) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,52) output(14,better,60) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,52) output(33,better,60) output(33,better,44) output(33,better,23) output(49,better,44) output(49,better,23) output(60,worse,49) output(5,worse,21) output(5,worse,49) output(52,worse,49) output(12,eq,33) output(12,eq,14) output(12,eq,21) output(12,eq,49) output(33,eq,14) output(33,eq,21) output(33,eq,49) output(14,eq,21) output(14,eq,49) output(5,eq,52) output(5,eq,60) output(5,eq,44) output(5,eq,23) output(21,eq,49) output(52,eq,60) output(52,eq,44) output(52,eq,23) output(60,eq,44) output(60,eq,23) output(44,eq,23)
Optimization: 24 1
Answer: 3
preference(1,(1,3),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(12,better,5) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(5,worse,21) output(12,eq,33) output(12,eq,14) output(12,eq,21) output(33,eq,14) output(33,eq,21) output(14,eq,21) output(5,eq,52) output(5,eq,60) output(5,eq,49) output(5,eq,44) output(5,eq,23) output(52,eq,60) output(52,eq,49) output(52,eq,44) output(52,eq,23) output(60,eq,49) output(60,eq,44) output(60,eq,23) output(49,eq,44) output(49,eq,23) output(44,eq,23)
Optimization: 22 3
Answer: 4
preference(1,(1,9),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(5,better,21) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,21) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,21) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(33,better,21) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(21,worse,52) output(12,eq,33) output(12,eq,14) output(12,eq,5) output(12,eq,52) output(33,eq,14) output(33,eq,5) output(33,eq,52) output(14,eq,5) output(14,eq,52) output(5,eq,52) output(21,eq,60) output(21,eq,49) output(21,eq,44) output(21,eq,23) output(60,eq,49) output(60,eq,44) output(60,eq,23) output(49,eq,44) output(49,eq,23) output(44,eq,23)
Optimization: 21 4
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasStyle(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,44) output(52,better,23) output(5,worse,21) output(5,worse,60) output(52,worse,60) output(12,eq,33) output(12,eq,14) output(33,eq,14) output(5,eq,52) output(5,eq,49) output(21,eq,60) output(52,eq,49)
Optimization: 10 14
Answer: 6
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasStyle(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasOiliness(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(21,worse,52) output(21,worse,60) output(21,worse,49) output(12,eq,33) output(12,eq,14) output(33,eq,14) output(5,eq,52) output(60,eq,49)
Optimization: 8 13
Answer: 7
preference(1,(1,1),1,for(atom(hasOiliness(1))),9) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),7) preference(1,(1,5),1,for(atom(hasStyle(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(44,worse,23) output(49,worse,44) output(49,worse,23) output(12,eq,33) output(12,eq,14) output(33,eq,14) output(5,eq,21) output(60,eq,23)
Optimization: 8 12
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,3),1,for(atom(hasStyle(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),10) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,12),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(60,better,44) output(60,better,23) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(60,worse,49) output(5,worse,21) output(44,worse,23) output(12,eq,33) output(12,eq,14) output(33,eq,14) output(5,eq,52)
Optimization: 7 10
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(21,worse,52) output(12,eq,33) output(12,eq,14) output(33,eq,14) output(5,eq,52) output(60,eq,49)
Optimization: 6 12
Answer: 10
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,12),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,23) output(52,better,49) output(52,better,44) output(52,better,23) output(49,worse,44) output(12,eq,33) output(12,eq,14) output(33,eq,14) output(52,eq,60)
Optimization: 5 10
Answer: 11
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,5),1,for(atom(hasOiliness(0))),3) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(44,worse,23) output(12,eq,33) output(12,eq,14) output(33,eq,14)
Optimization: 4 10
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),9) preference(1,(1,8),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasStyle(0))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),1) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(12,eq,33) output(12,eq,14) output(33,eq,14)
Optimization: 3 9
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),9) preference(1,(1,8),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),1) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(12,eq,33) output(12,eq,14) output(33,eq,14)
Optimization: 3 8
Progression : 3 [1;8] (Error: 7)
Progression : 3 [2;8] (Error: 3)
Answer: 14
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(12,eq,33) output(12,eq,14) output(33,eq,14)
Optimization: 3 7
Answer: 15
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(60,better,49) output(60,better,44) output(60,better,23) output(5,better,21) output(5,better,52) output(5,better,60) output(5,better,49) output(5,better,44) output(5,better,23) output(12,better,5) output(12,better,21) output(12,better,52) output(12,better,60) output(12,better,49) output(12,better,44) output(12,better,23) output(14,better,5) output(14,better,21) output(14,better,52) output(14,better,60) output(14,better,49) output(14,better,44) output(14,better,23) output(21,better,52) output(21,better,60) output(21,better,49) output(21,better,44) output(21,better,23) output(33,better,5) output(33,better,21) output(33,better,52) output(33,better,60) output(33,better,49) output(33,better,44) output(33,better,23) output(44,better,23) output(49,better,44) output(49,better,23) output(52,better,60) output(52,better,49) output(52,better,44) output(52,better,23) output(12,eq,33) output(12,eq,14) output(33,eq,14)
Optimization: 3 6
Progression : 3 [3;6] (Error: 1)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.065 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 3 6
Calls        : 1
Time         : 298.112s (Solving: 296.18s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.395s
Threads      : 4        (Winner: 4)

Choices      : 8441678  (Domain: 718513)
Conflicts    : 6788920  (Analyzed: 6788917)
Restarts     : 5806     (Average: 1169.29 Last: 314990)
Model-Level  : 47.8    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6846893  (Deleted: 6593187)
  Binary     : 548      (Ratio:   0.01%)
  Ternary    : 8311     (Ratio:   0.12%)
  Conflict   : 6788917  (Average Length:  229.2 Ratio:  99.15%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 57976    (Average Length:   33.9 Ratio:   0.85%) 
  Distributed: 19348    (Ratio:   0.28% Average LBD: 3.61) 
  Integrated : 58044    (Ratio: 300.00% Unit: 255 Average Jumps: 7.00)
Backjumps    : 6788917  (Average:  1.20 Max: 1633 Sum: 8147844)
  Executed   : 6788915  (Average:  1.20 Max: 1633 Sum: 8147817 Ratio: 100.00%)
  Bounded    : 2        (Average: 13.50 Max:  26 Sum:     27 Ratio:   0.00%)

Rules        : 185977  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10459   
Bodies       : 8690    
  Sum        : 57      
  Count      : 14      
Equivalences : 9295     (Atom=Atom: 531 Body=Body: 271 Other: 8493)
Tight        : Yes
Variables    : 7509     (Eliminated:    0 Frozen: 4849)
Constraints  : 188536   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(1)) ; 
  10 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasPrice(0)) 
}.
