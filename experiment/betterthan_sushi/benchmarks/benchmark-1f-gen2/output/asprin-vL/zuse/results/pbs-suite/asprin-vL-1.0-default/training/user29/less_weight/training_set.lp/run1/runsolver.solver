asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,12) output(8,eq,0) output(8,eq,10) output(8,eq,17) output(8,eq,64) output(8,eq,25) output(4,eq,11) output(4,eq,16) output(4,eq,12) output(4,eq,0) output(4,eq,10) output(4,eq,17) output(4,eq,64) output(4,eq,25) output(11,eq,16) output(11,eq,12) output(11,eq,0) output(11,eq,10) output(11,eq,17) output(11,eq,64) output(11,eq,25) output(16,eq,12) output(16,eq,0) output(16,eq,10) output(16,eq,17) output(16,eq,64) output(16,eq,25) output(12,eq,0) output(12,eq,10) output(12,eq,17) output(12,eq,64) output(12,eq,25) output(0,eq,10) output(0,eq,17) output(0,eq,64) output(0,eq,25) output(10,eq,17) output(10,eq,64) output(10,eq,25) output(17,eq,64) output(17,eq,25) output(64,eq,25)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(4,better,0) output(4,better,17) output(8,better,0) output(8,better,17) output(10,better,17) output(11,better,0) output(11,better,17) output(12,better,0) output(12,better,17) output(16,better,0) output(16,better,17) output(0,worse,10) output(0,worse,64) output(0,worse,25) output(17,worse,64) output(17,worse,25) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,12) output(8,eq,10) output(8,eq,64) output(8,eq,25) output(4,eq,11) output(4,eq,16) output(4,eq,12) output(4,eq,10) output(4,eq,64) output(4,eq,25) output(11,eq,16) output(11,eq,12) output(11,eq,10) output(11,eq,64) output(11,eq,25) output(16,eq,12) output(16,eq,10) output(16,eq,64) output(16,eq,25) output(12,eq,10) output(12,eq,64) output(12,eq,25) output(0,eq,17) output(10,eq,64) output(10,eq,25) output(64,eq,25)
Optimization: 34 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),2) preference(1,less(weight)) output(4,better,0) output(4,better,17) output(8,better,4) output(8,better,0) output(8,better,17) output(10,better,17) output(11,better,0) output(11,better,17) output(12,better,0) output(12,better,17) output(16,better,0) output(16,better,17) output(0,worse,10) output(0,worse,64) output(0,worse,25) output(4,worse,11) output(4,worse,16) output(4,worse,12) output(4,worse,10) output(4,worse,64) output(4,worse,25) output(17,worse,64) output(17,worse,25) output(8,eq,11) output(8,eq,16) output(8,eq,12) output(8,eq,10) output(8,eq,64) output(8,eq,25) output(11,eq,16) output(11,eq,12) output(11,eq,10) output(11,eq,64) output(11,eq,25) output(16,eq,12) output(16,eq,10) output(16,eq,64) output(16,eq,25) output(12,eq,10) output(12,eq,64) output(12,eq,25) output(0,eq,17) output(10,eq,64) output(10,eq,25) output(64,eq,25)
Optimization: 33 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),9) preference(1,less(weight)) output(0,better,64) output(4,better,11) output(4,better,16) output(4,better,0) output(4,better,17) output(4,better,64) output(10,better,17) output(10,better,64) output(12,better,0) output(12,better,17) output(12,better,64) output(16,better,0) output(16,better,17) output(16,better,64) output(17,better,64) output(0,worse,10) output(0,worse,25) output(8,worse,4) output(8,worse,11) output(8,worse,16) output(8,worse,12) output(8,worse,0) output(8,worse,10) output(8,worse,17) output(8,worse,64) output(8,worse,25) output(11,worse,16) output(11,worse,12) output(11,worse,0) output(11,worse,10) output(11,worse,17) output(11,worse,25) output(16,worse,12) output(16,worse,10) output(16,worse,25) output(17,worse,25) output(64,worse,25) output(4,eq,12) output(4,eq,10) output(4,eq,25) output(11,eq,64) output(12,eq,10) output(12,eq,25) output(0,eq,17) output(10,eq,25)
Optimization: 30 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),10) preference(1,less(weight)) output(0,better,64) output(4,better,11) output(4,better,16) output(4,better,0) output(4,better,17) output(4,better,64) output(10,better,17) output(10,better,64) output(11,better,64) output(12,better,0) output(12,better,17) output(12,better,64) output(16,better,0) output(16,better,17) output(16,better,64) output(17,better,64) output(0,worse,10) output(0,worse,25) output(8,worse,4) output(8,worse,11) output(8,worse,16) output(8,worse,12) output(8,worse,0) output(8,worse,10) output(8,worse,17) output(8,worse,25) output(11,worse,16) output(11,worse,12) output(11,worse,0) output(11,worse,10) output(11,worse,17) output(11,worse,25) output(16,worse,12) output(16,worse,10) output(16,worse,25) output(17,worse,25) output(64,worse,25) output(8,eq,64) output(4,eq,12) output(4,eq,10) output(4,eq,25) output(12,eq,10) output(12,eq,25) output(0,eq,17) output(10,eq,25)
Optimization: 29 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,64) output(11,better,25) output(12,better,64) output(12,better,25) output(17,better,64) output(17,better,25) output(4,worse,0) output(4,worse,10) output(4,worse,17) output(8,worse,0) output(8,worse,10) output(8,worse,17) output(10,worse,17) output(11,worse,0) output(11,worse,10) output(11,worse,17) output(12,worse,0) output(12,worse,10) output(12,worse,17) output(16,worse,12) output(16,worse,0) output(16,worse,10) output(16,worse,17) output(16,worse,64) output(16,worse,25) output(0,eq,17) output(64,eq,25)
Optimization: 21 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),5) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,64) output(11,better,25) output(12,better,64) output(12,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(4,worse,0) output(4,worse,10) output(4,worse,17) output(8,worse,0) output(8,worse,10) output(8,worse,17) output(10,worse,17) output(11,worse,0) output(11,worse,10) output(11,worse,17) output(12,worse,0) output(12,worse,10) output(12,worse,17) output(16,worse,12) output(16,worse,0) output(16,worse,10) output(16,worse,17) output(16,worse,64) output(16,worse,25) output(0,eq,17)
Optimization: 20 13
Answer: 8
preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,7),1,for(atom(hasOiliness(1))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,11),1,for(atom(hasOiliness(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(4,worse,11) output(4,worse,16) output(4,worse,12) output(8,worse,11) output(8,worse,16) output(8,worse,12) output(10,worse,17) output(8,eq,4) output(11,eq,16) output(0,eq,17)
Optimization: 10 8
Answer: 9
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasPrice(0))),4) preference(1,(1,9),1,for(atom(hasOiliness(0))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),9) preference(1,less(weight)) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,11) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,0) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(0,worse,10) output(11,worse,16) output(11,worse,12) output(11,worse,10) output(8,eq,4) output(8,eq,16) output(4,eq,16) output(12,eq,10) output(0,eq,17)
Optimization: 9 10
Answer: 10
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),9) preference(1,less(weight)) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,0) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,0) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(0,worse,10) output(11,worse,12) output(11,worse,10) output(16,worse,12) output(16,worse,10) output(8,eq,4) output(12,eq,10) output(0,eq,17)
Optimization: 8 10
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,2),1,for(atom(hasOiliness(0))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,10) output(12,better,64) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(10,worse,17) output(10,worse,25) output(12,worse,0) output(12,worse,17) output(12,worse,25) output(64,worse,25) output(0,eq,17)
Optimization: 7 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrice(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,8),1,for(atom(hasStyle(1))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),5) preference(1,less(weight)) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,25) output(64,better,25) output(0,worse,10) output(0,worse,64) output(17,worse,64) output(8,eq,4) output(12,eq,10) output(0,eq,17)
Optimization: 6 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,6),1,for(atom(hasOiliness(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(0,better,64) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(0,worse,10) output(0,worse,25) output(17,worse,25) output(64,worse,25) output(0,eq,17)
Optimization: 5 13
Progression : [2;5] (Error: 1.5)
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,13),1,for(atom(hasOiliness(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(10,worse,17) output(16,worse,12) output(8,eq,4) output(0,eq,17)
Optimization: 4 12
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,5),1,for(atom(hasStyle(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(0,worse,10) output(12,worse,10) output(0,eq,17)
Optimization: 3 14
Answer: 16
preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,5),1,for(atom(hasStyle(1))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(0,worse,10) output(0,eq,17)
Optimization: 2 14
Progression : 2 [ 1;14] (Error: 13)
Answer: 17
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasStyle(1))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasPrice(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(0,worse,10) output(0,eq,17)
Optimization: 2 13
Progression : 2 [ 2;13] (Error: 5.5)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrice(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),5) preference(1,(1,6),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,13),1,for(atom(hasStyle(1))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),5) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(10,worse,17) output(0,eq,17)
Optimization: 2 12
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),1) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(10,worse,17) output(0,eq,17)
Optimization: 2 10
Progression : 2 [ 3;10] (Error: 2.33333)
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),9) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(10,worse,17) output(0,eq,17)
Optimization: 2 9
Answer: 21
preference(1,(1,3),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,9),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25) output(10,worse,17) output(0,eq,17)
Optimization: 2 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.050 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 2 8
Bounds       : 2 [3;8]
Calls        : 1
Time         : 298.102s (Solving: 296.18s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.438s
Threads      : 4        (Winner: 4)

Choices      : 8200857  (Domain: 688728)
Conflicts    : 7421926  (Analyzed: 7421922)
Restarts     : 6505     (Average: 1140.96 Last: 611217)
Model-Level  : 44.0    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 7612021  (Deleted: 7228028)
  Binary     : 2515     (Ratio:   0.03%)
  Ternary    : 7120     (Ratio:   0.09%)
  Conflict   : 7421922  (Average Length:  310.2 Ratio:  97.50%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 190099   (Average Length:  319.7 Ratio:   2.50%) 
  Distributed: 63429    (Ratio:   0.85% Average LBD: 3.77) 
  Integrated : 190287   (Ratio: 300.00% Unit: 98 Average Jumps: 9.93)
Backjumps    : 7421922  (Average:  1.09 Max:  97 Sum: 8118483)
  Executed   : 7421918  (Average:  1.09 Max:  97 Sum: 8118402 Ratio: 100.00%)
  Bounded    : 4        (Average: 20.25 Max:  36 Sum:     81 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8708    
  Sum        : 75      
  Count      : 14      
Equivalences : 9340     (Atom=Atom: 496 Body=Body: 230 Other: 8614)
Tight        : Yes
Variables    : 7546     (Eliminated:    0 Frozen: 4886)
Constraints  : 189291   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(2)) 
}.
