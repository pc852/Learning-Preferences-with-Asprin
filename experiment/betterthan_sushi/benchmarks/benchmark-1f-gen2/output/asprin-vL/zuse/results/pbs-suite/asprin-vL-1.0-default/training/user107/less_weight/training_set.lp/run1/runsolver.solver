asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,4) output(1,eq,3) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,78) output(1,eq,19) output(1,eq,8) output(1,eq,59) output(4,eq,3) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,19) output(4,eq,8) output(4,eq,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,78) output(3,eq,19) output(3,eq,8) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,19) output(23,eq,8) output(23,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,19) output(5,eq,8) output(5,eq,59) output(17,eq,78) output(17,eq,19) output(17,eq,8) output(17,eq,59) output(78,eq,19) output(78,eq,8) output(78,eq,59) output(19,eq,8) output(19,eq,59) output(8,eq,59)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,19) output(1,better,8) output(3,better,19) output(3,better,8) output(4,better,19) output(4,better,8) output(5,better,19) output(5,better,8) output(17,better,19) output(17,better,8) output(23,better,19) output(23,better,8) output(78,better,19) output(78,better,8) output(8,worse,59) output(19,worse,59) output(1,eq,4) output(1,eq,3) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,78) output(1,eq,59) output(4,eq,3) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,78) output(4,eq,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,78) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,78) output(23,eq,59) output(5,eq,17) output(5,eq,78) output(5,eq,59) output(17,eq,78) output(17,eq,59) output(78,eq,59) output(19,eq,8)
Optimization: 31 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,78) output(23,better,19) output(23,better,8) output(8,worse,59) output(19,worse,59) output(78,worse,19) output(78,worse,8) output(78,worse,59) output(1,eq,4) output(1,eq,3) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,59) output(4,eq,3) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,59) output(5,eq,17) output(5,eq,59) output(17,eq,59) output(19,eq,8)
Optimization: 27 13
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,78) output(23,better,19) output(23,better,8) output(78,better,19) output(78,better,8) output(8,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,4) output(1,eq,3) output(1,eq,23) output(1,eq,5) output(1,eq,17) output(1,eq,59) output(4,eq,3) output(4,eq,23) output(4,eq,5) output(4,eq,17) output(4,eq,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(3,eq,59) output(23,eq,5) output(23,eq,17) output(23,eq,59) output(5,eq,17) output(5,eq,59) output(17,eq,59) output(19,eq,8)
Optimization: 25 13
Answer: 5
preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(1,better,19) output(1,better,8) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(78,better,19) output(78,better,8) output(1,worse,4) output(1,worse,3) output(1,worse,23) output(1,worse,5) output(1,worse,17) output(1,worse,59) output(3,worse,23) output(3,worse,17) output(3,worse,59) output(4,worse,23) output(4,worse,17) output(4,worse,59) output(5,worse,17) output(5,worse,59) output(8,worse,59) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,78) output(4,eq,3) output(4,eq,5) output(3,eq,5) output(23,eq,59) output(19,eq,8)
Optimization: 24 6
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(1,better,3) output(1,better,5) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,3) output(4,better,5) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,78) output(23,better,19) output(23,better,8) output(3,worse,23) output(3,worse,17) output(3,worse,59) output(5,worse,17) output(5,worse,59) output(8,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,4) output(1,eq,23) output(1,eq,17) output(1,eq,59) output(4,eq,23) output(4,eq,17) output(4,eq,59) output(3,eq,5) output(23,eq,17) output(23,eq,59) output(17,eq,59) output(78,eq,19) output(78,eq,8) output(19,eq,8)
Optimization: 22 13
Answer: 7
preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(1,better,19) output(1,better,8) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(78,better,19) output(78,better,8) output(1,worse,4) output(1,worse,3) output(1,worse,23) output(1,worse,5) output(1,worse,17) output(1,worse,59) output(3,worse,23) output(3,worse,59) output(4,worse,23) output(4,worse,59) output(5,worse,59) output(8,worse,59) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,78) output(4,eq,3) output(4,eq,5) output(3,eq,5) output(23,eq,59) output(19,eq,8)
Optimization: 21 6
Answer: 8
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),3) preference(1,(1,5),1,for(atom(hasStyle(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,12),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,4) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(1,worse,3) output(1,worse,23) output(1,worse,5) output(1,worse,17) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,59) output(8,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,59) output(3,eq,23) output(3,eq,5) output(3,eq,17) output(23,eq,5) output(23,eq,17) output(5,eq,17) output(19,eq,8)
Optimization: 20 13
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),2) preference(1,less(weight)) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(78,better,19) output(78,better,8) output(3,worse,23) output(3,worse,59) output(5,worse,59) output(8,worse,59) output(17,worse,78) output(17,worse,19) output(17,worse,8) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,4) output(1,eq,23) output(1,eq,59) output(4,eq,23) output(4,eq,59) output(3,eq,5) output(23,eq,59) output(19,eq,8)
Optimization: 18 14
Answer: 10
preference(1,(1,4),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(1,worse,4) output(1,worse,3) output(1,worse,23) output(1,worse,5) output(1,worse,17) output(1,worse,59) output(3,worse,23) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(8,worse,59) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(4,eq,59) output(3,eq,5) output(19,eq,8)
Optimization: 17 8
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),5) preference(1,less(weight)) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(78,better,19) output(78,better,8) output(3,worse,23) output(3,worse,59) output(5,worse,59) output(8,worse,59) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,4) output(1,eq,23) output(1,eq,59) output(4,eq,23) output(4,eq,59) output(3,eq,5) output(23,eq,59) output(19,eq,8)
Optimization: 15 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,4),1,for(atom(hasOiliness(1))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,8),1,for(atom(hasStyle(1))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),9) preference(1,less(weight)) output(1,better,4) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(1,worse,3) output(1,worse,23) output(1,worse,5) output(1,worse,17) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,17) output(4,worse,78) output(4,worse,59) output(8,worse,59) output(19,worse,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 15 13
Answer: 13
preference(1,(1,1),1,for(atom(hasStyle(1))),9) preference(1,(1,2),1,for(atom(hasOiliness(0))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,4),1,for(atom(hasPrice(0))),4) preference(1,(1,5),1,for(atom(hasOiliness(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),7) preference(1,less(weight)) output(1,better,4) output(1,better,23) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,17) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,19) output(17,better,8) output(17,better,59) output(23,better,17) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(4,worse,78) output(8,worse,59) output(17,worse,78) output(19,worse,59) output(23,worse,5) output(1,eq,3) output(1,eq,5) output(3,eq,5) output(23,eq,78) output(19,eq,8)
Optimization: 13 13
Answer: 14
preference(1,(1,4),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(3,worse,23) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(8,worse,59) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(1,eq,23) output(4,eq,59) output(3,eq,5) output(19,eq,8)
Optimization: 12 7
Answer: 15
preference(1,(1,4),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(3,worse,23) output(4,worse,3) output(4,worse,23) output(4,worse,5) output(8,worse,59) output(17,worse,59) output(19,worse,59) output(78,worse,59) output(4,eq,59) output(3,eq,5) output(19,eq,8)
Optimization: 11 8
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),9) preference(1,less(weight)) output(1,better,3) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(1,worse,23) output(3,worse,23) output(3,worse,17) output(4,worse,23) output(5,worse,17) output(1,eq,4) output(3,eq,5) output(3,eq,78) output(5,eq,78) output(19,eq,8)
Optimization: 10 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),9) preference(1,less(weight)) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(3,worse,17) output(5,worse,17) output(1,eq,4) output(3,eq,5) output(3,eq,78) output(23,eq,17) output(5,eq,78) output(19,eq,8)
Optimization: 9 13
Answer: 18
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,59) output(3,worse,23) output(1,eq,4) output(3,eq,5) output(3,eq,17) output(5,eq,17) output(78,eq,19) output(78,eq,8) output(19,eq,8)
Optimization: 8 13
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasStyle(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasPrice(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasPrice(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(17,better,19) output(17,better,8) output(17,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(4,worse,23) output(3,eq,5) output(17,eq,78) output(19,eq,8) output(19,eq,59) output(8,eq,59)
Optimization: 7 11
Progression : [3;7] (Error: 1.33333)
Answer: 20
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasStyle(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(4,eq,23) output(3,eq,5) output(3,eq,17) output(5,eq,17) output(19,eq,8)
Optimization: 6 12
Answer: 21
preference(1,(1,2),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasStyle(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),9) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(4,eq,23) output(3,eq,5) output(19,eq,8)
Optimization: 4 12
Answer: 22
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(3,eq,5) output(19,eq,8)
Optimization: 3 12
Progression : 3 [ 1;12] (Error: 11)
Answer: 23
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 11
Answer: 24
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 10
Progression : 3 [ 2;10] (Error: 4)
Answer: 25
preference(1,(1,3),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,4),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,5) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(3,worse,23) output(3,eq,5) output(19,eq,8)
Optimization: 3 9
Progression : 3 [3;9] (Error: 2)
Answer: 26
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(1,better,4) output(1,better,3) output(1,better,23) output(1,better,5) output(1,better,17) output(1,better,78) output(1,better,19) output(1,better,8) output(1,better,59) output(3,better,23) output(3,better,17) output(3,better,78) output(3,better,19) output(3,better,8) output(3,better,59) output(4,better,3) output(4,better,23) output(4,better,5) output(4,better,17) output(4,better,78) output(4,better,19) output(4,better,8) output(4,better,59) output(5,better,17) output(5,better,78) output(5,better,19) output(5,better,8) output(5,better,59) output(8,better,59) output(17,better,78) output(17,better,19) output(17,better,8) output(17,better,59) output(19,better,59) output(23,better,17) output(23,better,78) output(23,better,19) output(23,better,8) output(23,better,59) output(78,better,19) output(78,better,8) output(78,better,59) output(23,worse,5) output(3,eq,5) output(19,eq,8)
Optimization: 3 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.022 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 26+
  Optimum    : unknown
Optimization : 3 8
Bounds       : 3 [3;8]
Calls        : 1
Time         : 298.202s (Solving: 296.27s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.827s
Threads      : 4        (Winner: 4)

Choices      : 10820169 (Domain: 598082)
Conflicts    : 7222757  (Analyzed: 7222753)
Restarts     : 5393     (Average: 1339.28 Last: 522763)
Model-Level  : 224.2   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 7337176  (Deleted: 6985846)
  Binary     : 708      (Ratio:   0.01%)
  Ternary    : 7964     (Ratio:   0.11%)
  Conflict   : 7222753  (Average Length:  248.2 Ratio:  98.44%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 114423   (Average Length:  251.4 Ratio:   1.56%) 
  Distributed: 38282    (Ratio:   0.53% Average LBD: 3.64) 
  Integrated : 114846   (Ratio: 300.00% Unit: 158 Average Jumps: 20.96)
Backjumps    : 7222753  (Average:  1.42 Max: 470 Sum: 10286258)
  Executed   : 7222748  (Average:  1.42 Max: 470 Sum: 10286183 Ratio: 100.00%)
  Bounded    : 5        (Average: 15.00 Max:  27 Sum:     75 Ratio:   0.00%)

Rules        : 185980  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10459   
Bodies       : 8693    
  Sum        : 60      
  Count      : 14      
Equivalences : 9310     (Atom=Atom: 529 Body=Body: 266 Other: 8515)
Tight        : Yes
Variables    : 7513     (Eliminated:    0 Frozen: 4853)
Constraints  : 188541   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasStyle(1)) ; 
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  9 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.
