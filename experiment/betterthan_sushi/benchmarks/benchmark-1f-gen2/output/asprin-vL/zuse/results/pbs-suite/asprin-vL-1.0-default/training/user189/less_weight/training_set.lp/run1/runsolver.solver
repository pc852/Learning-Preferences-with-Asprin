asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(12,eq,24) output(12,eq,3) output(12,eq,22) output(12,eq,1) output(12,eq,25) output(12,eq,2) output(12,eq,27) output(12,eq,72) output(12,eq,64) output(24,eq,3) output(24,eq,22) output(24,eq,1) output(24,eq,25) output(24,eq,2) output(24,eq,27) output(24,eq,72) output(24,eq,64) output(3,eq,22) output(3,eq,1) output(3,eq,25) output(3,eq,2) output(3,eq,27) output(3,eq,72) output(3,eq,64) output(22,eq,1) output(22,eq,25) output(22,eq,2) output(22,eq,27) output(22,eq,72) output(22,eq,64) output(1,eq,25) output(1,eq,2) output(1,eq,27) output(1,eq,72) output(1,eq,64) output(25,eq,2) output(25,eq,27) output(25,eq,72) output(25,eq,64) output(2,eq,27) output(2,eq,72) output(2,eq,64) output(27,eq,72) output(27,eq,64) output(72,eq,64)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasStyle(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(1,better,72) output(2,better,72) output(3,better,72) output(12,better,72) output(22,better,72) output(24,better,72) output(25,better,72) output(27,better,72) output(72,worse,64) output(12,worse,3) output(12,worse,22) output(12,worse,1) output(12,worse,25) output(12,worse,2) output(12,worse,27) output(12,worse,64) output(24,worse,3) output(24,worse,22) output(24,worse,1) output(24,worse,25) output(24,worse,2) output(24,worse,27) output(24,worse,64) output(12,eq,24) output(3,eq,22) output(3,eq,1) output(3,eq,25) output(3,eq,2) output(3,eq,27) output(3,eq,64) output(22,eq,1) output(22,eq,25) output(22,eq,2) output(22,eq,27) output(22,eq,64) output(1,eq,25) output(1,eq,2) output(1,eq,27) output(1,eq,64) output(25,eq,2) output(25,eq,27) output(25,eq,64) output(2,eq,27) output(2,eq,64) output(27,eq,64)
Optimization: 37 2
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasStyle(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),1) preference(1,less(weight)) output(3,better,1) output(3,better,25) output(12,better,3) output(12,better,1) output(12,better,25) output(22,better,1) output(22,better,25) output(24,better,3) output(24,better,1) output(24,better,25) output(72,worse,64) output(1,worse,2) output(1,worse,27) output(1,worse,72) output(1,worse,64) output(2,worse,64) output(3,worse,22) output(3,worse,2) output(3,worse,27) output(3,worse,72) output(3,worse,64) output(12,worse,64) output(22,worse,64) output(24,worse,64) output(25,worse,2) output(25,worse,27) output(25,worse,72) output(25,worse,64) output(27,worse,64) output(12,eq,24) output(12,eq,22) output(12,eq,2) output(12,eq,27) output(12,eq,72) output(24,eq,22) output(24,eq,2) output(24,eq,27) output(24,eq,72) output(22,eq,2) output(22,eq,27) output(22,eq,72) output(1,eq,25) output(2,eq,27) output(2,eq,72) output(27,eq,72)
Optimization: 35 14
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,14),1,for(atom(hasStyle(0))),10) preference(1,less(weight)) output(72,better,64) output(1,better,25) output(1,better,2) output(1,better,27) output(1,better,72) output(1,better,64) output(2,better,27) output(2,better,72) output(2,better,64) output(3,better,22) output(3,better,1) output(3,better,25) output(3,better,2) output(3,better,27) output(3,better,72) output(3,better,64) output(12,better,3) output(12,better,22) output(12,better,1) output(12,better,25) output(12,better,2) output(12,better,27) output(12,better,72) output(12,better,64) output(22,better,1) output(22,better,25) output(22,better,2) output(22,better,27) output(22,better,72) output(22,better,64) output(24,better,3) output(24,better,22) output(24,better,1) output(24,better,25) output(24,better,2) output(24,better,27) output(24,better,72) output(24,better,64) output(25,better,2) output(25,better,27) output(25,better,72) output(25,better,64) output(27,better,72) output(27,better,64) output(12,eq,24)
Optimization: 1 14
Progression : 1 [ 1;14] (Error: 13)
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,8),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,12),1,for(atom(hasOiliness(0))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,14),1,for(atom(hasPrice(1))),1) preference(1,less(weight)) output(72,better,64) output(1,better,25) output(1,better,2) output(1,better,27) output(1,better,72) output(1,better,64) output(2,better,27) output(2,better,72) output(2,better,64) output(3,better,22) output(3,better,1) output(3,better,25) output(3,better,2) output(3,better,27) output(3,better,72) output(3,better,64) output(12,better,3) output(12,better,22) output(12,better,1) output(12,better,25) output(12,better,2) output(12,better,27) output(12,better,72) output(12,better,64) output(22,better,1) output(22,better,25) output(22,better,2) output(22,better,27) output(22,better,72) output(22,better,64) output(24,better,3) output(24,better,22) output(24,better,1) output(24,better,25) output(24,better,2) output(24,better,27) output(24,better,72) output(24,better,64) output(25,better,2) output(25,better,27) output(25,better,72) output(25,better,64) output(27,better,72) output(27,better,64) output(12,eq,24)
Optimization: 1 13
Answer: 6
preference(1,(1,1),1,for(atom(hasOiliness(0))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasStyle(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(72,better,64) output(1,better,25) output(1,better,2) output(1,better,27) output(1,better,72) output(1,better,64) output(2,better,27) output(2,better,72) output(2,better,64) output(3,better,22) output(3,better,1) output(3,better,25) output(3,better,2) output(3,better,27) output(3,better,72) output(3,better,64) output(12,better,3) output(12,better,22) output(12,better,1) output(12,better,25) output(12,better,2) output(12,better,27) output(12,better,72) output(12,better,64) output(22,better,1) output(22,better,25) output(22,better,2) output(22,better,27) output(22,better,72) output(22,better,64) output(24,better,3) output(24,better,22) output(24,better,1) output(24,better,25) output(24,better,2) output(24,better,27) output(24,better,72) output(24,better,64) output(25,better,2) output(25,better,27) output(25,better,72) output(25,better,64) output(27,better,72) output(27,better,64) output(12,eq,24)
Optimization: 1 11
Progression : 1 [ 2;11] (Error: 4.5)
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,3),1,for(atom(hasStyle(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(72,better,64) output(1,better,25) output(1,better,2) output(1,better,27) output(1,better,72) output(1,better,64) output(2,better,27) output(2,better,72) output(2,better,64) output(3,better,22) output(3,better,1) output(3,better,25) output(3,better,2) output(3,better,27) output(3,better,72) output(3,better,64) output(12,better,3) output(12,better,22) output(12,better,1) output(12,better,25) output(12,better,2) output(12,better,27) output(12,better,72) output(12,better,64) output(22,better,1) output(22,better,25) output(22,better,2) output(22,better,27) output(22,better,72) output(22,better,64) output(24,better,3) output(24,better,22) output(24,better,1) output(24,better,25) output(24,better,2) output(24,better,27) output(24,better,72) output(24,better,64) output(25,better,2) output(25,better,27) output(25,better,72) output(25,better,64) output(27,better,72) output(27,better,64) output(12,eq,24)
Optimization: 1 10
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(72,better,64) output(1,better,25) output(1,better,2) output(1,better,27) output(1,better,72) output(1,better,64) output(2,better,27) output(2,better,72) output(2,better,64) output(3,better,22) output(3,better,1) output(3,better,25) output(3,better,2) output(3,better,27) output(3,better,72) output(3,better,64) output(12,better,3) output(12,better,22) output(12,better,1) output(12,better,25) output(12,better,2) output(12,better,27) output(12,better,72) output(12,better,64) output(22,better,1) output(22,better,25) output(22,better,2) output(22,better,27) output(22,better,72) output(22,better,64) output(24,better,3) output(24,better,22) output(24,better,1) output(24,better,25) output(24,better,2) output(24,better,27) output(24,better,72) output(24,better,64) output(25,better,2) output(25,better,27) output(25,better,72) output(25,better,64) output(27,better,72) output(27,better,64) output(12,eq,24)
Optimization: 1 9
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),9) preference(1,(1,3),1,for(atom(hasStyle(0))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(72,better,64) output(1,better,25) output(1,better,2) output(1,better,27) output(1,better,72) output(1,better,64) output(2,better,27) output(2,better,72) output(2,better,64) output(3,better,22) output(3,better,1) output(3,better,25) output(3,better,2) output(3,better,27) output(3,better,72) output(3,better,64) output(12,better,3) output(12,better,22) output(12,better,1) output(12,better,25) output(12,better,2) output(12,better,27) output(12,better,72) output(12,better,64) output(22,better,1) output(22,better,25) output(22,better,2) output(22,better,27) output(22,better,72) output(22,better,64) output(24,better,3) output(24,better,22) output(24,better,1) output(24,better,25) output(24,better,2) output(24,better,27) output(24,better,72) output(24,better,64) output(25,better,2) output(25,better,27) output(25,better,72) output(25,better,64) output(27,better,72) output(27,better,64) output(12,eq,24)
Optimization: 1 8
Progression : 1 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.036 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 1 8
Calls        : 1
Time         : 297.955s (Solving: 295.99s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.762s
Threads      : 4        (Winner: 4)

Choices      : 7940369  (Domain: 559565)
Conflicts    : 6171461  (Analyzed: 6171458)
Restarts     : 5492     (Average: 1123.72 Last: 424054)
Model-Level  : 61.8    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6200331  (Deleted: 5991349)
  Binary     : 1668     (Ratio:   0.03%)
  Ternary    : 4010     (Ratio:   0.06%)
  Conflict   : 6171458  (Average Length:  362.3 Ratio:  99.53%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 28873    (Average Length:   32.3 Ratio:   0.47%) 
  Distributed: 9638     (Ratio:   0.16% Average LBD: 3.53) 
  Integrated : 28914    (Ratio: 300.00% Unit: 32 Average Jumps: 9.25)
Backjumps    : 6171458  (Average:  1.23 Max: 377 Sum: 7568462)
  Executed   : 6171457  (Average:  1.23 Max: 377 Sum: 7568430 Ratio: 100.00%)
  Bounded    : 1        (Average: 32.00 Max:  32 Sum:     32 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8706    
  Sum        : 73      
  Count      : 14      
Equivalences : 9337     (Atom=Atom: 501 Body=Body: 235 Other: 8601)
Tight        : Yes
Variables    : 7543     (Eliminated:    0 Frozen: 4883)
Constraints  : 189286   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasStyle(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(1)) ; 
  10 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasStyle(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.
