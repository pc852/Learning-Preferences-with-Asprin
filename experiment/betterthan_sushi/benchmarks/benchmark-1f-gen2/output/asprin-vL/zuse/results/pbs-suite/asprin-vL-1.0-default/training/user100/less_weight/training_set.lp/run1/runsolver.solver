asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,5) output(37,eq,35) output(37,eq,3) output(37,eq,52) output(37,eq,14) output(37,eq,4) output(1,eq,18) output(1,eq,11) output(1,eq,5) output(1,eq,35) output(1,eq,3) output(1,eq,52) output(1,eq,14) output(1,eq,4) output(18,eq,11) output(18,eq,5) output(18,eq,35) output(18,eq,3) output(18,eq,52) output(18,eq,14) output(18,eq,4) output(11,eq,5) output(11,eq,35) output(11,eq,3) output(11,eq,52) output(11,eq,14) output(11,eq,4) output(5,eq,35) output(5,eq,3) output(5,eq,52) output(5,eq,14) output(5,eq,4) output(35,eq,3) output(35,eq,52) output(35,eq,14) output(35,eq,4) output(3,eq,52) output(3,eq,14) output(3,eq,4) output(52,eq,14) output(52,eq,4) output(14,eq,4)
Optimization: 45 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(1,worse,11) output(1,worse,14) output(1,worse,4) output(3,worse,14) output(3,worse,4) output(5,worse,14) output(5,worse,4) output(18,worse,11) output(18,worse,14) output(18,worse,4) output(35,worse,14) output(35,worse,4) output(37,worse,11) output(37,worse,14) output(37,worse,4) output(52,worse,14) output(52,worse,4) output(37,eq,1) output(37,eq,18) output(37,eq,5) output(37,eq,35) output(37,eq,3) output(37,eq,52) output(1,eq,18) output(1,eq,5) output(1,eq,35) output(1,eq,3) output(1,eq,52) output(18,eq,5) output(18,eq,35) output(18,eq,3) output(18,eq,52) output(11,eq,14) output(11,eq,4) output(5,eq,35) output(5,eq,3) output(5,eq,52) output(35,eq,3) output(35,eq,52) output(3,eq,52) output(14,eq,4)
Optimization: 41 2
Answer: 3
preference(1,(1,10),1,for(atom(hasMinorGrp(5))),10) preference(1,less(weight)) output(1,better,5) output(1,better,3) output(11,better,5) output(11,better,3) output(18,better,5) output(18,better,3) output(35,better,3) output(37,better,5) output(37,better,3) output(3,worse,52) output(3,worse,14) output(3,worse,4) output(5,worse,35) output(5,worse,52) output(5,worse,14) output(5,worse,4) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,35) output(37,eq,52) output(37,eq,14) output(37,eq,4) output(1,eq,18) output(1,eq,11) output(1,eq,35) output(1,eq,52) output(1,eq,14) output(1,eq,4) output(18,eq,11) output(18,eq,35) output(18,eq,52) output(18,eq,14) output(18,eq,4) output(11,eq,35) output(11,eq,52) output(11,eq,14) output(11,eq,4) output(5,eq,3) output(35,eq,52) output(35,eq,14) output(35,eq,4) output(52,eq,14) output(52,eq,4) output(14,eq,4)
Optimization: 36 1
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,2),1,for(atom(hasStyle(0))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(1,better,5) output(1,better,3) output(11,better,5) output(11,better,3) output(18,better,5) output(18,better,3) output(35,better,3) output(37,better,1) output(37,better,5) output(37,better,3) output(1,worse,18) output(1,worse,11) output(1,worse,35) output(1,worse,52) output(1,worse,14) output(1,worse,4) output(3,worse,52) output(3,worse,14) output(3,worse,4) output(5,worse,35) output(5,worse,52) output(5,worse,14) output(5,worse,4) output(37,eq,18) output(37,eq,11) output(37,eq,35) output(37,eq,52) output(37,eq,14) output(37,eq,4) output(18,eq,11) output(18,eq,35) output(18,eq,52) output(18,eq,14) output(18,eq,4) output(11,eq,35) output(11,eq,52) output(11,eq,14) output(11,eq,4) output(5,eq,3) output(35,eq,52) output(35,eq,14) output(35,eq,4) output(52,eq,14) output(52,eq,4) output(14,eq,4)
Optimization: 35 9
Answer: 5
preference(1,(1,5),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(1,better,52) output(1,better,14) output(3,better,52) output(3,better,14) output(5,better,52) output(5,better,14) output(11,better,52) output(11,better,14) output(18,better,52) output(18,better,14) output(35,better,52) output(35,better,14) output(37,better,52) output(37,better,14) output(14,worse,4) output(52,worse,4) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,5) output(37,eq,35) output(37,eq,3) output(37,eq,4) output(1,eq,18) output(1,eq,11) output(1,eq,5) output(1,eq,35) output(1,eq,3) output(1,eq,4) output(18,eq,11) output(18,eq,5) output(18,eq,35) output(18,eq,3) output(18,eq,4) output(11,eq,5) output(11,eq,35) output(11,eq,3) output(11,eq,4) output(5,eq,35) output(5,eq,3) output(5,eq,4) output(35,eq,3) output(35,eq,4) output(3,eq,4) output(52,eq,14)
Optimization: 31 1
Answer: 6
preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(1,better,11) output(1,better,5) output(1,better,3) output(1,better,52) output(1,better,14) output(18,better,11) output(18,better,5) output(18,better,3) output(18,better,52) output(18,better,14) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,11) output(37,better,5) output(37,better,3) output(37,better,52) output(37,better,14) output(3,worse,4) output(5,worse,35) output(5,worse,4) output(11,worse,35) output(11,worse,4) output(14,worse,4) output(52,worse,4) output(37,eq,1) output(37,eq,18) output(37,eq,35) output(37,eq,4) output(1,eq,18) output(1,eq,35) output(1,eq,4) output(18,eq,35) output(18,eq,4) output(11,eq,5) output(11,eq,3) output(11,eq,52) output(11,eq,14) output(5,eq,3) output(5,eq,52) output(5,eq,14) output(35,eq,4) output(3,eq,52) output(3,eq,14) output(52,eq,14)
Optimization: 27 1
Answer: 7
preference(1,(1,5),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(1,better,5) output(1,better,3) output(1,better,52) output(1,better,14) output(11,better,5) output(11,better,3) output(11,better,52) output(11,better,14) output(18,better,5) output(18,better,3) output(18,better,52) output(18,better,14) output(35,better,3) output(35,better,52) output(35,better,14) output(37,better,5) output(37,better,3) output(37,better,52) output(37,better,14) output(3,worse,4) output(5,worse,35) output(5,worse,4) output(14,worse,4) output(52,worse,4) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,35) output(37,eq,4) output(1,eq,18) output(1,eq,11) output(1,eq,35) output(1,eq,4) output(18,eq,11) output(18,eq,35) output(18,eq,4) output(11,eq,35) output(11,eq,4) output(5,eq,3) output(5,eq,52) output(5,eq,14) output(35,eq,4) output(3,eq,52) output(3,eq,14) output(52,eq,14)
Optimization: 26 2
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(1,better,11) output(1,better,52) output(1,better,14) output(3,better,52) output(3,better,14) output(5,better,52) output(5,better,14) output(18,better,11) output(18,better,5) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(35,better,4) output(37,better,1) output(37,better,11) output(37,better,5) output(37,better,3) output(37,better,52) output(37,better,14) output(1,worse,18) output(1,worse,35) output(1,worse,4) output(3,worse,4) output(5,worse,35) output(5,worse,4) output(11,worse,5) output(11,worse,35) output(11,worse,3) output(11,worse,52) output(11,worse,14) output(11,worse,4) output(14,worse,4) output(37,worse,18) output(37,worse,35) output(52,worse,4) output(37,eq,4) output(1,eq,5) output(1,eq,3) output(18,eq,35) output(5,eq,3) output(52,eq,14)
Optimization: 22 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,4) output(35,worse,3) output(35,worse,52) output(35,worse,14) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(37,eq,5) output(37,eq,3) output(1,eq,18) output(1,eq,11) output(1,eq,5) output(1,eq,3) output(18,eq,11) output(18,eq,5) output(18,eq,3) output(11,eq,5) output(11,eq,3) output(5,eq,3) output(35,eq,4) output(52,eq,14)
Optimization: 20 9
Answer: 10
preference(1,(1,2),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasStyle(0))),8) preference(1,less(weight)) output(1,better,11) output(1,better,35) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,35) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,35) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,11) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,4) output(11,worse,5) output(11,worse,3) output(35,worse,3) output(35,worse,52) output(35,worse,14) output(37,eq,1) output(37,eq,18) output(37,eq,5) output(37,eq,3) output(1,eq,18) output(1,eq,5) output(1,eq,3) output(18,eq,5) output(18,eq,3) output(11,eq,52) output(11,eq,14) output(5,eq,3) output(35,eq,4) output(52,eq,14)
Optimization: 19 10
Answer: 11
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasStyle(0))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,4) output(5,better,35) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,4) output(35,worse,3) output(35,worse,52) output(35,worse,14) output(37,eq,1) output(37,eq,18) output(37,eq,11) output(1,eq,18) output(1,eq,11) output(18,eq,11) output(5,eq,3) output(5,eq,52) output(5,eq,14) output(35,eq,4) output(3,eq,52) output(3,eq,14) output(52,eq,14)
Optimization: 16 10
Answer: 12
preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasStyle(1))),2) preference(1,less(weight)) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,35) output(11,better,52) output(11,better,14) output(11,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,52) output(35,better,14) output(35,better,4) output(37,better,35) output(37,better,52) output(37,better,14) output(37,better,4) output(14,worse,4) output(35,worse,3) output(37,worse,1) output(37,worse,18) output(52,worse,4) output(37,eq,11) output(37,eq,5) output(37,eq,3) output(1,eq,18) output(11,eq,5) output(11,eq,3) output(5,eq,3) output(52,eq,14)
Optimization: 13 10
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),9) preference(1,less(weight)) output(1,better,11) output(1,better,5) output(1,better,3) output(1,better,14) output(1,better,4) output(3,better,14) output(3,better,4) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,3) output(11,better,14) output(11,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,3) output(35,better,14) output(35,better,4) output(37,better,1) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(1,worse,18) output(1,worse,35) output(1,worse,52) output(3,worse,52) output(5,worse,35) output(5,worse,52) output(11,worse,35) output(11,worse,52) output(37,worse,18) output(5,eq,3) output(35,eq,52) output(14,eq,4)
Optimization: 12 12
Answer: 14
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,14) output(3,better,4) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,3) output(11,better,14) output(11,better,4) output(18,better,11) output(18,better,5) output(18,better,3) output(18,better,14) output(18,better,4) output(35,better,3) output(35,better,14) output(35,better,4) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(3,worse,52) output(5,worse,35) output(5,worse,52) output(11,worse,35) output(11,worse,52) output(37,worse,1) output(18,eq,35) output(18,eq,52) output(5,eq,3) output(35,eq,52) output(14,eq,4)
Optimization: 11 12
Answer: 15
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),7) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,14) output(3,better,4) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,3) output(11,better,14) output(11,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,3) output(35,better,14) output(35,better,4) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(3,worse,52) output(5,worse,35) output(5,worse,52) output(11,worse,35) output(11,worse,52) output(37,worse,1) output(37,worse,18) output(5,eq,3) output(35,eq,52) output(14,eq,4)
Optimization: 10 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(1))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,4),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,13),1,for(atom(hasOiliness(1))),9) preference(1,(1,14),1,for(atom(hasStyle(1))),2) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,14) output(3,better,4) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,14) output(35,better,4) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(3,worse,52) output(5,worse,52) output(11,worse,52) output(35,worse,52) output(37,worse,1) output(37,worse,18) output(37,eq,52) output(5,eq,35) output(5,eq,3) output(35,eq,3)
Optimization: 10 11
Answer: 17
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,4) output(37,better,1) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(1,worse,18) output(1,worse,11) output(35,worse,3) output(35,worse,52) output(37,worse,18) output(5,eq,3) output(35,eq,14)
Optimization: 7 10
Answer: 18
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,4),1,for(atom(hasStyle(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(1,worse,18) output(1,worse,11) output(35,worse,3) output(35,worse,52) output(5,eq,3) output(35,eq,14)
Optimization: 6 11
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,4),1,for(atom(hasStyle(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,4) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(35,worse,3) output(35,worse,52) output(37,worse,1) output(5,eq,3) output(35,eq,14)
Optimization: 5 10
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,14) output(35,better,4) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(35,worse,3) output(35,worse,52) output(37,eq,1) output(5,eq,3)
Optimization: 4 10
Progression : [2;4] (Error: 1)
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),7) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(35,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(5,worse,35) output(5,eq,3)
Optimization: 2 12
Progression : 2 [ 1;12] (Error: 11)
Answer: 22
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,52) output(35,better,14) output(35,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(35,worse,3) output(5,eq,3)
Optimization: 2 11
Progression : 2 [ 2;11] (Error: 4.5)
Answer: 23
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,2),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasStyle(1))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),5) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,35) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,52) output(35,better,14) output(35,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(35,worse,3) output(5,eq,3)
Optimization: 2 10
Answer: 24
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,2),1,for(atom(hasPrice(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(1,better,18) output(1,better,11) output(1,better,5) output(1,better,35) output(1,better,3) output(1,better,52) output(1,better,14) output(1,better,4) output(3,better,52) output(3,better,14) output(3,better,4) output(5,better,52) output(5,better,14) output(5,better,4) output(11,better,5) output(11,better,35) output(11,better,3) output(11,better,52) output(11,better,14) output(11,better,4) output(14,better,4) output(18,better,11) output(18,better,5) output(18,better,35) output(18,better,3) output(18,better,52) output(18,better,14) output(18,better,4) output(35,better,3) output(35,better,52) output(35,better,14) output(35,better,4) output(37,better,1) output(37,better,18) output(37,better,11) output(37,better,5) output(37,better,35) output(37,better,3) output(37,better,52) output(37,better,14) output(37,better,4) output(52,better,14) output(52,better,4) output(5,worse,35) output(5,eq,3)
Optimization: 2 9
Progression : 2 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.024 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 2 9
Bounds       : 2 [3;9]
Calls        : 1
Time         : 297.982s (Solving: 296.04s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.953s
Threads      : 4        (Winner: 4)

Choices      : 8866437  (Domain: 686230)
Conflicts    : 6970086  (Analyzed: 6970082)
Restarts     : 6975     (Average: 999.29 Last: 499729)
Model-Level  : 59.3    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 7107679  (Deleted: 6884772)
  Binary     : 467      (Ratio:   0.01%)
  Ternary    : 13287    (Ratio:   0.19%)
  Conflict   : 6970082  (Average Length:  209.9 Ratio:  98.06%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 137597   (Average Length:   43.6 Ratio:   1.94%) 
  Distributed: 46100    (Ratio:   0.66% Average LBD: 3.69) 
  Integrated : 138300   (Ratio: 300.00% Unit: 246 Average Jumps: 7.04)
Backjumps    : 6970082  (Average:  1.22 Max: 380 Sum: 8480703)
  Executed   : 6970071  (Average:  1.22 Max: 380 Sum: 8480492 Ratio: 100.00%)
  Bounded    : 11       (Average: 19.18 Max:  36 Sum:    211 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8708    
  Sum        : 75      
  Count      : 14      
Equivalences : 9340     (Atom=Atom: 496 Body=Body: 230 Other: 8614)
Tight        : Yes
Variables    : 7546     (Eliminated:    0 Frozen: 4886)
Constraints  : 189291   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(0)) 
}.
