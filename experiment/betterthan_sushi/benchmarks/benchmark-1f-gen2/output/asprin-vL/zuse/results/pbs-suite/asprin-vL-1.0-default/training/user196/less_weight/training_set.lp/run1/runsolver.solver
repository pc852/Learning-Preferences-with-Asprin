asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,11) output(1,eq,12) output(1,eq,39) output(1,eq,24) output(1,eq,26) output(1,eq,5) output(1,eq,19) output(1,eq,49) output(1,eq,15) output(11,eq,12) output(11,eq,39) output(11,eq,24) output(11,eq,26) output(11,eq,5) output(11,eq,19) output(11,eq,49) output(11,eq,15) output(12,eq,39) output(12,eq,24) output(12,eq,26) output(12,eq,5) output(12,eq,19) output(12,eq,49) output(12,eq,15) output(39,eq,24) output(39,eq,26) output(39,eq,5) output(39,eq,19) output(39,eq,49) output(39,eq,15) output(24,eq,26) output(24,eq,5) output(24,eq,19) output(24,eq,49) output(24,eq,15) output(26,eq,5) output(26,eq,19) output(26,eq,49) output(26,eq,15) output(5,eq,19) output(5,eq,49) output(5,eq,15) output(19,eq,49) output(19,eq,15) output(49,eq,15)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),8) preference(1,(1,11),1,for(atom(hasOiliness(0))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),7) preference(1,less(weight)) output(11,better,39) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,15) output(49,better,15) output(26,worse,49) output(1,worse,11) output(1,worse,12) output(1,worse,24) output(1,worse,49) output(5,worse,49) output(19,worse,49) output(39,worse,24) output(39,worse,49) output(1,eq,39) output(1,eq,26) output(1,eq,5) output(1,eq,19) output(1,eq,15) output(11,eq,12) output(11,eq,24) output(11,eq,49) output(12,eq,24) output(12,eq,49) output(39,eq,26) output(39,eq,5) output(39,eq,19) output(39,eq,15) output(24,eq,49) output(26,eq,5) output(26,eq,19) output(26,eq,15) output(5,eq,19) output(5,eq,15) output(19,eq,15)
Optimization: 30 6
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,11),1,for(atom(hasOiliness(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),8) preference(1,(1,13),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(1,better,39) output(1,better,26) output(1,better,5) output(1,better,49) output(11,better,39) output(11,better,26) output(11,better,5) output(11,better,49) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,49) output(19,better,49) output(24,better,26) output(24,better,5) output(24,better,49) output(26,worse,19) output(26,worse,15) output(5,worse,19) output(5,worse,15) output(39,worse,24) output(39,worse,19) output(39,worse,15) output(49,worse,15) output(1,eq,11) output(1,eq,12) output(1,eq,24) output(1,eq,19) output(1,eq,15) output(11,eq,12) output(11,eq,24) output(11,eq,19) output(11,eq,15) output(12,eq,24) output(12,eq,19) output(12,eq,15) output(39,eq,26) output(39,eq,5) output(39,eq,49) output(24,eq,19) output(24,eq,15) output(26,eq,5) output(26,eq,49) output(5,eq,49) output(19,eq,15)
Optimization: 29 10
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(26,better,5) output(26,better,49) output(1,better,12) output(1,better,24) output(1,better,5) output(1,better,49) output(5,better,49) output(11,better,12) output(11,better,24) output(11,better,5) output(11,better,49) output(12,better,5) output(12,better,49) output(19,better,49) output(24,better,5) output(24,better,49) output(39,better,24) output(39,better,5) output(39,better,49) output(5,worse,19) output(5,worse,15) output(12,worse,39) output(12,worse,26) output(12,worse,19) output(12,worse,15) output(24,worse,26) output(24,worse,19) output(24,worse,15) output(49,worse,15) output(1,eq,11) output(1,eq,39) output(1,eq,26) output(1,eq,19) output(1,eq,15) output(11,eq,39) output(11,eq,26) output(11,eq,19) output(11,eq,15) output(12,eq,24) output(39,eq,26) output(39,eq,19) output(39,eq,15) output(26,eq,19) output(26,eq,15) output(19,eq,15)
Optimization: 26 9
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasStyle(0))),10) preference(1,(1,3),1,for(atom(hasStyle(1))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,11),1,for(atom(hasOiliness(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,26) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,26) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,26) output(12,better,19) output(12,better,49) output(12,better,15) output(24,better,26) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,19) output(39,better,49) output(39,better,15) output(26,worse,5) output(1,eq,11) output(1,eq,12) output(1,eq,39) output(1,eq,24) output(1,eq,5) output(11,eq,12) output(11,eq,39) output(11,eq,24) output(11,eq,5) output(12,eq,39) output(12,eq,24) output(12,eq,5) output(39,eq,24) output(39,eq,5) output(24,eq,5) output(26,eq,19) output(26,eq,49) output(26,eq,15) output(19,eq,49) output(19,eq,15) output(49,eq,15)
Optimization: 22 9
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,9),1,for(atom(hasStyle(0))),10) preference(1,(1,11),1,for(atom(hasOiliness(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(1,eq,11) output(1,eq,12) output(1,eq,39) output(1,eq,24) output(11,eq,12) output(11,eq,39) output(11,eq,24) output(12,eq,39) output(12,eq,24) output(39,eq,24) output(26,eq,5) output(26,eq,19) output(26,eq,49) output(26,eq,15) output(5,eq,19) output(5,eq,49) output(5,eq,15) output(19,eq,49) output(19,eq,15) output(49,eq,15)
Optimization: 20 10
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasOiliness(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),10) preference(1,less(weight)) output(26,better,5) output(26,better,49) output(1,better,39) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(11,better,39) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,5) output(39,better,49) output(5,worse,19) output(5,worse,15) output(39,worse,24) output(49,worse,15) output(1,eq,11) output(1,eq,12) output(1,eq,24) output(11,eq,12) output(11,eq,24) output(12,eq,24) output(39,eq,26) output(39,eq,19) output(39,eq,15) output(26,eq,19) output(26,eq,15) output(5,eq,49) output(19,eq,15)
Optimization: 17 10
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,7),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(26,better,5) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(5,worse,19) output(5,worse,49) output(5,worse,15) output(39,worse,24) output(39,worse,26) output(39,worse,5) output(39,worse,19) output(39,worse,49) output(39,worse,15) output(12,eq,24) output(26,eq,19) output(49,eq,15)
Optimization: 12 11
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,7),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,19) output(12,better,49) output(12,better,15) output(24,better,26) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(26,worse,5) output(1,worse,5) output(11,worse,5) output(12,worse,5) output(19,worse,49) output(19,worse,15) output(24,worse,5) output(39,worse,24) output(39,worse,5) output(1,eq,11) output(12,eq,24)
Optimization: 11 12
Answer: 10
preference(1,(1,4),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,8),1,for(atom(hasStyle(1))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,39) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,15) output(49,better,15) output(1,worse,11) output(1,worse,12) output(1,worse,24) output(1,worse,26) output(39,worse,24) output(39,worse,26) output(39,worse,5) output(39,worse,19) output(39,worse,49) output(12,eq,24)
Optimization: 10 9
Answer: 11
preference(1,(1,1),1,for(atom(hasOiliness(0))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,5),1,for(atom(hasPrice(0))),10) preference(1,(1,6),1,for(atom(hasStyle(1))),10) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(26,better,49) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(26,worse,5) output(49,worse,15) output(1,eq,11) output(12,eq,39) output(12,eq,24) output(39,eq,24) output(26,eq,19) output(26,eq,15) output(19,eq,15)
Optimization: 9 10
Answer: 12
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,12),1,for(atom(hasStyle(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,24) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(11,worse,39) output(11,worse,26) output(12,worse,39) output(12,worse,26) output(24,worse,26) output(11,eq,12) output(11,eq,24) output(12,eq,24)
Optimization: 8 11
Answer: 13
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasStyle(0))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,11),1,for(atom(hasPrice(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,24) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(11,worse,39) output(12,worse,39) output(19,worse,15) output(49,worse,15) output(11,eq,12) output(11,eq,24) output(12,eq,24)
Optimization: 7 12
Answer: 14
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasStyle(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(0))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,11),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,39) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(19,worse,49) output(19,worse,15) output(39,worse,24) output(11,eq,12) output(11,eq,24) output(12,eq,24)
Optimization: 6 12
Progression : [2;6] (Error: 2)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,3),1,for(atom(hasPrice(1))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,7),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasStyle(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasStyle(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),3) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(1,worse,11) output(1,worse,12) output(1,worse,24) output(39,worse,24) output(1,eq,39) output(12,eq,24)
Optimization: 6 11
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,9),1,for(atom(hasOiliness(0))),6) preference(1,(1,10),1,for(atom(hasStyle(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,24) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(12,worse,39) output(19,worse,49) output(11,eq,39) output(12,eq,24) output(26,eq,5)
Optimization: 5 11
Answer: 17
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),4) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,7),1,for(atom(hasPrice(1))),3) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(19,worse,15) output(39,worse,24) output(49,worse,15) output(12,eq,24)
Optimization: 4 13
Answer: 18
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,7),1,for(atom(hasStyle(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(39,worse,24) output(12,eq,24) output(49,eq,15)
Optimization: 3 12
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),9) preference(1,(1,10),1,for(atom(hasPrice(1))),9) preference(1,(1,12),1,for(atom(hasStyle(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,24) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(12,worse,39) output(12,eq,24)
Optimization: 2 11
Progression : 2 [ 1;11] (Error: 10)
Progression : 2 [ 2;11] (Error: 4.5)
Answer: 20
preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),10) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(39,worse,24) output(12,eq,24)
Optimization: 2 10
Progression : 2 [ 3;10] (Error: 2.33333)
Answer: 21
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(26,better,5) output(26,better,19) output(26,better,49) output(26,better,15) output(1,better,11) output(1,better,12) output(1,better,39) output(1,better,24) output(1,better,26) output(1,better,5) output(1,better,19) output(1,better,49) output(1,better,15) output(5,better,19) output(5,better,49) output(5,better,15) output(11,better,12) output(11,better,39) output(11,better,24) output(11,better,26) output(11,better,5) output(11,better,19) output(11,better,49) output(11,better,15) output(12,better,39) output(12,better,26) output(12,better,5) output(12,better,19) output(12,better,49) output(12,better,15) output(19,better,49) output(19,better,15) output(24,better,26) output(24,better,5) output(24,better,19) output(24,better,49) output(24,better,15) output(39,better,26) output(39,better,5) output(39,better,19) output(39,better,49) output(39,better,15) output(49,better,15) output(39,worse,24) output(12,eq,24)
Optimization: 2 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.076 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 2 9
Bounds       : 2 [3;9]
Calls        : 1
Time         : 297.931s (Solving: 295.95s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.518s
Threads      : 4        (Winner: 4)

Choices      : 7431005  (Domain: 326037)
Conflicts    : 5798190  (Analyzed: 5798186)
Restarts     : 5188     (Average: 1117.61 Last: 269631)
Model-Level  : 38.4    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 5883055  (Deleted: 5608219)
  Binary     : 888      (Ratio:   0.02%)
  Ternary    : 6936     (Ratio:   0.12%)
  Conflict   : 5798184  (Average Length:  225.4 Ratio:  98.56%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 84871    (Average Length:   37.7 Ratio:   1.44%) 
  Distributed: 28318    (Ratio:   0.49% Average LBD: 3.69) 
  Integrated : 84954    (Ratio: 300.00% Unit: 149 Average Jumps: 5.41)
Backjumps    : 5798186  (Average:  1.25 Max: 359 Sum: 7219532)
  Executed   : 5798183  (Average:  1.25 Max: 359 Sum: 7219460 Ratio: 100.00%)
  Bounded    : 3        (Average: 24.00 Max:  28 Sum:     72 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8708    
  Sum        : 75      
  Count      : 14      
Equivalences : 9340     (Atom=Atom: 496 Body=Body: 230 Other: 8614)
Tight        : Yes
Variables    : 7546     (Eliminated:    0 Frozen: 4886)
Constraints  : 189291   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasStyle(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasStyle(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasStyle(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  10 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(1)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  6 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) 
}.
