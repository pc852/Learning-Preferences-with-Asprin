asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,26) output(8,eq,13) output(8,eq,9) output(8,eq,1) output(8,eq,21) output(8,eq,7) output(8,eq,31) output(8,eq,29) output(8,eq,40) output(26,eq,13) output(26,eq,9) output(26,eq,1) output(26,eq,21) output(26,eq,7) output(26,eq,31) output(26,eq,29) output(26,eq,40) output(13,eq,9) output(13,eq,1) output(13,eq,21) output(13,eq,7) output(13,eq,31) output(13,eq,29) output(13,eq,40) output(9,eq,1) output(9,eq,21) output(9,eq,7) output(9,eq,31) output(9,eq,29) output(9,eq,40) output(1,eq,21) output(1,eq,7) output(1,eq,31) output(1,eq,29) output(1,eq,40) output(21,eq,7) output(21,eq,31) output(21,eq,29) output(21,eq,40) output(7,eq,31) output(7,eq,29) output(7,eq,40) output(31,eq,29) output(31,eq,40) output(29,eq,40)
Optimization: 45 0
Answer: 2
preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(26,worse,21) output(1,worse,21) output(9,worse,21) output(13,worse,21) output(8,eq,21) output(26,eq,13) output(26,eq,9) output(26,eq,1) output(26,eq,7) output(26,eq,31) output(26,eq,29) output(26,eq,40) output(13,eq,9) output(13,eq,1) output(13,eq,7) output(13,eq,31) output(13,eq,29) output(13,eq,40) output(9,eq,1) output(9,eq,7) output(9,eq,31) output(9,eq,29) output(9,eq,40) output(1,eq,7) output(1,eq,31) output(1,eq,29) output(1,eq,40) output(7,eq,31) output(7,eq,29) output(7,eq,40) output(31,eq,29) output(31,eq,40) output(29,eq,40)
Optimization: 33 1
Answer: 3
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,3),1,for(atom(hasStyle(0))),4) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,12),1,for(atom(hasPrice(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(26,better,29) output(26,better,40) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,29) output(8,better,40) output(9,better,29) output(9,better,40) output(13,better,29) output(13,better,40) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(8,eq,26) output(8,eq,13) output(8,eq,9) output(8,eq,1) output(8,eq,21) output(8,eq,7) output(8,eq,31) output(26,eq,13) output(26,eq,9) output(26,eq,1) output(26,eq,21) output(26,eq,7) output(26,eq,31) output(13,eq,9) output(13,eq,1) output(13,eq,21) output(13,eq,7) output(13,eq,31) output(9,eq,1) output(9,eq,21) output(9,eq,7) output(9,eq,31) output(1,eq,21) output(1,eq,7) output(1,eq,31) output(21,eq,7) output(21,eq,31) output(7,eq,31) output(29,eq,40)
Optimization: 29 14
Answer: 4
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasStyle(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,31) output(7,better,31) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,7) output(8,better,31) output(9,better,31) output(13,better,31) output(21,better,7) output(21,better,31) output(1,worse,21) output(1,worse,29) output(1,worse,40) output(7,worse,29) output(7,worse,40) output(8,worse,26) output(8,worse,21) output(8,worse,29) output(8,worse,40) output(9,worse,21) output(9,worse,29) output(9,worse,40) output(13,worse,21) output(13,worse,29) output(13,worse,40) output(21,worse,29) output(21,worse,40) output(31,worse,29) output(31,worse,40) output(13,eq,9) output(13,eq,1) output(13,eq,7) output(9,eq,1) output(9,eq,7) output(1,eq,7) output(29,eq,40)
Optimization: 26 14
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasStyle(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),1) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(1,worse,21) output(8,worse,26) output(8,worse,21) output(9,worse,21) output(13,worse,21) output(13,eq,9) output(13,eq,1) output(13,eq,7) output(9,eq,1) output(9,eq,7) output(1,eq,7) output(31,eq,29) output(31,eq,40) output(29,eq,40)
Optimization: 14 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasStyle(1))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasStyle(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,29) output(1,better,40) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,21) output(9,better,7) output(9,better,29) output(9,better,40) output(13,better,21) output(13,better,7) output(13,better,29) output(13,better,40) output(21,better,7) output(31,better,29) output(31,better,40) output(7,worse,31) output(7,worse,29) output(7,worse,40) output(8,worse,26) output(21,worse,31) output(21,worse,29) output(21,worse,40) output(13,eq,9) output(13,eq,1) output(13,eq,31) output(9,eq,1) output(9,eq,31) output(1,eq,31) output(29,eq,40)
Optimization: 14 12
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,7),1,for(atom(hasStyle(1))),5) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasStyle(0))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),4) preference(1,less(weight)) output(26,better,13) output(26,better,21) output(26,better,7) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,21) output(8,better,7) output(8,better,29) output(8,better,40) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,21) output(13,better,7) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,9) output(26,worse,1) output(26,worse,31) output(7,worse,31) output(8,worse,9) output(8,worse,1) output(13,worse,9) output(13,worse,1) output(13,worse,31) output(21,worse,31) output(8,eq,31) output(9,eq,1) output(29,eq,40)
Optimization: 13 12
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,7),1,for(atom(hasStyle(1))),5) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasStyle(0))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),4) preference(1,less(weight)) output(26,better,13) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,21) output(13,better,7) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,9) output(26,worse,31) output(1,worse,31) output(7,worse,31) output(8,worse,9) output(13,worse,9) output(13,worse,31) output(21,worse,31) output(8,eq,31) output(13,eq,1) output(29,eq,40)
Optimization: 11 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,7),1,for(atom(hasStyle(1))),5) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasOiliness(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasStyle(0))),4) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),4) preference(1,less(weight)) output(26,better,13) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,9) output(26,worse,31) output(1,worse,31) output(7,worse,31) output(8,worse,9) output(13,worse,9) output(13,worse,31) output(21,worse,31) output(8,eq,31) output(29,eq,40)
Optimization: 10 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,3),1,for(atom(hasStyle(0))),3) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,13),1,for(atom(hasOiliness(1))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),10) preference(1,less(weight)) output(26,better,21) output(26,better,7) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,13) output(26,worse,9) output(26,worse,1) output(26,worse,31) output(7,worse,31) output(7,worse,29) output(7,worse,40) output(21,worse,31) output(29,eq,40)
Optimization: 9 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),1) preference(1,less(weight)) output(26,better,9) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,9) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,13) output(26,worse,1) output(7,worse,31) output(8,worse,13) output(8,worse,1) output(9,worse,1) output(13,worse,1) output(21,worse,31) output(29,eq,40)
Optimization: 9 13
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,5),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,7),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),4) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,31) output(1,worse,31) output(7,worse,31) output(9,worse,31) output(13,worse,31) output(21,worse,31) output(8,eq,31) output(29,eq,40)
Optimization: 8 11
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasPrice(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,14),1,for(atom(hasStyle(1))),2) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,1) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,21) output(1,worse,21) output(8,worse,21) output(9,worse,21) output(13,worse,21) output(13,eq,9) output(29,eq,40)
Optimization: 7 12
Answer: 14
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasOiliness(1))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(7,worse,31) output(13,eq,9) output(13,eq,1) output(9,eq,1) output(21,eq,31) output(29,eq,40)
Optimization: 6 12
Answer: 15
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),9) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasOiliness(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(0))),9) preference(1,(1,11),1,for(atom(hasStyle(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),10) preference(1,less(weight)) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(7,worse,31) output(21,worse,31) output(26,eq,13) output(9,eq,1) output(29,eq,40)
Optimization: 5 13
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),9) preference(1,(1,5),1,for(atom(hasStyle(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,13),1,for(atom(hasPrice(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(26,worse,13) output(7,worse,31) output(21,eq,31) output(29,eq,40)
Optimization: 4 13
Answer: 17
preference(1,(1,1),1,for(atom(hasOiliness(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasPrice(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),9) preference(1,(1,11),1,for(atom(hasPrice(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasStyle(0))),5) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(29,eq,40)
Optimization: 1 14
Progression : 1 [ 1;14] (Error: 13)
Progression : 1 [ 2;14] (Error: 6)
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,6),1,for(atom(hasStyle(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,9),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(29,eq,40)
Optimization: 1 13
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,6),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,9),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(29,eq,40)
Optimization: 1 12
Answer: 20
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(29,eq,40)
Optimization: 1 11
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),9) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),3) preference(1,less(weight)) output(26,better,13) output(26,better,9) output(26,better,1) output(26,better,21) output(26,better,7) output(26,better,31) output(26,better,29) output(26,better,40) output(1,better,21) output(1,better,7) output(1,better,31) output(1,better,29) output(1,better,40) output(7,better,31) output(7,better,29) output(7,better,40) output(8,better,26) output(8,better,13) output(8,better,9) output(8,better,1) output(8,better,21) output(8,better,7) output(8,better,31) output(8,better,29) output(8,better,40) output(9,better,1) output(9,better,21) output(9,better,7) output(9,better,31) output(9,better,29) output(9,better,40) output(13,better,9) output(13,better,1) output(13,better,21) output(13,better,7) output(13,better,31) output(13,better,29) output(13,better,40) output(21,better,7) output(21,better,31) output(21,better,29) output(21,better,40) output(31,better,29) output(31,better,40) output(29,eq,40)
Optimization: 1 10
Progression : 1 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.064 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 1 10
Calls        : 1
Time         : 298.104s (Solving: 296.14s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.115s
Threads      : 4        (Winner: 4)

Choices      : 8994554  (Domain: 675628)
Conflicts    : 7316607  (Analyzed: 7316604)
Restarts     : 7236     (Average: 1011.14 Last: 588586)
Model-Level  : 34.2    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7418582  (Deleted: 7092657)
  Binary     : 735      (Ratio:   0.01%)
  Ternary    : 7435     (Ratio:   0.10%)
  Conflict   : 7316604  (Average Length:  206.3 Ratio:  98.63%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 101978   (Average Length:   32.2 Ratio:   1.37%) 
  Distributed: 34061    (Ratio:   0.47% Average LBD: 3.72) 
  Integrated : 102183   (Ratio: 300.00% Unit: 301 Average Jumps: 6.73)
Backjumps    : 7316604  (Average:  1.19 Max: 526 Sum: 8690094)
  Executed   : 7316602  (Average:  1.19 Max: 526 Sum: 8690065 Ratio: 100.00%)
  Bounded    : 2        (Average: 14.50 Max:  27 Sum:     29 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8706    
  Sum        : 73      
  Count      : 14      
Equivalences : 9337     (Atom=Atom: 501 Body=Body: 235 Other: 8601)
Tight        : Yes
Variables    : 7543     (Eliminated:    0 Frozen: 4883)
Constraints  : 189286   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasStyle(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasStyle(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(3)) 
}.
