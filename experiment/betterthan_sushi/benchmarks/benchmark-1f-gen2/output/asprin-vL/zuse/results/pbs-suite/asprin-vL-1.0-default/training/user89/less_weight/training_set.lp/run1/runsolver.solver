asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(21,eq,19) output(21,eq,6) output(21,eq,0) output(21,eq,26) output(21,eq,88) output(21,eq,50) output(21,eq,49) output(21,eq,29) output(21,eq,18) output(19,eq,6) output(19,eq,0) output(19,eq,26) output(19,eq,88) output(19,eq,50) output(19,eq,49) output(19,eq,29) output(19,eq,18) output(6,eq,0) output(6,eq,26) output(6,eq,88) output(6,eq,50) output(6,eq,49) output(6,eq,29) output(6,eq,18) output(0,eq,26) output(0,eq,88) output(0,eq,50) output(0,eq,49) output(0,eq,29) output(0,eq,18) output(26,eq,88) output(26,eq,50) output(26,eq,49) output(26,eq,29) output(26,eq,18) output(88,eq,50) output(88,eq,49) output(88,eq,29) output(88,eq,18) output(50,eq,49) output(50,eq,29) output(50,eq,18) output(49,eq,29) output(49,eq,18) output(29,eq,18)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasStyle(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,7),1,for(atom(hasOiliness(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(26,better,50) output(26,better,49) output(26,better,18) output(29,better,18) output(0,better,50) output(0,better,49) output(0,better,18) output(6,better,18) output(19,better,18) output(21,better,18) output(49,better,18) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,18) output(6,worse,0) output(6,worse,26) output(6,worse,88) output(6,worse,50) output(6,worse,49) output(6,worse,29) output(19,worse,0) output(19,worse,26) output(19,worse,88) output(19,worse,50) output(19,worse,49) output(19,worse,29) output(21,worse,19) output(21,worse,6) output(21,worse,0) output(21,worse,26) output(21,worse,88) output(21,worse,50) output(21,worse,49) output(21,worse,29) output(49,worse,29) output(50,worse,49) output(50,worse,29) output(19,eq,6) output(0,eq,26) output(0,eq,88) output(0,eq,29) output(26,eq,88) output(26,eq,29) output(88,eq,29)
Optimization: 30 8
Answer: 3
preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(26,better,50) output(26,better,49) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,50) output(0,better,49) output(0,better,18) output(6,better,18) output(19,better,18) output(21,better,18) output(49,better,18) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,18) output(26,worse,88) output(26,worse,29) output(6,worse,0) output(6,worse,26) output(6,worse,88) output(6,worse,29) output(19,worse,6) output(19,worse,0) output(19,worse,26) output(19,worse,88) output(19,worse,50) output(19,worse,49) output(19,worse,29) output(21,worse,19) output(21,worse,6) output(21,worse,0) output(21,worse,26) output(21,worse,88) output(21,worse,50) output(21,worse,49) output(21,worse,29) output(49,worse,29) output(50,worse,29) output(6,eq,50) output(6,eq,49) output(0,eq,88) output(0,eq,29) output(88,eq,29) output(50,eq,49)
Optimization: 29 8
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,29) output(6,better,18) output(19,better,29) output(19,better,18) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(26,worse,88) output(6,worse,0) output(6,worse,26) output(6,worse,88) output(19,worse,6) output(19,worse,0) output(19,worse,26) output(19,worse,88) output(19,worse,50) output(19,worse,49) output(21,worse,19) output(21,worse,6) output(21,worse,0) output(21,worse,26) output(21,worse,88) output(21,worse,50) output(21,worse,49) output(21,eq,29) output(6,eq,50) output(6,eq,49) output(0,eq,88) output(50,eq,49)
Optimization: 22 9
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(26,better,50) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,50) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,29) output(19,better,18) output(21,better,26) output(21,better,50) output(21,better,18) output(49,better,29) output(49,better,18) output(88,better,50) output(88,better,18) output(26,worse,88) output(26,worse,49) output(26,worse,29) output(0,worse,49) output(19,worse,6) output(19,worse,49) output(21,worse,19) output(21,worse,6) output(21,worse,49) output(50,worse,49) output(50,worse,29) output(88,worse,49) output(21,eq,0) output(21,eq,88) output(21,eq,29) output(6,eq,49) output(0,eq,88) output(0,eq,29) output(88,eq,29) output(50,eq,18)
Optimization: 20 9
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,12),1,for(atom(hasOiliness(0))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),10) preference(1,less(weight)) output(26,better,50) output(26,better,49) output(26,better,29) output(0,better,50) output(0,better,49) output(0,better,29) output(6,better,50) output(6,better,49) output(6,better,29) output(19,better,6) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(50,better,29) output(88,better,50) output(88,better,49) output(88,better,29) output(29,worse,18) output(6,worse,0) output(6,worse,26) output(6,worse,88) output(6,worse,18) output(21,worse,19) output(49,worse,18) output(50,worse,49) output(50,worse,18) output(0,eq,26) output(0,eq,88) output(0,eq,18) output(26,eq,88) output(26,eq,18) output(88,eq,18)
Optimization: 15 11
Answer: 7
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,10),1,for(atom(hasStyle(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasStyle(0))),7) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(19,better,6) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(88,better,50) output(88,better,49) output(88,better,29) output(29,worse,18) output(0,worse,26) output(0,worse,18) output(6,worse,26) output(6,worse,18) output(21,worse,19) output(49,worse,18) output(50,worse,49) output(50,worse,18) output(88,worse,18) output(6,eq,0) output(50,eq,29)
Optimization: 12 11
Answer: 8
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),10) preference(1,(1,11),1,for(atom(hasStyle(0))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(19,better,6) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(50,better,29) output(88,better,50) output(88,better,49) output(88,better,29) output(29,worse,18) output(0,worse,26) output(0,worse,18) output(6,worse,26) output(6,worse,18) output(21,worse,19) output(49,worse,18) output(50,worse,49) output(50,worse,18) output(88,worse,18) output(6,eq,0)
Optimization: 11 11
Answer: 9
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,10),1,for(atom(hasOiliness(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,14),1,for(atom(hasStyle(0))),8) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,6) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,18) output(88,better,50) output(88,better,29) output(88,better,18) output(6,worse,0) output(21,worse,19) output(21,worse,6) output(21,worse,0) output(21,worse,26) output(50,worse,49) output(19,eq,0) output(6,eq,26) output(88,eq,49) output(50,eq,29)
Optimization: 10 13
Answer: 10
preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasStyle(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,29) output(88,better,18) output(26,worse,49) output(0,worse,49) output(6,worse,49) output(19,worse,49) output(21,worse,49) output(50,worse,49) output(88,worse,49) output(19,eq,6)
Optimization: 8 12
Answer: 11
preference(1,(1,2),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasStyle(0))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),10) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,29) output(88,better,18) output(26,worse,88) output(26,worse,50) output(26,worse,49) output(50,worse,49) output(88,worse,49) output(19,eq,6) output(0,eq,49)
Optimization: 7 12
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasOiliness(1))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasPrice(0))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(26,worse,88) output(26,worse,50) output(26,worse,49) output(19,eq,6) output(0,eq,88) output(50,eq,49)
Optimization: 6 13
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,2),1,for(atom(hasStyle(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,6) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,29) output(88,better,18) output(21,worse,19) output(50,worse,49) output(6,eq,0) output(88,eq,49) output(29,eq,18)
Optimization: 5 13
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,10),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasStyle(1))),10) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,6) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(50,better,49) output(50,better,29) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(29,worse,18) output(49,worse,18) output(50,worse,18) output(0,eq,26)
Optimization: 4 13
Answer: 15
preference(1,(1,1),1,for(atom(hasStyle(1))),10) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,9),1,for(atom(hasOiliness(0))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,12),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasPrice(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,49) output(50,better,29) output(50,better,18) output(88,better,49) output(88,better,29) output(88,better,18) output(19,eq,6) output(0,eq,26) output(88,eq,50)
Optimization: 3 12
Answer: 16
preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,9),1,for(atom(hasOiliness(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,49) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(19,eq,6) output(26,eq,88)
Optimization: 2 11
Answer: 17
preference(1,(1,1),1,for(atom(hasStyle(0))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),9) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,6) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,49) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(0,eq,26)
Optimization: 1 11
Progression : [1;1] (Error: 0)
Progression : 1 [ 1;11] (Error: 10)
Answer: 18
preference(1,(1,2),1,for(atom(hasPrice(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasOiliness(0))),10) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasStyle(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),2) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,49) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(19,eq,6)
Optimization: 1 10
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasOiliness(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasPrice(0))),5) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(26,better,88) output(26,better,50) output(26,better,49) output(26,better,29) output(26,better,18) output(29,better,18) output(0,better,26) output(0,better,88) output(0,better,50) output(0,better,49) output(0,better,29) output(0,better,18) output(6,better,0) output(6,better,26) output(6,better,88) output(6,better,50) output(6,better,49) output(6,better,29) output(6,better,18) output(19,better,0) output(19,better,26) output(19,better,88) output(19,better,50) output(19,better,49) output(19,better,29) output(19,better,18) output(21,better,19) output(21,better,6) output(21,better,0) output(21,better,26) output(21,better,88) output(21,better,50) output(21,better,49) output(21,better,29) output(21,better,18) output(49,better,29) output(49,better,18) output(50,better,49) output(50,better,29) output(50,better,18) output(88,better,50) output(88,better,49) output(88,better,29) output(88,better,18) output(19,eq,6)
Optimization: 1 8
Progression : 1 [2;8] (Error: 3)
Progression : 1 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.078 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 1 8
Bounds       : 1 [3;8]
Calls        : 1
Time         : 298.229s (Solving: 296.25s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.662s
Threads      : 4        (Winner: 4)

Choices      : 8513486  (Domain: 529573)
Conflicts    : 7398757  (Analyzed: 7398751)
Restarts     : 7074     (Average: 1045.91 Last: 419081)
Model-Level  : 44.6    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7605743  (Deleted: 7243127)
  Binary     : 709      (Ratio:   0.01%)
  Ternary    : 17884    (Ratio:   0.24%)
  Conflict   : 7398751  (Average Length:  180.6 Ratio:  97.28%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 206992   (Average Length:   42.7 Ratio:   2.72%) 
  Distributed: 69121    (Ratio:   0.93% Average LBD: 3.68) 
  Integrated : 207363   (Ratio: 300.00% Unit: 658 Average Jumps: 4.61)
Backjumps    : 7398751  (Average:  1.14 Max:  93 Sum: 8421041)
  Executed   : 7398743  (Average:  1.14 Max:  93 Sum: 8420993 Ratio: 100.00%)
  Bounded    : 8        (Average:  6.00 Max:  34 Sum:     48 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  8 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasStyle(1)) ; 
  7 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(0)) ; 
  10 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasStyle(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(0)) 
}.
