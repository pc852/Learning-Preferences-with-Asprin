asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(2,eq,13) output(2,eq,18) output(2,eq,14) output(2,eq,6) output(2,eq,1) output(2,eq,66) output(2,eq,29) output(2,eq,42) output(2,eq,0) output(13,eq,18) output(13,eq,14) output(13,eq,6) output(13,eq,1) output(13,eq,66) output(13,eq,29) output(13,eq,42) output(13,eq,0) output(18,eq,14) output(18,eq,6) output(18,eq,1) output(18,eq,66) output(18,eq,29) output(18,eq,42) output(18,eq,0) output(14,eq,6) output(14,eq,1) output(14,eq,66) output(14,eq,29) output(14,eq,42) output(14,eq,0) output(6,eq,1) output(6,eq,66) output(6,eq,29) output(6,eq,42) output(6,eq,0) output(1,eq,66) output(1,eq,29) output(1,eq,42) output(1,eq,0) output(66,eq,29) output(66,eq,42) output(66,eq,0) output(29,eq,42) output(29,eq,0) output(42,eq,0)
Optimization: 45 0
Answer: 2
preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(2,better,13) output(2,better,18) output(14,better,6) output(14,better,1) output(1,worse,66) output(1,worse,29) output(1,worse,42) output(1,worse,0) output(2,worse,14) output(2,worse,66) output(2,worse,29) output(2,worse,42) output(2,worse,0) output(6,worse,66) output(6,worse,29) output(6,worse,42) output(6,worse,0) output(13,worse,14) output(13,worse,6) output(13,worse,1) output(13,worse,66) output(13,worse,29) output(13,worse,42) output(13,worse,0) output(18,worse,14) output(18,worse,6) output(18,worse,1) output(18,worse,66) output(18,worse,29) output(18,worse,42) output(18,worse,0) output(2,eq,6) output(2,eq,1) output(13,eq,18) output(14,eq,66) output(14,eq,29) output(14,eq,42) output(14,eq,0) output(6,eq,1) output(66,eq,29) output(66,eq,42) output(66,eq,0) output(29,eq,42) output(29,eq,0) output(42,eq,0)
Optimization: 41 3
Answer: 3
preference(1,(1,5),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(1,better,29) output(2,better,29) output(6,better,29) output(13,better,29) output(14,better,29) output(18,better,29) output(66,better,29) output(29,worse,42) output(29,worse,0) output(2,eq,13) output(2,eq,18) output(2,eq,14) output(2,eq,6) output(2,eq,1) output(2,eq,66) output(2,eq,42) output(2,eq,0) output(13,eq,18) output(13,eq,14) output(13,eq,6) output(13,eq,1) output(13,eq,66) output(13,eq,42) output(13,eq,0) output(18,eq,14) output(18,eq,6) output(18,eq,1) output(18,eq,66) output(18,eq,42) output(18,eq,0) output(14,eq,6) output(14,eq,1) output(14,eq,66) output(14,eq,42) output(14,eq,0) output(6,eq,1) output(6,eq,66) output(6,eq,42) output(6,eq,0) output(1,eq,66) output(1,eq,42) output(1,eq,0) output(66,eq,42) output(66,eq,0) output(42,eq,0)
Optimization: 38 1
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,less(weight)) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(13,better,14) output(13,better,6) output(18,better,14) output(18,better,6) output(6,worse,1) output(6,worse,66) output(6,worse,29) output(6,worse,42) output(6,worse,0) output(13,worse,1) output(13,worse,66) output(13,worse,29) output(13,worse,42) output(13,worse,0) output(14,worse,1) output(14,worse,66) output(14,worse,29) output(14,worse,42) output(14,worse,0) output(18,worse,1) output(18,worse,66) output(18,worse,29) output(18,worse,42) output(18,worse,0) output(2,eq,1) output(2,eq,66) output(2,eq,29) output(2,eq,42) output(2,eq,0) output(13,eq,18) output(14,eq,6) output(1,eq,66) output(1,eq,29) output(1,eq,42) output(1,eq,0) output(66,eq,29) output(66,eq,42) output(66,eq,0) output(29,eq,42) output(29,eq,0) output(42,eq,0)
Optimization: 37 7
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasPrice(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,6),1,for(atom(hasStyle(0))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(29,better,0) output(1,better,0) output(2,better,0) output(6,better,0) output(13,better,0) output(14,better,0) output(18,better,0) output(42,better,0) output(66,better,0) output(2,eq,13) output(2,eq,18) output(2,eq,14) output(2,eq,6) output(2,eq,1) output(2,eq,66) output(2,eq,29) output(2,eq,42) output(13,eq,18) output(13,eq,14) output(13,eq,6) output(13,eq,1) output(13,eq,66) output(13,eq,29) output(13,eq,42) output(18,eq,14) output(18,eq,6) output(18,eq,1) output(18,eq,66) output(18,eq,29) output(18,eq,42) output(14,eq,6) output(14,eq,1) output(14,eq,66) output(14,eq,29) output(14,eq,42) output(6,eq,1) output(6,eq,66) output(6,eq,29) output(6,eq,42) output(1,eq,66) output(1,eq,29) output(1,eq,42) output(66,eq,29) output(66,eq,42) output(29,eq,42)
Optimization: 36 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,12),1,for(atom(hasOiliness(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(6,better,1) output(13,better,14) output(13,better,6) output(13,better,1) output(14,better,1) output(18,better,14) output(18,better,6) output(18,better,1) output(1,worse,66) output(1,worse,29) output(1,worse,42) output(1,worse,0) output(6,worse,66) output(6,worse,29) output(6,worse,42) output(6,worse,0) output(13,worse,66) output(13,worse,29) output(13,worse,42) output(13,worse,0) output(14,worse,6) output(14,worse,66) output(14,worse,29) output(14,worse,42) output(14,worse,0) output(18,worse,66) output(18,worse,29) output(18,worse,42) output(18,worse,0) output(2,eq,66) output(2,eq,29) output(2,eq,42) output(2,eq,0) output(13,eq,18) output(66,eq,29) output(66,eq,42) output(66,eq,0) output(29,eq,42) output(29,eq,0) output(42,eq,0)
Optimization: 32 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,11),1,for(atom(hasStyle(0))),5) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),6) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 14
Progression : 1 [ 1;14] (Error: 13)
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasStyle(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),1) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),5) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,13),1,for(atom(hasStyle(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 12
Answer: 10
preference(1,(1,2),1,for(atom(hasPrice(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),8) preference(1,(1,5),1,for(atom(hasStyle(0))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasOiliness(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 10
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,13),1,for(atom(hasOiliness(1))),1) preference(1,(1,14),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 9
Progression : 1 [2;9] (Error: 3.5)
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,11),1,for(atom(hasPrice(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 8
Answer: 13
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,9),1,for(atom(hasStyle(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasPrice(0))),4) preference(1,(1,13),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(29,better,42) output(29,better,0) output(1,better,66) output(1,better,29) output(1,better,42) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,29) output(2,better,42) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,29) output(6,better,42) output(6,better,0) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,29) output(13,better,42) output(13,better,0) output(14,better,6) output(14,better,1) output(14,better,66) output(14,better,29) output(14,better,42) output(14,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,29) output(18,better,42) output(18,better,0) output(42,better,0) output(66,better,29) output(66,better,42) output(66,better,0) output(13,eq,18)
Optimization: 1 7
Progression : 1 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.046 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 1 7
Calls        : 1
Time         : 298.082s (Solving: 296.21s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.369s
Threads      : 4        (Winner: 4)

Choices      : 9423690  (Domain: 642831)
Conflicts    : 6817694  (Analyzed: 6817691)
Restarts     : 6125     (Average: 1113.09 Last: 287353)
Model-Level  : 65.4    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6867310  (Deleted: 6617373)
  Binary     : 1326     (Ratio:   0.02%)
  Ternary    : 6884     (Ratio:   0.10%)
  Conflict   : 6817691  (Average Length:  278.5 Ratio:  99.28%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 49619    (Average Length:   35.3 Ratio:   0.72%) 
  Distributed: 16688    (Ratio:   0.24% Average LBD: 3.64) 
  Integrated : 50064    (Ratio: 300.00% Unit: 53 Average Jumps: 13.42)
Backjumps    : 6817691  (Average:  1.32 Max: 452 Sum: 8993786)
  Executed   : 6817690  (Average:  1.32 Max: 452 Sum: 8993760 Ratio: 100.00%)
  Bounded    : 1        (Average: 26.00 Max:  26 Sum:     26 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8706    
  Sum        : 73      
  Count      : 14      
Equivalences : 9337     (Atom=Atom: 501 Body=Body: 235 Other: 8601)
Tight        : Yes
Variables    : 7543     (Eliminated:    0 Frozen: 4883)
Constraints  : 189286   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.
