asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,22) output(1,eq,32) output(1,eq,21) output(1,eq,8) output(1,eq,41) output(1,eq,7) output(1,eq,26) output(1,eq,59) output(1,eq,51) output(22,eq,32) output(22,eq,21) output(22,eq,8) output(22,eq,41) output(22,eq,7) output(22,eq,26) output(22,eq,59) output(22,eq,51) output(32,eq,21) output(32,eq,8) output(32,eq,41) output(32,eq,7) output(32,eq,26) output(32,eq,59) output(32,eq,51) output(21,eq,8) output(21,eq,41) output(21,eq,7) output(21,eq,26) output(21,eq,59) output(21,eq,51) output(8,eq,41) output(8,eq,7) output(8,eq,26) output(8,eq,59) output(8,eq,51) output(41,eq,7) output(41,eq,26) output(41,eq,59) output(41,eq,51) output(7,eq,26) output(7,eq,59) output(7,eq,51) output(26,eq,59) output(26,eq,51) output(59,eq,51)
Optimization: 45 0
Answer: 2
preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(1,better,8) output(1,better,26) output(7,better,26) output(21,better,8) output(21,better,26) output(22,better,8) output(22,better,26) output(32,better,8) output(32,better,26) output(41,better,26) output(26,worse,59) output(26,worse,51) output(8,worse,41) output(8,worse,7) output(8,worse,59) output(8,worse,51) output(1,eq,22) output(1,eq,32) output(1,eq,21) output(1,eq,41) output(1,eq,7) output(1,eq,59) output(1,eq,51) output(22,eq,32) output(22,eq,21) output(22,eq,41) output(22,eq,7) output(22,eq,59) output(22,eq,51) output(32,eq,21) output(32,eq,41) output(32,eq,7) output(32,eq,59) output(32,eq,51) output(21,eq,41) output(21,eq,7) output(21,eq,59) output(21,eq,51) output(8,eq,26) output(41,eq,7) output(41,eq,59) output(41,eq,51) output(7,eq,59) output(7,eq,51) output(59,eq,51)
Optimization: 35 2
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasStyle(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),6) preference(1,less(weight)) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,26) output(21,better,26) output(22,better,32) output(22,better,21) output(22,better,26) output(32,better,26) output(41,better,26) output(26,worse,59) output(26,worse,51) output(1,worse,7) output(8,worse,7) output(8,worse,59) output(8,worse,51) output(21,worse,8) output(21,worse,41) output(21,worse,7) output(21,worse,59) output(21,worse,51) output(22,worse,7) output(22,worse,59) output(22,worse,51) output(32,worse,8) output(32,worse,41) output(32,worse,7) output(32,worse,59) output(32,worse,51) output(41,worse,7) output(41,worse,59) output(41,worse,51) output(59,worse,51) output(22,eq,8) output(22,eq,41) output(32,eq,21) output(8,eq,41)
Optimization: 27 14
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(7,better,59) output(7,better,51) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,59) output(32,better,51) output(41,better,59) output(41,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,worse,8) output(1,worse,41) output(1,worse,7) output(1,worse,26) output(1,worse,59) output(1,worse,51) output(8,worse,41) output(8,worse,7) output(8,worse,26) output(32,worse,21) output(41,worse,7) output(41,worse,26) output(59,worse,51) output(22,eq,21) output(32,eq,7) output(32,eq,26) output(7,eq,26)
Optimization: 20 14
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,41) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,8) output(22,better,41) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,59) output(32,better,51) output(41,better,59) output(41,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,worse,7) output(1,worse,26) output(8,worse,7) output(8,worse,26) output(22,worse,32) output(22,worse,21) output(22,worse,7) output(22,worse,26) output(32,worse,21) output(41,worse,7) output(41,worse,26) output(59,worse,51) output(1,eq,8) output(32,eq,7) output(32,eq,26) output(7,eq,26)
Optimization: 19 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,59) output(32,better,51) output(41,better,59) output(41,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,worse,41) output(1,worse,7) output(1,worse,26) output(8,worse,41) output(8,worse,7) output(8,worse,26) output(32,worse,21) output(41,worse,7) output(41,worse,26) output(59,worse,51) output(1,eq,8) output(22,eq,21) output(32,eq,7) output(32,eq,26) output(7,eq,26)
Optimization: 18 13
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,7) output(1,better,59) output(1,better,51) output(7,better,59) output(8,better,7) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,59) output(41,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,worse,41) output(1,worse,26) output(7,worse,26) output(7,worse,51) output(8,worse,41) output(8,worse,26) output(32,worse,21) output(41,worse,26) output(59,worse,51) output(1,eq,8) output(22,eq,21) output(32,eq,26)
Optimization: 15 13
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,7) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,59) output(41,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,worse,41) output(1,worse,26) output(7,worse,26) output(8,worse,41) output(8,worse,26) output(32,worse,21) output(41,worse,26) output(59,worse,51) output(1,eq,8) output(22,eq,21) output(32,eq,26)
Optimization: 14 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,7) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,59) output(41,better,51) output(59,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,worse,41) output(1,worse,26) output(7,worse,26) output(8,worse,41) output(8,worse,26) output(32,worse,21) output(41,worse,26) output(1,eq,8) output(22,eq,21) output(32,eq,26)
Optimization: 13 13
Answer: 10
preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasStyle(1))),7) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,32) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,51) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(1,worse,22) output(1,worse,21) output(1,worse,41) output(7,worse,26) output(7,worse,59) output(8,worse,41) output(21,worse,41) output(32,worse,21) output(32,worse,8) output(32,worse,41) output(1,eq,8) output(22,eq,41)
Optimization: 12 13
Answer: 11
preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasStyle(1))),7) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),4) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,32) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(1,worse,22) output(1,worse,21) output(1,worse,41) output(8,worse,41) output(21,worse,41) output(32,worse,21) output(32,worse,8) output(32,worse,41) output(1,eq,8) output(22,eq,41) output(7,eq,26)
Optimization: 11 13
Answer: 12
preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),7) preference(1,(1,10),1,for(atom(hasStyle(1))),7) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),4) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,32) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(1,worse,22) output(1,worse,21) output(1,worse,41) output(8,worse,41) output(21,worse,41) output(32,worse,21) output(32,worse,8) output(32,worse,41) output(1,eq,8) output(22,eq,41)
Optimization: 10 13
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,3),1,for(atom(hasStyle(1))),9) preference(1,(1,4),1,for(atom(hasOiliness(1))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),3) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasPrice(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,10),1,for(atom(hasStyle(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(26,better,51) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,26) output(32,better,51) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(26,worse,59) output(32,worse,21) output(32,worse,8) output(32,worse,41) output(32,worse,7) output(41,worse,7) output(1,eq,22) output(32,eq,59) output(21,eq,8)
Optimization: 9 13
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasStyle(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),2) preference(1,less(weight)) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,26) output(8,better,51) output(21,better,8) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(26,worse,59) output(8,worse,41) output(8,worse,7) output(8,worse,59) output(21,worse,41) output(32,worse,41) output(22,eq,41) output(32,eq,21)
Optimization: 8 13
Answer: 15
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(1,worse,22) output(1,worse,32) output(1,worse,21) output(1,eq,8) output(1,eq,41) output(32,eq,21) output(8,eq,41)
Optimization: 7 13
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,10),1,for(atom(hasStyle(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(8,better,7) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(7,worse,26) output(8,worse,41) output(8,worse,26) output(7,eq,59) output(7,eq,51) output(59,eq,51)
Optimization: 6 13
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasStyle(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(8,worse,41) output(8,worse,7) output(8,worse,26) output(7,eq,26) output(59,eq,51)
Optimization: 5 13
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,7),1,for(atom(hasStyle(0))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(8,eq,41) output(7,eq,26) output(59,eq,51)
Optimization: 3 13
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasStyle(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasOiliness(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(8,eq,41) output(59,eq,51)
Optimization: 2 13
Answer: 20
preference(1,(1,1),1,for(atom(hasStyle(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,5),1,for(atom(hasStyle(1))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),9) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51) output(32,eq,21)
Optimization: 1 13
Answer: 21
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),5) preference(1,(1,7),1,for(atom(hasStyle(0))),8) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasStyle(1))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,6),1,for(atom(hasPrice(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasStyle(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51)
Optimization: 0 13
Answer: 23
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,6),1,for(atom(hasPrice(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,8),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51)
Optimization: 0 12
Answer: 24
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,9),1,for(atom(hasStyle(0))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51)
Optimization: 0 11
Answer: 25
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,5),1,for(atom(hasStyle(0))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),4) preference(1,(1,8),1,for(atom(hasOiliness(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,12),1,for(atom(hasOiliness(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(26,better,59) output(26,better,51) output(1,better,22) output(1,better,32) output(1,better,21) output(1,better,8) output(1,better,41) output(1,better,7) output(1,better,26) output(1,better,59) output(1,better,51) output(7,better,26) output(7,better,59) output(7,better,51) output(8,better,41) output(8,better,7) output(8,better,26) output(8,better,59) output(8,better,51) output(21,better,8) output(21,better,41) output(21,better,7) output(21,better,26) output(21,better,59) output(21,better,51) output(22,better,32) output(22,better,21) output(22,better,8) output(22,better,41) output(22,better,7) output(22,better,26) output(22,better,59) output(22,better,51) output(32,better,21) output(32,better,8) output(32,better,41) output(32,better,7) output(32,better,26) output(32,better,59) output(32,better,51) output(41,better,7) output(41,better,26) output(41,better,59) output(41,better,51) output(59,better,51)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.044 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.038s (Solving: 296.04s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.701s
Threads      : 4        (Winner: 4)

Choices      : 8345723  (Domain: 434250)
Conflicts    : 6516054  (Analyzed: 6516051)
Restarts     : 5650     (Average: 1153.28 Last: 529134)
Model-Level  : 37.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6629129  (Deleted: 6377389)
  Binary     : 1267     (Ratio:   0.02%)
  Ternary    : 17394    (Ratio:   0.26%)
  Conflict   : 6516051  (Average Length:  252.1 Ratio:  98.29%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 113078   (Average Length:   33.5 Ratio:   1.71%) 
  Distributed: 37961    (Ratio:   0.58% Average LBD: 3.60) 
  Integrated : 113883   (Ratio: 300.00% Unit: 265 Average Jumps: 6.18)
Backjumps    : 6516051  (Average:  1.24 Max: 628 Sum: 8072983)
  Executed   : 6516046  (Average:  1.24 Max: 628 Sum: 8072932 Ratio: 100.00%)
  Bounded    : 5        (Average: 10.20 Max:  43 Sum:     51 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasStyle(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasStyle(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.
