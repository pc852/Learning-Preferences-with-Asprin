asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,43) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,43) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(37,eq,6) output(3,eq,1) output(3,eq,43) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(3,eq,6) output(1,eq,43) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(1,eq,6) output(43,eq,9) output(43,eq,36) output(43,eq,20) output(43,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasStyle(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,3),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),6) preference(1,less(weight)) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(3,worse,43) output(14,worse,43) output(37,worse,43) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(37,eq,6) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(3,eq,6) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(1,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 40 14
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,3),1,for(atom(hasPrice(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),8) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasStyle(1))),7) preference(1,less(weight)) output(1,better,43) output(3,better,43) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(20,better,18) output(37,better,43) output(1,worse,20) output(1,worse,6) output(3,worse,20) output(3,worse,6) output(9,worse,20) output(9,worse,6) output(14,worse,20) output(14,worse,6) output(18,worse,6) output(36,worse,20) output(36,worse,6) output(37,worse,20) output(37,worse,6) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,18) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,18) output(1,eq,9) output(1,eq,36) output(1,eq,18) output(9,eq,36) output(9,eq,18) output(36,eq,18) output(20,eq,6)
Optimization: 34 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),8) preference(1,(1,4),1,for(atom(hasPrice(0))),8) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,less(weight)) output(1,better,9) output(3,better,1) output(3,better,9) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,9) output(37,better,3) output(37,better,1) output(37,better,9) output(43,better,9) output(1,worse,43) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(1,worse,6) output(3,worse,43) output(3,worse,36) output(3,worse,20) output(3,worse,18) output(3,worse,6) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(9,worse,6) output(37,worse,43) output(37,worse,36) output(37,worse,20) output(37,worse,18) output(37,worse,6) output(14,eq,43) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(43,eq,36) output(43,eq,20) output(43,eq,18) output(43,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 34 13
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasStyle(1))),7) preference(1,less(weight)) output(1,better,43) output(1,better,6) output(3,better,43) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,43) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,6) output(37,better,3) output(37,better,43) output(1,worse,20) output(3,worse,1) output(3,worse,9) output(3,worse,36) output(3,worse,20) output(3,worse,18) output(3,worse,6) output(9,worse,20) output(14,worse,20) output(36,worse,20) output(37,worse,1) output(37,worse,9) output(37,worse,36) output(37,worse,20) output(37,worse,18) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,18) output(37,eq,6) output(1,eq,9) output(1,eq,36) output(1,eq,18) output(9,eq,36) output(9,eq,18) output(36,eq,18)
Optimization: 31 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(3,better,43) output(3,better,9) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(1,worse,6) output(3,worse,36) output(3,worse,20) output(3,worse,18) output(3,worse,6) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(9,worse,6) output(18,worse,6) output(37,worse,3) output(37,worse,1) output(37,worse,36) output(37,worse,20) output(37,worse,18) output(37,worse,6) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,36) output(14,eq,20) output(3,eq,1) output(36,eq,20)
Optimization: 28 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),7) preference(1,less(weight)) output(1,better,43) output(1,better,6) output(3,better,43) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,6) output(1,worse,9) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(3,worse,9) output(3,worse,36) output(3,worse,20) output(3,worse,18) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,1) output(37,worse,9) output(37,worse,36) output(37,worse,20) output(37,worse,18) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,36) output(14,eq,20) output(3,eq,1) output(36,eq,20)
Optimization: 25 14
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(3,better,1) output(3,better,9) output(3,better,18) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,18) output(43,better,9) output(43,better,18) output(1,worse,43) output(1,worse,36) output(1,worse,20) output(1,worse,6) output(3,worse,20) output(3,worse,6) output(9,worse,36) output(9,worse,20) output(9,worse,6) output(18,worse,6) output(36,worse,20) output(36,worse,6) output(37,worse,20) output(43,worse,20) output(43,worse,6) output(14,eq,20) output(37,eq,6) output(3,eq,43) output(3,eq,36) output(1,eq,9) output(1,eq,18) output(43,eq,36) output(9,eq,18)
Optimization: 23 14
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,6) output(3,better,43) output(3,better,9) output(3,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,6) output(43,better,9) output(43,better,6) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(3,worse,36) output(3,worse,20) output(3,worse,18) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(37,worse,3) output(37,worse,1) output(37,worse,36) output(37,worse,20) output(37,worse,18) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,36) output(14,eq,20) output(3,eq,1) output(9,eq,6) output(36,eq,20)
Optimization: 22 14
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,18) output(1,worse,36) output(1,worse,20) output(1,worse,6) output(3,worse,36) output(3,worse,20) output(3,worse,6) output(9,worse,36) output(9,worse,20) output(9,worse,6) output(18,worse,6) output(36,worse,20) output(36,worse,6) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,20) output(37,eq,6) output(9,eq,18)
Optimization: 21 14
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasStyle(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,9) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,18) output(43,better,6) output(1,worse,36) output(1,worse,20) output(3,worse,1) output(3,worse,43) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(9,worse,6) output(14,worse,36) output(14,worse,20) output(36,worse,20) output(37,worse,36) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(3,eq,18) output(3,eq,6) output(18,eq,6)
Optimization: 20 14
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),7) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,12),1,for(atom(hasPrice(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,9) output(3,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,18) output(43,better,6) output(1,worse,36) output(1,worse,20) output(3,worse,1) output(3,worse,43) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(9,worse,6) output(14,worse,36) output(14,worse,20) output(36,worse,20) output(37,worse,1) output(37,worse,36) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(3,eq,18)
Optimization: 19 14
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),7) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,12),1,for(atom(hasPrice(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,9) output(3,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,18) output(43,better,6) output(1,worse,36) output(1,worse,20) output(3,worse,1) output(3,worse,43) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(9,worse,6) output(14,worse,36) output(14,worse,20) output(36,worse,20) output(37,worse,36) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(3,eq,18)
Optimization: 18 14
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(3,better,1) output(3,better,9) output(3,better,18) output(3,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,9) output(37,better,36) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,18) output(43,better,6) output(1,worse,43) output(1,worse,9) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(1,worse,6) output(3,worse,43) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(9,worse,6) output(36,worse,20) output(37,worse,43) output(37,worse,20) output(43,worse,20) output(14,eq,20) output(3,eq,36)
Optimization: 18 13
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,5),1,for(atom(hasPrice(1))),9) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasOiliness(0))),4) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(1,better,43) output(1,better,36) output(1,better,20) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,36) output(37,better,20) output(37,better,6) output(43,better,6) output(1,worse,9) output(1,worse,18) output(20,worse,18) output(36,worse,18) output(37,worse,3) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3) output(37,eq,9) output(37,eq,18) output(9,eq,18) output(36,eq,20)
Optimization: 14 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasPrice(1))),9) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,10),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasOiliness(0))),8) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,20) output(37,better,6) output(43,better,20) output(43,better,6) output(1,worse,36) output(9,worse,36) output(9,worse,18) output(14,worse,3) output(20,worse,18) output(37,worse,3) output(37,worse,1) output(37,worse,36) output(37,worse,18) output(43,worse,36) output(43,worse,18) output(43,eq,9)
Optimization: 12 14
Answer: 17
preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,5),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,6) output(14,better,37) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(36,better,20) output(36,better,6) output(37,better,36) output(37,better,20) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,6) output(9,worse,18) output(14,worse,3) output(20,worse,18) output(20,worse,6) output(36,worse,18) output(37,worse,3) output(37,worse,1) output(37,worse,43) output(37,worse,18) output(43,worse,18) output(14,eq,1) output(37,eq,9)
Optimization: 12 13
Answer: 18
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,1) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(3,worse,43) output(14,worse,37) output(14,worse,43) output(20,worse,18) output(37,worse,43) output(14,eq,3) output(1,eq,9) output(1,eq,36) output(9,eq,36)
Optimization: 10 12
Answer: 19
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,20) output(43,better,18) output(43,better,6) output(14,worse,37) output(20,worse,18) output(14,eq,3) output(1,eq,43) output(1,eq,9) output(1,eq,36) output(43,eq,9) output(43,eq,36) output(9,eq,36)
Optimization: 9 13
Answer: 20
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(14,worse,37) output(20,worse,18) output(14,eq,3) output(1,eq,9) output(1,eq,36) output(9,eq,36)
Optimization: 7 13
Answer: 21
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(14,worse,37) output(20,worse,18) output(20,worse,6) output(14,eq,3) output(1,eq,43) output(9,eq,36)
Optimization: 6 13
Answer: 22
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(14,worse,37) output(20,worse,18) output(14,eq,3) output(1,eq,43) output(9,eq,36)
Optimization: 5 13
Answer: 23
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(20,worse,18) output(20,worse,6) output(14,eq,37) output(9,eq,36)
Optimization: 4 12
Answer: 24
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(20,worse,18) output(14,eq,37) output(9,eq,36)
Optimization: 3 12
Answer: 25
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(20,worse,18) output(9,eq,36)
Optimization: 2 13
Answer: 26
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasStyle(1))),9) preference(1,(1,7),1,for(atom(hasOiliness(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasPrice(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(36,eq,20)
Optimization: 1 13
Answer: 27
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 28
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 29
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 12
Answer: 30
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,4),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),3) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 11
Progression : 0 [ 3;11] (Error: 2.66667)
Answer: 31
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 10
Answer: 32
preference(1,(1,2),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.030 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 32+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 298.160s (Solving: 296.29s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.839s
Threads      : 4        (Winner: 4)

Choices      : 10646615 (Domain: 590860)
Conflicts    : 6709831  (Analyzed: 6709828)
Restarts     : 5779     (Average: 1161.07 Last: 522460)
Model-Level  : 116.7   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6829906  (Deleted: 6507288)
  Binary     : 766      (Ratio:   0.01%)
  Ternary    : 10221    (Ratio:   0.15%)
  Conflict   : 6709828  (Average Length:  275.7 Ratio:  98.24%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 120078   (Average Length:  248.7 Ratio:   1.76%) 
  Distributed: 40076    (Ratio:   0.60% Average LBD: 3.67) 
  Integrated : 120228   (Ratio: 300.00% Unit: 181 Average Jumps: 7.29)
Backjumps    : 6709828  (Average:  1.50 Max: 810 Sum: 10037643)
  Executed   : 6709827  (Average:  1.50 Max: 810 Sum: 10037600 Ratio: 100.00%)
  Bounded    : 1        (Average: 43.00 Max:  43 Sum:     43 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  2 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasStyle(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.
