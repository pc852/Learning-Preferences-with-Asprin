asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,42) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(15,eq,28) output(15,eq,92) output(34,eq,54) output(34,eq,4) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,28) output(34,eq,92) output(54,eq,4) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,28) output(54,eq,92) output(4,eq,42) output(4,eq,11) output(4,eq,17) output(4,eq,0) output(4,eq,28) output(4,eq,92) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,28) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,28) output(11,eq,92) output(17,eq,0) output(17,eq,28) output(17,eq,92) output(0,eq,28) output(0,eq,92) output(28,eq,92)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasStyle(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),6) preference(1,less(weight)) output(0,better,28) output(4,better,28) output(11,better,28) output(17,better,28) output(34,better,28) output(42,better,28) output(54,better,28) output(15,worse,34) output(15,worse,54) output(15,worse,4) output(15,worse,42) output(15,worse,11) output(15,worse,17) output(15,worse,0) output(15,worse,92) output(28,worse,92) output(15,eq,28) output(34,eq,54) output(34,eq,4) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,4) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(4,eq,42) output(4,eq,11) output(4,eq,17) output(4,eq,0) output(4,eq,92) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,92) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 38 9
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasStyle(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasPrice(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(0,better,28) output(4,better,28) output(11,better,28) output(15,better,28) output(17,better,28) output(34,better,28) output(42,better,28) output(54,better,28) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,42) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,4) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,4) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(4,eq,42) output(4,eq,11) output(4,eq,17) output(4,eq,0) output(4,eq,92) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,92) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 37 14
Answer: 4
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasStyle(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasPrice(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),6) preference(1,less(weight)) output(0,better,28) output(4,better,28) output(11,better,28) output(15,better,4) output(15,better,28) output(17,better,28) output(34,better,4) output(34,better,28) output(42,better,28) output(54,better,4) output(54,better,28) output(4,worse,42) output(4,worse,11) output(4,worse,17) output(4,worse,0) output(4,worse,92) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,42) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,92) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 34 14
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasStyle(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasPrice(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),6) preference(1,less(weight)) output(0,better,28) output(4,better,11) output(4,better,28) output(15,better,4) output(15,better,11) output(15,better,28) output(17,better,28) output(34,better,4) output(34,better,11) output(34,better,28) output(42,better,11) output(42,better,28) output(54,better,4) output(54,better,11) output(54,better,28) output(4,worse,42) output(4,worse,17) output(4,worse,0) output(4,worse,92) output(11,worse,17) output(11,worse,0) output(11,worse,92) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,42) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,42) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,42) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,28) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 30 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasStyle(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasPrice(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(0,better,28) output(4,better,11) output(4,better,28) output(11,better,28) output(15,better,4) output(15,better,11) output(15,better,28) output(17,better,28) output(34,better,4) output(34,better,11) output(34,better,28) output(42,better,11) output(42,better,28) output(54,better,4) output(54,better,11) output(54,better,28) output(4,worse,42) output(4,worse,17) output(4,worse,0) output(4,worse,92) output(11,worse,17) output(11,worse,0) output(11,worse,92) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,42) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,42) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,42) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 29 14
Answer: 7
preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,9),1,for(atom(hasOiliness(0))),4) preference(1,(1,10),1,for(atom(hasStyle(0))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),4) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,11) output(4,better,28) output(4,better,92) output(11,better,92) output(15,better,34) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(4,worse,42) output(4,worse,17) output(4,worse,0) output(11,worse,17) output(11,worse,0) output(34,worse,54) output(34,worse,4) output(34,worse,42) output(34,worse,17) output(34,worse,0) output(15,eq,54) output(34,eq,11) output(34,eq,28) output(11,eq,28) output(17,eq,0)
Optimization: 15 13
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasOiliness(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(0,better,28) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(11,better,17) output(11,better,0) output(11,better,28) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(17,better,28) output(34,better,17) output(34,better,0) output(34,better,28) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(0,worse,92) output(4,worse,92) output(11,worse,92) output(17,worse,92) output(28,worse,92) output(34,worse,54) output(34,worse,4) output(34,worse,42) output(34,worse,92) output(42,worse,92) output(54,worse,92) output(15,eq,92) output(34,eq,11) output(17,eq,0)
Optimization: 14 14
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasOiliness(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,12),1,for(atom(hasPrice(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,less(weight)) output(0,better,28) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(11,better,17) output(11,better,0) output(11,better,28) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(17,better,28) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(0,worse,92) output(4,worse,92) output(11,worse,92) output(17,worse,92) output(28,worse,92) output(34,worse,54) output(34,worse,4) output(34,worse,42) output(34,worse,92) output(42,worse,92) output(54,worse,92) output(15,eq,92) output(17,eq,0)
Optimization: 13 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,5),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,92) output(15,better,34) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,92) output(28,better,92) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(0,worse,28) output(4,worse,28) output(11,worse,17) output(11,worse,0) output(11,worse,28) output(11,worse,92) output(17,worse,28) output(34,worse,54) output(42,worse,28) output(15,eq,54) output(34,eq,28) output(17,eq,0)
Optimization: 12 10
Answer: 11
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),9) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,92) output(28,better,92) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(34,worse,54) output(34,worse,4) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(42,worse,92) output(15,eq,54) output(17,eq,0) output(17,eq,28) output(0,eq,28)
Optimization: 11 11
Answer: 12
preference(1,(1,2),1,for(atom(hasPrice(1))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasOiliness(1))),9) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,92) output(28,better,92) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(34,worse,54) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(42,worse,92) output(15,eq,54) output(17,eq,0) output(17,eq,28) output(0,eq,28)
Optimization: 10 11
Answer: 13
preference(1,(1,3),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasPrice(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasOiliness(1))),9) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,13),1,for(atom(hasStyle(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(28,worse,92) output(34,worse,54) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(42,worse,92) output(15,eq,54) output(17,eq,0)
Optimization: 9 10
Answer: 14
preference(1,(1,1),1,for(atom(hasStyle(1))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,13),1,for(atom(hasPrice(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(34,eq,54) output(42,eq,92) output(17,eq,0)
Optimization: 7 11
Answer: 15
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(42,worse,92) output(17,eq,0)
Optimization: 6 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(11,worse,17) output(11,worse,0) output(34,worse,54) output(15,eq,54) output(34,eq,4) output(17,eq,0)
Optimization: 6 10
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,2),1,for(atom(hasStyle(1))),10) preference(1,(1,3),1,for(atom(hasPrice(0))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,12),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(28,worse,92) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(17,eq,0)
Optimization: 5 10
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasStyle(1))),2) preference(1,(1,12),1,for(atom(hasPrice(0))),2) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(15,worse,34) output(15,eq,54) output(42,eq,11) output(17,eq,0)
Optimization: 4 11
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,6),1,for(atom(hasPrice(1))),3) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),9) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(28,worse,92) output(34,eq,54) output(17,eq,0)
Optimization: 3 12
Answer: 20
preference(1,(1,1),1,for(atom(hasPrice(1))),5) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),10) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(42,eq,11) output(17,eq,0)
Optimization: 2 12
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 13
Answer: 22
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 12
Progression : 1 [ 1;12] (Error: 11)
Answer: 23
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 11
Answer: 24
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 10
Answer: 25
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 9
Answer: 26
preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 8
Progression : 1 [2;8] (Error: 3)
Progression : 1 [3;8] (Error: 1.66667)
Answer: 27
preference(1,(1,2),1,for(atom(hasPrice(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(17,eq,0)
Optimization: 1 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.056 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 27+
  Optimum    : unknown
Optimization : 1 7
Calls        : 1
Time         : 298.195s (Solving: 296.34s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.745s
Threads      : 4        (Winner: 4)

Choices      : 8809829  (Domain: 697749)
Conflicts    : 6795784  (Analyzed: 6795781)
Restarts     : 5876     (Average: 1156.53 Last: 445672)
Model-Level  : 47.4    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6877273  (Deleted: 6586212)
  Binary     : 911      (Ratio:   0.01%)
  Ternary    : 9292     (Ratio:   0.14%)
  Conflict   : 6795781  (Average Length:  228.9 Ratio:  98.82%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 81492    (Average Length:   35.3 Ratio:   1.18%) 
  Distributed: 27219    (Ratio:   0.40% Average LBD: 3.63) 
  Integrated : 81657    (Ratio: 300.00% Unit: 224 Average Jumps: 4.73)
Backjumps    : 6795781  (Average:  1.25 Max: 548 Sum: 8464430)
  Executed   : 6795777  (Average:  1.25 Max: 548 Sum: 8464398 Ratio: 100.00%)
  Bounded    : 4        (Average:  8.00 Max:  27 Sum:     32 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8706    
  Sum        : 73      
  Count      : 14      
Equivalences : 9337     (Atom=Atom: 501 Body=Body: 235 Other: 8601)
Tight        : Yes
Variables    : 7543     (Eliminated:    0 Frozen: 4883)
Constraints  : 189286   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasStyle(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.
