asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(32,eq,25) output(32,eq,1) output(32,eq,6) output(31,eq,11) output(31,eq,5) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(31,eq,6) output(11,eq,5) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(5,eq,8) output(5,eq,13) output(5,eq,20) output(5,eq,25) output(5,eq,1) output(5,eq,6) output(8,eq,13) output(8,eq,20) output(8,eq,25) output(8,eq,1) output(8,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasOiliness(3))),10) preference(1,less(weight)) output(11,better,5) output(31,better,5) output(32,better,5) output(5,worse,8) output(5,worse,13) output(5,worse,20) output(5,worse,25) output(5,worse,1) output(5,worse,6) output(32,eq,31) output(32,eq,11) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(32,eq,25) output(32,eq,1) output(32,eq,6) output(31,eq,11) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(31,eq,6) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(8,eq,13) output(8,eq,20) output(8,eq,25) output(8,eq,1) output(8,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 42 1
Answer: 3
preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,6) output(5,better,6) output(8,better,6) output(11,better,6) output(13,better,6) output(20,better,6) output(25,better,6) output(31,better,6) output(32,better,6) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(32,eq,25) output(32,eq,1) output(31,eq,11) output(31,eq,5) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(11,eq,5) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(5,eq,8) output(5,eq,13) output(5,eq,20) output(5,eq,25) output(5,eq,1) output(8,eq,13) output(8,eq,20) output(8,eq,25) output(8,eq,1) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(20,eq,25) output(20,eq,1) output(25,eq,1)
Optimization: 36 1
Answer: 4
preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,6) output(8,better,6) output(11,better,5) output(11,better,6) output(13,better,6) output(20,better,6) output(25,better,6) output(31,better,5) output(31,better,6) output(32,better,5) output(32,better,6) output(5,worse,8) output(5,worse,13) output(5,worse,20) output(5,worse,25) output(5,worse,1) output(32,eq,31) output(32,eq,11) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(32,eq,25) output(32,eq,1) output(31,eq,11) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(5,eq,6) output(8,eq,13) output(8,eq,20) output(8,eq,25) output(8,eq,1) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(20,eq,25) output(20,eq,1) output(25,eq,1)
Optimization: 34 2
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasPrice(2))),10) preference(1,less(weight)) output(1,better,6) output(5,better,25) output(5,better,6) output(8,better,25) output(8,better,6) output(13,better,25) output(13,better,6) output(20,better,25) output(20,better,6) output(31,better,11) output(31,better,25) output(31,better,6) output(32,better,11) output(32,better,25) output(32,better,6) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,worse,20) output(11,worse,1) output(25,worse,1) output(32,eq,31) output(32,eq,5) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(32,eq,1) output(31,eq,5) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,1) output(11,eq,25) output(11,eq,6) output(5,eq,8) output(5,eq,13) output(5,eq,20) output(5,eq,1) output(8,eq,13) output(8,eq,20) output(8,eq,1) output(13,eq,20) output(13,eq,1) output(20,eq,1) output(25,eq,6)
Optimization: 30 2
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(5,better,13) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,1) output(8,better,6) output(11,better,13) output(11,better,1) output(11,better,6) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,13) output(31,better,1) output(31,better,6) output(32,better,13) output(32,better,1) output(32,better,6) output(13,worse,20) output(13,worse,25) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,8) output(32,eq,20) output(32,eq,25) output(31,eq,11) output(31,eq,5) output(31,eq,8) output(31,eq,20) output(31,eq,25) output(11,eq,5) output(11,eq,8) output(11,eq,20) output(11,eq,25) output(5,eq,8) output(5,eq,20) output(5,eq,25) output(8,eq,20) output(8,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(1,eq,6)
Optimization: 26 2
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,25) output(32,better,1) output(32,better,6) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(31,eq,11) output(31,eq,5) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(11,eq,5) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(5,eq,8) output(5,eq,13) output(5,eq,20) output(8,eq,13) output(8,eq,20) output(13,eq,20) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 24 2
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(31,better,11) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,11) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(32,eq,31) output(32,eq,5) output(32,eq,8) output(32,eq,13) output(31,eq,5) output(31,eq,8) output(31,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(5,eq,8) output(5,eq,13) output(8,eq,13) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 23 3
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,10),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasOftenSold(2))),10) preference(1,less(weight)) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,13) output(11,better,20) output(11,better,25) output(11,better,1) output(11,better,6) output(31,better,5) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,5) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,8) output(32,eq,31) output(32,eq,11) output(32,eq,8) output(31,eq,11) output(31,eq,8) output(11,eq,8) output(5,eq,13) output(5,eq,20) output(5,eq,25) output(5,eq,1) output(5,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 22 5
Answer: 10
preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasOftenSold(2))),10) preference(1,less(weight)) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,13) output(11,better,20) output(11,better,25) output(11,better,1) output(11,better,6) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,8) output(31,eq,11) output(31,eq,5) output(31,eq,8) output(11,eq,5) output(11,eq,8) output(5,eq,8) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 20 3
Answer: 11
preference(1,(1,5),1,for(neg(atom(hasOiliness(2)))),9) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(2)))),9) preference(1,(1,1),1,for(atom(hasPrice(0))),9) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasOftenSold(1))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasPrice(2))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(3))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasOftenSold(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,20) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 12
preference(1,(1,4),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),7) preference(1,(1,11),1,for(neg(atom(hasStyle(0)))),2) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(6)))),10) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(1)))),8) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),9) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasPrice(3))),9) preference(1,(1,10),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,20) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6)
Optimization: 0 12
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,4),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,8),1,for(neg(atom(hasOftenSold(3)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,3),1,for(atom(hasPrice(1))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,11),1,for(atom(hasOiliness(0))),5) preference(1,(1,12),1,for(atom(hasPrice(3))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,20) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6)
Optimization: 0 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.164 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 597.611s (Solving: 584.60s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2350.847s
Threads      : 4        (Winner: 4)

Choices      : 11524030 (Domain: 1958)
Conflicts    : 2060060  (Analyzed: 2060058)
Restarts     : 2457     (Average: 838.44 Last: 216322)
Model-Level  : 888.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2063934  (Deleted: 1872518)
  Binary     : 588      (Ratio:   0.03%)
  Ternary    : 290      (Ratio:   0.01%)
  Conflict   : 2060058  (Average Length: 1835.9 Ratio:  99.81%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3876     (Average Length:  211.2 Ratio:   0.19%) 
  Distributed: 1292     (Ratio:   0.06% Average LBD: 3.36) 
  Integrated : 3876     (Ratio: 300.00% Unit: 7 Average Jumps: 5.57)
Backjumps    : 2060058  (Average:  3.29 Max: 3996 Sum: 6778139)
  Executed   : 2060057  (Average:  3.29 Max: 3996 Sum: 6778098 Ratio: 100.00%)
  Bounded    : 1        (Average: 41.00 Max:  41 Sum:     41 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  9 :: not atom(hasOiliness(2))  ; 
  9 :: not atom(hasMinorGrp(2))  ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(2)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(3)) ; 
  7 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  5 :: not atom(hasOiliness(2))  ; 
  9 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasPrice(3)) ; 
  7 :: not atom(hasMinorGrp(4))  ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: not atom(hasStyle(0))  ; 
  10 :: not atom(hasMinorGrp(6))  ; 
  8 :: not atom(hasMinorGrp(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(5)) ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  4 :: atom(hasPrice(1)) ; 
  1 :: not atom(hasOiliness(1))  ; 
  5 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: not atom(hasOftenSold(3))  ; 
  9 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.
