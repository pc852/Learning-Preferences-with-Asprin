asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(0,eq,22) output(0,eq,5) output(0,eq,25) output(0,eq,19) output(0,eq,8) output(0,eq,6) output(0,eq,44) output(0,eq,69) output(0,eq,49) output(22,eq,5) output(22,eq,25) output(22,eq,19) output(22,eq,8) output(22,eq,6) output(22,eq,44) output(22,eq,69) output(22,eq,49) output(5,eq,25) output(5,eq,19) output(5,eq,8) output(5,eq,6) output(5,eq,44) output(5,eq,69) output(5,eq,49) output(25,eq,19) output(25,eq,8) output(25,eq,6) output(25,eq,44) output(25,eq,69) output(25,eq,49) output(19,eq,8) output(19,eq,6) output(19,eq,44) output(19,eq,69) output(19,eq,49) output(8,eq,6) output(8,eq,44) output(8,eq,69) output(8,eq,49) output(6,eq,44) output(6,eq,69) output(6,eq,49) output(44,eq,69) output(44,eq,49) output(69,eq,49)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasOftenSold(2))),10) preference(1,less(weight)) output(0,better,22) output(0,better,19) output(5,better,19) output(25,better,19) output(19,worse,8) output(19,worse,6) output(19,worse,44) output(19,worse,69) output(19,worse,49) output(22,worse,5) output(22,worse,25) output(22,worse,8) output(22,worse,6) output(22,worse,44) output(22,worse,69) output(22,worse,49) output(0,eq,5) output(0,eq,25) output(0,eq,8) output(0,eq,6) output(0,eq,44) output(0,eq,69) output(0,eq,49) output(22,eq,19) output(5,eq,25) output(5,eq,8) output(5,eq,6) output(5,eq,44) output(5,eq,69) output(5,eq,49) output(25,eq,8) output(25,eq,6) output(25,eq,44) output(25,eq,69) output(25,eq,49) output(8,eq,6) output(8,eq,44) output(8,eq,69) output(8,eq,49) output(6,eq,44) output(6,eq,69) output(6,eq,49) output(44,eq,69) output(44,eq,49) output(69,eq,49)
Optimization: 41 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasOftenSold(2))),10) preference(1,less(weight)) output(0,better,22) output(0,better,19) output(0,better,69) output(5,better,19) output(5,better,69) output(6,better,69) output(8,better,69) output(25,better,19) output(25,better,69) output(44,better,69) output(19,worse,8) output(19,worse,6) output(19,worse,44) output(19,worse,49) output(22,worse,5) output(22,worse,25) output(22,worse,8) output(22,worse,6) output(22,worse,44) output(22,worse,49) output(69,worse,49) output(0,eq,5) output(0,eq,25) output(0,eq,8) output(0,eq,6) output(0,eq,44) output(0,eq,49) output(22,eq,19) output(22,eq,69) output(5,eq,25) output(5,eq,8) output(5,eq,6) output(5,eq,44) output(5,eq,49) output(25,eq,8) output(25,eq,6) output(25,eq,44) output(25,eq,49) output(19,eq,69) output(8,eq,6) output(8,eq,44) output(8,eq,49) output(6,eq,44) output(6,eq,49) output(44,eq,49)
Optimization: 35 2
Answer: 4
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,13),1,for(atom(hasOftenSold(2))),10) preference(1,(1,14),1,for(atom(hasOiliness(1))),10) preference(1,less(weight)) output(0,better,22) output(0,better,19) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,19) output(5,better,6) output(5,better,44) output(5,better,69) output(8,better,6) output(8,better,44) output(8,better,69) output(25,better,19) output(25,better,6) output(25,better,44) output(25,better,69) output(6,worse,49) output(19,worse,8) output(19,worse,49) output(22,worse,5) output(22,worse,25) output(22,worse,8) output(22,worse,49) output(44,worse,49) output(69,worse,49) output(0,eq,5) output(0,eq,25) output(0,eq,8) output(0,eq,49) output(22,eq,19) output(22,eq,6) output(22,eq,44) output(22,eq,69) output(5,eq,25) output(5,eq,8) output(5,eq,49) output(25,eq,8) output(25,eq,49) output(19,eq,6) output(19,eq,44) output(19,eq,69) output(8,eq,49) output(6,eq,44) output(6,eq,69) output(44,eq,69)
Optimization: 29 5
Answer: 5
preference(1,(1,5),1,for(atom(hasOiliness(1))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(6,worse,49) output(8,worse,49) output(19,worse,49) output(25,worse,49) output(44,worse,49) output(69,worse,49) output(0,eq,22) output(0,eq,5) output(0,eq,49) output(22,eq,5) output(22,eq,49) output(5,eq,49) output(25,eq,19) output(25,eq,8) output(25,eq,6) output(25,eq,44) output(25,eq,69) output(19,eq,8) output(19,eq,6) output(19,eq,44) output(19,eq,69) output(8,eq,6) output(8,eq,44) output(8,eq,69) output(6,eq,44) output(6,eq,69) output(44,eq,69)
Optimization: 27 4
Answer: 6
preference(1,(1,5),1,for(atom(hasOiliness(1))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),10) preference(1,less(weight)) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(6,worse,49) output(8,worse,49) output(19,worse,49) output(44,worse,49) output(69,worse,49) output(0,eq,22) output(0,eq,5) output(0,eq,25) output(0,eq,49) output(22,eq,5) output(22,eq,25) output(22,eq,49) output(5,eq,25) output(5,eq,49) output(25,eq,49) output(19,eq,8) output(19,eq,6) output(19,eq,44) output(19,eq,69) output(8,eq,6) output(8,eq,44) output(8,eq,69) output(6,eq,44) output(6,eq,69) output(44,eq,69)
Optimization: 25 3
Answer: 7
preference(1,(1,7),1,for(neg(atom(hasOiliness(2)))),2) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),9) preference(1,(1,9),1,for(atom(hasOiliness(1))),10) preference(1,(1,12),1,for(atom(hasOftenSold(3))),3) preference(1,(1,13),1,for(atom(hasPrice(3))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(6,better,69) output(19,better,8) output(19,better,69) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(44,better,69) output(0,worse,22) output(0,worse,49) output(5,worse,49) output(6,worse,44) output(6,worse,49) output(8,worse,6) output(8,worse,44) output(8,worse,49) output(19,worse,44) output(19,worse,49) output(25,worse,49) output(44,worse,49) output(69,worse,49) output(22,eq,49) output(19,eq,6) output(8,eq,69)
Optimization: 16 8
Answer: 8
preference(1,(1,7),1,for(neg(atom(hasOiliness(2)))),2) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),9) preference(1,(1,9),1,for(atom(hasOiliness(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasOftenSold(2))),1) preference(1,(1,12),1,for(atom(hasOftenSold(3))),3) preference(1,(1,13),1,for(atom(hasPrice(3))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(6,better,69) output(19,better,8) output(19,better,69) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(44,better,69) output(0,worse,49) output(5,worse,49) output(6,worse,44) output(6,worse,49) output(8,worse,6) output(8,worse,44) output(8,worse,49) output(19,worse,44) output(19,worse,49) output(22,worse,49) output(25,worse,49) output(44,worse,49) output(69,worse,49) output(19,eq,6) output(8,eq,69)
Optimization: 15 10
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,7),1,for(neg(atom(hasOiliness(2)))),2) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,3),1,for(atom(hasOftenSold(2))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasOftenSold(3))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(0,better,5) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(6,better,69) output(8,better,6) output(8,better,44) output(8,better,69) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(44,better,69) output(0,worse,22) output(0,worse,49) output(5,worse,25) output(5,worse,19) output(5,worse,49) output(6,worse,44) output(6,worse,49) output(8,worse,49) output(19,worse,49) output(25,worse,49) output(44,worse,49) output(69,worse,49) output(0,eq,25) output(22,eq,49)
Optimization: 14 13
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,9),1,for(neg(atom(hasOftenSold(3)))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasPrice(3))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,6),1,for(atom(hasPrice(0))),10) preference(1,(1,7),1,for(atom(hasOftenSold(3))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),3) preference(1,less(weight)) output(0,better,5) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(6,better,44) output(6,better,69) output(8,better,6) output(8,better,44) output(8,better,69) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(44,better,69) output(0,worse,22) output(0,worse,25) output(0,worse,49) output(5,worse,25) output(5,worse,49) output(6,worse,49) output(8,worse,49) output(19,worse,49) output(25,worse,49) output(44,worse,49) output(69,worse,49) output(22,eq,49) output(5,eq,19)
Optimization: 13 13
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,9),1,for(neg(atom(hasOftenSold(3)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,4),1,for(atom(hasPrice(3))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,6),1,for(atom(hasPrice(0))),10) preference(1,(1,7),1,for(atom(hasOftenSold(3))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(0,better,5) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(6,better,44) output(6,better,69) output(8,better,6) output(8,better,44) output(8,better,69) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(44,better,69) output(0,worse,22) output(0,worse,25) output(0,worse,49) output(5,worse,25) output(5,worse,49) output(6,worse,49) output(8,worse,49) output(19,worse,49) output(25,worse,49) output(44,worse,49) output(69,worse,49) output(22,eq,49)
Optimization: 12 14
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(1)))),1) preference(1,(1,13),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,14),1,for(neg(atom(hasOftenSold(0)))),3) preference(1,(1,2),1,for(atom(hasOftenSold(0))),10) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,4),1,for(atom(hasPrice(3))),4) preference(1,(1,5),1,for(atom(hasOftenSold(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(3))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),5) preference(1,(1,11),1,for(atom(hasOiliness(3))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 13
preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,2),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasPrice(3))),6) preference(1,(1,7),1,for(atom(hasOftenSold(3))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasOftenSold(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasOftenSold(0))),9) preference(1,(1,12),1,for(atom(hasOftenSold(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,14),1,for(atom(hasPrice(2))),3) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49)
Optimization: 0 13
Answer: 14
preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasPrice(3))),6) preference(1,(1,7),1,for(atom(hasOftenSold(3))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasOftenSold(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasOftenSold(0))),9) preference(1,(1,12),1,for(atom(hasOftenSold(1))),9) preference(1,(1,14),1,for(atom(hasPrice(2))),3) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49)
Optimization: 0 12
Answer: 15
preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,1),1,for(atom(hasPrice(2))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,4),1,for(atom(hasPrice(3))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasOftenSold(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(2))),3) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOftenSold(3)))),4) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,6),1,for(neg(atom(hasPrice(2)))),9) preference(1,(1,12),1,for(neg(atom(hasOftenSold(2)))),5) preference(1,(1,14),1,for(neg(atom(hasPrice(1)))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasOiliness(2))),2) preference(1,(1,9),1,for(atom(hasOftenSold(0))),8) preference(1,(1,10),1,for(atom(hasOftenSold(3))),3) preference(1,(1,13),1,for(atom(hasPrice(3))),8) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49)
Optimization: 0 10
Answer: 17
preference(1,(1,5),1,for(neg(atom(hasMinorGrp(6)))),10) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,2),1,for(atom(hasOftenSold(3))),2) preference(1,(1,4),1,for(atom(hasOftenSold(0))),9) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasPrice(2))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(0,better,22) output(0,better,5) output(0,better,25) output(0,better,19) output(0,better,8) output(0,better,6) output(0,better,44) output(0,better,69) output(0,better,49) output(5,better,25) output(5,better,19) output(5,better,8) output(5,better,6) output(5,better,44) output(5,better,69) output(5,better,49) output(6,better,44) output(6,better,69) output(6,better,49) output(8,better,6) output(8,better,44) output(8,better,69) output(8,better,49) output(19,better,8) output(19,better,6) output(19,better,44) output(19,better,69) output(19,better,49) output(22,better,5) output(22,better,25) output(22,better,19) output(22,better,8) output(22,better,6) output(22,better,44) output(22,better,69) output(22,better,49) output(25,better,19) output(25,better,8) output(25,better,6) output(25,better,44) output(25,better,69) output(25,better,49) output(44,better,69) output(44,better,49) output(69,better,49)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.201 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 597.683s (Solving: 583.69s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2347.874s
Threads      : 4        (Winner: 4)

Choices      : 9353869  (Domain: 1642)
Conflicts    : 1710969  (Analyzed: 1710967)
Restarts     : 1893     (Average: 903.84 Last: 134352)
Model-Level  : 1088.8  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1714681  (Deleted: 1573612)
  Binary     : 464      (Ratio:   0.03%)
  Ternary    : 162      (Ratio:   0.01%)
  Conflict   : 1710967  (Average Length: 1899.7 Ratio:  99.78%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3714     (Average Length:  253.7 Ratio:   0.22%) 
  Distributed: 1238     (Ratio:   0.07% Average LBD: 3.39) 
  Integrated : 3714     (Ratio: 300.00% Unit: 2 Average Jumps: 13.00)
Backjumps    : 1710967  (Average:  3.43 Max: 4293 Sum: 5863394)
  Executed   : 1710966  (Average:  3.43 Max: 4293 Sum: 5863371 Ratio: 100.00%)
  Bounded    : 1        (Average: 23.00 Max:  23 Sum:     23 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasOiliness(0)) ; 
  2 :: not atom(hasOiliness(2))  ; 
  9 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasOiliness(0)) ; 
  2 :: not atom(hasOiliness(2))  ; 
  9 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: not atom(hasOiliness(2))  ; 
  1 :: not atom(hasOiliness(0))  ; 
  10 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(3)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasOftenSold(3))  ; 
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMajorGrp(0))  ; 
  6 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(3)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasOftenSold(3))  ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMajorGrp(1))  ; 
  10 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(3)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: not atom(hasPrice(0))  ; 
  3 :: not atom(hasOftenSold(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  1 :: atom(hasStyle(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(3)) ; 
  1 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(3)) ; 
  1 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(2)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasOiliness(2)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOftenSold(3))  ; 
  1 :: atom(hasMinorGrp(7)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  9 :: not atom(hasPrice(2))  ; 
  2 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasOftenSold(3)) ; 
  5 :: not atom(hasOftenSold(2))  ; 
  8 :: atom(hasPrice(3)) ; 
  7 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  10 :: not atom(hasMinorGrp(6))  ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(2)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.
