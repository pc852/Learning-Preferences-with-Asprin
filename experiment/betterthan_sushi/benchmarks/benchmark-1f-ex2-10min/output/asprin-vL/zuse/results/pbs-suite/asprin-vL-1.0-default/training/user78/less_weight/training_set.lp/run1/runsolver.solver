asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,11) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(9,eq,21) output(9,eq,33) output(9,eq,35) output(9,eq,38) output(11,eq,0) output(11,eq,2) output(11,eq,22) output(11,eq,26) output(11,eq,21) output(11,eq,33) output(11,eq,35) output(11,eq,38) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,21) output(0,eq,33) output(0,eq,35) output(0,eq,38) output(2,eq,22) output(2,eq,26) output(2,eq,21) output(2,eq,33) output(2,eq,35) output(2,eq,38) output(22,eq,26) output(22,eq,21) output(22,eq,33) output(22,eq,35) output(22,eq,38) output(26,eq,21) output(26,eq,33) output(26,eq,35) output(26,eq,38) output(21,eq,33) output(21,eq,35) output(21,eq,38) output(33,eq,35) output(33,eq,38) output(35,eq,38)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,less(weight)) output(26,better,38) output(0,better,38) output(2,better,38) output(9,better,38) output(11,better,38) output(21,better,38) output(22,better,38) output(33,better,38) output(35,better,38) output(9,eq,11) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(9,eq,21) output(9,eq,33) output(9,eq,35) output(11,eq,0) output(11,eq,2) output(11,eq,22) output(11,eq,26) output(11,eq,21) output(11,eq,33) output(11,eq,35) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,21) output(0,eq,33) output(0,eq,35) output(2,eq,22) output(2,eq,26) output(2,eq,21) output(2,eq,33) output(2,eq,35) output(22,eq,26) output(22,eq,21) output(22,eq,33) output(22,eq,35) output(26,eq,21) output(26,eq,33) output(26,eq,35) output(21,eq,33) output(21,eq,35) output(33,eq,35)
Optimization: 36 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(26,better,35) output(26,better,38) output(0,better,35) output(0,better,38) output(2,better,35) output(2,better,38) output(9,better,35) output(9,better,38) output(11,better,35) output(11,better,38) output(21,better,35) output(21,better,38) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(9,eq,11) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(9,eq,21) output(9,eq,33) output(11,eq,0) output(11,eq,2) output(11,eq,22) output(11,eq,26) output(11,eq,21) output(11,eq,33) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,21) output(0,eq,33) output(2,eq,22) output(2,eq,26) output(2,eq,21) output(2,eq,33) output(22,eq,26) output(22,eq,21) output(22,eq,33) output(26,eq,21) output(26,eq,33) output(21,eq,33) output(35,eq,38)
Optimization: 29 2
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(26,better,21) output(26,better,35) output(26,better,38) output(0,better,21) output(0,better,35) output(0,better,38) output(2,better,21) output(2,better,35) output(2,better,38) output(9,better,21) output(9,better,35) output(9,better,38) output(11,better,21) output(11,better,35) output(11,better,38) output(22,better,21) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(21,worse,33) output(9,eq,11) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(9,eq,33) output(11,eq,0) output(11,eq,2) output(11,eq,22) output(11,eq,26) output(11,eq,33) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,33) output(2,eq,22) output(2,eq,26) output(2,eq,33) output(22,eq,26) output(22,eq,33) output(26,eq,33) output(21,eq,35) output(21,eq,38) output(35,eq,38)
Optimization: 25 3
Answer: 5
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),10) preference(1,less(weight)) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,33) output(22,better,35) output(22,better,38) output(9,eq,11) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(9,eq,21) output(11,eq,0) output(11,eq,2) output(11,eq,22) output(11,eq,26) output(11,eq,21) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,21) output(2,eq,22) output(2,eq,26) output(2,eq,21) output(22,eq,26) output(22,eq,21) output(26,eq,21) output(33,eq,35) output(33,eq,38) output(35,eq,38)
Optimization: 24 3
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(26,better,21) output(26,better,35) output(26,better,38) output(0,better,21) output(0,better,35) output(0,better,38) output(2,better,21) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,21) output(9,better,35) output(9,better,38) output(11,better,21) output(11,better,35) output(11,better,38) output(21,better,38) output(22,better,21) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(11,worse,0) output(11,worse,2) output(11,worse,22) output(11,worse,26) output(11,worse,33) output(21,worse,33) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(9,eq,33) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,33) output(2,eq,22) output(2,eq,26) output(2,eq,33) output(22,eq,26) output(22,eq,33) output(26,eq,33) output(21,eq,35)
Optimization: 22 6
Answer: 7
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,12),1,for(atom(hasOiliness(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(9,eq,11) output(9,eq,0) output(9,eq,2) output(9,eq,22) output(9,eq,26) output(11,eq,0) output(11,eq,2) output(11,eq,22) output(11,eq,26) output(0,eq,2) output(0,eq,22) output(0,eq,26) output(2,eq,22) output(2,eq,26) output(22,eq,26) output(21,eq,33) output(21,eq,35) output(21,eq,38) output(33,eq,35) output(33,eq,38) output(35,eq,38)
Optimization: 21 4
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,6),1,for(atom(hasPrice(3))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(26,better,35) output(26,better,38) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,35) output(21,better,38) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(0,worse,2) output(9,worse,11) output(9,worse,2) output(9,eq,0) output(9,eq,22) output(9,eq,26) output(9,eq,21) output(9,eq,33) output(11,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,21) output(0,eq,33) output(22,eq,26) output(22,eq,21) output(22,eq,33) output(26,eq,21) output(26,eq,33) output(21,eq,33)
Optimization: 19 10
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,14),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(0,worse,2) output(9,worse,11) output(9,worse,2) output(9,eq,0) output(9,eq,22) output(9,eq,26) output(9,eq,21) output(11,eq,2) output(0,eq,22) output(0,eq,26) output(0,eq,21) output(22,eq,26) output(22,eq,21) output(26,eq,21)
Optimization: 14 9
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,22) output(11,better,26) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(26,worse,21) output(11,worse,0) output(22,worse,21) output(9,eq,0) output(11,eq,2) output(11,eq,21) output(2,eq,21) output(22,eq,26)
Optimization: 8 10
Answer: 11
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,35) output(21,better,38) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(11,worse,0) output(21,worse,33) output(9,eq,0) output(11,eq,2) output(22,eq,26)
Optimization: 5 11
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasOftenSold(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,35) output(21,better,38) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(9,worse,11) output(21,worse,33) output(9,eq,0) output(22,eq,26)
Optimization: 4 11
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasOftenSold(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(11,worse,0) output(9,eq,0) output(22,eq,26)
Optimization: 3 12
Answer: 14
preference(1,(1,14),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),4) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasOftenSold(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,0) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(11,worse,0) output(22,eq,26)
Optimization: 2 12
Answer: 15
preference(1,(1,14),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,2),1,for(atom(hasStyle(0))),8) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,7),1,for(atom(hasOftenSold(0))),9) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasOftenSold(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,0) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,26) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38) output(11,worse,0)
Optimization: 1 13
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),8) preference(1,(1,4),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,5),1,for(neg(atom(hasOftenSold(3)))),9) preference(1,(1,7),1,for(neg(atom(hasOiliness(2)))),4) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(6)))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,8),1,for(atom(hasOiliness(2))),9) preference(1,(1,9),1,for(atom(hasOftenSold(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasOiliness(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,0) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,26) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 17
preference(1,(1,4),1,for(neg(atom(hasMinorGrp(9)))),4) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(6)))),10) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(2)))),7) preference(1,(1,10),1,for(neg(atom(hasOiliness(2)))),2) preference(1,(1,13),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,3),1,for(atom(hasOiliness(2))),10) preference(1,(1,5),1,for(atom(hasOiliness(1))),3) preference(1,(1,6),1,for(atom(hasOftenSold(1))),9) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,12),1,for(atom(hasOftenSold(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),1) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,0) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,26) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38)
Optimization: 0 13
Answer: 18
preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(3)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(1))),2) preference(1,(1,2),1,for(atom(hasOftenSold(2))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,0) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,26) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38)
Optimization: 0 12
Answer: 19
preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,6),1,for(neg(atom(hasPrice(2)))),1) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),7) preference(1,(1,1),1,for(atom(hasOftenSold(1))),2) preference(1,(1,2),1,for(atom(hasOftenSold(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(26,better,21) output(26,better,33) output(26,better,35) output(26,better,38) output(0,better,2) output(0,better,22) output(0,better,26) output(0,better,21) output(0,better,33) output(0,better,35) output(0,better,38) output(2,better,22) output(2,better,26) output(2,better,21) output(2,better,33) output(2,better,35) output(2,better,38) output(9,better,11) output(9,better,0) output(9,better,2) output(9,better,22) output(9,better,26) output(9,better,21) output(9,better,33) output(9,better,35) output(9,better,38) output(11,better,0) output(11,better,2) output(11,better,22) output(11,better,26) output(11,better,21) output(11,better,33) output(11,better,35) output(11,better,38) output(21,better,33) output(21,better,35) output(21,better,38) output(22,better,26) output(22,better,21) output(22,better,33) output(22,better,35) output(22,better,38) output(33,better,35) output(33,better,38) output(35,better,38)
Optimization: 0 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.064 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 597.461s (Solving: 581.21s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2340.027s
Threads      : 4        (Winner: 4)

Choices      : 10412976 (Domain: 1842)
Conflicts    : 1884049  (Analyzed: 1884047)
Restarts     : 1998     (Average: 942.97 Last: 31915)
Model-Level  : 1398.7  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1888163  (Deleted: 1745537)
  Binary     : 696      (Ratio:   0.04%)
  Ternary    : 370      (Ratio:   0.02%)
  Conflict   : 1884047  (Average Length: 1920.1 Ratio:  99.78%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4116     (Average Length:  196.5 Ratio:   0.22%) 
  Distributed: 1372     (Ratio:   0.07% Average LBD: 3.33) 
  Integrated : 4116     (Ratio: 300.00% Unit: 25 Average Jumps: 16.00)
Backjumps    : 1884047  (Average:  3.37 Max: 4326 Sum: 6343856)
  Executed   : 1884046  (Average:  3.37 Max: 4326 Sum: 6343826 Ratio: 100.00%)
  Bounded    : 1        (Average: 30.00 Max:  30 Sum:     30 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  1 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasPrice(3)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  1 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasStyle(0)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOftenSold(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  1 :: not atom(hasOiliness(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  9 :: not atom(hasOftenSold(3))  ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: not atom(hasOiliness(2))  ; 
  9 :: atom(hasOiliness(2)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: not atom(hasMinorGrp(6))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(2)) ; 
  4 :: not atom(hasMinorGrp(9))  ; 
  3 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  10 :: not atom(hasMinorGrp(6))  ; 
  7 :: not atom(hasMinorGrp(2))  ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: not atom(hasOiliness(2))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  5 :: not atom(hasPrice(1))  ; 
  1 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  1 :: atom(hasOiliness(1)) ; 
  3 :: not atom(hasOftenSold(3))  ; 
  5 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  1 :: not atom(hasPrice(2))  ; 
  7 :: not atom(hasMajorGrp(0))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.
