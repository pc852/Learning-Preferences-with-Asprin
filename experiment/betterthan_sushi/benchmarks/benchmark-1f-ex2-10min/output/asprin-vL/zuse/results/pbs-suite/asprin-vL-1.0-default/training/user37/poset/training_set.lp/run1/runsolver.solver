asprin_vL version 1.0
Reading from stdin
-:319:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:329:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:344:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:425:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:699:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:876:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1005:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1077:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1081:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1087:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1186:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1212:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1332:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1366:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1388:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:236:1-16: info: no atoms over signature occur in program:
  output/3

-:228:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:229:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:230:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(19,eq,9) output(19,eq,6) output(19,eq,11) output(19,eq,10) output(19,eq,39) output(19,eq,23) output(19,eq,89) output(19,eq,17) output(19,eq,52) output(9,eq,6) output(9,eq,11) output(9,eq,10) output(9,eq,39) output(9,eq,23) output(9,eq,89) output(9,eq,17) output(9,eq,52) output(6,eq,11) output(6,eq,10) output(6,eq,39) output(6,eq,23) output(6,eq,89) output(6,eq,17) output(6,eq,52) output(11,eq,10) output(11,eq,39) output(11,eq,23) output(11,eq,89) output(11,eq,17) output(11,eq,52) output(10,eq,39) output(10,eq,23) output(10,eq,89) output(10,eq,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(39,eq,17) output(39,eq,52) output(23,eq,89) output(23,eq,17) output(23,eq,52) output(89,eq,17) output(89,eq,52) output(17,eq,52)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(2))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(3))),()) preference(1,(1,14),1,for(atom(hasPrice(3))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasPrice(3))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(3))),()) preference(1,(1,8),2,for(atom(hasOftenSold(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(2))),()) preference(1,(1,14),2,for(atom(hasOftenSold(3))),()) preference(1,poset) output(19,better,11) output(19,better,10) output(19,better,23) output(19,better,17) output(11,better,23) output(10,better,23) output(10,better,17) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(39,better,89) output(11,worse,10) output(89,worse,52) output(23,worse,17) output(39,eq,52) output(19,unc,9) output(19,unc,6) output(19,unc,39) output(19,unc,89) output(19,unc,52) output(9,unc,6) output(11,unc,39) output(11,unc,89) output(11,unc,17) output(11,unc,52) output(10,unc,39) output(10,unc,89) output(10,unc,52) output(39,unc,23) output(39,unc,17) output(23,unc,89) output(23,unc,52) output(89,unc,17) output(17,unc,52)
Optimization: 23 14
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(2))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(3))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(3))),()) preference(1,(1,14),1,for(atom(hasPrice(3))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasPrice(3))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(1))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(3))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(2))),()) preference(1,(1,14),2,for(atom(hasOftenSold(3))),()) preference(1,poset) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,23) output(11,better,89) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(39,better,89) output(10,better,52) output(11,worse,10) output(89,worse,52) output(23,worse,17) output(39,eq,52) output(19,unc,9) output(19,unc,6) output(9,unc,6) output(11,unc,39) output(11,unc,17) output(11,unc,52) output(39,unc,23) output(39,unc,17) output(23,unc,89) output(23,unc,52) output(89,unc,17) output(17,unc,52)
Optimization: 16 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(2))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasOftenSold(0))),()) preference(1,(1,5),1,for(atom(hasOftenSold(3))),()) preference(1,(1,6),1,for(atom(hasOftenSold(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasOftenSold(3))),()) preference(1,(1,9),1,for(atom(hasOftenSold(0))),()) preference(1,(1,10),1,for(atom(hasOftenSold(0))),()) preference(1,(1,11),1,for(atom(hasOftenSold(0))),()) preference(1,(1,12),1,for(atom(hasOftenSold(0))),()) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),()) preference(1,(1,14),1,for(atom(hasOftenSold(0))),()) preference(1,(1,1),2,for(atom(hasOftenSold(3))),()) preference(1,(1,2),2,for(atom(hasPrice(2))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(6))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(9))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(11))),()) preference(1,(1,12),2,for(atom(hasOiliness(3))),()) preference(1,(1,13),2,for(atom(hasOftenSold(2))),()) preference(1,(1,14),2,for(atom(hasPrice(3))),()) preference(1,poset) output(39,better,17) output(39,better,52) output(23,better,17) output(89,better,17) output(89,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(10,better,39) output(10,better,23) output(10,better,17) output(9,better,39) output(9,better,23) output(9,better,52) output(6,better,39) output(6,better,23) output(6,better,17) output(6,better,52) output(9,better,17) output(39,better,23) output(10,better,52) output(9,worse,89) output(6,worse,89) output(10,worse,89) output(9,worse,11) output(6,worse,11) output(39,worse,89) output(23,worse,89) output(9,unc,6) output(9,unc,10) output(6,unc,10) output(23,unc,52) output(17,unc,52)
Optimization: 12 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.099 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 4+
  Optimum    : unknown
Optimization : 12 14
Calls        : 1
Time         : 597.200s (Solving: 564.61s 1st Model: 7.40s Unsat: 0.00s)
CPU Time     : 2285.584s
Threads      : 4        (Winner: 4)

Choices      : 2479762  (Domain: 871)
Conflicts    : 69809    (Analyzed: 69809)
Restarts     : 76       (Average: 918.54 Last: 212)
Model-Level  : 139.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 12807743 (Deleted: 12674955)
  Binary     : 96       (Ratio:   0.00%)
  Ternary    : 21416    (Ratio:   0.17%)
  Conflict   : 69809    (Average Length: 1871.8 Ratio:   0.55%) 
  Loop       : 12721122 (Average Length:  475.7 Ratio:  99.32%) 
  Other      : 16812    (Average Length:    3.0 Ratio:   0.13%) 
  Distributed: 5604     (Ratio:   0.04% Average LBD: 2.89) 
  Integrated : 16812    (Ratio: 300.00% Unit: 37 Average Jumps: 7872.84)
Backjumps    : 69809    (Average: 25.40 Max: 137673 Sum: 1773323)
  Executed   : 69797    (Average: 25.40 Max: 137673 Sum: 1773254 Ratio: 100.00%)
  Bounded    : 12       (Average:  5.75 Max:  47 Sum:     69 Ratio:   0.00%)

Rules        : 6087462 
  Choice     : 43      
  Minimize   : 2       
Atoms        : 62902   
Bodies       : 4957821 
  Count      : 56      
Equivalences : 59501    (Atom=Atom: 7703 Body=Body: 15445 Other: 36353)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 4802112 Gammas: 0)
Variables    : 4833925  (Eliminated:    0 Frozen: 4806079)
Constraints  : 28028928 (Binary:  82.5% Ternary:   3.4% Other:  14.1%)

