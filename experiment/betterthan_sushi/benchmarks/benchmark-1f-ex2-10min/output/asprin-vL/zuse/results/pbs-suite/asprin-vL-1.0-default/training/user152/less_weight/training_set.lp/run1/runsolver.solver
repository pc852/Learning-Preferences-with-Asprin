asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(48,eq,11) output(48,eq,5) output(48,eq,63) output(48,eq,15) output(48,eq,45) output(48,eq,9) output(48,eq,23) output(48,eq,40) output(48,eq,7) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,23) output(11,eq,40) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,23) output(5,eq,40) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,23) output(63,eq,40) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,23) output(15,eq,40) output(15,eq,7) output(45,eq,9) output(45,eq,23) output(45,eq,40) output(45,eq,7) output(9,eq,23) output(9,eq,40) output(9,eq,7) output(23,eq,40) output(23,eq,7) output(40,eq,7)
Optimization: 45 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),9) preference(1,less(weight)) output(5,better,40) output(9,better,40) output(11,better,40) output(15,better,40) output(23,better,40) output(45,better,40) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,23) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,23) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,23) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,23) output(15,eq,7) output(45,eq,9) output(45,eq,23) output(45,eq,7) output(9,eq,23) output(9,eq,7) output(23,eq,7)
Optimization: 38 1
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(5,better,9) output(5,better,40) output(11,better,9) output(11,better,40) output(15,better,9) output(15,better,40) output(23,better,40) output(45,better,9) output(45,better,40) output(63,better,9) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,23) output(48,worse,7) output(9,worse,23) output(9,worse,7) output(48,eq,9) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,23) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,23) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,23) output(63,eq,7) output(15,eq,45) output(15,eq,23) output(15,eq,7) output(45,eq,23) output(45,eq,7) output(9,eq,40) output(23,eq,7)
Optimization: 34 2
Answer: 4
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(5,better,23) output(5,better,40) output(9,better,23) output(9,better,40) output(11,better,23) output(11,better,40) output(15,better,23) output(15,better,40) output(45,better,23) output(45,better,40) output(63,better,23) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,7) output(23,worse,7) output(48,eq,23) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,7) output(45,eq,9) output(45,eq,7) output(9,eq,7) output(23,eq,40)
Optimization: 33 2
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,9),1,for(atom(hasOiliness(3))),4) preference(1,less(weight)) output(5,better,45) output(5,better,40) output(9,better,40) output(11,better,5) output(11,better,15) output(11,better,45) output(11,better,40) output(15,better,45) output(15,better,40) output(23,better,40) output(45,better,40) output(63,better,15) output(63,better,45) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(5,worse,63) output(5,worse,15) output(5,worse,9) output(5,worse,23) output(5,worse,7) output(15,worse,9) output(15,worse,23) output(15,worse,7) output(45,worse,9) output(45,worse,23) output(45,worse,7) output(48,eq,40) output(11,eq,63) output(11,eq,9) output(11,eq,23) output(11,eq,7) output(63,eq,9) output(63,eq,23) output(63,eq,7) output(9,eq,23) output(9,eq,7) output(23,eq,7)
Optimization: 31 4
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,9),1,for(atom(hasOiliness(3))),4) preference(1,less(weight)) output(5,better,45) output(5,better,40) output(9,better,23) output(9,better,40) output(11,better,5) output(11,better,45) output(11,better,23) output(11,better,40) output(15,better,45) output(15,better,23) output(15,better,40) output(23,better,40) output(45,better,40) output(63,better,45) output(63,better,23) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(5,worse,63) output(5,worse,15) output(5,worse,9) output(5,worse,23) output(5,worse,7) output(23,worse,7) output(45,worse,9) output(45,worse,23) output(45,worse,7) output(48,eq,40) output(11,eq,63) output(11,eq,15) output(11,eq,9) output(11,eq,7) output(63,eq,15) output(63,eq,9) output(63,eq,7) output(15,eq,9) output(15,eq,7) output(9,eq,7)
Optimization: 29 4
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,3),1,for(neg(atom(hasOftenSold(3)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,7),1,for(atom(hasOftenSold(2))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasPrice(2))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,14),1,for(atom(hasOiliness(3))),8) preference(1,less(weight)) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,23) output(5,better,63) output(5,better,15) output(5,better,23) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,23) output(11,better,40) output(45,better,23) output(45,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,45) output(48,worse,9) output(48,worse,7) output(5,worse,45) output(5,worse,9) output(5,worse,40) output(5,worse,7) output(11,worse,45) output(11,worse,9) output(11,worse,7) output(15,worse,45) output(15,worse,9) output(15,worse,40) output(15,worse,7) output(23,worse,40) output(23,worse,7) output(45,worse,9) output(63,worse,15) output(63,worse,45) output(63,worse,9) output(63,worse,23) output(63,worse,40) output(63,worse,7) output(48,eq,40) output(15,eq,23) output(45,eq,7)
Optimization: 28 13
Answer: 8
preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),4) preference(1,(1,2),1,for(atom(hasStyle(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(2))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,12),1,for(atom(hasPrice(2))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,45) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,7) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,15) output(48,worse,9) output(48,worse,23) output(5,worse,9) output(11,worse,9) output(15,worse,9) output(45,worse,9) output(45,worse,23) output(45,worse,40) output(63,worse,15) output(63,worse,9) output(63,worse,23) output(63,worse,40) output(48,eq,40) output(63,eq,45) output(15,eq,23)
Optimization: 18 12
Answer: 9
preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),4) preference(1,(1,2),1,for(atom(hasStyle(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(2))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,11),1,for(atom(hasPrice(1))),5) preference(1,(1,12),1,for(atom(hasPrice(2))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,45) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,7) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,15) output(48,worse,9) output(48,worse,23) output(15,worse,9) output(45,worse,9) output(45,worse,23) output(45,worse,40) output(63,worse,15) output(63,worse,9) output(63,worse,23) output(63,worse,40) output(48,eq,40) output(5,eq,9) output(63,eq,45) output(15,eq,23)
Optimization: 17 13
Answer: 10
preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),4) preference(1,(1,2),1,for(atom(hasStyle(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(2))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,11),1,for(atom(hasPrice(1))),5) preference(1,(1,12),1,for(atom(hasPrice(2))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,45) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,7) output(63,better,45) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,15) output(48,worse,9) output(48,worse,23) output(15,worse,9) output(45,worse,9) output(45,worse,23) output(45,worse,40) output(63,worse,15) output(63,worse,9) output(63,worse,23) output(63,worse,40) output(48,eq,40) output(5,eq,9) output(15,eq,23)
Optimization: 16 14
Progression : [ 1;16] (Error: 15)
Answer: 11
preference(1,(1,14),1,for(neg(atom(hasOiliness(3)))),8) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,2),1,for(atom(hasOiliness(2))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasOftenSold(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,7),1,for(atom(hasOftenSold(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(3))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,less(weight)) output(40,better,7) output(48,better,45) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,9) output(48,worse,23) output(5,worse,9) output(11,worse,9) output(15,worse,9) output(45,worse,9) output(45,worse,23) output(45,worse,40) output(63,worse,9) output(48,eq,40) output(15,eq,23)
Optimization: 15 13
Answer: 12
preference(1,(1,14),1,for(neg(atom(hasOiliness(3)))),8) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,2),1,for(atom(hasOiliness(2))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasOftenSold(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,7),1,for(atom(hasOftenSold(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(3))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(40,better,7) output(48,better,45) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,9) output(48,worse,23) output(15,worse,9) output(45,worse,9) output(45,worse,23) output(45,worse,40) output(63,worse,9) output(48,eq,40) output(5,eq,9) output(15,eq,23)
Optimization: 14 14
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasOiliness(3)))),9) preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,8),1,for(neg(atom(hasStyle(0)))),8) preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,5),1,for(atom(hasOftenSold(2))),4) preference(1,(1,6),1,for(atom(hasOiliness(3))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,10),1,for(atom(hasPrice(2))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasStyle(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,23) output(11,better,7) output(15,better,45) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,23) output(63,better,7) output(5,worse,40) output(9,worse,40) output(11,worse,5) output(11,worse,9) output(11,worse,40) output(15,worse,9) output(15,worse,40) output(23,worse,40) output(45,worse,9) output(45,worse,40) output(63,worse,9) output(63,worse,40) output(48,eq,40)
Optimization: 13 14
Progression : [ 2;13] (Error: 5.5)
Progression : [ 3;13] (Error: 3.33333)
Answer: 14
preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasOftenSold(2))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,45) output(9,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,40) output(63,eq,15) output(9,eq,23)
Optimization: 12 14
Answer: 15
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),1) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,45) output(9,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,40) output(63,eq,15)
Optimization: 11 14
Progression : [ 4;11] (Error: 1.75)
Progression : [ 5;11] (Error: 1.2)
Answer: 16
preference(1,(1,9),1,for(neg(atom(hasStyle(0)))),4) preference(1,(1,13),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,14),1,for(neg(atom(hasPrice(0)))),8) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,2),1,for(atom(hasOftenSold(3))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,10),1,for(atom(hasOiliness(3))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasPrice(2))),3) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,eq,23) output(48,eq,40) output(11,eq,5) output(23,eq,40)
Optimization: 10 14
Answer: 17
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,14),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,2),1,for(atom(hasOftenSold(3))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(2))),1) preference(1,(1,5),1,for(atom(hasOftenSold(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,13),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(40,better,7) output(48,better,23) output(48,better,7) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(5,worse,63) output(23,worse,40) output(48,eq,40)
Optimization: 9 14
Answer: 18
preference(1,(1,7),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,14),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,2),1,for(atom(hasOftenSold(3))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasPrice(2))),2) preference(1,(1,11),1,for(atom(hasOftenSold(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,13),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(40,better,7) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(23,worse,40) output(48,eq,40)
Optimization: 8 14
Progression : [6;8] (Error: 0.333333)
Progression : [8;8] (Error: 0)
Progression : 8 [ 1;14] (Error: 13)
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,4),1,for(atom(hasOftenSold(2))),10) preference(1,(1,5),1,for(atom(hasOftenSold(3))),10) preference(1,(1,6),1,for(atom(hasOftenSold(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,9),1,for(atom(hasPrice(1))),5) preference(1,(1,10),1,for(atom(hasOiliness(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),7) preference(1,less(weight)) output(40,better,7) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(23,worse,40) output(48,eq,40)
Optimization: 8 13
Answer: 20
preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,13),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,2),1,for(atom(hasOftenSold(2))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasOftenSold(0))),1) preference(1,(1,14),1,for(atom(hasStyle(0))),6) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,eq,40)
Optimization: 8 12
Answer: 21
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,8),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,2),1,for(atom(hasOftenSold(2))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasOftenSold(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,eq,40)
Optimization: 8 11
Answer: 22
preference(1,(1,12),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasStyle(0))),5) preference(1,(1,4),1,for(atom(hasOftenSold(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,9),1,for(atom(hasOftenSold(2))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,13),1,for(atom(hasOiliness(3))),1) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,eq,40)
Optimization: 8 10
Answer: 23
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,8),1,for(atom(hasOftenSold(0))),3) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(40,better,7) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(23,worse,40) output(48,eq,40)
Optimization: 8 9
Answer: 24
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,11),1,for(atom(hasOftenSold(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(40,better,7) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(23,worse,40) output(48,eq,40)
Optimization: 8 8
Progression : 8 [2;8] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.221 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 8 8
Bounds       : 8 [2;8]
Calls        : 1
Time         : 598.113s (Solving: 584.34s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2350.458s
Threads      : 4        (Winner: 4)

Choices      : 9507662  (Domain: 848)
Conflicts    : 1875531  (Analyzed: 1875520)
Restarts     : 2158     (Average: 869.10 Last: 134430)
Model-Level  : 1700.0  
Problems     : 18       (Average Length: 0.22 Splits: 0)
Lemmas       : 1891140  (Deleted: 1712381)
  Binary     : 2682     (Ratio:   0.14%)
  Ternary    : 659      (Ratio:   0.03%)
  Conflict   : 1875514  (Average Length: 1705.2 Ratio:  99.17%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 15626    (Average Length:  100.8 Ratio:   0.83%) 
  Distributed: 5210     (Ratio:   0.28% Average LBD: 3.38) 
  Integrated : 15630    (Ratio: 300.00% Unit: 127 Average Jumps: 120.61)
Backjumps    : 1875520  (Average:  3.28 Max: 3249 Sum: 6158811)
  Executed   : 1875460  (Average:  3.28 Max: 3249 Sum: 6157608 Ratio:  99.98%)
  Bounded    : 60       (Average: 20.05 Max:  46 Sum:   1203 Ratio:   0.02%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(6)) ; 
  9 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: not atom(hasOiliness(2))  ; 
  8 :: atom(hasMinorGrp(4)) ; 
  3 :: not atom(hasOftenSold(3))  ; 
  4 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(2)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasPrice(2)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasPrice(2)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasPrice(2)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasOiliness(3)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: not atom(hasOiliness(3))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasOiliness(3)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  8 :: not atom(hasOiliness(3))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOiliness(3))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  6 :: not atom(hasStyle(1))  ; 
  9 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasOiliness(3)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: not atom(hasStyle(0))  ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  4 :: not atom(hasStyle(0))  ; 
  2 :: atom(hasOiliness(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(2)) ; 
  4 :: not atom(hasStyle(1))  ; 
  8 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(2)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  4 :: not atom(hasOftenSold(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: not atom(hasOiliness(1))  ; 
  2 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(2)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  4 :: not atom(hasOftenSold(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMajorGrp(0))  ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  3 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasOftenSold(0))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  6 :: not atom(hasStyle(1))  ; 
  7 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: not atom(hasOftenSold(0))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  1 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  5 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  5 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.
