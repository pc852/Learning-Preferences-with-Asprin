asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(7,eq,0) output(7,eq,2) output(7,eq,9) output(7,eq,8) output(7,eq,4) output(7,eq,6) output(7,eq,5) output(7,eq,3) output(0,eq,2) output(0,eq,9) output(0,eq,8) output(0,eq,4) output(0,eq,6) output(0,eq,5) output(0,eq,3) output(2,eq,9) output(2,eq,8) output(2,eq,4) output(2,eq,6) output(2,eq,5) output(2,eq,3) output(9,eq,8) output(9,eq,4) output(9,eq,6) output(9,eq,5) output(9,eq,3) output(8,eq,4) output(8,eq,6) output(8,eq,5) output(8,eq,3) output(4,eq,6) output(4,eq,5) output(4,eq,3) output(6,eq,5) output(6,eq,3) output(5,eq,3)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,6) output(4,better,5) output(4,better,3) output(2,better,5) output(6,better,5) output(9,better,5) output(8,better,5) output(7,worse,4) output(0,worse,4) output(2,worse,4) output(9,worse,4) output(8,worse,4) output(7,worse,2) output(0,worse,2) output(7,worse,6) output(0,worse,6) output(7,worse,9) output(7,worse,8) output(0,worse,8) output(7,worse,3) output(0,worse,9) output(0,worse,3) output(5,worse,3) output(7,eq,0) output(7,eq,5) output(0,eq,5) output(2,eq,9) output(2,eq,8) output(2,eq,6) output(2,eq,3) output(9,eq,8) output(9,eq,6) output(9,eq,3) output(8,eq,6) output(8,eq,3) output(6,eq,3)
Optimization: 29 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(4,better,5) output(4,better,3) output(2,better,5) output(6,better,5) output(6,better,3) output(7,better,0) output(7,better,5) output(9,better,5) output(8,better,5) output(7,worse,4) output(0,worse,4) output(2,worse,4) output(9,worse,4) output(8,worse,4) output(7,worse,2) output(0,worse,2) output(7,worse,6) output(0,worse,6) output(2,worse,6) output(9,worse,6) output(8,worse,6) output(7,worse,9) output(7,worse,8) output(0,worse,8) output(7,worse,3) output(0,worse,9) output(0,worse,3) output(5,worse,3) output(0,eq,5) output(2,eq,9) output(2,eq,8) output(2,eq,3) output(9,eq,8) output(9,eq,3) output(8,eq,3) output(4,eq,6)
Optimization: 27 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(4,better,5) output(2,better,9) output(2,better,4) output(2,better,6) output(2,better,5) output(2,better,3) output(6,better,5) output(9,better,5) output(8,better,4) output(8,better,6) output(8,better,5) output(8,better,3) output(7,worse,4) output(0,worse,4) output(7,worse,2) output(0,worse,2) output(7,worse,6) output(0,worse,6) output(7,worse,9) output(7,worse,8) output(0,worse,8) output(9,worse,8) output(7,worse,3) output(0,worse,9) output(0,worse,3) output(5,worse,3) output(7,eq,0) output(7,eq,5) output(0,eq,5) output(2,eq,8) output(9,eq,4) output(9,eq,6) output(9,eq,3) output(4,eq,6) output(4,eq,3) output(6,eq,3)
Optimization: 24 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(5,better,3) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,6) output(9,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(7,worse,0) output(2,worse,9) output(7,eq,5) output(2,eq,8) output(2,eq,4) output(2,eq,6) output(2,eq,3) output(8,eq,4) output(8,eq,6) output(8,eq,3) output(4,eq,6) output(4,eq,3) output(6,eq,3)
Optimization: 18 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(5,better,3) output(2,better,9) output(2,better,4) output(2,better,6) output(2,better,3) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,3) output(8,better,4) output(8,better,6) output(8,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(9,worse,8) output(7,eq,0) output(7,eq,5) output(0,eq,5) output(2,eq,8) output(9,eq,4) output(9,eq,6) output(9,eq,3) output(4,eq,6) output(4,eq,3) output(6,eq,3)
Optimization: 16 1
Answer: 7
preference(1,(1,1),1,for(atom(isFattyFish(1))),()) preference(1,(1,2),1,for(atom(isRaw(0))),()) preference(1,(1,3),1,for(atom(isRaw(0))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(isRaw(0))),()) preference(1,(1,6),1,for(atom(hasPrice(0))),()) preference(1,(1,7),1,for(atom(isRaw(0))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isRaw(0))),()) preference(1,(1,10),1,for(atom(isRaw(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,3),2,for(atom(isUnique(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(isShrimp(1))),()) preference(1,(1,6),2,for(atom(isRaw(0))),()) preference(1,(1,7),2,for(atom(isButtery(1))),()) preference(1,(1,8),2,for(atom(isButtery(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),2,for(atom(isFattyFish(1))),()) preference(1,(1,11),2,for(atom(isRaw(1))),()) preference(1,poset) output(5,better,3) output(2,better,8) output(2,better,4) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,6) output(9,better,3) output(8,better,4) output(0,better,9) output(7,worse,5) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(8,worse,6) output(4,worse,6) output(7,worse,0) output(8,worse,3) output(4,worse,3) output(2,unc,9) output(2,unc,6) output(2,unc,3) output(6,unc,3)
Optimization: 15 11
Answer: 8
preference(1,(1,1),1,for(atom(isFattyFish(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(isRaw(0))),()) preference(1,(1,4),1,for(atom(isMaguro(1))),()) preference(1,(1,5),1,for(atom(isUnique(1))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(isMaguro(1))),()) preference(1,(1,9),1,for(atom(isRaw(1))),()) preference(1,(1,10),1,for(atom(isMaguro(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(isCreamy(1))),()) preference(1,(1,1),2,for(atom(isMaguro(1))),()) preference(1,(1,2),2,for(atom(isTamago(1))),()) preference(1,(1,3),2,for(atom(isRaw(1))),()) preference(1,(1,4),2,for(atom(isUnique(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),2,for(atom(isUnique(1))),()) preference(1,(1,8),2,for(atom(isShrimp(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),2,for(atom(isRaw(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(isFattyFish(1))),()) preference(1,poset) output(4,better,6) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,0) output(7,better,2) output(7,better,9) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,6) output(9,better,3) output(8,better,6) output(8,better,3) output(0,better,9) output(2,worse,4) output(9,worse,4) output(8,worse,4) output(2,worse,5) output(9,worse,5) output(6,worse,5) output(2,worse,8) output(9,worse,8) output(7,unc,8) output(7,unc,4) output(0,unc,8) output(0,unc,4) output(8,unc,5) output(4,unc,5)
Optimization: 14 12
Answer: 9
preference(1,(1,1),1,for(atom(isRaw(0))),()) preference(1,(1,2),1,for(atom(isTamago(1))),()) preference(1,(1,4),1,for(atom(isCreamy(1))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isShrimp(1))),()) preference(1,(1,10),1,for(atom(isButtery(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(isSweet(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(isRoe(1))),()) preference(1,(1,4),2,for(atom(isMaguro(1))),()) preference(1,(1,5),2,for(atom(isTamago(1))),()) preference(1,(1,6),2,for(atom(isSweet(1))),()) preference(1,(1,8),2,for(atom(isShrimp(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(isFattyFish(1))),()) preference(1,(1,12),2,for(atom(isCreamy(1))),()) preference(1,poset) output(4,better,6) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,0) output(7,better,2) output(7,better,9) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,6) output(9,better,3) output(8,better,4) output(8,better,6) output(8,better,3) output(0,better,9) output(9,worse,4) output(2,worse,5) output(9,worse,5) output(6,worse,5) output(9,worse,8) output(7,unc,8) output(7,unc,4) output(0,unc,8) output(0,unc,4) output(2,unc,8) output(2,unc,4) output(8,unc,5) output(4,unc,5)
Optimization: 13 10
Answer: 10
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isTamago(1))),()) preference(1,(1,4),1,for(atom(isCreamy(1))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(isButtery(1))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isShrimp(1))),()) preference(1,(1,10),1,for(atom(isFattyFish(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(isSweet(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(isRoe(1))),()) preference(1,(1,4),2,for(atom(isMaguro(1))),()) preference(1,(1,5),2,for(atom(isTamago(1))),()) preference(1,(1,6),2,for(atom(isRoe(1))),()) preference(1,(1,8),2,for(atom(isShrimp(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(isFattyFish(1))),()) preference(1,(1,12),2,for(atom(isCreamy(1))),()) preference(1,poset) output(4,better,6) output(4,better,5) output(4,better,3) output(2,better,9) output(2,better,6) output(2,better,5) output(2,better,3) output(6,better,5) output(6,better,3) output(7,better,0) output(7,better,2) output(7,better,9) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,6) output(9,better,5) output(9,better,3) output(8,better,6) output(8,better,5) output(8,better,3) output(7,worse,4) output(0,worse,4) output(2,worse,4) output(9,worse,4) output(8,worse,4) output(0,worse,2) output(0,worse,8) output(9,worse,8) output(0,eq,9) output(5,eq,3) output(7,unc,8) output(2,unc,8)
Optimization: 12 10
Answer: 11
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isRoe(1))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,8),1,for(atom(isRaw(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,11),1,for(atom(isShrimp(1))),()) preference(1,(1,12),1,for(atom(isRoe(1))),()) preference(1,(1,1),2,for(atom(isButtery(1))),()) preference(1,(1,2),2,for(atom(isRaw(1))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(isButtery(1))),()) preference(1,(1,8),2,for(atom(isShrimp(1))),()) preference(1,(1,9),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(isButtery(1))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,3) output(8,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(9,worse,6) output(8,worse,6) output(4,worse,6) output(7,worse,0) output(7,eq,5) output(8,eq,4)
Optimization: 11 8
Answer: 12
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isRoe(1))),()) preference(1,(1,3),1,for(atom(isUnique(1))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(isUnique(1))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,10),1,for(atom(isFattyFish(1))),()) preference(1,(1,11),1,for(atom(isUnique(1))),()) preference(1,(1,12),1,for(atom(isRoe(1))),()) preference(1,(1,1),2,for(atom(isButtery(1))),()) preference(1,(1,2),2,for(atom(isUnique(1))),()) preference(1,(1,3),2,for(atom(isButtery(1))),()) preference(1,(1,4),2,for(atom(isTamago(1))),()) preference(1,(1,5),2,for(atom(isShrimp(1))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,8),2,for(atom(isShrimp(1))),()) preference(1,(1,9),2,for(atom(isRoe(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,3) output(8,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(9,worse,6) output(8,worse,6) output(4,worse,6) output(7,unc,0) output(8,unc,4)
Optimization: 10 12
Answer: 13
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(isUnique(1))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(isUnique(1))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(isUnique(1))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,10),1,for(atom(isFattyFish(1))),()) preference(1,(1,11),1,for(atom(isCreamy(1))),()) preference(1,(1,12),1,for(atom(isRoe(1))),()) preference(1,(1,1),2,for(atom(isButtery(1))),()) preference(1,(1,2),2,for(atom(isUnique(1))),()) preference(1,(1,3),2,for(atom(isButtery(1))),()) preference(1,(1,4),2,for(atom(isTamago(1))),()) preference(1,(1,5),2,for(atom(isCreamy(1))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,8),2,for(atom(isShrimp(1))),()) preference(1,(1,9),2,for(atom(isRoe(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(isShrimp(1))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,0) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,3) output(8,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(9,worse,6) output(8,worse,6) output(4,worse,6) output(8,unc,4)
Optimization: 9 12
Answer: 14
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(isUnique(1))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(isRaw(0))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(isUnique(1))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,10),1,for(atom(isSweet(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,1),2,for(atom(isButtery(1))),()) preference(1,(1,2),2,for(atom(isUnique(1))),()) preference(1,(1,3),2,for(atom(isButtery(1))),()) preference(1,(1,4),2,for(atom(isTamago(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,8),2,for(atom(isSweet(1))),()) preference(1,(1,9),2,for(atom(isRoe(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(isShrimp(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,0) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,3) output(8,better,4) output(8,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(8,worse,6) output(4,worse,6) output(9,unc,6)
Optimization: 8 12
Answer: 15
preference(1,(1,1),1,for(atom(isMaguro(1))),()) preference(1,(1,2),1,for(atom(isRaw(1))),()) preference(1,(1,3),1,for(atom(isMaguro(1))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(isFattyFish(1))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(isUnique(1))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,10),1,for(atom(isSweet(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,1),2,for(atom(isButtery(1))),()) preference(1,(1,2),2,for(atom(isButtery(1))),()) preference(1,(1,3),2,for(atom(isUnique(1))),()) preference(1,(1,4),2,for(atom(isRaw(1))),()) preference(1,(1,5),2,for(atom(isSweet(1))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,8),2,for(atom(isButtery(1))),()) preference(1,(1,9),2,for(atom(isShrimp(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(isShrimp(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset) output(4,better,3) output(5,better,3) output(2,better,9) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,3) output(6,better,3) output(7,better,0) output(7,better,2) output(7,better,9) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,6) output(9,better,3) output(8,better,4) output(8,better,3) output(0,better,9) output(2,worse,5) output(9,worse,5) output(8,worse,5) output(4,worse,5) output(6,worse,5) output(8,worse,6) output(4,worse,6)
Optimization: 7 12
Answer: 16
preference(1,(1,1),1,for(atom(isTamago(1))),()) preference(1,(1,2),1,for(atom(isFattyFish(1))),()) preference(1,(1,3),1,for(atom(isMaguro(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(isShrimp(1))),()) preference(1,(1,6),1,for(atom(isShrimp(1))),()) preference(1,(1,7),1,for(atom(isCreamy(1))),()) preference(1,(1,8),1,for(atom(isTamago(1))),()) preference(1,(1,9),1,for(atom(isRaw(0))),()) preference(1,(1,10),1,for(atom(isUnique(1))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(isTamago(1))),()) preference(1,(1,1),2,for(atom(isSweet(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(isTamago(1))),()) preference(1,(1,4),2,for(atom(isRaw(0))),()) preference(1,(1,5),2,for(atom(isUrchin(1))),()) preference(1,(1,6),2,for(atom(isCreamy(1))),()) preference(1,(1,7),2,for(atom(isMaguro(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(isUnique(1))),()) preference(1,(1,10),2,for(atom(isButtery(1))),()) preference(1,(1,11),2,for(atom(isSweet(1))),()) preference(1,(1,12),2,for(atom(isFattyFish(1))),()) preference(1,poset) output(4,better,6) output(4,better,5) output(4,better,3) output(5,better,3) output(2,better,8) output(2,better,6) output(2,better,5) output(2,better,3) output(6,better,5) output(6,better,3) output(7,better,2) output(7,better,8) output(7,better,6) output(7,better,5) output(7,better,3) output(0,better,2) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,5) output(0,better,3) output(9,better,8) output(9,better,4) output(9,better,6) output(9,better,5) output(9,better,3) output(8,better,6) output(8,better,5) output(8,better,3) output(0,better,9) output(2,worse,4) output(8,worse,4) output(7,worse,0) output(7,worse,9) output(2,worse,9) output(7,unc,4)
Optimization: 6 12
SATISFIABLE

Models       : 16+
  Optimum    : unknown
Optimization : 6 12
Calls        : 1
Time         : 836.355s (Solving: 828.32s 1st Model: 1.48s Unsat: 0.00s)
CPU Time     : 3319.858s
Threads      : 4        (Winner: 0)

Choices      : 7560924  (Domain: 3766)
Conflicts    : 214419   (Analyzed: 214419)
Restarts     : 242      (Average: 886.03 Last: 12416)
Model-Level  : 5311.9  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 25038000 (Deleted: 24899941)
  Binary     : 2023     (Ratio:   0.01%)
  Ternary    : 56397    (Ratio:   0.23%)
  Conflict   : 214419   (Average Length:  959.7 Ratio:   0.86%) 
  Loop       : 24760531 (Average Length:  232.1 Ratio:  98.89%) 
  Other      : 63050    (Average Length:    3.6 Ratio:   0.25%) 
  Distributed: 21037    (Ratio:   0.08% Average LBD: 2.83) 
  Integrated : 63084    (Ratio: 299.87% Unit: 140 Average Jumps: 3140.86)
Backjumps    : 214419   (Average: 29.49 Max: 217097 Sum: 6323650)
  Executed   : 214394   (Average: 29.49 Max: 217097 Sum: 6323566 Ratio: 100.00%)
  Bounded    : 25       (Average:  3.36 Max:  38 Sum:     84 Ratio:   0.00%)

Rules        : 1508180 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28654   
Bodies       : 1146257 
  Count      : 48      
Equivalences : 32246    (Atom=Atom: 5203 Body=Body: 7878 Other: 19165)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103159  (Eliminated:    0 Frozen: 1092652)
Constraints  : 6431743  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isFattyFish(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(isRaw(0)) >> atom(isUnique(1)) ; 
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isRaw(0)) >> atom(isShrimp(1)) ; 
  atom(hasPrice(0)) >> atom(isRaw(0)) ; 
  atom(isRaw(0)) >> atom(isButtery(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(0)) >> atom(hasMinorGrp(1)) ; 
  atom(isRaw(0)) >> atom(isFattyFish(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isFattyFish(1)) >> atom(isMaguro(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isTamago(1)) ; 
  atom(isRaw(0)) >> atom(isRaw(1)) ; 
  atom(isMaguro(1)) >> atom(isUnique(1)) ; 
  atom(isUnique(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isRaw(0)) >> atom(isFattyFish(1)) ; 
  atom(hasPrice(1)) >> atom(isUnique(1)) ; 
  atom(isMaguro(1)) >> atom(isShrimp(1)) ; 
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isMaguro(1)) >> atom(isRaw(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isCreamy(1)) >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isTamago(1)) >> atom(isRoe(1)) ; 
  atom(isCreamy(1)) >> atom(isMaguro(1)) ; 
  atom(hasPrice(1)) >> atom(isTamago(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isSweet(1)) ; 
  atom(isFattyFish(1)) >> atom(isShrimp(1)) ; 
  atom(isShrimp(1)) >> atom(hasPrice(1)) ; 
  atom(isButtery(1)) >> atom(isRoe(1)) ; 
  atom(isMaguro(1)) >> atom(isFattyFish(1)) ; 
  atom(isSweet(1)) >> atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(hasPrice(1)) ; 
  atom(isTamago(1)) >> atom(isRoe(1)) ; 
  atom(isCreamy(1)) >> atom(isMaguro(1)) ; 
  atom(hasPrice(1)) >> atom(isTamago(1)) ; 
  atom(isButtery(1)) >> atom(isRoe(1)) ; 
  atom(isFattyFish(1)) >> atom(isShrimp(1)) ; 
  atom(isShrimp(1)) >> atom(hasPrice(1)) ; 
  atom(isFattyFish(1)) >> atom(isRoe(1)) ; 
  atom(isMaguro(1)) >> atom(isFattyFish(1)) ; 
  atom(isSweet(1)) >> atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(isButtery(1)) ; 
  atom(isRoe(1)) >> atom(isRaw(1)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(isRaw(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(1)) >> atom(isShrimp(1)) ; 
  atom(isMaguro(1)) >> atom(isRoe(1)) ; 
  atom(isShrimp(1)) >> atom(isButtery(1)) ; 
  atom(isRoe(1)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(isButtery(1)) ; 
  atom(isRoe(1)) >> atom(isUnique(1)) ; 
  atom(isUnique(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(0)) >> atom(isTamago(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isShrimp(1)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(isUnique(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isShrimp(1)) ; 
  atom(isMaguro(1)) >> atom(isRoe(1)) ; 
  atom(isFattyFish(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isUnique(1)) >> atom(isCreamy(1)) ; 
  atom(isRoe(1)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(isButtery(1)) ; 
  atom(isMaguro(1)) >> atom(isUnique(1)) ; 
  atom(isUnique(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(0)) >> atom(isTamago(1)) ; 
  atom(isUnique(1)) >> atom(isCreamy(1)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(isUnique(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isShrimp(1)) ; 
  atom(isMaguro(1)) >> atom(isRoe(1)) ; 
  atom(isFattyFish(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isCreamy(1)) >> atom(isShrimp(1)) ; 
  atom(isRoe(1)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(isButtery(1)) ; 
  atom(isMaguro(1)) >> atom(isUnique(1)) ; 
  atom(isUnique(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(0)) >> atom(isTamago(1)) ; 
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(isUnique(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isSweet(1)) ; 
  atom(isMaguro(1)) >> atom(isRoe(1)) ; 
  atom(isSweet(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isShrimp(1)) ; 
  atom(isRaw(0)) >> atom(isSweet(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isMaguro(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(1)) >> atom(isButtery(1)) ; 
  atom(isMaguro(1)) >> atom(isUnique(1)) ; 
  atom(isRaw(0)) >> atom(isRaw(1)) ; 
  atom(isFattyFish(1)) >> atom(isSweet(1)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(isUnique(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isMaguro(1)) >> atom(isShrimp(1)) ; 
  atom(isSweet(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isShrimp(1)) ; 
  atom(isRaw(0)) >> atom(isSweet(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isTamago(1)) >> atom(isSweet(1)) ; 
  atom(isFattyFish(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isMaguro(1)) >> atom(isTamago(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(0)) ; 
  atom(isShrimp(1)) >> atom(isUrchin(1)) ; 
  atom(isShrimp(1)) >> atom(isCreamy(1)) ; 
  atom(isCreamy(1)) >> atom(isMaguro(1)) ; 
  atom(isTamago(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isRaw(0)) >> atom(isUnique(1)) ; 
  atom(isUnique(1)) >> atom(isButtery(1)) ; 
  atom(isUrchin(1)) >> atom(isSweet(1)) ; 
  atom(isTamago(1)) >> atom(isFattyFish(1)) 
}.
Time limit reached
