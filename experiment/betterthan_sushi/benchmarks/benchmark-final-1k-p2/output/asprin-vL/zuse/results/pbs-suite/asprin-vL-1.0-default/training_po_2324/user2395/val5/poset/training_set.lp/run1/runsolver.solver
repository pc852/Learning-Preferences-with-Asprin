asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(3,eq,0) output(3,eq,6) output(3,eq,9) output(3,eq,8) output(3,eq,7) output(3,eq,1) output(3,eq,2) output(3,eq,4) output(0,eq,6) output(0,eq,9) output(0,eq,8) output(0,eq,7) output(0,eq,1) output(0,eq,2) output(0,eq,4) output(6,eq,9) output(6,eq,8) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(6,eq,4) output(9,eq,8) output(9,eq,7) output(9,eq,1) output(9,eq,2) output(9,eq,4) output(8,eq,7) output(8,eq,1) output(8,eq,2) output(8,eq,4) output(7,eq,1) output(7,eq,2) output(7,eq,4) output(1,eq,2) output(1,eq,4) output(2,eq,4)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(6,better,7) output(6,better,1) output(9,better,7) output(9,better,1) output(8,better,7) output(3,better,7) output(3,better,1) output(8,better,1) output(3,better,0) output(3,worse,4) output(0,worse,4) output(6,worse,4) output(9,worse,4) output(8,worse,4) output(7,worse,4) output(1,worse,4) output(2,worse,4) output(0,worse,2) output(7,worse,2) output(1,worse,2) output(0,worse,6) output(0,worse,8) output(0,worse,9) output(3,eq,6) output(3,eq,9) output(3,eq,8) output(3,eq,2) output(0,eq,7) output(0,eq,1) output(6,eq,9) output(6,eq,8) output(6,eq,2) output(9,eq,8) output(9,eq,2) output(8,eq,2) output(7,eq,1)
Optimization: 27 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(6,better,9) output(6,better,8) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(9,better,7) output(9,better,1) output(8,better,7) output(3,better,7) output(3,better,1) output(8,better,1) output(3,better,0) output(3,worse,4) output(0,worse,4) output(9,worse,4) output(8,worse,4) output(7,worse,4) output(1,worse,4) output(2,worse,4) output(0,worse,2) output(7,worse,2) output(1,worse,2) output(3,worse,6) output(0,worse,6) output(0,worse,7) output(0,worse,8) output(0,worse,9) output(3,eq,9) output(3,eq,8) output(3,eq,2) output(0,eq,1) output(6,eq,4) output(9,eq,8) output(9,eq,2) output(8,eq,2)
Optimization: 23 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(6,better,8) output(6,better,7) output(6,better,1) output(6,better,2) output(6,better,4) output(9,better,8) output(9,better,7) output(9,better,1) output(9,better,2) output(9,better,4) output(8,better,7) output(3,better,7) output(3,better,1) output(8,better,1) output(3,better,0) output(0,worse,4) output(7,worse,4) output(1,worse,4) output(0,worse,2) output(7,worse,2) output(1,worse,2) output(3,worse,6) output(0,worse,6) output(3,worse,9) output(0,worse,8) output(0,worse,9) output(3,eq,8) output(3,eq,2) output(3,eq,4) output(0,eq,7) output(0,eq,1) output(6,eq,9) output(8,eq,2) output(8,eq,4) output(7,eq,1) output(2,eq,4)
Optimization: 21 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(6,better,7) output(6,better,1) output(0,better,7) output(0,better,1) output(9,better,7) output(9,better,1) output(8,better,7) output(3,better,6) output(3,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,2) output(3,better,4) output(8,better,1) output(3,better,0) output(0,worse,4) output(7,worse,4) output(1,worse,4) output(0,worse,2) output(7,worse,2) output(1,worse,2) output(0,worse,6) output(0,worse,8) output(0,worse,9) output(6,eq,9) output(6,eq,8) output(6,eq,2) output(6,eq,4) output(9,eq,8) output(9,eq,2) output(9,eq,4) output(8,eq,2) output(8,eq,4) output(7,eq,1) output(2,eq,4)
Optimization: 20 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(6,better,7) output(6,better,1) output(0,better,7) output(0,better,1) output(9,better,8) output(9,better,7) output(9,better,1) output(9,better,2) output(9,better,4) output(8,better,7) output(3,better,6) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,2) output(3,better,4) output(8,better,1) output(3,better,0) output(0,worse,4) output(7,worse,4) output(1,worse,4) output(0,worse,2) output(7,worse,2) output(1,worse,2) output(0,worse,6) output(6,worse,9) output(0,worse,8) output(0,worse,9) output(3,eq,9) output(6,eq,8) output(6,eq,2) output(6,eq,4) output(8,eq,2) output(8,eq,4) output(7,eq,1) output(2,eq,4)
Optimization: 18 1
Answer: 7
preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(2,better,4) output(6,better,8) output(6,better,4) output(7,better,4) output(0,better,6) output(0,better,8) output(0,better,7) output(0,better,1) output(0,better,2) output(0,better,4) output(9,better,8) output(9,better,4) output(1,better,4) output(3,better,6) output(3,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,2) output(3,better,4) output(0,better,9) output(8,worse,2) output(8,worse,7) output(8,worse,1) output(3,eq,0) output(6,eq,9) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(9,eq,7) output(9,eq,1) output(9,eq,2) output(8,eq,4) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 15 1
Answer: 8
preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(2,better,4) output(6,better,8) output(6,better,4) output(7,better,4) output(0,better,6) output(0,better,8) output(0,better,7) output(0,better,1) output(0,better,2) output(0,better,4) output(9,better,8) output(9,better,7) output(9,better,1) output(9,better,2) output(9,better,4) output(1,better,4) output(3,better,6) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,2) output(3,better,4) output(8,worse,2) output(8,worse,7) output(6,worse,9) output(8,worse,1) output(3,eq,0) output(3,eq,9) output(0,eq,9) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(8,eq,4) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 14 1
Answer: 9
preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(isRaw(1))),()) preference(1,poset) output(2,better,4) output(6,better,7) output(6,better,1) output(0,better,6) output(0,better,8) output(0,better,7) output(0,better,1) output(0,better,2) output(0,better,4) output(9,better,8) output(9,better,7) output(9,better,1) output(9,better,2) output(9,better,4) output(8,better,7) output(8,better,4) output(3,better,6) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,2) output(3,better,4) output(8,better,1) output(3,better,0) output(7,worse,4) output(1,worse,4) output(6,worse,2) output(7,worse,2) output(1,worse,2) output(6,worse,9) output(6,worse,8) output(7,worse,1) output(0,worse,9) output(3,eq,9) output(6,eq,4) output(8,eq,2)
Optimization: 12 2
Answer: 10
preference(1,(1,1),1,for(atom(isChewy(1))),()) preference(1,(1,2),1,for(atom(isRoe(1))),()) preference(1,(1,3),1,for(atom(hasPrice(0))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(isRaw(0))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isChewy(1))),()) preference(1,(1,12),1,for(atom(isChewy(1))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(isRaw(1))),()) preference(1,(1,3),2,for(atom(isRaw(1))),()) preference(1,(1,4),2,for(atom(isChewy(1))),()) preference(1,(1,5),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(isRoe(1))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(2,better,4) output(6,better,9) output(6,better,8) output(6,better,2) output(6,better,4) output(7,better,1) output(7,better,2) output(7,better,4) output(0,better,6) output(0,better,8) output(0,better,7) output(0,better,1) output(0,better,2) output(0,better,4) output(9,better,8) output(9,better,2) output(9,better,4) output(1,better,2) output(1,better,4) output(3,better,6) output(3,better,9) output(3,better,8) output(3,better,2) output(3,better,4) output(0,better,9) output(8,worse,4) output(8,worse,2) output(3,worse,7) output(6,worse,7) output(9,worse,7) output(8,worse,7) output(3,worse,0) output(3,worse,1) output(6,worse,1) output(9,worse,1) output(8,worse,1)
Optimization: 11 8
Answer: 11
preference(1,(1,1),1,for(atom(isSweet(1))),()) preference(1,(1,2),1,for(atom(isChewy(1))),()) preference(1,(1,3),1,for(atom(isRoe(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),1,for(atom(isTamago(1))),()) preference(1,(1,6),1,for(atom(isSweet(1))),()) preference(1,(1,7),1,for(atom(isFattyFish(1))),()) preference(1,(1,8),1,for(atom(isButtery(1))),()) preference(1,(1,9),1,for(atom(isFattyFish(1))),()) preference(1,(1,10),1,for(atom(isRoe(1))),()) preference(1,(1,11),1,for(atom(isFattyFish(1))),()) preference(1,(1,12),1,for(atom(isRoe(1))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(isButtery(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(isFattyFish(1))),()) preference(1,(1,5),2,for(atom(isFattyFish(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),2,for(atom(isSweet(1))),()) preference(1,(1,8),2,for(atom(isTamago(1))),()) preference(1,(1,9),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(isTamago(1))),()) preference(1,poset) output(6,better,9) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(0,better,8) output(0,better,7) output(0,better,1) output(0,better,2) output(0,better,4) output(9,better,1) output(9,better,2) output(8,better,7) output(8,better,2) output(8,better,4) output(1,better,2) output(3,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,2) output(3,better,4) output(0,better,9) output(8,better,1) output(3,better,0) output(7,worse,4) output(1,worse,4) output(2,worse,4) output(3,unc,6) output(0,unc,6) output(6,unc,8) output(6,unc,4) output(9,unc,8) output(9,unc,7) output(9,unc,4)
Optimization: 10 12
SATISFIABLE

Models       : 11+
  Optimum    : unknown
Optimization : 10 12
Calls        : 1
Time         : 910.716s (Solving: 902.69s 1st Model: 1.44s Unsat: 0.00s)
CPU Time     : 3617.337s
Threads      : 4        (Winner: 0)

Choices      : 10578767 (Domain: 2688)
Conflicts    : 234195   (Analyzed: 234195)
Restarts     : 307      (Average: 762.85 Last: 10444)
Model-Level  : 288.3   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 28645171 (Deleted: 28470808)
  Binary     : 3092     (Ratio:   0.01%)
  Ternary    : 70944    (Ratio:   0.25%)
  Conflict   : 234195   (Average Length:  965.9 Ratio:   0.82%) 
  Loop       : 28332813 (Average Length:  235.1 Ratio:  98.91%) 
  Other      : 78163    (Average Length:    3.4 Ratio:   0.27%) 
  Distributed: 26076    (Ratio:   0.09% Average LBD: 2.84) 
  Integrated : 78224    (Ratio: 299.98% Unit: 257 Average Jumps: 1477.52)
Backjumps    : 234195   (Average: 37.96 Max: 178270 Sum: 8891040)
  Executed   : 234160   (Average: 37.96 Max: 178270 Sum: 8890936 Ratio: 100.00%)
  Bounded    : 35       (Average:  2.97 Max:  38 Sum:    104 Ratio:   0.00%)

Rules        : 1508107 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28609   
Bodies       : 1146212 
  Count      : 48      
Equivalences : 32115    (Atom=Atom: 5174 Body=Body: 7849 Other: 19092)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103147  (Eliminated:    0 Frozen: 1092637)
Constraints  : 6431676  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isChewy(1)) >> atom(hasPrice(0)) ; 
  atom(isRoe(1)) >> atom(isRaw(1)) ; 
  atom(hasPrice(0)) >> atom(isRaw(1)) ; 
  atom(isRaw(0)) >> atom(isChewy(1)) ; 
  atom(isRaw(0)) >> atom(isRaw(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(isChewy(1)) >> atom(isRoe(1)) ; 
  atom(isChewy(1)) >> atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSweet(1)) >> atom(hasPrice(0)) ; 
  atom(isChewy(1)) >> atom(isButtery(1)) ; 
  atom(isRoe(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) >> atom(isFattyFish(1)) ; 
  atom(isTamago(1)) >> atom(isFattyFish(1)) ; 
  atom(isSweet(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isFattyFish(1)) >> atom(isSweet(1)) ; 
  atom(isButtery(1)) >> atom(isTamago(1)) ; 
  atom(isFattyFish(1)) >> atom(isRaw(1)) ; 
  atom(isRoe(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isFattyFish(1)) >> atom(hasPrice(0)) ; 
  atom(isRoe(1)) >> atom(isTamago(1)) 
}.
Time limit reached
