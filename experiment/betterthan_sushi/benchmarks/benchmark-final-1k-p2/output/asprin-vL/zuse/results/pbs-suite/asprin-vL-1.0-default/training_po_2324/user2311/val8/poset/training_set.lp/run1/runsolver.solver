asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(6,eq,9) output(6,eq,7) output(6,eq,2) output(6,eq,3) output(6,eq,0) output(6,eq,5) output(6,eq,1) output(6,eq,4) output(9,eq,7) output(9,eq,2) output(9,eq,3) output(9,eq,0) output(9,eq,5) output(9,eq,1) output(9,eq,4) output(7,eq,2) output(7,eq,3) output(7,eq,0) output(7,eq,5) output(7,eq,1) output(7,eq,4) output(2,eq,3) output(2,eq,0) output(2,eq,5) output(2,eq,1) output(2,eq,4) output(3,eq,0) output(3,eq,5) output(3,eq,1) output(3,eq,4) output(0,eq,5) output(0,eq,1) output(0,eq,4) output(5,eq,1) output(5,eq,4) output(1,eq,4)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(2,better,0) output(2,better,5) output(2,better,1) output(6,better,7) output(6,better,0) output(6,better,5) output(6,better,1) output(9,better,7) output(9,better,5) output(9,better,1) output(3,better,1) output(9,better,0) output(3,better,0) output(3,better,5) output(6,worse,4) output(9,worse,4) output(7,worse,4) output(2,worse,4) output(3,worse,4) output(0,worse,4) output(5,worse,4) output(1,worse,4) output(7,worse,2) output(7,worse,3) output(6,eq,9) output(6,eq,2) output(6,eq,3) output(9,eq,2) output(9,eq,3) output(7,eq,0) output(7,eq,5) output(7,eq,1) output(2,eq,3) output(0,eq,5) output(0,eq,1) output(5,eq,1)
Optimization: 22 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isOctopus(1))),()) preference(1,poset) output(5,better,1) output(2,better,0) output(2,better,5) output(2,better,1) output(6,better,7) output(6,better,0) output(6,better,5) output(6,better,1) output(9,better,7) output(9,better,5) output(9,better,1) output(3,better,1) output(9,better,0) output(3,better,0) output(3,better,5) output(7,worse,4) output(0,worse,4) output(5,worse,4) output(1,worse,4) output(7,worse,5) output(0,worse,5) output(7,worse,2) output(7,worse,3) output(6,eq,9) output(6,eq,2) output(6,eq,3) output(6,eq,4) output(9,eq,2) output(9,eq,3) output(9,eq,4) output(7,eq,0) output(7,eq,1) output(2,eq,3) output(2,eq,4) output(3,eq,4) output(0,eq,1)
Optimization: 21 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(2,better,0) output(2,better,5) output(2,better,1) output(6,better,7) output(6,better,2) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(9,better,7) output(9,better,2) output(9,better,3) output(9,better,5) output(9,better,1) output(9,better,4) output(3,better,1) output(9,better,0) output(3,better,0) output(3,better,5) output(7,worse,4) output(0,worse,4) output(5,worse,4) output(1,worse,4) output(7,worse,2) output(7,worse,3) output(6,eq,9) output(7,eq,0) output(7,eq,5) output(7,eq,1) output(2,eq,3) output(2,eq,4) output(3,eq,4) output(0,eq,5) output(0,eq,1) output(5,eq,1)
Optimization: 16 1
Answer: 5
preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(isRaw(1))),()) preference(1,poset) output(5,better,4) output(2,better,0) output(2,better,5) output(2,better,1) output(2,better,4) output(6,better,7) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(7,better,4) output(9,better,7) output(9,better,5) output(9,better,1) output(9,better,4) output(0,better,4) output(1,better,4) output(3,better,1) output(3,better,4) output(9,better,0) output(3,better,0) output(3,better,5) output(7,worse,2) output(7,worse,3) output(6,eq,9) output(6,eq,2) output(6,eq,3) output(9,eq,2) output(9,eq,3) output(7,eq,0) output(7,eq,5) output(7,eq,1) output(2,eq,3) output(0,eq,5) output(0,eq,1) output(5,eq,1)
Optimization: 14 1
Answer: 6
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,2),1,for(atom(isButtery(1))),()) preference(1,(1,4),1,for(atom(isRaw(0))),()) preference(1,(1,5),1,for(atom(isUnique(1))),()) preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,8),1,for(atom(isShrimp(1))),()) preference(1,(1,9),1,for(atom(isOctopus(1))),()) preference(1,(1,10),1,for(atom(isUrchin(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),1,for(atom(isMaguro(1))),()) preference(1,(1,1),2,for(atom(isShrimp(1))),()) preference(1,(1,2),2,for(atom(isRaw(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(isRaw(0))),()) preference(1,(1,6),2,for(atom(isOctopus(1))),()) preference(1,(1,8),2,for(atom(isOctopus(1))),()) preference(1,(1,9),2,for(atom(isUrchin(1))),()) preference(1,(1,10),2,for(atom(isRaw(0))),()) preference(1,(1,11),2,for(atom(isButtery(1))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(5,better,1) output(2,better,3) output(2,better,0) output(2,better,5) output(2,better,1) output(6,better,9) output(6,better,7) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(7,better,3) output(7,better,0) output(7,better,5) output(7,better,1) output(9,better,3) output(9,better,5) output(9,better,1) output(0,better,5) output(0,better,1) output(3,better,1) output(9,better,0) output(3,better,0) output(3,better,5) output(6,unc,2) output(6,unc,4) output(9,unc,7) output(9,unc,2) output(9,unc,4) output(7,unc,2) output(7,unc,4) output(2,unc,4) output(3,unc,4) output(0,unc,4) output(5,unc,4) output(1,unc,4)
Optimization: 12 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),1,for(atom(hasPrice(1))),()) preference(1,(1,5),1,for(atom(hasPrice(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(isUnique(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(isShrimp(1))),()) preference(1,(1,4),2,for(atom(isChewy(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(isUrchin(1))),()) preference(1,(1,11),2,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isCreamy(1))),()) preference(1,poset) output(5,better,1) output(5,better,4) output(2,better,4) output(6,better,9) output(6,better,7) output(6,better,2) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(7,better,2) output(7,better,3) output(7,better,0) output(7,better,5) output(7,better,1) output(7,better,4) output(9,better,2) output(9,better,3) output(9,better,5) output(9,better,1) output(9,better,4) output(0,better,5) output(0,better,1) output(0,better,4) output(1,better,4) output(3,better,1) output(3,better,4) output(9,better,0) output(2,worse,5) output(2,worse,0) output(3,worse,0) output(2,worse,3) output(2,eq,1) output(3,eq,5) output(9,unc,7)
Optimization: 7 12
Answer: 8
preference(1,(1,1),1,for(atom(isRaw(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(isShrimp(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,9),1,for(atom(isRaw(1))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(isSweet(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(isShrimp(1))),()) preference(1,(1,4),2,for(atom(isRaw(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(isUnique(1))),()) preference(1,(1,8),2,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(isRaw(1))),()) preference(1,(1,11),2,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(5,better,1) output(5,better,4) output(2,better,0) output(2,better,5) output(2,better,1) output(2,better,4) output(6,better,9) output(6,better,2) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(7,better,0) output(7,better,5) output(7,better,1) output(7,better,4) output(9,better,2) output(9,better,3) output(9,better,5) output(9,better,1) output(9,better,4) output(0,better,5) output(0,better,1) output(0,better,4) output(1,better,4) output(3,better,1) output(3,better,4) output(9,better,0) output(3,better,0) output(3,better,5) output(2,worse,3) output(6,unc,7) output(9,unc,7) output(7,unc,2) output(7,unc,3)
Optimization: 5 12
Answer: 9
preference(1,(1,1),1,for(atom(isRaw(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(isShrimp(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,10),1,for(atom(isRaw(1))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,1),2,for(atom(isSweet(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(isShrimp(1))),()) preference(1,(1,4),2,for(atom(isRaw(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(isUnique(1))),()) preference(1,(1,8),2,for(atom(isCreamy(1))),()) preference(1,(1,9),2,for(atom(isUrchin(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isRaw(1))),()) preference(1,poset) output(5,better,1) output(5,better,4) output(2,better,0) output(2,better,5) output(2,better,1) output(2,better,4) output(6,better,9) output(6,better,7) output(6,better,2) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(7,better,0) output(7,better,5) output(7,better,1) output(7,better,4) output(9,better,7) output(9,better,2) output(9,better,3) output(9,better,5) output(9,better,1) output(9,better,4) output(0,better,5) output(0,better,1) output(0,better,4) output(1,better,4) output(3,better,1) output(3,better,4) output(9,better,0) output(3,better,0) output(3,better,5) output(7,worse,2) output(7,worse,3) output(2,worse,3)
Optimization: 3 12
Answer: 10
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(hasPrice(1))),()) preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(isShrimp(1))),()) preference(1,(1,8),1,for(atom(isShrimp(1))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),1,for(atom(isCreamy(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(isCreamy(1))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,8),2,for(atom(isRoe(1))),()) preference(1,(1,9),2,for(atom(isMaguro(1))),()) preference(1,(1,10),2,for(atom(isRaw(1))),()) preference(1,(1,11),2,for(atom(isShrimp(1))),()) preference(1,(1,12),2,for(atom(isMaguro(1))),()) preference(1,poset) output(5,better,1) output(5,better,4) output(2,better,0) output(2,better,5) output(2,better,1) output(2,better,4) output(6,better,9) output(6,better,7) output(6,better,2) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(7,better,2) output(7,better,3) output(7,better,0) output(7,better,5) output(7,better,1) output(7,better,4) output(9,better,2) output(9,better,3) output(9,better,5) output(9,better,1) output(9,better,4) output(0,better,5) output(0,better,1) output(0,better,4) output(1,better,4) output(3,better,1) output(3,better,4) output(9,better,0) output(3,better,0) output(3,better,5) output(9,worse,7) output(2,worse,3)
Optimization: 2 12
Answer: 11
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(isUnique(1))),()) preference(1,(1,4),1,for(atom(isRaw(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),1,for(atom(isTamago(1))),()) preference(1,(1,7),1,for(atom(isMaguro(1))),()) preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isButtery(1))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,3),2,for(atom(isTamago(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),2,for(atom(isOctopus(1))),()) preference(1,(1,6),2,for(atom(isRaw(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),2,for(atom(isButtery(1))),()) preference(1,(1,11),2,for(atom(isUnique(1))),()) preference(1,poset) output(5,better,1) output(5,better,4) output(2,better,3) output(2,better,0) output(2,better,5) output(2,better,1) output(2,better,4) output(6,better,9) output(6,better,7) output(6,better,2) output(6,better,3) output(6,better,0) output(6,better,5) output(6,better,1) output(6,better,4) output(7,better,2) output(7,better,3) output(7,better,0) output(7,better,5) output(7,better,1) output(7,better,4) output(9,better,7) output(9,better,2) output(9,better,3) output(9,better,5) output(9,better,1) output(9,better,4) output(0,better,1) output(0,better,4) output(1,better,4) output(3,better,1) output(3,better,4) output(9,better,0) output(3,better,0) output(3,better,5) output(0,worse,5)
Optimization: 1 8
SATISFIABLE

Models       : 11+
  Optimum    : unknown
Optimization : 1 8
Calls        : 1
Time         : 1124.484s (Solving: 1116.84s 1st Model: 1.46s Unsat: 0.00s)
CPU Time     : 4473.337s
Threads      : 4        (Winner: 3)

Choices      : 10335421 (Domain: 2887)
Conflicts    : 375528   (Analyzed: 375528)
Restarts     : 395      (Average: 950.70 Last: 24212)
Model-Level  : 758.1   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 30522875 (Deleted: 30318565)
  Binary     : 2446     (Ratio:   0.01%)
  Ternary    : 99512    (Ratio:   0.33%)
  Conflict   : 375528   (Average Length: 1129.6 Ratio:   1.23%) 
  Loop       : 30040757 (Average Length:  231.0 Ratio:  98.42%) 
  Other      : 106590   (Average Length:    3.5 Ratio:   0.35%) 
  Distributed: 35534    (Ratio:   0.12% Average LBD: 2.88) 
  Integrated : 106601   (Ratio: 300.00% Unit: 201 Average Jumps: 1818.07)
Backjumps    : 375528   (Average: 22.16 Max: 366846 Sum: 8323469)
  Executed   : 375502   (Average: 22.16 Max: 366846 Sum: 8323384 Ratio: 100.00%)
  Bounded    : 26       (Average:  3.27 Max:  38 Sum:     85 Ratio:   0.00%)

Rules        : 1507892 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28456   
Bodies       : 1146039 
  Count      : 48      
Equivalences : 31752    (Atom=Atom: 5105 Body=Body: 7760 Other: 18887)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103059  (Eliminated:    0 Frozen: 1092562)
Constraints  : 6431355  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isOctopus(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isShrimp(1)) ; 
  atom(isButtery(1)) >> atom(isRaw(1)) ; 
  atom(isRaw(0)) >> atom(hasPrice(1)) ; 
  atom(isUnique(1)) >> atom(isRaw(0)) ; 
  atom(isRaw(1)) >> atom(isOctopus(1)) ; 
  atom(isShrimp(1)) >> atom(isOctopus(1)) ; 
  atom(isOctopus(1)) >> atom(isUrchin(1)) ; 
  atom(isUrchin(1)) >> atom(isRaw(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isButtery(1)) ; 
  atom(isMaguro(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(isUnique(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isShrimp(1)) ; 
  atom(hasPrice(1)) >> atom(isChewy(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(isUrchin(1)) ; 
  atom(isUrchin(1)) >> atom(isCreamy(1)) ; 
  atom(isUnique(1)) >> atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isShrimp(1)) ; 
  atom(isShrimp(1)) >> atom(isRaw(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(isUnique(1)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(0)) >> atom(isRaw(1)) ; 
  atom(isUrchin(1)) >> atom(isCreamy(1)) ; 
  atom(hasPrice(0)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) >> atom(isShrimp(1)) ; 
  atom(isShrimp(1)) >> atom(isRaw(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(isUnique(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isCreamy(1)) ; 
  atom(hasPrice(0)) >> atom(isUrchin(1)) ; 
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isUrchin(1)) >> atom(isCreamy(1)) ; 
  atom(hasPrice(0)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isFattyFish(1)) ; 
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isRaw(1)) >> atom(isCreamy(1)) ; 
  atom(isShrimp(1)) >> atom(isFattyFish(1)) ; 
  atom(isShrimp(1)) >> atom(isRoe(1)) ; 
  atom(hasPrice(1)) >> atom(isMaguro(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(1)) ; 
  atom(isCreamy(1)) >> atom(isShrimp(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(isMaguro(1)) ; 
  atom(isUnique(1)) >> atom(isTamago(1)) ; 
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(1)) >> atom(isOctopus(1)) ; 
  atom(isTamago(1)) >> atom(isRaw(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(0)) >> atom(isButtery(1)) ; 
  atom(isButtery(1)) >> atom(isUnique(1)) 
}.
Time limit reached
