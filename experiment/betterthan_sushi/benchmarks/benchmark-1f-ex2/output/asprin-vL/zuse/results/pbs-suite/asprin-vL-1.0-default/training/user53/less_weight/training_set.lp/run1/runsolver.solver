asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,7) output(45,eq,86) output(45,eq,8) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(5,eq,86) output(5,eq,8) output(5,eq,85) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(39,eq,86) output(39,eq,8) output(39,eq,85) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,86) output(15,eq,8) output(15,eq,85) output(22,eq,28) output(22,eq,7) output(22,eq,86) output(22,eq,8) output(22,eq,85) output(28,eq,7) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(7,eq,86) output(7,eq,8) output(7,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasStyle(0)))),1) preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,4),1,for(neg(atom(hasMajorGrp(1)))),1) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),1) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(5)))),1) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(6)))),1) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(7)))),1) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(8)))),1) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(11)))),2) preference(1,less(weight)) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(5,eq,86) output(5,eq,8) output(5,eq,85) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(39,eq,86) output(39,eq,8) output(39,eq,85) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,86) output(15,eq,8) output(15,eq,85) output(22,eq,28) output(22,eq,7) output(22,eq,86) output(22,eq,8) output(22,eq,85) output(28,eq,7) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(7,eq,86) output(7,eq,8) output(7,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 36 14
Answer: 3
preference(1,(1,13),1,for(atom(hasPrice(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(86,better,8) output(5,better,22) output(5,better,8) output(7,better,8) output(15,better,22) output(15,better,8) output(28,better,8) output(39,better,22) output(39,better,8) output(45,better,22) output(45,better,8) output(8,worse,85) output(22,worse,28) output(22,worse,7) output(22,worse,86) output(22,worse,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,28) output(45,eq,7) output(45,eq,86) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,28) output(5,eq,7) output(5,eq,86) output(5,eq,85) output(39,eq,15) output(39,eq,28) output(39,eq,7) output(39,eq,86) output(39,eq,85) output(15,eq,28) output(15,eq,7) output(15,eq,86) output(15,eq,85) output(22,eq,8) output(28,eq,7) output(28,eq,86) output(28,eq,85) output(7,eq,86) output(7,eq,85) output(86,eq,85)
Optimization: 34 2
Answer: 4
preference(1,(1,13),1,for(atom(hasPrice(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,8) output(15,better,7) output(15,better,8) output(22,better,7) output(22,better,8) output(28,better,7) output(28,better,8) output(39,better,7) output(39,better,8) output(45,better,7) output(45,better,8) output(7,worse,86) output(7,worse,85) output(8,worse,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,86) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,86) output(5,eq,85) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,86) output(39,eq,85) output(15,eq,22) output(15,eq,28) output(15,eq,86) output(15,eq,85) output(22,eq,28) output(22,eq,86) output(22,eq,85) output(28,eq,86) output(28,eq,85) output(7,eq,8) output(86,eq,85)
Optimization: 32 2
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(5,better,86) output(5,better,8) output(7,better,86) output(7,better,8) output(15,better,86) output(15,better,8) output(22,better,86) output(22,better,8) output(28,better,86) output(28,better,8) output(39,better,86) output(39,better,8) output(45,better,86) output(45,better,8) output(86,worse,85) output(8,worse,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,7) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(5,eq,85) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(39,eq,85) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,85) output(22,eq,28) output(22,eq,7) output(22,eq,85) output(28,eq,7) output(28,eq,85) output(7,eq,85) output(86,eq,8)
Optimization: 31 2
Answer: 6
preference(1,(1,13),1,for(atom(hasPrice(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),10) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,8) output(5,better,85) output(7,better,8) output(7,better,85) output(15,better,8) output(15,better,85) output(22,better,8) output(22,better,85) output(28,better,8) output(28,better,85) output(39,better,8) output(39,better,85) output(45,better,8) output(45,better,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,7) output(45,eq,86) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(5,eq,86) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(39,eq,86) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,86) output(22,eq,28) output(22,eq,7) output(22,eq,86) output(28,eq,7) output(28,eq,86) output(7,eq,86) output(8,eq,85)
Optimization: 29 2
Answer: 7
preference(1,(1,12),1,for(atom(hasPrice(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,14),1,for(atom(hasOftenSold(1))),10) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,28) output(5,better,8) output(5,better,85) output(7,better,8) output(7,better,85) output(15,better,28) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,8) output(22,better,85) output(39,better,28) output(39,better,8) output(39,better,85) output(45,better,28) output(45,better,8) output(45,better,85) output(28,worse,7) output(28,worse,86) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,7) output(45,eq,86) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,7) output(5,eq,86) output(39,eq,15) output(39,eq,22) output(39,eq,7) output(39,eq,86) output(15,eq,22) output(15,eq,7) output(15,eq,86) output(22,eq,7) output(22,eq,86) output(28,eq,8) output(28,eq,85) output(7,eq,86) output(8,eq,85)
Optimization: 26 3
Answer: 8
preference(1,(1,12),1,for(atom(hasPrice(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,7) output(5,better,8) output(5,better,85) output(15,better,7) output(15,better,8) output(15,better,85) output(22,better,7) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,8) output(28,better,85) output(39,better,7) output(39,better,8) output(39,better,85) output(45,better,7) output(45,better,8) output(45,better,85) output(7,worse,86) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,86) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,86) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,86) output(15,eq,22) output(15,eq,28) output(15,eq,86) output(22,eq,28) output(22,eq,86) output(28,eq,86) output(7,eq,8) output(7,eq,85) output(8,eq,85)
Optimization: 25 3
Answer: 9
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,13),1,for(atom(hasPrice(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),10) preference(1,less(weight)) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,86) output(45,better,8) output(45,better,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,7) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(22,eq,28) output(22,eq,7) output(28,eq,7) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 24 3
Answer: 10
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(45,better,7) output(45,better,86) output(45,better,8) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,85) output(7,worse,85) output(8,worse,85) output(28,worse,85) output(45,worse,39) output(45,worse,15) output(45,worse,22) output(45,worse,85) output(45,eq,5) output(45,eq,28) output(5,eq,28) output(39,eq,15) output(39,eq,22) output(39,eq,85) output(15,eq,22) output(15,eq,85) output(22,eq,85) output(7,eq,86)
Optimization: 22 7
Answer: 11
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(45,better,5) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,85) output(7,worse,85) output(8,worse,85) output(28,worse,85) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,85) output(5,eq,28) output(39,eq,15) output(39,eq,22) output(39,eq,85) output(15,eq,22) output(15,eq,85) output(22,eq,85) output(7,eq,86)
Optimization: 20 7
Answer: 12
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(45,better,5) output(45,better,39) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,85) output(7,worse,85) output(8,worse,85) output(28,worse,85) output(39,worse,15) output(39,worse,22) output(39,worse,85) output(45,eq,15) output(45,eq,22) output(45,eq,85) output(5,eq,28) output(15,eq,22) output(15,eq,85) output(22,eq,85) output(7,eq,86)
Optimization: 19 8
Answer: 13
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(45,better,5) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,85) output(7,worse,85) output(8,worse,85) output(22,worse,85) output(28,worse,85) output(45,worse,39) output(45,worse,15) output(45,worse,85) output(45,eq,22) output(5,eq,28) output(39,eq,15) output(39,eq,85) output(15,eq,85) output(7,eq,86)
Optimization: 18 10
Answer: 14
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(45,better,5) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,85) output(7,worse,85) output(8,worse,85) output(22,worse,85) output(28,worse,85) output(45,eq,39) output(45,eq,15) output(45,eq,85) output(5,eq,28) output(39,eq,15) output(39,eq,85) output(15,eq,85) output(7,eq,86)
Optimization: 17 10
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,7) output(5,better,8) output(7,better,8) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,8) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,86) output(7,worse,86) output(7,worse,85) output(8,worse,85) output(28,worse,86) output(45,eq,39) output(45,eq,15) output(5,eq,28) output(5,eq,85) output(39,eq,15) output(22,eq,86) output(28,eq,85)
Optimization: 15 10
Answer: 16
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(7,worse,85) output(8,worse,85) output(45,worse,39) output(45,worse,15) output(45,eq,22) output(5,eq,28) output(5,eq,85) output(39,eq,15) output(28,eq,85) output(7,eq,86)
Optimization: 14 12
Answer: 17
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,13),1,for(atom(hasOftenSold(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(86,better,8) output(5,better,7) output(5,better,86) output(5,better,8) output(7,better,8) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(86,worse,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(7,worse,85) output(8,worse,85) output(45,eq,39) output(45,eq,15) output(5,eq,28) output(5,eq,85) output(39,eq,15) output(28,eq,85) output(7,eq,86)
Optimization: 13 11
Answer: 18
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,11),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasOftenSold(1))),9) preference(1,(1,14),1,for(atom(hasStyle(0))),2) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,28) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,8) output(22,better,85) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,7) output(5,worse,86) output(22,worse,7) output(22,worse,86) output(28,worse,7) output(28,worse,86) output(28,worse,8) output(45,eq,39) output(5,eq,8)
Optimization: 12 13
Answer: 19
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasStyle(0))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasOftenSold(1))),9) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,28) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,8) output(22,better,85) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,39) output(5,worse,15) output(5,worse,22) output(5,worse,7) output(5,worse,86) output(22,worse,7) output(28,worse,7) output(28,worse,86) output(28,worse,8) output(5,eq,8) output(22,eq,86)
Optimization: 11 13
Answer: 20
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasStyle(0))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,22) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,39) output(5,worse,15) output(5,worse,28) output(22,worse,28) output(22,worse,7) output(39,worse,15) output(45,eq,15) output(5,eq,7) output(39,eq,28) output(22,eq,86)
Optimization: 10 13
Answer: 21
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasStyle(0))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,39) output(5,worse,15) output(5,worse,28) output(22,worse,28) output(22,worse,7) output(39,worse,15) output(45,eq,15) output(39,eq,28) output(22,eq,86)
Optimization: 9 14
Answer: 22
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,15) output(5,worse,28) output(22,worse,28) output(22,worse,7) output(39,worse,15) output(39,worse,28) output(45,eq,15) output(22,eq,86)
Optimization: 8 14
Answer: 23
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,15) output(5,worse,28) output(22,worse,28) output(22,worse,7) output(39,worse,15) output(39,worse,28) output(45,eq,15)
Optimization: 7 14
Answer: 24
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasStyle(0))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),4) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,15) output(5,worse,28) output(22,worse,28) output(39,worse,15) output(39,worse,28) output(45,eq,15)
Optimization: 6 14
Answer: 25
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasStyle(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,28) output(15,worse,28) output(22,worse,28) output(39,worse,28) output(22,eq,7)
Optimization: 5 14
Answer: 26
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),2) preference(1,(1,2),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasStyle(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),4) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,28) output(15,worse,28) output(22,worse,28) output(39,worse,28)
Optimization: 4 14
Answer: 27
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasOftenSold(1))),9) preference(1,(1,5),1,for(atom(hasStyle(0))),9) preference(1,(1,6),1,for(atom(hasPrice(3))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(15,worse,22) output(45,worse,5) output(15,eq,28)
Optimization: 3 14
Answer: 28
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasOiliness(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasStyle(0))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasOftenSold(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),9) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(15,worse,22) output(45,worse,5)
Optimization: 2 14
Answer: 29
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,8),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,1),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasStyle(0))),9) preference(1,(1,6),1,for(atom(hasPrice(3))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasOftenSold(1))),1) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(15,worse,22)
Optimization: 1 14
Answer: 30
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasOiliness(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasOftenSold(1))),9) preference(1,(1,5),1,for(atom(hasStyle(0))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasPrice(3))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasOiliness(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOftenSold(2))),3) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 31
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasOiliness(3))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,5),1,for(atom(hasPrice(3))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOftenSold(2))),3) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 13
Answer: 32
preference(1,(1,13),1,for(neg(atom(hasStyle(1)))),8) preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasOftenSold(1))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasPrice(3))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),7) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.087 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 32+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 298.153s (Solving: 283.24s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1147.342s
Threads      : 4        (Winner: 4)

Choices      : 3983889  (Domain: 1052)
Conflicts    : 990122   (Analyzed: 990121)
Restarts     : 928      (Average: 1066.94 Last: 102809)
Model-Level  : 1378.9  
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 991558   (Deleted: 879913)
  Binary     : 140      (Ratio:   0.01%)
  Ternary    : 64       (Ratio:   0.01%)
  Conflict   : 990121   (Average Length: 1920.2 Ratio:  99.86%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 1437     (Average Length:  156.4 Ratio:   0.14%) 
  Distributed: 479      (Ratio:   0.05% Average LBD: 3.30) 
  Integrated : 1437     (Ratio: 300.00% Unit: 32 Average Jumps: 31.53)
Backjumps    : 990121   (Average:  2.22 Max: 2894 Sum: 2195340)
  Executed   : 990120   (Average:  2.22 Max: 2894 Sum: 2195334 Ratio: 100.00%)
  Bounded    : 1        (Average:  6.00 Max:   6 Sum:      6 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasStyle(0))  ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  1 :: not atom(hasMajorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasMinorGrp(4))  ; 
  1 :: not atom(hasMinorGrp(5))  ; 
  1 :: not atom(hasMinorGrp(6))  ; 
  1 :: not atom(hasMinorGrp(7))  ; 
  1 :: not atom(hasMinorGrp(8))  ; 
  2 :: not atom(hasMinorGrp(11))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  4 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasPrice(2)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  5 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  5 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  5 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  5 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  5 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  4 :: atom(hasPrice(3)) ; 
  5 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(3)) ; 
  4 :: atom(hasPrice(3)) ; 
  5 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  9 :: atom(hasStyle(0)) ; 
  9 :: atom(hasPrice(3)) ; 
  3 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasStyle(0)) ; 
  9 :: atom(hasPrice(3)) ; 
  3 :: not atom(hasStyle(1))  ; 
  5 :: not atom(hasOiliness(2))  ; 
  9 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  9 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasPrice(3)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  9 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(3)) ; 
  5 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasStyle(1))  ; 
  9 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: not atom(hasStyle(1))  ; 
  7 :: atom(hasMinorGrp(6)) 
}.
