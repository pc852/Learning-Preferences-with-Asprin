asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(48,eq,11) output(48,eq,5) output(48,eq,63) output(48,eq,15) output(48,eq,45) output(48,eq,9) output(48,eq,23) output(48,eq,40) output(48,eq,7) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,23) output(11,eq,40) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,23) output(5,eq,40) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,23) output(63,eq,40) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,23) output(15,eq,40) output(15,eq,7) output(45,eq,9) output(45,eq,23) output(45,eq,40) output(45,eq,7) output(9,eq,23) output(9,eq,40) output(9,eq,7) output(23,eq,40) output(23,eq,7) output(40,eq,7)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,less(weight)) output(5,better,40) output(9,better,40) output(11,better,40) output(15,better,40) output(23,better,40) output(45,better,40) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,23) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,23) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,23) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,23) output(15,eq,7) output(45,eq,9) output(45,eq,23) output(45,eq,7) output(9,eq,23) output(9,eq,7) output(23,eq,7)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,9),1,for(atom(hasOiliness(3))),4) preference(1,less(weight)) output(5,better,45) output(5,better,40) output(9,better,40) output(11,better,5) output(11,better,45) output(11,better,40) output(15,better,45) output(15,better,40) output(23,better,40) output(45,better,40) output(63,better,45) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(5,worse,63) output(5,worse,15) output(5,worse,9) output(5,worse,23) output(5,worse,7) output(45,worse,9) output(45,worse,23) output(45,worse,7) output(48,eq,40) output(11,eq,63) output(11,eq,15) output(11,eq,9) output(11,eq,23) output(11,eq,7) output(63,eq,15) output(63,eq,9) output(63,eq,23) output(63,eq,7) output(15,eq,9) output(15,eq,23) output(15,eq,7) output(9,eq,23) output(9,eq,7) output(23,eq,7)
Optimization: 33 4
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(5,better,23) output(5,better,40) output(9,better,23) output(9,better,40) output(11,better,23) output(11,better,40) output(15,better,23) output(15,better,40) output(23,better,40) output(45,better,23) output(45,better,40) output(63,better,23) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(23,worse,7) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,7) output(45,eq,9) output(45,eq,7) output(9,eq,7)
Optimization: 32 2
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,23) output(63,better,40) output(63,better,7) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(15,eq,45) output(15,eq,9) output(45,eq,9) output(23,eq,7)
Optimization: 26 3
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,40) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(63,eq,15) output(63,eq,45) output(15,eq,45) output(9,eq,23) output(9,eq,7) output(23,eq,7)
Optimization: 23 4
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasOftenSold(2))),6) preference(1,(1,11),1,for(atom(hasPrice(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,63) output(11,better,15) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(15,better,40) output(23,better,40) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,23) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(11,worse,5) output(11,worse,45) output(15,worse,45) output(15,worse,9) output(23,worse,7) output(63,worse,45) output(63,worse,9) output(48,eq,40) output(11,eq,9) output(5,eq,45) output(63,eq,15) output(63,eq,7) output(15,eq,7)
Optimization: 22 8
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasOftenSold(2))),6) preference(1,(1,11),1,for(atom(hasPrice(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,63) output(11,better,15) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(15,better,40) output(23,better,40) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,23) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(11,worse,5) output(11,worse,45) output(15,worse,45) output(15,worse,9) output(23,worse,7) output(63,worse,45) output(63,worse,9) output(48,eq,40) output(5,eq,45) output(63,eq,15) output(63,eq,7) output(15,eq,7)
Optimization: 21 8
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasOftenSold(2))),6) preference(1,(1,11),1,for(atom(hasPrice(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(11,better,63) output(11,better,15) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,40) output(23,better,40) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,40) output(40,worse,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,worse,7) output(9,worse,7) output(11,worse,5) output(11,worse,45) output(15,worse,45) output(23,worse,7) output(63,worse,45) output(48,eq,40) output(5,eq,45) output(63,eq,15) output(63,eq,7) output(15,eq,7)
Optimization: 20 9
Progression : [ 1;20] (Error: 19)
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasPrice(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasStyle(0))),2) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(11,better,15) output(11,better,9) output(11,better,23) output(11,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,5) output(48,worse,63) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(11,worse,63) output(11,worse,45) output(11,worse,40) output(15,worse,45) output(15,worse,9) output(15,worse,23) output(15,worse,40) output(15,worse,7) output(23,worse,40) output(23,worse,7) output(63,worse,45) output(48,eq,40) output(5,eq,45) output(9,eq,7)
Optimization: 19 10
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasPrice(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasStyle(0))),2) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(11,better,15) output(11,better,9) output(11,better,23) output(11,better,7) output(15,better,23) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,5) output(48,worse,63) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(11,worse,63) output(11,worse,45) output(11,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(23,worse,7) output(63,worse,45) output(48,eq,40) output(5,eq,45) output(15,eq,9) output(15,eq,7) output(9,eq,7)
Optimization: 18 10
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasStyle(0))),2) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(11,better,15) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(23,worse,7) output(48,eq,40) output(11,eq,63) output(11,eq,45) output(63,eq,45) output(15,eq,9) output(15,eq,7) output(9,eq,7)
Optimization: 17 11
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasOftenSold(3))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasStyle(0))),2) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,63) output(48,worse,15) output(5,worse,63) output(5,worse,15) output(5,worse,45) output(5,worse,9) output(5,worse,40) output(9,worse,40) output(11,worse,15) output(23,worse,40) output(63,worse,15) output(48,eq,45) output(48,eq,40) output(11,eq,63) output(45,eq,40)
Optimization: 16 10
Answer: 14
preference(1,(1,14),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,6),1,for(atom(hasStyle(0))),4) preference(1,(1,9),1,for(atom(hasOftenSold(0))),2) preference(1,(1,10),1,for(atom(hasOftenSold(2))),10) preference(1,(1,11),1,for(atom(hasOftenSold(3))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(15,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,45) output(5,worse,45) output(9,worse,40) output(11,worse,45) output(15,worse,45) output(15,worse,9) output(15,worse,40) output(23,worse,40) output(23,worse,7) output(63,worse,45) output(48,eq,63) output(48,eq,40) output(63,eq,40)
Optimization: 15 12
Answer: 15
preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),4) preference(1,(1,2),1,for(atom(hasOiliness(0))),9) preference(1,(1,3),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasStyle(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasOftenSold(2))),10) preference(1,(1,11),1,for(atom(hasOftenSold(3))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),1) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,45) output(9,worse,40) output(15,worse,45) output(15,worse,9) output(15,worse,40) output(15,worse,7) output(23,worse,40) output(23,worse,7) output(63,worse,45) output(48,eq,63) output(48,eq,40) output(63,eq,40)
Optimization: 14 14
Answer: 16
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasStyle(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasOiliness(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasOftenSold(3))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(40,better,7) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,63) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,15) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(11,worse,15) output(23,worse,40) output(63,worse,15) output(63,worse,45) output(48,eq,63) output(48,eq,40) output(63,eq,40)
Optimization: 13 14
Answer: 17
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasStyle(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasOiliness(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasOftenSold(3))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),9) preference(1,less(weight)) output(40,better,7) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,63) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(11,worse,15) output(23,worse,40) output(63,worse,15) output(48,eq,40) output(63,eq,45)
Optimization: 12 14
Answer: 18
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,3),1,for(atom(hasOftenSold(2))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasStyle(0))),4) preference(1,(1,7),1,for(atom(hasPrice(3))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasOiliness(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),1) preference(1,less(weight)) output(40,better,7) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(23,worse,40) output(63,worse,15) output(48,eq,40) output(63,eq,45)
Optimization: 11 14
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasOftenSold(2))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasStyle(0))),4) preference(1,(1,7),1,for(atom(hasPrice(3))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasOiliness(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),1) preference(1,less(weight)) output(40,better,7) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(9,worse,40) output(11,worse,5) output(23,worse,40) output(48,eq,40) output(63,eq,15)
Optimization: 10 14
Progression : [ 2;10] (Error: 4)
Answer: 20
preference(1,(1,11),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasOiliness(2))),5) preference(1,(1,7),1,for(atom(hasPrice(2))),3) preference(1,(1,8),1,for(atom(hasOftenSold(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),7) preference(1,(1,12),1,for(atom(hasOftenSold(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(5,worse,40) output(9,worse,40) output(11,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,40) output(48,eq,40) output(5,eq,63)
Optimization: 9 14
Progression : [3;9] (Error: 2)
Progression : [4;9] (Error: 1.25)
Progression : [5;9] (Error: 0.8)
Progression : [6;9] (Error: 0.5)
Progression : [7;9] (Error: 0.285714)
Answer: 21
preference(1,(1,3),1,for(neg(atom(hasOiliness(0)))),8) preference(1,(1,4),1,for(neg(atom(hasStyle(0)))),7) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(7)))),5) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(2)))),6) preference(1,(1,13),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,5),1,for(atom(hasOftenSold(3))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasStyle(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(5,worse,40) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,40) output(48,eq,40) output(5,eq,63)
Optimization: 9 13
Progression : [8;9] (Error: 0.125)
Answer: 22
preference(1,(1,2),1,for(neg(atom(hasPrice(2)))),7) preference(1,(1,10),1,for(neg(atom(hasStyle(0)))),6) preference(1,(1,11),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,12),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,6),1,for(atom(hasOiliness(2))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),9) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(5,worse,40) output(9,worse,40) output(11,worse,40) output(15,worse,40) output(23,worse,40) output(23,worse,7) output(45,worse,40) output(63,worse,40) output(48,eq,40)
Optimization: 9 12
Answer: 23
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,1),1,for(atom(hasPrice(0))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasOiliness(2))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasOftenSold(1))),1) preference(1,(1,14),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(48,eq,40)
Optimization: 8 14
Progression : 8 [ 1;14] (Error: 13)
Answer: 24
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,1),1,for(atom(hasPrice(0))),9) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasOiliness(2))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasOftenSold(2))),10) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(48,eq,40)
Optimization: 8 12
Answer: 25
preference(1,(1,9),1,for(neg(atom(hasOftenSold(3)))),4) preference(1,(1,11),1,for(neg(atom(hasStyle(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,2),1,for(atom(hasOiliness(2))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),5) preference(1,(1,6),1,for(atom(hasPrice(2))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),7) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,40) output(48,eq,40)
Optimization: 8 11
Answer: 26
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),7) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,5),1,for(atom(hasOftenSold(2))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,12),1,for(atom(hasOiliness(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),9) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,eq,40)
Optimization: 8 10
Answer: 27
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,3),1,for(atom(hasOiliness(2))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,14),1,for(atom(hasOftenSold(0))),2) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(48,eq,40)
Optimization: 8 9
Progression : 8 [2;9] (Error: 3.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.140 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 27+
  Optimum    : unknown
Optimization : 8 9
Bounds       : 8 [2;9]
Calls        : 1
Time         : 298.245s (Solving: 284.55s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1151.114s
Threads      : 4        (Winner: 4)

Choices      : 4875182  (Domain: 744)
Conflicts    : 1103212  (Analyzed: 1103202)
Restarts     : 1095     (Average: 1007.49 Last: 20590)
Model-Level  : 1466.3  
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 1115320  (Deleted: 965901)
  Binary     : 1829     (Ratio:   0.16%)
  Ternary    : 589      (Ratio:   0.05%)
  Conflict   : 1103200  (Average Length: 1455.9 Ratio:  98.91%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12120    (Average Length:   84.4 Ratio:   1.09%) 
  Distributed: 4042     (Ratio:   0.37% Average LBD: 3.42) 
  Integrated : 12126    (Ratio: 300.00% Unit: 122 Average Jumps: 152.08)
Backjumps    : 1103202  (Average:  2.96 Max: 3689 Sum: 3264412)
  Executed   : 1103130  (Average:  2.96 Max: 3689 Sum: 3263357 Ratio:  99.97%)
  Bounded    : 72       (Average: 14.65 Max:  46 Sum:   1055 Ratio:   0.03%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasPrice(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(2)) ; 
  9 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: not atom(hasStyle(1))  ; 
  8 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMajorGrp(0))  ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMajorGrp(0))  ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(2)) ; 
  3 :: atom(hasPrice(2)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  7 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  8 :: not atom(hasOiliness(0))  ; 
  7 :: not atom(hasStyle(0))  ; 
  8 :: atom(hasOftenSold(3)) ; 
  5 :: not atom(hasMinorGrp(7))  ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  9 :: atom(hasMinorGrp(9)) ; 
  6 :: not atom(hasMinorGrp(2))  ; 
  4 :: atom(hasMinorGrp(6)) ; 
  10 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(2)) ; 
  7 :: not atom(hasPrice(2))  ; 
  4 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  6 :: not atom(hasStyle(0))  ; 
  3 :: not atom(hasOiliness(1))  ; 
  3 :: not atom(hasPrice(1))  ; 
  9 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasOiliness(1)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasOiliness(1)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOiliness(2)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasOiliness(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  3 :: atom(hasPrice(2)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasOftenSold(3))  ; 
  3 :: not atom(hasStyle(0))  ; 
  7 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasStyle(1))  ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  8 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasPrice(0))  ; 
  3 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOftenSold(0)) 
}.
