asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,19) output(9,eq,99) output(9,eq,55) output(9,eq,31) output(9,eq,13) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,19) output(47,eq,99) output(47,eq,55) output(47,eq,31) output(47,eq,13) output(50,eq,30) output(50,eq,4) output(50,eq,19) output(50,eq,99) output(50,eq,55) output(50,eq,31) output(50,eq,13) output(30,eq,4) output(30,eq,19) output(30,eq,99) output(30,eq,55) output(30,eq,31) output(30,eq,13) output(4,eq,19) output(4,eq,99) output(4,eq,55) output(4,eq,31) output(4,eq,13) output(19,eq,99) output(19,eq,55) output(19,eq,31) output(19,eq,13) output(99,eq,55) output(99,eq,31) output(99,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,19) output(4,better,31) output(9,better,19) output(9,better,31) output(30,better,19) output(30,better,31) output(47,better,19) output(47,better,31) output(50,better,19) output(50,better,31) output(55,better,31) output(99,better,31) output(19,worse,99) output(19,worse,55) output(19,worse,13) output(31,worse,13) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,99) output(9,eq,55) output(9,eq,13) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,99) output(47,eq,55) output(47,eq,13) output(50,eq,30) output(50,eq,4) output(50,eq,99) output(50,eq,55) output(50,eq,13) output(30,eq,4) output(30,eq,99) output(30,eq,55) output(30,eq,13) output(4,eq,99) output(4,eq,55) output(4,eq,13) output(19,eq,31) output(99,eq,55) output(99,eq,13) output(55,eq,13)
Optimization: 33 1
Answer: 3
preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,31) output(9,better,19) output(9,better,99) output(9,better,31) output(30,better,19) output(30,better,99) output(30,better,31) output(47,better,19) output(47,better,99) output(47,better,31) output(50,better,19) output(50,better,99) output(50,better,31) output(55,better,31) output(19,worse,55) output(19,worse,13) output(31,worse,13) output(99,worse,55) output(99,worse,13) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,55) output(9,eq,13) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,55) output(47,eq,13) output(50,eq,30) output(50,eq,4) output(50,eq,55) output(50,eq,13) output(30,eq,4) output(30,eq,55) output(30,eq,13) output(4,eq,55) output(4,eq,13) output(19,eq,99) output(19,eq,31) output(99,eq,31) output(55,eq,13)
Optimization: 29 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,19) output(4,better,55) output(4,better,31) output(9,better,19) output(9,better,55) output(9,better,31) output(30,better,19) output(30,better,55) output(30,better,31) output(47,better,19) output(47,better,55) output(47,better,31) output(50,better,19) output(50,better,55) output(50,better,31) output(99,better,55) output(99,better,31) output(19,worse,99) output(19,worse,13) output(31,worse,13) output(55,worse,13) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,99) output(9,eq,13) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,99) output(47,eq,13) output(50,eq,30) output(50,eq,4) output(50,eq,99) output(50,eq,13) output(30,eq,4) output(30,eq,99) output(30,eq,13) output(4,eq,99) output(4,eq,13) output(19,eq,55) output(19,eq,31) output(99,eq,13) output(55,eq,31)
Optimization: 28 2
Answer: 5
preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,19) output(4,better,31) output(4,better,13) output(9,better,19) output(9,better,31) output(9,better,13) output(30,better,19) output(30,better,31) output(30,better,13) output(47,better,19) output(47,better,31) output(47,better,13) output(50,better,19) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,31) output(99,better,13) output(19,worse,99) output(19,worse,55) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,99) output(9,eq,55) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,99) output(47,eq,55) output(50,eq,30) output(50,eq,4) output(50,eq,99) output(50,eq,55) output(30,eq,4) output(30,eq,99) output(30,eq,55) output(4,eq,99) output(4,eq,55) output(19,eq,31) output(19,eq,13) output(99,eq,55) output(31,eq,13)
Optimization: 26 2
Answer: 6
preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,19) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,19) output(9,better,55) output(9,better,31) output(9,better,13) output(30,better,19) output(30,better,55) output(30,better,31) output(30,better,13) output(47,better,19) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,19) output(50,better,55) output(50,better,31) output(50,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(19,worse,99) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(9,eq,99) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(47,eq,99) output(50,eq,30) output(50,eq,4) output(50,eq,99) output(30,eq,4) output(30,eq,99) output(4,eq,99) output(19,eq,55) output(19,eq,31) output(19,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 22 3
Answer: 7
preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(9,eq,47) output(9,eq,50) output(9,eq,30) output(9,eq,4) output(47,eq,50) output(47,eq,30) output(47,eq,4) output(50,eq,30) output(50,eq,4) output(30,eq,4) output(19,eq,99) output(19,eq,55) output(19,eq,31) output(19,eq,13) output(99,eq,55) output(99,eq,31) output(99,eq,13) output(55,eq,31) output(55,eq,13) output(31,eq,13)
Optimization: 20 4
Answer: 8
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,3),1,for(atom(hasOiliness(3))),8) preference(1,(1,4),1,for(atom(hasOftenSold(2))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,10),1,for(atom(hasOftenSold(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,50) output(9,better,30) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,13) output(55,better,13) output(19,worse,31) output(30,worse,4) output(30,worse,19) output(30,worse,99) output(30,worse,55) output(30,worse,31) output(30,worse,13) output(50,worse,4) output(50,worse,31) output(55,worse,31) output(99,worse,55) output(99,worse,31) output(9,eq,47) output(9,eq,4) output(47,eq,4) output(99,eq,13)
Optimization: 16 13
Answer: 9
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(4)))),2) preference(1,(1,12),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,1),1,for(atom(hasPrice(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,4),1,for(atom(hasOftenSold(2))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,7),1,for(atom(hasPrice(3))),10) preference(1,(1,8),1,for(atom(hasOiliness(2))),1) preference(1,(1,9),1,for(atom(hasOftenSold(0))),9) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,11),1,for(atom(hasOftenSold(1))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(4,better,19) output(4,better,55) output(4,better,31) output(9,better,47) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(47,better,19) output(47,better,55) output(47,better,31) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(99,better,55) output(99,better,31) output(99,better,13) output(4,worse,99) output(4,worse,13) output(9,worse,50) output(19,worse,99) output(19,worse,31) output(19,worse,13) output(31,worse,13) output(47,worse,50) output(47,worse,30) output(47,worse,99) output(47,worse,13) output(55,worse,31) output(55,worse,13) output(47,eq,4) output(19,eq,55)
Optimization: 15 14
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,10),1,for(neg(atom(hasPrice(3)))),3) preference(1,(1,12),1,for(neg(atom(hasOftenSold(2)))),3) preference(1,(1,2),1,for(atom(hasOiliness(2))),3) preference(1,(1,3),1,for(atom(hasOftenSold(0))),1) preference(1,(1,4),1,for(atom(hasOftenSold(3))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,7),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),9) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 11
preference(1,(1,6),1,for(neg(atom(hasOftenSold(0)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasOftenSold(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,14),1,for(atom(hasOftenSold(2))),7) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 13
Answer: 12
preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,5),1,for(atom(hasOiliness(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,12),1,for(atom(hasOftenSold(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 12
Answer: 13
preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,2),1,for(atom(hasOftenSold(2))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasOftenSold(1))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasPrice(3))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 14
preference(1,(1,2),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,3),1,for(atom(hasOiliness(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,9),1,for(atom(hasOftenSold(2))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasOftenSold(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),7) preference(1,less(weight)) output(4,better,19) output(4,better,99) output(4,better,55) output(4,better,31) output(4,better,13) output(9,better,47) output(9,better,50) output(9,better,30) output(9,better,4) output(9,better,19) output(9,better,99) output(9,better,55) output(9,better,31) output(9,better,13) output(19,better,99) output(19,better,55) output(19,better,31) output(19,better,13) output(30,better,4) output(30,better,19) output(30,better,99) output(30,better,55) output(30,better,31) output(30,better,13) output(31,better,13) output(47,better,50) output(47,better,30) output(47,better,4) output(47,better,19) output(47,better,99) output(47,better,55) output(47,better,31) output(47,better,13) output(50,better,30) output(50,better,4) output(50,better,19) output(50,better,99) output(50,better,55) output(50,better,31) output(50,better,13) output(55,better,31) output(55,better,13) output(99,better,55) output(99,better,31) output(99,better,13)
Optimization: 0 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.078 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.141s (Solving: 283.08s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1146.977s
Threads      : 4        (Winner: 4)

Choices      : 4930191  (Domain: 888)
Conflicts    : 969135   (Analyzed: 969133)
Restarts     : 972      (Average: 997.05 Last: 92870)
Model-Level  : 1195.1  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 972502   (Deleted: 883286)
  Binary     : 388      (Ratio:   0.04%)
  Ternary    : 249      (Ratio:   0.03%)
  Conflict   : 969133   (Average Length: 1734.6 Ratio:  99.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3369     (Average Length:  226.1 Ratio:   0.35%) 
  Distributed: 1123     (Ratio:   0.12% Average LBD: 3.37) 
  Integrated : 3369     (Ratio: 300.00% Unit: 6 Average Jumps: 302.17)
Backjumps    : 969133   (Average:  3.27 Max: 4163 Sum: 3166191)
  Executed   : 969132   (Average:  3.27 Max: 4163 Sum: 3166166 Ratio: 100.00%)
  Bounded    : 1        (Average: 25.00 Max:  25 Sum:     25 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasOiliness(3)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  2 :: not atom(hasMinorGrp(4))  ; 
  5 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPrice(3)) ; 
  1 :: atom(hasOiliness(2)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOftenSold(1)) ; 
  4 :: not atom(hasOftenSold(0))  ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasMinorGrp(1))  ; 
  3 :: atom(hasOiliness(2)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasOftenSold(3)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  3 :: not atom(hasPrice(3))  ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasOftenSold(2))  ; 
  6 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: not atom(hasOftenSold(0))  ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: not atom(hasMinorGrp(6))  ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(0)) 
}.
