asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,27) output(19,eq,29) output(19,eq,15) output(19,eq,16) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,27) output(38,eq,29) output(38,eq,15) output(38,eq,16) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,27) output(26,eq,29) output(26,eq,15) output(26,eq,16) output(0,eq,4) output(0,eq,22) output(0,eq,27) output(0,eq,29) output(0,eq,15) output(0,eq,16) output(4,eq,22) output(4,eq,27) output(4,eq,29) output(4,eq,15) output(4,eq,16) output(22,eq,27) output(22,eq,29) output(22,eq,15) output(22,eq,16) output(27,eq,29) output(27,eq,15) output(27,eq,16) output(29,eq,15) output(29,eq,16) output(15,eq,16)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasOiliness(3))),10) preference(1,less(weight)) output(26,better,29) output(38,better,29) output(0,better,29) output(4,better,29) output(19,better,29) output(22,better,29) output(27,better,29) output(29,worse,15) output(29,worse,16) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,27) output(19,eq,15) output(19,eq,16) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,27) output(38,eq,15) output(38,eq,16) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,27) output(26,eq,15) output(26,eq,16) output(0,eq,4) output(0,eq,22) output(0,eq,27) output(0,eq,15) output(0,eq,16) output(4,eq,22) output(4,eq,27) output(4,eq,15) output(4,eq,16) output(22,eq,27) output(22,eq,15) output(22,eq,16) output(27,eq,15) output(27,eq,16) output(15,eq,16)
Optimization: 38 1
Answer: 3
preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(26,better,16) output(29,better,16) output(38,better,16) output(0,better,16) output(4,better,16) output(15,better,16) output(19,better,16) output(22,better,16) output(27,better,16) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,27) output(19,eq,29) output(19,eq,15) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,27) output(38,eq,29) output(38,eq,15) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,27) output(26,eq,29) output(26,eq,15) output(0,eq,4) output(0,eq,22) output(0,eq,27) output(0,eq,29) output(0,eq,15) output(4,eq,22) output(4,eq,27) output(4,eq,29) output(4,eq,15) output(22,eq,27) output(22,eq,29) output(22,eq,15) output(27,eq,29) output(27,eq,15) output(29,eq,15)
Optimization: 36 1
Answer: 4
preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(26,better,27) output(26,better,29) output(38,better,27) output(38,better,29) output(0,better,27) output(0,better,29) output(4,better,27) output(4,better,29) output(19,better,27) output(19,better,29) output(22,better,27) output(22,better,29) output(29,worse,15) output(29,worse,16) output(27,worse,15) output(27,worse,16) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,15) output(19,eq,16) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,15) output(38,eq,16) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,15) output(26,eq,16) output(0,eq,4) output(0,eq,22) output(0,eq,15) output(0,eq,16) output(4,eq,22) output(4,eq,15) output(4,eq,16) output(22,eq,15) output(22,eq,16) output(27,eq,29) output(15,eq,16)
Optimization: 33 2
Answer: 5
preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(26,better,29) output(26,better,16) output(38,better,29) output(38,better,16) output(0,better,29) output(0,better,16) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,29) output(19,better,16) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(29,worse,15) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,27) output(19,eq,15) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,27) output(38,eq,15) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,27) output(26,eq,15) output(0,eq,4) output(0,eq,22) output(0,eq,27) output(0,eq,15) output(4,eq,22) output(4,eq,27) output(4,eq,15) output(22,eq,27) output(22,eq,15) output(27,eq,15) output(29,eq,16)
Optimization: 30 2
Answer: 6
preference(1,(1,12),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(26,better,4) output(26,better,29) output(26,better,16) output(38,better,4) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,29) output(0,better,16) output(15,better,16) output(19,better,4) output(19,better,29) output(19,better,16) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(29,worse,15) output(4,worse,22) output(4,worse,27) output(4,worse,15) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,22) output(19,eq,27) output(19,eq,15) output(38,eq,26) output(38,eq,0) output(38,eq,22) output(38,eq,27) output(38,eq,15) output(26,eq,0) output(26,eq,22) output(26,eq,27) output(26,eq,15) output(0,eq,22) output(0,eq,27) output(0,eq,15) output(4,eq,29) output(4,eq,16) output(22,eq,27) output(22,eq,15) output(27,eq,15) output(29,eq,16)
Optimization: 28 3
Answer: 7
preference(1,(1,12),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(26,better,27) output(26,better,29) output(26,better,16) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(29,worse,15) output(27,worse,15) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,4) output(19,eq,22) output(19,eq,15) output(38,eq,26) output(38,eq,0) output(38,eq,4) output(38,eq,22) output(38,eq,15) output(26,eq,0) output(26,eq,4) output(26,eq,22) output(26,eq,15) output(0,eq,4) output(0,eq,22) output(0,eq,15) output(4,eq,22) output(4,eq,15) output(22,eq,15) output(27,eq,29) output(27,eq,16) output(29,eq,16)
Optimization: 26 3
Answer: 8
preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),10) preference(1,less(weight)) output(26,better,4) output(26,better,27) output(26,better,29) output(26,better,16) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,16) output(15,better,16) output(19,better,4) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(29,worse,15) output(4,worse,22) output(4,worse,15) output(27,worse,15) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,22) output(19,eq,15) output(38,eq,26) output(38,eq,0) output(38,eq,22) output(38,eq,15) output(26,eq,0) output(26,eq,22) output(26,eq,15) output(0,eq,22) output(0,eq,15) output(4,eq,27) output(4,eq,29) output(4,eq,16) output(22,eq,15) output(27,eq,29) output(27,eq,16) output(29,eq,16)
Optimization: 25 4
Answer: 9
preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(26,better,4) output(26,better,27) output(26,better,29) output(26,better,16) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,4) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(29,worse,15) output(4,worse,22) output(4,worse,15) output(27,worse,15) output(19,eq,38) output(19,eq,26) output(19,eq,0) output(19,eq,22) output(19,eq,15) output(38,eq,26) output(38,eq,0) output(38,eq,22) output(38,eq,15) output(26,eq,0) output(26,eq,22) output(26,eq,15) output(0,eq,22) output(0,eq,15) output(22,eq,15) output(27,eq,29) output(27,eq,16) output(29,eq,16)
Optimization: 22 4
Answer: 10
preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,13),1,for(atom(hasPrice(3))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(26,better,4) output(26,better,27) output(26,better,29) output(26,better,16) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,4) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(27,better,29) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,22) output(38,worse,15) output(4,worse,22) output(4,worse,15) output(19,worse,38) output(19,worse,26) output(19,worse,0) output(19,worse,22) output(19,worse,15) output(27,worse,15) output(26,eq,0) output(26,eq,22) output(26,eq,15) output(0,eq,22) output(0,eq,15) output(22,eq,15) output(27,eq,16)
Optimization: 21 6
Answer: 11
preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasOiliness(2))),1) preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,13),1,for(atom(hasPrice(3))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(26,better,4) output(26,better,27) output(26,better,29) output(26,better,16) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,4) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(27,better,29) output(27,better,16) output(26,worse,15) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,22) output(38,worse,15) output(0,worse,15) output(4,worse,22) output(4,worse,15) output(19,worse,38) output(19,worse,26) output(19,worse,0) output(19,worse,22) output(19,worse,15) output(22,worse,15) output(27,worse,15) output(26,eq,0) output(26,eq,22) output(0,eq,22)
Optimization: 20 7
Answer: 12
preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasPrice(3))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),1) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,4) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,16) output(27,better,29) output(29,worse,15) output(29,worse,16) output(38,worse,26) output(38,worse,0) output(38,worse,22) output(38,worse,15) output(0,worse,15) output(4,worse,22) output(4,worse,15) output(19,worse,38) output(19,worse,26) output(19,worse,0) output(19,worse,22) output(19,worse,15) output(22,worse,15) output(27,worse,15) output(27,worse,16) output(0,eq,22)
Optimization: 18 8
Answer: 13
preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasOiliness(1))),1) preference(1,(1,13),1,for(atom(hasPrice(3))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),1) preference(1,less(weight)) output(26,better,4) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(38,better,4) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,27) output(4,better,29) output(4,better,16) output(15,better,16) output(19,better,4) output(19,better,27) output(19,better,29) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(29,worse,15) output(29,worse,16) output(4,worse,22) output(4,worse,15) output(19,worse,38) output(19,worse,26) output(19,worse,0) output(19,worse,22) output(19,worse,15) output(27,worse,15) output(27,worse,16) output(38,eq,26) output(38,eq,0) output(38,eq,22) output(26,eq,0) output(26,eq,22) output(0,eq,22)
Optimization: 17 9
Answer: 14
preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,11),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(3))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,5),1,for(atom(hasOiliness(2))),3) preference(1,(1,6),1,for(atom(hasPrice(2))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,8),1,for(atom(hasOiliness(3))),6) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,12),1,for(atom(hasStyle(0))),3) preference(1,(1,13),1,for(atom(hasOiliness(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 15
preference(1,(1,9),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,14),1,for(neg(atom(hasOftenSold(3)))),2) preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,4),1,for(atom(hasPrice(2))),6) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasPrice(3))),3) preference(1,(1,11),1,for(atom(hasOiliness(3))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasOftenSold(2))),3) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16)
Optimization: 0 13
Answer: 16
preference(1,(1,13),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,14),1,for(neg(atom(hasOftenSold(3)))),2) preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,4),1,for(atom(hasPrice(2))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),5) preference(1,(1,9),1,for(atom(hasOftenSold(2))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasOiliness(3))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 17
preference(1,(1,8),1,for(neg(atom(hasOiliness(0)))),7) preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasOftenSold(3))),1) preference(1,(1,2),1,for(atom(hasPrice(2))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),3) preference(1,(1,6),1,for(atom(hasPrice(3))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasOiliness(3))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,14),1,for(atom(hasOftenSold(2))),6) preference(1,less(weight)) output(26,better,0) output(26,better,4) output(26,better,22) output(26,better,27) output(26,better,29) output(26,better,15) output(26,better,16) output(29,better,15) output(29,better,16) output(38,better,26) output(38,better,0) output(38,better,4) output(38,better,22) output(38,better,27) output(38,better,29) output(38,better,15) output(38,better,16) output(0,better,4) output(0,better,22) output(0,better,27) output(0,better,29) output(0,better,15) output(0,better,16) output(4,better,22) output(4,better,27) output(4,better,29) output(4,better,15) output(4,better,16) output(15,better,16) output(19,better,38) output(19,better,26) output(19,better,0) output(19,better,4) output(19,better,22) output(19,better,27) output(19,better,29) output(19,better,15) output(19,better,16) output(22,better,27) output(22,better,29) output(22,better,15) output(22,better,16) output(27,better,29) output(27,better,15) output(27,better,16)
Optimization: 0 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.120 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 298.161s (Solving: 283.58s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1148.139s
Threads      : 4        (Winner: 4)

Choices      : 5686079  (Domain: 657)
Conflicts    : 979683   (Analyzed: 979681)
Restarts     : 1103     (Average: 888.20 Last: 78911)
Model-Level  : 933.1   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 983116   (Deleted: 835602)
  Binary     : 464      (Ratio:   0.05%)
  Ternary    : 157      (Ratio:   0.02%)
  Conflict   : 979681   (Average Length: 1739.3 Ratio:  99.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3435     (Average Length:  224.0 Ratio:   0.35%) 
  Distributed: 1145     (Ratio:   0.12% Average LBD: 3.39) 
  Integrated : 3435     (Ratio: 300.00% Unit: 8 Average Jumps: 278.75)
Backjumps    : 979681   (Average:  3.96 Max: 4388 Sum: 3877048)
  Executed   : 979680   (Average:  3.96 Max: 4388 Sum: 3877025 Ratio: 100.00%)
  Bounded    : 1        (Average: 23.00 Max:  23 Sum:     23 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(2)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasPrice(2)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(3)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  3 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasStyle(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(2)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasOiliness(1))  ; 
  3 :: atom(hasPrice(3)) ; 
  6 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  2 :: not atom(hasOftenSold(3))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(2)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(3)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: not atom(hasOiliness(1))  ; 
  2 :: not atom(hasOftenSold(3))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasPrice(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: not atom(hasOiliness(0))  ; 
  6 :: atom(hasOiliness(3)) ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOftenSold(2)) 
}.
