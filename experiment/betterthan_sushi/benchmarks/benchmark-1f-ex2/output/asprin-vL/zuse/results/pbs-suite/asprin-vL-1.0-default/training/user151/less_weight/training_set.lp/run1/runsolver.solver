asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,9) output(8,eq,7) output(8,eq,32) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,9) output(6,eq,7) output(6,eq,32) output(1,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,7) output(1,eq,32) output(11,eq,31) output(11,eq,23) output(11,eq,15) output(11,eq,9) output(11,eq,7) output(11,eq,32) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(23,eq,32) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,less(weight)) output(1,better,7) output(6,better,7) output(8,better,7) output(9,better,7) output(11,better,7) output(15,better,7) output(23,better,7) output(31,better,7) output(7,worse,32) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,9) output(8,eq,32) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,9) output(6,eq,32) output(1,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,32) output(11,eq,31) output(11,eq,23) output(11,eq,15) output(11,eq,9) output(11,eq,32) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,32) output(15,eq,9) output(15,eq,32) output(9,eq,32)
Optimization: 37 1
Answer: 3
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasPrice(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,11) output(1,better,7) output(8,better,6) output(8,better,11) output(8,better,7) output(9,better,7) output(15,better,7) output(23,better,7) output(31,better,7) output(6,worse,1) output(6,worse,31) output(6,worse,23) output(6,worse,15) output(6,worse,9) output(6,worse,32) output(7,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,9) output(11,worse,32) output(8,eq,1) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,9) output(8,eq,32) output(6,eq,11) output(6,eq,7) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,32) output(11,eq,7) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,32) output(15,eq,9) output(15,eq,32) output(9,eq,32)
Optimization: 36 3
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasPrice(2))),10) preference(1,less(weight)) output(1,better,11) output(1,better,7) output(6,better,11) output(6,better,7) output(8,better,11) output(8,better,7) output(9,better,7) output(15,better,7) output(23,better,7) output(31,better,7) output(7,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,9) output(11,worse,32) output(8,eq,6) output(8,eq,1) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,9) output(8,eq,32) output(6,eq,1) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,9) output(6,eq,32) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,32) output(11,eq,7) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,32) output(15,eq,9) output(15,eq,32) output(9,eq,32)
Optimization: 35 2
Answer: 5
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,12),1,for(atom(hasPrice(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,11) output(1,better,9) output(1,better,7) output(8,better,6) output(8,better,11) output(8,better,9) output(8,better,7) output(15,better,9) output(15,better,7) output(23,better,9) output(23,better,7) output(31,better,9) output(31,better,7) output(6,worse,1) output(6,worse,31) output(6,worse,23) output(6,worse,15) output(6,worse,32) output(7,worse,32) output(9,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,32) output(8,eq,1) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,32) output(6,eq,11) output(6,eq,9) output(6,eq,7) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,32) output(11,eq,9) output(11,eq,7) output(31,eq,23) output(31,eq,15) output(31,eq,32) output(23,eq,15) output(23,eq,32) output(15,eq,32) output(9,eq,7)
Optimization: 32 4
Answer: 6
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,11),1,for(atom(hasOiliness(3))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasPrice(2))),10) preference(1,less(weight)) output(1,better,11) output(1,better,9) output(1,better,7) output(8,better,6) output(8,better,11) output(8,better,9) output(8,better,7) output(9,better,7) output(15,better,9) output(15,better,7) output(23,better,9) output(23,better,7) output(31,better,9) output(31,better,7) output(6,worse,1) output(6,worse,31) output(6,worse,23) output(6,worse,15) output(6,worse,9) output(6,worse,32) output(7,worse,32) output(9,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,9) output(11,worse,32) output(8,eq,1) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,32) output(6,eq,11) output(6,eq,7) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,32) output(11,eq,7) output(31,eq,23) output(31,eq,15) output(31,eq,32) output(23,eq,15) output(23,eq,32) output(15,eq,32)
Optimization: 31 5
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasPrice(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,11) output(1,better,9) output(1,better,7) output(6,better,11) output(6,better,9) output(6,better,7) output(8,better,11) output(8,better,9) output(8,better,7) output(15,better,9) output(15,better,7) output(23,better,9) output(23,better,7) output(31,better,9) output(31,better,7) output(7,worse,32) output(9,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,32) output(8,eq,6) output(8,eq,1) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,32) output(6,eq,1) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,32) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,32) output(11,eq,9) output(11,eq,7) output(31,eq,23) output(31,eq,15) output(31,eq,32) output(23,eq,15) output(23,eq,32) output(15,eq,32) output(9,eq,7)
Optimization: 30 3
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasStyle(0)))),1) preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,4),1,for(neg(atom(hasMajorGrp(1)))),1) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),1) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(5)))),1) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(6)))),1) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(7)))),1) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(8)))),1) preference(1,(1,14),1,for(neg(atom(hasPrice(3)))),2) preference(1,less(weight)) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(8,eq,6) output(1,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,7) output(1,eq,32) output(11,eq,31) output(11,eq,23) output(11,eq,15) output(11,eq,9) output(11,eq,7) output(11,eq,32) output(31,eq,23) output(31,eq,15) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(23,eq,32) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 29 14
Answer: 9
preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasOftenSold(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasOiliness(3))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasOftenSold(0))),4) preference(1,(1,14),1,for(atom(hasPrice(2))),10) preference(1,less(weight)) output(1,better,11) output(1,better,23) output(1,better,15) output(1,better,9) output(6,better,11) output(6,better,23) output(6,better,15) output(6,better,9) output(8,better,11) output(8,better,23) output(8,better,15) output(8,better,9) output(15,better,9) output(23,better,9) output(31,better,23) output(31,better,15) output(31,better,9) output(9,worse,7) output(9,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,7) output(11,worse,32) output(15,worse,7) output(15,worse,32) output(23,worse,7) output(23,worse,32) output(8,eq,6) output(8,eq,1) output(8,eq,31) output(8,eq,7) output(8,eq,32) output(6,eq,1) output(6,eq,31) output(6,eq,7) output(6,eq,32) output(1,eq,31) output(1,eq,7) output(1,eq,32) output(11,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(7,eq,32)
Optimization: 28 7
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasPrice(2))),4) preference(1,(1,6),1,for(atom(hasPrice(3))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasOftenSold(2))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasOftenSold(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,11) output(1,better,23) output(1,better,15) output(1,better,9) output(6,better,11) output(6,better,23) output(6,better,15) output(6,better,9) output(8,better,11) output(8,better,23) output(8,better,15) output(8,better,9) output(15,better,9) output(23,better,15) output(23,better,9) output(31,better,23) output(31,better,15) output(31,better,9) output(1,worse,7) output(1,worse,32) output(6,worse,7) output(6,worse,32) output(8,worse,7) output(8,worse,32) output(9,worse,7) output(9,worse,32) output(11,worse,31) output(11,worse,23) output(11,worse,15) output(11,worse,9) output(11,worse,7) output(11,worse,32) output(15,worse,7) output(15,worse,32) output(23,worse,7) output(23,worse,32) output(31,worse,7) output(31,worse,32) output(8,eq,6) output(8,eq,1) output(8,eq,31) output(6,eq,1) output(6,eq,31) output(1,eq,31) output(7,eq,32)
Optimization: 27 10
Answer: 11
preference(1,(1,2),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,5),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasOftenSold(2))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,14),1,for(atom(hasOftenSold(1))),4) preference(1,less(weight)) output(1,better,11) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,7) output(1,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,7) output(6,better,32) output(7,better,32) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,31) output(8,better,23) output(8,better,15) output(8,better,9) output(8,better,7) output(8,better,32) output(9,better,7) output(9,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,7) output(11,better,32) output(15,better,9) output(15,better,7) output(15,better,32) output(23,better,15) output(23,better,9) output(23,better,7) output(23,better,32) output(31,better,23) output(31,better,15) output(31,better,9) output(31,better,7) output(31,better,32)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.164 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.323s (Solving: 284.53s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1151.264s
Threads      : 4        (Winner: 4)

Choices      : 4504716  (Domain: 1221)
Conflicts    : 866470   (Analyzed: 866468)
Restarts     : 947      (Average: 914.96 Last: 24206)
Model-Level  : 781.3   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 868721   (Deleted: 744382)
  Binary     : 252      (Ratio:   0.03%)
  Ternary    : 100      (Ratio:   0.01%)
  Conflict   : 866468   (Average Length: 1829.4 Ratio:  99.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 2253     (Average Length:  268.5 Ratio:   0.26%) 
  Distributed: 751      (Ratio:   0.09% Average LBD: 3.39) 
  Integrated : 2253     (Ratio: 300.00% Unit: 2 Average Jumps: 4.00)
Backjumps    : 866468   (Average:  3.28 Max: 3090 Sum: 2837949)
  Executed   : 866467   (Average:  3.28 Max: 3090 Sum: 2837918 Ratio: 100.00%)
  Bounded    : 1        (Average: 31.00 Max:  31 Sum:     31 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  8 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasStyle(0))  ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  1 :: not atom(hasMajorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasMinorGrp(4))  ; 
  1 :: not atom(hasMinorGrp(5))  ; 
  1 :: not atom(hasMinorGrp(6))  ; 
  1 :: not atom(hasMinorGrp(7))  ; 
  1 :: not atom(hasMinorGrp(8))  ; 
  2 :: not atom(hasPrice(3))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(2)) ; 
  1 :: atom(hasPrice(3)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  9 :: not atom(hasMajorGrp(0))  ; 
  8 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  2 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOftenSold(1)) 
}.
