asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,13) output(4,eq,42) output(4,eq,26) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,13) output(48,eq,42) output(48,eq,26) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,13) output(28,eq,42) output(28,eq,26) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,13) output(43,eq,42) output(43,eq,26) output(43,eq,0) output(1,eq,9) output(1,eq,13) output(1,eq,42) output(1,eq,26) output(1,eq,0) output(9,eq,13) output(9,eq,42) output(9,eq,26) output(9,eq,0) output(13,eq,42) output(13,eq,26) output(13,eq,0) output(42,eq,26) output(42,eq,0) output(26,eq,0)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,26) output(1,better,26) output(4,better,26) output(9,better,26) output(13,better,26) output(28,better,26) output(42,better,26) output(43,better,26) output(26,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,13) output(4,eq,42) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,13) output(48,eq,42) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,13) output(28,eq,42) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,13) output(43,eq,42) output(43,eq,0) output(1,eq,9) output(1,eq,13) output(1,eq,42) output(1,eq,0) output(9,eq,13) output(9,eq,42) output(9,eq,0) output(13,eq,42) output(13,eq,0) output(42,eq,0)
Optimization: 37 1
Answer: 3
preference(1,(1,13),1,for(atom(hasOftenSold(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,13) output(48,better,26) output(1,better,13) output(1,better,26) output(4,better,13) output(4,better,26) output(9,better,13) output(9,better,26) output(28,better,13) output(28,better,26) output(42,better,26) output(43,better,13) output(43,better,26) output(26,worse,0) output(13,worse,42) output(13,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,42) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,42) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,42) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,42) output(43,eq,0) output(1,eq,9) output(1,eq,42) output(1,eq,0) output(9,eq,42) output(9,eq,0) output(13,eq,26) output(42,eq,0)
Optimization: 32 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,42) output(48,better,26) output(1,better,42) output(1,better,26) output(4,better,42) output(4,better,26) output(9,better,42) output(9,better,26) output(13,better,42) output(13,better,26) output(28,better,42) output(28,better,26) output(43,better,42) output(43,better,26) output(26,worse,0) output(42,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,13) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,13) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,13) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,13) output(43,eq,0) output(1,eq,9) output(1,eq,13) output(1,eq,0) output(9,eq,13) output(9,eq,0) output(13,eq,0) output(42,eq,26)
Optimization: 31 2
Answer: 5
preference(1,(1,12),1,for(atom(hasOftenSold(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(48,better,1) output(48,better,13) output(48,better,26) output(4,better,1) output(4,better,13) output(4,better,26) output(9,better,13) output(9,better,26) output(28,better,1) output(28,better,13) output(28,better,26) output(42,better,26) output(43,better,1) output(43,better,13) output(43,better,26) output(26,worse,0) output(1,worse,9) output(1,worse,42) output(1,worse,0) output(13,worse,42) output(13,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,9) output(4,eq,42) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,9) output(48,eq,42) output(48,eq,0) output(28,eq,43) output(28,eq,9) output(28,eq,42) output(28,eq,0) output(43,eq,9) output(43,eq,42) output(43,eq,0) output(1,eq,13) output(1,eq,26) output(9,eq,42) output(9,eq,0) output(13,eq,26) output(42,eq,0)
Optimization: 30 3
Answer: 6
preference(1,(1,12),1,for(atom(hasOftenSold(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(48,better,13) output(48,better,42) output(48,better,26) output(1,better,13) output(1,better,42) output(1,better,26) output(4,better,13) output(4,better,42) output(4,better,26) output(9,better,13) output(9,better,42) output(9,better,26) output(28,better,13) output(28,better,42) output(28,better,26) output(43,better,13) output(43,better,42) output(43,better,26) output(26,worse,0) output(13,worse,0) output(42,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,0) output(1,eq,9) output(1,eq,0) output(9,eq,0) output(13,eq,42) output(13,eq,26) output(42,eq,26)
Optimization: 27 3
Answer: 7
preference(1,(1,6),1,for(atom(hasOiliness(3))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,12),1,for(atom(hasOftenSold(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,1) output(48,better,13) output(48,better,42) output(48,better,26) output(1,better,13) output(1,better,42) output(1,better,26) output(4,better,48) output(4,better,1) output(4,better,13) output(4,better,42) output(4,better,26) output(9,better,13) output(9,better,42) output(9,better,26) output(28,better,1) output(28,better,13) output(28,better,42) output(28,better,26) output(43,better,1) output(43,better,13) output(43,better,42) output(43,better,26) output(26,worse,0) output(48,worse,28) output(48,worse,43) output(48,worse,9) output(48,worse,0) output(1,worse,9) output(1,worse,0) output(13,worse,0) output(42,worse,0) output(4,eq,28) output(4,eq,43) output(4,eq,9) output(4,eq,0) output(28,eq,43) output(28,eq,9) output(28,eq,0) output(43,eq,9) output(43,eq,0) output(9,eq,0) output(13,eq,42) output(13,eq,26) output(42,eq,26)
Optimization: 22 5
Answer: 8
preference(1,(1,10),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,1) output(48,better,13) output(48,better,42) output(48,better,26) output(1,better,13) output(1,better,42) output(1,better,26) output(4,better,48) output(4,better,1) output(4,better,13) output(4,better,42) output(4,better,26) output(9,better,13) output(9,better,42) output(9,better,26) output(28,better,1) output(28,better,13) output(28,better,42) output(28,better,26) output(42,better,26) output(43,better,1) output(43,better,13) output(43,better,42) output(43,better,26) output(26,worse,0) output(48,worse,28) output(48,worse,43) output(48,worse,9) output(48,worse,0) output(1,worse,9) output(1,worse,0) output(13,worse,42) output(13,worse,26) output(13,worse,0) output(42,worse,0) output(4,eq,28) output(4,eq,43) output(4,eq,9) output(4,eq,0) output(28,eq,43) output(28,eq,9) output(28,eq,0) output(43,eq,9) output(43,eq,0) output(9,eq,0)
Optimization: 21 7
Answer: 9
preference(1,(1,10),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(2))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,11),1,for(atom(hasPrice(2))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,1) output(48,better,13) output(48,better,42) output(48,better,26) output(1,better,13) output(1,better,42) output(1,better,26) output(4,better,48) output(4,better,28) output(4,better,1) output(4,better,13) output(4,better,42) output(4,better,26) output(9,better,13) output(9,better,42) output(9,better,26) output(28,better,1) output(28,better,13) output(28,better,42) output(28,better,26) output(42,better,26) output(43,better,1) output(43,better,13) output(43,better,42) output(43,better,26) output(26,worse,0) output(48,worse,43) output(48,worse,9) output(48,worse,0) output(1,worse,9) output(1,worse,0) output(13,worse,42) output(13,worse,26) output(13,worse,0) output(28,worse,43) output(28,worse,9) output(28,worse,0) output(42,worse,0) output(4,eq,43) output(4,eq,9) output(4,eq,0) output(48,eq,28) output(43,eq,9) output(43,eq,0) output(9,eq,0)
Optimization: 20 8
Answer: 10
preference(1,(1,10),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(2))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(48,better,28) output(48,better,1) output(48,better,13) output(48,better,42) output(48,better,26) output(1,better,13) output(1,better,42) output(1,better,26) output(4,better,48) output(4,better,28) output(4,better,1) output(4,better,13) output(4,better,42) output(4,better,26) output(9,better,13) output(9,better,42) output(9,better,26) output(28,better,1) output(28,better,13) output(28,better,42) output(28,better,26) output(42,better,26) output(43,better,1) output(43,better,13) output(43,better,42) output(43,better,26) output(26,worse,0) output(48,worse,43) output(48,worse,9) output(48,worse,0) output(1,worse,9) output(1,worse,0) output(13,worse,42) output(13,worse,26) output(13,worse,0) output(28,worse,43) output(28,worse,9) output(28,worse,0) output(42,worse,0) output(4,eq,43) output(4,eq,9) output(4,eq,0) output(43,eq,9) output(43,eq,0) output(9,eq,0)
Optimization: 19 8
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,7),1,for(atom(hasOiliness(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,10),1,for(atom(hasOiliness(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,13),1,for(atom(hasOftenSold(2))),10) preference(1,(1,14),1,for(atom(hasOiliness(2))),10) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,6),1,for(neg(atom(hasStyle(0)))),4) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),3) preference(1,(1,1),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,8),1,for(atom(hasOftenSold(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasOiliness(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasOftenSold(3))),1) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 13
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,6),1,for(neg(atom(hasStyle(0)))),4) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),3) preference(1,(1,1),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),9) preference(1,(1,7),1,for(atom(hasOftenSold(2))),6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasOiliness(2))),7) preference(1,(1,12),1,for(atom(hasStyle(0))),6) preference(1,(1,13),1,for(atom(hasOftenSold(3))),1) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 12
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,6),1,for(neg(atom(hasStyle(0)))),4) preference(1,(1,12),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),3) preference(1,(1,1),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasOftenSold(3))),1) preference(1,(1,13),1,for(atom(hasOiliness(2))),7) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.118 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 298.300s (Solving: 284.21s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1150.102s
Threads      : 4        (Winner: 4)

Choices      : 5525521  (Domain: 793)
Conflicts    : 1019864  (Analyzed: 1019862)
Restarts     : 1139     (Average: 895.40 Last: 71066)
Model-Level  : 838.1   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1022667  (Deleted: 894229)
  Binary     : 384      (Ratio:   0.04%)
  Ternary    : 95       (Ratio:   0.01%)
  Conflict   : 1019862  (Average Length: 1879.9 Ratio:  99.73%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 2805     (Average Length:  223.8 Ratio:   0.27%) 
  Distributed: 935      (Ratio:   0.09% Average LBD: 3.30) 
  Integrated : 2805     (Ratio: 300.00% Unit: 6 Average Jumps: 2.33)
Backjumps    : 1019862  (Average:  3.40 Max: 2346 Sum: 3463176)
  Executed   : 1019861  (Average:  3.40 Max: 2346 Sum: 3463158 Ratio: 100.00%)
  Bounded    : 1        (Average: 18.00 Max:  18 Sum:     18 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(3)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasPrice(2)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  1 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasOiliness(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: not atom(hasStyle(0))  ; 
  5 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  3 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  9 :: atom(hasOiliness(0)) ; 
  4 :: not atom(hasStyle(0))  ; 
  6 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(2)) ; 
  6 :: atom(hasStyle(0)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  3 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOiliness(1))  ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: not atom(hasStyle(0))  ; 
  6 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  6 :: not atom(hasStyle(1))  ; 
  7 :: atom(hasOiliness(2)) ; 
  3 :: not atom(hasPrice(2))  
}.
