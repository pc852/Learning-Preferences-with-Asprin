asprin_vL version 1.0
Reading from stdin
-:319:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:329:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:344:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:425:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:699:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:876:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1005:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1077:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1081:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1087:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1186:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1212:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1332:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1366:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1388:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:236:1-16: info: no atoms over signature occur in program:
  output/3

-:228:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:229:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:230:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(4,eq,6) output(4,eq,13) output(4,eq,3) output(4,eq,0) output(4,eq,21) output(4,eq,66) output(4,eq,83) output(4,eq,77) output(4,eq,56) output(6,eq,13) output(6,eq,3) output(6,eq,0) output(6,eq,21) output(6,eq,66) output(6,eq,83) output(6,eq,77) output(6,eq,56) output(13,eq,3) output(13,eq,0) output(13,eq,21) output(13,eq,66) output(13,eq,83) output(13,eq,77) output(13,eq,56) output(3,eq,0) output(3,eq,21) output(3,eq,66) output(3,eq,83) output(3,eq,77) output(3,eq,56) output(0,eq,21) output(0,eq,66) output(0,eq,83) output(0,eq,77) output(0,eq,56) output(21,eq,66) output(21,eq,83) output(21,eq,77) output(21,eq,56) output(66,eq,83) output(66,eq,77) output(66,eq,56) output(83,eq,77) output(83,eq,56) output(77,eq,56)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,poset) output(4,better,83) output(4,better,56) output(4,better,6) output(4,better,13) output(4,better,3) output(4,better,0) output(4,better,21) output(4,better,66) output(4,better,77) output(6,worse,83) output(6,worse,56) output(13,worse,83) output(13,worse,56) output(3,worse,83) output(3,worse,56) output(0,worse,83) output(0,worse,56) output(21,worse,83) output(21,worse,56) output(66,worse,83) output(66,worse,56) output(6,worse,77) output(13,worse,77) output(3,worse,77) output(0,worse,77) output(21,worse,77) output(66,worse,77) output(6,eq,13) output(6,eq,3) output(6,eq,0) output(6,eq,21) output(6,eq,66) output(13,eq,3) output(13,eq,0) output(13,eq,21) output(13,eq,66) output(3,eq,0) output(3,eq,21) output(3,eq,66) output(0,eq,21) output(0,eq,66) output(21,eq,66) output(83,eq,77) output(83,eq,56) output(77,eq,56)
Optimization: 36 1
Answer: 3
preference(1,(1,9),1,for(atom(hasOftenSold(3))),()) preference(1,(1,9),2,for(atom(hasMajorGrp(0))),()) preference(1,poset) output(4,better,83) output(4,better,56) output(6,better,83) output(6,better,56) output(13,better,83) output(13,better,56) output(3,better,83) output(3,better,56) output(0,better,83) output(0,better,56) output(21,better,83) output(21,better,56) output(66,better,83) output(66,better,56) output(77,better,56) output(3,better,21) output(3,better,66) output(3,better,77) output(0,better,21) output(0,better,66) output(0,better,77) output(6,better,13) output(6,better,21) output(6,better,66) output(6,better,77) output(4,better,13) output(4,better,21) output(4,better,66) output(4,better,77) output(83,worse,77) output(13,worse,3) output(13,worse,0) output(4,eq,6) output(4,eq,3) output(4,eq,0) output(6,eq,3) output(6,eq,0) output(13,eq,21) output(13,eq,66) output(13,eq,77) output(3,eq,0) output(21,eq,66) output(21,eq,77) output(66,eq,77) output(83,eq,56)
Optimization: 16 1
Answer: 4
preference(1,(1,9),1,for(atom(hasOftenSold(3))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(4,better,83) output(4,better,56) output(6,better,83) output(6,better,56) output(13,better,83) output(13,better,56) output(3,better,83) output(3,better,56) output(0,better,83) output(0,better,56) output(21,better,83) output(21,better,56) output(13,better,66) output(13,better,77) output(21,better,66) output(21,better,77) output(3,better,21) output(3,better,66) output(3,better,77) output(0,better,21) output(0,better,66) output(0,better,77) output(6,better,13) output(6,better,21) output(6,better,66) output(6,better,77) output(4,better,13) output(4,better,21) output(4,better,66) output(4,better,77) output(13,worse,3) output(13,worse,0) output(4,eq,6) output(4,eq,3) output(4,eq,0) output(6,eq,3) output(6,eq,0) output(13,eq,21) output(3,eq,0) output(66,eq,83) output(66,eq,77) output(66,eq,56) output(83,eq,77) output(83,eq,56) output(77,eq,56)
Optimization: 15 1
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),()) preference(1,(1,5),1,for(atom(hasOftenSold(2))),()) preference(1,(1,6),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),()) preference(1,(1,13),1,for(atom(hasPrice(3))),()) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),()) preference(1,(1,1),2,for(atom(hasStyle(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(11))),()) preference(1,(1,4),2,for(atom(hasOftenSold(2))),()) preference(1,(1,5),2,for(atom(hasPrice(3))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(7))),()) preference(1,(1,10),2,for(atom(hasPrice(2))),()) preference(1,(1,11),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,13),2,for(atom(hasPrice(1))),()) preference(1,(1,14),2,for(atom(hasMinorGrp(5))),()) preference(1,poset) output(4,better,83) output(4,better,56) output(6,better,83) output(6,better,56) output(13,better,83) output(13,better,56) output(3,better,83) output(3,better,56) output(0,better,83) output(0,better,56) output(21,better,83) output(21,better,56) output(66,better,83) output(66,better,56) output(13,better,3) output(13,better,0) output(13,better,66) output(13,better,77) output(21,better,66) output(21,better,77) output(3,better,0) output(3,better,77) output(0,better,77) output(6,better,3) output(6,better,0) output(6,better,66) output(6,better,77) output(4,better,3) output(4,better,0) output(4,better,66) output(4,better,77) output(66,better,77) output(83,worse,77) output(0,worse,21) output(0,worse,66) output(83,worse,56) output(4,unc,6) output(4,unc,13) output(4,unc,21) output(6,unc,13) output(6,unc,21) output(13,unc,21) output(3,unc,21) output(3,unc,66) output(77,unc,56)
Optimization: 13 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),()) preference(1,(1,5),1,for(atom(hasOftenSold(2))),()) preference(1,(1,6),1,for(atom(hasOiliness(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),()) preference(1,(1,13),1,for(atom(hasPrice(3))),()) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),()) preference(1,(1,1),2,for(atom(hasStyle(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(11))),()) preference(1,(1,4),2,for(atom(hasOftenSold(2))),()) preference(1,(1,5),2,for(atom(hasPrice(3))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,7),2,for(atom(hasPrice(2))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasOiliness(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,11),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,13),2,for(atom(hasPrice(1))),()) preference(1,(1,14),2,for(atom(hasMinorGrp(7))),()) preference(1,poset) output(4,better,83) output(4,better,56) output(6,better,83) output(6,better,56) output(13,better,83) output(13,better,56) output(3,better,83) output(3,better,56) output(0,better,83) output(0,better,56) output(21,better,83) output(21,better,56) output(66,better,83) output(66,better,56) output(13,better,3) output(13,better,0) output(13,better,66) output(13,better,77) output(21,better,66) output(21,better,77) output(3,better,0) output(3,better,77) output(0,better,77) output(6,better,3) output(6,better,0) output(6,better,66) output(6,better,77) output(4,better,6) output(4,better,3) output(4,better,0) output(4,better,66) output(4,better,77) output(66,better,77) output(83,worse,77) output(0,worse,21) output(0,worse,66) output(83,worse,56) output(4,unc,13) output(4,unc,21) output(6,unc,13) output(6,unc,21) output(13,unc,21) output(3,unc,21) output(3,unc,66) output(77,unc,56)
Optimization: 12 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.139 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 6+
  Optimum    : unknown
Optimization : 12 14
Calls        : 1
Time         : 298.315s (Solving: 263.59s 1st Model: 9.13s Unsat: 0.00s)
CPU Time     : 1083.832s
Threads      : 4        (Winner: 4)

Choices      : 2480639  (Domain: 206)
Conflicts    : 12264    (Analyzed: 12264)
Restarts     : 35       (Average: 350.40 Last: 2487)
Model-Level  : 1365.5  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 7993608  (Deleted: 7923189)
  Binary     : 40       (Ratio:   0.00%)
  Ternary    : 5405     (Ratio:   0.07%)
  Conflict   : 12264    (Average Length: 2389.1 Ratio:   0.15%) 
  Loop       : 7977058  (Average Length:  380.4 Ratio:  99.79%) 
  Other      : 4286     (Average Length:    3.1 Ratio:   0.05%) 
  Distributed: 1431     (Ratio:   0.02% Average LBD: 2.80) 
  Integrated : 4286     (Ratio: 299.51% Unit: 16 Average Jumps: 2264.62)
Backjumps    : 12264    (Average: 176.75 Max: 276638 Sum: 2167717)
  Executed   : 12259    (Average: 176.75 Max: 276638 Sum: 2167707 Ratio: 100.00%)
  Bounded    : 5        (Average:  2.00 Max:   2 Sum:     10 Ratio:   0.00%)

Rules        : 6088807 
  Choice     : 43      
  Minimize   : 2       
Atoms        : 63835   
Bodies       : 4958858 
  Count      : 56      
Equivalences : 61827    (Atom=Atom: 8154 Body=Body: 16001 Other: 37672)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 4802112 Gammas: 0)
Variables    : 4834404  (Eliminated:    0 Frozen: 4806504)
Constraints  : 28030760 (Binary:  82.5% Ternary:   3.4% Other:  14.1%)

