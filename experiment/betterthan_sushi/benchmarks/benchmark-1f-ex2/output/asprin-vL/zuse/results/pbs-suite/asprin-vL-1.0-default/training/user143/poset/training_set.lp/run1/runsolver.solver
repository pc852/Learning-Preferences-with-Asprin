asprin_vL version 1.0
Reading from stdin
-:319:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:329:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:344:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:425:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:699:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:876:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1005:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1077:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1081:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1087:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1186:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1212:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1332:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1366:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1388:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:236:1-16: info: no atoms over signature occur in program:
  output/3

-:228:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:229:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:230:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(2,eq,13) output(2,eq,18) output(2,eq,14) output(2,eq,6) output(2,eq,1) output(2,eq,66) output(2,eq,29) output(2,eq,42) output(2,eq,0) output(13,eq,18) output(13,eq,14) output(13,eq,6) output(13,eq,1) output(13,eq,66) output(13,eq,29) output(13,eq,42) output(13,eq,0) output(18,eq,14) output(18,eq,6) output(18,eq,1) output(18,eq,66) output(18,eq,29) output(18,eq,42) output(18,eq,0) output(14,eq,6) output(14,eq,1) output(14,eq,66) output(14,eq,29) output(14,eq,42) output(14,eq,0) output(6,eq,1) output(6,eq,66) output(6,eq,29) output(6,eq,42) output(6,eq,0) output(1,eq,66) output(1,eq,29) output(1,eq,42) output(1,eq,0) output(66,eq,29) output(66,eq,42) output(66,eq,0) output(29,eq,42) output(29,eq,0) output(42,eq,0)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,poset) output(29,better,42) output(29,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,0) output(42,better,0) output(2,worse,29) output(13,worse,29) output(18,worse,29) output(14,worse,29) output(6,worse,29) output(1,worse,29) output(66,worse,29) output(2,worse,18) output(2,worse,42) output(13,worse,42) output(14,worse,42) output(1,worse,42) output(66,worse,42) output(6,worse,42) output(13,worse,18) output(2,eq,13) output(2,eq,14) output(2,eq,6) output(2,eq,1) output(2,eq,66) output(2,eq,0) output(13,eq,14) output(13,eq,6) output(13,eq,1) output(13,eq,66) output(13,eq,0) output(18,eq,42) output(14,eq,6) output(14,eq,1) output(14,eq,66) output(14,eq,0) output(6,eq,1) output(6,eq,66) output(6,eq,0) output(1,eq,66) output(1,eq,0) output(66,eq,0)
Optimization: 37 1
Answer: 3
preference(1,(1,9),1,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(29,better,0) output(18,better,29) output(13,better,14) output(13,better,1) output(13,better,66) output(13,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,42) output(18,better,0) output(2,better,14) output(2,better,1) output(2,better,66) output(2,better,0) output(6,better,1) output(6,better,66) output(6,better,0) output(42,better,0) output(2,worse,29) output(13,worse,29) output(14,worse,29) output(6,worse,29) output(1,worse,29) output(66,worse,29) output(2,worse,18) output(2,worse,42) output(13,worse,42) output(14,worse,6) output(14,worse,42) output(1,worse,42) output(66,worse,42) output(6,worse,42) output(13,worse,18) output(2,eq,13) output(2,eq,6) output(13,eq,6) output(14,eq,1) output(14,eq,66) output(14,eq,0) output(1,eq,66) output(1,eq,0) output(66,eq,0) output(29,eq,42)
Optimization: 25 1
Answer: 4
preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasOiliness(1))),()) preference(1,poset) output(2,better,29) output(13,better,29) output(18,better,29) output(6,better,29) output(1,better,29) output(66,better,29) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,42) output(13,better,0) output(18,better,14) output(18,better,42) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,1) output(2,better,66) output(2,better,42) output(2,better,0) output(1,better,42) output(66,better,42) output(6,better,42) output(13,better,18) output(29,worse,0) output(18,worse,1) output(14,worse,1) output(6,worse,1) output(18,worse,66) output(6,worse,66) output(18,worse,0) output(14,worse,0) output(6,worse,0) output(42,worse,0) output(14,worse,6) output(14,worse,66) output(2,eq,13) output(18,eq,6) output(14,eq,29) output(14,eq,42) output(1,eq,66) output(1,eq,0) output(66,eq,0) output(29,eq,42)
Optimization: 20 1
Answer: 5
preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(2,better,29) output(13,better,29) output(18,better,29) output(6,better,29) output(1,better,29) output(66,better,29) output(13,better,14) output(13,better,6) output(13,better,66) output(13,better,42) output(13,better,0) output(18,better,14) output(18,better,42) output(2,better,13) output(2,better,18) output(2,better,14) output(2,better,6) output(2,better,66) output(2,better,42) output(2,better,0) output(1,better,66) output(1,better,42) output(1,better,0) output(66,better,42) output(6,better,42) output(13,better,18) output(29,worse,0) output(13,worse,1) output(18,worse,1) output(14,worse,1) output(6,worse,1) output(14,worse,0) output(42,worse,0) output(14,worse,6) output(14,worse,66) output(18,eq,6) output(14,eq,29) output(14,eq,42) output(66,eq,0) output(29,eq,42) output(2,unc,1) output(18,unc,66) output(18,unc,0) output(6,unc,66) output(6,unc,0)
Optimization: 19 2
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(3))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(2))),()) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasPrice(3))),()) preference(1,(1,13),1,for(atom(hasOftenSold(1))),()) preference(1,(1,14),1,for(atom(hasOiliness(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasPrice(3))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(2))),()) preference(1,(1,7),2,for(atom(hasOftenSold(3))),()) preference(1,(1,8),2,for(atom(hasOiliness(2))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(1))),()) preference(1,(1,13),2,for(atom(hasPrice(1))),()) preference(1,(1,14),2,for(atom(hasOftenSold(3))),()) preference(1,poset) output(2,better,29) output(13,better,29) output(18,better,29) output(6,better,29) output(13,better,14) output(13,better,6) output(13,better,66) output(13,better,42) output(13,better,0) output(18,better,14) output(18,better,6) output(18,better,66) output(18,better,42) output(18,better,0) output(2,better,14) output(2,better,66) output(2,better,42) output(2,better,0) output(1,better,66) output(1,better,42) output(1,better,0) output(14,better,42) output(14,better,0) output(66,better,42) output(6,better,66) output(6,better,0) output(6,better,42) output(13,better,18) output(14,better,66) output(2,worse,13) output(2,worse,18) output(66,worse,0) output(42,worse,0) output(2,worse,6) output(14,worse,6) output(2,unc,1) output(13,unc,1) output(18,unc,1) output(14,unc,1) output(14,unc,29) output(6,unc,1) output(1,unc,29) output(66,unc,29) output(29,unc,42) output(29,unc,0)
Optimization: 16 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(1))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(3))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(2))),()) preference(1,(1,8),1,for(atom(hasOiliness(0))),()) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasPrice(3))),()) preference(1,(1,13),1,for(atom(hasOftenSold(1))),()) preference(1,(1,14),1,for(atom(hasOiliness(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(hasOftenSold(1))),()) preference(1,(1,4),2,for(atom(hasPrice(3))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,7),2,for(atom(hasOftenSold(3))),()) preference(1,(1,8),2,for(atom(hasOiliness(2))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(1))),()) preference(1,(1,13),2,for(atom(hasPrice(1))),()) preference(1,(1,14),2,for(atom(hasOftenSold(3))),()) preference(1,poset) output(2,better,29) output(13,better,29) output(18,better,29) output(6,better,29) output(13,better,14) output(13,better,6) output(13,better,1) output(13,better,66) output(13,better,42) output(13,better,0) output(18,better,14) output(18,better,6) output(18,better,1) output(18,better,66) output(18,better,42) output(18,better,0) output(2,better,14) output(2,better,1) output(2,better,66) output(2,better,42) output(2,better,0) output(1,better,66) output(1,better,42) output(1,better,0) output(14,better,42) output(14,better,0) output(66,better,42) output(6,better,1) output(6,better,66) output(6,better,0) output(6,better,42) output(13,better,18) output(14,better,66) output(2,worse,13) output(2,worse,18) output(66,worse,0) output(42,worse,0) output(2,worse,6) output(14,worse,6) output(14,unc,1) output(14,unc,29) output(1,unc,29) output(66,unc,29) output(29,unc,42) output(29,unc,0)
Optimization: 12 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.238 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 12 14
Calls        : 1
Time         : 298.531s (Solving: 265.57s 1st Model: 11.63s Unsat: 0.00s)
CPU Time     : 1079.212s
Threads      : 4        (Winner: 4)

Choices      : 1610909  (Domain: 190)
Conflicts    : 30218    (Analyzed: 30218)
Restarts     : 27       (Average: 1119.19 Last: 5234)
Model-Level  : 330.9   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 5509820  (Deleted: 5403355)
  Binary     : 44       (Ratio:   0.00%)
  Ternary    : 7028     (Ratio:   0.13%)
  Conflict   : 30218    (Average Length: 2324.0 Ratio:   0.55%) 
  Loop       : 5473704  (Average Length:  776.9 Ratio:  99.34%) 
  Other      : 5898     (Average Length:    3.1 Ratio:   0.11%) 
  Distributed: 1969     (Ratio:   0.04% Average LBD: 2.88) 
  Integrated : 5907     (Ratio: 300.00% Unit: 13 Average Jumps: 5166.23)
Backjumps    : 30218    (Average: 37.96 Max: 255573 Sum: 1147041)
  Executed   : 30214    (Average: 37.96 Max: 255573 Sum: 1146990 Ratio: 100.00%)
  Bounded    : 4        (Average: 12.75 Max:  47 Sum:     51 Ratio:   0.00%)

Rules        : 6089176 
  Choice     : 43      
  Minimize   : 2       
Atoms        : 64088   
Bodies       : 4959127 
  Count      : 56      
Equivalences : 62450    (Atom=Atom: 8274 Body=Body: 16138 Other: 38038)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 4802112 Gammas: 0)
Variables    : 4834538  (Eliminated:    0 Frozen: 4806628)
Constraints  : 28031270 (Binary:  82.5% Ternary:   3.4% Other:  14.1%)

