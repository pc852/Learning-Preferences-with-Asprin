asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,70) output(41,eq,6) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,70) output(0,eq,6) output(0,eq,7) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,70) output(10,eq,6) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,70) output(8,eq,6) output(8,eq,7) output(8,eq,17) output(13,eq,20) output(13,eq,70) output(13,eq,6) output(13,eq,7) output(13,eq,17) output(20,eq,70) output(20,eq,6) output(20,eq,7) output(20,eq,17) output(70,eq,6) output(70,eq,7) output(70,eq,17) output(6,eq,7) output(6,eq,17) output(7,eq,17)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(70,better,6) output(0,better,6) output(8,better,6) output(10,better,6) output(13,better,6) output(20,better,6) output(41,better,6) output(6,worse,7) output(6,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,70) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,70) output(0,eq,7) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,70) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,70) output(8,eq,7) output(8,eq,17) output(13,eq,20) output(13,eq,70) output(13,eq,7) output(13,eq,17) output(20,eq,70) output(20,eq,7) output(20,eq,17) output(70,eq,7) output(70,eq,17) output(7,eq,17)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(0,better,8) output(0,better,70) output(10,better,8) output(10,better,70) output(13,better,70) output(20,better,70) output(41,better,8) output(41,better,70) output(70,worse,6) output(70,worse,7) output(70,worse,17) output(8,worse,13) output(8,worse,20) output(8,worse,6) output(8,worse,7) output(8,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,13) output(41,eq,20) output(41,eq,6) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,13) output(0,eq,20) output(0,eq,6) output(0,eq,7) output(0,eq,17) output(10,eq,13) output(10,eq,20) output(10,eq,6) output(10,eq,7) output(10,eq,17) output(8,eq,70) output(13,eq,20) output(13,eq,6) output(13,eq,7) output(13,eq,17) output(20,eq,6) output(20,eq,7) output(20,eq,17) output(6,eq,7) output(6,eq,17) output(7,eq,17)
Optimization: 37 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(70,better,6) output(0,better,8) output(0,better,6) output(10,better,8) output(10,better,6) output(13,better,6) output(20,better,6) output(41,better,8) output(41,better,6) output(6,worse,7) output(6,worse,17) output(8,worse,13) output(8,worse,20) output(8,worse,70) output(8,worse,7) output(8,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,13) output(41,eq,20) output(41,eq,70) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,13) output(0,eq,20) output(0,eq,70) output(0,eq,7) output(0,eq,17) output(10,eq,13) output(10,eq,20) output(10,eq,70) output(10,eq,7) output(10,eq,17) output(8,eq,6) output(13,eq,20) output(13,eq,70) output(13,eq,7) output(13,eq,17) output(20,eq,70) output(20,eq,7) output(20,eq,17) output(70,eq,7) output(70,eq,17) output(7,eq,17)
Optimization: 36 2
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(0,better,70) output(0,better,6) output(8,better,70) output(8,better,6) output(10,better,70) output(10,better,6) output(13,better,70) output(13,better,6) output(20,better,70) output(20,better,6) output(41,better,70) output(41,better,6) output(70,worse,7) output(70,worse,17) output(6,worse,7) output(6,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,7) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,7) output(8,eq,17) output(13,eq,20) output(13,eq,7) output(13,eq,17) output(20,eq,7) output(20,eq,17) output(70,eq,6) output(7,eq,17)
Optimization: 33 2
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(0,better,70) output(0,better,7) output(6,better,7) output(8,better,70) output(8,better,7) output(10,better,70) output(10,better,7) output(13,better,70) output(13,better,7) output(20,better,70) output(20,better,7) output(41,better,70) output(41,better,7) output(70,worse,6) output(70,worse,17) output(7,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,6) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,6) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,6) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,6) output(8,eq,17) output(13,eq,20) output(13,eq,6) output(13,eq,17) output(20,eq,6) output(20,eq,17) output(70,eq,7) output(6,eq,17)
Optimization: 32 2
Answer: 7
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,6) output(0,better,7) output(8,better,6) output(8,better,7) output(10,better,6) output(10,better,7) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,6) output(41,better,7) output(6,worse,17) output(7,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,70) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,70) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,70) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,70) output(8,eq,17) output(13,eq,20) output(13,eq,70) output(13,eq,17) output(20,eq,70) output(20,eq,17) output(70,eq,17) output(6,eq,7)
Optimization: 31 2
Answer: 8
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(0,better,20) output(0,better,70) output(0,better,6) output(8,better,20) output(8,better,70) output(8,better,6) output(10,better,20) output(10,better,70) output(10,better,6) output(13,better,20) output(13,better,70) output(13,better,6) output(41,better,20) output(41,better,70) output(41,better,6) output(70,worse,7) output(70,worse,17) output(6,worse,7) output(6,worse,17) output(20,worse,7) output(20,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,7) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,7) output(8,eq,17) output(13,eq,7) output(13,eq,17) output(20,eq,70) output(20,eq,6) output(70,eq,6) output(7,eq,17)
Optimization: 30 3
Answer: 9
preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasOiliness(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,8) output(0,better,20) output(0,better,6) output(0,better,7) output(10,better,8) output(10,better,20) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,6) output(13,better,7) output(41,better,8) output(41,better,20) output(41,better,6) output(41,better,7) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,70) output(8,worse,17) output(20,worse,70) output(20,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,13) output(41,eq,70) output(41,eq,17) output(0,eq,10) output(0,eq,13) output(0,eq,70) output(0,eq,17) output(10,eq,13) output(10,eq,70) output(10,eq,17) output(8,eq,20) output(8,eq,6) output(8,eq,7) output(13,eq,70) output(13,eq,17) output(20,eq,6) output(20,eq,7) output(70,eq,17) output(6,eq,7)
Optimization: 28 4
Answer: 10
preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,13) output(0,better,20) output(0,better,6) output(0,better,7) output(8,better,13) output(8,better,20) output(8,better,6) output(8,better,7) output(10,better,13) output(10,better,20) output(10,better,6) output(10,better,7) output(41,better,13) output(41,better,20) output(41,better,6) output(41,better,7) output(6,worse,17) output(7,worse,17) output(13,worse,70) output(13,worse,17) output(20,worse,70) output(20,worse,17) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,70) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,70) output(0,eq,17) output(10,eq,8) output(10,eq,70) output(10,eq,17) output(8,eq,70) output(8,eq,17) output(13,eq,20) output(13,eq,6) output(13,eq,7) output(20,eq,6) output(20,eq,7) output(70,eq,17) output(6,eq,7)
Optimization: 27 4
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,13) output(8,better,70) output(8,better,6) output(8,better,7) output(13,better,70) output(13,better,6) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,10) output(41,better,13) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,7) output(70,worse,17) output(6,worse,7) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(10,worse,13) output(10,worse,20) output(10,worse,7) output(10,worse,17) output(13,worse,20) output(13,worse,17) output(41,eq,0) output(41,eq,8) output(41,eq,20) output(41,eq,17) output(0,eq,8) output(0,eq,20) output(0,eq,17) output(10,eq,70) output(10,eq,6) output(8,eq,20) output(8,eq,17) output(13,eq,7) output(20,eq,17) output(70,eq,6)
Optimization: 26 5
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasOiliness(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,13) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,70) output(13,better,70) output(13,better,6) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,10) output(41,better,13) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,6) output(70,worse,7) output(70,worse,17) output(6,worse,7) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(10,worse,13) output(10,worse,20) output(10,worse,7) output(10,worse,17) output(13,worse,20) output(13,worse,17) output(41,eq,0) output(41,eq,8) output(41,eq,20) output(41,eq,17) output(0,eq,8) output(0,eq,20) output(0,eq,17) output(10,eq,6) output(8,eq,20) output(8,eq,17) output(13,eq,7) output(20,eq,17)
Optimization: 25 6
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),1) preference(1,less(weight)) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,6) output(70,worse,7) output(70,worse,17) output(0,worse,10) output(6,worse,17) output(7,worse,17) output(41,worse,10) output(41,eq,0) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,17) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,17) output(13,eq,20) output(13,eq,17) output(20,eq,17) output(6,eq,7)
Optimization: 23 8
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(0))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasOftenSold(3))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,20) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,20) output(41,better,6) output(41,better,7) output(70,worse,17) output(0,worse,10) output(0,worse,13) output(0,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,17) output(10,worse,13) output(10,worse,17) output(13,worse,17) output(20,worse,70) output(20,worse,17) output(41,worse,10) output(41,worse,13) output(41,worse,17) output(41,eq,0) output(41,eq,8) output(41,eq,70) output(0,eq,8) output(0,eq,70) output(8,eq,70)
Optimization: 22 11
Answer: 15
preference(1,(1,4),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,14),1,for(atom(hasOftenSold(3))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,17) output(0,worse,10) output(0,worse,13) output(0,worse,20) output(0,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,20) output(8,worse,17) output(10,worse,13) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(41,worse,13) output(41,worse,17) output(0,eq,8) output(0,eq,70) output(10,eq,20) output(8,eq,70)
Optimization: 20 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,6),1,for(atom(hasOftenSold(1))),10) preference(1,(1,7),1,for(atom(hasPrice(2))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasOftenSold(2))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,14),1,for(atom(hasOftenSold(3))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(0,worse,20) output(0,worse,70) output(0,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(10,worse,8) output(10,worse,13) output(10,worse,20) output(10,worse,17) output(41,worse,13) output(10,eq,70) output(8,eq,20) output(8,eq,17) output(20,eq,17)
Optimization: 19 13
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,6),1,for(atom(hasOftenSold(1))),10) preference(1,(1,7),1,for(atom(hasPrice(2))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,11),1,for(atom(hasOftenSold(2))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,14),1,for(atom(hasOftenSold(3))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,20) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(0,worse,70) output(0,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(10,worse,8) output(10,worse,13) output(10,worse,17) output(20,worse,70) output(20,worse,6) output(20,worse,17) output(41,worse,13) output(10,eq,70) output(8,eq,17)
Optimization: 18 13
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasOftenSold(1))),10) preference(1,(1,7),1,for(atom(hasPrice(2))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,11),1,for(atom(hasOftenSold(2))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,14),1,for(atom(hasOftenSold(3))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,20) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(0,worse,70) output(0,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(10,worse,8) output(10,worse,13) output(10,worse,17) output(20,worse,70) output(20,worse,17) output(41,worse,13) output(10,eq,70) output(8,eq,17)
Optimization: 17 13
Answer: 19
preference(1,(1,4),1,for(neg(atom(hasOftenSold(2)))),4) preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,8),1,for(neg(atom(hasOiliness(1)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,9),1,for(atom(hasOftenSold(1))),7) preference(1,(1,10),1,for(atom(hasOftenSold(3))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasOftenSold(2))),9) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(70,better,17) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(0,better,17) output(6,better,7) output(6,better,17) output(7,better,17) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 20
preference(1,(1,5),1,for(neg(atom(hasPrice(3)))),5) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(6)))),5) preference(1,(1,8),1,for(neg(atom(hasOftenSold(2)))),4) preference(1,(1,14),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),3) preference(1,(1,6),1,for(atom(hasOiliness(2))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),2) preference(1,(1,11),1,for(atom(hasOftenSold(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(70,better,17) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(0,better,17) output(6,better,7) output(6,better,17) output(7,better,17) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.120 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 597.227s (Solving: 585.42s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2346.928s
Threads      : 4        (Winner: 4)

Choices      : 10926163 (Domain: 1744)
Conflicts    : 2049003  (Analyzed: 2049001)
Restarts     : 2191     (Average: 935.19 Last: 81291)
Model-Level  : 950.8   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2058612  (Deleted: 1905093)
  Binary     : 1260     (Ratio:   0.06%)
  Ternary    : 257      (Ratio:   0.01%)
  Conflict   : 2049001  (Average Length: 1791.6 Ratio:  99.53%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 9611     (Average Length:  245.7 Ratio:   0.47%) 
  Distributed: 3206     (Ratio:   0.16% Average LBD: 3.43) 
  Integrated : 9618     (Ratio: 300.00% Unit: 20 Average Jumps: 14.85)
Backjumps    : 2049001  (Average:  3.66 Max: 3752 Sum: 7504656)
  Executed   : 2049000  (Average:  3.66 Max: 3752 Sum: 7504633 Ratio: 100.00%)
  Bounded    : 1        (Average: 23.00 Max:  23 Sum:     23 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  4 :: not atom(hasOftenSold(2))  ; 
  7 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  6 :: not atom(hasStyle(1))  ; 
  1 :: not atom(hasOiliness(1))  ; 
  7 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: not atom(hasPrice(3))  ; 
  1 :: atom(hasOiliness(2)) ; 
  5 :: not atom(hasMinorGrp(6))  ; 
  4 :: not atom(hasOftenSold(2))  ; 
  2 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  6 :: not atom(hasStyle(1))  
}.
