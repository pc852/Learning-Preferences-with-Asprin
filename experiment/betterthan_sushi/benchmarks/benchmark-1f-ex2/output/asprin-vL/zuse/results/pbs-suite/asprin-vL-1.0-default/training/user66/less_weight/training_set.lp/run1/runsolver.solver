asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,29) output(1,eq,17) output(1,eq,16) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,29) output(23,eq,17) output(23,eq,16) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,29) output(34,eq,17) output(34,eq,16) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,29) output(5,eq,17) output(5,eq,16) output(18,eq,24) output(18,eq,37) output(18,eq,29) output(18,eq,17) output(18,eq,16) output(24,eq,37) output(24,eq,29) output(24,eq,17) output(24,eq,16) output(37,eq,29) output(37,eq,17) output(37,eq,16) output(29,eq,17) output(29,eq,16) output(17,eq,16)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(29,better,17) output(1,better,17) output(5,better,17) output(18,better,17) output(23,better,17) output(24,better,17) output(34,better,17) output(37,better,17) output(17,worse,16) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,29) output(1,eq,16) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,29) output(23,eq,16) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,29) output(34,eq,16) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,29) output(5,eq,16) output(18,eq,24) output(18,eq,37) output(18,eq,29) output(18,eq,16) output(24,eq,37) output(24,eq,29) output(24,eq,16) output(37,eq,29) output(37,eq,16) output(29,eq,16)
Optimization: 37 1
Answer: 3
preference(1,(1,13),1,for(atom(hasPrice(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(29,better,17) output(1,better,34) output(1,better,17) output(5,better,17) output(18,better,17) output(23,better,34) output(23,better,17) output(24,better,17) output(37,better,17) output(17,worse,16) output(34,worse,5) output(34,worse,18) output(34,worse,24) output(34,worse,37) output(34,worse,29) output(34,worse,16) output(1,eq,23) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,29) output(1,eq,16) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,29) output(23,eq,16) output(34,eq,17) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,29) output(5,eq,16) output(18,eq,24) output(18,eq,37) output(18,eq,29) output(18,eq,16) output(24,eq,37) output(24,eq,29) output(24,eq,16) output(37,eq,29) output(37,eq,16) output(29,eq,16)
Optimization: 36 2
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,29) output(1,better,16) output(5,better,29) output(5,better,16) output(17,better,16) output(18,better,29) output(18,better,16) output(23,better,29) output(23,better,16) output(24,better,29) output(24,better,16) output(34,better,29) output(34,better,16) output(37,better,29) output(37,better,16) output(29,worse,17) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,17) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,17) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,17) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,17) output(18,eq,24) output(18,eq,37) output(18,eq,17) output(24,eq,37) output(24,eq,17) output(37,eq,17) output(29,eq,16)
Optimization: 30 2
Answer: 5
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,17) output(1,better,16) output(5,better,17) output(5,better,16) output(18,better,17) output(18,better,16) output(23,better,17) output(23,better,16) output(24,better,17) output(24,better,16) output(34,better,17) output(34,better,16) output(37,better,17) output(37,better,16) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,29) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,29) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,29) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,29) output(18,eq,24) output(18,eq,37) output(18,eq,29) output(24,eq,37) output(24,eq,29) output(37,eq,29) output(17,eq,16)
Optimization: 29 2
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,37) output(1,better,29) output(1,better,16) output(5,better,37) output(5,better,29) output(5,better,16) output(17,better,16) output(18,better,37) output(18,better,29) output(18,better,16) output(23,better,37) output(23,better,29) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,16) output(34,better,37) output(34,better,29) output(34,better,16) output(29,worse,17) output(37,worse,17) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,17) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,17) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,17) output(5,eq,18) output(5,eq,24) output(5,eq,17) output(18,eq,24) output(18,eq,17) output(24,eq,17) output(37,eq,29) output(37,eq,16) output(29,eq,16)
Optimization: 26 4
Answer: 7
preference(1,(1,11),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,37) output(1,better,17) output(1,better,16) output(5,better,37) output(5,better,17) output(5,better,16) output(18,better,37) output(18,better,17) output(18,better,16) output(23,better,37) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,17) output(24,better,16) output(34,better,37) output(34,better,17) output(34,better,16) output(37,worse,29) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,29) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,29) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,29) output(5,eq,18) output(5,eq,24) output(5,eq,29) output(18,eq,24) output(18,eq,29) output(24,eq,29) output(37,eq,17) output(37,eq,16) output(17,eq,16)
Optimization: 25 3
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,29) output(5,better,17) output(5,better,16) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(18,eq,24) output(18,eq,37) output(24,eq,37) output(29,eq,17) output(29,eq,16) output(17,eq,16)
Optimization: 24 4
Answer: 9
preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,24) output(1,better,37) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,37) output(5,better,17) output(5,better,16) output(18,better,24) output(18,better,37) output(18,better,17) output(18,better,16) output(23,better,24) output(23,better,37) output(23,better,17) output(23,better,16) output(34,better,24) output(34,better,37) output(34,better,17) output(34,better,16) output(24,worse,29) output(37,worse,29) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,29) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,29) output(34,eq,5) output(34,eq,18) output(34,eq,29) output(5,eq,18) output(5,eq,29) output(18,eq,29) output(24,eq,37) output(24,eq,17) output(24,eq,16) output(37,eq,17) output(37,eq,16) output(17,eq,16)
Optimization: 23 4
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(24,better,37) output(24,better,29) output(24,better,17) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(37,better,29) output(29,worse,17) output(29,worse,16) output(17,worse,16) output(24,worse,16) output(37,worse,16) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,16) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,16) output(34,eq,5) output(34,eq,18) output(34,eq,16) output(5,eq,18) output(5,eq,16) output(18,eq,16) output(37,eq,17)
Optimization: 21 6
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasPrice(3))),8) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(1,better,34) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(23,better,34) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(24,better,37) output(24,better,29) output(24,better,17) output(34,better,37) output(34,better,29) output(34,better,17) output(37,better,29) output(29,worse,17) output(29,worse,16) output(17,worse,16) output(24,worse,16) output(34,worse,5) output(34,worse,18) output(34,worse,24) output(34,worse,16) output(37,worse,16) output(1,eq,23) output(1,eq,5) output(1,eq,18) output(1,eq,16) output(23,eq,5) output(23,eq,18) output(23,eq,16) output(5,eq,18) output(5,eq,16) output(18,eq,16) output(37,eq,17)
Optimization: 20 7
Answer: 12
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,6),1,for(atom(hasStyle(0))),1) preference(1,(1,7),1,for(atom(hasOiliness(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),9) preference(1,(1,11),1,for(atom(hasPrice(0))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(1,better,34) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(23,better,34) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(24,better,37) output(24,better,29) output(24,better,17) output(34,better,37) output(34,better,29) output(34,better,17) output(37,better,29) output(37,better,17) output(29,worse,17) output(29,worse,16) output(1,worse,23) output(1,worse,5) output(1,worse,18) output(1,worse,16) output(5,worse,16) output(17,worse,16) output(18,worse,16) output(23,worse,16) output(24,worse,16) output(34,worse,5) output(34,worse,18) output(34,worse,16) output(37,worse,16) output(23,eq,5) output(23,eq,18) output(34,eq,24) output(5,eq,18)
Optimization: 19 13
Answer: 13
preference(1,(1,6),1,for(neg(atom(hasStyle(1)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,5),1,for(atom(hasPrice(1))),9) preference(1,(1,7),1,for(atom(hasOiliness(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasPrice(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasPrice(0))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(1,better,34) output(1,better,37) output(1,better,29) output(1,better,17) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(34,better,37) output(34,better,29) output(34,better,17) output(37,better,29) output(37,better,17) output(29,worse,16) output(1,worse,23) output(1,worse,5) output(1,worse,18) output(17,worse,16) output(34,worse,5) output(34,worse,18) output(34,worse,24) output(34,worse,16) output(37,worse,16) output(1,eq,24) output(1,eq,16) output(23,eq,5) output(23,eq,18) output(5,eq,18) output(24,eq,16) output(29,eq,17)
Optimization: 17 14
Answer: 14
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,3),1,for(atom(hasPrice(3))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),9) preference(1,(1,7),1,for(atom(hasOiliness(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasPrice(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasPrice(0))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),2) preference(1,(1,13),1,for(atom(hasOftenSold(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(1,better,34) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(34,better,37) output(34,better,29) output(34,better,17) output(37,better,29) output(37,better,17) output(29,worse,16) output(1,worse,23) output(1,worse,5) output(1,worse,18) output(17,worse,16) output(24,worse,16) output(34,worse,5) output(34,worse,18) output(34,worse,16) output(37,worse,16) output(1,eq,16) output(23,eq,5) output(23,eq,18) output(34,eq,24) output(5,eq,18) output(29,eq,17)
Optimization: 16 14
Answer: 15
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),9) preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasOftenSold(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,14),1,for(atom(hasOiliness(2))),1) preference(1,less(weight)) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(5,better,18) output(5,better,37) output(5,better,29) output(5,better,17) output(18,better,37) output(18,better,29) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(24,better,37) output(24,better,29) output(24,better,17) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(37,better,29) output(29,worse,17) output(29,worse,16) output(1,worse,16) output(5,worse,16) output(17,worse,16) output(18,worse,24) output(18,worse,16) output(23,worse,16) output(24,worse,16) output(34,worse,16) output(37,worse,17) output(37,worse,16) output(23,eq,34) output(5,eq,24) output(18,eq,17)
Optimization: 15 14
Answer: 16
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,1),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasStyle(0))),3) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,9),1,for(atom(hasPrice(3))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,11),1,for(atom(hasOiliness(2))),4) preference(1,(1,12),1,for(atom(hasOiliness(3))),8) preference(1,(1,13),1,for(atom(hasPrice(2))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),9) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 17
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,13),1,for(neg(atom(hasOftenSold(3)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasOiliness(3))),1) preference(1,(1,12),1,for(atom(hasOftenSold(2))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),3) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 13
Answer: 18
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),7) preference(1,(1,5),1,for(neg(atom(hasStyle(1)))),8) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasPrice(3))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasPrice(2))),5) preference(1,(1,8),1,for(atom(hasOiliness(3))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasOftenSold(2))),9) preference(1,(1,11),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 12
Answer: 19
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),7) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,4),1,for(atom(hasPrice(3))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasPrice(2))),5) preference(1,(1,8),1,for(atom(hasOiliness(3))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasOftenSold(2))),9) preference(1,(1,11),1,for(atom(hasOiliness(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.228 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 298.278s (Solving: 283.62s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 1148.287s
Threads      : 4        (Winner: 4)

Choices      : 5621535  (Domain: 719)
Conflicts    : 1041110  (Analyzed: 1041108)
Restarts     : 1167     (Average: 892.12 Last: 105793)
Model-Level  : 1394.4  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1043580  (Deleted: 926317)
  Binary     : 344      (Ratio:   0.03%)
  Ternary    : 152      (Ratio:   0.01%)
  Conflict   : 1041108  (Average Length: 1800.6 Ratio:  99.76%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 2472     (Average Length:  179.0 Ratio:   0.24%) 
  Distributed: 824      (Ratio:   0.08% Average LBD: 3.27) 
  Integrated : 2472     (Ratio: 300.00% Unit: 7 Average Jumps: 2.57)
Backjumps    : 1041108  (Average:  3.17 Max: 2933 Sum: 3296976)
  Executed   : 1041107  (Average:  3.17 Max: 2933 Sum: 3296968 Ratio: 100.00%)
  Bounded    : 1        (Average:  8.00 Max:   8 Sum:      8 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(3)) ; 
  1 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasPrice(3)) ; 
  9 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  9 :: not atom(hasMajorGrp(0))  ; 
  9 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: not atom(hasMajorGrp(0))  ; 
  3 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasOiliness(3)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: not atom(hasMajorGrp(0))  ; 
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasPrice(3)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasOiliness(3)) ; 
  5 :: atom(hasPrice(2)) ; 
  9 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  1 :: atom(hasOiliness(3)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  4 :: not atom(hasOftenSold(3))  ; 
  3 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasPrice(0))  ; 
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  8 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(2)) ; 
  9 :: atom(hasOiliness(3)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasPrice(0))  ; 
  8 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(2)) ; 
  9 :: atom(hasOiliness(3)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: not atom(hasMinorGrp(0))  
}.
