asprin_vL version 1.0
Reading from stdin
-:319:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:329:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:344:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:425:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:699:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:876:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1005:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1077:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1081:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1081:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1087:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1186:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1212:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1332:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1366:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1388:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:236:1-16: info: no atoms over signature occur in program:
  output/3

-:228:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:229:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:230:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(25,eq,0) output(25,eq,6) output(25,eq,8) output(25,eq,5) output(25,eq,3) output(25,eq,19) output(25,eq,47) output(25,eq,81) output(25,eq,84) output(0,eq,6) output(0,eq,8) output(0,eq,5) output(0,eq,3) output(0,eq,19) output(0,eq,47) output(0,eq,81) output(0,eq,84) output(6,eq,8) output(6,eq,5) output(6,eq,3) output(6,eq,19) output(6,eq,47) output(6,eq,81) output(6,eq,84) output(8,eq,5) output(8,eq,3) output(8,eq,19) output(8,eq,47) output(8,eq,81) output(8,eq,84) output(5,eq,3) output(5,eq,19) output(5,eq,47) output(5,eq,81) output(5,eq,84) output(3,eq,19) output(3,eq,47) output(3,eq,81) output(3,eq,84) output(19,eq,47) output(19,eq,81) output(19,eq,84) output(47,eq,81) output(47,eq,84) output(81,eq,84)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasOftenSold(3))),()) preference(1,(1,2),1,for(atom(hasPrice(3))),()) preference(1,(1,3),1,for(atom(hasOiliness(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasPrice(3))),()) preference(1,(1,6),1,for(atom(hasPrice(2))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,8),1,for(atom(hasOiliness(2))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),()) preference(1,(1,10),1,for(atom(hasOftenSold(1))),()) preference(1,(1,11),1,for(atom(hasOiliness(0))),()) preference(1,(1,12),1,for(atom(hasOftenSold(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(1))),()) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(6))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,4),2,for(atom(hasOftenSold(2))),()) preference(1,(1,5),2,for(atom(hasOftenSold(0))),()) preference(1,(1,6),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,7),2,for(atom(hasStyle(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(hasStyle(0))),()) preference(1,(1,12),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,13),2,for(atom(hasMinorGrp(6))),()) preference(1,(1,14),2,for(atom(hasStyle(1))),()) preference(1,poset) output(0,better,5) output(6,better,5) output(5,worse,3) output(25,unc,0) output(25,unc,6) output(25,unc,8) output(25,unc,5) output(25,unc,3) output(25,unc,19) output(25,unc,47) output(25,unc,81) output(25,unc,84) output(0,unc,6) output(0,unc,8) output(0,unc,3) output(0,unc,19) output(0,unc,47) output(0,unc,81) output(0,unc,84) output(6,unc,8) output(6,unc,3) output(6,unc,19) output(6,unc,47) output(6,unc,81) output(6,unc,84) output(8,unc,5) output(8,unc,3) output(8,unc,19) output(8,unc,47) output(8,unc,81) output(8,unc,84) output(5,unc,19) output(5,unc,47) output(5,unc,81) output(5,unc,84) output(3,unc,19) output(3,unc,47) output(3,unc,81) output(3,unc,84) output(19,unc,47) output(19,unc,81) output(19,unc,84) output(47,unc,81) output(47,unc,84) output(81,unc,84)
Optimization: 43 14
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(3))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(2))),()) preference(1,(1,14),1,for(atom(hasOftenSold(3))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(3))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasOftenSold(2))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(3))),()) preference(1,(1,14),2,for(atom(hasMajorGrp(0))),()) preference(1,poset) output(8,better,3) output(6,better,5) output(6,better,47) output(25,worse,84) output(5,worse,84) output(47,worse,84) output(25,worse,8) output(25,worse,19) output(0,worse,8) output(0,worse,19) output(3,worse,19) output(25,worse,81) output(5,worse,81) output(47,worse,81) output(25,worse,6) output(8,worse,19) output(0,eq,3) output(25,unc,0) output(25,unc,5) output(25,unc,3) output(25,unc,47) output(0,unc,6) output(0,unc,5) output(0,unc,47) output(0,unc,81) output(0,unc,84) output(6,unc,8) output(6,unc,3) output(6,unc,19) output(6,unc,81) output(6,unc,84) output(8,unc,5) output(8,unc,47) output(8,unc,81) output(8,unc,84) output(5,unc,3) output(5,unc,19) output(5,unc,47) output(3,unc,47) output(3,unc,81) output(3,unc,84) output(19,unc,47) output(19,unc,81) output(19,unc,84) output(81,unc,84)
Optimization: 42 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(3))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(2))),()) preference(1,(1,14),1,for(atom(hasOftenSold(3))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(3))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasOftenSold(0))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(3))),()) preference(1,(1,14),2,for(atom(hasMajorGrp(0))),()) preference(1,poset) output(8,better,3) output(8,better,47) output(19,better,47) output(3,better,47) output(6,better,5) output(6,better,47) output(0,better,47) output(25,worse,84) output(5,worse,84) output(47,worse,84) output(25,worse,8) output(25,worse,19) output(0,worse,8) output(0,worse,19) output(3,worse,19) output(25,worse,81) output(5,worse,81) output(47,worse,81) output(25,worse,6) output(8,worse,19) output(0,eq,3) output(25,unc,0) output(25,unc,5) output(25,unc,3) output(25,unc,47) output(0,unc,6) output(0,unc,5) output(0,unc,81) output(0,unc,84) output(6,unc,8) output(6,unc,3) output(6,unc,19) output(6,unc,81) output(6,unc,84) output(8,unc,5) output(8,unc,81) output(8,unc,84) output(5,unc,3) output(5,unc,19) output(5,unc,47) output(3,unc,81) output(3,unc,84) output(19,unc,81) output(19,unc,84) output(81,unc,84)
Optimization: 38 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(3))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(2))),()) preference(1,(1,14),1,for(atom(hasOftenSold(3))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasOiliness(3))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(3))),()) preference(1,(1,14),2,for(atom(hasMajorGrp(0))),()) preference(1,poset) output(0,better,84) output(8,better,84) output(3,better,84) output(19,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(19,better,47) output(19,better,81) output(3,better,47) output(3,better,81) output(0,better,6) output(0,better,5) output(0,better,81) output(6,better,5) output(6,better,47) output(0,better,47) output(25,worse,84) output(5,worse,84) output(47,worse,84) output(25,worse,8) output(25,worse,19) output(0,worse,8) output(0,worse,19) output(6,worse,8) output(6,worse,19) output(5,worse,19) output(3,worse,19) output(25,worse,81) output(5,worse,81) output(47,worse,81) output(25,worse,3) output(6,worse,3) output(25,worse,0) output(25,worse,6) output(5,worse,3) output(8,worse,19) output(0,eq,3) output(25,unc,5) output(25,unc,47) output(6,unc,81) output(6,unc,84) output(5,unc,47) output(81,unc,84)
Optimization: 27 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(3))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(2))),()) preference(1,(1,14),1,for(atom(hasOftenSold(3))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(0))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(1))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(3))),()) preference(1,(1,14),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(0,better,84) output(6,better,84) output(8,better,84) output(3,better,84) output(19,better,84) output(81,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(19,better,47) output(19,better,81) output(25,better,47) output(5,better,47) output(3,better,47) output(3,better,81) output(0,better,6) output(0,better,5) output(0,better,81) output(6,better,5) output(6,better,47) output(6,better,81) output(0,better,47) output(25,worse,84) output(5,worse,84) output(47,worse,84) output(25,worse,8) output(25,worse,19) output(0,worse,8) output(0,worse,19) output(6,worse,8) output(6,worse,19) output(5,worse,19) output(3,worse,19) output(25,worse,81) output(5,worse,81) output(47,worse,81) output(25,worse,3) output(6,worse,3) output(25,worse,0) output(25,worse,6) output(5,worse,3) output(8,worse,19) output(0,eq,3) output(25,unc,5)
Optimization: 22 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasStyle(0))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasOftenSold(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasStyle(0))),()) preference(1,(1,7),1,for(atom(hasOftenSold(3))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasStyle(0))),()) preference(1,(1,11),1,for(atom(hasStyle(0))),()) preference(1,(1,12),1,for(atom(hasStyle(0))),()) preference(1,(1,13),1,for(atom(hasOftenSold(2))),()) preference(1,(1,14),1,for(atom(hasOftenSold(3))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,3),2,for(atom(hasStyle(0))),()) preference(1,(1,4),2,for(atom(hasOftenSold(3))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasOftenSold(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(0))),()) preference(1,(1,8),2,for(atom(hasOiliness(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasOftenSold(3))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasOftenSold(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(3))),()) preference(1,(1,14),2,for(atom(hasMinorGrp(6))),()) preference(1,poset) output(0,better,84) output(6,better,84) output(8,better,84) output(3,better,84) output(19,better,84) output(81,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(19,better,47) output(19,better,81) output(25,better,5) output(25,better,47) output(5,better,47) output(3,better,47) output(3,better,81) output(0,better,6) output(0,better,5) output(0,better,3) output(0,better,81) output(6,better,5) output(6,better,47) output(6,better,81) output(0,better,47) output(25,worse,84) output(5,worse,84) output(47,worse,84) output(25,worse,8) output(25,worse,19) output(0,worse,8) output(0,worse,19) output(6,worse,8) output(6,worse,19) output(5,worse,19) output(3,worse,19) output(25,worse,81) output(5,worse,81) output(47,worse,81) output(25,worse,3) output(6,worse,3) output(25,worse,0) output(25,worse,6) output(5,worse,3) output(8,worse,19)
Optimization: 20 14
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(3))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasStyle(0))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(2))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasOftenSold(2))),()) preference(1,(1,11),1,for(atom(hasOftenSold(2))),()) preference(1,(1,12),1,for(atom(hasOftenSold(3))),()) preference(1,(1,13),1,for(atom(hasOftenSold(2))),()) preference(1,(1,14),1,for(atom(hasStyle(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasStyle(1))),()) preference(1,(1,3),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasStyle(1))),()) preference(1,(1,7),2,for(atom(hasOiliness(1))),()) preference(1,(1,8),2,for(atom(hasStyle(0))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasStyle(1))),()) preference(1,(1,11),2,for(atom(hasOftenSold(1))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(3))),()) preference(1,(1,14),2,for(atom(hasStyle(1))),()) preference(1,poset) output(25,better,84) output(0,better,84) output(6,better,84) output(8,better,84) output(5,better,84) output(3,better,84) output(19,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(19,better,47) output(19,better,81) output(25,better,47) output(25,better,81) output(5,better,47) output(5,better,81) output(3,better,47) output(3,better,81) output(0,better,5) output(0,better,81) output(6,better,5) output(6,better,3) output(6,better,47) output(6,better,81) output(0,better,47) output(47,worse,84) output(25,worse,19) output(0,worse,8) output(0,worse,19) output(6,worse,8) output(6,worse,19) output(5,worse,19) output(3,worse,19) output(47,worse,81) output(0,worse,6) output(5,worse,3) output(8,worse,19) output(0,eq,3) output(81,eq,84) output(25,unc,0) output(25,unc,6) output(25,unc,8) output(25,unc,5) output(25,unc,3)
Optimization: 19 14
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(0))),()) preference(1,(1,2),1,for(atom(hasOftenSold(3))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasOftenSold(1))),()) preference(1,(1,8),1,for(atom(hasOftenSold(2))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(hasOftenSold(2))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),1,for(atom(hasOftenSold(3))),()) preference(1,(1,13),1,for(atom(hasOftenSold(3))),()) preference(1,(1,14),1,for(atom(hasStyle(0))),()) preference(1,(1,1),2,for(atom(hasOiliness(0))),()) preference(1,(1,2),2,for(atom(hasStyle(1))),()) preference(1,(1,3),2,for(atom(hasOiliness(1))),()) preference(1,(1,4),2,for(atom(hasStyle(0))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasStyle(1))),()) preference(1,(1,7),2,for(atom(hasOftenSold(2))),()) preference(1,(1,8),2,for(atom(hasStyle(0))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(hasStyle(1))),()) preference(1,(1,11),2,for(atom(hasOftenSold(2))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,(1,13),2,for(atom(hasOftenSold(2))),()) preference(1,(1,14),2,for(atom(hasStyle(1))),()) preference(1,poset) output(25,better,84) output(0,better,84) output(6,better,84) output(8,better,84) output(5,better,84) output(3,better,84) output(19,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(19,better,47) output(19,better,81) output(25,better,47) output(25,better,81) output(5,better,47) output(5,better,81) output(3,better,47) output(3,better,81) output(0,better,5) output(0,better,81) output(6,better,5) output(6,better,3) output(6,better,47) output(6,better,81) output(0,better,47) output(8,better,19) output(47,worse,84) output(0,worse,8) output(6,worse,8) output(47,worse,81) output(0,worse,6) output(5,worse,3) output(0,eq,3) output(81,eq,84) output(25,unc,0) output(25,unc,6) output(25,unc,8) output(25,unc,5) output(25,unc,3) output(25,unc,19) output(0,unc,19) output(6,unc,19) output(5,unc,19) output(3,unc,19)
Optimization: 18 14
Answer: 10
preference(1,(1,2),1,for(atom(hasPrice(0))),()) preference(1,(1,3),1,for(atom(hasOftenSold(1))),()) preference(1,(1,4),1,for(atom(hasStyle(1))),()) preference(1,(1,5),1,for(atom(hasOiliness(0))),()) preference(1,(1,7),1,for(atom(hasOiliness(0))),()) preference(1,(1,9),1,for(atom(hasOftenSold(2))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),()) preference(1,(1,12),1,for(atom(hasOftenSold(2))),()) preference(1,(1,13),1,for(atom(hasPrice(1))),()) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(8))),()) preference(1,(1,3),2,for(atom(hasOftenSold(2))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(11))),()) preference(1,(1,7),2,for(atom(hasStyle(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(7))),()) preference(1,(1,10),2,for(atom(hasOiliness(3))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,(1,13),2,for(atom(hasPrice(0))),()) preference(1,(1,14),2,for(atom(hasMinorGrp(6))),()) preference(1,poset) output(25,better,84) output(0,better,84) output(6,better,84) output(8,better,84) output(5,better,84) output(3,better,84) output(19,better,84) output(47,better,84) output(8,better,47) output(8,better,81) output(19,better,47) output(19,better,81) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(5,better,81) output(3,better,81) output(0,better,5) output(0,better,3) output(0,better,81) output(47,better,81) output(6,better,81) output(0,better,47) output(0,worse,19) output(6,worse,19) output(5,worse,19) output(3,worse,19) output(5,worse,3) output(8,worse,19) output(81,eq,84) output(0,unc,6) output(0,unc,8) output(6,unc,8) output(6,unc,5) output(6,unc,3) output(6,unc,47) output(8,unc,5) output(8,unc,3) output(5,unc,47) output(3,unc,47)
Optimization: 17 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.203 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 17 10
Calls        : 1
Time         : 298.395s (Solving: 264.71s 1st Model: 6.90s Unsat: 0.00s)
CPU Time     : 1087.247s
Threads      : 4        (Winner: 4)

Choices      : 4406615  (Domain: 200)
Conflicts    : 25831    (Analyzed: 25831)
Restarts     : 26       (Average: 993.50 Last: 273)
Model-Level  : 683.6   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 4482432  (Deleted: 4366992)
  Binary     : 392      (Ratio:   0.01%)
  Ternary    : 15872    (Ratio:   0.35%)
  Conflict   : 25831    (Average Length: 1729.1 Ratio:   0.58%) 
  Loop       : 4444118  (Average Length:  875.1 Ratio:  99.15%) 
  Other      : 12483    (Average Length:    3.0 Ratio:   0.28%) 
  Distributed: 4161     (Ratio:   0.09% Average LBD: 2.89) 
  Integrated : 12483    (Ratio: 300.00% Unit: 77 Average Jumps: 1905.86)
Backjumps    : 25831    (Average: 153.62 Max: 681847 Sum: 3968286)
  Executed   : 25827    (Average: 153.62 Max: 681847 Sum: 3968280 Ratio: 100.00%)
  Bounded    : 4        (Average:  1.50 Max:   2 Sum:      6 Ratio:   0.00%)

Rules        : 6088591 
  Choice     : 43      
  Minimize   : 2       
Atoms        : 63687   
Bodies       : 4958698 
  Count      : 56      
Equivalences : 61464    (Atom=Atom: 8087 Body=Body: 15922 Other: 37455)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 4802112 Gammas: 0)
Variables    : 4834323  (Eliminated:    0 Frozen: 4806429)
Constraints  : 28030442 (Binary:  82.5% Ternary:   3.4% Other:  14.1%)

