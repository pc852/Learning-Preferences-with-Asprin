asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,20) output(19,eq,0) output(19,eq,10) output(19,eq,13) output(19,eq,6) output(19,eq,51) output(16,eq,8) output(16,eq,69) output(16,eq,20) output(16,eq,0) output(16,eq,10) output(16,eq,13) output(16,eq,6) output(16,eq,51) output(8,eq,69) output(8,eq,20) output(8,eq,0) output(8,eq,10) output(8,eq,13) output(8,eq,6) output(8,eq,51) output(69,eq,20) output(69,eq,0) output(69,eq,10) output(69,eq,13) output(69,eq,6) output(69,eq,51) output(20,eq,0) output(20,eq,10) output(20,eq,13) output(20,eq,6) output(20,eq,51) output(0,eq,10) output(0,eq,13) output(0,eq,6) output(0,eq,51) output(10,eq,13) output(10,eq,6) output(10,eq,51) output(13,eq,6) output(13,eq,51) output(6,eq,51)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,10) output(8,better,51) output(13,better,51) output(16,better,10) output(16,better,51) output(19,better,10) output(19,better,51) output(20,better,10) output(20,better,51) output(69,better,10) output(69,better,51) output(10,worse,13) output(10,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,20) output(19,eq,0) output(19,eq,13) output(19,eq,6) output(16,eq,8) output(16,eq,69) output(16,eq,20) output(16,eq,0) output(16,eq,13) output(16,eq,6) output(8,eq,69) output(8,eq,20) output(8,eq,0) output(8,eq,13) output(8,eq,6) output(69,eq,20) output(69,eq,0) output(69,eq,13) output(69,eq,6) output(20,eq,0) output(20,eq,13) output(20,eq,6) output(0,eq,13) output(0,eq,6) output(10,eq,51) output(13,eq,6)
Optimization: 31 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,10) output(8,better,51) output(13,better,51) output(16,better,69) output(16,better,10) output(16,better,51) output(19,better,69) output(19,better,10) output(19,better,51) output(20,better,10) output(20,better,51) output(10,worse,13) output(10,worse,6) output(69,worse,20) output(69,worse,0) output(69,worse,13) output(69,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,20) output(19,eq,0) output(19,eq,13) output(19,eq,6) output(16,eq,8) output(16,eq,20) output(16,eq,0) output(16,eq,13) output(16,eq,6) output(8,eq,20) output(8,eq,0) output(8,eq,13) output(8,eq,6) output(69,eq,10) output(69,eq,51) output(20,eq,0) output(20,eq,13) output(20,eq,6) output(0,eq,13) output(0,eq,6) output(10,eq,51) output(13,eq,6)
Optimization: 30 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,51) output(6,better,51) output(8,better,20) output(8,better,10) output(8,better,51) output(13,better,51) output(16,better,20) output(16,better,10) output(16,better,51) output(19,better,20) output(19,better,10) output(19,better,51) output(69,better,20) output(69,better,10) output(69,better,51) output(10,worse,13) output(10,worse,6) output(20,worse,0) output(20,worse,13) output(20,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,0) output(19,eq,13) output(19,eq,6) output(16,eq,8) output(16,eq,69) output(16,eq,0) output(16,eq,13) output(16,eq,6) output(8,eq,69) output(8,eq,0) output(8,eq,13) output(8,eq,6) output(69,eq,0) output(69,eq,13) output(69,eq,6) output(20,eq,10) output(20,eq,51) output(0,eq,13) output(0,eq,6) output(10,eq,51) output(13,eq,6)
Optimization: 29 2
Answer: 5
preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,51) output(6,better,51) output(8,better,10) output(8,better,13) output(8,better,51) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,10) output(19,better,13) output(19,better,51) output(20,better,10) output(20,better,13) output(20,better,51) output(69,better,10) output(69,better,13) output(69,better,51) output(10,worse,6) output(13,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,20) output(19,eq,0) output(19,eq,6) output(16,eq,8) output(16,eq,69) output(16,eq,20) output(16,eq,0) output(16,eq,6) output(8,eq,69) output(8,eq,20) output(8,eq,0) output(8,eq,6) output(69,eq,20) output(69,eq,0) output(69,eq,6) output(20,eq,0) output(20,eq,6) output(0,eq,6) output(10,eq,13) output(10,eq,51) output(13,eq,51)
Optimization: 26 2
Answer: 6
preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,51) output(6,better,51) output(8,better,20) output(8,better,10) output(8,better,13) output(8,better,51) output(16,better,20) output(16,better,10) output(16,better,13) output(16,better,51) output(19,better,20) output(19,better,10) output(19,better,13) output(19,better,51) output(69,better,20) output(69,better,10) output(69,better,13) output(69,better,51) output(10,worse,6) output(13,worse,6) output(20,worse,0) output(20,worse,6) output(19,eq,16) output(19,eq,8) output(19,eq,69) output(19,eq,0) output(19,eq,6) output(16,eq,8) output(16,eq,69) output(16,eq,0) output(16,eq,6) output(8,eq,69) output(8,eq,0) output(8,eq,6) output(69,eq,0) output(69,eq,6) output(20,eq,10) output(20,eq,13) output(20,eq,51) output(0,eq,6) output(10,eq,13) output(10,eq,51) output(13,eq,51)
Optimization: 25 3
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasOftenSold(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,10),1,for(atom(hasPrice(2))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(0,better,13) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,13) output(10,better,13) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,13) output(19,better,16) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,13) output(20,better,0) output(20,better,13) output(69,better,20) output(69,better,0) output(69,better,13) output(0,worse,10) output(0,worse,6) output(0,worse,51) output(6,worse,51) output(8,worse,10) output(8,worse,6) output(8,worse,51) output(10,worse,51) output(13,worse,6) output(13,worse,51) output(16,worse,10) output(16,worse,6) output(16,worse,51) output(19,worse,51) output(20,worse,10) output(20,worse,6) output(20,worse,51) output(69,worse,10) output(69,worse,6) output(69,worse,51) output(19,eq,10) output(19,eq,6) output(16,eq,8) output(10,eq,6)
Optimization: 24 9
Answer: 8
preference(1,(1,12),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,8),1,for(atom(hasOftenSold(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,10),1,for(atom(hasPrice(2))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(0,better,13) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,13) output(8,better,6) output(10,better,13) output(10,better,6) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,13) output(16,better,6) output(19,better,16) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,13) output(19,better,6) output(20,better,0) output(20,better,13) output(69,better,20) output(69,better,0) output(69,better,13) output(0,worse,10) output(0,worse,6) output(0,worse,51) output(6,worse,51) output(8,worse,10) output(8,worse,51) output(10,worse,51) output(13,worse,6) output(13,worse,51) output(16,worse,10) output(16,worse,51) output(19,worse,51) output(20,worse,10) output(20,worse,6) output(20,worse,51) output(69,worse,10) output(69,worse,6) output(69,worse,51) output(19,eq,10) output(16,eq,8)
Optimization: 20 10
Answer: 9
preference(1,(1,12),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasOftenSold(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,10),1,for(atom(hasPrice(2))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(0,better,13) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(10,better,13) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(19,better,16) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(20,better,0) output(20,better,13) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(0,worse,10) output(0,worse,6) output(0,worse,51) output(6,worse,51) output(8,worse,51) output(10,worse,6) output(10,worse,51) output(13,worse,6) output(13,worse,51) output(16,worse,51) output(19,worse,51) output(20,worse,6) output(20,worse,51) output(69,worse,6) output(69,worse,51) output(16,eq,8) output(20,eq,10)
Optimization: 17 11
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(7)))),2) preference(1,(1,3),1,for(neg(atom(hasOftenSold(2)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasPrice(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,6),1,for(atom(hasOftenSold(2))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,8),1,for(atom(hasPrice(3))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),3) preference(1,(1,11),1,for(atom(hasOftenSold(3))),10) preference(1,(1,12),1,for(atom(hasPrice(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(0,better,6) output(8,better,69) output(8,better,0) output(8,better,13) output(8,better,6) output(10,better,13) output(10,better,6) output(13,better,6) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(69,better,0) output(69,better,13) output(69,better,6) output(0,worse,10) output(0,worse,13) output(0,worse,51) output(6,worse,51) output(8,worse,20) output(8,worse,10) output(8,worse,51) output(10,worse,51) output(13,worse,51) output(20,worse,51) output(69,worse,20) output(69,worse,10) output(69,worse,51) output(19,eq,16) output(19,eq,51) output(16,eq,51)
Optimization: 16 14
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,2),1,for(neg(atom(hasPrice(3)))),2) preference(1,(1,3),1,for(neg(atom(hasOftenSold(3)))),2) preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,6),1,for(atom(hasOftenSold(2))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,8),1,for(atom(hasPrice(3))),5) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,11),1,for(atom(hasOftenSold(3))),10) preference(1,(1,12),1,for(atom(hasPrice(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(0,better,13) output(0,better,6) output(8,better,69) output(8,better,0) output(8,better,13) output(8,better,6) output(10,better,13) output(10,better,6) output(13,better,6) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(69,better,0) output(69,better,13) output(69,better,6) output(0,worse,10) output(0,worse,51) output(6,worse,51) output(8,worse,20) output(8,worse,10) output(8,worse,51) output(10,worse,51) output(13,worse,51) output(16,worse,51) output(19,worse,51) output(20,worse,51) output(69,worse,20) output(69,worse,10) output(69,worse,51) output(19,eq,16)
Optimization: 15 14
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasPrice(2)))),10) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(7)))),2) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,8),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,11),1,for(atom(hasPrice(3))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,13),1,for(atom(hasPrice(1))),9) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(10,better,6) output(13,better,6) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(0,worse,51) output(6,worse,51) output(8,worse,69) output(8,worse,20) output(8,worse,51) output(10,worse,51) output(13,worse,51) output(19,worse,16) output(19,worse,69) output(19,worse,20) output(19,worse,51) output(19,eq,8) output(10,eq,13)
Optimization: 13 14
Answer: 13
preference(1,(1,3),1,for(neg(atom(hasPrice(3)))),1) preference(1,(1,5),1,for(neg(atom(hasOftenSold(2)))),4) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(4)))),8) preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(2))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,7),1,for(atom(hasOftenSold(3))),2) preference(1,(1,8),1,for(atom(hasOftenSold(0))),2) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,10),1,for(atom(hasPrice(3))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,6) output(8,better,51) output(10,better,6) output(10,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,8) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51) output(8,worse,69) output(8,worse,20) output(8,worse,0) output(8,worse,10) output(8,worse,13) output(19,worse,16) output(19,worse,69) output(19,worse,20) output(19,worse,0) output(69,worse,20) output(69,eq,0) output(10,eq,13)
Optimization: 12 14
Answer: 14
preference(1,(1,9),1,for(neg(atom(hasMinorGrp(7)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),6) preference(1,(1,8),1,for(atom(hasOftenSold(0))),8) preference(1,(1,10),1,for(atom(hasPrice(3))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,13) output(10,better,6) output(10,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,16) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrice(2))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,6),1,for(atom(hasOftenSold(3))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,9),1,for(atom(hasOftenSold(0))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,10) output(0,better,13) output(0,better,6) output(0,better,51) output(6,better,51) output(8,better,69) output(8,better,20) output(8,better,0) output(8,better,10) output(8,better,13) output(8,better,6) output(8,better,51) output(10,better,13) output(10,better,6) output(10,better,51) output(13,better,6) output(13,better,51) output(16,better,8) output(16,better,69) output(16,better,20) output(16,better,0) output(16,better,10) output(16,better,13) output(16,better,6) output(16,better,51) output(19,better,16) output(19,better,8) output(19,better,69) output(19,better,20) output(19,better,0) output(19,better,10) output(19,better,13) output(19,better,6) output(19,better,51) output(20,better,0) output(20,better,10) output(20,better,13) output(20,better,6) output(20,better,51) output(69,better,20) output(69,better,0) output(69,better,10) output(69,better,13) output(69,better,6) output(69,better,51)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.101 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.417s (Solving: 283.64s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1148.824s
Threads      : 4        (Winner: 4)

Choices      : 5313664  (Domain: 783)
Conflicts    : 970700   (Analyzed: 970698)
Restarts     : 1090     (Average: 890.55 Last: 55756)
Model-Level  : 1144.7  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 973901   (Deleted: 854954)
  Binary     : 436      (Ratio:   0.04%)
  Ternary    : 115      (Ratio:   0.01%)
  Conflict   : 970698   (Average Length: 1730.6 Ratio:  99.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3203     (Average Length:  209.9 Ratio:   0.33%) 
  Distributed: 1068     (Ratio:   0.11% Average LBD: 3.33) 
  Integrated : 3203     (Ratio: 299.91% Unit: 2 Average Jumps: 1.50)
Backjumps    : 970698   (Average:  3.53 Max: 2891 Sum: 3430714)
  Executed   : 970697   (Average:  3.53 Max: 2891 Sum: 3430687 Ratio: 100.00%)
  Bounded    : 1        (Average: 27.00 Max:  27 Sum:     27 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: not atom(hasMinorGrp(7))  ; 
  2 :: not atom(hasOftenSold(2))  ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasOiliness(2))  ; 
  2 :: not atom(hasPrice(3))  ; 
  2 :: not atom(hasOftenSold(3))  ; 
  3 :: atom(hasMinorGrp(2)) ; 
  7 :: not atom(hasMajorGrp(0))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(3)) ; 
  3 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasPrice(2))  ; 
  2 :: not atom(hasMinorGrp(7))  ; 
  6 :: not atom(hasMinorGrp(1))  ; 
  9 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  5 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasOiliness(2)) ; 
  1 :: not atom(hasPrice(3))  ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: not atom(hasOftenSold(2))  ; 
  10 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(3)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: not atom(hasMinorGrp(4))  ; 
  9 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasOftenSold(0)) ; 
  5 :: not atom(hasMinorGrp(7))  ; 
  5 :: atom(hasPrice(3)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.
