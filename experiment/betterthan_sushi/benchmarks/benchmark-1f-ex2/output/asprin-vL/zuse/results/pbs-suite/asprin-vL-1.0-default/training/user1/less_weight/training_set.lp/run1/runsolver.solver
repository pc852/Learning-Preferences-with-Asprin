asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(22,eq,31) output(22,eq,60) output(22,eq,21) output(22,eq,8) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(22,eq,17) output(22,eq,76) output(31,eq,60) output(31,eq,21) output(31,eq,8) output(31,eq,24) output(31,eq,6) output(31,eq,12) output(31,eq,17) output(31,eq,76) output(60,eq,21) output(60,eq,8) output(60,eq,24) output(60,eq,6) output(60,eq,12) output(60,eq,17) output(60,eq,76) output(21,eq,8) output(21,eq,24) output(21,eq,6) output(21,eq,12) output(21,eq,17) output(21,eq,76) output(8,eq,24) output(8,eq,6) output(8,eq,12) output(8,eq,17) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(24,eq,17) output(24,eq,76) output(6,eq,12) output(6,eq,17) output(6,eq,76) output(12,eq,17) output(12,eq,76) output(17,eq,76)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(60,better,21) output(22,better,21) output(31,better,21) output(21,worse,8) output(21,worse,24) output(21,worse,6) output(21,worse,12) output(21,worse,17) output(21,worse,76) output(22,eq,31) output(22,eq,60) output(22,eq,8) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(22,eq,17) output(22,eq,76) output(31,eq,60) output(31,eq,8) output(31,eq,24) output(31,eq,6) output(31,eq,12) output(31,eq,17) output(31,eq,76) output(60,eq,8) output(60,eq,24) output(60,eq,6) output(60,eq,12) output(60,eq,17) output(60,eq,76) output(8,eq,24) output(8,eq,6) output(8,eq,12) output(8,eq,17) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(24,eq,17) output(24,eq,76) output(6,eq,12) output(6,eq,17) output(6,eq,76) output(12,eq,17) output(12,eq,76) output(17,eq,76)
Optimization: 42 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(21,better,8) output(22,better,60) output(22,better,8) output(31,better,60) output(31,better,8) output(60,worse,21) output(60,worse,24) output(60,worse,6) output(60,worse,12) output(60,worse,17) output(60,worse,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,17) output(8,worse,76) output(22,eq,31) output(22,eq,21) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(22,eq,17) output(22,eq,76) output(31,eq,21) output(31,eq,24) output(31,eq,6) output(31,eq,12) output(31,eq,17) output(31,eq,76) output(60,eq,8) output(21,eq,24) output(21,eq,6) output(21,eq,12) output(21,eq,17) output(21,eq,76) output(24,eq,6) output(24,eq,12) output(24,eq,17) output(24,eq,76) output(6,eq,12) output(6,eq,17) output(6,eq,76) output(12,eq,17) output(12,eq,76) output(17,eq,76)
Optimization: 40 2
Answer: 4
preference(1,(1,13),1,for(atom(hasPrice(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(60,better,21) output(60,better,17) output(6,better,17) output(8,better,17) output(12,better,17) output(22,better,21) output(22,better,17) output(24,better,17) output(31,better,21) output(31,better,17) output(17,worse,76) output(21,worse,8) output(21,worse,24) output(21,worse,6) output(21,worse,12) output(21,worse,76) output(22,eq,31) output(22,eq,60) output(22,eq,8) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(22,eq,76) output(31,eq,60) output(31,eq,8) output(31,eq,24) output(31,eq,6) output(31,eq,12) output(31,eq,76) output(60,eq,8) output(60,eq,24) output(60,eq,6) output(60,eq,12) output(60,eq,76) output(21,eq,17) output(8,eq,24) output(8,eq,6) output(8,eq,12) output(8,eq,76) output(24,eq,6) output(24,eq,12) output(24,eq,76) output(6,eq,12) output(6,eq,76) output(12,eq,76)
Optimization: 35 2
Answer: 5
preference(1,(1,11),1,for(atom(hasOiliness(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,17) output(6,better,17) output(12,better,17) output(22,better,21) output(22,better,8) output(22,better,17) output(24,better,17) output(31,better,21) output(31,better,8) output(31,better,17) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,76) output(17,worse,76) output(21,worse,24) output(21,worse,6) output(21,worse,12) output(21,worse,76) output(22,eq,31) output(22,eq,60) output(22,eq,24) output(22,eq,6) output(22,eq,12) output(22,eq,76) output(31,eq,60) output(31,eq,24) output(31,eq,6) output(31,eq,12) output(31,eq,76) output(60,eq,24) output(60,eq,6) output(60,eq,12) output(60,eq,76) output(21,eq,8) output(21,eq,17) output(8,eq,17) output(24,eq,6) output(24,eq,12) output(24,eq,76) output(6,eq,12) output(6,eq,76) output(12,eq,76)
Optimization: 33 3
Answer: 6
preference(1,(1,13),1,for(atom(hasPrice(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(60,better,6) output(60,better,17) output(8,better,6) output(8,better,17) output(12,better,17) output(21,better,6) output(21,better,17) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,6) output(31,better,17) output(6,worse,12) output(6,worse,76) output(17,worse,76) output(22,eq,31) output(22,eq,60) output(22,eq,21) output(22,eq,8) output(22,eq,24) output(22,eq,12) output(22,eq,76) output(31,eq,60) output(31,eq,21) output(31,eq,8) output(31,eq,24) output(31,eq,12) output(31,eq,76) output(60,eq,21) output(60,eq,8) output(60,eq,24) output(60,eq,12) output(60,eq,76) output(21,eq,8) output(21,eq,24) output(21,eq,12) output(21,eq,76) output(8,eq,24) output(8,eq,12) output(8,eq,76) output(24,eq,12) output(24,eq,76) output(6,eq,17) output(12,eq,76)
Optimization: 32 2
Answer: 7
preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(60,better,21) output(60,better,6) output(60,better,17) output(8,better,6) output(8,better,17) output(12,better,17) output(22,better,21) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,21) output(31,better,6) output(31,better,17) output(6,worse,12) output(6,worse,76) output(17,worse,76) output(21,worse,8) output(21,worse,24) output(21,worse,12) output(21,worse,76) output(22,eq,31) output(22,eq,60) output(22,eq,8) output(22,eq,24) output(22,eq,12) output(22,eq,76) output(31,eq,60) output(31,eq,8) output(31,eq,24) output(31,eq,12) output(31,eq,76) output(60,eq,8) output(60,eq,24) output(60,eq,12) output(60,eq,76) output(21,eq,6) output(21,eq,17) output(8,eq,24) output(8,eq,12) output(8,eq,76) output(24,eq,12) output(24,eq,76) output(6,eq,17) output(12,eq,76)
Optimization: 31 3
Answer: 8
preference(1,(1,12),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(60,better,8) output(60,better,6) output(60,better,17) output(12,better,17) output(21,better,8) output(21,better,6) output(21,better,17) output(22,better,8) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,8) output(31,better,6) output(31,better,17) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,12) output(8,worse,76) output(17,worse,76) output(22,eq,31) output(22,eq,60) output(22,eq,21) output(22,eq,24) output(22,eq,12) output(22,eq,76) output(31,eq,60) output(31,eq,21) output(31,eq,24) output(31,eq,12) output(31,eq,76) output(60,eq,21) output(60,eq,24) output(60,eq,12) output(60,eq,76) output(21,eq,24) output(21,eq,12) output(21,eq,76) output(8,eq,6) output(8,eq,17) output(24,eq,12) output(24,eq,76) output(6,eq,17) output(12,eq,76)
Optimization: 30 3
Answer: 9
preference(1,(1,7),1,for(neg(atom(hasOiliness(2)))),10) preference(1,(1,1),1,for(atom(hasPrice(3))),10) preference(1,(1,2),1,for(atom(hasOftenSold(3))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasOiliness(0))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(22,better,31) output(22,better,21) output(22,better,8) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(8,worse,24) output(21,worse,24) output(31,worse,60) output(31,worse,24) output(22,eq,60) output(22,eq,24) output(31,eq,21) output(31,eq,8) output(31,eq,6) output(31,eq,12) output(31,eq,17) output(31,eq,76) output(60,eq,24) output(21,eq,8) output(21,eq,6) output(21,eq,12) output(21,eq,17) output(21,eq,76) output(8,eq,6) output(8,eq,12) output(8,eq,17) output(8,eq,76) output(6,eq,12) output(6,eq,17) output(6,eq,76) output(12,eq,17) output(12,eq,76) output(17,eq,76)
Optimization: 28 9
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,13),1,for(atom(hasOftenSold(3))),6) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,6) output(60,better,17) output(6,better,17) output(12,better,17) output(21,better,8) output(21,better,17) output(22,better,21) output(22,better,8) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,21) output(31,better,8) output(31,better,6) output(31,better,17) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,17) output(8,worse,76) output(17,worse,76) output(21,worse,24) output(21,worse,6) output(21,worse,12) output(21,worse,76) output(22,worse,31) output(22,worse,60) output(22,worse,24) output(22,worse,12) output(22,worse,76) output(31,eq,60) output(31,eq,24) output(31,eq,12) output(31,eq,76) output(60,eq,24) output(60,eq,12) output(60,eq,76) output(24,eq,12) output(24,eq,76) output(12,eq,76)
Optimization: 27 6
Answer: 11
preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,13),1,for(atom(hasOftenSold(3))),6) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,6) output(60,better,17) output(6,better,17) output(12,better,17) output(21,better,8) output(21,better,17) output(22,better,21) output(22,better,8) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,6) output(31,better,17) output(60,worse,24) output(60,worse,12) output(60,worse,76) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,17) output(8,worse,76) output(17,worse,76) output(21,worse,24) output(21,worse,6) output(21,worse,12) output(21,worse,76) output(22,worse,31) output(22,worse,24) output(22,worse,12) output(22,worse,76) output(22,eq,60) output(31,eq,24) output(31,eq,12) output(31,eq,76) output(24,eq,12) output(24,eq,76) output(12,eq,76)
Optimization: 26 7
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,13),1,for(atom(hasOftenSold(3))),6) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,6) output(60,better,17) output(6,better,17) output(12,better,17) output(21,better,8) output(21,better,17) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,6) output(31,better,17) output(60,worse,24) output(60,worse,12) output(60,worse,76) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,17) output(8,worse,76) output(17,worse,76) output(21,worse,24) output(21,worse,6) output(21,worse,12) output(21,worse,76) output(22,worse,31) output(22,worse,24) output(22,worse,12) output(22,worse,76) output(31,eq,24) output(31,eq,12) output(31,eq,76) output(24,eq,12) output(24,eq,76) output(12,eq,76)
Optimization: 25 8
Answer: 13
preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasPrice(3))),1) preference(1,(1,11),1,for(atom(hasOftenSold(1))),9) preference(1,(1,12),1,for(atom(hasOftenSold(3))),6) preference(1,(1,13),1,for(atom(hasOftenSold(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,17) output(6,better,17) output(12,better,17) output(21,better,8) output(21,better,6) output(21,better,17) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,17) output(60,worse,12) output(60,worse,76) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,76) output(17,worse,76) output(21,worse,12) output(21,worse,76) output(22,worse,60) output(22,worse,12) output(22,worse,76) output(24,worse,12) output(24,worse,76) output(31,worse,60) output(31,worse,12) output(31,worse,76) output(22,eq,31) output(21,eq,24) output(8,eq,17) output(12,eq,76)
Optimization: 23 13
Answer: 14
preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasOftenSold(3))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,6),1,for(atom(hasPrice(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasOftenSold(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasOftenSold(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,17) output(6,better,17) output(8,better,17) output(12,better,17) output(21,better,8) output(21,better,6) output(21,better,17) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,17) output(60,worse,12) output(60,worse,76) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,6) output(8,worse,12) output(8,worse,76) output(17,worse,76) output(21,worse,12) output(21,worse,76) output(22,worse,60) output(22,worse,12) output(22,worse,76) output(24,worse,12) output(24,worse,76) output(31,worse,60) output(31,worse,12) output(31,worse,76) output(22,eq,31) output(21,eq,24) output(12,eq,76)
Optimization: 22 13
Answer: 15
preference(1,(1,4),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasOftenSold(3))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasOftenSold(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,13),1,for(atom(hasOftenSold(2))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,17) output(6,better,17) output(8,better,6) output(8,better,17) output(12,better,17) output(21,better,8) output(21,better,6) output(21,better,17) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,17) output(24,better,6) output(24,better,17) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,17) output(60,worse,12) output(60,worse,76) output(6,worse,12) output(6,worse,76) output(8,worse,24) output(8,worse,12) output(8,worse,76) output(17,worse,76) output(21,worse,12) output(21,worse,76) output(22,worse,60) output(22,worse,12) output(22,worse,76) output(24,worse,12) output(24,worse,76) output(31,worse,60) output(31,worse,12) output(31,worse,76) output(22,eq,31) output(21,eq,24) output(12,eq,76)
Optimization: 21 13
Answer: 16
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,14),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,6),1,for(atom(hasOftenSold(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),9) preference(1,(1,10),1,for(atom(hasPrice(1))),8) preference(1,(1,11),1,for(atom(hasOiliness(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasPrice(2))),9) preference(1,less(weight)) output(60,better,24) output(60,better,6) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,17) output(8,better,76) output(12,better,17) output(12,better,76) output(21,better,24) output(21,better,6) output(21,better,17) output(21,better,76) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,17) output(31,better,76) output(60,worse,12) output(6,worse,12) output(8,worse,12) output(17,worse,76) output(21,worse,12) output(22,worse,31) output(22,worse,60) output(22,worse,21) output(22,worse,8) output(22,worse,24) output(22,worse,6) output(22,worse,12) output(22,worse,17) output(22,worse,76) output(24,worse,12) output(31,worse,12) output(60,eq,21) output(60,eq,8) output(21,eq,8)
Optimization: 19 12
Answer: 17
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,14),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,6),1,for(atom(hasOftenSold(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),9) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasOiliness(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasPrice(2))),9) preference(1,less(weight)) output(60,better,24) output(60,better,6) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,17) output(8,better,76) output(12,better,17) output(12,better,76) output(21,better,24) output(21,better,6) output(21,better,17) output(21,better,76) output(22,better,17) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,17) output(31,better,76) output(60,worse,12) output(6,worse,12) output(8,worse,12) output(17,worse,76) output(21,worse,12) output(22,worse,31) output(22,worse,60) output(22,worse,21) output(22,worse,8) output(22,worse,24) output(22,worse,6) output(22,worse,12) output(24,worse,12) output(31,worse,12) output(22,eq,76) output(60,eq,21) output(60,eq,8) output(21,eq,8)
Optimization: 18 12
Answer: 18
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,14),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,6),1,for(atom(hasOftenSold(1))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,10),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasOiliness(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasPrice(2))),9) preference(1,less(weight)) output(60,better,24) output(60,better,6) output(60,better,17) output(60,better,76) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,17) output(8,better,76) output(12,better,17) output(12,better,76) output(21,better,24) output(21,better,6) output(21,better,17) output(21,better,76) output(22,better,17) output(24,better,6) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(6,worse,12) output(17,worse,76) output(22,worse,31) output(22,worse,60) output(22,worse,21) output(22,worse,8) output(22,worse,24) output(22,worse,6) output(22,worse,12) output(24,worse,12) output(22,eq,76) output(60,eq,21) output(60,eq,8) output(60,eq,12) output(21,eq,8) output(21,eq,12) output(8,eq,12)
Optimization: 17 13
Answer: 19
preference(1,(1,9),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,3),1,for(atom(hasOftenSold(0))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),7) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,60) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,24) output(60,worse,6) output(17,worse,76) output(21,worse,8) output(22,worse,31) output(22,worse,21) output(22,worse,8) output(31,worse,8) output(22,eq,24) output(31,eq,21) output(12,eq,76)
Optimization: 13 14
Answer: 20
preference(1,(1,9),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,3),1,for(atom(hasOftenSold(0))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),7) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,60) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,24) output(60,worse,6) output(17,worse,76) output(21,worse,8) output(22,worse,8) output(31,worse,8) output(22,eq,31) output(22,eq,21) output(31,eq,21) output(12,eq,76)
Optimization: 12 14
Answer: 21
preference(1,(1,4),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,9),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasOftenSold(0))),4) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(60,better,12) output(60,better,17) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,24) output(60,worse,6) output(12,worse,76) output(17,worse,76) output(21,worse,8) output(22,worse,8) output(31,worse,8) output(31,eq,21) output(60,eq,76)
Optimization: 11 14
Answer: 22
preference(1,(1,9),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),7) preference(1,(1,3),1,for(atom(hasOftenSold(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,24) output(60,worse,6) output(17,worse,76) output(21,worse,8) output(22,worse,8) output(31,worse,8) output(31,eq,21) output(12,eq,76)
Optimization: 10 14
Answer: 23
preference(1,(1,9),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),5) preference(1,(1,2),1,for(atom(hasStyle(0))),4) preference(1,(1,3),1,for(atom(hasPrice(1))),7) preference(1,(1,4),1,for(atom(hasOftenSold(0))),5) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,76) output(17,better,76) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76) output(60,worse,21) output(60,worse,8) output(60,worse,24) output(60,worse,6) output(21,worse,8) output(22,worse,8) output(31,worse,8) output(31,eq,21) output(12,eq,17)
Optimization: 9 14
Answer: 24
preference(1,(1,1),1,for(neg(atom(hasPrice(2)))),4) preference(1,(1,14),1,for(neg(atom(hasOftenSold(1)))),3) preference(1,(1,2),1,for(atom(hasPrice(2))),10) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,4),1,for(atom(hasOftenSold(2))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),9) preference(1,(1,6),1,for(atom(hasOftenSold(0))),8) preference(1,(1,7),1,for(atom(hasOftenSold(1))),9) preference(1,(1,8),1,for(atom(hasOftenSold(3))),8) preference(1,(1,9),1,for(atom(hasOiliness(1))),9) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,13),1,for(atom(hasPrice(3))),8) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 25
preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,1),1,for(atom(hasOftenSold(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,3),1,for(atom(hasOftenSold(0))),9) preference(1,(1,5),1,for(atom(hasOftenSold(2))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),10) preference(1,(1,7),1,for(atom(hasOiliness(0))),4) preference(1,(1,8),1,for(atom(hasPrice(2))),7) preference(1,(1,9),1,for(atom(hasPrice(3))),8) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasOiliness(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,14),1,for(atom(hasOftenSold(3))),2) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76)
Optimization: 0 13
Answer: 26
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(4)))),2) preference(1,(1,4),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasOftenSold(2))),3) preference(1,(1,6),1,for(atom(hasOftenSold(0))),6) preference(1,(1,7),1,for(atom(hasOftenSold(1))),2) preference(1,(1,8),1,for(atom(hasPrice(2))),3) preference(1,(1,9),1,for(atom(hasPrice(3))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(0))),3) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasOftenSold(3))),1) preference(1,less(weight)) output(60,better,21) output(60,better,8) output(60,better,24) output(60,better,6) output(60,better,12) output(60,better,17) output(60,better,76) output(6,better,12) output(6,better,17) output(6,better,76) output(8,better,24) output(8,better,6) output(8,better,12) output(8,better,17) output(8,better,76) output(12,better,17) output(12,better,76) output(17,better,76) output(21,better,8) output(21,better,24) output(21,better,6) output(21,better,12) output(21,better,17) output(21,better,76) output(22,better,31) output(22,better,60) output(22,better,21) output(22,better,8) output(22,better,24) output(22,better,6) output(22,better,12) output(22,better,17) output(22,better,76) output(24,better,6) output(24,better,12) output(24,better,17) output(24,better,76) output(31,better,60) output(31,better,21) output(31,better,8) output(31,better,24) output(31,better,6) output(31,better,12) output(31,better,17) output(31,better,76)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.168 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 26+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 597.254s (Solving: 584.66s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2349.703s
Threads      : 4        (Winner: 4)

Choices      : 11072627 (Domain: 2813)
Conflicts    : 2138955  (Analyzed: 2138953)
Restarts     : 2198     (Average: 973.14 Last: 135552)
Model-Level  : 1590.3  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2146702  (Deleted: 1999302)
  Binary     : 864      (Ratio:   0.04%)
  Ternary    : 173      (Ratio:   0.01%)
  Conflict   : 2138953  (Average Length: 1819.7 Ratio:  99.64%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 7749     (Average Length:  274.2 Ratio:   0.36%) 
  Distributed: 2583     (Ratio:   0.12% Average LBD: 3.49) 
  Integrated : 7749     (Ratio: 300.00% Unit: 12 Average Jumps: 3.00)
Backjumps    : 2138953  (Average:  3.43 Max: 3969 Sum: 7328001)
  Executed   : 2138952  (Average:  3.43 Max: 3969 Sum: 7327959 Ratio: 100.00%)
  Bounded    : 1        (Average: 42.00 Max:  42 Sum:     42 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: not atom(hasOiliness(2))  ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  4 :: not atom(hasStyle(1))  ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  4 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: atom(hasPrice(3)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  4 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  4 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  9 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(2)) ; 
  3 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  9 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(2)) ; 
  3 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(2)) ; 
  3 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(2)) ; 
  4 :: atom(hasStyle(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasPrice(2))  ; 
  10 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(3)) ; 
  3 :: not atom(hasOftenSold(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(2)) ; 
  8 :: atom(hasPrice(3)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  6 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(2)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasMinorGrp(4))  ; 
  9 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  4 :: atom(hasPrice(3)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOftenSold(3)) 
}.
