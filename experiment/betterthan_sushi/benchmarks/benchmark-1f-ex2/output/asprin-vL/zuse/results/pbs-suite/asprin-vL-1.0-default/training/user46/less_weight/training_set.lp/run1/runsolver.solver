asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,27) output(4,eq,11) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(4,eq,17) output(4,eq,50) output(4,eq,6) output(4,eq,2) output(27,eq,11) output(27,eq,35) output(27,eq,51) output(27,eq,66) output(27,eq,17) output(27,eq,50) output(27,eq,6) output(27,eq,2) output(11,eq,35) output(11,eq,51) output(11,eq,66) output(11,eq,17) output(11,eq,50) output(11,eq,6) output(11,eq,2) output(35,eq,51) output(35,eq,66) output(35,eq,17) output(35,eq,50) output(35,eq,6) output(35,eq,2) output(51,eq,66) output(51,eq,17) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,17) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(17,eq,50) output(17,eq,6) output(17,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasOftenSold(2))),10) preference(1,less(weight)) output(4,better,17) output(11,better,17) output(27,better,17) output(35,better,17) output(51,better,17) output(66,better,17) output(17,worse,50) output(17,worse,6) output(17,worse,2) output(4,eq,27) output(4,eq,11) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(4,eq,50) output(4,eq,6) output(4,eq,2) output(27,eq,11) output(27,eq,35) output(27,eq,51) output(27,eq,66) output(27,eq,50) output(27,eq,6) output(27,eq,2) output(11,eq,35) output(11,eq,51) output(11,eq,66) output(11,eq,50) output(11,eq,6) output(11,eq,2) output(35,eq,51) output(35,eq,66) output(35,eq,50) output(35,eq,6) output(35,eq,2) output(51,eq,66) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 39 1
Answer: 3
preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,2) output(6,better,2) output(11,better,2) output(17,better,2) output(27,better,2) output(35,better,2) output(50,better,2) output(51,better,2) output(66,better,2) output(4,eq,27) output(4,eq,11) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(4,eq,17) output(4,eq,50) output(4,eq,6) output(27,eq,11) output(27,eq,35) output(27,eq,51) output(27,eq,66) output(27,eq,17) output(27,eq,50) output(27,eq,6) output(11,eq,35) output(11,eq,51) output(11,eq,66) output(11,eq,17) output(11,eq,50) output(11,eq,6) output(35,eq,51) output(35,eq,66) output(35,eq,17) output(35,eq,50) output(35,eq,6) output(51,eq,66) output(51,eq,17) output(51,eq,50) output(51,eq,6) output(66,eq,17) output(66,eq,50) output(66,eq,6) output(17,eq,50) output(17,eq,6) output(50,eq,6)
Optimization: 36 1
Answer: 4
preference(1,(1,13),1,for(atom(hasOftenSold(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(4,better,17) output(4,better,2) output(6,better,2) output(11,better,17) output(11,better,2) output(27,better,17) output(27,better,2) output(35,better,17) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,2) output(66,better,17) output(66,better,2) output(17,worse,50) output(17,worse,6) output(4,eq,27) output(4,eq,11) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(4,eq,50) output(4,eq,6) output(27,eq,11) output(27,eq,35) output(27,eq,51) output(27,eq,66) output(27,eq,50) output(27,eq,6) output(11,eq,35) output(11,eq,51) output(11,eq,66) output(11,eq,50) output(11,eq,6) output(35,eq,51) output(35,eq,66) output(35,eq,50) output(35,eq,6) output(51,eq,66) output(51,eq,50) output(51,eq,6) output(66,eq,50) output(66,eq,6) output(17,eq,2) output(50,eq,6)
Optimization: 31 2
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasOftenSold(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(4,better,27) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,2) output(6,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,2) output(50,better,2) output(17,worse,50) output(17,worse,6) output(27,worse,11) output(27,worse,35) output(27,worse,50) output(27,worse,6) output(51,worse,50) output(51,worse,6) output(66,worse,50) output(66,worse,6) output(4,eq,11) output(4,eq,35) output(4,eq,50) output(4,eq,6) output(27,eq,51) output(27,eq,66) output(27,eq,17) output(27,eq,2) output(11,eq,35) output(11,eq,50) output(11,eq,6) output(35,eq,50) output(35,eq,6) output(51,eq,66) output(51,eq,17) output(51,eq,2) output(66,eq,17) output(66,eq,2) output(17,eq,2) output(50,eq,6)
Optimization: 30 4
Answer: 6
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(5)))),3) preference(1,(1,4),1,for(neg(atom(hasStyle(0)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(3)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(11)))),3) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(9)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(10)))),3) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(1)))),3) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),1) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(4,better,17) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,17) output(51,better,17) output(66,better,17) output(4,worse,27) output(4,worse,11) output(17,worse,50) output(17,worse,6) output(17,worse,2) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(4,eq,50) output(4,eq,6) output(4,eq,2) output(27,eq,11) output(35,eq,51) output(35,eq,66) output(35,eq,50) output(35,eq,6) output(35,eq,2) output(51,eq,66) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 27 14
Answer: 7
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(5)))),3) preference(1,(1,4),1,for(neg(atom(hasStyle(0)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(3)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(11)))),3) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(9)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(10)))),3) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,13),1,for(neg(atom(hasPrice(3)))),2) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),1) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,2) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,2) output(11,worse,6) output(17,worse,6) output(27,worse,6) output(35,worse,6) output(50,worse,6) output(51,worse,6) output(66,worse,6) output(4,eq,6) output(27,eq,11) output(35,eq,51) output(35,eq,66) output(35,eq,17) output(35,eq,50) output(35,eq,2) output(51,eq,66) output(51,eq,17) output(51,eq,50) output(51,eq,2) output(66,eq,17) output(66,eq,50) output(66,eq,2) output(17,eq,50) output(17,eq,2) output(50,eq,2)
Optimization: 24 14
Answer: 8
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(5)))),3) preference(1,(1,4),1,for(neg(atom(hasStyle(0)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(3)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(11)))),3) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(9)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(10)))),3) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,13),1,for(neg(atom(hasOiliness(0)))),2) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),1) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(11,worse,35) output(27,worse,35) output(4,eq,35) output(27,eq,11) output(51,eq,66) output(51,eq,17) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,17) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(17,eq,50) output(17,eq,6) output(17,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 19 14
Answer: 9
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(5)))),3) preference(1,(1,4),1,for(neg(atom(hasStyle(0)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(3)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(11)))),3) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(9)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(10)))),3) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,13),1,for(neg(atom(hasOiliness(0)))),10) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),1) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(51,better,17) output(66,better,17) output(11,worse,35) output(17,worse,50) output(17,worse,6) output(17,worse,2) output(27,worse,35) output(4,eq,35) output(27,eq,11) output(51,eq,66) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 17 14
Answer: 10
preference(1,(1,3),1,for(neg(atom(hasMinorGrp(5)))),3) preference(1,(1,4),1,for(neg(atom(hasStyle(0)))),3) preference(1,(1,5),1,for(neg(atom(hasOiliness(3)))),3) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(11)))),3) preference(1,(1,8),1,for(neg(atom(hasMajorGrp(1)))),3) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(3)))),3) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(9)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(10)))),3) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,14),1,for(neg(atom(hasPrice(2)))),1) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,(1,13),1,for(atom(hasOiliness(1))),9) preference(1,less(weight)) output(4,better,27) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,11) output(27,worse,11) output(27,worse,35) output(27,worse,51) output(27,worse,66) output(27,worse,17) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(35,eq,51) output(35,eq,66) output(51,eq,66) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 15 14
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasStyle(0)))),2) preference(1,(1,2),1,for(neg(atom(hasMajorGrp(1)))),2) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(3)))),2) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(5)))),2) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(10)))),2) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(11)))),2) preference(1,(1,7),1,for(neg(atom(hasOiliness(3)))),2) preference(1,(1,10),1,for(neg(atom(hasOiliness(0)))),3) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(4)))),1) preference(1,(1,13),1,for(neg(atom(hasPrice(2)))),4) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(9)))),2) preference(1,(1,8),1,for(atom(hasStyle(1))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,27) output(4,worse,11) output(4,eq,35) output(27,eq,11) output(51,eq,66) output(17,eq,50) output(17,eq,6) output(17,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 11 14
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasOiliness(2))),5) preference(1,(1,4),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasOftenSold(0))),3) preference(1,(1,6),1,for(atom(hasPrice(3))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasOftenSold(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),1) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,6) output(50,better,2) output(51,better,66) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.106 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 0 14
Calls        : 1
Time         : 298.290s (Solving: 283.68s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1148.486s
Threads      : 4        (Winner: 4)

Choices      : 1376950  (Domain: 527)
Conflicts    : 632175   (Analyzed: 632173)
Restarts     : 307      (Average: 2059.20 Last: 63275)
Model-Level  : 296.8   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 632665   (Deleted: 521629)
  Binary     : 4        (Ratio:   0.00%)
  Ternary    : 15       (Ratio:   0.00%)
  Conflict   : 632173   (Average Length: 2034.6 Ratio:  99.92%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 492      (Average Length:  186.2 Ratio:   0.08%) 
  Distributed: 164      (Ratio:   0.03% Average LBD: 3.41) 
  Integrated : 492      (Ratio: 300.00% Unit: 0 Average Jumps: 0.00)
Backjumps    : 632173   (Average:  1.93 Max: 2830 Sum: 1222611)
  Executed   : 632172   (Average:  1.93 Max: 2830 Sum: 1222574 Ratio: 100.00%)
  Bounded    : 1        (Average: 37.00 Max:  37 Sum:     37 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: not atom(hasMinorGrp(5))  ; 
  3 :: not atom(hasStyle(0))  ; 
  3 :: not atom(hasOiliness(3))  ; 
  3 :: not atom(hasMinorGrp(11))  ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(1))  ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  3 :: not atom(hasMinorGrp(9))  ; 
  3 :: not atom(hasMinorGrp(10))  ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  3 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: not atom(hasMinorGrp(5))  ; 
  3 :: not atom(hasStyle(0))  ; 
  3 :: not atom(hasOiliness(3))  ; 
  3 :: not atom(hasMinorGrp(11))  ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(1))  ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  3 :: not atom(hasMinorGrp(9))  ; 
  3 :: not atom(hasMinorGrp(10))  ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  2 :: not atom(hasPrice(3))  ; 
  1 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: not atom(hasMinorGrp(5))  ; 
  3 :: not atom(hasStyle(0))  ; 
  3 :: not atom(hasOiliness(3))  ; 
  3 :: not atom(hasMinorGrp(11))  ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(1))  ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  3 :: not atom(hasMinorGrp(9))  ; 
  3 :: not atom(hasMinorGrp(10))  ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  2 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: not atom(hasMinorGrp(5))  ; 
  3 :: not atom(hasStyle(0))  ; 
  3 :: not atom(hasOiliness(3))  ; 
  3 :: not atom(hasMinorGrp(11))  ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(1))  ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  3 :: not atom(hasMinorGrp(9))  ; 
  3 :: not atom(hasMinorGrp(10))  ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  10 :: not atom(hasOiliness(0))  ; 
  1 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: not atom(hasMinorGrp(5))  ; 
  3 :: not atom(hasStyle(0))  ; 
  3 :: not atom(hasOiliness(3))  ; 
  3 :: not atom(hasMinorGrp(11))  ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(1))  ; 
  3 :: not atom(hasMinorGrp(3))  ; 
  3 :: not atom(hasMinorGrp(9))  ; 
  3 :: not atom(hasMinorGrp(10))  ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  9 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasPrice(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasStyle(0))  ; 
  2 :: not atom(hasMajorGrp(1))  ; 
  2 :: not atom(hasMinorGrp(3))  ; 
  2 :: not atom(hasMinorGrp(5))  ; 
  2 :: not atom(hasMinorGrp(10))  ; 
  2 :: not atom(hasMinorGrp(11))  ; 
  2 :: not atom(hasOiliness(3))  ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  3 :: not atom(hasOiliness(0))  ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(4))  ; 
  4 :: not atom(hasPrice(2))  ; 
  2 :: not atom(hasMinorGrp(9))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(1)) 
}.
