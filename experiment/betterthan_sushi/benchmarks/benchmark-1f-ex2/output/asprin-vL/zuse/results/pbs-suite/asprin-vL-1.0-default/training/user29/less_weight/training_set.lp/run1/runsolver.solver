asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,12) output(8,eq,0) output(8,eq,10) output(8,eq,17) output(8,eq,64) output(8,eq,25) output(4,eq,11) output(4,eq,16) output(4,eq,12) output(4,eq,0) output(4,eq,10) output(4,eq,17) output(4,eq,64) output(4,eq,25) output(11,eq,16) output(11,eq,12) output(11,eq,0) output(11,eq,10) output(11,eq,17) output(11,eq,64) output(11,eq,25) output(16,eq,12) output(16,eq,0) output(16,eq,10) output(16,eq,17) output(16,eq,64) output(16,eq,25) output(12,eq,0) output(12,eq,10) output(12,eq,17) output(12,eq,64) output(12,eq,25) output(0,eq,10) output(0,eq,17) output(0,eq,64) output(0,eq,25) output(10,eq,17) output(10,eq,64) output(10,eq,25) output(17,eq,64) output(17,eq,25) output(64,eq,25)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(4,better,12) output(4,better,10) output(8,better,12) output(8,better,10) output(11,better,12) output(11,better,10) output(16,better,12) output(16,better,10) output(10,worse,17) output(10,worse,64) output(10,worse,25) output(12,worse,0) output(12,worse,17) output(12,worse,64) output(12,worse,25) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,0) output(8,eq,17) output(8,eq,64) output(8,eq,25) output(4,eq,11) output(4,eq,16) output(4,eq,0) output(4,eq,17) output(4,eq,64) output(4,eq,25) output(11,eq,16) output(11,eq,0) output(11,eq,17) output(11,eq,64) output(11,eq,25) output(16,eq,0) output(16,eq,17) output(16,eq,64) output(16,eq,25) output(12,eq,10) output(0,eq,17) output(0,eq,64) output(0,eq,25) output(17,eq,64) output(17,eq,25) output(64,eq,25)
Optimization: 36 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(0,better,64) output(4,better,16) output(4,better,64) output(8,better,16) output(8,better,64) output(10,better,64) output(11,better,16) output(11,better,64) output(12,better,64) output(17,better,64) output(16,worse,12) output(16,worse,0) output(16,worse,10) output(16,worse,17) output(16,worse,25) output(64,worse,25) output(8,eq,4) output(8,eq,11) output(8,eq,12) output(8,eq,0) output(8,eq,10) output(8,eq,17) output(8,eq,25) output(4,eq,11) output(4,eq,12) output(4,eq,0) output(4,eq,10) output(4,eq,17) output(4,eq,25) output(11,eq,12) output(11,eq,0) output(11,eq,10) output(11,eq,17) output(11,eq,25) output(16,eq,64) output(12,eq,0) output(12,eq,10) output(12,eq,17) output(12,eq,25) output(0,eq,10) output(0,eq,17) output(0,eq,25) output(10,eq,17) output(10,eq,25) output(17,eq,25)
Optimization: 35 2
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(4,better,12) output(4,better,10) output(4,better,64) output(8,better,12) output(8,better,10) output(8,better,64) output(11,better,12) output(11,better,10) output(11,better,64) output(16,better,12) output(16,better,10) output(16,better,64) output(17,better,64) output(10,worse,17) output(10,worse,25) output(12,worse,0) output(12,worse,17) output(12,worse,25) output(64,worse,25) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,0) output(8,eq,17) output(8,eq,25) output(4,eq,11) output(4,eq,16) output(4,eq,0) output(4,eq,17) output(4,eq,25) output(11,eq,16) output(11,eq,0) output(11,eq,17) output(11,eq,25) output(16,eq,0) output(16,eq,17) output(16,eq,25) output(12,eq,10) output(12,eq,64) output(0,eq,17) output(0,eq,25) output(10,eq,64) output(17,eq,25)
Optimization: 30 2
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(0,better,64) output(0,better,25) output(4,better,64) output(4,better,25) output(8,better,64) output(8,better,25) output(10,better,64) output(10,better,25) output(11,better,64) output(11,better,25) output(12,better,64) output(12,better,25) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,12) output(8,eq,0) output(8,eq,10) output(8,eq,17) output(4,eq,11) output(4,eq,16) output(4,eq,12) output(4,eq,0) output(4,eq,10) output(4,eq,17) output(11,eq,16) output(11,eq,12) output(11,eq,0) output(11,eq,10) output(11,eq,17) output(16,eq,12) output(16,eq,0) output(16,eq,10) output(16,eq,17) output(12,eq,0) output(12,eq,10) output(12,eq,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(64,eq,25)
Optimization: 29 2
Answer: 6
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasOftenSold(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,10) output(0,better,64) output(0,better,25) output(4,better,12) output(4,better,10) output(4,better,64) output(4,better,25) output(8,better,12) output(8,better,10) output(8,better,64) output(8,better,25) output(11,better,12) output(11,better,10) output(11,better,64) output(11,better,25) output(16,better,12) output(16,better,10) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(10,worse,17) output(12,worse,0) output(12,worse,17) output(8,eq,4) output(8,eq,11) output(8,eq,16) output(8,eq,0) output(8,eq,17) output(4,eq,11) output(4,eq,16) output(4,eq,0) output(4,eq,17) output(11,eq,16) output(11,eq,0) output(11,eq,17) output(16,eq,0) output(16,eq,17) output(12,eq,10) output(12,eq,64) output(12,eq,25) output(0,eq,17) output(10,eq,64) output(10,eq,25) output(64,eq,25)
Optimization: 24 3
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(4)))),1) preference(1,(1,9),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,13),1,for(neg(atom(hasOftenSold(3)))),4) preference(1,(1,2),1,for(atom(hasOftenSold(2))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,5),1,for(atom(hasPrice(3))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,8),1,for(atom(hasOftenSold(1))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,14),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(0,better,10) output(0,better,17) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 8
preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,8),1,for(neg(atom(hasOftenSold(3)))),7) preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,3),1,for(atom(hasOftenSold(3))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,6),1,for(atom(hasOftenSold(2))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasOftenSold(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(0,better,10) output(0,better,17) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25)
Optimization: 0 13
Answer: 9
preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),4) preference(1,(1,8),1,for(neg(atom(hasOftenSold(3)))),7) preference(1,(1,1),1,for(atom(hasOftenSold(0))),5) preference(1,(1,2),1,for(atom(hasOftenSold(2))),1) preference(1,(1,3),1,for(atom(hasOftenSold(3))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasOftenSold(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),10) preference(1,less(weight)) output(0,better,10) output(0,better,17) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 10
preference(1,(1,6),1,for(neg(atom(hasOftenSold(3)))),3) preference(1,(1,10),1,for(neg(atom(hasPrice(3)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,2),1,for(atom(hasPrice(1))),6) preference(1,(1,4),1,for(atom(hasOftenSold(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,7),1,for(atom(hasPrice(2))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasPrice(3))),4) preference(1,(1,14),1,for(atom(hasOftenSold(1))),9) preference(1,less(weight)) output(0,better,10) output(0,better,17) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25)
Optimization: 0 11
Answer: 11
preference(1,(1,7),1,for(neg(atom(hasOftenSold(3)))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasOftenSold(3))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasPrice(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,11),1,for(atom(hasPrice(3))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),5) preference(1,less(weight)) output(0,better,10) output(0,better,17) output(0,better,64) output(0,better,25) output(4,better,11) output(4,better,16) output(4,better,12) output(4,better,0) output(4,better,10) output(4,better,17) output(4,better,64) output(4,better,25) output(8,better,4) output(8,better,11) output(8,better,16) output(8,better,12) output(8,better,0) output(8,better,10) output(8,better,17) output(8,better,64) output(8,better,25) output(10,better,17) output(10,better,64) output(10,better,25) output(11,better,16) output(11,better,12) output(11,better,0) output(11,better,10) output(11,better,17) output(11,better,64) output(11,better,25) output(12,better,0) output(12,better,10) output(12,better,17) output(12,better,64) output(12,better,25) output(16,better,12) output(16,better,0) output(16,better,10) output(16,better,17) output(16,better,64) output(16,better,25) output(17,better,64) output(17,better,25) output(64,better,25)
Optimization: 0 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.167 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 598.266s (Solving: 584.29s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2350.454s
Threads      : 4        (Winner: 4)

Choices      : 10764684 (Domain: 2658)
Conflicts    : 2094835  (Analyzed: 2094833)
Restarts     : 2232     (Average: 938.55 Last: 95515)
Model-Level  : 1262.2  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2099825  (Deleted: 1940141)
  Binary     : 504      (Ratio:   0.02%)
  Ternary    : 162      (Ratio:   0.01%)
  Conflict   : 2094833  (Average Length: 1799.0 Ratio:  99.76%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4992     (Average Length:  289.6 Ratio:   0.24%) 
  Distributed: 1664     (Ratio:   0.08% Average LBD: 3.46) 
  Integrated : 4992     (Ratio: 300.00% Unit: 4 Average Jumps: 360.00)
Backjumps    : 2094833  (Average:  3.17 Max: 2570 Sum: 6632686)
  Executed   : 2094832  (Average:  3.17 Max: 2570 Sum: 6632642 Ratio: 100.00%)
  Bounded    : 1        (Average: 44.00 Max:  44 Sum:     44 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(4))  ; 
  1 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(3)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  1 :: not atom(hasPrice(1))  ; 
  3 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  4 :: not atom(hasOftenSold(3))  ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  4 :: not atom(hasMinorGrp(2))  ; 
  7 :: not atom(hasOftenSold(3))  ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasMajorGrp(0))  ; 
  3 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  4 :: not atom(hasMinorGrp(2))  ; 
  7 :: not atom(hasOftenSold(3))  ; 
  8 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: not atom(hasOftenSold(3))  ; 
  6 :: atom(hasPrice(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: not atom(hasPrice(3))  ; 
  6 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasPrice(3)) ; 
  9 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  5 :: not atom(hasOftenSold(3))  ; 
  2 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(3)) ; 
  5 :: atom(hasMinorGrp(4)) 
}.
