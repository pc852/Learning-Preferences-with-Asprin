asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,43) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,43) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(37,eq,6) output(3,eq,1) output(3,eq,43) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(3,eq,6) output(1,eq,43) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(1,eq,6) output(43,eq,9) output(43,eq,36) output(43,eq,20) output(43,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,less(weight)) output(1,better,43) output(3,better,43) output(14,better,43) output(37,better,43) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(37,eq,6) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(3,eq,6) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(1,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 41 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,6) output(3,better,43) output(3,better,6) output(9,better,6) output(14,better,43) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,6) output(37,better,43) output(37,better,6) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(36,eq,20) output(36,eq,18) output(20,eq,18)
Optimization: 33 2
Answer: 4
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(3,better,43) output(3,better,9) output(3,better,18) output(14,better,43) output(14,better,9) output(14,better,18) output(20,better,18) output(36,better,18) output(37,better,43) output(37,better,9) output(37,better,18) output(9,worse,36) output(9,worse,20) output(9,worse,6) output(18,worse,6) output(43,worse,36) output(43,worse,20) output(43,worse,6) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,36) output(14,eq,20) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,36) output(37,eq,20) output(37,eq,6) output(3,eq,1) output(3,eq,36) output(3,eq,20) output(3,eq,6) output(1,eq,36) output(1,eq,20) output(1,eq,6) output(43,eq,9) output(43,eq,18) output(9,eq,18) output(36,eq,20) output(36,eq,6) output(20,eq,6)
Optimization: 31 4
Answer: 5
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(1,better,18) output(1,better,6) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,43) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(37,eq,3) output(37,eq,1) output(37,eq,43) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(3,eq,1) output(3,eq,43) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(1,eq,43) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(43,eq,9) output(43,eq,36) output(43,eq,20) output(9,eq,36) output(9,eq,20) output(36,eq,20) output(18,eq,6)
Optimization: 29 2
Answer: 6
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,18) output(1,better,6) output(3,better,43) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,43) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,18) output(37,better,6) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(43,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(36,eq,20) output(18,eq,6)
Optimization: 27 4
Answer: 7
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(9,worse,36) output(9,worse,20) output(43,worse,36) output(43,worse,20) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,36) output(14,eq,20) output(37,eq,3) output(37,eq,1) output(37,eq,36) output(37,eq,20) output(3,eq,1) output(3,eq,36) output(3,eq,20) output(1,eq,36) output(1,eq,20) output(43,eq,9) output(43,eq,18) output(43,eq,6) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(18,eq,6)
Optimization: 25 4
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasOftenSold(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(1,worse,36) output(1,worse,20) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(3,eq,36) output(3,eq,20) output(43,eq,18) output(43,eq,6) output(36,eq,20) output(18,eq,6)
Optimization: 19 7
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(2))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,3),1,for(atom(hasPrice(3))),7) preference(1,(1,6),1,for(atom(hasOftenSold(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(1,worse,36) output(1,worse,20) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(3,eq,36) output(3,eq,20) output(36,eq,20)
Optimization: 18 10
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(2))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,3),1,for(atom(hasPrice(3))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,6),1,for(atom(hasOftenSold(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,6) output(1,worse,36) output(1,worse,20) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(3,eq,36) output(3,eq,20) output(36,eq,20)
Optimization: 17 10
Answer: 11
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,3),1,for(atom(hasPrice(3))),7) preference(1,(1,4),1,for(atom(hasPrice(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasOftenSold(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasOftenSold(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),7) preference(1,less(weight)) output(1,better,9) output(1,better,36) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,6) output(37,better,1) output(37,better,9) output(37,better,36) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,6) output(1,worse,43) output(1,worse,20) output(1,worse,18) output(9,worse,20) output(9,worse,18) output(36,worse,20) output(36,worse,18) output(37,worse,3) output(37,worse,43) output(37,worse,20) output(37,worse,18) output(43,worse,20) output(14,eq,3) output(14,eq,20) output(3,eq,20) output(43,eq,18)
Optimization: 16 14
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),5) preference(1,(1,2),1,for(atom(hasPrice(2))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasOiliness(2))),1) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,6) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(14,worse,37) output(14,worse,20) output(36,worse,20) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3)
Optimization: 15 12
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasOftenSold(1)))),7) preference(1,(1,12),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,2),1,for(atom(hasPrice(2))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasOftenSold(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasOiliness(2))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,6) output(1,worse,20) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(14,worse,37) output(14,worse,20) output(36,worse,20) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3) output(1,eq,36)
Optimization: 14 13
Answer: 14
preference(1,(1,8),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasPrice(2))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),3) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasOftenSold(2))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOftenSold(3))),7) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,6) output(1,worse,36) output(1,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(43,worse,36) output(43,worse,20) output(43,worse,18)
Optimization: 8 14
Answer: 15
preference(1,(1,8),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasPrice(2))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),3) preference(1,(1,4),1,for(atom(hasOiliness(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasOftenSold(2))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasOftenSold(3))),7) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,6) output(1,worse,36) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(43,worse,36) output(43,worse,20) output(43,worse,18)
Optimization: 7 14
Answer: 16
preference(1,(1,1),1,for(neg(atom(hasOftenSold(3)))),5) preference(1,(1,9),1,for(neg(atom(hasMajorGrp(0)))),4) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,3),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,7),1,for(atom(hasPrice(3))),2) preference(1,(1,8),1,for(atom(hasOiliness(0))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 17
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasOftenSold(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasStyle(0))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 13
Answer: 18
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasOftenSold(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasStyle(0))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 12
Answer: 19
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasOftenSold(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasOftenSold(2))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 11
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,4),1,for(atom(hasOftenSold(3))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasOftenSold(2))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 10
Answer: 21
preference(1,(1,6),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,2),1,for(atom(hasPrice(3))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,8),1,for(atom(hasOftenSold(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasPrice(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.468 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 597.997s (Solving: 584.28s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2199.832s
Threads      : 4        (Winner: 4)

Choices      : 9673196  (Domain: 2518)
Conflicts    : 1902681  (Analyzed: 1902679)
Restarts     : 1907     (Average: 997.73 Last: 68616)
Model-Level  : 1198.3  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1907824  (Deleted: 1704183)
  Binary     : 884      (Ratio:   0.05%)
  Ternary    : 189      (Ratio:   0.01%)
  Conflict   : 1902679  (Average Length: 1820.2 Ratio:  99.73%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 5145     (Average Length:  236.7 Ratio:   0.27%) 
  Distributed: 1715     (Ratio:   0.09% Average LBD: 3.35) 
  Integrated : 5145     (Ratio: 300.00% Unit: 9 Average Jumps: 2.44)
Backjumps    : 1902679  (Average:  3.24 Max: 3347 Sum: 6171231)
  Executed   : 1902678  (Average:  3.24 Max: 3347 Sum: 6171219 Ratio: 100.00%)
  Bounded    : 1        (Average: 12.00 Max:  12 Sum:     12 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

