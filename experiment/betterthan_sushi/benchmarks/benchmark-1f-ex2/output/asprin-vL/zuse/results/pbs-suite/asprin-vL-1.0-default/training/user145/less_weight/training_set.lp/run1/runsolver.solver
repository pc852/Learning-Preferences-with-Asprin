asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,7) output(8,eq,71) output(8,eq,12) output(8,eq,23) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,7) output(19,eq,71) output(19,eq,12) output(19,eq,23) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,7) output(3,eq,71) output(3,eq,12) output(3,eq,23) output(53,eq,47) output(53,eq,36) output(53,eq,7) output(53,eq,71) output(53,eq,12) output(53,eq,23) output(47,eq,36) output(47,eq,7) output(47,eq,71) output(47,eq,12) output(47,eq,23) output(36,eq,7) output(36,eq,71) output(36,eq,12) output(36,eq,23) output(7,eq,71) output(7,eq,12) output(7,eq,23) output(71,eq,12) output(71,eq,23) output(12,eq,23)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(71,better,12) output(3,better,12) output(7,better,12) output(8,better,12) output(19,better,12) output(36,better,12) output(47,better,12) output(53,better,12) output(12,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,7) output(8,eq,71) output(8,eq,23) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,7) output(19,eq,71) output(19,eq,23) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,7) output(3,eq,71) output(3,eq,23) output(53,eq,47) output(53,eq,36) output(53,eq,7) output(53,eq,71) output(53,eq,23) output(47,eq,36) output(47,eq,7) output(47,eq,71) output(47,eq,23) output(36,eq,7) output(36,eq,71) output(36,eq,23) output(7,eq,71) output(7,eq,23) output(71,eq,23)
Optimization: 37 1
Answer: 3
preference(1,(1,13),1,for(atom(hasOftenSold(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(71,better,12) output(3,better,36) output(3,better,12) output(7,better,12) output(8,better,36) output(8,better,12) output(19,better,36) output(19,better,12) output(47,better,36) output(47,better,12) output(53,better,36) output(53,better,12) output(12,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,7) output(8,eq,71) output(8,eq,23) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,7) output(19,eq,71) output(19,eq,23) output(3,eq,53) output(3,eq,47) output(3,eq,7) output(3,eq,71) output(3,eq,23) output(53,eq,47) output(53,eq,7) output(53,eq,71) output(53,eq,23) output(47,eq,7) output(47,eq,71) output(47,eq,23) output(36,eq,12) output(7,eq,71) output(7,eq,23) output(71,eq,23)
Optimization: 33 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(71,better,12) output(3,better,7) output(3,better,12) output(8,better,7) output(8,better,12) output(19,better,7) output(19,better,12) output(36,better,7) output(36,better,12) output(47,better,7) output(47,better,12) output(53,better,7) output(53,better,12) output(7,worse,71) output(7,worse,23) output(12,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,71) output(8,eq,23) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,71) output(19,eq,23) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,71) output(3,eq,23) output(53,eq,47) output(53,eq,36) output(53,eq,71) output(53,eq,23) output(47,eq,36) output(47,eq,71) output(47,eq,23) output(36,eq,71) output(36,eq,23) output(7,eq,12) output(71,eq,23)
Optimization: 32 2
Answer: 5
preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,12) output(3,better,23) output(7,better,12) output(7,better,23) output(8,better,12) output(8,better,23) output(19,better,12) output(19,better,23) output(36,better,12) output(36,better,23) output(47,better,12) output(47,better,23) output(53,better,12) output(53,better,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,7) output(8,eq,71) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,7) output(19,eq,71) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,7) output(3,eq,71) output(53,eq,47) output(53,eq,36) output(53,eq,7) output(53,eq,71) output(47,eq,36) output(47,eq,7) output(47,eq,71) output(36,eq,7) output(36,eq,71) output(7,eq,71) output(12,eq,23)
Optimization: 29 2
Answer: 6
preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,7) output(3,better,12) output(3,better,23) output(8,better,7) output(8,better,12) output(8,better,23) output(19,better,7) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,12) output(36,better,23) output(47,better,7) output(47,better,12) output(47,better,23) output(53,better,7) output(53,better,12) output(53,better,23) output(7,worse,71) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,71) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,71) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,71) output(53,eq,47) output(53,eq,36) output(53,eq,71) output(47,eq,36) output(47,eq,71) output(36,eq,71) output(7,eq,12) output(7,eq,23) output(12,eq,23)
Optimization: 25 3
Answer: 7
preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,7) output(3,better,12) output(3,better,23) output(8,better,47) output(8,better,7) output(8,better,12) output(8,better,23) output(19,better,47) output(19,better,7) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,12) output(36,better,23) output(53,better,47) output(53,better,7) output(53,better,12) output(53,better,23) output(7,worse,71) output(47,worse,36) output(47,worse,71) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,36) output(8,eq,71) output(19,eq,3) output(19,eq,53) output(19,eq,36) output(19,eq,71) output(3,eq,53) output(3,eq,36) output(3,eq,71) output(53,eq,36) output(53,eq,71) output(47,eq,7) output(47,eq,12) output(47,eq,23) output(36,eq,71) output(7,eq,12) output(7,eq,23) output(12,eq,23)
Optimization: 24 4
Answer: 8
preference(1,(1,11),1,for(atom(hasOftenSold(1))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,12) output(3,better,23) output(8,better,36) output(8,better,7) output(8,better,12) output(8,better,23) output(19,better,36) output(19,better,7) output(19,better,12) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,12) output(53,better,23) output(7,worse,71) output(36,worse,71) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,71) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,71) output(3,eq,53) output(3,eq,47) output(3,eq,71) output(53,eq,47) output(53,eq,71) output(47,eq,71) output(36,eq,7) output(36,eq,12) output(36,eq,23) output(7,eq,12) output(7,eq,23) output(12,eq,23)
Optimization: 23 4
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasOiliness(2)))),9) preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasOftenSold(2))),9) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(3,better,36) output(3,better,71) output(3,better,23) output(7,better,71) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,23) output(47,better,36) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,23) output(71,worse,12) output(3,worse,53) output(3,worse,12) output(7,worse,12) output(36,worse,7) output(36,worse,12) output(47,worse,12) output(8,eq,19) output(8,eq,53) output(8,eq,12) output(19,eq,53) output(19,eq,12) output(3,eq,47) output(3,eq,7) output(53,eq,12) output(47,eq,7) output(36,eq,71) output(36,eq,23) output(71,eq,23)
Optimization: 19 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasOftenSold(1))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),10) preference(1,less(weight)) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(7,better,71) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,23) output(71,worse,12) output(71,worse,23) output(3,worse,53) output(3,worse,47) output(3,worse,12) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,12) output(36,worse,23) output(47,worse,12) output(8,eq,19) output(8,eq,53) output(8,eq,12) output(19,eq,53) output(19,eq,12) output(53,eq,12) output(36,eq,71)
Optimization: 18 10
Answer: 11
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasOftenSold(1))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),10) preference(1,less(weight)) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(7,better,71) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,23) output(36,better,71) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,23) output(71,worse,12) output(71,worse,23) output(3,worse,53) output(3,worse,47) output(3,worse,12) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,12) output(36,worse,23) output(47,worse,12) output(8,eq,19) output(8,eq,53) output(8,eq,12) output(19,eq,53) output(19,eq,12) output(53,eq,12)
Optimization: 17 11
Answer: 12
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,4),1,for(atom(hasOftenSold(0))),1) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,23) output(71,worse,12) output(3,worse,53) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(36,worse,23) output(47,worse,12) output(53,worse,12) output(8,eq,19) output(8,eq,12) output(19,eq,12) output(3,eq,47)
Optimization: 16 12
Answer: 13
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,12) output(3,worse,53) output(3,worse,47) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(36,worse,23) output(47,worse,12) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 15 12
Answer: 14
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,12) output(3,worse,53) output(3,worse,47) output(7,worse,71) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(36,worse,23) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,12)
Optimization: 14 12
Answer: 15
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasOftenSold(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,12) output(3,worse,53) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(36,worse,23) output(47,worse,12) output(8,eq,19) output(3,eq,47)
Optimization: 13 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,9),1,for(atom(hasOftenSold(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,23) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,12) output(3,worse,53) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(7,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(36,worse,23) output(47,worse,12) output(8,eq,19)
Optimization: 12 12
Answer: 17
preference(1,(1,4),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,1),1,for(atom(hasPrice(1))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasPrice(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,8),1,for(atom(hasStyle(0))),5) preference(1,(1,9),1,for(atom(hasOftenSold(0))),1) preference(1,(1,10),1,for(atom(hasOftenSold(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,23) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,12) output(53,better,23) output(7,worse,71) output(7,worse,12) output(8,worse,3) output(19,worse,3) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(8,eq,19) output(53,eq,47) output(53,eq,71) output(47,eq,71)
Optimization: 11 13
Answer: 18
preference(1,(1,12),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,9),1,for(atom(hasOftenSold(0))),5) preference(1,(1,10),1,for(atom(hasOftenSold(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,13),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,47) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,71) output(53,better,12) output(53,better,23) output(19,worse,3) output(19,worse,36) output(19,worse,7) output(47,worse,36) output(47,worse,7) output(53,worse,36) output(53,worse,7) output(8,eq,3) output(19,eq,53) output(36,eq,7)
Optimization: 10 12
Answer: 19
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,5),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(3)))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOftenSold(2))),9) preference(1,(1,9),1,for(atom(hasOftenSold(0))),2) preference(1,(1,10),1,for(atom(hasOftenSold(3))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasPrice(2))),5) preference(1,(1,13),1,for(atom(hasOiliness(3))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(19,worse,3) output(19,worse,53) output(19,worse,47) output(19,worse,36) output(8,eq,3) output(8,eq,53) output(3,eq,53) output(47,eq,36) output(71,eq,12)
Optimization: 9 14
Answer: 20
preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,5),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,6),1,for(neg(atom(hasOftenSold(3)))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOftenSold(2))),9) preference(1,(1,9),1,for(atom(hasOftenSold(0))),2) preference(1,(1,10),1,for(atom(hasOftenSold(3))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,13),1,for(atom(hasPrice(2))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(19,worse,3) output(19,worse,53) output(19,worse,47) output(19,worse,36) output(8,eq,53) output(47,eq,36) output(71,eq,12)
Optimization: 8 14
Answer: 21
preference(1,(1,2),1,for(neg(atom(hasMajorGrp(0)))),4) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(4)))),2) preference(1,(1,14),1,for(neg(atom(hasOftenSold(2)))),5) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,3),1,for(atom(hasPrice(2))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,9),1,for(atom(hasOftenSold(2))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,12),1,for(atom(hasOftenSold(0))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 22
preference(1,(1,2),1,for(neg(atom(hasPrice(3)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),9) preference(1,(1,12),1,for(neg(atom(hasOiliness(2)))),9) preference(1,(1,1),1,for(atom(hasStyle(0))),4) preference(1,(1,4),1,for(atom(hasOftenSold(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasOftenSold(1))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasOftenSold(0))),3) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23)
Optimization: 0 13
Answer: 23
preference(1,(1,2),1,for(neg(atom(hasPrice(3)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),9) preference(1,(1,12),1,for(neg(atom(hasOiliness(2)))),9) preference(1,(1,1),1,for(atom(hasStyle(0))),4) preference(1,(1,4),1,for(atom(hasOftenSold(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,8),1,for(atom(hasOftenSold(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasOftenSold(0))),3) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23)
Optimization: 0 12
Answer: 24
preference(1,(1,2),1,for(neg(atom(hasPrice(3)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),9) preference(1,(1,1),1,for(atom(hasStyle(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,4),1,for(atom(hasOftenSold(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,8),1,for(atom(hasOftenSold(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasOftenSold(0))),3) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23)
Optimization: 0 11
Answer: 25
preference(1,(1,2),1,for(neg(atom(hasPrice(3)))),2) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),9) preference(1,(1,1),1,for(atom(hasStyle(0))),4) preference(1,(1,4),1,for(atom(hasOftenSold(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,7),1,for(atom(hasOftenSold(0))),3) preference(1,(1,8),1,for(atom(hasOftenSold(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,19) output(8,better,3) output(8,better,53) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,53) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.115 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.171s (Solving: 283.79s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1147.738s
Threads      : 4        (Winner: 4)

Choices      : 4243657  (Domain: 723)
Conflicts    : 770994   (Analyzed: 770992)
Restarts     : 837      (Average: 921.14 Last: 70001)
Model-Level  : 1267.5  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 772669   (Deleted: 642681)
  Binary     : 236      (Ratio:   0.03%)
  Ternary    : 52       (Ratio:   0.01%)
  Conflict   : 770992   (Average Length: 1788.5 Ratio:  99.78%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 1677     (Average Length:  223.1 Ratio:   0.22%) 
  Distributed: 559      (Ratio:   0.07% Average LBD: 3.38) 
  Integrated : 1677     (Ratio: 300.00% Unit: 2 Average Jumps: 2.50)
Backjumps    : 770992   (Average:  3.45 Max: 2726 Sum: 2660528)
  Executed   : 770991   (Average:  3.45 Max: 2726 Sum: 2660503 Ratio: 100.00%)
  Bounded    : 1        (Average: 25.00 Max:  25 Sum:     25 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  10 :: not atom(hasStyle(1))  ; 
  9 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  1 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(2)) ; 
  5 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasStyle(0)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasPrice(0))  ; 
  7 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: not atom(hasStyle(1))  ; 
  4 :: not atom(hasOftenSold(3))  ; 
  5 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasPrice(2)) ; 
  9 :: atom(hasOiliness(3)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasPrice(0))  ; 
  7 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: not atom(hasStyle(1))  ; 
  4 :: not atom(hasOftenSold(3))  ; 
  2 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(1)) ; 
  4 :: not atom(hasMajorGrp(0))  ; 
  6 :: atom(hasPrice(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasMinorGrp(4))  ; 
  10 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: not atom(hasOftenSold(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(0)) ; 
  2 :: not atom(hasPrice(3))  ; 
  1 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  9 :: not atom(hasMinorGrp(6))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  9 :: not atom(hasOiliness(2))  ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(0)) ; 
  2 :: not atom(hasPrice(3))  ; 
  1 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  9 :: not atom(hasMinorGrp(6))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  9 :: not atom(hasOiliness(2))  ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(0)) ; 
  2 :: not atom(hasPrice(3))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  9 :: not atom(hasMinorGrp(6))  ; 
  1 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(0)) ; 
  2 :: not atom(hasPrice(3))  ; 
  1 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  9 :: not atom(hasMinorGrp(6))  ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.
