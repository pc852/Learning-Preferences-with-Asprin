asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(44,eq,17) output(44,eq,46) output(44,eq,10) output(44,eq,12) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(15,eq,17) output(15,eq,46) output(15,eq,10) output(15,eq,12) output(31,eq,2) output(31,eq,43) output(31,eq,60) output(31,eq,17) output(31,eq,46) output(31,eq,10) output(31,eq,12) output(2,eq,43) output(2,eq,60) output(2,eq,17) output(2,eq,46) output(2,eq,10) output(2,eq,12) output(43,eq,60) output(43,eq,17) output(43,eq,46) output(43,eq,10) output(43,eq,12) output(60,eq,17) output(60,eq,46) output(60,eq,10) output(60,eq,12) output(17,eq,46) output(17,eq,10) output(17,eq,12) output(46,eq,10) output(46,eq,12) output(10,eq,12)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(60,better,17) output(2,better,17) output(15,better,17) output(31,better,17) output(43,better,17) output(44,better,17) output(17,worse,46) output(17,worse,10) output(17,worse,12) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(44,eq,46) output(44,eq,10) output(44,eq,12) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(15,eq,46) output(15,eq,10) output(15,eq,12) output(31,eq,2) output(31,eq,43) output(31,eq,60) output(31,eq,46) output(31,eq,10) output(31,eq,12) output(2,eq,43) output(2,eq,60) output(2,eq,46) output(2,eq,10) output(2,eq,12) output(43,eq,60) output(43,eq,46) output(43,eq,10) output(43,eq,12) output(60,eq,46) output(60,eq,10) output(60,eq,12) output(46,eq,10) output(46,eq,12) output(10,eq,12)
Optimization: 39 1
Answer: 3
preference(1,(1,13),1,for(atom(hasOftenSold(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(60,better,17) output(2,better,17) output(15,better,31) output(15,better,17) output(43,better,17) output(44,better,31) output(44,better,17) output(17,worse,46) output(17,worse,10) output(17,worse,12) output(31,worse,2) output(31,worse,43) output(31,worse,60) output(31,worse,46) output(31,worse,10) output(31,worse,12) output(44,eq,15) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(44,eq,46) output(44,eq,10) output(44,eq,12) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(15,eq,46) output(15,eq,10) output(15,eq,12) output(31,eq,17) output(2,eq,43) output(2,eq,60) output(2,eq,46) output(2,eq,10) output(2,eq,12) output(43,eq,60) output(43,eq,46) output(43,eq,10) output(43,eq,12) output(60,eq,46) output(60,eq,10) output(60,eq,12) output(46,eq,10) output(46,eq,12) output(10,eq,12)
Optimization: 38 2
Answer: 4
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(2,better,60) output(2,better,46) output(15,better,60) output(15,better,46) output(17,better,46) output(31,better,60) output(31,better,46) output(43,better,60) output(43,better,46) output(44,better,60) output(44,better,46) output(60,worse,17) output(60,worse,10) output(60,worse,12) output(46,worse,10) output(46,worse,12) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,17) output(44,eq,10) output(44,eq,12) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,17) output(15,eq,10) output(15,eq,12) output(31,eq,2) output(31,eq,43) output(31,eq,17) output(31,eq,10) output(31,eq,12) output(2,eq,43) output(2,eq,17) output(2,eq,10) output(2,eq,12) output(43,eq,17) output(43,eq,10) output(43,eq,12) output(60,eq,46) output(17,eq,10) output(17,eq,12) output(10,eq,12)
Optimization: 34 2
Answer: 5
preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(2,better,17) output(2,better,46) output(15,better,17) output(15,better,46) output(31,better,17) output(31,better,46) output(43,better,17) output(43,better,46) output(44,better,17) output(44,better,46) output(17,worse,10) output(17,worse,12) output(46,worse,10) output(46,worse,12) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(44,eq,10) output(44,eq,12) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(15,eq,10) output(15,eq,12) output(31,eq,2) output(31,eq,43) output(31,eq,60) output(31,eq,10) output(31,eq,12) output(2,eq,43) output(2,eq,60) output(2,eq,10) output(2,eq,12) output(43,eq,60) output(43,eq,10) output(43,eq,12) output(60,eq,10) output(60,eq,12) output(17,eq,46) output(10,eq,12)
Optimization: 33 2
Answer: 6
preference(1,(1,11),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasPrice(3))),10) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,12) output(2,better,17) output(2,better,46) output(2,better,12) output(10,better,12) output(15,better,17) output(15,better,46) output(15,better,12) output(31,better,17) output(31,better,46) output(31,better,12) output(43,better,17) output(43,better,46) output(43,better,12) output(44,better,17) output(44,better,46) output(44,better,12) output(17,worse,10) output(46,worse,10) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(44,eq,10) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(15,eq,10) output(31,eq,2) output(31,eq,43) output(31,eq,60) output(31,eq,10) output(2,eq,43) output(2,eq,60) output(2,eq,10) output(43,eq,60) output(43,eq,10) output(60,eq,10) output(17,eq,46) output(17,eq,12) output(46,eq,12)
Optimization: 26 3
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(60,better,17) output(60,better,10) output(60,better,12) output(2,better,17) output(2,better,10) output(2,better,12) output(15,better,17) output(15,better,10) output(15,better,12) output(31,better,17) output(31,better,10) output(31,better,12) output(43,better,17) output(43,better,10) output(43,better,12) output(44,better,17) output(44,better,10) output(44,better,12) output(46,better,10) output(46,better,12) output(17,worse,46) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(44,eq,46) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(15,eq,46) output(31,eq,2) output(31,eq,43) output(31,eq,60) output(31,eq,46) output(2,eq,43) output(2,eq,60) output(2,eq,46) output(43,eq,60) output(43,eq,46) output(60,eq,46) output(17,eq,10) output(17,eq,12) output(10,eq,12)
Optimization: 25 2
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(3))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasOftenSold(3))),10) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,10) output(60,better,12) output(15,better,2) output(15,better,17) output(15,better,46) output(15,better,10) output(15,better,12) output(31,better,2) output(31,better,17) output(31,better,46) output(31,better,10) output(31,better,12) output(43,better,17) output(43,better,46) output(43,better,10) output(43,better,12) output(44,better,2) output(44,better,17) output(44,better,46) output(44,better,10) output(44,better,12) output(2,worse,43) output(2,worse,60) output(44,eq,15) output(44,eq,31) output(44,eq,43) output(44,eq,60) output(15,eq,31) output(15,eq,43) output(15,eq,60) output(31,eq,43) output(31,eq,60) output(2,eq,17) output(2,eq,46) output(2,eq,10) output(2,eq,12) output(43,eq,60) output(17,eq,46) output(17,eq,10) output(17,eq,12) output(46,eq,10) output(46,eq,12) output(10,eq,12)
Optimization: 22 5
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasPrice(3))),10) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,10) output(60,better,12) output(2,better,17) output(2,better,46) output(2,better,10) output(2,better,12) output(15,better,17) output(15,better,46) output(15,better,10) output(15,better,12) output(31,better,17) output(31,better,46) output(31,better,10) output(31,better,12) output(43,better,17) output(43,better,46) output(43,better,10) output(43,better,12) output(44,better,17) output(44,better,46) output(44,better,10) output(44,better,12) output(44,eq,15) output(44,eq,31) output(44,eq,2) output(44,eq,43) output(44,eq,60) output(15,eq,31) output(15,eq,2) output(15,eq,43) output(15,eq,60) output(31,eq,2) output(31,eq,43) output(31,eq,60) output(2,eq,43) output(2,eq,60) output(43,eq,60) output(17,eq,46) output(17,eq,10) output(17,eq,12) output(46,eq,10) output(46,eq,12) output(10,eq,12)
Optimization: 21 4
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasPrice(3)))),1) preference(1,(1,9),1,for(neg(atom(hasOftenSold(0)))),9) preference(1,(1,12),1,for(neg(atom(hasOiliness(2)))),9) preference(1,(1,14),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),10) preference(1,(1,4),1,for(atom(hasOftenSold(0))),10) preference(1,(1,5),1,for(atom(hasOftenSold(3))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,11),1,for(atom(hasPrice(3))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),3) preference(1,less(weight)) output(60,better,46) output(60,better,10) output(60,better,12) output(2,better,46) output(2,better,10) output(15,better,31) output(15,better,2) output(15,better,43) output(15,better,46) output(15,better,10) output(15,better,12) output(17,better,46) output(17,better,10) output(17,better,12) output(31,better,2) output(31,better,43) output(31,better,46) output(31,better,10) output(43,better,46) output(43,better,10) output(44,better,31) output(44,better,2) output(44,better,43) output(44,better,46) output(44,better,10) output(44,better,12) output(46,better,10) output(2,worse,60) output(2,worse,17) output(2,worse,12) output(10,worse,12) output(15,worse,60) output(15,worse,17) output(31,worse,60) output(31,worse,17) output(31,worse,12) output(43,worse,60) output(43,worse,17) output(43,worse,12) output(44,worse,15) output(44,worse,60) output(44,worse,17) output(46,worse,12) output(2,eq,43) output(60,eq,17)
Optimization: 18 14
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,9),1,for(neg(atom(hasOftenSold(0)))),9) preference(1,(1,13),1,for(neg(atom(hasOiliness(2)))),9) preference(1,(1,14),1,for(neg(atom(hasPrice(1)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,5),1,for(atom(hasOftenSold(3))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,7),1,for(atom(hasOftenSold(0))),10) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,11),1,for(atom(hasPrice(3))),7) preference(1,(1,12),1,for(atom(hasOftenSold(2))),2) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,10) output(60,better,12) output(2,better,46) output(2,better,10) output(15,better,31) output(15,better,2) output(15,better,43) output(15,better,46) output(15,better,10) output(15,better,12) output(17,better,46) output(17,better,10) output(17,better,12) output(31,better,2) output(31,better,43) output(31,better,46) output(31,better,10) output(31,better,12) output(43,better,46) output(43,better,10) output(44,better,31) output(44,better,2) output(44,better,43) output(44,better,46) output(44,better,10) output(44,better,12) output(46,better,10) output(2,worse,60) output(2,worse,17) output(10,worse,12) output(15,worse,60) output(31,worse,60) output(31,worse,17) output(43,worse,60) output(43,worse,17) output(44,worse,15) output(44,worse,60) output(44,worse,17) output(46,worse,12) output(15,eq,17) output(2,eq,43) output(2,eq,12) output(43,eq,12)
Optimization: 16 14
Answer: 12
preference(1,(1,3),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,12),1,for(neg(atom(hasMajorGrp(0)))),7) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,5),1,for(atom(hasPrice(3))),7) preference(1,(1,6),1,for(atom(hasOftenSold(3))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,11),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,14),1,for(atom(hasOftenSold(1))),1) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,10) output(60,better,12) output(2,better,43) output(2,better,60) output(2,better,17) output(2,better,46) output(2,better,10) output(2,better,12) output(10,better,12) output(15,better,31) output(15,better,2) output(15,better,43) output(15,better,60) output(15,better,17) output(15,better,46) output(15,better,10) output(15,better,12) output(17,better,46) output(17,better,10) output(17,better,12) output(31,better,2) output(31,better,43) output(31,better,60) output(31,better,17) output(31,better,46) output(31,better,10) output(31,better,12) output(43,better,60) output(43,better,17) output(43,better,46) output(43,better,10) output(43,better,12) output(44,better,15) output(44,better,31) output(44,better,2) output(44,better,43) output(44,better,60) output(44,better,17) output(44,better,46) output(44,better,10) output(44,better,12) output(46,better,10) output(46,better,12)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 13
preference(1,(1,2),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,6),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,11),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,1),1,for(atom(hasOftenSold(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),3) preference(1,(1,7),1,for(atom(hasOftenSold(3))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,9),1,for(atom(hasPrice(3))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,10) output(60,better,12) output(2,better,43) output(2,better,60) output(2,better,17) output(2,better,46) output(2,better,10) output(2,better,12) output(10,better,12) output(15,better,31) output(15,better,2) output(15,better,43) output(15,better,60) output(15,better,17) output(15,better,46) output(15,better,10) output(15,better,12) output(17,better,46) output(17,better,10) output(17,better,12) output(31,better,2) output(31,better,43) output(31,better,60) output(31,better,17) output(31,better,46) output(31,better,10) output(31,better,12) output(43,better,60) output(43,better,17) output(43,better,46) output(43,better,10) output(43,better,12) output(44,better,15) output(44,better,31) output(44,better,2) output(44,better,43) output(44,better,60) output(44,better,17) output(44,better,46) output(44,better,10) output(44,better,12) output(46,better,10) output(46,better,12)
Optimization: 0 12
Answer: 14
preference(1,(1,2),1,for(neg(atom(hasMajorGrp(0)))),6) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),3) preference(1,(1,11),1,for(neg(atom(hasPrice(0)))),9) preference(1,(1,3),1,for(atom(hasStyle(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,7),1,for(atom(hasOftenSold(3))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,9),1,for(atom(hasOiliness(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasOftenSold(1))),7) preference(1,less(weight)) output(60,better,17) output(60,better,46) output(60,better,10) output(60,better,12) output(2,better,43) output(2,better,60) output(2,better,17) output(2,better,46) output(2,better,10) output(2,better,12) output(10,better,12) output(15,better,31) output(15,better,2) output(15,better,43) output(15,better,60) output(15,better,17) output(15,better,46) output(15,better,10) output(15,better,12) output(17,better,46) output(17,better,10) output(17,better,12) output(31,better,2) output(31,better,43) output(31,better,60) output(31,better,17) output(31,better,46) output(31,better,10) output(31,better,12) output(43,better,60) output(43,better,17) output(43,better,46) output(43,better,10) output(43,better,12) output(44,better,15) output(44,better,31) output(44,better,2) output(44,better,43) output(44,better,60) output(44,better,17) output(44,better,46) output(44,better,10) output(44,better,12) output(46,better,10) output(46,better,12)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.132 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 298.152s (Solving: 283.05s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1144.716s
Threads      : 4        (Winner: 4)

Choices      : 4609092  (Domain: 851)
Conflicts    : 878463   (Analyzed: 878461)
Restarts     : 928      (Average: 946.62 Last: 48005)
Model-Level  : 1153.7  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 880234   (Deleted: 775936)
  Binary     : 256      (Ratio:   0.03%)
  Ternary    : 86       (Ratio:   0.01%)
  Conflict   : 878461   (Average Length: 1926.8 Ratio:  99.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 1773     (Average Length:  207.2 Ratio:   0.20%) 
  Distributed: 591      (Ratio:   0.07% Average LBD: 3.30) 
  Integrated : 1773     (Ratio: 300.00% Unit: 1 Average Jumps: 15.00)
Backjumps    : 878461   (Average:  3.10 Max: 3596 Sum: 2722587)
  Executed   : 878460   (Average:  3.10 Max: 3596 Sum: 2722558 Ratio: 100.00%)
  Bounded    : 1        (Average: 29.00 Max:  29 Sum:     29 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPrice(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasPrice(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasPrice(3))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOftenSold(0))  ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(3)) ; 
  9 :: not atom(hasOiliness(2))  ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(2))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasOftenSold(0))  ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(3)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  9 :: not atom(hasOiliness(2))  ; 
  1 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  1 :: not atom(hasStyle(1))  ; 
  7 :: atom(hasPrice(3)) ; 
  4 :: atom(hasOftenSold(3)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasStyle(0)) ; 
  7 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOftenSold(1)) ; 
  6 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  9 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  9 :: not atom(hasPrice(0))  ; 
  7 :: atom(hasOftenSold(1)) 
}.
