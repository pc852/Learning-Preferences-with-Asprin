asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(5,eq,6) output(5,eq,1) output(5,eq,9) output(5,eq,4) output(5,eq,8) output(5,eq,7) output(5,eq,2) output(5,eq,3) output(6,eq,1) output(6,eq,9) output(6,eq,4) output(6,eq,8) output(6,eq,7) output(6,eq,2) output(6,eq,3) output(1,eq,9) output(1,eq,4) output(1,eq,8) output(1,eq,7) output(1,eq,2) output(1,eq,3) output(9,eq,4) output(9,eq,8) output(9,eq,7) output(9,eq,2) output(9,eq,3) output(4,eq,8) output(4,eq,7) output(4,eq,2) output(4,eq,3) output(8,eq,7) output(8,eq,2) output(8,eq,3) output(7,eq,2) output(7,eq,3) output(2,eq,3)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,8) output(4,better,7) output(4,better,2) output(4,better,3) output(6,better,1) output(6,better,7) output(9,better,7) output(8,better,7) output(5,worse,4) output(6,worse,4) output(1,worse,4) output(9,worse,4) output(5,worse,2) output(1,worse,2) output(7,worse,2) output(5,worse,6) output(5,worse,9) output(1,worse,9) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(5,eq,1) output(5,eq,7) output(6,eq,9) output(6,eq,8) output(6,eq,2) output(6,eq,3) output(1,eq,7) output(9,eq,8) output(9,eq,2) output(9,eq,3) output(8,eq,2) output(8,eq,3) output(2,eq,3)
Optimization: 28 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(4,better,8) output(4,better,7) output(4,better,2) output(4,better,3) output(6,better,1) output(6,better,9) output(6,better,8) output(6,better,7) output(6,better,2) output(6,better,3) output(9,better,7) output(8,better,7) output(5,worse,4) output(1,worse,4) output(9,worse,4) output(5,worse,2) output(1,worse,2) output(7,worse,2) output(5,worse,6) output(5,worse,7) output(1,worse,7) output(5,worse,9) output(1,worse,9) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(5,eq,1) output(6,eq,4) output(9,eq,8) output(9,eq,2) output(9,eq,3) output(8,eq,2) output(8,eq,3) output(2,eq,3)
Optimization: 24 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(4,better,7) output(6,better,1) output(6,better,4) output(6,better,8) output(6,better,7) output(6,better,2) output(6,better,3) output(9,better,4) output(9,better,8) output(9,better,7) output(9,better,2) output(9,better,3) output(8,better,7) output(5,worse,4) output(1,worse,4) output(5,worse,2) output(1,worse,2) output(7,worse,2) output(5,worse,6) output(5,worse,9) output(1,worse,9) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(5,eq,1) output(5,eq,7) output(6,eq,9) output(1,eq,7) output(4,eq,8) output(4,eq,2) output(4,eq,3) output(8,eq,2) output(8,eq,3) output(2,eq,3)
Optimization: 23 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(5,better,6) output(5,better,9) output(5,better,4) output(5,better,8) output(5,better,2) output(5,better,3) output(7,better,2) output(7,better,3) output(9,better,4) output(9,better,8) output(9,better,2) output(9,better,3) output(1,better,9) output(1,better,4) output(1,better,2) output(1,better,3) output(1,better,8) output(6,worse,7) output(9,worse,7) output(4,worse,7) output(8,worse,7) output(6,worse,9) output(6,worse,1) output(5,eq,1) output(5,eq,7) output(6,eq,4) output(6,eq,8) output(6,eq,2) output(6,eq,3) output(1,eq,7) output(4,eq,8) output(4,eq,2) output(4,eq,3) output(8,eq,2) output(8,eq,3) output(2,eq,3)
Optimization: 19 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(isRoe(1))),()) preference(1,poset) output(5,better,6) output(5,better,9) output(5,better,4) output(5,better,8) output(5,better,2) output(5,better,3) output(6,better,9) output(6,better,4) output(6,better,8) output(6,better,2) output(6,better,3) output(7,better,2) output(7,better,3) output(1,better,9) output(1,better,4) output(1,better,2) output(1,better,3) output(1,better,8) output(6,worse,7) output(9,worse,7) output(4,worse,7) output(8,worse,7) output(6,worse,1) output(5,eq,1) output(5,eq,7) output(1,eq,7) output(9,eq,4) output(9,eq,8) output(9,eq,2) output(9,eq,3) output(4,eq,8) output(4,eq,2) output(4,eq,3) output(8,eq,2) output(8,eq,3) output(2,eq,3)
Optimization: 18 1
Answer: 7
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(5,better,6) output(5,better,9) output(5,better,4) output(5,better,8) output(5,better,2) output(5,better,3) output(6,better,4) output(6,better,8) output(6,better,2) output(6,better,3) output(7,better,2) output(7,better,3) output(9,better,4) output(9,better,8) output(9,better,2) output(9,better,3) output(1,better,9) output(1,better,4) output(1,better,2) output(1,better,3) output(1,better,8) output(6,worse,7) output(9,worse,7) output(4,worse,7) output(8,worse,7) output(6,worse,1) output(5,eq,1) output(5,eq,7) output(6,eq,9) output(1,eq,7) output(4,eq,8) output(4,eq,2) output(4,eq,3) output(8,eq,2) output(8,eq,3) output(2,eq,3)
Optimization: 15 1
Answer: 8
preference(1,(1,2),1,for(atom(isOctopus(1))),()) preference(1,(1,5),1,for(atom(isRaw(1))),()) preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(isRoe(1))),()) preference(1,(1,9),1,for(atom(isRaw(1))),()) preference(1,(1,12),1,for(atom(isSweet(1))),()) preference(1,(1,2),2,for(atom(isRaw(1))),()) preference(1,(1,5),2,for(atom(isSweet(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,9),2,for(atom(isUnique(1))),()) preference(1,(1,12),2,for(atom(isTamago(1))),()) preference(1,poset) output(4,better,8) output(4,better,7) output(4,better,2) output(5,better,1) output(5,better,9) output(5,better,4) output(5,better,8) output(5,better,7) output(5,better,2) output(5,better,3) output(6,better,1) output(6,better,9) output(6,better,4) output(6,better,8) output(6,better,7) output(6,better,2) output(6,better,3) output(9,better,8) output(9,better,7) output(9,better,2) output(9,better,3) output(8,better,7) output(1,worse,4) output(1,worse,2) output(7,worse,2) output(1,worse,7) output(1,worse,9) output(1,worse,3) output(8,worse,3) output(7,worse,3) output(2,worse,3) output(1,worse,8) output(8,eq,2) output(5,unc,6) output(9,unc,4) output(4,unc,3)
Optimization: 14 6
Answer: 9
preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,5),1,for(atom(isRaw(1))),()) preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(isOctopus(1))),()) preference(1,(1,10),1,for(atom(isMaguro(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(isSweet(1))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,5),2,for(atom(isUnique(1))),()) preference(1,(1,6),2,for(atom(isRoe(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(isSweet(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),2,for(atom(isTamago(1))),()) preference(1,poset) output(4,better,8) output(4,better,7) output(5,better,6) output(5,better,1) output(5,better,9) output(5,better,4) output(5,better,8) output(5,better,7) output(5,better,2) output(5,better,3) output(2,better,3) output(6,better,1) output(6,better,4) output(6,better,8) output(6,better,7) output(6,better,2) output(6,better,3) output(9,better,4) output(9,better,8) output(9,better,7) output(9,better,2) output(9,better,3) output(8,better,7) output(1,worse,4) output(1,worse,2) output(4,worse,2) output(8,worse,2) output(7,worse,2) output(1,worse,7) output(1,worse,9) output(1,worse,3) output(8,worse,3) output(7,worse,3) output(1,worse,8) output(6,unc,9) output(4,unc,3)
Optimization: 13 7
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,3),1,for(atom(isMaguro(1))),()) preference(1,(1,4),1,for(atom(isUrchin(1))),()) preference(1,(1,5),1,for(atom(isRoe(1))),()) preference(1,(1,6),1,for(atom(isUnique(1))),()) preference(1,(1,8),1,for(atom(isUnique(1))),()) preference(1,(1,9),1,for(atom(isFattyFish(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(isOctopus(1))),()) preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,1),2,for(atom(isCreamy(1))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,3),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(isRaw(0))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(isRaw(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(isUrchin(1))),()) preference(1,(1,10),2,for(atom(isOctopus(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,7) output(4,better,3) output(5,better,7) output(5,better,3) output(2,better,3) output(6,better,1) output(6,better,9) output(6,better,4) output(6,better,8) output(6,better,7) output(6,better,2) output(6,better,3) output(7,better,3) output(9,better,4) output(9,better,8) output(9,better,7) output(9,better,2) output(9,better,3) output(1,better,4) output(1,better,7) output(1,better,3) output(8,better,7) output(8,better,3) output(1,better,8) output(5,worse,2) output(1,worse,2) output(4,worse,2) output(8,worse,2) output(7,worse,2) output(5,worse,6) output(5,worse,9) output(1,worse,9) output(5,worse,1) output(5,worse,8) output(4,worse,8) output(5,unc,4)
Optimization: 12 11
Answer: 11
preference(1,(1,1),1,for(atom(isUnique(1))),()) preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,3),1,for(atom(isRoe(1))),()) preference(1,(1,4),1,for(atom(isUrchin(1))),()) preference(1,(1,5),1,for(atom(isUnique(1))),()) preference(1,(1,6),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isShrimp(1))),()) preference(1,(1,9),1,for(atom(isFattyFish(1))),()) preference(1,(1,10),1,for(atom(isUnique(1))),()) preference(1,(1,11),1,for(atom(isUnique(1))),()) preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,(1,2),2,for(atom(isUrchin(1))),()) preference(1,(1,3),2,for(atom(isShrimp(1))),()) preference(1,(1,4),2,for(atom(isFattyFish(1))),()) preference(1,(1,5),2,for(atom(isFattyFish(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,9),2,for(atom(isRaw(0))),()) preference(1,(1,10),2,for(atom(isOctopus(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,8) output(4,better,7) output(4,better,2) output(4,better,3) output(5,better,7) output(5,better,2) output(5,better,3) output(6,better,1) output(6,better,9) output(6,better,4) output(6,better,8) output(6,better,7) output(6,better,2) output(6,better,3) output(7,better,2) output(7,better,3) output(9,better,4) output(9,better,8) output(9,better,7) output(9,better,2) output(9,better,3) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,8) output(1,worse,4) output(5,worse,6) output(5,worse,9) output(1,worse,9) output(2,worse,3) output(5,unc,1) output(5,unc,4) output(5,unc,8) output(8,unc,7) output(8,unc,2) output(8,unc,3)
Optimization: 11 11
Answer: 12
preference(1,(1,1),1,for(atom(isUrchin(1))),()) preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasPrice(0))),()) preference(1,(1,5),1,for(atom(isShrimp(1))),()) preference(1,(1,6),1,for(atom(isRaw(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),1,for(atom(hasPrice(0))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(isOctopus(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(isButtery(1))),()) preference(1,(1,1),2,for(atom(isShrimp(1))),()) preference(1,(1,2),2,for(atom(isFattyFish(1))),()) preference(1,(1,3),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(isRoe(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(isButtery(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(isRaw(0))),()) preference(1,(1,10),2,for(atom(isUrchin(1))),()) preference(1,(1,11),2,for(atom(isUnique(1))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(4,better,8) output(4,better,7) output(4,better,2) output(4,better,3) output(5,better,6) output(5,better,1) output(5,better,9) output(5,better,4) output(5,better,8) output(5,better,7) output(5,better,2) output(5,better,3) output(2,better,3) output(6,better,1) output(6,better,8) output(6,better,2) output(6,better,3) output(7,better,2) output(7,better,3) output(9,better,8) output(9,better,7) output(9,better,2) output(9,better,3) output(1,better,2) output(1,better,3) output(8,better,2) output(8,better,3) output(6,worse,4) output(1,worse,4) output(9,worse,4) output(1,worse,7) output(8,worse,7) output(6,worse,9) output(1,worse,9) output(1,worse,8) output(6,unc,7)
Optimization: 9 12
SATISFIABLE

Models       : 12+
  Optimum    : unknown
Optimization : 9 12
Calls        : 1
Time         : 910.999s (Solving: 902.74s 1st Model: 1.45s Unsat: 0.00s)
CPU Time     : 3617.912s
Threads      : 4        (Winner: 0)

Choices      : 11613406 (Domain: 3289)
Conflicts    : 239257   (Analyzed: 239257)
Restarts     : 315      (Average: 759.55 Last: 12374)
Model-Level  : 47564.1 
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 39371604 (Deleted: 39183417)
  Binary     : 2049     (Ratio:   0.01%)
  Ternary    : 72483    (Ratio:   0.18%)
  Conflict   : 239257   (Average Length: 1250.7 Ratio:   0.61%) 
  Loop       : 39053923 (Average Length:  200.1 Ratio:  99.19%) 
  Other      : 78424    (Average Length:    3.4 Ratio:   0.20%) 
  Distributed: 26148    (Ratio:   0.07% Average LBD: 2.85) 
  Integrated : 78444    (Ratio: 300.00% Unit: 130 Average Jumps: 10488.60)
Backjumps    : 239257   (Average: 37.48 Max: 139433 Sum: 8967284)
  Executed   : 239233   (Average: 37.48 Max: 139433 Sum: 8967246 Ratio: 100.00%)
  Bounded    : 24       (Average:  1.58 Max:   2 Sum:     38 Ratio:   0.00%)

Rules        : 1508145 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28635   
Bodies       : 1146242 
  Count      : 48      
Equivalences : 32184    (Atom=Atom: 5188 Body=Body: 7868 Other: 19128)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103158  (Eliminated:    0 Frozen: 1092646)
Constraints  : 6431718  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isRoe(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isOctopus(1)) >> atom(isRaw(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) ; 
  atom(isRaw(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isRoe(1)) >> atom(isRaw(1)) ; 
  atom(isRaw(1)) >> atom(isUnique(1)) ; 
  atom(isSweet(1)) >> atom(isTamago(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isUnique(1)) >> atom(isMaguro(1)) ; 
  atom(isRaw(1)) >> atom(isUnique(1)) ; 
  atom(isRaw(1)) >> atom(isRoe(1)) ; 
  atom(isOctopus(1)) >> atom(isRaw(1)) ; 
  atom(isMaguro(1)) >> atom(isSweet(1)) ; 
  atom(isMaguro(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isSweet(1)) >> atom(isTamago(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(isCreamy(1)) ; 
  atom(isUnique(1)) >> atom(isMaguro(1)) ; 
  atom(isMaguro(1)) >> atom(isFattyFish(1)) ; 
  atom(isUrchin(1)) >> atom(isRaw(0)) ; 
  atom(isRoe(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isUnique(1)) >> atom(isRaw(0)) ; 
  atom(isUnique(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isFattyFish(1)) >> atom(isUrchin(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isOctopus(1)) ; 
  atom(isOctopus(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isRaw(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isUnique(1)) >> atom(hasPrice(0)) ; 
  atom(isUnique(1)) >> atom(isUrchin(1)) ; 
  atom(isRoe(1)) >> atom(isShrimp(1)) ; 
  atom(isUrchin(1)) >> atom(isFattyFish(1)) ; 
  atom(isUnique(1)) >> atom(isFattyFish(1)) ; 
  atom(isUrchin(1)) >> atom(hasPrice(0)) ; 
  atom(isShrimp(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isFattyFish(1)) >> atom(isRaw(0)) ; 
  atom(isUnique(1)) >> atom(isOctopus(1)) ; 
  atom(isUnique(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isRaw(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isUrchin(1)) >> atom(isShrimp(1)) ; 
  atom(isUnique(1)) >> atom(isFattyFish(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(0)) >> atom(isRoe(1)) ; 
  atom(isShrimp(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isButtery(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(isRaw(0)) ; 
  atom(isOctopus(1)) >> atom(isUrchin(1)) ; 
  atom(isMaguro(1)) >> atom(isUnique(1)) ; 
  atom(isButtery(1)) >> atom(hasPrice(0)) 
}.
Time limit reached
