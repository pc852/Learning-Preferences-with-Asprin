asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(2,eq,3) output(2,eq,5) output(2,eq,8) output(2,eq,7) output(2,eq,1) output(2,eq,4) output(2,eq,6) output(2,eq,9) output(3,eq,5) output(3,eq,8) output(3,eq,7) output(3,eq,1) output(3,eq,4) output(3,eq,6) output(3,eq,9) output(5,eq,8) output(5,eq,7) output(5,eq,1) output(5,eq,4) output(5,eq,6) output(5,eq,9) output(8,eq,7) output(8,eq,1) output(8,eq,4) output(8,eq,6) output(8,eq,9) output(7,eq,1) output(7,eq,4) output(7,eq,6) output(7,eq,9) output(1,eq,4) output(1,eq,6) output(1,eq,9) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(2,better,5) output(2,better,7) output(2,better,1) output(8,better,7) output(3,better,7) output(3,better,1) output(8,better,1) output(3,better,5) output(5,worse,4) output(7,worse,4) output(1,worse,4) output(2,worse,6) output(3,worse,6) output(5,worse,6) output(8,worse,6) output(7,worse,6) output(1,worse,6) output(4,worse,6) output(2,worse,9) output(3,worse,9) output(5,worse,9) output(8,worse,9) output(7,worse,9) output(1,worse,9) output(4,worse,9) output(5,worse,8) output(2,eq,3) output(2,eq,8) output(2,eq,4) output(3,eq,8) output(3,eq,4) output(5,eq,7) output(5,eq,1) output(8,eq,4) output(7,eq,1) output(6,eq,9)
Optimization: 28 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,6) output(4,better,9) output(2,better,5) output(2,better,7) output(2,better,1) output(8,better,7) output(3,better,7) output(3,better,1) output(8,better,1) output(3,better,5) output(2,worse,4) output(3,worse,4) output(5,worse,4) output(8,worse,4) output(7,worse,4) output(1,worse,4) output(5,worse,6) output(7,worse,6) output(1,worse,6) output(5,worse,9) output(7,worse,9) output(1,worse,9) output(5,worse,8) output(2,eq,3) output(2,eq,8) output(2,eq,6) output(2,eq,9) output(3,eq,8) output(3,eq,6) output(3,eq,9) output(5,eq,7) output(5,eq,1) output(8,eq,6) output(8,eq,9) output(7,eq,1) output(6,eq,9)
Optimization: 26 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(5,better,7) output(5,better,1) output(2,better,5) output(2,better,7) output(2,better,1) output(8,better,7) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(3,better,9) output(8,better,1) output(3,better,5) output(5,worse,4) output(7,worse,4) output(1,worse,4) output(5,worse,6) output(7,worse,6) output(1,worse,6) output(5,worse,9) output(7,worse,9) output(1,worse,9) output(5,worse,8) output(2,worse,3) output(2,eq,8) output(2,eq,4) output(2,eq,6) output(2,eq,9) output(8,eq,4) output(8,eq,6) output(8,eq,9) output(7,eq,1) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 22 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,5) output(2,better,7) output(2,better,1) output(2,better,4) output(2,better,6) output(2,better,9) output(8,better,7) output(8,better,4) output(8,better,6) output(8,better,9) output(3,better,7) output(3,better,1) output(8,better,1) output(3,better,5) output(5,worse,4) output(7,worse,4) output(1,worse,4) output(5,worse,6) output(7,worse,6) output(1,worse,6) output(5,worse,9) output(7,worse,9) output(1,worse,9) output(3,worse,8) output(5,worse,8) output(5,worse,1) output(7,worse,1) output(2,eq,8) output(3,eq,4) output(3,eq,6) output(3,eq,9) output(5,eq,7) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 21 1
Answer: 6
preference(1,(1,12),1,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(5,better,8) output(5,better,7) output(5,better,1) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,8) output(2,better,4) output(7,better,4) output(1,better,4) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(3,better,9) output(2,worse,5) output(8,worse,6) output(4,worse,6) output(8,worse,7) output(8,worse,9) output(4,worse,9) output(2,worse,3) output(8,worse,1) output(2,eq,7) output(2,eq,1) output(2,eq,6) output(2,eq,9) output(3,eq,5) output(8,eq,4) output(7,eq,1) output(7,eq,6) output(7,eq,9) output(1,eq,6) output(1,eq,9) output(6,eq,9)
Optimization: 20 1
Answer: 7
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(5,better,8) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,3) output(2,better,4) output(2,better,6) output(2,better,9) output(7,better,4) output(7,better,6) output(7,better,9) output(8,better,4) output(8,better,6) output(8,better,9) output(1,better,4) output(1,better,6) output(1,better,9) output(2,worse,5) output(3,worse,5) output(2,worse,7) output(3,worse,7) output(8,worse,7) output(2,worse,1) output(3,worse,8) output(3,worse,1) output(5,worse,1) output(7,worse,1) output(8,worse,1) output(2,eq,8) output(3,eq,4) output(3,eq,6) output(3,eq,9) output(5,eq,7) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 19 1
Answer: 8
preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(5,better,8) output(5,better,7) output(5,better,1) output(5,better,4) output(5,better,6) output(2,better,7) output(2,better,4) output(2,better,6) output(8,better,7) output(8,better,4) output(8,better,6) output(1,better,4) output(1,better,6) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(2,worse,5) output(2,worse,9) output(8,worse,9) output(7,worse,9) output(1,worse,9) output(4,worse,9) output(6,worse,9) output(7,worse,1) output(2,worse,3) output(2,eq,8) output(2,eq,1) output(3,eq,5) output(3,eq,9) output(5,eq,9) output(8,eq,1) output(7,eq,4) output(7,eq,6) output(4,eq,6)
Optimization: 18 1
Answer: 9
preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(5,better,7) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,3) output(2,better,5) output(2,better,7) output(2,better,4) output(2,better,6) output(2,better,9) output(8,better,7) output(8,better,4) output(8,better,6) output(8,better,9) output(1,better,4) output(1,better,6) output(1,better,9) output(3,better,7) output(3,better,4) output(3,better,6) output(3,better,9) output(3,worse,8) output(3,worse,1) output(5,worse,8) output(5,worse,1) output(7,worse,1) output(2,eq,8) output(2,eq,1) output(3,eq,5) output(8,eq,1) output(7,eq,4) output(7,eq,6) output(7,eq,9) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 15 1
Answer: 10
preference(1,(1,1),1,for(atom(isCreamy(1))),()) preference(1,(1,2),1,for(atom(isChewy(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(isCreamy(1))),()) preference(1,(1,6),1,for(atom(isCreamy(1))),()) preference(1,(1,7),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,9),1,for(atom(isUrchin(1))),()) preference(1,(1,10),1,for(atom(isButtery(1))),()) preference(1,(1,11),1,for(atom(isMaguro(1))),()) preference(1,(1,12),1,for(atom(isCreamy(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(isCreamy(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),2,for(atom(isMaguro(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(isUrchin(1))),()) preference(1,(1,7),2,for(atom(isRaw(0))),()) preference(1,(1,8),2,for(atom(isMaguro(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),2,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(isButtery(1))),()) preference(1,poset) output(4,better,6) output(4,better,9) output(5,better,8) output(5,better,7) output(5,better,1) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,1) output(2,better,6) output(2,better,9) output(6,better,9) output(7,better,1) output(7,better,6) output(7,better,9) output(8,better,6) output(8,better,9) output(1,better,6) output(1,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(3,better,9) output(8,better,1) output(2,worse,4) output(8,worse,4) output(7,worse,4) output(1,worse,4) output(2,worse,5) output(3,worse,5) output(2,worse,7) output(8,worse,7) output(2,worse,8) output(2,worse,3)
Optimization: 10 12
Answer: 11
preference(1,(1,1),1,for(atom(isCreamy(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(isButtery(1))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(isChewy(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(isRaw(1))),()) preference(1,(1,3),2,for(atom(isRaw(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(isButtery(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(isUrchin(1))),()) preference(1,(1,11),2,for(atom(isMaguro(1))),()) preference(1,(1,12),2,for(atom(isCreamy(1))),()) preference(1,poset) output(4,better,6) output(4,better,9) output(5,better,8) output(5,better,7) output(5,better,1) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,7) output(2,better,1) output(2,better,6) output(2,better,9) output(7,better,6) output(8,better,7) output(8,better,4) output(8,better,6) output(8,better,9) output(1,better,6) output(1,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(3,better,9) output(8,better,1) output(3,better,5) output(2,worse,4) output(7,worse,4) output(1,worse,4) output(2,worse,5) output(2,worse,8) output(7,worse,1) output(2,worse,3) output(7,unc,9) output(6,unc,9)
Optimization: 9 11
Answer: 12
preference(1,(1,1),1,for(atom(isChewy(1))),()) preference(1,(1,2),1,for(atom(isRaw(1))),()) preference(1,(1,3),1,for(atom(isTamago(1))),()) preference(1,(1,4),1,for(atom(isFattyFish(1))),()) preference(1,(1,5),1,for(atom(isChewy(1))),()) preference(1,(1,6),1,for(atom(isMaguro(1))),()) preference(1,(1,7),1,for(atom(isButtery(1))),()) preference(1,(1,8),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,10),1,for(atom(hasPrice(1))),()) preference(1,(1,11),1,for(atom(isChewy(1))),()) preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,1),2,for(atom(isRaw(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(isButtery(1))),()) preference(1,(1,5),2,for(atom(isUrchin(1))),()) preference(1,(1,6),2,for(atom(isTamago(1))),()) preference(1,(1,7),2,for(atom(isUrchin(1))),()) preference(1,(1,8),2,for(atom(isRaw(1))),()) preference(1,(1,9),2,for(atom(hasPrice(1))),()) preference(1,(1,10),2,for(atom(isUrchin(1))),()) preference(1,(1,11),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(isMaguro(1))),()) preference(1,poset) output(4,better,6) output(4,better,9) output(5,better,8) output(5,better,7) output(5,better,1) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,9) output(7,better,1) output(7,better,4) output(7,better,6) output(7,better,9) output(8,better,4) output(8,better,6) output(8,better,9) output(1,better,4) output(1,better,6) output(1,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(3,better,9) output(2,worse,5) output(3,worse,5) output(2,worse,7) output(8,worse,7) output(6,worse,9) output(2,worse,1) output(2,worse,3) output(8,worse,1)
Optimization: 8 12
Answer: 13
preference(1,(1,2),1,for(atom(isRaw(0))),()) preference(1,(1,9),1,for(atom(isMaguro(1))),()) preference(1,(1,11),1,for(atom(isChewy(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),2,for(atom(isChewy(1))),()) preference(1,(1,11),2,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(isRoe(1))),()) preference(1,poset) output(5,better,8) output(5,better,7) output(5,better,1) output(5,better,4) output(5,better,6) output(5,better,9) output(2,better,3) output(2,better,5) output(2,better,8) output(2,better,7) output(2,better,1) output(2,better,4) output(2,better,6) output(2,better,9) output(6,better,9) output(7,better,4) output(7,better,6) output(7,better,9) output(8,better,4) output(8,better,6) output(8,better,9) output(1,better,4) output(1,better,6) output(1,better,9) output(3,better,8) output(3,better,7) output(3,better,1) output(3,better,4) output(3,better,6) output(3,better,9) output(3,worse,5) output(4,worse,6) output(8,worse,7) output(7,worse,1) output(8,worse,1) output(4,eq,9)
Optimization: 6 4
SATISFIABLE

Models       : 13+
  Optimum    : unknown
Optimization : 6 4
Calls        : 1
Time         : 778.231s (Solving: 770.08s 1st Model: 1.51s Unsat: 0.00s)
CPU Time     : 3086.977s
Threads      : 4        (Winner: 3)

Choices      : 7947375  (Domain: 2254)
Conflicts    : 199509   (Analyzed: 199509)
Restarts     : 189      (Average: 1055.60 Last: 13722)
Model-Level  : 8717.5  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 31215228 (Deleted: 31048924)
  Binary     : 1830     (Ratio:   0.01%)
  Ternary    : 52083    (Ratio:   0.17%)
  Conflict   : 199509   (Average Length: 1050.4 Ratio:   0.64%) 
  Loop       : 30961240 (Average Length:  159.2 Ratio:  99.19%) 
  Other      : 54479    (Average Length:    3.4 Ratio:   0.17%) 
  Distributed: 18180    (Ratio:   0.06% Average LBD: 2.84) 
  Integrated : 54540    (Ratio: 300.00% Unit: 122 Average Jumps: 1660.99)
Backjumps    : 199509   (Average: 35.95 Max: 153163 Sum: 7172589)
  Executed   : 199484   (Average: 35.95 Max: 153163 Sum: 7172470 Ratio: 100.00%)
  Bounded    : 25       (Average:  4.76 Max:  38 Sum:    119 Ratio:   0.00%)

Rules        : 1508147 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28637   
Bodies       : 1146244 
  Count      : 48      
Equivalences : 32187    (Atom=Atom: 5187 Body=Body: 7867 Other: 19133)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103161  (Eliminated:    0 Frozen: 1092649)
Constraints  : 6431730  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isCreamy(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isChewy(1)) >> atom(isCreamy(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(isMaguro(1)) ; 
  atom(isCreamy(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isCreamy(1)) >> atom(isUrchin(1)) ; 
  atom(isUrchin(1)) >> atom(isRaw(0)) ; 
  atom(isUrchin(1)) >> atom(isMaguro(1)) ; 
  atom(isUrchin(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isButtery(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isMaguro(1)) >> atom(isRaw(0)) ; 
  atom(isCreamy(1)) >> atom(isButtery(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isCreamy(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isRaw(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(isButtery(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(isButtery(1)) ; 
  atom(isChewy(1)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isUrchin(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isMaguro(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isChewy(1)) >> atom(isRaw(0)) ; 
  atom(isRaw(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isTamago(1)) >> atom(isFattyFish(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isChewy(1)) >> atom(isUrchin(1)) ; 
  atom(isMaguro(1)) >> atom(isTamago(1)) ; 
  atom(isButtery(1)) >> atom(isUrchin(1)) ; 
  atom(hasPrice(1)) >> atom(isRaw(1)) ; 
  atom(isMaguro(1)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(isUrchin(1)) ; 
  atom(isChewy(1)) >> atom(hasPrice(1)) ; 
  atom(isRaw(0)) >> atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isMaguro(1)) >> atom(isChewy(1)) ; 
  atom(isChewy(1)) >> atom(isRaw(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isRoe(1)) 
}.
Time limit reached
