asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(1,eq,4) output(1,eq,0) output(1,eq,7) output(1,eq,2) output(1,eq,3) output(1,eq,9) output(1,eq,8) output(1,eq,6) output(4,eq,0) output(4,eq,7) output(4,eq,2) output(4,eq,3) output(4,eq,9) output(4,eq,8) output(4,eq,6) output(0,eq,7) output(0,eq,2) output(0,eq,3) output(0,eq,9) output(0,eq,8) output(0,eq,6) output(7,eq,2) output(7,eq,3) output(7,eq,9) output(7,eq,8) output(7,eq,6) output(2,eq,3) output(2,eq,9) output(2,eq,8) output(2,eq,6) output(3,eq,9) output(3,eq,8) output(3,eq,6) output(9,eq,8) output(9,eq,6) output(8,eq,6)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isOctopus(1))),()) preference(1,poset) output(4,better,0) output(4,better,7) output(1,worse,4) output(1,worse,2) output(0,worse,2) output(7,worse,2) output(1,worse,6) output(0,worse,6) output(7,worse,6) output(1,worse,9) output(7,worse,9) output(0,worse,8) output(7,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(0,worse,9) output(0,worse,3) output(1,eq,0) output(1,eq,7) output(4,eq,2) output(4,eq,3) output(4,eq,9) output(4,eq,8) output(4,eq,6) output(0,eq,7) output(2,eq,3) output(2,eq,9) output(2,eq,8) output(2,eq,6) output(3,eq,9) output(3,eq,8) output(3,eq,6) output(9,eq,8) output(9,eq,6) output(8,eq,6)
Optimization: 34 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,0) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(1,worse,4) output(1,worse,2) output(0,worse,2) output(7,worse,2) output(1,worse,6) output(0,worse,6) output(7,worse,6) output(1,worse,9) output(7,worse,9) output(0,worse,8) output(7,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(0,worse,9) output(0,worse,3) output(1,eq,0) output(1,eq,7) output(0,eq,7) output(2,eq,3) output(2,eq,9) output(2,eq,8) output(2,eq,6) output(3,eq,9) output(3,eq,8) output(3,eq,6) output(9,eq,8) output(9,eq,6) output(8,eq,6)
Optimization: 29 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset) output(4,better,0) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(1,better,0) output(1,worse,4) output(1,worse,2) output(0,worse,2) output(7,worse,2) output(1,worse,6) output(0,worse,6) output(7,worse,6) output(0,worse,7) output(1,worse,9) output(7,worse,9) output(0,worse,8) output(7,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(0,worse,9) output(0,worse,3) output(1,eq,7) output(2,eq,3) output(2,eq,9) output(2,eq,8) output(2,eq,6) output(3,eq,9) output(3,eq,8) output(3,eq,6) output(9,eq,8) output(9,eq,6) output(8,eq,6)
Optimization: 28 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(2,better,8) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,2) output(0,better,3) output(0,better,8) output(0,better,6) output(9,better,8) output(1,better,4) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,8) output(1,better,8) output(4,worse,2) output(4,worse,6) output(8,worse,6) output(4,worse,7) output(4,worse,0) output(4,worse,9) output(4,worse,3) output(1,eq,0) output(1,eq,7) output(4,eq,8) output(0,eq,7) output(2,eq,3) output(2,eq,9) output(2,eq,6) output(3,eq,9) output(3,eq,6) output(9,eq,6)
Optimization: 17 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,7) output(0,better,2) output(0,better,3) output(0,better,8) output(0,better,6) output(9,better,8) output(9,better,6) output(1,better,4) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(4,worse,7) output(1,worse,0) output(4,worse,0) output(4,worse,9) output(2,worse,9) output(4,worse,3) output(2,worse,3) output(1,eq,7) output(4,eq,2) output(4,eq,8) output(4,eq,6) output(2,eq,8) output(2,eq,6) output(3,eq,9) output(8,eq,6)
Optimization: 15 1
Answer: 7
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,3) output(2,better,9) output(2,better,6) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,2) output(0,better,3) output(0,better,8) output(0,better,6) output(1,better,4) output(1,better,0) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(8,better,6) output(0,better,9) output(1,better,8) output(4,worse,2) output(4,worse,7) output(4,worse,0) output(4,worse,8) output(3,worse,8) output(9,worse,8) output(4,eq,3) output(4,eq,9) output(4,eq,6) output(0,eq,7) output(2,eq,8) output(3,eq,9) output(3,eq,6) output(9,eq,6)
Optimization: 14 1
Answer: 8
preference(1,(1,12),1,for(atom(isSweet(1))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,2) output(0,better,8) output(0,better,6) output(1,better,0) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(0,worse,7) output(2,worse,3) output(1,eq,4) output(1,eq,7) output(4,eq,7) output(0,eq,3) output(2,eq,9) output(2,eq,8) output(2,eq,6) output(9,eq,8) output(9,eq,6) output(8,eq,6)
Optimization: 12 1
Answer: 9
preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,(1,12),2,for(atom(isChewy(1))),()) preference(1,poset) output(4,better,2) output(4,better,9) output(4,better,8) output(4,better,6) output(2,better,8) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,7) output(0,better,2) output(0,better,3) output(0,better,8) output(0,better,6) output(9,better,8) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(8,worse,6) output(1,worse,0) output(2,worse,3) output(1,eq,7) output(2,eq,9) output(2,eq,6) output(9,eq,6) output(1,unc,4) output(4,unc,0) output(4,unc,7) output(4,unc,3)
Optimization: 11 2
Answer: 10
preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isChewy(1))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,7),2,for(atom(isChewy(1))),()) preference(1,(1,9),2,for(atom(isUnique(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,poset) output(4,better,0) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(2,better,3) output(2,better,9) output(2,better,8) output(2,better,6) output(7,better,8) output(0,better,7) output(0,better,8) output(0,better,6) output(9,better,8) output(1,better,0) output(1,better,7) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(1,worse,4) output(0,worse,2) output(7,worse,2) output(7,worse,6) output(8,worse,6) output(7,worse,9) output(7,worse,3) output(1,eq,2) output(0,eq,3) output(9,eq,6)
Optimization: 10 4
Answer: 11
preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isChewy(1))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isCreamy(1))),()) preference(1,(1,7),2,for(atom(isChewy(1))),()) preference(1,(1,9),2,for(atom(isUnique(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,poset) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(2,better,3) output(2,better,9) output(2,better,8) output(2,better,6) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,8) output(0,better,6) output(9,better,8) output(1,better,0) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(1,worse,4) output(0,worse,2) output(8,worse,6) output(1,worse,7) output(4,worse,7) output(0,worse,7) output(1,eq,2) output(0,eq,3) output(9,eq,6)
Optimization: 9 4
Answer: 12
preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isChewy(1))),()) preference(1,(1,10),1,for(atom(hasPrice(0))),()) preference(1,(1,11),1,for(atom(isSweet(1))),()) preference(1,(1,7),2,for(atom(isChewy(1))),()) preference(1,(1,9),2,for(atom(isUnique(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),2,for(atom(hasPrice(0))),()) preference(1,poset) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(2,better,3) output(2,better,9) output(2,better,8) output(2,better,6) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,8) output(0,better,6) output(9,better,8) output(1,better,4) output(1,better,0) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(0,worse,2) output(8,worse,6) output(4,worse,7) output(0,worse,7) output(0,eq,3) output(9,eq,6)
Optimization: 6 4
Answer: 13
preference(1,(1,1),1,for(atom(isRaw(0))),()) preference(1,(1,2),1,for(atom(isFattyFish(1))),()) preference(1,(1,3),1,for(atom(isMaguro(1))),()) preference(1,(1,4),1,for(atom(isSweet(1))),()) preference(1,(1,5),1,for(atom(isUrchin(1))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,7),1,for(atom(hasPrice(0))),()) preference(1,(1,8),1,for(atom(isTamago(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),1,for(atom(isOctopus(1))),()) preference(1,(1,11),1,for(atom(isFattyFish(1))),()) preference(1,(1,12),1,for(atom(isUrchin(1))),()) preference(1,(1,1),2,for(atom(isOctopus(1))),()) preference(1,(1,2),2,for(atom(isMaguro(1))),()) preference(1,(1,3),2,for(atom(isOctopus(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(isRaw(0))),()) preference(1,(1,6),2,for(atom(isChewy(1))),()) preference(1,(1,7),2,for(atom(isUrchin(1))),()) preference(1,(1,8),2,for(atom(isRaw(1))),()) preference(1,(1,9),2,for(atom(isFattyFish(1))),()) preference(1,(1,10),2,for(atom(isTamago(1))),()) preference(1,(1,11),2,for(atom(isButtery(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,0) output(4,better,2) output(4,better,3) output(4,better,9) output(4,better,8) output(4,better,6) output(2,better,8) output(2,better,6) output(7,better,2) output(7,better,3) output(7,better,9) output(7,better,8) output(7,better,6) output(0,better,2) output(0,better,3) output(0,better,8) output(0,better,6) output(9,better,8) output(9,better,6) output(1,better,4) output(1,better,0) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,9) output(1,better,6) output(0,better,9) output(3,better,9) output(3,better,8) output(3,better,6) output(1,better,8) output(8,worse,6) output(4,worse,7) output(0,worse,7) output(2,worse,9) output(2,worse,3)
Optimization: 5 12
SATISFIABLE

Models       : 13+
  Optimum    : unknown
Optimization : 5 12
Calls        : 1
Time         : 897.969s (Solving: 889.94s 1st Model: 1.53s Unsat: 0.00s)
CPU Time     : 3566.497s
Threads      : 4        (Winner: 0)

Choices      : 6324254  (Domain: 4432)
Conflicts    : 223778   (Analyzed: 223778)
Restarts     : 303      (Average: 738.54 Last: 10425)
Model-Level  : 350.1   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 22157348 (Deleted: 21998783)
  Binary     : 1468     (Ratio:   0.01%)
  Ternary    : 49283    (Ratio:   0.22%)
  Conflict   : 223778   (Average Length:  948.5 Ratio:   1.01%) 
  Loop       : 21884120 (Average Length:  204.6 Ratio:  98.77%) 
  Other      : 49450    (Average Length:    3.7 Ratio:   0.22%) 
  Distributed: 16501    (Ratio:   0.07% Average LBD: 2.84) 
  Integrated : 49503    (Ratio: 300.00% Unit: 81 Average Jumps: 1601.73)
Backjumps    : 223778   (Average: 22.84 Max: 190594 Sum: 5111943)
  Executed   : 223754   (Average: 22.84 Max: 190594 Sum: 5111861 Ratio: 100.00%)
  Bounded    : 24       (Average:  3.42 Max:  38 Sum:     82 Ratio:   0.00%)

Rules        : 1508106 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28608   
Bodies       : 1146211 
  Count      : 48      
Equivalences : 32116    (Atom=Atom: 5177 Body=Body: 7853 Other: 19086)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103143  (Eliminated:    0 Frozen: 1092633)
Constraints  : 6431658  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isOctopus(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isSweet(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSweet(1)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isUrchin(1)) >> atom(hasPrice(0)) ; 
  atom(isRaw(0)) >> atom(isChewy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(isChewy(1)) ; 
  atom(isChewy(1)) >> atom(isUnique(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isUrchin(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(isChewy(1)) ; 
  atom(isChewy(1)) >> atom(isUnique(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isCreamy(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(isChewy(1)) ; 
  atom(isChewy(1)) >> atom(isUnique(1)) ; 
  atom(hasPrice(0)) >> atom(hasMinorGrp(0)) ; 
  atom(isSweet(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(isOctopus(1)) ; 
  atom(isFattyFish(1)) >> atom(isMaguro(1)) ; 
  atom(isMaguro(1)) >> atom(isOctopus(1)) ; 
  atom(isSweet(1)) >> atom(hasPrice(0)) ; 
  atom(isUrchin(1)) >> atom(isRaw(0)) ; 
  atom(isFattyFish(1)) >> atom(isChewy(1)) ; 
  atom(hasPrice(0)) >> atom(isUrchin(1)) ; 
  atom(isTamago(1)) >> atom(isRaw(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isFattyFish(1)) ; 
  atom(isOctopus(1)) >> atom(isTamago(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isUrchin(1)) >> atom(hasMinorGrp(1)) 
}.
Time limit reached
