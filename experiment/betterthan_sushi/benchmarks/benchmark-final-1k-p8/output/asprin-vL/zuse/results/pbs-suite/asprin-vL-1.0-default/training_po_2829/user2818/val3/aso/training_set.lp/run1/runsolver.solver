asprin_vL version 1.0
Reading from stdin
-:275:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:300:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:381:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:655:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:832:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1033:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1037:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1037:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1043:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1142:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1168:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1288:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1322:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1344:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:192:1-16: info: no atoms over signature occur in program:
  output/3

-:184:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:185:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:186:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:187:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:217:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),0,for(atom(isRoe(1))),()) preference(1,(1,1),1,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,6),3,for(neg(atom(isOctopus(1)))),()) preference(1,(1,1),4,for(neg(atom(isButtery(1)))),()) preference(1,(1,6),4,for(neg(atom(isButtery(1)))),()) preference(1,(1,6),1,for(atom(isTamago(1))),()) preference(1,(1,1),2,for(atom(isTamago(1))),()) preference(1,(1,6),2,for(atom(isRoe(1))),()) preference(1,aso) output(4,better,5) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,5) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,5) output(1,better,5) output(4,worse,6) output(4,worse,7) output(9,worse,6) output(9,worse,7) output(6,worse,7) output(8,worse,7) output(2,worse,7) output(4,eq,9) output(4,eq,8) output(4,eq,2) output(4,eq,0) output(4,eq,1) output(9,eq,8) output(9,eq,2) output(9,eq,0) output(9,eq,1) output(8,eq,2) output(8,eq,0) output(8,eq,1) output(2,eq,0) output(2,eq,1) output(0,eq,1)
Optimization: 22 2
Answer: 2
preference(1,(1,1),0,for(atom(isRoe(1))),()) preference(1,(1,1),1,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),4,for(neg(atom(isButtery(1)))),()) preference(1,(1,6),4,for(neg(atom(isButtery(1)))),()) preference(1,(1,6),1,for(atom(isTamago(1))),()) preference(1,(1,1),2,for(atom(isTamago(1))),()) preference(1,(1,6),2,for(atom(isRoe(1))),()) preference(1,(1,6),3,for(atom(hasMinorGrp(1))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,2) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,2) output(9,better,1) output(6,better,2) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,0) output(8,better,1) output(8,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(9,worse,6) output(9,worse,8) output(9,worse,7) output(6,worse,8) output(6,worse,7) output(2,worse,7) output(2,worse,0) output(2,worse,5) output(1,worse,5) output(4,eq,8) output(4,eq,7) output(9,eq,0) output(9,eq,5) output(8,eq,7) output(2,eq,1) output(0,eq,5)
Optimization: 16 2
Answer: 3
preference(1,(1,1),0,for(atom(isRoe(1))),()) preference(1,(1,1),1,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),4,for(neg(atom(isButtery(1)))),()) preference(1,(1,6),4,for(neg(atom(isButtery(1)))),()) preference(1,(1,6),1,for(atom(isTamago(1))),()) preference(1,(1,1),2,for(atom(isTamago(1))),()) preference(1,(1,6),2,for(atom(isRoe(1))),()) preference(1,(1,6),3,for(atom(isShrimp(1))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,2) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,2) output(9,better,1) output(9,better,5) output(6,better,2) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,0) output(8,better,1) output(8,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(9,worse,6) output(9,worse,8) output(9,worse,7) output(6,worse,8) output(6,worse,7) output(2,worse,7) output(2,worse,0) output(4,eq,8) output(4,eq,7) output(9,eq,0) output(8,eq,7) output(2,eq,1) output(2,eq,5) output(1,eq,5)
Optimization: 14 2
Answer: 4
preference(1,(1,2),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,3),0,for(neg(atom(isUrchin(1)))),()) preference(1,(1,5),0,for(neg(atom(isRoe(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,7),1,for(neg(atom(isRaw(0)))),()) preference(1,(1,1),2,for(neg(atom(isRaw(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,8),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,3),4,for(neg(atom(isUnique(1)))),()) preference(1,(1,4),4,for(neg(atom(isUnique(1)))),()) preference(1,(1,5),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,6),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,8),4,for(neg(atom(isUnique(1)))),()) preference(1,(1,1),1,for(atom(isUrchin(1))),()) preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,3),1,for(atom(isRoe(1))),()) preference(1,(1,4),1,for(atom(isUrchin(1))),()) preference(1,(1,6),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,3),2,for(atom(isButtery(1))),()) preference(1,(1,5),2,for(atom(isRoe(1))),()) preference(1,(1,7),2,for(atom(isShrimp(1))),()) preference(1,(1,8),2,for(atom(isRoe(1))),()) preference(1,(1,1),3,for(atom(isRaw(0))),()) preference(1,(1,2),3,for(atom(isMaguro(1))),()) preference(1,(1,3),3,for(atom(isMaguro(1))),()) preference(1,(1,4),3,for(atom(isMaguro(1))),()) preference(1,(1,5),3,for(atom(isMaguro(1))),()) preference(1,(1,6),3,for(atom(isMaguro(1))),()) preference(1,(1,7),3,for(atom(isFattyFish(1))),()) preference(1,(1,7),4,for(atom(isOctopus(1))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,8) output(4,better,2) output(4,better,7) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,6) output(9,better,8) output(9,better,2) output(9,better,7) output(9,better,0) output(9,better,1) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,7) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,7) output(8,better,0) output(8,better,1) output(8,better,5) output(2,better,7) output(2,better,0) output(2,better,1) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(1,better,5)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Answer: 5
preference(1,(1,1),0,for(atom(isRaw(0))),()) preference(1,(1,2),0,for(atom(isRaw(1))),()) preference(1,(1,3),0,for(neg(atom(isUrchin(1)))),()) preference(1,(1,5),0,for(neg(atom(isSweet(1)))),()) preference(1,(1,8),0,for(neg(atom(isTamago(1)))),()) preference(1,(1,5),1,for(neg(atom(isRaw(0)))),()) preference(1,(1,1),2,for(neg(atom(isCreamy(1)))),()) preference(1,(1,4),2,for(neg(atom(isRaw(0)))),()) preference(1,(1,8),2,for(neg(atom(isRaw(1)))),()) preference(1,(1,4),3,for(neg(atom(isUrchin(1)))),()) preference(1,(1,7),3,for(neg(atom(isUnique(1)))),()) preference(1,(1,1),4,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),4,for(neg(atom(isOctopus(1)))),()) preference(1,(1,5),4,for(neg(atom(isChewy(1)))),()) preference(1,(1,1),1,for(atom(isShrimp(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(isUnique(1))),()) preference(1,(1,4),1,for(atom(isUrchin(1))),()) preference(1,(1,7),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isMaguro(1))),()) preference(1,(1,2),2,for(atom(isChewy(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(isOctopus(1))),()) preference(1,(1,7),2,for(atom(isRoe(1))),()) preference(1,(1,1),3,for(atom(isMaguro(1))),()) preference(1,(1,2),3,for(atom(isOctopus(1))),()) preference(1,(1,3),3,for(atom(isTamago(1))),()) preference(1,(1,5),3,for(atom(isRaw(1))),()) preference(1,(1,8),3,for(atom(isOctopus(1))),()) preference(1,(1,3),4,for(atom(isUrchin(1))),()) preference(1,(1,7),4,for(atom(isFattyFish(1))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,8) output(4,better,2) output(4,better,7) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,6) output(9,better,8) output(9,better,2) output(9,better,7) output(9,better,0) output(9,better,1) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,7) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,7) output(8,better,0) output(8,better,1) output(8,better,5) output(2,better,7) output(2,better,0) output(2,better,1) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(1,better,5)
Optimization: 0 7
Progression : 0 [2;7] (Error: 2.5)
Answer: 6
preference(1,(1,1),0,for(atom(isRaw(0))),()) preference(1,(1,2),0,for(atom(isRaw(1))),()) preference(1,(1,3),0,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),2,for(neg(atom(isCreamy(1)))),()) preference(1,(1,4),2,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),3,for(neg(atom(isOctopus(1)))),()) preference(1,(1,8),3,for(neg(atom(isUnique(1)))),()) preference(1,(1,1),4,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),4,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),1,for(atom(isShrimp(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(isUnique(1))),()) preference(1,(1,4),1,for(atom(isUrchin(1))),()) preference(1,(1,5),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,2),2,for(atom(isChewy(1))),()) preference(1,(1,3),2,for(atom(isMaguro(1))),()) preference(1,(1,8),2,for(atom(isRoe(1))),()) preference(1,(1,1),3,for(atom(isMaguro(1))),()) preference(1,(1,2),3,for(atom(isOctopus(1))),()) preference(1,(1,3),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),4,for(atom(hasPrice(0))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,8) output(4,better,2) output(4,better,7) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,6) output(9,better,8) output(9,better,2) output(9,better,7) output(9,better,0) output(9,better,1) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,7) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,7) output(8,better,0) output(8,better,1) output(8,better,5) output(2,better,7) output(2,better,0) output(2,better,1) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(1,better,5)
Optimization: 0 6
Answer: 7
preference(1,(1,1),0,for(atom(isRaw(0))),()) preference(1,(1,2),0,for(atom(isRaw(1))),()) preference(1,(1,3),0,for(neg(atom(isUnique(1)))),()) preference(1,(1,1),2,for(neg(atom(isCreamy(1)))),()) preference(1,(1,4),2,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),3,for(neg(atom(isOctopus(1)))),()) preference(1,(1,8),3,for(neg(atom(isUnique(1)))),()) preference(1,(1,1),4,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),4,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),1,for(atom(isShrimp(1))),()) preference(1,(1,2),1,for(atom(isMaguro(1))),()) preference(1,(1,3),1,for(atom(isUrchin(1))),()) preference(1,(1,4),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,2),2,for(atom(isChewy(1))),()) preference(1,(1,3),2,for(atom(isMaguro(1))),()) preference(1,(1,8),2,for(atom(isRoe(1))),()) preference(1,(1,1),3,for(atom(isMaguro(1))),()) preference(1,(1,2),3,for(atom(isOctopus(1))),()) preference(1,(1,3),3,for(atom(isTamago(1))),()) preference(1,(1,3),4,for(atom(hasPrice(0))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,8) output(4,better,2) output(4,better,7) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,6) output(9,better,8) output(9,better,2) output(9,better,7) output(9,better,0) output(9,better,1) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,7) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,7) output(8,better,0) output(8,better,1) output(8,better,5) output(2,better,7) output(2,better,0) output(2,better,1) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(1,better,5)
Optimization: 0 5
Answer: 8
preference(1,(1,1),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,3),0,for(neg(atom(isUrchin(1)))),()) preference(1,(1,4),1,for(neg(atom(isRaw(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,4),3,for(neg(atom(isOctopus(1)))),()) preference(1,(1,8),3,for(neg(atom(isUnique(1)))),()) preference(1,(1,4),4,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),1,for(atom(isShrimp(1))),()) preference(1,(1,3),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,1),2,for(atom(isUrchin(1))),()) preference(1,(1,3),2,for(atom(isUnique(1))),()) preference(1,(1,4),2,for(atom(isCreamy(1))),()) preference(1,(1,8),2,for(atom(isRoe(1))),()) preference(1,(1,1),3,for(atom(isTamago(1))),()) preference(1,(1,1),4,for(atom(isRaw(0))),()) preference(1,(1,3),4,for(atom(hasPrice(0))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,8) output(4,better,2) output(4,better,7) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,6) output(9,better,8) output(9,better,2) output(9,better,7) output(9,better,0) output(9,better,1) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,7) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,7) output(8,better,0) output(8,better,1) output(8,better,5) output(2,better,7) output(2,better,0) output(2,better,1) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(1,better,5)
Optimization: 0 4
Answer: 9
preference(1,(1,4),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,4),1,for(neg(atom(isRaw(0)))),()) preference(1,(1,1),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,4),3,for(neg(atom(isOctopus(1)))),()) preference(1,(1,8),3,for(neg(atom(isUnique(1)))),()) preference(1,(1,1),4,for(neg(atom(isUnique(1)))),()) preference(1,(1,4),4,for(neg(atom(isUrchin(1)))),()) preference(1,(1,1),1,for(atom(isUrchin(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,1),2,for(atom(isRoe(1))),()) preference(1,(1,4),2,for(atom(isShrimp(1))),()) preference(1,(1,8),2,for(atom(isRaw(1))),()) preference(1,aso) output(4,better,9) output(4,better,6) output(4,better,8) output(4,better,2) output(4,better,7) output(4,better,0) output(4,better,1) output(4,better,5) output(9,better,6) output(9,better,8) output(9,better,2) output(9,better,7) output(9,better,0) output(9,better,1) output(9,better,5) output(6,better,8) output(6,better,2) output(6,better,7) output(6,better,0) output(6,better,1) output(6,better,5) output(8,better,2) output(8,better,7) output(8,better,0) output(8,better,1) output(8,better,5) output(2,better,7) output(2,better,0) output(2,better,1) output(2,better,5) output(7,better,0) output(7,better,1) output(7,better,5) output(0,better,1) output(0,better,5) output(1,better,5)
Optimization: 0 3
OPTIMUM FOUND

Models       : 9
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 9.403s (Solving: 3.33s 1st Model: 0.14s Unsat: 0.55s)
CPU Time     : 19.271s
Threads      : 4        (Winner: 1)

Choices      : 126001   (Domain: 219)
Conflicts    : 14055    (Analyzed: 14051)
Restarts     : 38       (Average: 369.76 Last: 1028)
Model-Level  : 623.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 32702    (Deleted: 0)
  Binary     : 1845     (Ratio:   5.64%)
  Ternary    : 2405     (Ratio:   7.35%)
  Conflict   : 14049    (Average Length:   75.8 Ratio:  42.96%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 18653    (Average Length:   31.4 Ratio:  57.04%) 
  Distributed: 6231     (Ratio:  44.35% Average LBD: 3.15) 
  Integrated : 18690    (Ratio: 299.95% Unit: 185 Average Jumps: 86.59)
Backjumps    : 14051    (Average:  7.22 Max: 919 Sum: 101416)
  Executed   : 14036    (Average:  7.20 Max: 919 Sum: 101227 Ratio:  99.81%)
  Bounded    : 15       (Average: 12.60 Max:  35 Sum:    189 Ratio:   0.19%)

Rules        : 2316051 
  Choice     : 41      
  Minimize   : 2       
Atoms        : 657530  
Bodies       : 779327  
  Count      : 1768    
Equivalences : 2014294  (Atom=Atom: 577086 Body=Body: 624487 Other: 812721)
Tight        : Yes
Variables    : 87431    (Eliminated:    0 Frozen: 58735)
Constraints  : 1782025  (Binary:  95.2% Ternary:   4.1% Other:   0.7%)


Learned preference statement: 

#preference(1,aso){
  not atom(isUrchin(1))  >> atom(isTamago(1)) >> not atom(hasPrice(0))  >> not atom(isButtery(1))  || atom(isRoe(1)) ; 
  atom(isTamago(1)) >> atom(isRoe(1)) >> not atom(isOctopus(1))  >> not atom(isButtery(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isUrchin(1))  >> atom(isTamago(1)) >> not atom(hasPrice(0))  >> not atom(isButtery(1))  || atom(isRoe(1)) ; 
  atom(isTamago(1)) >> atom(isRoe(1)) >> atom(hasMinorGrp(1)) >> not atom(isButtery(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isUrchin(1))  >> atom(isTamago(1)) >> not atom(hasPrice(0))  >> not atom(isButtery(1))  || atom(isRoe(1)) ; 
  atom(isTamago(1)) >> atom(isRoe(1)) >> atom(isShrimp(1)) >> not atom(isButtery(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(isUnique(1)) >> not atom(hasPrice(0))  >> atom(isMaguro(1)) >> not atom(isRaw(1))  || not atom(hasPrice(1))  ; 
  atom(isRoe(1)) >> atom(isButtery(1)) >> atom(isMaguro(1)) >> not atom(isUnique(1))  || not atom(isUrchin(1))  ; 
  not atom(hasPrice(0))  >> atom(isRoe(1)) >> atom(isMaguro(1)) >> not atom(isRaw(1))  || not atom(isRoe(1))  ; 
  atom(isUrchin(1)) >> not atom(isRaw(0))  >> atom(isRaw(0)) ; 
  atom(isUrchin(1)) >> not atom(hasPrice(0))  >> atom(isMaguro(1)) >> not atom(isUnique(1))  ; 
  atom(isUrchin(1)) >> not atom(hasPrice(0))  >> atom(isMaguro(1)) >> not atom(isRaw(1))  ; 
  not atom(isRaw(0))  >> atom(isShrimp(1)) >> atom(isFattyFish(1)) >> atom(isOctopus(1)) ; 
  atom(isUrchin(1)) >> atom(isRoe(1)) >> not atom(hasPrice(0))  >> not atom(isUnique(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(isShrimp(1)) >> not atom(isCreamy(1))  >> atom(isMaguro(1)) >> not atom(isRaw(0))  || atom(isRaw(0)) ; 
  atom(isMaguro(1)) >> atom(isChewy(1)) >> atom(isOctopus(1)) || atom(isRaw(1)) ; 
  atom(isUnique(1)) >> atom(hasPrice(0)) >> atom(isTamago(1)) >> atom(isUrchin(1)) || not atom(isUrchin(1))  ; 
  not atom(isRaw(0))  >> atom(isOctopus(1)) >> atom(isRaw(1)) >> not atom(isChewy(1))  || not atom(isSweet(1))  ; 
  atom(isMaguro(1)) >> not atom(isRaw(1))  >> atom(isOctopus(1)) || not atom(isTamago(1))  ; 
  atom(isUrchin(1)) >> not atom(isRaw(0))  >> not atom(isUrchin(1))  >> not atom(isOctopus(1))  ; 
  atom(isUrchin(1)) >> atom(isRoe(1)) >> not atom(isUnique(1))  >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isShrimp(1)) >> not atom(isCreamy(1))  >> atom(isMaguro(1)) >> not atom(isRaw(0))  || atom(isRaw(0)) ; 
  atom(isMaguro(1)) >> atom(isChewy(1)) >> atom(isOctopus(1)) || atom(isRaw(1)) ; 
  atom(isUnique(1)) >> atom(isMaguro(1)) >> atom(hasMinorGrp(2)) >> atom(hasPrice(0)) || not atom(isUrchin(1))  ; 
  atom(isUrchin(1)) >> not atom(isRaw(0))  >> not atom(isOctopus(1))  >> not atom(isUrchin(1))  ; 
  atom(isUrchin(1)) ; 
  atom(isUrchin(1)) >> atom(isRoe(1)) >> not atom(isUnique(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(isShrimp(1)) >> not atom(isCreamy(1))  >> atom(isMaguro(1)) >> not atom(isRaw(0))  || atom(isRaw(0)) ; 
  atom(isMaguro(1)) >> atom(isChewy(1)) >> atom(isOctopus(1)) || atom(isRaw(1)) ; 
  atom(isUrchin(1)) >> atom(isMaguro(1)) >> atom(isTamago(1)) >> atom(hasPrice(0)) || not atom(isUnique(1))  ; 
  atom(isUrchin(1)) >> not atom(isRaw(0))  >> not atom(isOctopus(1))  >> not atom(isUrchin(1))  ; 
  atom(isUrchin(1)) >> atom(isRoe(1)) >> not atom(isUnique(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(isShrimp(1)) >> atom(isUrchin(1)) >> atom(isTamago(1)) >> atom(isRaw(0)) || not atom(isCreamy(1))  ; 
  atom(isUrchin(1)) >> atom(isUnique(1)) >> not atom(hasPrice(0))  >> atom(hasPrice(0)) || not atom(isUrchin(1))  ; 
  not atom(isRaw(0))  >> atom(isCreamy(1)) >> not atom(isOctopus(1))  >> not atom(isUrchin(1))  ; 
  atom(isUrchin(1)) >> atom(isRoe(1)) >> not atom(isUnique(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isRaw(0))  >> atom(isShrimp(1)) >> not atom(isOctopus(1))  >> not atom(isUrchin(1))  || not atom(isCreamy(1))  ; 
  atom(isUrchin(1)) >> atom(isRoe(1)) >> not atom(hasPrice(0))  >> not atom(isUnique(1))  ; 
  atom(isUrchin(1)) >> atom(isRaw(1)) >> not atom(isUnique(1))  
}.
