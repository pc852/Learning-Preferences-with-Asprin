asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(1,eq,7) output(1,eq,6) output(1,eq,5) output(1,eq,8) output(1,eq,2) output(1,eq,9) output(1,eq,0) output(1,eq,3) output(7,eq,6) output(7,eq,5) output(7,eq,8) output(7,eq,2) output(7,eq,9) output(7,eq,0) output(7,eq,3) output(6,eq,5) output(6,eq,8) output(6,eq,2) output(6,eq,9) output(6,eq,0) output(6,eq,3) output(5,eq,8) output(5,eq,2) output(5,eq,9) output(5,eq,0) output(5,eq,3) output(8,eq,2) output(8,eq,9) output(8,eq,0) output(8,eq,3) output(2,eq,9) output(2,eq,0) output(2,eq,3) output(9,eq,0) output(9,eq,3) output(0,eq,3)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(2,better,0) output(6,better,5) output(6,better,0) output(8,better,0) output(9,better,0) output(1,worse,2) output(7,worse,2) output(5,worse,2) output(1,worse,6) output(7,worse,6) output(1,worse,9) output(7,worse,9) output(5,worse,9) output(7,worse,8) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(0,worse,3) output(1,eq,7) output(1,eq,5) output(1,eq,0) output(7,eq,5) output(7,eq,0) output(6,eq,8) output(6,eq,2) output(6,eq,9) output(6,eq,3) output(5,eq,0) output(8,eq,2) output(8,eq,9) output(8,eq,3) output(2,eq,9) output(2,eq,3) output(9,eq,3)
Optimization: 31 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isOctopus(1))),()) preference(1,poset) output(5,better,0) output(2,better,0) output(6,better,5) output(6,better,0) output(8,better,0) output(9,better,0) output(1,worse,5) output(7,worse,5) output(1,worse,2) output(7,worse,2) output(5,worse,2) output(1,worse,6) output(7,worse,6) output(1,worse,9) output(7,worse,9) output(5,worse,9) output(7,worse,8) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(0,worse,3) output(1,eq,7) output(1,eq,0) output(7,eq,0) output(6,eq,8) output(6,eq,2) output(6,eq,9) output(6,eq,3) output(8,eq,2) output(8,eq,9) output(8,eq,3) output(2,eq,9) output(2,eq,3) output(9,eq,3)
Optimization: 30 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(2,better,0) output(6,better,5) output(6,better,8) output(6,better,2) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,5) output(7,better,0) output(8,better,0) output(9,better,0) output(1,worse,2) output(7,worse,2) output(5,worse,2) output(1,worse,6) output(7,worse,6) output(1,worse,7) output(1,worse,9) output(7,worse,9) output(5,worse,9) output(7,worse,8) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(0,worse,3) output(1,eq,5) output(1,eq,0) output(5,eq,0) output(8,eq,2) output(8,eq,9) output(8,eq,3) output(2,eq,9) output(2,eq,3) output(9,eq,3)
Optimization: 25 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(2,better,9) output(2,better,0) output(2,better,3) output(6,better,5) output(6,better,0) output(1,better,7) output(1,better,5) output(1,better,0) output(8,better,9) output(8,better,0) output(8,better,3) output(9,better,0) output(1,worse,2) output(7,worse,2) output(6,worse,2) output(5,worse,2) output(1,worse,6) output(7,worse,6) output(1,worse,9) output(7,worse,9) output(5,worse,9) output(7,worse,8) output(6,worse,8) output(5,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(0,worse,3) output(7,eq,5) output(7,eq,0) output(6,eq,9) output(6,eq,3) output(5,eq,0) output(8,eq,2) output(9,eq,3)
Optimization: 24 1
Answer: 6
preference(1,(1,12),1,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isRoe(1))),()) preference(1,poset) output(6,better,5) output(6,better,8) output(6,better,2) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,8) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(1,worse,6) output(1,worse,7) output(1,eq,5) output(1,eq,8) output(1,eq,2) output(1,eq,9) output(1,eq,0) output(1,eq,3) output(5,eq,8) output(5,eq,2) output(5,eq,9) output(5,eq,0) output(5,eq,3) output(8,eq,2) output(8,eq,9) output(8,eq,0) output(8,eq,3) output(2,eq,9) output(2,eq,0) output(2,eq,3) output(9,eq,0) output(9,eq,3) output(0,eq,3)
Optimization: 23 1
Answer: 7
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(5,better,8) output(5,better,2) output(5,better,9) output(5,better,3) output(2,better,9) output(2,better,3) output(7,better,6) output(7,better,8) output(7,better,2) output(7,better,9) output(7,better,3) output(0,better,3) output(1,better,7) output(1,better,6) output(1,better,5) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(8,better,9) output(8,better,3) output(1,better,8) output(6,worse,5) output(6,worse,2) output(6,worse,0) output(8,worse,0) output(2,worse,0) output(6,worse,8) output(9,worse,0) output(7,eq,5) output(7,eq,0) output(6,eq,9) output(6,eq,3) output(5,eq,0) output(8,eq,2) output(9,eq,3)
Optimization: 14 1
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(isUnique(1))),()) preference(1,(1,3),1,for(atom(isRaw(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(isButtery(1))),()) preference(1,(1,6),1,for(atom(isButtery(1))),()) preference(1,(1,7),1,for(atom(isShrimp(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isSweet(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(isButtery(1))),()) preference(1,(1,12),1,for(atom(isButtery(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,2),2,for(atom(isButtery(1))),()) preference(1,(1,3),2,for(atom(isUnique(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),2,for(atom(isOctopus(1))),()) preference(1,(1,6),2,for(atom(isMaguro(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(isRaw(0))),()) preference(1,(1,9),2,for(atom(isMaguro(1))),()) preference(1,(1,10),2,for(atom(hasPrice(1))),()) preference(1,(1,11),2,for(atom(isShrimp(1))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,poset) output(5,better,9) output(5,better,3) output(2,better,9) output(2,better,0) output(2,better,3) output(6,better,5) output(6,better,8) output(6,better,2) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,8) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(9,better,3) output(0,better,3) output(1,better,5) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(1,better,8) output(5,worse,2) output(1,worse,7) output(9,worse,0) output(1,unc,6) output(5,unc,8) output(5,unc,0) output(8,unc,2) output(8,unc,9) output(8,unc,0) output(8,unc,3)
Optimization: 10 12
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(isButtery(1))),()) preference(1,(1,3),1,for(atom(isOctopus(1))),()) preference(1,(1,4),1,for(atom(isTamago(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(isRoe(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(isSweet(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(isButtery(1))),()) preference(1,(1,11),1,for(atom(isTamago(1))),()) preference(1,(1,12),1,for(atom(isUrchin(1))),()) preference(1,(1,1),2,for(atom(isUrchin(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(isRoe(1))),()) preference(1,(1,5),2,for(atom(isUnique(1))),()) preference(1,(1,6),2,for(atom(isSweet(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(isCreamy(1))),()) preference(1,(1,9),2,for(atom(isSweet(1))),()) preference(1,(1,10),2,for(atom(isUnique(1))),()) preference(1,(1,11),2,for(atom(isOctopus(1))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(5,better,2) output(5,better,9) output(5,better,0) output(5,better,3) output(2,better,9) output(2,better,0) output(2,better,3) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(9,better,3) output(0,better,3) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(8,better,2) output(8,better,9) output(8,better,0) output(8,better,3) output(9,better,0) output(1,worse,5) output(1,worse,7) output(1,worse,8) output(1,unc,6) output(7,unc,8) output(6,unc,5) output(6,unc,8) output(6,unc,2) output(5,unc,8)
Optimization: 9 12
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),1,for(atom(isButtery(1))),()) preference(1,(1,3),1,for(atom(isOctopus(1))),()) preference(1,(1,4),1,for(atom(isSweet(1))),()) preference(1,(1,5),1,for(atom(isOctopus(1))),()) preference(1,(1,6),1,for(atom(isRoe(1))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),1,for(atom(isTamago(1))),()) preference(1,(1,12),1,for(atom(isUrchin(1))),()) preference(1,(1,1),2,for(atom(isUrchin(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(isCreamy(1))),()) preference(1,(1,5),2,for(atom(isRoe(1))),()) preference(1,(1,6),2,for(atom(isSweet(1))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),2,for(atom(isRoe(1))),()) preference(1,(1,9),2,for(atom(isSweet(1))),()) preference(1,(1,10),2,for(atom(isUnique(1))),()) preference(1,(1,11),2,for(atom(isOctopus(1))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(5,better,2) output(5,better,9) output(5,better,0) output(5,better,3) output(2,better,9) output(2,better,0) output(2,better,3) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(9,better,3) output(0,better,3) output(1,better,6) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(8,better,2) output(8,better,9) output(8,better,0) output(8,better,3) output(9,better,0) output(6,worse,5) output(6,worse,8) output(1,worse,8) output(1,unc,7) output(1,unc,5) output(7,unc,8) output(6,unc,2) output(5,unc,8)
Optimization: 8 12
Answer: 11
preference(1,(1,1),1,for(atom(isSweet(1))),()) preference(1,(1,2),1,for(atom(isSweet(1))),()) preference(1,(1,3),1,for(atom(isSweet(1))),()) preference(1,(1,4),1,for(atom(isMaguro(1))),()) preference(1,(1,5),1,for(atom(isSweet(1))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,8),1,for(atom(isButtery(1))),()) preference(1,(1,9),1,for(atom(isRoe(1))),()) preference(1,(1,10),1,for(atom(isButtery(1))),()) preference(1,(1,12),1,for(atom(isOctopus(1))),()) preference(1,(1,1),2,for(atom(isOctopus(1))),()) preference(1,(1,2),2,for(atom(isRoe(1))),()) preference(1,(1,3),2,for(atom(isUrchin(1))),()) preference(1,(1,4),2,for(atom(isRaw(1))),()) preference(1,(1,5),2,for(atom(isUnique(1))),()) preference(1,(1,6),2,for(atom(isButtery(1))),()) preference(1,(1,8),2,for(atom(isUrchin(1))),()) preference(1,(1,9),2,for(atom(isFattyFish(1))),()) preference(1,(1,10),2,for(atom(isUnique(1))),()) preference(1,(1,12),2,for(atom(isMaguro(1))),()) preference(1,poset) output(5,better,2) output(5,better,0) output(5,better,3) output(2,better,0) output(2,better,3) output(6,better,8) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,8) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(9,better,3) output(1,better,7) output(1,better,6) output(1,better,5) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(8,better,9) output(8,better,0) output(8,better,3) output(9,better,0) output(1,better,8) output(0,worse,3) output(6,unc,5) output(6,unc,2) output(5,unc,8) output(5,unc,9) output(8,unc,2) output(2,unc,9)
Optimization: 7 10
Answer: 12
preference(1,(1,1),1,for(atom(isSweet(1))),()) preference(1,(1,2),1,for(atom(isSweet(1))),()) preference(1,(1,3),1,for(atom(isMaguro(1))),()) preference(1,(1,4),1,for(atom(isMaguro(1))),()) preference(1,(1,5),1,for(atom(isSweet(1))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,8),1,for(atom(isButtery(1))),()) preference(1,(1,9),1,for(atom(isRoe(1))),()) preference(1,(1,10),1,for(atom(isButtery(1))),()) preference(1,(1,12),1,for(atom(isOctopus(1))),()) preference(1,(1,1),2,for(atom(isOctopus(1))),()) preference(1,(1,2),2,for(atom(isRoe(1))),()) preference(1,(1,3),2,for(atom(isRoe(1))),()) preference(1,(1,4),2,for(atom(isRaw(1))),()) preference(1,(1,5),2,for(atom(isUnique(1))),()) preference(1,(1,6),2,for(atom(isButtery(1))),()) preference(1,(1,8),2,for(atom(isUrchin(1))),()) preference(1,(1,9),2,for(atom(isFattyFish(1))),()) preference(1,(1,10),2,for(atom(isUnique(1))),()) preference(1,(1,12),2,for(atom(isMaguro(1))),()) preference(1,poset) output(5,better,8) output(5,better,2) output(5,better,9) output(5,better,0) output(5,better,3) output(2,better,9) output(2,better,0) output(2,better,3) output(6,better,8) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,8) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(9,better,3) output(1,better,7) output(1,better,6) output(1,better,5) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(8,better,9) output(8,better,0) output(8,better,3) output(9,better,0) output(1,better,8) output(6,worse,5) output(6,worse,2) output(8,worse,2) output(0,worse,3)
Optimization: 4 10
Answer: 13
preference(1,(1,1),1,for(atom(isSweet(1))),()) preference(1,(1,2),1,for(atom(isUrchin(1))),()) preference(1,(1,3),1,for(atom(isMaguro(1))),()) preference(1,(1,4),1,for(atom(isSweet(1))),()) preference(1,(1,5),1,for(atom(isSweet(1))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,7),1,for(atom(isUnique(1))),()) preference(1,(1,8),1,for(atom(isButtery(1))),()) preference(1,(1,10),1,for(atom(isButtery(1))),()) preference(1,(1,11),1,for(atom(isRoe(1))),()) preference(1,(1,12),1,for(atom(isOctopus(1))),()) preference(1,(1,1),2,for(atom(isOctopus(1))),()) preference(1,(1,2),2,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(isRoe(1))),()) preference(1,(1,4),2,for(atom(isRaw(0))),()) preference(1,(1,5),2,for(atom(isUnique(1))),()) preference(1,(1,6),2,for(atom(isButtery(1))),()) preference(1,(1,7),2,for(atom(isRaw(0))),()) preference(1,(1,8),2,for(atom(isUrchin(1))),()) preference(1,(1,10),2,for(atom(isUnique(1))),()) preference(1,(1,11),2,for(atom(isFattyFish(1))),()) preference(1,(1,12),2,for(atom(isMaguro(1))),()) preference(1,poset) output(5,better,8) output(5,better,2) output(5,better,9) output(5,better,0) output(5,better,3) output(2,better,9) output(2,better,0) output(2,better,3) output(6,better,8) output(6,better,9) output(6,better,0) output(6,better,3) output(7,better,6) output(7,better,5) output(7,better,8) output(7,better,2) output(7,better,9) output(7,better,0) output(7,better,3) output(9,better,3) output(0,better,3) output(1,better,7) output(1,better,6) output(1,better,5) output(1,better,2) output(1,better,9) output(1,better,0) output(1,better,3) output(8,better,9) output(8,better,0) output(8,better,3) output(9,better,0) output(1,better,8) output(6,worse,5) output(6,worse,2) output(8,worse,2)
Optimization: 3 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.054 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 3 11
Calls        : 1
Time         : 596.738s (Solving: 588.30s 1st Model: 1.49s Unsat: 0.00s)
CPU Time     : 2360.313s
Threads      : 4        (Winner: 4)

Choices      : 7985065  (Domain: 1524)
Conflicts    : 147654   (Analyzed: 147654)
Restarts     : 255      (Average: 579.04 Last: 6775)
Model-Level  : 2895.7  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 18638720 (Deleted: 18521809)
  Binary     : 2115     (Ratio:   0.01%)
  Ternary    : 46857    (Ratio:   0.25%)
  Conflict   : 147654   (Average Length: 1067.6 Ratio:   0.79%) 
  Loop       : 18433570 (Average Length:  262.7 Ratio:  98.90%) 
  Other      : 57496    (Average Length:    3.5 Ratio:   0.31%) 
  Distributed: 19176    (Ratio:   0.10% Average LBD: 2.83) 
  Integrated : 57525    (Ratio: 299.98% Unit: 146 Average Jumps: 1257.68)
Backjumps    : 147654   (Average: 48.21 Max: 120730 Sum: 7118186)
  Executed   : 147636   (Average: 48.21 Max: 120730 Sum: 7118152 Ratio: 100.00%)
  Bounded    : 18       (Average:  1.89 Max:   2 Sum:     34 Ratio:   0.00%)

Rules        : 1507578 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28238   
Bodies       : 1145797 
  Count      : 48      
Equivalences : 31205    (Atom=Atom: 4997 Body=Body: 7628 Other: 18580)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1102950  (Eliminated:    0 Frozen: 1092465)
Constraints  : 6430938  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isOctopus(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isCreamy(1)) >> atom(isRoe(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(isUnique(1)) >> atom(isButtery(1)) ; 
  atom(isRaw(0)) >> atom(isUnique(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(isButtery(1)) >> atom(isOctopus(1)) ; 
  atom(isButtery(1)) >> atom(isMaguro(1)) ; 
  atom(isShrimp(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isRaw(0)) ; 
  atom(isSweet(1)) >> atom(isMaguro(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(1)) ; 
  atom(isButtery(1)) >> atom(isShrimp(1)) ; 
  atom(isButtery(1)) >> atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(isUrchin(1)) ; 
  atom(isButtery(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isOctopus(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isTamago(1)) >> atom(isRoe(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isUnique(1)) ; 
  atom(isRoe(1)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(isSweet(1)) >> atom(isCreamy(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isSweet(1)) ; 
  atom(isButtery(1)) >> atom(isUnique(1)) ; 
  atom(isTamago(1)) >> atom(isOctopus(1)) ; 
  atom(isUrchin(1)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(isUrchin(1)) ; 
  atom(isButtery(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isOctopus(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isSweet(1)) >> atom(isCreamy(1)) ; 
  atom(isOctopus(1)) >> atom(isRoe(1)) ; 
  atom(isRoe(1)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(isFattyFish(1)) >> atom(isRoe(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isUnique(1)) ; 
  atom(isTamago(1)) >> atom(isOctopus(1)) ; 
  atom(isUrchin(1)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSweet(1)) >> atom(isOctopus(1)) ; 
  atom(isSweet(1)) >> atom(isRoe(1)) ; 
  atom(isSweet(1)) >> atom(isUrchin(1)) ; 
  atom(isMaguro(1)) >> atom(isRaw(1)) ; 
  atom(isSweet(1)) >> atom(isUnique(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isButtery(1)) >> atom(isUrchin(1)) ; 
  atom(isRoe(1)) >> atom(isFattyFish(1)) ; 
  atom(isButtery(1)) >> atom(isUnique(1)) ; 
  atom(isOctopus(1)) >> atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSweet(1)) >> atom(isOctopus(1)) ; 
  atom(isSweet(1)) >> atom(isRoe(1)) ; 
  atom(isMaguro(1)) >> atom(isRoe(1)) ; 
  atom(isMaguro(1)) >> atom(isRaw(1)) ; 
  atom(isSweet(1)) >> atom(isUnique(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isButtery(1)) >> atom(isUrchin(1)) ; 
  atom(isRoe(1)) >> atom(isFattyFish(1)) ; 
  atom(isButtery(1)) >> atom(isUnique(1)) ; 
  atom(isOctopus(1)) >> atom(isMaguro(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSweet(1)) >> atom(isOctopus(1)) ; 
  atom(isUrchin(1)) >> atom(hasPrice(0)) ; 
  atom(isMaguro(1)) >> atom(isRoe(1)) ; 
  atom(isSweet(1)) >> atom(isRaw(0)) ; 
  atom(isSweet(1)) >> atom(isUnique(1)) ; 
  atom(isFattyFish(1)) >> atom(isButtery(1)) ; 
  atom(isUnique(1)) >> atom(isRaw(0)) ; 
  atom(isButtery(1)) >> atom(isUrchin(1)) ; 
  atom(isButtery(1)) >> atom(isUnique(1)) ; 
  atom(isRoe(1)) >> atom(isFattyFish(1)) ; 
  atom(isOctopus(1)) >> atom(isMaguro(1)) 
}.
