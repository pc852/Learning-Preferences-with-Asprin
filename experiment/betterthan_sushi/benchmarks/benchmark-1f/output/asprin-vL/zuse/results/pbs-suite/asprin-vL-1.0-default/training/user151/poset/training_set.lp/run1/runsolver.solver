asprin_vL version 1.0
Reading from stdin
-:309:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:319:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:334:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:415:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:689:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:866:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:995:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1067:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1071:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1071:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1077:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1176:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1202:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1322:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1356:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1378:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:226:1-16: info: no atoms over signature occur in program:
  output/3

-:218:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:219:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:220:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(31,eq,15) output(23,eq,32) preference(1,poset) output(8,eq,6) output(8,eq,1) output(8,eq,11) output(8,eq,31) output(8,eq,23) output(8,eq,15) output(8,eq,9) output(8,eq,7) output(8,eq,32) output(6,eq,1) output(6,eq,11) output(6,eq,31) output(6,eq,23) output(6,eq,15) output(6,eq,9) output(6,eq,7) output(6,eq,32) output(1,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,7) output(1,eq,32) output(11,eq,31) output(11,eq,23) output(11,eq,15) output(11,eq,9) output(11,eq,7) output(11,eq,32) output(31,eq,23) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 45 0
Answer: 2
output(31,eq,15) output(23,eq,32) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,poset) output(8,better,7) output(6,better,7) output(11,better,7) output(8,better,1) output(8,better,23) output(8,better,9) output(8,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,32) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,32) output(8,better,31) output(8,better,15) output(1,worse,11) output(8,eq,6) output(8,eq,11) output(6,eq,11) output(1,eq,31) output(1,eq,23) output(1,eq,15) output(1,eq,9) output(1,eq,7) output(1,eq,32) output(31,eq,23) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 25 1
Answer: 3
output(31,eq,15) output(23,eq,32) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(3))),()) preference(1,poset) output(8,better,7) output(6,better,7) output(1,better,7) output(11,better,7) output(8,better,1) output(8,better,23) output(8,better,9) output(8,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,32) output(1,better,31) output(1,better,23) output(1,better,15) output(1,better,9) output(1,better,32) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,32) output(8,better,31) output(8,better,15) output(1,worse,11) output(8,eq,6) output(8,eq,11) output(6,eq,11) output(31,eq,23) output(31,eq,9) output(31,eq,7) output(31,eq,32) output(23,eq,15) output(23,eq,9) output(23,eq,7) output(15,eq,9) output(15,eq,7) output(15,eq,32) output(9,eq,7) output(9,eq,32) output(7,eq,32)
Optimization: 19 1
Answer: 4
output(31,eq,15) output(23,eq,32) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(8,better,7) output(6,better,7) output(1,better,7) output(11,better,7) output(31,better,7) output(15,better,7) output(9,better,7) output(8,better,1) output(8,better,11) output(8,better,23) output(8,better,9) output(8,better,32) output(31,better,23) output(31,better,32) output(15,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,32) output(1,better,23) output(1,better,32) output(9,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,32) output(8,better,31) output(8,better,15) output(23,worse,15) output(1,worse,11) output(23,worse,9) output(8,eq,6) output(1,eq,31) output(1,eq,15) output(1,eq,9) output(31,eq,9) output(23,eq,7) output(15,eq,9) output(7,eq,32)
Optimization: 13 1
Answer: 5
output(31,eq,15) output(23,eq,32) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(8,better,7) output(6,better,7) output(1,better,7) output(11,better,7) output(31,better,7) output(15,better,7) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,23) output(8,better,9) output(8,better,32) output(31,better,23) output(31,better,9) output(31,better,32) output(15,better,9) output(15,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,32) output(1,better,23) output(1,better,9) output(1,better,32) output(6,better,1) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,32) output(8,better,31) output(8,better,15) output(23,worse,15) output(1,worse,11) output(6,eq,11) output(23,eq,9) output(23,eq,7) output(9,eq,7) output(9,eq,32) output(7,eq,32) output(1,unc,31) output(1,unc,15)
Optimization: 12 2
Answer: 6
output(31,eq,15) output(23,eq,32) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(8,better,7) output(6,better,7) output(1,better,7) output(11,better,7) output(31,better,7) output(15,better,7) output(9,better,7) output(8,better,6) output(8,better,1) output(8,better,11) output(8,better,23) output(8,better,9) output(8,better,32) output(31,better,23) output(31,better,9) output(31,better,32) output(15,better,9) output(15,better,32) output(11,better,31) output(11,better,23) output(11,better,15) output(11,better,9) output(11,better,32) output(1,better,23) output(1,better,32) output(9,better,32) output(6,better,1) output(6,better,11) output(6,better,31) output(6,better,23) output(6,better,15) output(6,better,9) output(6,better,32) output(8,better,31) output(8,better,15) output(1,worse,31) output(1,worse,15) output(23,worse,15) output(1,worse,11) output(23,worse,9) output(1,eq,9) output(23,eq,7) output(7,eq,32)
Optimization: 10 2
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.033 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 6+
  Optimum    : unknown
Optimization : 10 2
Calls        : 1
Time         : 296.576s (Solving: 287.78s 1st Model: 1.71s Unsat: 0.00s)
CPU Time     : 1158.183s
Threads      : 4        (Winner: 4)

Choices      : 4910223  (Domain: 1186)
Conflicts    : 91573    (Analyzed: 91573)
Restarts     : 137      (Average: 668.42 Last: 1931)
Model-Level  : 245.0   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 9493459  (Deleted: 9373100)
  Binary     : 326      (Ratio:   0.00%)
  Ternary    : 27569    (Ratio:   0.29%)
  Conflict   : 91573    (Average Length: 1019.4 Ratio:   0.96%) 
  Loop       : 9377444  (Average Length:  289.8 Ratio:  98.78%) 
  Other      : 24442    (Average Length:    3.2 Ratio:   0.26%) 
  Distributed: 8151     (Ratio:   0.09% Average LBD: 2.88) 
  Integrated : 24452    (Ratio: 299.99% Unit: 84 Average Jumps: 6001.23)
Backjumps    : 91573    (Average: 40.27 Max: 154268 Sum: 3687389)
  Executed   : 91552    (Average: 40.27 Max: 154268 Sum: 3687347 Ratio: 100.00%)
  Bounded    : 21       (Average:  2.00 Max:   2 Sum:     42 Ratio:   0.00%)

Rules        : 1887363 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 35292   
Bodies       : 1399238 
  Count      : 48      
Equivalences : 32118    (Atom=Atom: 5050 Body=Body: 7760 Other: 19308)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 1339880 Gammas: 0)
Variables    : 1355939  (Eliminated:    0 Frozen: 1342655)
Constraints  : 7840595  (Binary:  82.4% Ternary:   4.3% Other:  13.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(1)) 
}.
