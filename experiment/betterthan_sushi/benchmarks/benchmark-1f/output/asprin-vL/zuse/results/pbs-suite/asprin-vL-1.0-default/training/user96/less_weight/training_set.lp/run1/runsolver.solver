asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,13) output(4,eq,42) output(4,eq,26) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,13) output(48,eq,42) output(48,eq,26) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,13) output(28,eq,42) output(28,eq,26) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,13) output(43,eq,42) output(43,eq,26) output(43,eq,0) output(1,eq,9) output(1,eq,13) output(1,eq,42) output(1,eq,26) output(1,eq,0) output(9,eq,13) output(9,eq,42) output(9,eq,26) output(9,eq,0) output(13,eq,42) output(13,eq,26) output(13,eq,0) output(42,eq,26) output(42,eq,0) output(26,eq,0)
Optimization: 45 0
Answer: 2
preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(48,better,42) output(1,better,42) output(4,better,42) output(9,better,42) output(13,better,42) output(28,better,42) output(43,better,42) output(42,worse,26) output(42,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,1) output(4,eq,9) output(4,eq,13) output(4,eq,26) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,1) output(48,eq,9) output(48,eq,13) output(48,eq,26) output(48,eq,0) output(28,eq,43) output(28,eq,1) output(28,eq,9) output(28,eq,13) output(28,eq,26) output(28,eq,0) output(43,eq,1) output(43,eq,9) output(43,eq,13) output(43,eq,26) output(43,eq,0) output(1,eq,9) output(1,eq,13) output(1,eq,26) output(1,eq,0) output(9,eq,13) output(9,eq,26) output(9,eq,0) output(13,eq,26) output(13,eq,0) output(26,eq,0)
Optimization: 38 1
Answer: 3
preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),7) preference(1,less(weight)) output(48,better,1) output(48,better,42) output(1,better,42) output(4,better,1) output(4,better,42) output(9,better,42) output(13,better,42) output(28,better,1) output(28,better,42) output(43,better,1) output(43,better,42) output(1,worse,9) output(1,worse,13) output(1,worse,26) output(1,worse,0) output(42,worse,26) output(42,worse,0) output(4,eq,48) output(4,eq,28) output(4,eq,43) output(4,eq,9) output(4,eq,13) output(4,eq,26) output(4,eq,0) output(48,eq,28) output(48,eq,43) output(48,eq,9) output(48,eq,13) output(48,eq,26) output(48,eq,0) output(28,eq,43) output(28,eq,9) output(28,eq,13) output(28,eq,26) output(28,eq,0) output(43,eq,9) output(43,eq,13) output(43,eq,26) output(43,eq,0) output(9,eq,13) output(9,eq,26) output(9,eq,0) output(13,eq,26) output(13,eq,0) output(26,eq,0)
Optimization: 34 2
Answer: 4
preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(48,better,28) output(48,better,1) output(48,better,42) output(1,better,42) output(4,better,1) output(4,better,42) output(9,better,42) output(13,better,42) output(28,better,1) output(28,better,42) output(43,better,1) output(43,better,42) output(1,worse,9) output(1,worse,13) output(1,worse,26) output(1,worse,0) output(4,worse,48) output(4,worse,28) output(4,worse,43) output(4,worse,9) output(4,worse,13) output(4,worse,26) output(4,worse,0) output(28,worse,43) output(28,worse,9) output(28,worse,13) output(28,worse,26) output(28,worse,0) output(42,worse,26) output(42,worse,0) output(48,eq,43) output(48,eq,9) output(48,eq,13) output(48,eq,26) output(48,eq,0) output(43,eq,9) output(43,eq,13) output(43,eq,26) output(43,eq,0) output(9,eq,13) output(9,eq,26) output(9,eq,0) output(13,eq,26) output(13,eq,0) output(26,eq,0)
Optimization: 33 4
Answer: 5
preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(48,better,28) output(48,better,1) output(48,better,42) output(1,better,42) output(4,better,28) output(4,better,1) output(4,better,42) output(9,better,42) output(13,better,42) output(28,better,1) output(28,better,42) output(43,better,1) output(43,better,42) output(1,worse,9) output(1,worse,13) output(1,worse,26) output(1,worse,0) output(28,worse,43) output(28,worse,9) output(28,worse,13) output(28,worse,26) output(28,worse,0) output(42,worse,26) output(42,worse,0) output(4,eq,48) output(4,eq,43) output(4,eq,9) output(4,eq,13) output(4,eq,26) output(4,eq,0) output(48,eq,43) output(48,eq,9) output(48,eq,13) output(48,eq,26) output(48,eq,0) output(43,eq,9) output(43,eq,13) output(43,eq,26) output(43,eq,0) output(9,eq,13) output(9,eq,26) output(9,eq,0) output(13,eq,26) output(13,eq,0) output(26,eq,0)
Optimization: 32 3
Answer: 6
preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(48,better,28) output(48,better,1) output(48,better,13) output(48,better,42) output(1,better,42) output(4,better,28) output(4,better,1) output(4,better,13) output(4,better,42) output(9,better,13) output(9,better,42) output(13,better,42) output(28,better,1) output(28,better,13) output(28,better,42) output(43,better,1) output(43,better,13) output(43,better,42) output(1,worse,9) output(1,worse,26) output(1,worse,0) output(13,worse,26) output(13,worse,0) output(28,worse,43) output(28,worse,9) output(28,worse,26) output(28,worse,0) output(42,worse,26) output(42,worse,0) output(4,eq,48) output(4,eq,43) output(4,eq,9) output(4,eq,26) output(4,eq,0) output(48,eq,43) output(48,eq,9) output(48,eq,26) output(48,eq,0) output(43,eq,9) output(43,eq,26) output(43,eq,0) output(1,eq,13) output(9,eq,26) output(9,eq,0) output(26,eq,0)
Optimization: 27 4
Answer: 7
preference(1,(1,3),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(48,better,28) output(48,better,1) output(48,better,13) output(48,better,42) output(48,better,26) output(4,better,28) output(4,better,1) output(4,better,13) output(4,better,42) output(4,better,26) output(9,better,13) output(9,better,42) output(9,better,26) output(13,better,42) output(28,better,1) output(28,better,13) output(28,better,42) output(43,better,1) output(43,better,13) output(43,better,42) output(43,better,26) output(26,worse,0) output(1,worse,9) output(1,worse,13) output(1,worse,26) output(1,worse,0) output(13,worse,26) output(13,worse,0) output(28,worse,43) output(28,worse,9) output(28,worse,0) output(42,worse,26) output(42,worse,0) output(4,eq,48) output(4,eq,43) output(4,eq,9) output(4,eq,0) output(48,eq,43) output(48,eq,9) output(48,eq,0) output(28,eq,26) output(43,eq,9) output(43,eq,0) output(1,eq,42) output(9,eq,0)
Optimization: 24 5
Answer: 8
preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,5),1,for(atom(hasStyle(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(48,better,1) output(48,better,42) output(48,better,26) output(1,better,26) output(4,better,1) output(4,better,42) output(4,better,26) output(9,better,42) output(9,better,26) output(13,better,42) output(13,better,26) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(43,better,1) output(43,better,42) output(43,better,26) output(26,worse,0) output(48,worse,28) output(1,worse,9) output(1,worse,13) output(1,worse,42) output(1,worse,0) output(4,worse,28) output(42,worse,0) output(4,eq,48) output(4,eq,43) output(4,eq,9) output(4,eq,13) output(4,eq,0) output(48,eq,43) output(48,eq,9) output(48,eq,13) output(48,eq,0) output(43,eq,9) output(43,eq,13) output(43,eq,0) output(9,eq,13) output(9,eq,0) output(13,eq,0)
Optimization: 23 8
Answer: 9
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasStyle(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(26,better,0) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,42) output(9,better,0) output(13,better,42) output(13,better,0) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(48,worse,43) output(1,worse,26) output(9,worse,26) output(13,worse,26) output(28,worse,43) output(42,worse,26) output(4,eq,43) output(48,eq,28) output(48,eq,26) output(28,eq,26) output(9,eq,13) output(42,eq,0)
Optimization: 12 9
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasStyle(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(48,better,28) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,28) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(26,worse,0) output(48,worse,43) output(4,worse,43) output(28,worse,43) output(4,eq,48) output(1,eq,9) output(42,eq,0)
Optimization: 7 14
Answer: 11
preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,3),1,for(atom(hasStyle(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),3) preference(1,less(weight)) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,42) output(9,better,26) output(13,better,42) output(13,better,26) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(26,worse,0) output(28,worse,43) output(42,worse,0) output(9,eq,13) output(9,eq,0) output(13,eq,0)
Optimization: 6 10
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(26,worse,0) output(1,worse,9) output(42,worse,0) output(4,eq,48) output(1,eq,13)
Optimization: 5 12
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,5),1,for(atom(hasStyle(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),7) preference(1,less(weight)) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(26,worse,0) output(4,eq,48) output(1,eq,9) output(42,eq,0)
Optimization: 4 11
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),2) preference(1,less(weight)) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(26,worse,0) output(28,eq,43) output(42,eq,0)
Optimization: 3 11
Answer: 15
preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),3) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(28,worse,43) output(42,eq,26)
Optimization: 2 11
Answer: 16
preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),3) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0) output(28,worse,43)
Optimization: 1 10
Answer: 17
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),5) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 12
Answer: 18
preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),5) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Answer: 19
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasPrice(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 10
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,11),1,for(atom(hasStyle(1))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 21
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 8
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),4) preference(1,(1,14),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(26,better,0) output(48,better,28) output(48,better,43) output(48,better,1) output(48,better,9) output(48,better,13) output(48,better,42) output(48,better,26) output(48,better,0) output(1,better,9) output(1,better,13) output(1,better,42) output(1,better,26) output(1,better,0) output(4,better,48) output(4,better,28) output(4,better,43) output(4,better,1) output(4,better,9) output(4,better,13) output(4,better,42) output(4,better,26) output(4,better,0) output(9,better,13) output(9,better,42) output(9,better,26) output(9,better,0) output(13,better,42) output(13,better,26) output(13,better,0) output(28,better,43) output(28,better,1) output(28,better,9) output(28,better,13) output(28,better,42) output(28,better,26) output(28,better,0) output(42,better,26) output(42,better,0) output(43,better,1) output(43,better,9) output(43,better,13) output(43,better,42) output(43,better,26) output(43,better,0)
Optimization: 0 7
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.035 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 296.537s (Solving: 294.96s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.096s
Threads      : 4        (Winner: 4)

Choices      : 8645655  (Domain: 716545)
Conflicts    : 5688136  (Analyzed: 5688133)
Restarts     : 5347     (Average: 1063.80 Last: 217253)
Model-Level  : 327.7   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 5816089  (Deleted: 5515630)
  Binary     : 296      (Ratio:   0.01%)
  Ternary    : 5147     (Ratio:   0.09%)
  Conflict   : 5688133  (Average Length:  233.6 Ratio:  97.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 127956   (Average Length:  275.4 Ratio:   2.20%) 
  Distributed: 42701    (Ratio:   0.75% Average LBD: 3.78) 
  Integrated : 128103   (Ratio: 300.00% Unit: 136 Average Jumps: 10.85)
Backjumps    : 5688133  (Average:  1.42 Max: 651 Sum: 8089758)
  Executed   : 5688132  (Average:  1.42 Max: 651 Sum: 8089715 Ratio: 100.00%)
  Bounded    : 1        (Average: 43.00 Max:  43 Sum:     43 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(0)) 
}.
