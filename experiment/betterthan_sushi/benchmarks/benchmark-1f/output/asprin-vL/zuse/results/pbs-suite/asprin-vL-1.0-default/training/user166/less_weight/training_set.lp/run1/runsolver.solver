asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,58) output(8,eq,18) output(8,eq,47) output(8,eq,20) output(8,eq,11) output(8,eq,3) output(8,eq,33) output(8,eq,12) output(8,eq,4) output(58,eq,18) output(58,eq,47) output(58,eq,20) output(58,eq,11) output(58,eq,3) output(58,eq,33) output(58,eq,12) output(58,eq,4) output(18,eq,47) output(18,eq,20) output(18,eq,11) output(18,eq,3) output(18,eq,33) output(18,eq,12) output(18,eq,4) output(47,eq,20) output(47,eq,11) output(47,eq,3) output(47,eq,33) output(47,eq,12) output(47,eq,4) output(20,eq,11) output(20,eq,3) output(20,eq,33) output(20,eq,12) output(20,eq,4) output(11,eq,3) output(11,eq,33) output(11,eq,12) output(11,eq,4) output(3,eq,33) output(3,eq,12) output(3,eq,4) output(33,eq,12) output(33,eq,4) output(12,eq,4)
Optimization: 45 0
Answer: 2
preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(3,better,4) output(8,better,4) output(11,better,4) output(12,better,4) output(18,better,4) output(20,better,4) output(33,better,4) output(47,better,4) output(58,better,4) output(8,eq,58) output(8,eq,18) output(8,eq,47) output(8,eq,20) output(8,eq,11) output(8,eq,3) output(8,eq,33) output(8,eq,12) output(58,eq,18) output(58,eq,47) output(58,eq,20) output(58,eq,11) output(58,eq,3) output(58,eq,33) output(58,eq,12) output(18,eq,47) output(18,eq,20) output(18,eq,11) output(18,eq,3) output(18,eq,33) output(18,eq,12) output(47,eq,20) output(47,eq,11) output(47,eq,3) output(47,eq,33) output(47,eq,12) output(20,eq,11) output(20,eq,3) output(20,eq,33) output(20,eq,12) output(11,eq,3) output(11,eq,33) output(11,eq,12) output(3,eq,33) output(3,eq,12) output(33,eq,12)
Optimization: 36 1
Answer: 3
preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(8,better,33) output(8,better,12) output(11,better,33) output(11,better,12) output(18,better,33) output(18,better,12) output(20,better,33) output(20,better,12) output(47,better,33) output(47,better,12) output(58,better,33) output(58,better,12) output(12,worse,4) output(33,worse,4) output(8,eq,58) output(8,eq,18) output(8,eq,47) output(8,eq,20) output(8,eq,11) output(8,eq,3) output(8,eq,4) output(58,eq,18) output(58,eq,47) output(58,eq,20) output(58,eq,11) output(58,eq,3) output(58,eq,4) output(18,eq,47) output(18,eq,20) output(18,eq,11) output(18,eq,3) output(18,eq,4) output(47,eq,20) output(47,eq,11) output(47,eq,3) output(47,eq,4) output(20,eq,11) output(20,eq,3) output(20,eq,4) output(11,eq,3) output(11,eq,4) output(3,eq,4) output(33,eq,12)
Optimization: 31 1
Answer: 4
preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,33) output(58,better,12) output(58,better,4) output(8,eq,58) output(8,eq,18) output(8,eq,47) output(8,eq,20) output(8,eq,11) output(8,eq,3) output(58,eq,18) output(58,eq,47) output(58,eq,20) output(58,eq,11) output(58,eq,3) output(18,eq,47) output(18,eq,20) output(18,eq,11) output(18,eq,3) output(47,eq,20) output(47,eq,11) output(47,eq,3) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 22 2
Answer: 5
preference(1,(1,5),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,58) output(8,worse,47) output(8,worse,20) output(8,worse,11) output(8,worse,3) output(18,worse,47) output(18,worse,20) output(18,worse,11) output(18,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(58,worse,20) output(58,worse,11) output(58,worse,3) output(8,eq,18) output(58,eq,47) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 21 6
Answer: 6
preference(1,(1,5),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,18) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,58) output(8,worse,47) output(8,worse,20) output(8,worse,11) output(8,worse,3) output(18,worse,47) output(18,worse,20) output(18,worse,11) output(18,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(58,worse,20) output(58,worse,11) output(58,worse,3) output(58,eq,47) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 20 6
Answer: 7
preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,18) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,58) output(8,worse,47) output(8,worse,20) output(8,worse,11) output(8,worse,3) output(18,worse,47) output(18,worse,20) output(18,worse,11) output(18,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(58,eq,20) output(58,eq,11) output(58,eq,3) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 19 5
Answer: 8
preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,18) output(8,better,47) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,33) output(58,better,12) output(58,better,4) output(18,worse,47) output(18,worse,20) output(18,worse,11) output(18,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(8,eq,58) output(8,eq,20) output(8,eq,11) output(8,eq,3) output(58,eq,20) output(58,eq,11) output(58,eq,3) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 18 4
Answer: 9
preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,33) output(58,better,12) output(58,better,4) output(18,worse,47) output(18,worse,20) output(18,worse,11) output(18,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(58,worse,20) output(58,worse,11) output(58,worse,3) output(8,eq,20) output(8,eq,11) output(8,eq,3) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 17 5
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(3,worse,4) output(12,worse,4) output(33,worse,4) output(8,eq,58) output(8,eq,18) output(8,eq,47) output(58,eq,18) output(58,eq,47) output(18,eq,47) output(20,eq,11) output(20,eq,4) output(11,eq,4) output(3,eq,33) output(3,eq,12) output(33,eq,12)
Optimization: 15 9
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,3) output(11,worse,3) output(18,worse,20) output(18,worse,11) output(18,worse,3) output(20,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(58,worse,3) output(58,eq,20) output(58,eq,11) output(20,eq,11) output(33,eq,12)
Optimization: 14 9
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,3) output(11,worse,3) output(18,worse,3) output(20,worse,3) output(47,worse,20) output(47,worse,11) output(47,worse,3) output(58,worse,3) output(18,eq,20) output(18,eq,11) output(20,eq,11) output(33,eq,12)
Optimization: 12 10
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,20) output(58,better,11) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,18) output(8,worse,3) output(11,worse,3) output(18,worse,3) output(20,worse,3) output(47,worse,3) output(58,worse,18) output(58,worse,3) output(58,eq,47) output(20,eq,11) output(33,eq,12)
Optimization: 11 10
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,18) output(8,worse,3) output(11,worse,3) output(18,worse,3) output(20,worse,3) output(47,worse,3) output(58,worse,18) output(58,worse,3) output(20,eq,11) output(33,eq,12)
Optimization: 10 10
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,20) output(18,better,11) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,3) output(11,worse,3) output(18,worse,3) output(20,worse,3) output(47,worse,3) output(58,worse,3) output(18,eq,47) output(20,eq,11) output(33,eq,12)
Optimization: 9 10
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,3) output(11,worse,3) output(18,worse,3) output(20,worse,3) output(47,worse,3) output(58,worse,3) output(20,eq,11) output(33,eq,12)
Optimization: 8 10
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(47,better,20) output(47,better,11) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(11,worse,3) output(20,worse,3) output(47,eq,3) output(20,eq,11) output(33,eq,12) output(33,eq,4) output(12,eq,4)
Optimization: 7 10
Answer: 18
preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(12,worse,4) output(33,worse,4) output(47,eq,20) output(47,eq,11) output(20,eq,11) output(33,eq,12)
Optimization: 6 11
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(11,worse,3) output(20,worse,3) output(47,eq,3) output(20,eq,11) output(33,eq,12)
Optimization: 5 11
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(20,eq,3) output(11,eq,3) output(33,eq,12)
Optimization: 4 11
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,13),1,for(atom(hasStyle(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,58) output(18,worse,47) output(20,eq,11) output(33,eq,12)
Optimization: 4 10
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,12),1,for(atom(hasOiliness(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),5) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(18,eq,47) output(20,eq,11) output(33,eq,12)
Optimization: 3 12
Answer: 23
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,11),1,for(atom(hasPrice(1))),7) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(8,worse,58) output(20,eq,11) output(33,eq,12)
Optimization: 3 11
Answer: 24
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(33,eq,12)
Optimization: 2 13
Progression : 2 [ 1;13] (Error: 12)
Answer: 25
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(33,eq,12)
Optimization: 2 12
Answer: 26
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(33,eq,12)
Optimization: 2 10
Answer: 27
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(33,eq,12)
Optimization: 2 9
Progression : 2 [2;9] (Error: 3.5)
Answer: 28
preference(1,(1,3),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(33,eq,12)
Optimization: 2 8
Progression : 2 [3;8] (Error: 1.66667)
Answer: 29
preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasStyle(1))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(3,better,33) output(3,better,12) output(3,better,4) output(8,better,58) output(8,better,18) output(8,better,47) output(8,better,20) output(8,better,11) output(8,better,3) output(8,better,33) output(8,better,12) output(8,better,4) output(11,better,3) output(11,better,33) output(11,better,12) output(11,better,4) output(12,better,4) output(18,better,47) output(18,better,20) output(18,better,11) output(18,better,3) output(18,better,33) output(18,better,12) output(18,better,4) output(20,better,3) output(20,better,33) output(20,better,12) output(20,better,4) output(33,better,4) output(47,better,20) output(47,better,11) output(47,better,3) output(47,better,33) output(47,better,12) output(47,better,4) output(58,better,18) output(58,better,47) output(58,better,20) output(58,better,11) output(58,better,3) output(58,better,33) output(58,better,12) output(58,better,4) output(20,eq,11) output(33,eq,12)
Optimization: 2 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.059 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 29+
  Optimum    : unknown
Optimization : 2 7
Calls        : 1
Time         : 296.489s (Solving: 294.91s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.858s
Threads      : 4        (Winner: 4)

Choices      : 10330769 (Domain: 722477)
Conflicts    : 6274860  (Analyzed: 6274857)
Restarts     : 5398     (Average: 1162.44 Last: 399404)
Model-Level  : 249.1   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6302264  (Deleted: 5996317)
  Binary     : 471      (Ratio:   0.01%)
  Ternary    : 3328     (Ratio:   0.05%)
  Conflict   : 6274857  (Average Length:  242.5 Ratio:  99.57%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 27407    (Average Length:   32.3 Ratio:   0.43%) 
  Distributed: 9177     (Ratio:   0.15% Average LBD: 3.60) 
  Integrated : 27531    (Ratio: 300.00% Unit: 169 Average Jumps: 11.30)
Backjumps    : 6274857  (Average:  1.52 Max: 492 Sum: 9553405)
  Executed   : 6274856  (Average:  1.52 Max: 492 Sum: 9553391 Ratio: 100.00%)
  Bounded    : 1        (Average: 14.00 Max:  14 Sum:     14 Ratio:   0.00%)

Rules        : 174776  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8129    
  Sum        : 58      
  Count      : 14      
Equivalences : 8183     (Atom=Atom: 534 Body=Body: 271 Other: 7378)
Tight        : Yes
Variables    : 6930     (Eliminated:    0 Frozen: 4270)
Constraints  : 177314   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(1)) 
}.
