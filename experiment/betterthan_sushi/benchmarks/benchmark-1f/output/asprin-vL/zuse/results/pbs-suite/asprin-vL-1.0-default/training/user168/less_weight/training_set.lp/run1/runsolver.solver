asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(13,eq,1) output(13,eq,20) output(13,eq,52) output(13,eq,26) output(13,eq,22) output(13,eq,10) output(13,eq,0) output(13,eq,44) output(13,eq,35) output(1,eq,20) output(1,eq,52) output(1,eq,26) output(1,eq,22) output(1,eq,10) output(1,eq,0) output(1,eq,44) output(1,eq,35) output(20,eq,52) output(20,eq,26) output(20,eq,22) output(20,eq,10) output(20,eq,0) output(20,eq,44) output(20,eq,35) output(52,eq,26) output(52,eq,22) output(52,eq,10) output(52,eq,0) output(52,eq,44) output(52,eq,35) output(26,eq,22) output(26,eq,10) output(26,eq,0) output(26,eq,44) output(26,eq,35) output(22,eq,10) output(22,eq,0) output(22,eq,44) output(22,eq,35) output(10,eq,0) output(10,eq,44) output(10,eq,35) output(0,eq,44) output(0,eq,35) output(44,eq,35)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(26,better,10) output(1,better,52) output(1,better,10) output(13,better,52) output(13,better,10) output(20,better,52) output(20,better,10) output(22,better,10) output(10,worse,0) output(10,worse,44) output(10,worse,35) output(52,worse,26) output(52,worse,22) output(52,worse,0) output(52,worse,44) output(52,worse,35) output(13,eq,1) output(13,eq,20) output(13,eq,26) output(13,eq,22) output(13,eq,0) output(13,eq,44) output(13,eq,35) output(1,eq,20) output(1,eq,26) output(1,eq,22) output(1,eq,0) output(1,eq,44) output(1,eq,35) output(20,eq,26) output(20,eq,22) output(20,eq,0) output(20,eq,44) output(20,eq,35) output(52,eq,10) output(26,eq,22) output(26,eq,0) output(26,eq,44) output(26,eq,35) output(22,eq,0) output(22,eq,44) output(22,eq,35) output(0,eq,44) output(0,eq,35) output(44,eq,35)
Optimization: 37 1
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(1,better,22) output(1,better,0) output(10,better,0) output(13,better,22) output(13,better,0) output(20,better,22) output(20,better,0) output(52,better,22) output(52,better,0) output(0,worse,44) output(0,worse,35) output(22,worse,10) output(22,worse,44) output(22,worse,35) output(13,eq,1) output(13,eq,20) output(13,eq,52) output(13,eq,26) output(13,eq,10) output(13,eq,44) output(13,eq,35) output(1,eq,20) output(1,eq,52) output(1,eq,26) output(1,eq,10) output(1,eq,44) output(1,eq,35) output(20,eq,52) output(20,eq,26) output(20,eq,10) output(20,eq,44) output(20,eq,35) output(52,eq,26) output(52,eq,10) output(52,eq,44) output(52,eq,35) output(26,eq,10) output(26,eq,44) output(26,eq,35) output(22,eq,0) output(10,eq,44) output(10,eq,35) output(44,eq,35)
Optimization: 34 14
Answer: 4
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),2) preference(1,less(weight)) output(1,better,52) output(1,better,26) output(1,better,10) output(13,better,1) output(13,better,52) output(13,better,26) output(13,better,10) output(20,better,52) output(20,better,26) output(20,better,10) output(22,better,10) output(26,worse,22) output(26,worse,0) output(26,worse,44) output(26,worse,35) output(1,worse,20) output(1,worse,22) output(1,worse,0) output(1,worse,44) output(1,worse,35) output(10,worse,0) output(10,worse,44) output(10,worse,35) output(52,worse,22) output(52,worse,0) output(52,worse,44) output(52,worse,35) output(13,eq,20) output(13,eq,22) output(13,eq,0) output(13,eq,44) output(13,eq,35) output(20,eq,22) output(20,eq,0) output(20,eq,44) output(20,eq,35) output(52,eq,26) output(52,eq,10) output(26,eq,10) output(22,eq,0) output(22,eq,44) output(22,eq,35) output(0,eq,44) output(0,eq,35) output(44,eq,35)
Optimization: 34 13
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,44) output(0,better,44) output(1,better,22) output(1,better,0) output(1,better,44) output(10,better,0) output(10,better,44) output(13,better,22) output(13,better,0) output(13,better,44) output(20,better,22) output(20,better,0) output(20,better,44) output(22,better,44) output(52,better,22) output(52,better,0) output(52,better,44) output(0,worse,35) output(22,worse,10) output(22,worse,35) output(44,worse,35) output(13,eq,1) output(13,eq,20) output(13,eq,52) output(13,eq,26) output(13,eq,10) output(13,eq,35) output(1,eq,20) output(1,eq,52) output(1,eq,26) output(1,eq,10) output(1,eq,35) output(20,eq,52) output(20,eq,26) output(20,eq,10) output(20,eq,35) output(52,eq,26) output(52,eq,10) output(52,eq,35) output(26,eq,10) output(26,eq,35) output(22,eq,0) output(10,eq,35)
Optimization: 26 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,35) output(0,better,35) output(1,better,22) output(1,better,0) output(1,better,35) output(10,better,0) output(10,better,35) output(13,better,22) output(13,better,0) output(13,better,35) output(20,better,22) output(20,better,0) output(20,better,35) output(22,better,35) output(44,better,35) output(52,better,22) output(52,better,0) output(52,better,35) output(0,worse,44) output(22,worse,10) output(22,worse,44) output(13,eq,1) output(13,eq,20) output(13,eq,52) output(13,eq,26) output(13,eq,10) output(13,eq,44) output(1,eq,20) output(1,eq,52) output(1,eq,26) output(1,eq,10) output(1,eq,44) output(20,eq,52) output(20,eq,26) output(20,eq,10) output(20,eq,44) output(52,eq,26) output(52,eq,10) output(52,eq,44) output(26,eq,10) output(26,eq,44) output(22,eq,0) output(10,eq,44)
Optimization: 25 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),3) preference(1,less(weight)) output(26,better,22) output(26,better,10) output(26,better,0) output(26,better,44) output(26,better,35) output(1,better,52) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(13,better,52) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(52,worse,26) output(13,eq,1) output(13,eq,20) output(13,eq,26) output(1,eq,20) output(1,eq,26) output(20,eq,26) output(52,eq,22) output(52,eq,10) output(52,eq,0) output(52,eq,44) output(52,eq,35) output(22,eq,10) output(22,eq,0) output(22,eq,44) output(22,eq,35) output(10,eq,0) output(10,eq,44) output(10,eq,35) output(0,eq,44) output(0,eq,35) output(44,eq,35)
Optimization: 22 10
Progression : [ 2;22] (Error: 10)
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasStyle(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),3) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,44) output(0,better,44) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(10,better,0) output(10,better,44) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(22,better,44) output(52,better,22) output(52,better,0) output(52,better,44) output(26,worse,35) output(0,worse,35) output(10,worse,35) output(22,worse,10) output(22,worse,35) output(44,worse,35) output(52,worse,35) output(13,eq,1) output(13,eq,20) output(13,eq,35) output(1,eq,20) output(1,eq,35) output(20,eq,35) output(52,eq,26) output(52,eq,10) output(26,eq,10) output(22,eq,0)
Optimization: 17 13
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,3),1,for(atom(hasStyle(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,44) output(26,better,35) output(1,better,22) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,22) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,0) output(22,better,44) output(22,better,35) output(52,better,22) output(52,better,0) output(52,better,44) output(52,better,35) output(1,worse,20) output(13,worse,20) output(22,worse,10) output(13,eq,1) output(13,eq,52) output(13,eq,26) output(13,eq,10) output(1,eq,52) output(1,eq,26) output(1,eq,10) output(52,eq,26) output(52,eq,10) output(26,eq,10) output(0,eq,44) output(0,eq,35) output(44,eq,35)
Optimization: 16 12
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),3) preference(1,less(weight)) output(26,better,22) output(26,better,10) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,52) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,44) output(10,better,35) output(13,better,52) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,44) output(22,better,35) output(52,better,44) output(52,better,35) output(52,worse,26) output(13,eq,1) output(13,eq,20) output(13,eq,26) output(1,eq,20) output(1,eq,26) output(20,eq,26) output(52,eq,22) output(52,eq,10) output(52,eq,0) output(22,eq,10) output(22,eq,0) output(10,eq,0) output(44,eq,35)
Optimization: 14 9
Answer: 11
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),8) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(26,better,22) output(26,better,10) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,52) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,44) output(10,better,35) output(13,better,52) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,35) output(44,better,35) output(52,better,22) output(52,better,44) output(52,better,35) output(1,worse,20) output(1,worse,26) output(13,worse,20) output(13,worse,26) output(20,worse,26) output(22,worse,10) output(22,worse,0) output(52,worse,26) output(13,eq,1) output(52,eq,10) output(52,eq,0) output(22,eq,44) output(10,eq,0)
Optimization: 13 14
Answer: 12
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,5),1,for(atom(hasStyle(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,9),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,13),1,for(atom(hasOiliness(1))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),8) preference(1,less(weight)) output(26,better,22) output(26,better,10) output(26,better,0) output(26,better,35) output(0,better,35) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,35) output(10,better,0) output(10,better,35) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,0) output(22,better,35) output(44,better,35) output(52,better,22) output(52,better,0) output(52,better,35) output(26,worse,44) output(0,worse,44) output(1,worse,20) output(10,worse,44) output(13,worse,20) output(22,worse,10) output(22,worse,44) output(52,worse,26) output(52,worse,44) output(13,eq,1) output(13,eq,44) output(1,eq,44) output(52,eq,10)
Optimization: 13 13
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),7) preference(1,(1,9),1,for(atom(hasStyle(1))),3) preference(1,(1,10),1,for(atom(hasPrice(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),3) preference(1,less(weight)) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,10) output(22,better,0) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,0) output(52,better,44) output(52,better,35) output(26,worse,22) output(52,worse,22) output(13,eq,1) output(52,eq,26) output(52,eq,10) output(26,eq,10)
Optimization: 6 12
Progression : [3;6] (Error: 1)
Answer: 14
preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,8),1,for(atom(hasStyle(0))),5) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasStyle(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),6) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,26) output(52,better,22) output(52,better,0) output(52,better,44) output(52,better,35) output(26,worse,10) output(22,worse,10) output(22,worse,0) output(13,eq,1) output(52,eq,10)
Optimization: 5 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),4) preference(1,(1,14),1,for(atom(hasStyle(1))),6) preference(1,less(weight)) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,1) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,10) output(22,better,0) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,26) output(52,better,0) output(52,better,44) output(52,better,35) output(26,worse,22) output(26,worse,10) output(52,worse,22) output(52,eq,10)
Optimization: 4 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,2),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,12),1,for(atom(hasStyle(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(26,better,22) output(26,better,10) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,1) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,10) output(22,better,0) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,0) output(52,better,44) output(52,better,35) output(52,worse,26) output(52,worse,22) output(52,eq,10)
Optimization: 3 12
Progression : 3 [ 1;12] (Error: 11)
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,3),1,for(atom(hasPrice(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,5),1,for(atom(hasPrice(0))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,1) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,0) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,26) output(52,better,22) output(52,better,0) output(52,better,44) output(52,better,35) output(26,worse,10) output(22,worse,10) output(52,eq,10)
Optimization: 3 11
Progression : 3 [ 2;11] (Error: 4.5)
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(26,better,22) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,1) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,0) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,26) output(52,better,22) output(52,better,0) output(52,better,44) output(52,better,35) output(26,worse,10) output(22,worse,10) output(52,eq,10)
Optimization: 3 9
Progression : 3 [3;9] (Error: 2)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),4) preference(1,less(weight)) output(26,better,22) output(26,better,10) output(26,better,0) output(26,better,44) output(26,better,35) output(0,better,44) output(0,better,35) output(1,better,20) output(1,better,52) output(1,better,26) output(1,better,22) output(1,better,10) output(1,better,0) output(1,better,44) output(1,better,35) output(10,better,0) output(10,better,44) output(10,better,35) output(13,better,1) output(13,better,20) output(13,better,52) output(13,better,26) output(13,better,22) output(13,better,10) output(13,better,0) output(13,better,44) output(13,better,35) output(20,better,52) output(20,better,26) output(20,better,22) output(20,better,10) output(20,better,0) output(20,better,44) output(20,better,35) output(22,better,10) output(22,better,0) output(22,better,44) output(22,better,35) output(44,better,35) output(52,better,0) output(52,better,44) output(52,better,35) output(52,worse,26) output(52,worse,22) output(52,eq,10)
Optimization: 3 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.074 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 3 8
Bounds       : 3 [3;8]
Calls        : 1
Time         : 296.513s (Solving: 294.94s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.903s
Threads      : 4        (Winner: 4)

Choices      : 7935012  (Domain: 735395)
Conflicts    : 6105029  (Analyzed: 6105024)
Restarts     : 6142     (Average: 993.98 Last: 315483)
Model-Level  : 53.3    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 6179930  (Deleted: 5874376)
  Binary     : 856      (Ratio:   0.01%)
  Ternary    : 7533     (Ratio:   0.12%)
  Conflict   : 6105023  (Average Length:  219.9 Ratio:  98.79%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 74907    (Average Length:   33.4 Ratio:   1.21%) 
  Distributed: 25047    (Ratio:   0.41% Average LBD: 3.64) 
  Integrated : 75141    (Ratio: 300.00% Unit: 346 Average Jumps: 7.26)
Backjumps    : 6105024  (Average:  1.24 Max: 395 Sum: 7587616)
  Executed   : 6105019  (Average:  1.24 Max: 395 Sum: 7587533 Ratio: 100.00%)
  Bounded    : 5        (Average: 16.60 Max:  28 Sum:     83 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8148    
  Sum        : 77      
  Count      : 14      
Equivalences : 8219     (Atom=Atom: 491 Body=Body: 225 Other: 7503)
Tight        : Yes
Variables    : 6967     (Eliminated:    0 Frozen: 4307)
Constraints  : 177932   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasStyle(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasStyle(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(2)) 
}.
