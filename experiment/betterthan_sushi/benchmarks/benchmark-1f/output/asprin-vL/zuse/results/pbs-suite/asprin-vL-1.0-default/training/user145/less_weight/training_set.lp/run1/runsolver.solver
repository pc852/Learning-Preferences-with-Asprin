asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,7) output(8,eq,71) output(8,eq,12) output(8,eq,23) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,7) output(19,eq,71) output(19,eq,12) output(19,eq,23) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,7) output(3,eq,71) output(3,eq,12) output(3,eq,23) output(53,eq,47) output(53,eq,36) output(53,eq,7) output(53,eq,71) output(53,eq,12) output(53,eq,23) output(47,eq,36) output(47,eq,7) output(47,eq,71) output(47,eq,12) output(47,eq,23) output(36,eq,7) output(36,eq,71) output(36,eq,12) output(36,eq,23) output(7,eq,71) output(7,eq,12) output(7,eq,23) output(71,eq,12) output(71,eq,23) output(12,eq,23)
Optimization: 45 0
Answer: 2
preference(1,(1,12),1,for(atom(hasMinorGrp(11))),8) preference(1,less(weight)) output(3,better,71) output(7,better,71) output(8,better,71) output(19,better,71) output(36,better,71) output(47,better,71) output(53,better,71) output(71,worse,12) output(71,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(8,eq,7) output(8,eq,12) output(8,eq,23) output(19,eq,3) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(19,eq,7) output(19,eq,12) output(19,eq,23) output(3,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,7) output(3,eq,12) output(3,eq,23) output(53,eq,47) output(53,eq,36) output(53,eq,7) output(53,eq,12) output(53,eq,23) output(47,eq,36) output(47,eq,7) output(47,eq,12) output(47,eq,23) output(36,eq,7) output(36,eq,12) output(36,eq,23) output(7,eq,12) output(7,eq,23) output(12,eq,23)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(3,better,53) output(3,better,47) output(3,better,36) output(8,better,47) output(8,better,36) output(19,better,47) output(19,better,36) output(47,better,36) output(53,better,47) output(53,better,36) output(8,worse,3) output(8,worse,7) output(8,worse,71) output(8,worse,12) output(8,worse,23) output(19,worse,3) output(19,worse,7) output(19,worse,71) output(19,worse,12) output(19,worse,23) output(36,worse,7) output(36,worse,71) output(36,worse,12) output(36,worse,23) output(47,worse,7) output(47,worse,71) output(47,worse,12) output(47,worse,23) output(53,worse,7) output(53,worse,71) output(53,worse,12) output(53,worse,23) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,7) output(3,eq,71) output(3,eq,12) output(3,eq,23) output(7,eq,71) output(7,eq,12) output(7,eq,23) output(71,eq,12) output(71,eq,23) output(12,eq,23)
Optimization: 35 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(71,better,23) output(3,better,23) output(7,better,23) output(8,better,23) output(12,better,23) output(19,better,23) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,23) output(71,worse,12) output(3,worse,47) output(3,worse,36) output(3,worse,7) output(3,worse,71) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(8,worse,47) output(8,worse,36) output(8,worse,7) output(8,worse,71) output(8,worse,12) output(19,worse,47) output(19,worse,36) output(19,worse,7) output(19,worse,71) output(19,worse,12) output(36,worse,71) output(36,worse,12) output(53,worse,47) output(53,worse,36) output(53,worse,7) output(53,worse,71) output(53,worse,12) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(19,eq,3) output(19,eq,53) output(3,eq,53) output(47,eq,12) output(36,eq,7)
Optimization: 33 7
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(3,better,53) output(3,better,7) output(3,better,71) output(7,better,71) output(8,better,7) output(8,better,71) output(19,better,7) output(19,better,71) output(36,better,7) output(36,better,71) output(47,better,7) output(47,better,71) output(53,better,7) output(53,better,71) output(71,worse,12) output(71,worse,23) output(7,worse,12) output(7,worse,23) output(8,worse,3) output(8,worse,47) output(8,worse,36) output(8,worse,12) output(8,worse,23) output(19,worse,3) output(19,worse,47) output(19,worse,36) output(19,worse,12) output(19,worse,23) output(53,worse,47) output(53,worse,36) output(53,worse,12) output(53,worse,23) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,12) output(3,eq,23) output(47,eq,36) output(47,eq,12) output(47,eq,23) output(36,eq,12) output(36,eq,23) output(12,eq,23)
Optimization: 31 14
Progression : [ 4;31] (Error: 6.75)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(3,better,7) output(3,better,71) output(7,better,71) output(8,better,7) output(8,better,71) output(12,better,23) output(19,better,7) output(19,better,71) output(36,better,7) output(36,better,71) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,7) output(53,better,71) output(71,worse,12) output(71,worse,23) output(3,worse,47) output(3,worse,36) output(3,worse,12) output(3,worse,23) output(7,worse,12) output(7,worse,23) output(8,worse,47) output(8,worse,36) output(8,worse,12) output(8,worse,23) output(19,worse,47) output(19,worse,36) output(19,worse,12) output(19,worse,23) output(36,worse,12) output(53,worse,47) output(53,worse,36) output(53,worse,12) output(53,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(19,eq,3) output(19,eq,53) output(3,eq,53) output(47,eq,12) output(36,eq,23)
Optimization: 29 8
Answer: 7
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(71,better,23) output(3,better,7) output(3,better,23) output(8,better,7) output(8,better,23) output(12,better,23) output(19,better,7) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,7) output(53,better,23) output(71,worse,12) output(3,worse,47) output(3,worse,36) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(8,worse,47) output(8,worse,36) output(8,worse,12) output(19,worse,47) output(19,worse,36) output(19,worse,12) output(36,worse,12) output(53,worse,47) output(53,worse,36) output(53,worse,12) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,71) output(19,eq,3) output(19,eq,53) output(19,eq,71) output(3,eq,53) output(3,eq,71) output(53,eq,71) output(47,eq,12) output(7,eq,23)
Optimization: 28 8
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),1) preference(1,less(weight)) output(71,better,23) output(3,better,7) output(3,better,23) output(7,better,23) output(8,better,7) output(8,better,23) output(12,better,23) output(19,better,7) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,23) output(53,better,7) output(53,better,23) output(71,worse,12) output(3,worse,47) output(3,worse,36) output(3,worse,12) output(7,worse,71) output(7,worse,12) output(8,worse,47) output(8,worse,36) output(8,worse,12) output(19,worse,47) output(19,worse,36) output(19,worse,12) output(36,worse,12) output(53,worse,47) output(53,worse,36) output(53,worse,12) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(8,eq,71) output(19,eq,3) output(19,eq,53) output(19,eq,71) output(3,eq,53) output(3,eq,71) output(53,eq,71) output(47,eq,12)
Optimization: 27 8
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,9),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasStyle(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),3) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,53) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,71) output(53,better,12) output(53,better,23) output(8,worse,3) output(8,worse,47) output(8,worse,36) output(8,worse,7) output(19,worse,3) output(19,worse,47) output(19,worse,36) output(19,worse,7) output(53,worse,47) output(53,worse,36) output(53,worse,7) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,47) output(3,eq,36) output(3,eq,7) output(47,eq,36) output(47,eq,7) output(36,eq,7)
Optimization: 20 14
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,9),1,for(atom(hasStyle(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(3,worse,36) output(3,worse,7) output(3,worse,71) output(3,worse,12) output(7,worse,71) output(8,eq,19) output(8,eq,53) output(8,eq,47) output(8,eq,36) output(19,eq,53) output(19,eq,47) output(19,eq,36) output(3,eq,23) output(53,eq,47) output(53,eq,36) output(47,eq,36)
Optimization: 18 13
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(71,better,12) output(3,better,47) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,47) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(19,better,47) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(53,better,47) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,23) output(3,worse,36) output(8,worse,36) output(12,worse,23) output(19,worse,36) output(47,worse,36) output(47,worse,7) output(47,worse,71) output(47,worse,23) output(53,worse,36) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(19,eq,3) output(19,eq,53) output(3,eq,53) output(47,eq,12)
Optimization: 17 13
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasStyle(0))),1) preference(1,(1,11),1,for(atom(hasStyle(1))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),7) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,12) output(3,better,23) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,12) output(8,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,12) output(19,better,23) output(47,better,36) output(47,better,7) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,71) output(7,worse,71) output(8,worse,71) output(12,worse,23) output(19,worse,71) output(36,worse,7) output(36,worse,71) output(36,worse,23) output(47,worse,71) output(53,worse,71) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(36,eq,12)
Optimization: 15 14
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,9),1,for(atom(hasStyle(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(3,worse,36) output(3,worse,7) output(3,worse,71) output(3,worse,12) output(7,worse,71) output(8,eq,19) output(8,eq,53) output(8,eq,47) output(19,eq,53) output(19,eq,47) output(3,eq,23) output(53,eq,47)
Optimization: 14 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),8) preference(1,(1,12),1,for(atom(hasStyle(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(71,better,12) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,12) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(47,better,7) output(47,better,71) output(47,better,12) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,23) output(7,worse,23) output(12,worse,23) output(36,worse,23) output(47,worse,36) output(47,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(19,eq,3) output(19,eq,53) output(3,eq,53) output(7,eq,71)
Optimization: 13 11
Answer: 15
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),8) preference(1,(1,12),1,for(atom(hasStyle(1))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(71,better,12) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,12) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,23) output(7,worse,23) output(12,worse,23) output(36,worse,23) output(8,eq,19) output(8,eq,3) output(8,eq,53) output(19,eq,3) output(19,eq,53) output(3,eq,53) output(47,eq,23) output(7,eq,71)
Optimization: 12 11
Answer: 16
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasStyle(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,12) output(8,better,3) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(19,better,3) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(7,worse,71) output(12,worse,23) output(8,eq,19) output(8,eq,53) output(8,eq,47) output(19,eq,53) output(19,eq,47) output(53,eq,47) output(7,eq,23)
Optimization: 11 14
Answer: 17
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasStyle(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(19,better,3) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(7,worse,71) output(8,eq,19) output(8,eq,53) output(8,eq,47) output(19,eq,53) output(19,eq,47) output(53,eq,47) output(12,eq,23)
Optimization: 10 14
Answer: 18
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,9),1,for(atom(hasStyle(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(8,eq,19) output(8,eq,53) output(8,eq,47) output(19,eq,53) output(19,eq,47) output(53,eq,47) output(71,eq,12)
Optimization: 9 14
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(8,eq,19) output(8,eq,53) output(8,eq,47) output(19,eq,53) output(19,eq,47) output(53,eq,47)
Optimization: 8 14
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,4),1,for(atom(hasStyle(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasStyle(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),1) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(3,worse,47) output(3,worse,7) output(36,worse,7) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,36)
Optimization: 8 13
Answer: 21
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(1))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),7) preference(1,(1,4),1,for(atom(hasStyle(1))),7) preference(1,(1,7),1,for(atom(hasStyle(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),2) preference(1,less(weight)) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,47) output(36,eq,7) output(71,eq,12)
Optimization: 7 11
Answer: 22
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,12),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasStyle(0))),6) preference(1,less(weight)) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(71,worse,12) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(47,eq,36)
Optimization: 6 12
Answer: 23
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasStyle(1))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,10),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasStyle(0))),1) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53) output(3,eq,47)
Optimization: 5 11
Answer: 24
preference(1,(1,1),1,for(atom(hasOiliness(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasStyle(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasPrice(0))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),8) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 14
Answer: 25
preference(1,(1,1),1,for(atom(hasOiliness(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasStyle(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),2) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 13
Progression : 4 [ 1;13] (Error: 12)
Answer: 26
preference(1,(1,1),1,for(atom(hasOiliness(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasStyle(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 12
Answer: 27
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,3),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 11
Answer: 28
preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,9),1,for(atom(hasStyle(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 10
Answer: 29
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),4) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 9
Progression : 4 [2;9] (Error: 3.5)
Answer: 30
preference(1,(1,1),1,for(atom(hasStyle(0))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,11),1,for(atom(hasPrice(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 8
Answer: 31
preference(1,(1,4),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),2) preference(1,less(weight)) output(71,better,12) output(71,better,23) output(3,better,47) output(3,better,36) output(3,better,7) output(3,better,71) output(3,better,12) output(3,better,23) output(7,better,71) output(7,better,12) output(7,better,23) output(8,better,3) output(8,better,47) output(8,better,36) output(8,better,7) output(8,better,71) output(8,better,12) output(8,better,23) output(12,better,23) output(19,better,3) output(19,better,47) output(19,better,36) output(19,better,7) output(19,better,71) output(19,better,12) output(19,better,23) output(36,better,7) output(36,better,71) output(36,better,12) output(36,better,23) output(47,better,36) output(47,better,7) output(47,better,71) output(47,better,12) output(47,better,23) output(53,better,47) output(53,better,36) output(53,better,7) output(53,better,71) output(53,better,12) output(53,better,23) output(3,worse,53) output(8,eq,19) output(8,eq,53) output(19,eq,53)
Optimization: 4 7
Progression : 4 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.042 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 31+
  Optimum    : unknown
Optimization : 4 7
Bounds       : 4 [3;7]
Calls        : 1
Time         : 296.383s (Solving: 294.79s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.522s
Threads      : 4        (Winner: 4)

Choices      : 7380834  (Domain: 665615)
Conflicts    : 5771799  (Analyzed: 5771795)
Restarts     : 5207     (Average: 1108.47 Last: 290464)
Model-Level  : 39.7    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 5804648  (Deleted: 5535358)
  Binary     : 1399     (Ratio:   0.02%)
  Ternary    : 3969     (Ratio:   0.07%)
  Conflict   : 5771795  (Average Length:  260.6 Ratio:  99.43%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 32853    (Average Length:   32.7 Ratio:   0.57%) 
  Distributed: 10971    (Ratio:   0.19% Average LBD: 3.60) 
  Integrated : 32913    (Ratio: 300.00% Unit: 119 Average Jumps: 8.45)
Backjumps    : 5771795  (Average:  1.23 Max: 518 Sum: 7101558)
  Executed   : 5771781  (Average:  1.23 Max: 518 Sum: 7101284 Ratio: 100.00%)
  Bounded    : 14       (Average: 19.57 Max:  21 Sum:    274 Ratio:   0.00%)

Rules        : 174773  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9877    
Bodies       : 8130    
  Sum        : 59      
  Count      : 14      
Equivalences : 8174     (Atom=Atom: 526 Body=Body: 266 Other: 7382)
Tight        : Yes
Variables    : 6932     (Eliminated:    0 Frozen: 4272)
Constraints  : 177319   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(2)) 
}.
