asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(0,eq,19) output(0,eq,61) output(0,eq,26) output(0,eq,77) output(0,eq,16) output(0,eq,6) output(0,eq,33) output(0,eq,27) output(0,eq,68) output(19,eq,61) output(19,eq,26) output(19,eq,77) output(19,eq,16) output(19,eq,6) output(19,eq,33) output(19,eq,27) output(19,eq,68) output(61,eq,26) output(61,eq,77) output(61,eq,16) output(61,eq,6) output(61,eq,33) output(61,eq,27) output(61,eq,68) output(26,eq,77) output(26,eq,16) output(26,eq,6) output(26,eq,33) output(26,eq,27) output(26,eq,68) output(77,eq,16) output(77,eq,6) output(77,eq,33) output(77,eq,27) output(77,eq,68) output(16,eq,6) output(16,eq,33) output(16,eq,27) output(16,eq,68) output(6,eq,33) output(6,eq,27) output(6,eq,68) output(33,eq,27) output(33,eq,68) output(27,eq,68)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,7),1,for(atom(hasOiliness(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,14),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,33) output(61,better,68) output(0,better,77) output(0,better,33) output(0,better,68) output(6,better,33) output(6,better,68) output(16,better,33) output(16,better,68) output(19,better,77) output(19,better,33) output(19,better,68) output(27,better,68) output(61,worse,26) output(0,worse,19) output(0,worse,61) output(0,worse,26) output(0,worse,16) output(0,worse,6) output(0,worse,27) output(19,worse,26) output(33,worse,27) output(77,worse,16) output(77,worse,6) output(77,worse,33) output(77,worse,27) output(77,worse,68) output(19,eq,61) output(19,eq,16) output(19,eq,6) output(19,eq,27) output(61,eq,16) output(61,eq,6) output(61,eq,27) output(16,eq,6) output(16,eq,27) output(6,eq,27) output(33,eq,68)
Optimization: 25 7
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(26,better,77) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,77) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,77) output(19,better,33) output(19,better,27) output(19,better,68) output(77,worse,16) output(77,worse,6) output(0,eq,19) output(0,eq,61) output(0,eq,26) output(0,eq,16) output(0,eq,6) output(19,eq,61) output(19,eq,26) output(19,eq,16) output(19,eq,6) output(61,eq,26) output(61,eq,16) output(61,eq,6) output(26,eq,16) output(26,eq,6) output(77,eq,33) output(77,eq,27) output(77,eq,68) output(16,eq,6) output(33,eq,27) output(33,eq,68) output(27,eq,68)
Optimization: 23 12
Answer: 4
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),4) preference(1,less(weight)) output(26,better,77) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,77) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,77) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,27) output(27,worse,68) output(77,worse,16) output(77,worse,6) output(0,eq,19) output(0,eq,61) output(0,eq,26) output(0,eq,16) output(0,eq,6) output(19,eq,61) output(19,eq,26) output(19,eq,16) output(19,eq,6) output(61,eq,26) output(61,eq,16) output(61,eq,6) output(26,eq,16) output(26,eq,6) output(77,eq,33) output(77,eq,68) output(16,eq,6) output(33,eq,68)
Optimization: 21 13
Answer: 5
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,4),1,for(atom(hasStyle(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),1) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(61,worse,26) output(0,worse,19) output(0,worse,61) output(0,worse,26) output(6,worse,33) output(6,worse,27) output(6,worse,68) output(16,worse,6) output(16,worse,33) output(16,worse,27) output(16,worse,68) output(19,worse,26) output(27,worse,68) output(0,eq,77) output(19,eq,61) output(33,eq,68)
Optimization: 16 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasStyle(0))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasPrice(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,6) output(19,better,27) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(26,worse,77) output(61,worse,77) output(6,worse,33) output(6,worse,27) output(6,worse,68) output(19,worse,61) output(19,worse,26) output(19,worse,77) output(19,worse,16) output(27,worse,68) output(0,eq,77) output(19,eq,33) output(19,eq,68) output(61,eq,26) output(33,eq,68)
Optimization: 15 11
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(77,worse,16) output(77,worse,6) output(0,eq,19) output(61,eq,26) output(77,eq,33) output(77,eq,27) output(77,eq,68) output(16,eq,6) output(33,eq,27) output(33,eq,68) output(27,eq,68)
Optimization: 11 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,13),1,for(atom(hasStyle(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,68) output(16,better,33) output(16,better,68) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(27,better,68) output(77,better,16) output(77,better,33) output(77,better,68) output(16,worse,6) output(16,worse,27) output(19,worse,61) output(19,worse,26) output(33,worse,27) output(77,worse,6) output(77,worse,27) output(61,eq,26) output(6,eq,27) output(33,eq,68)
Optimization: 10 10
Answer: 9
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasStyle(1))),3) preference(1,(1,11),1,for(atom(hasPrice(0))),1) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(27,better,68) output(77,better,33) output(77,better,68) output(61,worse,26) output(19,worse,26) output(33,worse,27) output(77,worse,16) output(77,worse,6) output(0,eq,26) output(19,eq,61) output(77,eq,27) output(33,eq,68)
Optimization: 9 11
Answer: 10
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasStyle(1))),3) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasStyle(0))),4) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,68) output(16,better,33) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(27,better,68) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(61,worse,26) output(33,worse,27) output(61,eq,77) output(16,eq,6) output(16,eq,27) output(6,eq,27) output(33,eq,68)
Optimization: 7 9
Answer: 11
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,10),1,for(atom(hasStyle(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasStyle(0))),4) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,68) output(16,better,33) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(27,better,68) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(61,worse,26) output(33,worse,27) output(16,eq,6) output(16,eq,27) output(6,eq,27) output(33,eq,68)
Optimization: 6 8
Answer: 12
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasStyle(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasStyle(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,26) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,33) output(77,better,27) output(77,better,68) output(27,worse,68) output(77,eq,16) output(77,eq,6) output(16,eq,6) output(33,eq,68)
Optimization: 5 10
Answer: 13
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,12),1,for(atom(hasStyle(0))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(27,worse,68) output(61,eq,26) output(16,eq,6) output(33,eq,68)
Optimization: 4 9
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,26) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(27,worse,68) output(19,eq,61) output(33,eq,68)
Optimization: 3 9
Progression : [2;3] (Error: 0.5)
Answer: 15
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,3),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasStyle(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,26) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(27,worse,68) output(33,eq,68)
Optimization: 2 11
Progression : 2 [ 1;11] (Error: 10)
Answer: 16
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,6),1,for(atom(hasPrice(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,10),1,for(atom(hasStyle(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,26) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(27,worse,68) output(33,eq,68)
Optimization: 2 10
Answer: 17
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,7),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,26) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(33,better,27) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(27,worse,68) output(33,eq,68)
Optimization: 2 9
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,4),1,for(atom(hasStyle(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasOiliness(1))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(26,better,77) output(26,better,16) output(26,better,6) output(26,better,33) output(26,better,27) output(26,better,68) output(61,better,26) output(61,better,77) output(61,better,16) output(61,better,6) output(61,better,33) output(61,better,27) output(61,better,68) output(0,better,19) output(0,better,61) output(0,better,26) output(0,better,77) output(0,better,16) output(0,better,6) output(0,better,33) output(0,better,27) output(0,better,68) output(6,better,33) output(6,better,27) output(6,better,68) output(16,better,6) output(16,better,33) output(16,better,27) output(16,better,68) output(19,better,61) output(19,better,26) output(19,better,77) output(19,better,16) output(19,better,6) output(19,better,33) output(19,better,27) output(19,better,68) output(27,better,68) output(77,better,16) output(77,better,6) output(77,better,33) output(77,better,27) output(77,better,68) output(33,worse,27) output(33,eq,68)
Optimization: 2 8
Progression : 2 [2;8] (Error: 3)
Progression : 2 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 2 8
Bounds       : 2 [3;8]
Calls        : 1
Time         : 297.899s (Solving: 296.22s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.232s
Threads      : 4        (Winner: 4)

Choices      : 7108150  (Domain: 715184)
Conflicts    : 5857631  (Analyzed: 5857627)
Restarts     : 5550     (Average: 1055.43 Last: 307990)
Model-Level  : 31.3    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 5948058  (Deleted: 5737383)
  Binary     : 492      (Ratio:   0.01%)
  Ternary    : 10695    (Ratio:   0.18%)
  Conflict   : 5857626  (Average Length:  195.7 Ratio:  98.48%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 90432    (Average Length:   32.2 Ratio:   1.52%) 
  Distributed: 30220    (Ratio:   0.52% Average LBD: 3.62) 
  Integrated : 90660    (Ratio: 300.00% Unit: 428 Average Jumps: 5.23)
Backjumps    : 5857627  (Average:  1.17 Max: 456 Sum: 6878244)
  Executed   : 5857614  (Average:  1.17 Max: 456 Sum: 6878206 Ratio: 100.00%)
  Bounded    : 13       (Average:  2.92 Max:  26 Sum:     38 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8146    
  Sum        : 75      
  Count      : 14      
Equivalences : 8216     (Atom=Atom: 496 Body=Body: 230 Other: 7490)
Tight        : Yes
Variables    : 6964     (Eliminated:    0 Frozen: 4304)
Constraints  : 177927   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  7 :: atom(hasStyle(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) 
}.
