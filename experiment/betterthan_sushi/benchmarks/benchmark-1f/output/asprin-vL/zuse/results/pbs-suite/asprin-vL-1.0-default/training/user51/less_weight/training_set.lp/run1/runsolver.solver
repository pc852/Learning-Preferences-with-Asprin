asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(25,eq,9) output(25,eq,43) output(25,eq,0) output(25,eq,10) output(25,eq,30) output(25,eq,18) output(25,eq,24) output(25,eq,15) output(25,eq,6) output(9,eq,43) output(9,eq,0) output(9,eq,10) output(9,eq,30) output(9,eq,18) output(9,eq,24) output(9,eq,15) output(9,eq,6) output(43,eq,0) output(43,eq,10) output(43,eq,30) output(43,eq,18) output(43,eq,24) output(43,eq,15) output(43,eq,6) output(0,eq,10) output(0,eq,30) output(0,eq,18) output(0,eq,24) output(0,eq,15) output(0,eq,6) output(10,eq,30) output(10,eq,18) output(10,eq,24) output(10,eq,15) output(10,eq,6) output(30,eq,18) output(30,eq,24) output(30,eq,15) output(30,eq,6) output(18,eq,24) output(18,eq,15) output(18,eq,6) output(24,eq,15) output(24,eq,6) output(15,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrice(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),6) preference(1,less(weight)) output(0,better,10) output(0,better,24) output(9,better,10) output(9,better,24) output(18,better,24) output(25,better,10) output(25,better,24) output(30,better,24) output(43,better,10) output(43,better,24) output(0,worse,6) output(9,worse,6) output(10,worse,30) output(10,worse,18) output(10,worse,24) output(10,worse,15) output(10,worse,6) output(15,worse,6) output(18,worse,6) output(24,worse,15) output(24,worse,6) output(25,worse,6) output(30,worse,6) output(43,worse,6) output(25,eq,9) output(25,eq,43) output(25,eq,0) output(25,eq,30) output(25,eq,18) output(25,eq,15) output(9,eq,43) output(9,eq,0) output(9,eq,30) output(9,eq,18) output(9,eq,15) output(43,eq,0) output(43,eq,30) output(43,eq,18) output(43,eq,15) output(0,eq,30) output(0,eq,18) output(0,eq,15) output(30,eq,18) output(30,eq,15) output(18,eq,15)
Optimization: 35 3
Answer: 3
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,24) output(9,better,10) output(9,better,30) output(9,better,24) output(10,better,24) output(15,better,6) output(18,better,24) output(18,better,6) output(25,better,9) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,24) output(30,better,24) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,24) output(0,worse,18) output(0,worse,15) output(0,worse,6) output(9,worse,43) output(9,worse,18) output(9,worse,15) output(9,worse,6) output(10,worse,18) output(10,worse,15) output(10,worse,6) output(18,worse,15) output(24,worse,15) output(24,worse,6) output(25,worse,18) output(25,worse,15) output(30,worse,18) output(30,worse,15) output(30,worse,6) output(43,worse,18) output(43,worse,15) output(43,worse,6) output(25,eq,6) output(9,eq,0) output(10,eq,30)
Optimization: 24 13
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,24) output(9,better,10) output(9,better,30) output(9,better,24) output(10,better,24) output(15,better,6) output(18,better,24) output(18,better,6) output(25,better,9) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,24) output(30,better,24) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,6) output(0,worse,18) output(0,worse,15) output(0,worse,6) output(9,worse,43) output(9,worse,18) output(9,worse,15) output(9,worse,6) output(10,worse,18) output(10,worse,15) output(10,worse,6) output(18,worse,15) output(24,worse,15) output(24,worse,6) output(25,worse,43) output(25,worse,18) output(25,worse,15) output(25,worse,6) output(30,worse,18) output(30,worse,15) output(30,worse,6) output(9,eq,0) output(43,eq,15) output(10,eq,30)
Optimization: 23 13
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,24) output(9,better,10) output(9,better,30) output(9,better,24) output(10,better,30) output(10,better,24) output(15,better,6) output(18,better,24) output(18,better,6) output(25,better,9) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,24) output(30,better,24) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,6) output(0,worse,18) output(0,worse,15) output(0,worse,6) output(9,worse,43) output(9,worse,18) output(9,worse,15) output(9,worse,6) output(10,worse,18) output(10,worse,15) output(10,worse,6) output(18,worse,15) output(24,worse,15) output(24,worse,6) output(25,worse,43) output(25,worse,18) output(25,worse,15) output(30,worse,18) output(30,worse,15) output(30,worse,6) output(25,eq,6) output(9,eq,0) output(43,eq,15)
Optimization: 22 12
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,7),1,for(atom(hasOiliness(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),7) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,30) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,9) output(25,better,43) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,6) output(9,worse,0) output(9,worse,10) output(9,worse,24) output(18,worse,24) output(25,worse,0) output(30,worse,18) output(30,worse,24) output(30,worse,15) output(43,worse,0) output(43,worse,10) output(43,worse,30) output(43,worse,18) output(43,worse,24) output(43,worse,15) output(43,worse,6) output(9,eq,18) output(9,eq,15) output(18,eq,15)
Optimization: 18 14
Answer: 7
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,8),1,for(atom(hasStyle(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,24) output(10,better,15) output(10,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(25,better,9) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,24) output(43,better,15) output(43,better,6) output(0,worse,10) output(0,worse,30) output(0,worse,18) output(9,worse,43) output(9,worse,10) output(9,worse,30) output(9,worse,18) output(9,eq,0) output(43,eq,10) output(43,eq,30) output(43,eq,18) output(10,eq,30) output(10,eq,18) output(30,eq,18) output(24,eq,15) output(24,eq,6) output(15,eq,6)
Optimization: 17 11
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,8),1,for(atom(hasStyle(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,24) output(10,better,15) output(10,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(25,better,9) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,24) output(43,better,15) output(43,better,6) output(0,worse,10) output(0,worse,30) output(0,worse,18) output(9,worse,43) output(9,worse,10) output(9,worse,30) output(9,worse,18) output(15,worse,6) output(9,eq,0) output(43,eq,10) output(43,eq,30) output(43,eq,18) output(10,eq,30) output(10,eq,18) output(30,eq,18) output(24,eq,6)
Optimization: 16 11
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,14),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(18,worse,24) output(30,worse,18) output(30,worse,24) output(30,worse,15) output(30,worse,6) output(25,eq,9) output(25,eq,43) output(25,eq,0) output(9,eq,43) output(9,eq,0) output(43,eq,0) output(10,eq,24) output(18,eq,15)
Optimization: 13 10
Answer: 10
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),8) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,6) output(25,better,9) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,24) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(9,worse,43) output(9,worse,0) output(9,worse,15) output(10,worse,15) output(18,worse,15) output(24,worse,15) output(24,worse,6) output(25,worse,43) output(25,worse,0) output(30,worse,15) output(30,eq,18)
Optimization: 11 13
Answer: 11
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,14),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,9) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(9,worse,43) output(18,worse,24) output(30,worse,18) output(30,worse,24) output(30,worse,15) output(30,worse,6) output(25,eq,43) output(9,eq,0) output(10,eq,24) output(18,eq,15)
Optimization: 10 11
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,6) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(10,worse,30) output(10,worse,18) output(30,worse,18) output(25,eq,9) output(25,eq,43) output(9,eq,43) output(10,eq,24) output(10,eq,15) output(24,eq,15)
Optimization: 9 10
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,6) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(10,worse,30) output(10,worse,18) output(30,worse,18) output(25,eq,9) output(10,eq,24) output(10,eq,15) output(24,eq,15)
Optimization: 7 11
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(0,better,10) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,9) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,18) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(10,worse,30) output(10,worse,18) output(10,worse,24) output(0,eq,30) output(10,eq,15)
Optimization: 5 11
Answer: 15
preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasStyle(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasOiliness(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(25,worse,9) output(25,worse,43) output(0,eq,10) output(30,eq,18)
Optimization: 4 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasPrice(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,6) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,18) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(24,worse,15) output(25,eq,9) output(10,eq,30)
Optimization: 3 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(0))),4) preference(1,less(weight)) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,18) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(25,eq,9) output(0,eq,10)
Optimization: 2 11
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,9) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,18) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(15,worse,6)
Optimization: 1 13
Progression : [1;1] (Error: 0)
Progression : 1 [ 1;13] (Error: 12)
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,18) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(25,eq,9)
Optimization: 1 10
Progression : 1 [ 2;10] (Error: 4)
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,5),1,for(atom(hasPrice(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),1) preference(1,less(weight)) output(0,better,10) output(0,better,30) output(0,better,18) output(0,better,24) output(0,better,15) output(0,better,6) output(9,better,43) output(9,better,0) output(9,better,10) output(9,better,30) output(9,better,18) output(9,better,24) output(9,better,15) output(9,better,6) output(10,better,30) output(10,better,18) output(10,better,24) output(10,better,15) output(10,better,6) output(15,better,6) output(18,better,24) output(18,better,15) output(18,better,6) output(24,better,15) output(24,better,6) output(25,better,43) output(25,better,0) output(25,better,10) output(25,better,30) output(25,better,18) output(25,better,24) output(25,better,15) output(25,better,6) output(30,better,18) output(30,better,24) output(30,better,15) output(30,better,6) output(43,better,0) output(43,better,10) output(43,better,30) output(43,better,18) output(43,better,24) output(43,better,15) output(43,better,6) output(25,eq,9)
Optimization: 1 9
Progression : 1 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.094 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 1 9
Bounds       : 1 [3;9]
Calls        : 1
Time         : 296.386s (Solving: 294.78s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.353s
Threads      : 4        (Winner: 4)

Choices      : 7384777  (Domain: 567009)
Conflicts    : 6483390  (Analyzed: 6483384)
Restarts     : 5947     (Average: 1090.19 Last: 290432)
Model-Level  : 32.3    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 6617017  (Deleted: 6254315)
  Binary     : 1028     (Ratio:   0.02%)
  Ternary    : 9144     (Ratio:   0.14%)
  Conflict   : 6483384  (Average Length:  187.9 Ratio:  97.98%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 133633   (Average Length:   44.3 Ratio:   2.02%) 
  Distributed: 44588    (Ratio:   0.69% Average LBD: 3.68) 
  Integrated : 133764   (Ratio: 300.00% Unit: 398 Average Jumps: 4.00)
Backjumps    : 6483384  (Average:  1.13 Max:  62 Sum: 7312653)
  Executed   : 6483381  (Average:  1.13 Max:  62 Sum: 7312605 Ratio: 100.00%)
  Bounded    : 3        (Average: 16.00 Max:  44 Sum:     48 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(1)) 
}.
