asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(2,eq,13) output(2,eq,18) output(2,eq,21) output(2,eq,1) output(2,eq,50) output(2,eq,4) output(2,eq,30) output(2,eq,0) output(2,eq,9) output(13,eq,18) output(13,eq,21) output(13,eq,1) output(13,eq,50) output(13,eq,4) output(13,eq,30) output(13,eq,0) output(13,eq,9) output(18,eq,21) output(18,eq,1) output(18,eq,50) output(18,eq,4) output(18,eq,30) output(18,eq,0) output(18,eq,9) output(21,eq,1) output(21,eq,50) output(21,eq,4) output(21,eq,30) output(21,eq,0) output(21,eq,9) output(1,eq,50) output(1,eq,4) output(1,eq,30) output(1,eq,0) output(1,eq,9) output(50,eq,4) output(50,eq,30) output(50,eq,0) output(50,eq,9) output(4,eq,30) output(4,eq,0) output(4,eq,9) output(30,eq,0) output(30,eq,9) output(0,eq,9)
Optimization: 45 0
Answer: 2
preference(1,(1,12),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(2,better,13) output(2,better,18) output(2,better,21) output(13,worse,1) output(13,worse,50) output(13,worse,4) output(13,worse,30) output(13,worse,0) output(13,worse,9) output(18,worse,1) output(18,worse,50) output(18,worse,4) output(18,worse,30) output(18,worse,0) output(18,worse,9) output(21,worse,1) output(21,worse,50) output(21,worse,4) output(21,worse,30) output(21,worse,0) output(21,worse,9) output(2,eq,1) output(2,eq,50) output(2,eq,4) output(2,eq,30) output(2,eq,0) output(2,eq,9) output(13,eq,18) output(13,eq,21) output(18,eq,21) output(1,eq,50) output(1,eq,4) output(1,eq,30) output(1,eq,0) output(1,eq,9) output(50,eq,4) output(50,eq,30) output(50,eq,0) output(50,eq,9) output(4,eq,30) output(4,eq,0) output(4,eq,9) output(30,eq,0) output(30,eq,9) output(0,eq,9)
Optimization: 42 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),6) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(2,better,50) output(2,better,4) output(13,better,50) output(13,better,4) output(18,better,50) output(18,better,4) output(21,better,50) output(21,better,4) output(4,worse,30) output(4,worse,0) output(4,worse,9) output(50,worse,4) output(50,worse,30) output(50,worse,0) output(50,worse,9) output(2,eq,13) output(2,eq,18) output(2,eq,21) output(2,eq,1) output(2,eq,30) output(2,eq,0) output(2,eq,9) output(13,eq,18) output(13,eq,21) output(13,eq,1) output(13,eq,30) output(13,eq,0) output(13,eq,9) output(18,eq,21) output(18,eq,1) output(18,eq,30) output(18,eq,0) output(18,eq,9) output(21,eq,1) output(21,eq,30) output(21,eq,0) output(21,eq,9) output(1,eq,30) output(1,eq,0) output(1,eq,9) output(30,eq,0) output(30,eq,9) output(0,eq,9)
Optimization: 35 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,8),1,for(atom(hasPrice(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(1,better,4) output(1,better,30) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,4) output(2,better,30) output(2,better,0) output(13,better,21) output(13,better,4) output(13,better,30) output(18,better,21) output(18,better,4) output(18,better,30) output(50,better,4) output(50,better,30) output(50,better,0) output(0,worse,9) output(1,worse,50) output(1,worse,9) output(4,worse,30) output(4,worse,0) output(4,worse,9) output(13,worse,50) output(13,worse,9) output(18,worse,50) output(18,worse,9) output(21,worse,1) output(21,worse,50) output(21,worse,30) output(21,worse,0) output(21,worse,9) output(30,worse,0) output(30,worse,9) output(2,eq,50) output(2,eq,9) output(13,eq,18) output(13,eq,1) output(13,eq,0) output(18,eq,1) output(18,eq,0) output(21,eq,4) output(1,eq,0) output(50,eq,9)
Optimization: 27 12
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(13,better,1) output(13,better,50) output(13,better,4) output(18,better,1) output(18,better,50) output(18,better,4) output(21,better,1) output(21,better,50) output(21,better,4) output(50,better,4) output(1,worse,30) output(1,worse,0) output(1,worse,9) output(4,worse,30) output(4,worse,0) output(4,worse,9) output(13,worse,30) output(13,worse,0) output(13,worse,9) output(18,worse,30) output(18,worse,0) output(18,worse,9) output(21,worse,30) output(21,worse,0) output(21,worse,9) output(50,worse,30) output(50,worse,0) output(50,worse,9) output(2,eq,30) output(2,eq,0) output(2,eq,9) output(13,eq,18) output(13,eq,21) output(18,eq,21) output(30,eq,0) output(30,eq,9) output(0,eq,9)
Optimization: 27 11
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(1,better,30) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(50,better,4) output(1,worse,0) output(1,worse,9) output(4,worse,30) output(4,worse,0) output(4,worse,9) output(30,worse,0) output(30,worse,9) output(50,worse,0) output(50,worse,9) output(2,eq,13) output(2,eq,18) output(2,eq,21) output(2,eq,0) output(2,eq,9) output(13,eq,18) output(13,eq,21) output(13,eq,0) output(13,eq,9) output(18,eq,21) output(18,eq,0) output(18,eq,9) output(21,eq,0) output(21,eq,9) output(50,eq,30) output(0,eq,9)
Optimization: 25 13
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,3),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,8),1,for(atom(hasPrice(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,11),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(13,better,21) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(30,better,0) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(0,worse,9) output(4,worse,30) output(4,worse,9) output(13,worse,1) output(13,worse,50) output(18,worse,1) output(18,worse,50) output(21,worse,1) output(21,worse,50) output(21,worse,30) output(21,worse,9) output(30,worse,9) output(2,eq,1) output(2,eq,50) output(13,eq,18) output(21,eq,4) output(21,eq,0) output(1,eq,50) output(4,eq,0)
Optimization: 19 12
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,50) output(21,better,4) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(4,worse,30) output(4,worse,0) output(4,worse,9) output(21,worse,1) output(50,worse,30) output(50,worse,0) output(50,worse,9) output(2,eq,13) output(2,eq,18) output(13,eq,18) output(21,eq,30) output(0,eq,9)
Optimization: 12 12
Answer: 9
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,11),1,for(atom(hasOiliness(0))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),4) preference(1,less(weight)) output(1,better,4) output(1,better,30) output(1,better,0) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,4) output(21,better,30) output(21,better,0) output(50,better,4) output(50,better,30) output(50,better,0) output(0,worse,9) output(1,worse,50) output(1,worse,9) output(4,worse,9) output(21,worse,1) output(21,worse,50) output(21,worse,9) output(30,worse,0) output(30,worse,9) output(50,worse,9) output(13,eq,18)
Optimization: 11 12
Answer: 10
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),7) preference(1,(1,12),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,0) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(30,better,0) output(50,better,4) output(50,better,30) output(50,better,0) output(0,worse,9) output(4,worse,9) output(21,worse,1) output(21,worse,9) output(30,worse,9) output(50,worse,9) output(2,eq,13) output(2,eq,18) output(13,eq,18) output(4,eq,30)
Optimization: 10 11
Answer: 11
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,0) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,4) output(21,better,30) output(21,better,0) output(30,better,0) output(50,better,4) output(50,better,30) output(50,better,0) output(0,worse,9) output(4,worse,9) output(21,worse,1) output(21,worse,50) output(21,worse,9) output(30,worse,9) output(50,worse,9) output(13,eq,18) output(4,eq,30)
Optimization: 9 12
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,4) output(21,better,30) output(21,better,0) output(30,better,0) output(50,better,4) output(50,better,30) output(50,better,0) output(0,worse,9) output(4,worse,9) output(21,worse,1) output(21,worse,9) output(30,worse,9) output(50,worse,9) output(13,eq,18) output(21,eq,50)
Optimization: 8 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(0,worse,9) output(30,worse,9) output(13,eq,18) output(13,eq,21) output(18,eq,21) output(1,eq,50) output(4,eq,9)
Optimization: 7 11
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,10),1,for(atom(hasStyle(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(0,better,9) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,30) output(50,better,0) output(50,better,9) output(1,worse,4) output(50,worse,4) output(2,eq,13) output(2,eq,18) output(13,eq,18) output(1,eq,50)
Optimization: 6 10
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,10),1,for(atom(hasStyle(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(0,better,9) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(2,eq,13) output(2,eq,18) output(13,eq,18) output(1,eq,50) output(4,eq,30)
Optimization: 5 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,10),1,for(atom(hasStyle(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(0,better,9) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(2,eq,13) output(2,eq,18) output(13,eq,18) output(1,eq,50)
Optimization: 4 12
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,10),1,for(atom(hasStyle(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),8) preference(1,less(weight)) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(13,eq,18) output(1,eq,50) output(0,eq,9)
Optimization: 3 11
Answer: 18
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,5),1,for(atom(hasStyle(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,11),1,for(atom(hasOiliness(0))),7) preference(1,(1,12),1,for(atom(hasOiliness(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(0,worse,9) output(13,eq,18)
Optimization: 2 11
Answer: 19
preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(0,better,9) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(13,eq,18)
Optimization: 1 13
Progression : 1 [ 1;13] (Error: 12)
Answer: 20
preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),3) preference(1,less(weight)) output(0,better,9) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(13,eq,18)
Optimization: 1 11
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),3) preference(1,less(weight)) output(0,better,9) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(13,eq,18)
Optimization: 1 10
Answer: 22
preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,8),1,for(atom(hasPrice(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),3) preference(1,less(weight)) output(0,better,9) output(1,better,50) output(1,better,4) output(1,better,30) output(1,better,0) output(1,better,9) output(2,better,13) output(2,better,18) output(2,better,21) output(2,better,1) output(2,better,50) output(2,better,4) output(2,better,30) output(2,better,0) output(2,better,9) output(4,better,30) output(4,better,0) output(4,better,9) output(13,better,21) output(13,better,1) output(13,better,50) output(13,better,4) output(13,better,30) output(13,better,0) output(13,better,9) output(18,better,21) output(18,better,1) output(18,better,50) output(18,better,4) output(18,better,30) output(18,better,0) output(18,better,9) output(21,better,1) output(21,better,50) output(21,better,4) output(21,better,30) output(21,better,0) output(21,better,9) output(30,better,0) output(30,better,9) output(50,better,4) output(50,better,30) output(50,better,0) output(50,better,9) output(13,eq,18)
Optimization: 1 9
Progression : 1 [2;9] (Error: 3.5)
Progression : 1 [3;9] (Error: 2)
Progression : 1 [4;9] (Error: 1.25)
Progression : 1 [5;9] (Error: 0.8)
Progression : 1 [6;9] (Error: 0.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.054 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 1 9
Calls        : 1
Time         : 298.043s (Solving: 296.23s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.441s
Threads      : 4        (Winner: 4)

Choices      : 5750376  (Domain: 723216)
Conflicts    : 5497270  (Analyzed: 5497264)
Restarts     : 5166     (Average: 1064.12 Last: 484206)
Model-Level  : 39.5    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 5545973  (Deleted: 5308765)
  Binary     : 168      (Ratio:   0.00%)
  Ternary    : 1540     (Ratio:   0.03%)
  Conflict   : 5497264  (Average Length:  218.3 Ratio:  99.12%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 48709    (Average Length:   70.1 Ratio:   0.88%) 
  Distributed: 16382    (Ratio:   0.30% Average LBD: 3.57) 
  Integrated : 49146    (Ratio: 300.00% Unit: 1335 Average Jumps: 6.07)
Backjumps    : 5497264  (Average:  1.04 Max:  66 Sum: 5697957)
  Executed   : 5497193  (Average:  1.04 Max:  66 Sum: 5697855 Ratio: 100.00%)
  Bounded    : 71       (Average:  1.44 Max:  27 Sum:    102 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8144    
  Sum        : 73      
  Count      : 14      
Equivalences : 8213     (Atom=Atom: 501 Body=Body: 235 Other: 7477)
Tight        : Yes
Variables    : 6961     (Eliminated:    0 Frozen: 4301)
Constraints  : 177922   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(3)) 
}.
