asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,15) output(4,eq,5) output(4,eq,0) output(4,eq,51) output(4,eq,28) output(4,eq,7) output(4,eq,19) output(4,eq,46) output(4,eq,34) output(15,eq,5) output(15,eq,0) output(15,eq,51) output(15,eq,28) output(15,eq,7) output(15,eq,19) output(15,eq,46) output(15,eq,34) output(5,eq,0) output(5,eq,51) output(5,eq,28) output(5,eq,7) output(5,eq,19) output(5,eq,46) output(5,eq,34) output(0,eq,51) output(0,eq,28) output(0,eq,7) output(0,eq,19) output(0,eq,46) output(0,eq,34) output(51,eq,28) output(51,eq,7) output(51,eq,19) output(51,eq,46) output(51,eq,34) output(28,eq,7) output(28,eq,19) output(28,eq,46) output(28,eq,34) output(7,eq,19) output(7,eq,46) output(7,eq,34) output(19,eq,46) output(19,eq,34) output(46,eq,34)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(0,better,19) output(4,better,15) output(4,better,19) output(5,better,19) output(7,better,19) output(28,better,19) output(51,better,19) output(15,worse,5) output(15,worse,0) output(15,worse,51) output(15,worse,28) output(15,worse,7) output(15,worse,46) output(15,worse,34) output(19,worse,46) output(19,worse,34) output(4,eq,5) output(4,eq,0) output(4,eq,51) output(4,eq,28) output(4,eq,7) output(4,eq,46) output(4,eq,34) output(15,eq,19) output(5,eq,0) output(5,eq,51) output(5,eq,28) output(5,eq,7) output(5,eq,46) output(5,eq,34) output(0,eq,51) output(0,eq,28) output(0,eq,7) output(0,eq,46) output(0,eq,34) output(51,eq,28) output(51,eq,7) output(51,eq,46) output(51,eq,34) output(28,eq,7) output(28,eq,46) output(28,eq,34) output(7,eq,46) output(7,eq,34) output(46,eq,34)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasPrice(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),8) preference(1,(1,7),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),8) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(4,better,5) output(4,better,51) output(4,better,28) output(5,better,51) output(5,better,28) output(15,better,5) output(15,better,51) output(15,better,28) output(5,worse,0) output(5,worse,7) output(5,worse,19) output(5,worse,46) output(5,worse,34) output(28,worse,7) output(28,worse,19) output(28,worse,46) output(28,worse,34) output(51,worse,7) output(51,worse,19) output(51,worse,46) output(51,worse,34) output(4,eq,15) output(4,eq,0) output(4,eq,7) output(4,eq,19) output(4,eq,46) output(4,eq,34) output(15,eq,0) output(15,eq,7) output(15,eq,19) output(15,eq,46) output(15,eq,34) output(0,eq,7) output(0,eq,19) output(0,eq,46) output(0,eq,34) output(51,eq,28) output(7,eq,19) output(7,eq,46) output(7,eq,34) output(19,eq,46) output(19,eq,34) output(46,eq,34)
Optimization: 35 14
Answer: 4
preference(1,(1,2),1,for(atom(hasPrice(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasStyle(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,9),1,for(atom(hasOiliness(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),7) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,19) output(0,better,46) output(7,better,19) output(7,better,46) output(15,better,5) output(15,better,51) output(15,better,46) output(19,better,46) output(28,better,46) output(51,better,46) output(0,worse,34) output(4,worse,15) output(4,worse,5) output(4,worse,0) output(4,worse,51) output(4,worse,28) output(4,worse,7) output(4,worse,19) output(4,worse,46) output(4,worse,34) output(5,worse,0) output(5,worse,51) output(5,worse,28) output(5,worse,7) output(5,worse,19) output(5,worse,34) output(7,worse,34) output(15,worse,0) output(15,worse,28) output(15,worse,7) output(15,worse,19) output(15,worse,34) output(19,worse,34) output(28,worse,7) output(28,worse,19) output(28,worse,34) output(46,worse,34) output(51,worse,28) output(51,worse,7) output(51,worse,19) output(51,worse,34) output(5,eq,46) output(0,eq,7)
Optimization: 33 11
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,28) output(5,better,51) output(5,better,28) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,51) output(15,better,28) output(15,better,19) output(15,better,46) output(15,better,34) output(51,better,28) output(51,better,19) output(51,better,46) output(51,better,34) output(4,worse,15) output(4,worse,5) output(4,worse,0) output(4,worse,51) output(4,worse,7) output(4,worse,46) output(4,worse,34) output(15,worse,5) output(15,worse,0) output(15,worse,7) output(19,worse,46) output(19,worse,34) output(28,worse,7) output(28,worse,19) output(28,worse,46) output(28,worse,34) output(51,worse,7) output(4,eq,19) output(5,eq,0) output(5,eq,7) output(0,eq,7) output(46,eq,34)
Optimization: 22 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,28) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(4,worse,15) output(4,worse,5) output(4,worse,0) output(4,worse,51) output(4,worse,7) output(4,worse,46) output(4,worse,34) output(15,worse,5) output(15,worse,0) output(19,worse,46) output(19,worse,34) output(28,worse,7) output(28,worse,19) output(28,worse,46) output(28,worse,34) output(4,eq,19) output(5,eq,0) output(7,eq,46) output(7,eq,34) output(46,eq,34)
Optimization: 20 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasPrice(1))),8) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,28) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(51,better,28) output(51,better,19) output(51,better,46) output(51,better,34) output(4,worse,15) output(4,worse,5) output(4,worse,0) output(4,worse,51) output(4,worse,7) output(4,worse,46) output(4,worse,34) output(15,worse,5) output(15,worse,0) output(19,worse,46) output(19,worse,34) output(28,worse,7) output(28,worse,19) output(28,worse,46) output(28,worse,34) output(4,eq,19) output(5,eq,0) output(51,eq,7) output(46,eq,34)
Optimization: 19 14
Answer: 8
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,7),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,14),1,for(atom(hasStyle(1))),7) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,51) output(4,better,28) output(4,better,46) output(4,better,34) output(5,better,51) output(5,better,28) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(51,better,28) output(51,better,46) output(51,better,34) output(0,worse,7) output(4,worse,15) output(4,worse,5) output(4,worse,0) output(4,worse,7) output(5,worse,7) output(28,worse,7) output(28,worse,19) output(28,worse,46) output(28,worse,34) output(51,worse,7) output(51,worse,19) output(4,eq,19) output(5,eq,0) output(46,eq,34)
Optimization: 15 14
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,46) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,46) output(51,better,28) output(51,better,7) output(51,better,46) output(51,better,34) output(7,worse,19) output(7,worse,34) output(28,worse,19) output(46,worse,34) output(51,worse,19) output(15,eq,5) output(15,eq,0) output(5,eq,0) output(28,eq,34)
Optimization: 9 10
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),4) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,46) output(5,better,34) output(7,better,46) output(7,better,34) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,7) output(51,better,46) output(51,better,34) output(0,worse,19) output(7,worse,19) output(28,worse,19) output(51,worse,19) output(15,eq,5) output(15,eq,19) output(5,eq,19) output(51,eq,28)
Optimization: 8 11
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,10),1,for(atom(hasOiliness(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(15,worse,5) output(15,worse,0) output(15,worse,51) output(15,worse,28) output(15,worse,7) output(15,eq,19) output(51,eq,28)
Optimization: 7 11
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,7),1,for(atom(hasStyle(1))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(4,worse,5) output(15,worse,5) output(15,worse,0) output(15,worse,51) output(15,eq,28) output(46,eq,34)
Optimization: 6 11
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,6),1,for(atom(hasStyle(1))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(28,worse,7) output(28,worse,19) output(15,eq,5) output(15,eq,0) output(5,eq,0)
Optimization: 5 11
Answer: 14
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,2),1,for(atom(hasPrice(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,10),1,for(atom(hasStyle(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),3) preference(1,less(weight)) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(0,worse,51) output(28,worse,7) output(28,worse,19) output(5,eq,51)
Optimization: 4 13
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),4) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,13),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasStyle(1))),6) preference(1,less(weight)) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(0,eq,51) output(0,eq,28) output(51,eq,28)
Optimization: 3 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasOiliness(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,14),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(4,worse,15) output(51,eq,28)
Optimization: 2 11
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),5) preference(1,(1,6),1,for(atom(hasOiliness(1))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),2) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34) output(19,eq,46)
Optimization: 1 12
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34)
Optimization: 0 12
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(0,better,51) output(0,better,28) output(0,better,7) output(0,better,19) output(0,better,46) output(0,better,34) output(4,better,15) output(4,better,5) output(4,better,0) output(4,better,51) output(4,better,28) output(4,better,7) output(4,better,19) output(4,better,46) output(4,better,34) output(5,better,0) output(5,better,51) output(5,better,28) output(5,better,7) output(5,better,19) output(5,better,46) output(5,better,34) output(7,better,19) output(7,better,46) output(7,better,34) output(15,better,5) output(15,better,0) output(15,better,51) output(15,better,28) output(15,better,7) output(15,better,19) output(15,better,46) output(15,better,34) output(19,better,46) output(19,better,34) output(28,better,7) output(28,better,19) output(28,better,46) output(28,better,34) output(46,better,34) output(51,better,28) output(51,better,7) output(51,better,19) output(51,better,46) output(51,better,34)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
Progression : 0 [ 3;10] (Error: 2.33333)
Progression : 0 [ 4;10] (Error: 1.5)
Progression : 0 [ 5;10] (Error: 1)
Progression : 0 [ 6;10] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.042 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 296.890s (Solving: 295.30s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.465s
Threads      : 4        (Winner: 4)

Choices      : 5946860  (Domain: 556065)
Conflicts    : 5620638  (Analyzed: 5620632)
Restarts     : 5046     (Average: 1113.88 Last: 445593)
Model-Level  : 35.2    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 5683523  (Deleted: 5508035)
  Binary     : 240      (Ratio:   0.00%)
  Ternary    : 5492     (Ratio:   0.10%)
  Conflict   : 5620632  (Average Length:  215.5 Ratio:  98.89%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 62891    (Average Length:   62.5 Ratio:   1.11%) 
  Distributed: 21099    (Ratio:   0.38% Average LBD: 3.64) 
  Integrated : 63297    (Ratio: 300.00% Unit: 1223 Average Jumps: 5.20)
Backjumps    : 5620632  (Average:  1.05 Max:  80 Sum: 5896925)
  Executed   : 5620552  (Average:  1.05 Max:  80 Sum: 5896748 Ratio: 100.00%)
  Bounded    : 80       (Average:  2.21 Max:  47 Sum:    177 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.
