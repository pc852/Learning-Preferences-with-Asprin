asprin_vL version 1.0
Reading from stdin
-:309:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:319:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:334:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:415:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:689:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:866:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:995:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1067:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1071:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1071:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1077:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1176:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1202:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1322:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1356:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1378:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:226:1-16: info: no atoms over signature occur in program:
  output/3

-:218:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:219:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:220:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,poset) output(19,eq,9) output(19,eq,6) output(19,eq,11) output(19,eq,10) output(19,eq,39) output(19,eq,23) output(19,eq,89) output(19,eq,17) output(19,eq,52) output(9,eq,6) output(9,eq,11) output(9,eq,10) output(9,eq,39) output(9,eq,23) output(9,eq,89) output(9,eq,17) output(9,eq,52) output(6,eq,11) output(6,eq,10) output(6,eq,39) output(6,eq,23) output(6,eq,89) output(6,eq,17) output(6,eq,52) output(11,eq,10) output(11,eq,39) output(11,eq,23) output(11,eq,89) output(11,eq,17) output(11,eq,52) output(10,eq,39) output(10,eq,23) output(10,eq,89) output(10,eq,17) output(39,eq,17) output(39,eq,52) output(23,eq,17) output(23,eq,52) output(89,eq,17) output(89,eq,52) output(17,eq,52)
Optimization: 45 0
Answer: 2
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,poset) output(19,better,9) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,worse,11) output(9,worse,6) output(19,eq,6) output(19,eq,11) output(9,eq,10) output(9,eq,39) output(9,eq,23) output(9,eq,89) output(9,eq,17) output(9,eq,52) output(6,eq,11) output(10,eq,39) output(10,eq,23) output(10,eq,89) output(10,eq,17) output(39,eq,17) output(39,eq,52) output(23,eq,17) output(23,eq,52) output(89,eq,17) output(89,eq,52) output(17,eq,52)
Optimization: 26 1
Answer: 3
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(4))),()) preference(1,poset) output(19,better,9) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,worse,11) output(9,worse,10) output(9,worse,52) output(39,worse,52) output(23,worse,52) output(89,worse,52) output(17,worse,52) output(9,worse,6) output(19,eq,6) output(19,eq,11) output(9,eq,39) output(9,eq,23) output(9,eq,89) output(9,eq,17) output(6,eq,11) output(39,eq,17) output(23,eq,17) output(89,eq,17)
Optimization: 22 1
Answer: 4
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(6))),()) preference(1,poset) output(19,better,9) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(17,better,52) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,worse,11) output(10,worse,17) output(39,worse,17) output(23,worse,17) output(89,worse,17) output(9,worse,6) output(19,eq,6) output(19,eq,11) output(9,eq,17) output(6,eq,11) output(10,eq,39) output(10,eq,23) output(10,eq,89) output(39,eq,52) output(23,eq,52) output(89,eq,52)
Optimization: 20 1
Answer: 5
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,6),1,for(atom(hasOiliness(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(10))),()) preference(1,poset) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(9,worse,6) output(10,eq,39) output(10,eq,23) output(10,eq,89) output(10,eq,17) output(39,eq,17) output(39,eq,52) output(23,eq,17) output(23,eq,52) output(89,eq,17) output(89,eq,52) output(17,eq,52)
Optimization: 16 2
Answer: 6
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(9,better,39) output(9,better,23) output(9,better,89) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(39,worse,52) output(23,worse,52) output(89,worse,52) output(17,worse,52) output(9,worse,6) output(39,eq,17) output(23,eq,17) output(89,eq,17) output(9,unc,11) output(9,unc,10) output(9,unc,52)
Optimization: 15 2
Answer: 7
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(39,better,17) output(39,better,52) output(23,better,17) output(23,better,52) output(89,better,17) output(89,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(9,better,10) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(9,worse,6) output(10,eq,17) output(17,eq,52) output(9,unc,11) output(9,unc,39) output(9,unc,23) output(9,unc,89)
Optimization: 14 2
Answer: 8
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(11))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(4))),()) preference(1,poset) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(9,worse,11) output(39,worse,52) output(23,worse,52) output(89,worse,52) output(17,worse,52) output(9,worse,6) output(39,eq,17) output(23,eq,17) output(89,eq,17)
Optimization: 13 4
Answer: 9
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(6))),()) preference(1,poset) output(39,better,17) output(39,better,52) output(23,better,17) output(23,better,52) output(89,better,17) output(89,better,52) output(19,better,9) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(17,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(9,worse,11) output(10,worse,17) output(9,worse,6) output(19,eq,6)
Optimization: 11 4
Answer: 10
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,1),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,6),2,for(atom(hasOiliness(0))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(6))),()) preference(1,poset) output(39,better,17) output(39,better,52) output(23,better,17) output(23,better,52) output(89,better,17) output(89,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(17,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(9,worse,11) output(10,worse,17) output(9,worse,6)
Optimization: 10 5
Answer: 11
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,5),1,for(atom(hasOiliness(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasOiliness(1))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,5),2,for(atom(hasOiliness(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(10))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(39,better,17) output(39,better,52) output(23,better,17) output(23,better,52) output(89,better,17) output(89,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(10,better,17) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(17,worse,52) output(9,worse,6)
Optimization: 9 6
Answer: 12
output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(hasOiliness(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasPrice(0))),()) preference(1,poset) output(39,better,17) output(23,better,17) output(89,better,17) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,17) output(39,worse,52) output(23,worse,52) output(89,worse,52) output(17,worse,52)
Optimization: 8 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.054 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 8 5
Calls        : 1
Time         : 297.260s (Solving: 288.65s 1st Model: 1.78s Unsat: 0.00s)
CPU Time     : 1161.751s
Threads      : 4        (Winner: 4)

Choices      : 1420873  (Domain: 1549)
Conflicts    : 91128    (Analyzed: 91128)
Restarts     : 124      (Average: 734.90 Last: 3918)
Model-Level  : 1111.8  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 11575887 (Deleted: 11486713)
  Binary     : 282      (Ratio:   0.00%)
  Ternary    : 26833    (Ratio:   0.23%)
  Conflict   : 91128    (Average Length:  842.9 Ratio:   0.79%) 
  Loop       : 11460870 (Average Length:  225.8 Ratio:  99.01%) 
  Other      : 23889    (Average Length:    4.8 Ratio:   0.21%) 
  Distributed: 7968     (Ratio:   0.07% Average LBD: 2.87) 
  Integrated : 23900    (Ratio: 299.95% Unit: 73 Average Jumps: 1276.32)
Backjumps    : 91128    (Average: 11.35 Max: 24080 Sum: 1034694)
  Executed   : 91108    (Average: 11.35 Max: 24080 Sum: 1034659 Ratio: 100.00%)
  Bounded    : 20       (Average:  1.75 Max:   2 Sum:     35 Ratio:   0.00%)

Rules        : 1886906 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 34951   
Bodies       : 1398849 
  Count      : 48      
Equivalences : 31308    (Atom=Atom: 4909 Body=Body: 7564 Other: 18835)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 1339880 Gammas: 0)
Variables    : 1355724  (Eliminated:    0 Frozen: 1342476)
Constraints  : 7839889  (Binary:  82.4% Ternary:   4.3% Other:  13.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(4)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(11)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(1)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(11)) >> atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(5)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(5)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasMinorGrp(5)) ; 
  atom(hasPrice(1)) >> atom(hasOiliness(0)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(5)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(4)) ; 
  atom(hasOiliness(0)) >> atom(hasOiliness(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMinorGrp(10)) ; 
  atom(hasOiliness(1)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(4)) ; 
  atom(hasOiliness(0)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(4)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(4)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(1)) >> atom(hasPrice(0)) 
}.
