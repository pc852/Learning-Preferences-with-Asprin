asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,10) output(1,eq,42) output(1,eq,11) output(1,eq,17) output(1,eq,88) output(1,eq,84) output(1,eq,13) output(1,eq,27) output(1,eq,6) output(10,eq,42) output(10,eq,11) output(10,eq,17) output(10,eq,88) output(10,eq,84) output(10,eq,13) output(10,eq,27) output(10,eq,6) output(42,eq,11) output(42,eq,17) output(42,eq,88) output(42,eq,84) output(42,eq,13) output(42,eq,27) output(42,eq,6) output(11,eq,17) output(11,eq,88) output(11,eq,84) output(11,eq,13) output(11,eq,27) output(11,eq,6) output(17,eq,88) output(17,eq,84) output(17,eq,13) output(17,eq,27) output(17,eq,6) output(88,eq,84) output(88,eq,13) output(88,eq,27) output(88,eq,6) output(84,eq,13) output(84,eq,27) output(84,eq,6) output(13,eq,27) output(13,eq,6) output(27,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasOiliness(0))),6) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,11) output(1,better,27) output(1,better,6) output(10,better,11) output(10,better,27) output(10,better,6) output(13,better,27) output(13,better,6) output(17,better,27) output(17,better,6) output(42,better,11) output(42,better,27) output(42,better,6) output(84,better,27) output(84,better,6) output(88,better,27) output(88,better,6) output(11,worse,17) output(11,worse,88) output(11,worse,84) output(11,worse,13) output(1,eq,10) output(1,eq,42) output(1,eq,17) output(1,eq,88) output(1,eq,84) output(1,eq,13) output(10,eq,42) output(10,eq,17) output(10,eq,88) output(10,eq,84) output(10,eq,13) output(42,eq,17) output(42,eq,88) output(42,eq,84) output(42,eq,13) output(11,eq,27) output(11,eq,6) output(17,eq,88) output(17,eq,84) output(17,eq,13) output(88,eq,84) output(88,eq,13) output(84,eq,13) output(27,eq,6)
Optimization: 28 8
Answer: 3
preference(1,(1,1),1,for(atom(hasOiliness(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),1) preference(1,less(weight)) output(1,better,10) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(11,better,84) output(17,better,88) output(17,better,84) output(42,better,11) output(42,better,17) output(42,better,88) output(42,better,84) output(88,better,84) output(10,worse,13) output(10,worse,27) output(10,worse,6) output(11,worse,17) output(11,worse,13) output(11,worse,27) output(11,worse,6) output(17,worse,13) output(17,worse,27) output(17,worse,6) output(42,worse,13) output(42,worse,27) output(42,worse,6) output(84,worse,13) output(84,worse,27) output(84,worse,6) output(88,worse,13) output(88,worse,27) output(88,worse,6) output(1,eq,13) output(1,eq,27) output(1,eq,6) output(10,eq,42) output(11,eq,88) output(13,eq,27) output(13,eq,6) output(27,eq,6)
Optimization: 27 12
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),7) preference(1,less(weight)) output(1,better,27) output(1,better,6) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,42) output(1,worse,11) output(1,worse,17) output(1,worse,88) output(1,eq,84) output(1,eq,13) output(10,eq,42) output(10,eq,11) output(10,eq,17) output(10,eq,88) output(42,eq,11) output(42,eq,17) output(42,eq,88) output(11,eq,17) output(11,eq,88) output(17,eq,88) output(84,eq,13) output(27,eq,6)
Optimization: 19 8
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),8) preference(1,less(weight)) output(1,better,42) output(1,better,17) output(1,better,84) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,17) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,6) output(27,better,6) output(42,better,84) output(42,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,11) output(1,worse,88) output(17,worse,88) output(17,worse,13) output(17,worse,27) output(42,worse,11) output(42,worse,88) output(42,worse,13) output(42,worse,27) output(84,worse,13) output(84,worse,27) output(1,eq,13) output(10,eq,11) output(10,eq,88) output(42,eq,17) output(11,eq,88) output(84,eq,6)
Optimization: 18 13
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),8) preference(1,less(weight)) output(1,better,42) output(1,better,17) output(1,better,84) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,17) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,6) output(27,better,6) output(42,better,84) output(42,better,6) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,11) output(1,worse,88) output(17,worse,88) output(17,worse,13) output(17,worse,27) output(42,worse,11) output(42,worse,88) output(42,worse,13) output(42,worse,27) output(84,worse,13) output(84,worse,27) output(1,eq,13) output(10,eq,11) output(10,eq,88) output(42,eq,17) output(11,eq,88)
Optimization: 17 12
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,6) output(17,better,88) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,17) output(1,worse,84) output(11,worse,17) output(11,worse,84) output(42,worse,17) output(42,worse,84) output(88,worse,84) output(1,eq,42) output(1,eq,11) output(1,eq,88) output(10,eq,17) output(42,eq,11) output(42,eq,88) output(11,eq,88) output(13,eq,27)
Optimization: 16 10
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,17) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,42) output(1,worse,11) output(1,worse,17) output(1,worse,88) output(17,worse,88) output(42,worse,11) output(42,worse,88) output(1,eq,84) output(1,eq,13) output(10,eq,11) output(10,eq,88) output(42,eq,17) output(11,eq,88) output(84,eq,13)
Optimization: 15 11
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,17) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,17) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,42) output(1,worse,11) output(1,worse,17) output(1,worse,88) output(10,worse,11) output(10,worse,88) output(17,worse,88) output(42,worse,11) output(42,worse,88) output(1,eq,84) output(1,eq,13) output(84,eq,13)
Optimization: 13 13
Answer: 10
preference(1,(1,1),1,for(atom(hasStyle(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,17) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,17) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,42) output(1,worse,11) output(1,worse,17) output(1,worse,88) output(10,worse,11) output(10,worse,88) output(13,worse,27) output(17,worse,88) output(42,worse,11) output(42,worse,88) output(1,eq,84)
Optimization: 12 13
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),5) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,less(weight)) output(1,better,13) output(1,better,6) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(1,worse,42) output(1,worse,11) output(1,worse,17) output(1,worse,88) output(1,worse,84) output(13,worse,27) output(1,eq,27) output(10,eq,42) output(10,eq,11) output(42,eq,11) output(17,eq,88)
Optimization: 12 10
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(11,worse,84) output(17,worse,84) output(27,worse,6) output(42,worse,11) output(42,worse,17) output(42,worse,88) output(42,worse,84) output(88,worse,84) output(1,eq,84) output(17,eq,88)
Optimization: 11 10
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(13,worse,27) output(42,worse,11) output(42,worse,17) output(42,worse,88) output(84,worse,27) output(17,eq,88) output(84,eq,13)
Optimization: 8 11
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(27,worse,6) output(42,worse,11) output(42,worse,17) output(42,worse,88) output(17,eq,88) output(84,eq,13)
Optimization: 7 11
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),4) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(27,worse,6) output(42,worse,11) output(42,worse,17) output(42,worse,88) output(17,eq,88)
Optimization: 6 11
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),5) preference(1,(1,9),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(42,worse,11) output(17,eq,88) output(84,eq,13) output(27,eq,6)
Optimization: 5 12
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,11) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(13,worse,6) output(27,worse,6) output(17,eq,88)
Optimization: 4 11
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(27,better,6) output(42,better,11) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(1,worse,10) output(13,worse,27) output(17,eq,88)
Optimization: 3 11
Answer: 19
preference(1,(1,1),1,for(atom(hasPrice(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(1,better,10) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,11) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(17,worse,88) output(27,worse,6)
Optimization: 2 11
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,2),1,for(atom(hasOiliness(0))),2) preference(1,(1,3),1,for(atom(hasStyle(1))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasPrice(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(1,better,10) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,88) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,11) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(27,worse,6)
Optimization: 1 10
Progression : [1;1] (Error: 0)
Progression : 1 [ 1;10] (Error: 9)
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),3) preference(1,less(weight)) output(1,better,10) output(1,better,42) output(1,better,11) output(1,better,17) output(1,better,88) output(1,better,84) output(1,better,13) output(1,better,27) output(1,better,6) output(10,better,42) output(10,better,11) output(10,better,17) output(10,better,88) output(10,better,84) output(10,better,13) output(10,better,27) output(10,better,6) output(11,better,17) output(11,better,88) output(11,better,84) output(11,better,13) output(11,better,27) output(11,better,6) output(13,better,27) output(13,better,6) output(17,better,88) output(17,better,84) output(17,better,13) output(17,better,27) output(17,better,6) output(42,better,11) output(42,better,17) output(42,better,88) output(42,better,84) output(42,better,13) output(42,better,27) output(42,better,6) output(84,better,13) output(84,better,27) output(84,better,6) output(88,better,84) output(88,better,13) output(88,better,27) output(88,better,6) output(27,worse,6)
Optimization: 1 9
Progression : 1 [2;9] (Error: 3.5)
Progression : 1 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.057 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 1 9
Bounds       : 1 [3;9]
Calls        : 1
Time         : 296.334s (Solving: 294.75s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.356s
Threads      : 4        (Winner: 4)

Choices      : 7758481  (Domain: 617386)
Conflicts    : 6877159  (Analyzed: 6877154)
Restarts     : 6109     (Average: 1125.74 Last: 424195)
Model-Level  : 36.9    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7026109  (Deleted: 6718853)
  Binary     : 660      (Ratio:   0.01%)
  Ternary    : 10452    (Ratio:   0.15%)
  Conflict   : 6877154  (Average Length:  176.9 Ratio:  97.88%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 148955   (Average Length:   42.0 Ratio:   2.12%) 
  Distributed: 49770    (Ratio:   0.72% Average LBD: 3.68) 
  Integrated : 149310   (Ratio: 300.00% Unit: 371 Average Jumps: 4.35)
Backjumps    : 6877154  (Average:  1.12 Max:  70 Sum: 7690849)
  Executed   : 6877152  (Average:  1.12 Max:  70 Sum: 7690803 Ratio: 100.00%)
  Bounded    : 2        (Average: 23.00 Max:  44 Sum:     46 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(4)) 
}.
