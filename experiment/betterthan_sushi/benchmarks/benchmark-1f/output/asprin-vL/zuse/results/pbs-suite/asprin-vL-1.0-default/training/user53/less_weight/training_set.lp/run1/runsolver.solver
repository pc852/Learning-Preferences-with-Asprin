asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,7) output(45,eq,86) output(45,eq,8) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(5,eq,86) output(5,eq,8) output(5,eq,85) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(39,eq,86) output(39,eq,8) output(39,eq,85) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,86) output(15,eq,8) output(15,eq,85) output(22,eq,28) output(22,eq,7) output(22,eq,86) output(22,eq,8) output(22,eq,85) output(28,eq,7) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(7,eq,86) output(7,eq,8) output(7,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 45 0
Answer: 2
preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),7) preference(1,less(weight)) output(5,better,22) output(5,better,7) output(15,better,22) output(15,better,7) output(28,better,7) output(39,better,22) output(39,better,7) output(45,better,22) output(45,better,7) output(7,worse,86) output(7,worse,8) output(7,worse,85) output(22,worse,28) output(22,worse,86) output(22,worse,8) output(22,worse,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,28) output(45,eq,86) output(45,eq,8) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,28) output(5,eq,86) output(5,eq,8) output(5,eq,85) output(39,eq,15) output(39,eq,28) output(39,eq,86) output(39,eq,8) output(39,eq,85) output(15,eq,28) output(15,eq,86) output(15,eq,8) output(15,eq,85) output(22,eq,7) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 36 2
Answer: 3
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,4),1,for(atom(hasStyle(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),7) preference(1,less(weight)) output(7,better,86) output(7,better,8) output(7,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,86) output(45,better,8) output(45,better,85) output(5,worse,7) output(15,worse,7) output(22,worse,7) output(28,worse,7) output(39,worse,7) output(45,eq,7) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,86) output(5,eq,8) output(5,eq,85) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,86) output(39,eq,8) output(39,eq,85) output(15,eq,22) output(15,eq,28) output(15,eq,86) output(15,eq,8) output(15,eq,85) output(22,eq,28) output(22,eq,86) output(22,eq,8) output(22,eq,85) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 34 14
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),7) preference(1,less(weight)) output(5,better,86) output(5,better,85) output(7,better,86) output(7,better,85) output(8,better,85) output(15,better,86) output(15,better,85) output(22,better,86) output(22,better,85) output(28,better,86) output(28,better,85) output(39,better,86) output(39,better,85) output(45,better,86) output(45,better,85) output(86,worse,8) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,22) output(45,eq,28) output(45,eq,7) output(45,eq,8) output(5,eq,39) output(5,eq,15) output(5,eq,22) output(5,eq,28) output(5,eq,7) output(5,eq,8) output(39,eq,15) output(39,eq,22) output(39,eq,28) output(39,eq,7) output(39,eq,8) output(15,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,8) output(22,eq,28) output(22,eq,7) output(22,eq,8) output(28,eq,7) output(28,eq,8) output(7,eq,8) output(86,eq,85)
Optimization: 30 8
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,9),1,for(atom(hasStyle(0))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),7) preference(1,less(weight)) output(5,better,22) output(5,better,86) output(5,better,85) output(7,better,86) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,86) output(15,better,85) output(28,better,86) output(28,better,85) output(39,better,22) output(39,better,86) output(39,better,85) output(45,better,22) output(45,better,86) output(45,better,85) output(86,worse,8) output(22,worse,28) output(22,worse,7) output(22,worse,8) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,28) output(45,eq,7) output(45,eq,8) output(5,eq,39) output(5,eq,15) output(5,eq,28) output(5,eq,7) output(5,eq,8) output(39,eq,15) output(39,eq,28) output(39,eq,7) output(39,eq,8) output(15,eq,28) output(15,eq,7) output(15,eq,8) output(22,eq,86) output(22,eq,85) output(28,eq,7) output(28,eq,8) output(7,eq,8) output(86,eq,85)
Optimization: 28 9
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),6) preference(1,less(weight)) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(22,better,28) output(22,better,7) output(22,better,86) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(86,worse,8) output(86,worse,85) output(7,worse,8) output(7,worse,85) output(22,worse,8) output(22,worse,85) output(28,worse,8) output(28,worse,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,8) output(45,eq,85) output(5,eq,39) output(5,eq,15) output(5,eq,8) output(5,eq,85) output(39,eq,15) output(39,eq,8) output(39,eq,85) output(15,eq,8) output(15,eq,85) output(28,eq,7) output(28,eq,86) output(7,eq,86) output(8,eq,85)
Optimization: 26 3
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,12),1,for(atom(hasStyle(0))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(5,better,39) output(5,better,15) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(45,better,39) output(45,better,15) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(15,worse,22) output(15,worse,28) output(39,worse,22) output(39,worse,28) output(45,eq,5) output(45,eq,22) output(45,eq,28) output(5,eq,22) output(5,eq,28) output(39,eq,15) output(39,eq,7) output(39,eq,86) output(39,eq,8) output(39,eq,85) output(15,eq,7) output(15,eq,86) output(15,eq,8) output(15,eq,85) output(22,eq,28) output(7,eq,86) output(7,eq,8) output(7,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 25 10
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasStyle(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),7) preference(1,less(weight)) output(5,better,22) output(5,better,28) output(5,better,86) output(5,better,85) output(7,better,86) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,86) output(15,better,85) output(22,better,28) output(22,better,86) output(28,better,86) output(39,better,22) output(39,better,28) output(39,better,86) output(39,better,85) output(45,better,22) output(45,better,28) output(45,better,86) output(45,better,85) output(86,worse,8) output(86,worse,85) output(22,worse,7) output(22,worse,8) output(28,worse,7) output(28,worse,8) output(28,worse,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,7) output(45,eq,8) output(5,eq,39) output(5,eq,15) output(5,eq,7) output(5,eq,8) output(39,eq,15) output(39,eq,7) output(39,eq,8) output(15,eq,7) output(15,eq,8) output(22,eq,85) output(7,eq,8)
Optimization: 23 10
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,4),1,for(atom(hasStyle(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),7) preference(1,less(weight)) output(5,better,22) output(5,better,28) output(5,better,86) output(5,better,85) output(7,better,86) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,86) output(15,better,85) output(22,better,28) output(22,better,86) output(22,better,85) output(28,better,86) output(39,better,22) output(39,better,28) output(39,better,86) output(39,better,85) output(45,better,22) output(45,better,28) output(45,better,86) output(45,better,85) output(86,worse,8) output(86,worse,85) output(22,worse,7) output(22,worse,8) output(28,worse,7) output(28,worse,8) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,7) output(45,eq,8) output(5,eq,39) output(5,eq,15) output(5,eq,7) output(5,eq,8) output(39,eq,15) output(39,eq,7) output(39,eq,8) output(15,eq,7) output(15,eq,8) output(28,eq,85) output(7,eq,8)
Optimization: 22 10
Answer: 10
preference(1,(1,3),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,5),1,for(atom(hasStyle(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),7) preference(1,less(weight)) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(5,eq,39) output(5,eq,15) output(39,eq,15) output(22,eq,28) output(22,eq,7) output(22,eq,86) output(22,eq,8) output(22,eq,85) output(28,eq,7) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(7,eq,86) output(7,eq,8) output(7,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 21 10
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasStyle(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,12),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),1) preference(1,less(weight)) output(86,better,85) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,85) output(7,better,86) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,7) output(15,better,86) output(15,better,85) output(22,better,86) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,85) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,85) output(45,better,22) output(45,better,7) output(45,better,86) output(45,better,85) output(86,worse,8) output(7,worse,8) output(22,worse,28) output(22,worse,8) output(45,eq,5) output(45,eq,39) output(45,eq,15) output(45,eq,28) output(45,eq,8) output(5,eq,39) output(5,eq,15) output(5,eq,28) output(5,eq,8) output(39,eq,15) output(39,eq,28) output(39,eq,8) output(15,eq,28) output(15,eq,8) output(22,eq,7) output(28,eq,8)
Optimization: 20 9
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,13),1,for(atom(hasStyle(0))),7) preference(1,less(weight)) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,85) output(8,better,85) output(15,better,86) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,86) output(28,better,85) output(39,better,15) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(86,worse,8) output(15,worse,22) output(45,eq,5) output(39,eq,22) output(15,eq,28) output(15,eq,7) output(15,eq,8) output(28,eq,7) output(28,eq,8) output(7,eq,8) output(86,eq,85)
Optimization: 11 12
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasStyle(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,86) output(22,better,8) output(22,better,85) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(28,worse,7) output(45,eq,5) output(39,eq,15) output(22,eq,7) output(28,eq,86) output(28,eq,8) output(28,eq,85) output(86,eq,8) output(86,eq,85) output(8,eq,85)
Optimization: 10 12
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,2),1,for(atom(hasStyle(0))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasOiliness(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,11),1,for(atom(hasOiliness(0))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(5,better,15) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,86) output(39,better,15) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(86,worse,8) output(86,worse,85) output(15,worse,22) output(28,worse,7) output(28,worse,8) output(28,worse,85) output(5,eq,39) output(5,eq,22) output(39,eq,22) output(8,eq,85)
Optimization: 10 11
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,6),1,for(atom(hasOiliness(0))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,9),1,for(atom(hasStyle(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,11),1,for(atom(hasPrice(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,13),1,for(atom(hasStyle(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,85) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85) output(15,worse,22) output(15,worse,28) output(15,worse,7) output(22,worse,28) output(39,worse,28) output(5,eq,28) output(15,eq,86) output(15,eq,8) output(86,eq,8)
Optimization: 9 12
Answer: 16
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,5),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasStyle(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,14),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasStyle(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,5),1,for(atom(hasOiliness(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 13
Answer: 18
preference(1,(1,2),1,for(atom(hasStyle(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 12
Answer: 19
preference(1,(1,2),1,for(atom(hasStyle(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasPrice(0))),7) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 11
Answer: 20
preference(1,(1,2),1,for(atom(hasStyle(0))),8) preference(1,(1,3),1,for(atom(hasStyle(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
Answer: 21
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasStyle(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
Answer: 22
preference(1,(1,2),1,for(atom(hasPrice(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasStyle(0))),8) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(86,better,8) output(86,better,85) output(5,better,39) output(5,better,15) output(5,better,22) output(5,better,28) output(5,better,7) output(5,better,86) output(5,better,8) output(5,better,85) output(7,better,86) output(7,better,8) output(7,better,85) output(8,better,85) output(15,better,22) output(15,better,28) output(15,better,7) output(15,better,86) output(15,better,8) output(15,better,85) output(22,better,28) output(22,better,7) output(22,better,86) output(22,better,8) output(22,better,85) output(28,better,7) output(28,better,86) output(28,better,8) output(28,better,85) output(39,better,15) output(39,better,22) output(39,better,28) output(39,better,7) output(39,better,86) output(39,better,8) output(39,better,85) output(45,better,5) output(45,better,39) output(45,better,15) output(45,better,22) output(45,better,28) output(45,better,7) output(45,better,86) output(45,better,8) output(45,better,85)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.069 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 296.945s (Solving: 295.36s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.902s
Threads      : 4        (Winner: 4)

Choices      : 9365798  (Domain: 832187)
Conflicts    : 7431022  (Analyzed: 7431019)
Restarts     : 6573     (Average: 1130.54 Last: 52831)
Model-Level  : 43.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7487978  (Deleted: 7208858)
  Binary     : 1444     (Ratio:   0.02%)
  Ternary    : 6769     (Ratio:   0.09%)
  Conflict   : 7431019  (Average Length:  265.5 Ratio:  99.24%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 56959    (Average Length:   33.4 Ratio:   0.76%) 
  Distributed: 19048    (Ratio:   0.26% Average LBD: 3.63) 
  Integrated : 57144    (Ratio: 300.00% Unit: 133 Average Jumps: 4.30)
Backjumps    : 7431019  (Average:  1.21 Max: 293 Sum: 8962795)
  Executed   : 7431018  (Average:  1.21 Max: 293 Sum: 8962752 Ratio: 100.00%)
  Bounded    : 1        (Average: 43.00 Max:  43 Sum:     43 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasStyle(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasStyle(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.
