asprin_vL version 1.0
Reading from stdin
-:309:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:319:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:334:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:415:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:689:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:866:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:995:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1067:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1071:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1071:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1077:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1176:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1202:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1322:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1356:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1378:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:226:1-16: info: no atoms over signature occur in program:
  output/3

-:218:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:219:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:220:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(15,eq,31) preference(1,poset) output(12,eq,5) output(12,eq,8) output(12,eq,22) output(12,eq,15) output(12,eq,31) output(12,eq,61) output(12,eq,23) output(12,eq,10) output(12,eq,55) output(5,eq,8) output(5,eq,22) output(5,eq,15) output(5,eq,31) output(5,eq,61) output(5,eq,23) output(5,eq,10) output(5,eq,55) output(8,eq,22) output(8,eq,15) output(8,eq,31) output(8,eq,61) output(8,eq,23) output(8,eq,10) output(8,eq,55) output(22,eq,15) output(22,eq,31) output(22,eq,61) output(22,eq,23) output(22,eq,10) output(22,eq,55) output(15,eq,61) output(15,eq,23) output(15,eq,10) output(15,eq,55) output(31,eq,61) output(31,eq,23) output(31,eq,10) output(31,eq,55) output(61,eq,23) output(61,eq,10) output(61,eq,55) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 45 0
Answer: 2
output(15,eq,31) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(8,better,22) output(8,better,23) output(8,better,10) output(8,better,55) output(15,better,23) output(15,better,10) output(15,better,55) output(31,better,23) output(31,better,10) output(31,better,55) output(12,worse,61) output(5,worse,61) output(22,worse,61) output(12,worse,8) output(12,worse,15) output(12,worse,31) output(5,worse,8) output(5,worse,15) output(5,worse,31) output(22,worse,15) output(22,worse,31) output(12,eq,5) output(12,eq,22) output(12,eq,23) output(12,eq,10) output(12,eq,55) output(5,eq,22) output(5,eq,23) output(5,eq,10) output(5,eq,55) output(8,eq,15) output(8,eq,31) output(8,eq,61) output(22,eq,23) output(22,eq,10) output(22,eq,55) output(15,eq,61) output(31,eq,61) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 32 1
Answer: 3
output(15,eq,31) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(11))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(8,better,23) output(8,better,10) output(8,better,55) output(12,better,5) output(12,better,15) output(12,better,31) output(12,better,23) output(12,better,55) output(22,better,15) output(22,better,31) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(5,worse,61) output(15,worse,61) output(31,worse,61) output(5,worse,8) output(5,worse,22) output(12,eq,8) output(12,eq,22) output(12,eq,61) output(5,eq,15) output(5,eq,31) output(5,eq,23) output(5,eq,10) output(5,eq,55) output(8,eq,22) output(8,eq,61) output(22,eq,61) output(15,eq,23) output(15,eq,10) output(15,eq,55) output(31,eq,23) output(31,eq,10) output(31,eq,55) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 26 1
Answer: 4
output(15,eq,31) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(4))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(12,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,23) output(12,better,55) output(10,better,55) output(22,better,15) output(22,better,31) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(5,worse,61) output(15,worse,61) output(31,worse,61) output(5,worse,8) output(5,worse,10) output(15,worse,10) output(31,worse,10) output(23,worse,10) output(5,worse,22) output(5,eq,15) output(5,eq,31) output(5,eq,23) output(5,eq,55) output(8,eq,22) output(8,eq,61) output(22,eq,61) output(15,eq,23) output(15,eq,55) output(31,eq,23) output(31,eq,55) output(23,eq,55)
Optimization: 22 1
Answer: 5
output(15,eq,31) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(5))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(8,better,23) output(8,better,10) output(8,better,55) output(12,better,5) output(12,better,15) output(12,better,31) output(12,better,23) output(12,better,55) output(5,better,15) output(5,better,31) output(5,better,23) output(5,better,10) output(5,better,55) output(22,better,15) output(22,better,31) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(5,worse,61) output(15,worse,61) output(31,worse,61) output(5,worse,8) output(5,worse,22) output(12,eq,8) output(12,eq,22) output(12,eq,61) output(8,eq,22) output(8,eq,61) output(22,eq,61) output(15,eq,23) output(15,eq,10) output(15,eq,55) output(31,eq,23) output(31,eq,10) output(31,eq,55) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 21 1
Answer: 6
output(15,eq,31) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(8,better,22) output(8,better,23) output(8,better,10) output(8,better,55) output(15,better,23) output(15,better,10) output(15,better,55) output(31,better,23) output(31,better,10) output(31,better,55) output(12,better,5) output(12,better,15) output(12,better,31) output(12,better,23) output(12,better,55) output(22,better,15) output(22,better,31) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(12,worse,61) output(5,worse,61) output(22,worse,61) output(15,worse,61) output(31,worse,61) output(12,worse,8) output(5,worse,8) output(5,worse,15) output(5,worse,31) output(5,worse,22) output(12,eq,22) output(5,eq,23) output(5,eq,10) output(5,eq,55) output(8,eq,61) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 19 1
Answer: 7
output(15,eq,31) preference(1,(1,6),1,for(atom(hasOiliness(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,61) output(8,better,22) output(8,better,23) output(8,better,10) output(8,better,55) output(15,better,23) output(15,better,10) output(15,better,55) output(31,better,23) output(31,better,10) output(31,better,55) output(12,better,23) output(12,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,23) output(5,better,10) output(5,better,55) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(12,worse,61) output(22,worse,61) output(15,worse,61) output(31,worse,61) output(12,worse,8) output(12,worse,15) output(12,worse,31) output(22,worse,15) output(22,worse,31) output(12,worse,5) output(12,eq,22) output(8,eq,61) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 16 2
Answer: 8
output(15,eq,31) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,12),2,for(atom(hasOiliness(0))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(8,better,22) output(8,better,23) output(8,better,10) output(8,better,55) output(15,better,23) output(15,better,10) output(15,better,55) output(31,better,23) output(31,better,10) output(31,better,55) output(12,better,5) output(12,better,15) output(12,better,31) output(12,better,23) output(12,better,55) output(5,better,15) output(5,better,31) output(5,better,23) output(5,better,10) output(5,better,55) output(22,better,15) output(22,better,31) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(12,worse,61) output(5,worse,61) output(22,worse,61) output(15,worse,61) output(31,worse,61) output(12,worse,8) output(5,worse,8) output(5,worse,22) output(12,eq,22) output(8,eq,61) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 14 2
Answer: 9
output(15,eq,31) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),()) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),()) preference(1,(1,1),2,for(atom(hasStyle(1))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(9))),()) preference(1,(1,3),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMinorGrp(8))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,7),2,for(atom(hasMinorGrp(8))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(3))),()) preference(1,(1,10),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(4))),()) preference(1,(1,12),2,for(atom(hasMajorGrp(0))),()) preference(1,poset) output(61,better,23) output(61,better,10) output(61,better,55) output(12,better,61) output(5,better,61) output(8,better,61) output(22,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,23) output(12,better,55) output(10,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,23) output(5,better,10) output(5,better,55) output(22,better,15) output(22,better,31) output(22,better,23) output(22,better,10) output(22,better,55) output(12,better,10) output(8,better,15) output(8,better,31) output(15,worse,61) output(31,worse,61) output(15,worse,10) output(31,worse,10) output(23,worse,10) output(12,worse,5) output(8,eq,22) output(15,eq,23) output(15,eq,55) output(31,eq,23) output(31,eq,55) output(23,eq,55)
Optimization: 13 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.068 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 13 12
Calls        : 1
Time         : 296.572s (Solving: 287.74s 1st Model: 1.75s Unsat: 0.00s)
CPU Time     : 1152.980s
Threads      : 4        (Winner: 4)

Choices      : 4160057  (Domain: 818)
Conflicts    : 97171    (Analyzed: 97171)
Restarts     : 168      (Average: 578.40 Last: 2679)
Model-Level  : 12316.9 
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 14057798 (Deleted: 13977813)
  Binary     : 398      (Ratio:   0.00%)
  Ternary    : 28071    (Ratio:   0.20%)
  Conflict   : 97171    (Average Length:  834.0 Ratio:   0.69%) 
  Loop       : 13935524 (Average Length:  323.8 Ratio:  99.13%) 
  Other      : 25103    (Average Length:    3.3 Ratio:   0.18%) 
  Distributed: 8385     (Ratio:   0.06% Average LBD: 2.88) 
  Integrated : 25155    (Ratio: 300.00% Unit: 86 Average Jumps: 2186.06)
Backjumps    : 97171    (Average: 36.03 Max: 84745 Sum: 3501483)
  Executed   : 97150    (Average: 36.03 Max: 84745 Sum: 3501442 Ratio: 100.00%)
  Bounded    : 21       (Average:  1.95 Max:   2 Sum:     41 Ratio:   0.00%)

Rules        : 1887382 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 35305   
Bodies       : 1399249 
  Count      : 48      
Equivalences : 32174    (Atom=Atom: 5058 Body=Body: 7761 Other: 19355)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 1339880 Gammas: 0)
Variables    : 1355943  (Eliminated:    0 Frozen: 1342665)
Constraints  : 7840625  (Binary:  82.4% Ternary:   4.3% Other:  13.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasOiliness(0)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(5)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(5)) ; 
  atom(hasMinorGrp(5)) >> atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMajorGrp(0)) >> atom(hasStyle(1)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(9)) ; 
  atom(hasPrice(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMajorGrp(1)) >> atom(hasMinorGrp(8)) ; 
  atom(hasMinorGrp(5)) >> atom(hasPrice(1)) ; 
  atom(hasMajorGrp(0)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(8)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(5)) ; 
  atom(hasMajorGrp(1)) >> atom(hasMinorGrp(3)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMinorGrp(4)) ; 
  atom(hasMinorGrp(3)) >> atom(hasMinorGrp(4)) ; 
  atom(hasMinorGrp(10)) >> atom(hasMajorGrp(0)) 
}.
