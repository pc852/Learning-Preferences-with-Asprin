asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(12,eq,5) output(12,eq,8) output(12,eq,22) output(12,eq,15) output(12,eq,31) output(12,eq,61) output(12,eq,23) output(12,eq,10) output(12,eq,55) output(5,eq,8) output(5,eq,22) output(5,eq,15) output(5,eq,31) output(5,eq,61) output(5,eq,23) output(5,eq,10) output(5,eq,55) output(8,eq,22) output(8,eq,15) output(8,eq,31) output(8,eq,61) output(8,eq,23) output(8,eq,10) output(8,eq,55) output(22,eq,15) output(22,eq,31) output(22,eq,61) output(22,eq,23) output(22,eq,10) output(22,eq,55) output(15,eq,31) output(15,eq,61) output(15,eq,23) output(15,eq,10) output(15,eq,55) output(31,eq,61) output(31,eq,23) output(31,eq,10) output(31,eq,55) output(61,eq,23) output(61,eq,10) output(61,eq,55) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 45 0
Answer: 2
preference(1,(1,6),1,for(atom(hasOiliness(0))),8) preference(1,less(weight)) output(5,better,8) output(5,better,15) output(5,better,31) output(5,better,61) output(12,better,8) output(12,better,15) output(12,better,31) output(12,better,61) output(22,better,15) output(22,better,31) output(22,better,61) output(61,worse,23) output(61,worse,10) output(61,worse,55) output(8,worse,22) output(8,worse,23) output(8,worse,10) output(8,worse,55) output(15,worse,23) output(15,worse,10) output(15,worse,55) output(31,worse,23) output(31,worse,10) output(31,worse,55) output(12,eq,5) output(12,eq,22) output(12,eq,23) output(12,eq,10) output(12,eq,55) output(5,eq,22) output(5,eq,23) output(5,eq,10) output(5,eq,55) output(8,eq,15) output(8,eq,31) output(8,eq,61) output(22,eq,23) output(22,eq,10) output(22,eq,55) output(15,eq,31) output(15,eq,61) output(31,eq,61) output(23,eq,10) output(23,eq,55) output(10,eq,55)
Optimization: 34 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasStyle(0))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,10) output(8,better,61) output(12,better,8) output(12,better,15) output(12,better,31) output(12,better,61) output(15,better,61) output(22,better,15) output(22,better,31) output(22,better,61) output(23,better,10) output(31,better,61) output(61,worse,23) output(61,worse,10) output(61,worse,55) output(8,worse,22) output(8,worse,23) output(8,worse,10) output(8,worse,55) output(10,worse,55) output(12,worse,5) output(12,worse,22) output(12,worse,23) output(12,worse,10) output(12,worse,55) output(15,worse,23) output(15,worse,10) output(15,worse,55) output(22,worse,23) output(22,worse,10) output(22,worse,55) output(31,worse,23) output(31,worse,10) output(31,worse,55) output(5,eq,23) output(5,eq,55) output(8,eq,15) output(8,eq,31) output(15,eq,31) output(23,eq,55)
Optimization: 28 10
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasStyle(0))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),6) preference(1,less(weight)) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,10) output(5,better,55) output(8,better,61) output(10,better,55) output(12,better,8) output(12,better,15) output(12,better,31) output(12,better,61) output(15,better,61) output(22,better,15) output(22,better,31) output(22,better,61) output(23,better,10) output(23,better,55) output(31,better,61) output(61,worse,23) output(61,worse,10) output(61,worse,55) output(8,worse,22) output(8,worse,23) output(8,worse,10) output(8,worse,55) output(12,worse,5) output(12,worse,22) output(12,worse,23) output(12,worse,10) output(12,worse,55) output(15,worse,23) output(15,worse,10) output(15,worse,55) output(22,worse,23) output(22,worse,10) output(31,worse,23) output(31,worse,10) output(31,worse,55) output(5,eq,23) output(8,eq,15) output(8,eq,31) output(22,eq,55) output(15,eq,31)
Optimization: 25 11
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasStyle(0))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,61) output(10,better,55) output(12,better,8) output(12,better,15) output(12,better,31) output(12,better,61) output(15,better,61) output(22,better,15) output(22,better,31) output(22,better,61) output(23,better,10) output(23,better,55) output(31,better,61) output(61,worse,23) output(61,worse,10) output(61,worse,55) output(8,worse,22) output(8,worse,23) output(8,worse,10) output(8,worse,55) output(12,worse,5) output(12,worse,22) output(12,worse,23) output(12,worse,10) output(12,worse,55) output(15,worse,23) output(15,worse,10) output(15,worse,55) output(22,worse,23) output(22,worse,10) output(22,worse,55) output(31,worse,23) output(31,worse,10) output(31,worse,55) output(8,eq,15) output(8,eq,31) output(15,eq,31)
Optimization: 24 12
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,5),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,22) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,22) output(8,better,23) output(8,better,10) output(8,better,55) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,23) output(22,better,10) output(22,better,55) output(23,better,10) output(23,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(5,worse,15) output(5,worse,31) output(5,worse,61) output(8,worse,15) output(8,worse,31) output(8,worse,61) output(12,worse,5) output(12,worse,8) output(12,worse,15) output(12,worse,31) output(12,worse,61) output(22,worse,15) output(22,worse,31) output(22,worse,61) output(12,eq,22) output(5,eq,8) output(15,eq,31) output(10,eq,55)
Optimization: 18 10
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),2) preference(1,(1,9),1,for(atom(hasStyle(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasStyle(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,14),1,for(atom(hasPrice(1))),7) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,22) output(5,better,23) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,22) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(5,worse,8) output(5,worse,15) output(5,worse,31) output(5,worse,61) output(12,worse,8) output(12,worse,15) output(12,worse,31) output(22,worse,15) output(22,worse,31) output(22,worse,61) output(22,worse,23) output(22,worse,10) output(22,worse,55) output(23,worse,10) output(5,eq,10) output(15,eq,31) output(23,eq,55)
Optimization: 17 13
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasStyle(0))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,8),1,for(atom(hasPrice(0))),2) preference(1,(1,11),1,for(atom(hasStyle(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),7) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,22) output(5,better,23) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,22) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,23) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(5,worse,8) output(5,worse,15) output(5,worse,31) output(5,worse,61) output(12,worse,8) output(12,worse,15) output(12,worse,31) output(22,worse,15) output(22,worse,31) output(22,worse,61) output(22,worse,10) output(22,worse,55) output(23,worse,10) output(23,worse,55) output(5,eq,10) output(15,eq,31)
Optimization: 16 9
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,5),1,for(atom(hasStyle(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,10),1,for(atom(hasOiliness(0))),7) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(61,better,55) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,55) output(22,better,15) output(22,better,31) output(22,better,61) output(22,better,23) output(22,better,55) output(23,better,55) output(31,better,55) output(61,worse,23) output(61,worse,10) output(15,worse,23) output(15,worse,10) output(22,worse,10) output(23,worse,10) output(31,worse,23) output(31,worse,10) output(5,eq,8) output(5,eq,10) output(8,eq,10) output(15,eq,31) output(15,eq,61) output(31,eq,61)
Optimization: 14 12
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasOiliness(0))),5) preference(1,(1,12),1,for(atom(hasPrice(0))),8) preference(1,(1,13),1,for(atom(hasStyle(0))),3) preference(1,(1,14),1,for(atom(hasOiliness(1))),2) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,15) output(22,better,31) output(22,better,61) output(22,better,23) output(22,better,10) output(22,better,55) output(23,better,10) output(23,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(15,eq,31)
Optimization: 1 14
Progression : 1 [ 1;14] (Error: 13)
Progression : 1 [ 2;14] (Error: 6)
Answer: 11
preference(1,(1,2),1,for(atom(hasPrice(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,15) output(22,better,31) output(22,better,61) output(22,better,23) output(22,better,10) output(22,better,55) output(23,better,10) output(23,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(15,eq,31)
Optimization: 1 12
Answer: 12
preference(1,(1,2),1,for(atom(hasPrice(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,15) output(22,better,31) output(22,better,61) output(22,better,23) output(22,better,10) output(22,better,55) output(23,better,10) output(23,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(15,eq,31)
Optimization: 1 11
Answer: 13
preference(1,(1,2),1,for(atom(hasPrice(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),3) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),1) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,15) output(22,better,31) output(22,better,61) output(22,better,23) output(22,better,10) output(22,better,55) output(23,better,10) output(23,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(15,eq,31)
Optimization: 1 10
Answer: 14
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,5),1,for(atom(hasPrice(1))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,11),1,for(atom(hasStyle(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),6) preference(1,less(weight)) output(61,better,23) output(61,better,10) output(61,better,55) output(5,better,8) output(5,better,22) output(5,better,15) output(5,better,31) output(5,better,61) output(5,better,23) output(5,better,10) output(5,better,55) output(8,better,22) output(8,better,15) output(8,better,31) output(8,better,61) output(8,better,23) output(8,better,10) output(8,better,55) output(10,better,55) output(12,better,5) output(12,better,8) output(12,better,22) output(12,better,15) output(12,better,31) output(12,better,61) output(12,better,23) output(12,better,10) output(12,better,55) output(15,better,61) output(15,better,23) output(15,better,10) output(15,better,55) output(22,better,15) output(22,better,31) output(22,better,61) output(22,better,23) output(22,better,10) output(22,better,55) output(23,better,10) output(23,better,55) output(31,better,61) output(31,better,23) output(31,better,10) output(31,better,55) output(15,eq,31)
Optimization: 1 9
Progression : 1 [3;9] (Error: 2)
Progression : 1 [4;9] (Error: 1.25)
Progression : 1 [5;9] (Error: 0.8)
Progression : 1 [6;9] (Error: 0.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.057 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 1 9
Calls        : 1
Time         : 297.962s (Solving: 296.25s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.542s
Threads      : 4        (Winner: 4)

Choices      : 6384456  (Domain: 710662)
Conflicts    : 5755353  (Analyzed: 5755347)
Restarts     : 4821     (Average: 1193.81 Last: 429275)
Model-Level  : 54.1    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 5813314  (Deleted: 5636941)
  Binary     : 140      (Ratio:   0.00%)
  Ternary    : 3212     (Ratio:   0.06%)
  Conflict   : 5755347  (Average Length:  180.0 Ratio:  99.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 57967    (Average Length:   45.4 Ratio:   1.00%) 
  Distributed: 19508    (Ratio:   0.34% Average LBD: 3.65) 
  Integrated : 58524    (Ratio: 300.00% Unit: 1014 Average Jumps: 10.16)
Backjumps    : 5755347  (Average:  1.09 Max: 254 Sum: 6287541)
  Executed   : 5755298  (Average:  1.09 Max: 254 Sum: 6287467 Ratio: 100.00%)
  Bounded    : 49       (Average:  1.51 Max:  24 Sum:     74 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8144    
  Sum        : 73      
  Count      : 14      
Equivalences : 8213     (Atom=Atom: 501 Body=Body: 235 Other: 7477)
Tight        : Yes
Variables    : 6961     (Eliminated:    0 Frozen: 4301)
Constraints  : 177922   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasStyle(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(4)) 
}.
