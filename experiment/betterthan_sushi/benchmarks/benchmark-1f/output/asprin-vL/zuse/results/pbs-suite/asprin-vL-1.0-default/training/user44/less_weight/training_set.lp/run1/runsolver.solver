asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(0,eq,15) output(0,eq,6) output(0,eq,1) output(0,eq,42) output(0,eq,4) output(0,eq,51) output(0,eq,21) output(0,eq,14) output(0,eq,7) output(15,eq,6) output(15,eq,1) output(15,eq,42) output(15,eq,4) output(15,eq,51) output(15,eq,21) output(15,eq,14) output(15,eq,7) output(6,eq,1) output(6,eq,42) output(6,eq,4) output(6,eq,51) output(6,eq,21) output(6,eq,14) output(6,eq,7) output(1,eq,42) output(1,eq,4) output(1,eq,51) output(1,eq,21) output(1,eq,14) output(1,eq,7) output(42,eq,4) output(42,eq,51) output(42,eq,21) output(42,eq,14) output(42,eq,7) output(4,eq,51) output(4,eq,21) output(4,eq,14) output(4,eq,7) output(51,eq,21) output(51,eq,14) output(51,eq,7) output(21,eq,14) output(21,eq,7) output(14,eq,7)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(0,better,6) output(0,better,4) output(0,better,21) output(0,better,14) output(1,better,4) output(1,better,21) output(1,better,14) output(15,better,6) output(15,better,4) output(15,better,21) output(15,better,14) output(42,better,4) output(42,better,21) output(42,better,14) output(51,better,21) output(51,better,14) output(0,worse,42) output(0,worse,51) output(0,worse,7) output(1,worse,42) output(1,worse,51) output(1,worse,7) output(4,worse,51) output(4,worse,21) output(4,worse,14) output(4,worse,7) output(6,worse,1) output(6,worse,42) output(6,worse,51) output(6,worse,21) output(6,worse,14) output(6,worse,7) output(14,worse,7) output(15,worse,42) output(15,worse,51) output(15,worse,7) output(21,worse,7) output(0,eq,15) output(0,eq,1) output(15,eq,1) output(6,eq,4) output(42,eq,51) output(42,eq,7) output(51,eq,7) output(21,eq,14)
Optimization: 29 3
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(0,better,15) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,51) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,14) output(4,better,7) output(6,better,51) output(6,better,14) output(6,better,7) output(21,better,14) output(21,better,7) output(42,better,51) output(42,better,14) output(42,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(0,worse,4) output(0,worse,21) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,4) output(15,worse,21) output(51,worse,21) output(15,eq,51) output(15,eq,14) output(15,eq,7) output(6,eq,1) output(6,eq,42) output(6,eq,4) output(6,eq,21) output(1,eq,42) output(1,eq,4) output(1,eq,21) output(42,eq,4) output(42,eq,21) output(4,eq,21) output(51,eq,14) output(51,eq,7) output(14,eq,7)
Optimization: 27 12
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(0,better,15) output(0,better,4) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,4) output(1,better,51) output(1,better,14) output(1,better,7) output(6,better,4) output(6,better,51) output(6,better,14) output(6,better,7) output(21,better,14) output(21,better,7) output(42,better,4) output(42,better,51) output(42,better,14) output(42,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(0,worse,21) output(4,worse,21) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,21) output(51,worse,21) output(15,eq,4) output(15,eq,51) output(15,eq,14) output(15,eq,7) output(6,eq,1) output(6,eq,42) output(6,eq,21) output(1,eq,42) output(1,eq,21) output(42,eq,21) output(4,eq,51) output(4,eq,14) output(4,eq,7) output(51,eq,14) output(51,eq,7) output(14,eq,7)
Optimization: 26 12
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),6) preference(1,less(weight)) output(0,better,15) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,51) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,14) output(4,better,7) output(6,better,51) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,51) output(42,better,14) output(42,better,7) output(51,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(0,worse,4) output(0,worse,21) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,4) output(15,worse,21) output(51,worse,21) output(15,eq,51) output(15,eq,14) output(6,eq,1) output(6,eq,42) output(6,eq,4) output(6,eq,21) output(1,eq,42) output(1,eq,4) output(1,eq,21) output(42,eq,4) output(42,eq,21) output(4,eq,21) output(51,eq,14)
Optimization: 24 11
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(0,better,15) output(0,better,4) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,4) output(1,better,51) output(1,better,14) output(1,better,7) output(4,better,7) output(6,better,4) output(6,better,51) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,4) output(42,better,51) output(42,better,14) output(42,better,7) output(51,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(0,worse,21) output(4,worse,21) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,21) output(51,worse,21) output(15,eq,4) output(15,eq,51) output(15,eq,14) output(6,eq,1) output(6,eq,42) output(6,eq,21) output(1,eq,42) output(1,eq,21) output(42,eq,21) output(4,eq,51) output(4,eq,14) output(51,eq,14)
Optimization: 22 12
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),6) preference(1,less(weight)) output(0,better,15) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(0,worse,4) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,4) output(15,worse,21) output(51,worse,21) output(0,eq,21) output(15,eq,51) output(15,eq,14) output(6,eq,1) output(6,eq,42) output(6,eq,4) output(1,eq,42) output(1,eq,4) output(42,eq,4) output(51,eq,14)
Optimization: 20 12
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,15) output(0,better,4) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,4) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,7) output(6,better,4) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,4) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(4,worse,21) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,21) output(51,worse,21) output(0,eq,21) output(15,eq,4) output(15,eq,51) output(15,eq,14) output(6,eq,1) output(6,eq,42) output(1,eq,42) output(4,eq,51) output(4,eq,14) output(51,eq,14)
Optimization: 19 13
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(0,better,15) output(0,better,51) output(0,better,14) output(0,better,7) output(1,better,4) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,14) output(4,better,7) output(6,better,4) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,4) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,7) output(0,worse,6) output(0,worse,1) output(0,worse,42) output(15,worse,6) output(15,worse,1) output(15,worse,42) output(15,worse,4) output(15,worse,21) output(51,worse,21) output(0,eq,4) output(0,eq,21) output(15,eq,51) output(15,eq,14) output(6,eq,1) output(6,eq,42) output(1,eq,42) output(4,eq,21) output(51,eq,14)
Optimization: 18 13
Answer: 10
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasOiliness(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(0,better,42) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,4) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,42) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(15,better,6) output(15,better,42) output(15,better,4) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(51,better,21) output(51,better,14) output(51,better,7) output(0,worse,15) output(0,worse,6) output(0,worse,1) output(0,worse,4) output(6,worse,1) output(14,worse,7) output(42,worse,4) output(42,worse,51) output(42,worse,21) output(42,worse,14) output(42,worse,7) output(15,eq,1) output(6,eq,4)
Optimization: 13 11
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(0,better,1) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,51) output(1,better,21) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,1) output(6,better,42) output(6,better,4) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,1) output(15,better,42) output(15,better,4) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,7) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,7) output(0,worse,15) output(0,worse,6) output(0,worse,4) output(1,worse,42) output(1,worse,4) output(15,worse,6) output(21,worse,14) output(42,worse,4) output(51,worse,21) output(51,worse,14) output(0,eq,42) output(1,eq,14)
Optimization: 12 11
Answer: 12
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),2) preference(1,less(weight)) output(0,better,42) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,42) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,6) output(15,better,42) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,21) output(51,better,14) output(51,better,7) output(0,worse,15) output(0,worse,6) output(0,worse,1) output(0,worse,4) output(6,worse,1) output(6,worse,4) output(42,worse,4) output(15,eq,1) output(15,eq,4) output(1,eq,4) output(42,eq,51)
Optimization: 11 10
Answer: 13
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),2) preference(1,less(weight)) output(0,better,42) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,42) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,6) output(15,better,1) output(15,better,42) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,21) output(51,better,14) output(51,better,7) output(0,worse,15) output(0,worse,6) output(0,worse,1) output(0,worse,4) output(1,worse,4) output(6,worse,4) output(42,worse,4) output(15,eq,4) output(6,eq,1) output(42,eq,51)
Optimization: 10 11
Answer: 14
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),2) preference(1,less(weight)) output(0,better,42) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,1) output(6,better,42) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,6) output(15,better,1) output(15,better,42) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,21) output(51,better,14) output(51,better,7) output(0,worse,15) output(0,worse,6) output(0,worse,4) output(1,worse,4) output(6,worse,4) output(42,worse,4) output(0,eq,1) output(15,eq,4) output(42,eq,51)
Optimization: 9 11
Answer: 15
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasPrice(0))),1) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),3) preference(1,less(weight)) output(0,better,1) output(0,better,42) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,1) output(6,better,42) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,6) output(15,better,1) output(15,better,42) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,14) output(51,better,7) output(0,worse,15) output(0,worse,6) output(0,worse,4) output(1,worse,4) output(6,worse,4) output(15,worse,4) output(42,worse,4) output(51,worse,21)
Optimization: 8 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,13),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),4) preference(1,less(weight)) output(0,better,15) output(0,better,6) output(0,better,1) output(0,better,42) output(0,better,4) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,4) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(6,better,4) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(15,better,6) output(15,better,42) output(15,better,4) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(42,better,4) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,21) output(51,better,14) output(4,worse,7) output(6,worse,1) output(14,worse,7) output(21,worse,7) output(51,worse,7) output(15,eq,1) output(6,eq,42)
Optimization: 7 12
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,5),1,for(atom(hasOiliness(1))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasPrice(1))),6) preference(1,less(weight)) output(0,better,15) output(0,better,6) output(0,better,1) output(0,better,42) output(0,better,4) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,4) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,1) output(6,better,42) output(6,better,4) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,6) output(15,better,1) output(15,better,42) output(15,better,4) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,4) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,21) output(51,better,14) output(51,better,7)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Progression : 0 [ 2;12] (Error: 5)
Answer: 18
preference(1,(1,2),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(0,better,15) output(0,better,6) output(0,better,1) output(0,better,42) output(0,better,4) output(0,better,51) output(0,better,21) output(0,better,14) output(0,better,7) output(1,better,42) output(1,better,4) output(1,better,51) output(1,better,21) output(1,better,14) output(1,better,7) output(4,better,51) output(4,better,21) output(4,better,14) output(4,better,7) output(6,better,1) output(6,better,42) output(6,better,4) output(6,better,51) output(6,better,21) output(6,better,14) output(6,better,7) output(14,better,7) output(15,better,6) output(15,better,1) output(15,better,42) output(15,better,4) output(15,better,51) output(15,better,21) output(15,better,14) output(15,better,7) output(21,better,14) output(21,better,7) output(42,better,4) output(42,better,51) output(42,better,21) output(42,better,14) output(42,better,7) output(51,better,21) output(51,better,14) output(51,better,7)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.057 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 296.409s (Solving: 294.82s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.591s
Threads      : 4        (Winner: 4)

Choices      : 7677593  (Domain: 682591)
Conflicts    : 6279065  (Analyzed: 6279062)
Restarts     : 5409     (Average: 1160.85 Last: 346335)
Model-Level  : 80.4    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6373238  (Deleted: 6105530)
  Binary     : 1512     (Ratio:   0.02%)
  Ternary    : 6633     (Ratio:   0.10%)
  Conflict   : 6279062  (Average Length:  250.5 Ratio:  98.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 94176    (Average Length:   38.3 Ratio:   1.48%) 
  Distributed: 31418    (Ratio:   0.50% Average LBD: 3.64) 
  Integrated : 94254    (Ratio: 300.00% Unit: 243 Average Jumps: 6.08)
Backjumps    : 6279062  (Average:  1.19 Max: 677 Sum: 7448100)
  Executed   : 6279059  (Average:  1.19 Max: 677 Sum: 7448053 Ratio: 100.00%)
  Bounded    : 3        (Average: 15.67 Max:  44 Sum:     47 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) 
}.
