asprin_vL version 1.0
Reading from stdin
-:309:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:319:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:334:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:415:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:689:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:866:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:995:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1067:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1071:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1071:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1077:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1176:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1202:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1322:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1356:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1378:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:226:1-16: info: no atoms over signature occur in program:
  output/3

-:218:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:219:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:220:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(12,eq,33) output(12,eq,14) output(33,eq,14) preference(1,poset) output(12,eq,5) output(12,eq,21) output(12,eq,52) output(12,eq,60) output(12,eq,49) output(12,eq,44) output(12,eq,23) output(33,eq,5) output(33,eq,21) output(33,eq,52) output(33,eq,60) output(33,eq,49) output(33,eq,44) output(33,eq,23) output(14,eq,5) output(14,eq,21) output(14,eq,52) output(14,eq,60) output(14,eq,49) output(14,eq,44) output(14,eq,23) output(5,eq,21) output(5,eq,52) output(5,eq,60) output(5,eq,49) output(5,eq,44) output(5,eq,23) output(21,eq,52) output(21,eq,60) output(21,eq,49) output(21,eq,44) output(21,eq,23) output(52,eq,60) output(52,eq,49) output(52,eq,44) output(52,eq,23) output(60,eq,49) output(60,eq,44) output(60,eq,23) output(49,eq,44) output(49,eq,23) output(44,eq,23)
Optimization: 45 0
Answer: 2
output(12,eq,33) output(12,eq,14) output(33,eq,14) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(10))),()) preference(1,poset) output(12,better,60) output(33,better,60) output(14,better,60) output(21,better,60) output(21,better,52) output(21,better,44) output(12,better,5) output(12,better,44) output(12,better,23) output(33,better,5) output(33,better,44) output(33,better,23) output(14,better,5) output(14,better,44) output(14,better,23) output(49,better,23) output(49,better,44) output(12,better,52) output(33,better,52) output(14,better,52) output(21,better,23) output(60,worse,49) output(5,worse,21) output(5,worse,49) output(52,worse,49) output(12,eq,21) output(12,eq,49) output(33,eq,21) output(33,eq,49) output(14,eq,21) output(14,eq,49) output(5,eq,52) output(5,eq,60) output(5,eq,44) output(5,eq,23) output(21,eq,49) output(52,eq,60) output(52,eq,44) output(52,eq,23) output(60,eq,44) output(60,eq,23) output(44,eq,23)
Optimization: 24 1
Answer: 3
output(12,eq,33) output(12,eq,14) output(33,eq,14) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,poset) output(60,better,44) output(60,better,23) output(12,better,60) output(33,better,60) output(14,better,60) output(21,better,60) output(21,better,52) output(21,better,44) output(12,better,5) output(12,better,44) output(12,better,23) output(33,better,5) output(33,better,44) output(33,better,23) output(14,better,5) output(14,better,44) output(14,better,23) output(49,better,23) output(49,better,44) output(12,better,52) output(33,better,52) output(14,better,52) output(21,better,23) output(5,worse,60) output(52,worse,60) output(60,worse,49) output(5,worse,21) output(5,worse,49) output(52,worse,49) output(12,eq,21) output(12,eq,49) output(33,eq,21) output(33,eq,49) output(14,eq,21) output(14,eq,49) output(5,eq,52) output(5,eq,44) output(5,eq,23) output(21,eq,49) output(52,eq,44) output(52,eq,23) output(44,eq,23)
Optimization: 22 1
Answer: 4
output(12,eq,33) output(12,eq,14) output(33,eq,14) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(4))),()) preference(1,poset) output(12,better,60) output(33,better,60) output(14,better,60) output(21,better,60) output(52,better,60) output(21,better,52) output(21,better,44) output(12,better,5) output(12,better,21) output(12,better,49) output(12,better,44) output(12,better,23) output(33,better,5) output(33,better,21) output(33,better,49) output(33,better,44) output(33,better,23) output(14,better,5) output(14,better,21) output(14,better,49) output(14,better,44) output(14,better,23) output(52,better,44) output(52,better,23) output(49,better,23) output(49,better,44) output(12,better,52) output(33,better,52) output(14,better,52) output(21,better,23) output(60,worse,49) output(5,worse,21) output(5,worse,52) output(5,worse,49) output(52,worse,49) output(5,eq,60) output(5,eq,44) output(5,eq,23) output(21,eq,49) output(60,eq,44) output(60,eq,23) output(44,eq,23)
Optimization: 15 1
Answer: 5
output(12,eq,33) output(12,eq,14) output(33,eq,14) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasOiliness(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(4))),()) preference(1,poset) output(60,better,44) output(12,better,60) output(33,better,60) output(14,better,60) output(5,better,60) output(21,better,60) output(52,better,60) output(21,better,44) output(12,better,5) output(12,better,21) output(12,better,49) output(12,better,44) output(12,better,23) output(33,better,5) output(33,better,21) output(33,better,49) output(33,better,44) output(33,better,23) output(14,better,5) output(14,better,21) output(14,better,49) output(14,better,44) output(14,better,23) output(52,better,44) output(52,better,23) output(5,better,44) output(5,better,23) output(49,better,23) output(49,better,44) output(12,better,52) output(33,better,52) output(14,better,52) output(21,better,23) output(60,worse,49) output(5,worse,21) output(44,worse,23) output(5,worse,49) output(21,eq,49) output(60,eq,23) output(5,unc,52) output(21,unc,52) output(52,unc,49)
Optimization: 12 2
Answer: 6
output(12,eq,33) output(12,eq,14) output(33,eq,14) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(5))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(4))),()) preference(1,poset) output(12,better,60) output(33,better,60) output(14,better,60) output(5,better,60) output(21,better,60) output(52,better,60) output(21,better,52) output(21,better,44) output(12,better,5) output(12,better,21) output(12,better,49) output(12,better,44) output(12,better,23) output(33,better,5) output(33,better,21) output(33,better,49) output(33,better,44) output(33,better,23) output(14,better,5) output(14,better,21) output(14,better,49) output(14,better,44) output(14,better,23) output(52,better,44) output(52,better,23) output(5,better,52) output(5,better,44) output(5,better,23) output(49,better,23) output(49,better,44) output(12,better,52) output(33,better,52) output(14,better,52) output(21,better,23) output(60,worse,49) output(5,worse,21) output(5,worse,49) output(52,worse,49) output(21,eq,49) output(60,eq,44) output(60,eq,23) output(44,eq,23)
Optimization: 11 2
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.085 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 6+
  Optimum    : unknown
Optimization : 11 2
Calls        : 1
Time         : 297.035s (Solving: 287.44s 1st Model: 1.91s Unsat: 0.00s)
CPU Time     : 1157.928s
Threads      : 4        (Winner: 4)

Choices      : 2674783  (Domain: 877)
Conflicts    : 75059    (Analyzed: 75059)
Restarts     : 90       (Average: 833.99 Last: 14295)
Model-Level  : 245.5   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 11044720 (Deleted: 10964605)
  Binary     : 377      (Ratio:   0.00%)
  Ternary    : 22688    (Ratio:   0.21%)
  Conflict   : 75059    (Average Length: 1215.4 Ratio:   0.68%) 
  Loop       : 10948581 (Average Length:  216.0 Ratio:  99.13%) 
  Other      : 21080    (Average Length:    3.2 Ratio:   0.19%) 
  Distributed: 7036     (Ratio:   0.06% Average LBD: 2.85) 
  Integrated : 21107    (Ratio: 299.99% Unit: 64 Average Jumps: 2175.47)
Backjumps    : 75059    (Average: 26.91 Max: 133401 Sum: 2019827)
  Executed   : 75042    (Average: 26.91 Max: 133401 Sum: 2019751 Ratio: 100.00%)
  Bounded    : 17       (Average:  4.47 Max:  44 Sum:     76 Ratio:   0.00%)

Rules        : 1887239 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 35186   
Bodies       : 1399110 
  Count      : 48      
Equivalences : 31903    (Atom=Atom: 5010 Body=Body: 7686 Other: 19207)
Tight        : No       (SCCs: 46 Non-Hcfs: 0 Nodes: 1339880 Gammas: 0)
Variables    : 1355857  (Eliminated:    0 Frozen: 1342597)
Constraints  : 7840388  (Binary:  82.4% Ternary:   4.3% Other:  13.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(5)) ; 
  atom(hasOiliness(1)) >> atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasMinorGrp(5)) ; 
  atom(hasMinorGrp(5)) >> atom(hasMinorGrp(4)) 
}.
