asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(41,eq,0) output(41,eq,10) output(41,eq,8) output(41,eq,13) output(41,eq,20) output(41,eq,70) output(41,eq,6) output(41,eq,7) output(41,eq,17) output(0,eq,10) output(0,eq,8) output(0,eq,13) output(0,eq,20) output(0,eq,70) output(0,eq,6) output(0,eq,7) output(0,eq,17) output(10,eq,8) output(10,eq,13) output(10,eq,20) output(10,eq,70) output(10,eq,6) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,20) output(8,eq,70) output(8,eq,6) output(8,eq,7) output(8,eq,17) output(13,eq,20) output(13,eq,70) output(13,eq,6) output(13,eq,7) output(13,eq,17) output(20,eq,70) output(20,eq,6) output(20,eq,7) output(20,eq,17) output(70,eq,6) output(70,eq,7) output(70,eq,17) output(6,eq,7) output(6,eq,17) output(7,eq,17)
Optimization: 45 0
Answer: 2
preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(70,better,6) output(70,better,17) output(0,better,8) output(0,better,13) output(0,better,6) output(7,better,17) output(10,better,8) output(10,better,13) output(10,better,6) output(20,better,6) output(20,better,17) output(0,worse,20) output(0,worse,70) output(0,worse,7) output(6,worse,7) output(6,worse,17) output(8,worse,20) output(8,worse,70) output(8,worse,7) output(8,worse,17) output(10,worse,20) output(10,worse,70) output(10,worse,7) output(13,worse,20) output(13,worse,70) output(13,worse,7) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,8) output(41,worse,13) output(41,worse,20) output(41,worse,70) output(41,worse,6) output(41,worse,7) output(41,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(8,eq,13) output(8,eq,6) output(13,eq,6) output(20,eq,70) output(20,eq,7) output(70,eq,7)
Optimization: 34 4
Answer: 3
preference(1,(1,12),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(6,better,7) output(6,better,17) output(8,better,20) output(8,better,70) output(8,better,7) output(8,better,17) output(13,better,20) output(13,better,70) output(13,better,7) output(13,better,17) output(41,better,0) output(41,better,10) output(41,better,20) output(41,better,70) output(41,better,7) output(41,better,17) output(70,worse,6) output(0,worse,8) output(0,worse,13) output(0,worse,6) output(10,worse,8) output(10,worse,13) output(10,worse,6) output(20,worse,6) output(41,eq,8) output(41,eq,13) output(41,eq,6) output(0,eq,10) output(0,eq,20) output(0,eq,70) output(0,eq,7) output(0,eq,17) output(10,eq,20) output(10,eq,70) output(10,eq,7) output(10,eq,17) output(8,eq,13) output(8,eq,6) output(13,eq,6) output(20,eq,70) output(20,eq,7) output(20,eq,17) output(70,eq,7) output(70,eq,17) output(7,eq,17)
Optimization: 29 1
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasPrice(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),1) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(70,better,17) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(8,better,13) output(8,better,20) output(10,better,8) output(10,better,13) output(10,better,20) output(13,better,20) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(0,worse,70) output(8,worse,70) output(8,worse,6) output(8,worse,7) output(8,worse,17) output(10,worse,70) output(10,worse,6) output(10,worse,7) output(10,worse,17) output(13,worse,70) output(13,worse,6) output(13,worse,7) output(13,worse,17) output(20,worse,70) output(20,worse,6) output(20,worse,7) output(20,worse,17) output(41,worse,70) output(41,eq,0) output(41,eq,6) output(41,eq,7) output(41,eq,17) output(0,eq,6) output(0,eq,7) output(0,eq,17) output(6,eq,7) output(6,eq,17) output(7,eq,17)
Optimization: 28 14
Answer: 5
preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(70,better,17) output(0,better,8) output(0,better,13) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,6) output(10,better,7) output(13,better,7) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,7) output(0,worse,20) output(0,worse,70) output(6,worse,17) output(7,worse,17) output(8,worse,20) output(8,worse,70) output(8,worse,17) output(10,worse,20) output(10,worse,70) output(13,worse,20) output(13,worse,70) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,8) output(41,worse,13) output(41,worse,20) output(41,worse,70) output(41,worse,6) output(41,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(8,eq,13) output(8,eq,6) output(13,eq,6) output(20,eq,70)
Optimization: 27 5
Answer: 6
preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasOiliness(1))),3) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),1) preference(1,less(weight)) output(0,better,8) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,70) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,70) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,70) output(41,better,7) output(70,worse,6) output(70,worse,17) output(0,worse,20) output(6,worse,17) output(7,worse,17) output(8,worse,20) output(8,worse,17) output(10,worse,20) output(13,worse,20) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,8) output(41,worse,13) output(41,worse,20) output(41,worse,6) output(41,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(8,eq,13) output(8,eq,6) output(13,eq,6) output(70,eq,7)
Optimization: 24 5
Progression : [ 2;24] (Error: 11)
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),5) preference(1,(1,6),1,for(atom(hasPrice(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),5) preference(1,less(weight)) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,70) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,13) output(41,better,70) output(41,better,7) output(70,worse,6) output(70,worse,17) output(0,worse,20) output(6,worse,17) output(7,worse,17) output(8,worse,20) output(8,worse,17) output(10,worse,20) output(13,worse,20) output(13,worse,70) output(13,worse,6) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,20) output(41,worse,17) output(41,eq,8) output(41,eq,6) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(8,eq,6)
Optimization: 22 13
Progression : [ 3;22] (Error: 6.33333)
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,70) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,8) output(41,better,70) output(41,better,7) output(70,worse,6) output(70,worse,17) output(0,worse,20) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,20) output(8,worse,6) output(8,worse,17) output(10,worse,20) output(13,worse,20) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,13) output(41,worse,20) output(41,worse,17) output(41,eq,6) output(0,eq,10) output(0,eq,17) output(10,eq,17)
Optimization: 21 8
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,70) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,8) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,6) output(70,worse,17) output(0,worse,20) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,20) output(8,worse,17) output(10,worse,20) output(13,worse,20) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,13) output(41,worse,20) output(41,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(8,eq,6)
Optimization: 20 9
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,5),1,for(atom(hasStyle(0))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasOiliness(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(20,better,17) output(41,better,8) output(41,better,70) output(41,better,6) output(41,better,7) output(70,worse,17) output(0,worse,20) output(6,worse,7) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,20) output(8,worse,17) output(10,worse,20) output(13,worse,20) output(13,worse,17) output(41,worse,0) output(41,worse,10) output(41,worse,13) output(41,worse,20) output(41,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17)
Optimization: 19 9
Answer: 11
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,4),1,for(atom(hasStyle(0))),6) preference(1,(1,5),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,12),1,for(atom(hasPrice(0))),2) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,7) output(6,better,7) output(6,better,17) output(8,better,20) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,7) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,7) output(41,better,17) output(70,worse,6) output(70,worse,17) output(0,worse,6) output(7,worse,17) output(8,worse,13) output(8,worse,70) output(8,worse,6) output(8,worse,17) output(10,worse,6) output(13,worse,6) output(13,worse,17) output(20,worse,70) output(20,worse,6) output(20,worse,17) output(41,eq,6) output(0,eq,10) output(0,eq,17) output(10,eq,17)
Optimization: 18 13
Progression : [ 4;18] (Error: 3.5)
Progression : [ 5;18] (Error: 2.6)
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,13),1,for(atom(hasStyle(0))),4) preference(1,less(weight)) output(70,better,6) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,7) output(70,worse,17) output(0,worse,8) output(6,worse,7) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(20,worse,70) output(20,worse,6) output(20,worse,7) output(20,worse,17) output(41,eq,8) output(0,eq,10) output(0,eq,13) output(0,eq,17) output(10,eq,13) output(10,eq,17) output(13,eq,17)
Optimization: 18 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrice(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,8),1,for(atom(hasStyle(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasStyle(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),4) preference(1,(1,14),1,for(atom(hasPrice(0))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,8) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,13) output(6,worse,7) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(20,worse,17) output(41,worse,10) output(41,worse,13) output(0,eq,8) output(0,eq,17) output(8,eq,17) output(20,eq,70)
Optimization: 14 14
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,4),1,for(atom(hasOiliness(1))),2) preference(1,(1,5),1,for(atom(hasPrice(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,11),1,for(atom(hasStyle(0))),2) preference(1,(1,12),1,for(atom(hasStyle(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(70,better,17) output(0,better,10) output(0,better,13) output(0,better,20) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,13) output(10,better,20) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(0,worse,8) output(0,worse,70) output(6,worse,17) output(7,worse,17) output(10,worse,8) output(10,worse,70) output(10,worse,17) output(13,worse,70) output(13,worse,17) output(20,worse,70) output(20,worse,17) output(41,eq,8) output(0,eq,17)
Optimization: 13 14
Answer: 15
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasStyle(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),6) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,20) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,13) output(8,worse,70) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,70) output(20,worse,17) output(0,eq,17) output(10,eq,13)
Optimization: 12 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,3),1,for(atom(hasStyle(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),4) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(13,worse,17) output(20,worse,70) output(20,worse,17) output(0,eq,10) output(0,eq,17) output(10,eq,17) output(8,eq,13)
Optimization: 11 13
Progression : [ 6;11] (Error: 0.833333)
Progression : [ 7;11] (Error: 0.571429)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasStyle(0))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17) output(8,eq,13) output(20,eq,70)
Optimization: 10 13
Progression : [ 8;10] (Error: 0.25)
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17) output(20,eq,70)
Optimization: 9 13
Answer: 19
preference(1,(1,1),1,for(atom(hasStyle(0))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,10),1,for(atom(hasStyle(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),2) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 13
Progression : 8 [ 1;13] (Error: 12)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasStyle(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),3) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 12
Progression : 8 [ 2;12] (Error: 5)
Answer: 21
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(6,worse,17) output(7,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 11
Answer: 22
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(0))),4) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),2) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,10) output(0,better,8) output(0,better,13) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(6,worse,17) output(7,worse,17) output(8,worse,17) output(10,worse,17) output(13,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 10
Progression : 8 [ 3;10] (Error: 2.33333)
Answer: 23
preference(1,(1,2),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasPrice(1))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),5) preference(1,less(weight)) output(70,better,6) output(70,better,7) output(0,better,20) output(0,better,70) output(0,better,6) output(0,better,7) output(6,better,7) output(8,better,13) output(8,better,20) output(8,better,70) output(8,better,6) output(8,better,7) output(8,better,17) output(10,better,8) output(10,better,13) output(10,better,20) output(10,better,70) output(10,better,6) output(10,better,7) output(10,better,17) output(13,better,20) output(13,better,70) output(13,better,6) output(13,better,7) output(13,better,17) output(20,better,70) output(20,better,6) output(20,better,7) output(41,better,0) output(41,better,10) output(41,better,8) output(41,better,13) output(41,better,20) output(41,better,70) output(41,better,6) output(41,better,7) output(41,better,17) output(70,worse,17) output(0,worse,10) output(0,worse,8) output(0,worse,13) output(6,worse,17) output(7,worse,17) output(20,worse,17) output(0,eq,17)
Optimization: 8 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.051 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 8 9
Bounds       : 8 [3;9]
Calls        : 1
Time         : 296.415s (Solving: 294.82s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.566s
Threads      : 4        (Winner: 4)

Choices      : 12895714 (Domain: 702348)
Conflicts    : 7636212  (Analyzed: 7636202)
Restarts     : 6506     (Average: 1173.72 Last: 93228)
Model-Level  : 193.3   
Problems     : 16       (Average Length: 0.25 Splits: 0)
Lemmas       : 7678492  (Deleted: 7348203)
  Binary     : 493      (Ratio:   0.01%)
  Ternary    : 2953     (Ratio:   0.04%)
  Conflict   : 7636202  (Average Length:  254.7 Ratio:  99.45%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 42290    (Average Length:   29.8 Ratio:   0.55%) 
  Distributed: 14132    (Ratio:   0.19% Average LBD: 3.69) 
  Integrated : 42396    (Ratio: 300.00% Unit: 164 Average Jumps: 9.26)
Backjumps    : 7636202  (Average:  1.58 Max: 448 Sum: 12085785)
  Executed   : 7636185  (Average:  1.58 Max: 448 Sum: 12085553 Ratio: 100.00%)
  Bounded    : 17       (Average: 13.65 Max:  42 Sum:    232 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8158    
  Sum        : 87      
  Count      : 14      
Equivalences : 8234     (Atom=Atom: 466 Body=Body: 200 Other: 7568)
Tight        : Yes
Variables    : 6982     (Eliminated:    0 Frozen: 4322)
Constraints  : 177957   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasStyle(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasStyle(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasStyle(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasStyle(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(2)) 
}.
