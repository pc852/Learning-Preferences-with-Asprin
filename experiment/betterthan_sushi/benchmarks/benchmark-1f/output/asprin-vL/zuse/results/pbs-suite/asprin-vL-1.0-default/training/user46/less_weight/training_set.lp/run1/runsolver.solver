asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,27) output(4,eq,11) output(4,eq,35) output(4,eq,51) output(4,eq,66) output(4,eq,17) output(4,eq,50) output(4,eq,6) output(4,eq,2) output(27,eq,11) output(27,eq,35) output(27,eq,51) output(27,eq,66) output(27,eq,17) output(27,eq,50) output(27,eq,6) output(27,eq,2) output(11,eq,35) output(11,eq,51) output(11,eq,66) output(11,eq,17) output(11,eq,50) output(11,eq,6) output(11,eq,2) output(35,eq,51) output(35,eq,66) output(35,eq,17) output(35,eq,50) output(35,eq,6) output(35,eq,2) output(51,eq,66) output(51,eq,17) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,17) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(17,eq,50) output(17,eq,6) output(17,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),3) preference(1,less(weight)) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,50) output(35,better,6) output(6,worse,2) output(50,worse,6) output(50,worse,2) output(51,worse,17) output(51,worse,50) output(51,worse,6) output(51,worse,2) output(66,worse,17) output(66,worse,50) output(66,worse,6) output(66,worse,2) output(4,eq,27) output(4,eq,11) output(27,eq,11) output(35,eq,17) output(35,eq,2) output(51,eq,66) output(17,eq,2)
Optimization: 18 9
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasPrice(0))),7) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,12),1,for(atom(hasPrice(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),7) preference(1,less(weight)) output(4,better,11) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(11,worse,35) output(51,worse,17) output(66,worse,17) output(4,eq,27) output(4,eq,35) output(27,eq,35) output(51,eq,66) output(51,eq,50) output(51,eq,6) output(51,eq,2) output(66,eq,50) output(66,eq,6) output(66,eq,2) output(50,eq,6) output(50,eq,2) output(6,eq,2)
Optimization: 16 13
Answer: 4
preference(1,(1,2),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,less(weight)) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(17,better,50) output(17,better,6) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(51,better,17) output(51,better,50) output(51,better,6) output(66,better,17) output(66,better,50) output(66,better,6) output(4,worse,27) output(4,worse,2) output(6,worse,2) output(11,worse,2) output(17,worse,2) output(35,worse,2) output(50,worse,2) output(51,worse,2) output(66,worse,2) output(4,eq,11) output(4,eq,35) output(27,eq,2) output(11,eq,35) output(51,eq,66) output(50,eq,6)
Optimization: 15 6
Answer: 5
preference(1,(1,2),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,7),1,for(atom(hasOiliness(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,14),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(4,better,27) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,35) output(27,better,50) output(27,better,2) output(35,better,50) output(35,better,2) output(50,better,2) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,11) output(27,worse,11) output(27,worse,51) output(27,worse,66) output(27,worse,17) output(35,worse,51) output(35,worse,66) output(35,worse,17) output(35,worse,6) output(50,worse,6) output(27,eq,6) output(51,eq,66) output(51,eq,17) output(66,eq,17)
Optimization: 14 8
Answer: 6
preference(1,(1,1),1,for(atom(hasOiliness(0))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasStyle(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(51,better,17) output(51,better,50) output(51,better,6) output(66,better,17) output(66,better,50) output(66,better,6) output(4,worse,11) output(6,worse,2) output(17,worse,6) output(17,worse,2) output(27,worse,11) output(50,worse,6) output(50,worse,2) output(51,worse,2) output(66,worse,2) output(4,eq,27) output(35,eq,2) output(51,eq,66)
Optimization: 12 7
Answer: 7
preference(1,(1,2),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasPrice(0))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(4,better,27) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,2) output(27,better,35) output(27,better,17) output(27,better,50) output(27,better,2) output(35,better,17) output(35,better,50) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,11) output(17,worse,6) output(27,worse,11) output(27,worse,51) output(27,worse,66) output(35,worse,51) output(35,worse,66) output(35,worse,6) output(50,worse,6) output(27,eq,6) output(51,eq,66)
Optimization: 11 9
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),6) preference(1,(1,5),1,for(atom(hasOiliness(0))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),3) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,2) output(50,better,2) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,50) output(66,better,6) output(66,better,2) output(35,worse,51) output(35,worse,66) output(35,worse,17) output(27,eq,11) output(35,eq,50) output(35,eq,6) output(51,eq,66) output(51,eq,17) output(66,eq,17) output(50,eq,6)
Optimization: 10 12
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(1))),2) preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,11) output(27,worse,11) output(4,eq,27) output(4,eq,35) output(27,eq,35) output(51,eq,66) output(51,eq,17) output(66,eq,17) output(50,eq,6)
Optimization: 9 9
Answer: 10
preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,less(weight)) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,11) output(27,worse,11) output(4,eq,27) output(4,eq,35) output(27,eq,35) output(51,eq,66) output(50,eq,6)
Optimization: 7 9
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(11,worse,35) output(27,worse,35) output(4,eq,35) output(27,eq,11) output(51,eq,66) output(50,eq,6)
Optimization: 6 12
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,5),1,for(atom(hasOiliness(1))),2) preference(1,(1,6),1,for(atom(hasStyle(1))),8) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),4) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(11,worse,35) output(27,worse,35) output(4,eq,35) output(51,eq,66) output(50,eq,6)
Optimization: 5 12
Answer: 13
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),2) preference(1,less(weight)) output(4,better,11) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,6) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(4,worse,35) output(11,worse,35) output(27,worse,35) output(4,eq,27) output(51,eq,66)
Optimization: 5 10
Answer: 14
preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasOiliness(1))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,10),1,for(atom(hasStyle(1))),1) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(50,worse,6) output(4,eq,27) output(51,eq,66) output(50,eq,2)
Optimization: 4 12
Answer: 15
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasOiliness(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,7),1,for(atom(hasPrice(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),6) preference(1,less(weight)) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,6) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(4,eq,27) output(51,eq,66) output(17,eq,50) output(6,eq,2)
Optimization: 4 11
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasPrice(0))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),7) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(50,worse,6) output(50,worse,2) output(51,eq,66)
Optimization: 3 10
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,7),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(50,worse,6) output(51,eq,66)
Optimization: 2 12
Progression : [2;2] (Error: 0)
Progression : 2 [ 1;12] (Error: 11)
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasPrice(1))),4) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(50,worse,6) output(51,eq,66)
Optimization: 2 8
Progression : 2 [2;8] (Error: 3)
Answer: 19
preference(1,(1,2),1,for(atom(hasPrice(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,13),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(50,worse,6) output(51,eq,66)
Optimization: 2 7
Progression : 2 [3;7] (Error: 1.33333)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(4,better,27) output(4,better,11) output(4,better,35) output(4,better,51) output(4,better,66) output(4,better,17) output(4,better,50) output(4,better,6) output(4,better,2) output(6,better,2) output(11,better,35) output(11,better,51) output(11,better,66) output(11,better,17) output(11,better,50) output(11,better,6) output(11,better,2) output(17,better,50) output(17,better,6) output(17,better,2) output(27,better,11) output(27,better,35) output(27,better,51) output(27,better,66) output(27,better,17) output(27,better,50) output(27,better,6) output(27,better,2) output(35,better,51) output(35,better,66) output(35,better,17) output(35,better,50) output(35,better,6) output(35,better,2) output(50,better,2) output(51,better,17) output(51,better,50) output(51,better,6) output(51,better,2) output(66,better,17) output(66,better,50) output(66,better,6) output(66,better,2) output(50,worse,6) output(51,eq,66)
Optimization: 2 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.027 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 2 6
Bounds       : 2 [3;6]
Calls        : 1
Time         : 296.311s (Solving: 294.71s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.290s
Threads      : 4        (Winner: 4)

Choices      : 8234203  (Domain: 830232)
Conflicts    : 7353689  (Analyzed: 7353683)
Restarts     : 5750     (Average: 1278.90 Last: 551767)
Model-Level  : 39.0    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7459224  (Deleted: 7143769)
  Binary     : 1015     (Ratio:   0.01%)
  Ternary    : 5761     (Ratio:   0.08%)
  Conflict   : 7353683  (Average Length:  190.9 Ratio:  98.59%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 105541   (Average Length:  109.7 Ratio:   1.41%) 
  Distributed: 35224    (Ratio:   0.48% Average LBD: 3.68) 
  Integrated : 105672   (Ratio: 300.00% Unit: 269 Average Jumps: 3.57)
Backjumps    : 7353683  (Average:  1.11 Max:  45 Sum: 8161296)
  Executed   : 7353679  (Average:  1.11 Max:  45 Sum: 8161263 Ratio: 100.00%)
  Bounded    : 4        (Average:  8.25 Max:  27 Sum:     33 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8144    
  Sum        : 73      
  Count      : 14      
Equivalences : 8213     (Atom=Atom: 501 Body=Body: 235 Other: 7477)
Tight        : Yes
Variables    : 6961     (Eliminated:    0 Frozen: 4301)
Constraints  : 177922   (Binary:  97.3% Ternary:   1.5% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(8)) ; 
  8 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasPrice(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasStyle(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.
