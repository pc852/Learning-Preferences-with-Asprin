asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,36) output(19,eq,11) output(19,eq,13) output(19,eq,6) output(19,eq,22) output(19,eq,64) output(19,eq,10) output(19,eq,1) output(19,eq,17) output(36,eq,11) output(36,eq,13) output(36,eq,6) output(36,eq,22) output(36,eq,64) output(36,eq,10) output(36,eq,1) output(36,eq,17) output(11,eq,13) output(11,eq,6) output(11,eq,22) output(11,eq,64) output(11,eq,10) output(11,eq,1) output(11,eq,17) output(13,eq,6) output(13,eq,22) output(13,eq,64) output(13,eq,10) output(13,eq,1) output(13,eq,17) output(6,eq,22) output(6,eq,64) output(6,eq,10) output(6,eq,1) output(6,eq,17) output(22,eq,64) output(22,eq,10) output(22,eq,1) output(22,eq,17) output(64,eq,10) output(64,eq,1) output(64,eq,17) output(10,eq,1) output(10,eq,17) output(1,eq,17)
Optimization: 45 0
Answer: 2
preference(1,(1,4),1,for(atom(hasStyle(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),3) preference(1,(1,9),1,for(atom(hasPrice(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),3) preference(1,less(weight)) output(6,better,64) output(13,better,64) output(19,better,36) output(19,better,11) output(19,better,64) output(22,better,64) output(11,worse,13) output(11,worse,6) output(11,worse,22) output(11,worse,64) output(11,worse,10) output(11,worse,1) output(11,worse,17) output(36,worse,13) output(36,worse,6) output(36,worse,22) output(36,worse,64) output(36,worse,10) output(36,worse,1) output(36,worse,17) output(64,worse,10) output(64,worse,1) output(64,worse,17) output(19,eq,13) output(19,eq,6) output(19,eq,22) output(19,eq,10) output(19,eq,1) output(19,eq,17) output(36,eq,11) output(13,eq,6) output(13,eq,22) output(13,eq,10) output(13,eq,1) output(13,eq,17) output(6,eq,22) output(6,eq,10) output(6,eq,1) output(6,eq,17) output(22,eq,10) output(22,eq,1) output(22,eq,17) output(10,eq,1) output(10,eq,17) output(1,eq,17)
Optimization: 39 7
Answer: 3
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,17) output(10,better,17) output(11,better,22) output(11,better,17) output(13,better,22) output(13,better,17) output(19,better,22) output(19,better,17) output(36,better,22) output(36,better,17) output(64,better,17) output(22,worse,64) output(22,worse,10) output(22,worse,1) output(22,worse,17) output(19,eq,36) output(19,eq,11) output(19,eq,13) output(19,eq,6) output(19,eq,64) output(19,eq,10) output(19,eq,1) output(36,eq,11) output(36,eq,13) output(36,eq,6) output(36,eq,64) output(36,eq,10) output(36,eq,1) output(11,eq,13) output(11,eq,6) output(11,eq,64) output(11,eq,10) output(11,eq,1) output(13,eq,6) output(13,eq,64) output(13,eq,10) output(13,eq,1) output(6,eq,64) output(6,eq,10) output(6,eq,1) output(64,eq,10) output(64,eq,1) output(10,eq,1)
Optimization: 32 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,17) output(10,better,17) output(11,better,22) output(11,better,64) output(11,better,17) output(13,better,22) output(13,better,64) output(13,better,17) output(19,better,22) output(19,better,64) output(19,better,17) output(36,better,22) output(36,better,64) output(36,better,17) output(22,worse,10) output(22,worse,1) output(22,worse,17) output(64,worse,10) output(64,worse,1) output(64,worse,17) output(19,eq,36) output(19,eq,11) output(19,eq,13) output(19,eq,6) output(19,eq,10) output(19,eq,1) output(36,eq,11) output(36,eq,13) output(36,eq,6) output(36,eq,10) output(36,eq,1) output(11,eq,13) output(11,eq,6) output(11,eq,10) output(11,eq,1) output(13,eq,6) output(13,eq,10) output(13,eq,1) output(6,eq,10) output(6,eq,1) output(22,eq,64) output(10,eq,1)
Optimization: 28 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,17) output(10,better,17) output(11,better,22) output(11,better,64) output(11,better,17) output(13,better,22) output(13,better,64) output(13,better,17) output(19,better,22) output(19,better,64) output(19,better,17) output(22,better,64) output(36,better,22) output(36,better,64) output(36,better,17) output(22,worse,10) output(22,worse,1) output(22,worse,17) output(64,worse,10) output(64,worse,1) output(64,worse,17) output(19,eq,36) output(19,eq,11) output(19,eq,13) output(19,eq,6) output(19,eq,10) output(19,eq,1) output(36,eq,11) output(36,eq,13) output(36,eq,6) output(36,eq,10) output(36,eq,1) output(11,eq,13) output(11,eq,6) output(11,eq,10) output(11,eq,1) output(13,eq,6) output(13,eq,10) output(13,eq,1) output(6,eq,10) output(6,eq,1) output(10,eq,1)
Optimization: 27 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrice(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),1) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,17) output(10,better,17) output(11,better,13) output(11,better,22) output(11,better,64) output(11,better,17) output(13,better,64) output(19,better,13) output(19,better,22) output(19,better,64) output(19,better,17) output(22,better,64) output(36,better,13) output(36,better,22) output(36,better,64) output(36,better,17) output(13,worse,6) output(13,worse,22) output(13,worse,10) output(13,worse,1) output(13,worse,17) output(22,worse,10) output(22,worse,1) output(22,worse,17) output(64,worse,10) output(64,worse,1) output(64,worse,17) output(19,eq,36) output(19,eq,11) output(19,eq,6) output(19,eq,10) output(19,eq,1) output(36,eq,11) output(36,eq,6) output(36,eq,10) output(36,eq,1) output(11,eq,6) output(11,eq,10) output(11,eq,1) output(6,eq,10) output(6,eq,1) output(10,eq,1)
Optimization: 26 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),6) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(10,better,1) output(10,better,17) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,1) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,6) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,64) output(22,better,10) output(22,better,1) output(22,better,17) output(36,better,11) output(36,better,13) output(36,better,6) output(36,better,22) output(36,better,64) output(36,better,10) output(36,better,1) output(36,better,17) output(64,better,10) output(64,better,1) output(64,better,17)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 8
preference(1,(1,2),1,for(atom(hasOiliness(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,14),1,for(atom(hasOiliness(1))),7) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(10,better,1) output(10,better,17) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,1) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,6) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,64) output(22,better,10) output(22,better,1) output(22,better,17) output(36,better,11) output(36,better,13) output(36,better,6) output(36,better,22) output(36,better,64) output(36,better,10) output(36,better,1) output(36,better,17) output(64,better,10) output(64,better,1) output(64,better,17)
Optimization: 0 12
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,2),1,for(atom(hasPrice(0))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(1,better,17) output(6,better,22) output(6,better,64) output(6,better,10) output(6,better,1) output(6,better,17) output(10,better,1) output(10,better,17) output(11,better,13) output(11,better,6) output(11,better,22) output(11,better,64) output(11,better,10) output(11,better,1) output(11,better,17) output(13,better,6) output(13,better,22) output(13,better,64) output(13,better,10) output(13,better,1) output(13,better,17) output(19,better,36) output(19,better,11) output(19,better,13) output(19,better,6) output(19,better,22) output(19,better,64) output(19,better,10) output(19,better,1) output(19,better,17) output(22,better,64) output(22,better,10) output(22,better,1) output(22,better,17) output(36,better,11) output(36,better,13) output(36,better,6) output(36,better,22) output(36,better,64) output(36,better,10) output(36,better,1) output(36,better,17) output(64,better,10) output(64,better,1) output(64,better,17)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
Progression : 0 [ 4;10] (Error: 1.5)
Progression : 0 [ 5;10] (Error: 1)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.031 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 296.394s (Solving: 294.81s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.441s
Threads      : 4        (Winner: 4)

Choices      : 7940017  (Domain: 724490)
Conflicts    : 6663934  (Analyzed: 6663929)
Restarts     : 5391     (Average: 1236.12 Last: 65538)
Model-Level  : 52.0    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 6734918  (Deleted: 6492367)
  Binary     : 288      (Ratio:   0.00%)
  Ternary    : 4354     (Ratio:   0.06%)
  Conflict   : 6663929  (Average Length:  188.3 Ratio:  98.95%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 70989    (Average Length:   49.5 Ratio:   1.05%) 
  Distributed: 23819    (Ratio:   0.36% Average LBD: 3.69) 
  Integrated : 71457    (Ratio: 300.00% Unit: 1210 Average Jumps: 12.32)
Backjumps    : 6663929  (Average:  1.17 Max: 296 Sum: 7802649)
  Executed   : 6663897  (Average:  1.17 Max: 296 Sum: 7802574 Ratio: 100.00%)
  Bounded    : 32       (Average:  2.34 Max:  44 Sum:     75 Ratio:   0.00%)

Rules        : 175902  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9893    
Bodies       : 8161    
  Sum        : 90      
  Count      : 14      
Equivalences : 4773     (Atom=Atom: 463 Body=Body: 194 Other: 4116)
Tight        : Yes
Variables    : 6995     (Eliminated:    0 Frozen: 4335)
Constraints  : 178535   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.
