asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(48,eq,11) output(48,eq,5) output(48,eq,63) output(48,eq,15) output(48,eq,45) output(48,eq,9) output(48,eq,23) output(48,eq,40) output(48,eq,7) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,23) output(11,eq,40) output(11,eq,7) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,23) output(5,eq,40) output(5,eq,7) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,23) output(63,eq,40) output(63,eq,7) output(15,eq,45) output(15,eq,9) output(15,eq,23) output(15,eq,40) output(15,eq,7) output(45,eq,9) output(45,eq,23) output(45,eq,40) output(45,eq,7) output(9,eq,23) output(9,eq,40) output(9,eq,7) output(23,eq,40) output(23,eq,7) output(40,eq,7)
Optimization: 45 0
Answer: 2
preference(1,(1,6),1,for(atom(hasMinorGrp(9))),8) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,7) output(9,better,7) output(11,better,7) output(15,better,7) output(23,better,7) output(45,better,7) output(63,better,7) output(48,eq,11) output(48,eq,5) output(48,eq,63) output(48,eq,15) output(48,eq,45) output(48,eq,9) output(48,eq,23) output(48,eq,40) output(11,eq,5) output(11,eq,63) output(11,eq,15) output(11,eq,45) output(11,eq,9) output(11,eq,23) output(11,eq,40) output(5,eq,63) output(5,eq,15) output(5,eq,45) output(5,eq,9) output(5,eq,23) output(5,eq,40) output(63,eq,15) output(63,eq,45) output(63,eq,9) output(63,eq,23) output(63,eq,40) output(15,eq,45) output(15,eq,9) output(15,eq,23) output(15,eq,40) output(45,eq,9) output(45,eq,23) output(45,eq,40) output(9,eq,23) output(9,eq,40) output(23,eq,40)
Optimization: 36 1
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,3),1,for(atom(hasOiliness(1))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),1) preference(1,(1,8),1,for(atom(hasStyle(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(5,better,63) output(5,better,15) output(11,better,5) output(11,better,63) output(11,better,15) output(63,better,15) output(5,worse,45) output(5,worse,9) output(5,worse,23) output(5,worse,40) output(5,worse,7) output(11,worse,45) output(11,worse,9) output(11,worse,23) output(11,worse,40) output(11,worse,7) output(15,worse,45) output(15,worse,9) output(15,worse,23) output(15,worse,40) output(15,worse,7) output(63,worse,45) output(63,worse,9) output(63,worse,23) output(63,worse,40) output(63,worse,7) output(48,eq,45) output(48,eq,9) output(48,eq,23) output(48,eq,40) output(48,eq,7) output(45,eq,9) output(45,eq,23) output(45,eq,40) output(45,eq,7) output(9,eq,23) output(9,eq,40) output(9,eq,7) output(23,eq,40) output(23,eq,7) output(40,eq,7)
Optimization: 35 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrice(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,3),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,7) output(11,better,9) output(15,better,9) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,7) output(9,worse,23) output(9,worse,40) output(9,worse,7) output(11,worse,5) output(11,worse,63) output(11,worse,15) output(11,worse,45) output(11,worse,23) output(11,worse,40) output(11,worse,7) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,5) output(48,eq,45) output(48,eq,40) output(5,eq,45) output(5,eq,40) output(15,eq,23) output(15,eq,7) output(45,eq,40) output(23,eq,7)
Optimization: 24 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(0))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,3),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasStyle(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),6) preference(1,(1,7),1,for(atom(hasOiliness(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,7) output(11,better,9) output(15,better,9) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,9) output(63,better,23) output(63,better,7) output(9,worse,23) output(9,worse,40) output(9,worse,7) output(11,worse,5) output(11,worse,63) output(11,worse,15) output(11,worse,45) output(11,worse,23) output(11,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,5) output(48,eq,45) output(48,eq,40) output(11,eq,7) output(5,eq,45) output(5,eq,40) output(15,eq,23) output(45,eq,40)
Optimization: 22 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrice(0))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,7),1,for(atom(hasStyle(0))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasStyle(1))),8) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,7) output(15,better,9) output(45,better,9) output(63,better,15) output(63,better,9) output(5,worse,45) output(5,worse,23) output(5,worse,40) output(5,worse,7) output(9,worse,23) output(9,worse,40) output(9,worse,7) output(11,worse,40) output(15,worse,45) output(15,worse,23) output(15,worse,40) output(15,worse,7) output(23,worse,40) output(45,worse,40) output(63,worse,45) output(63,worse,23) output(63,worse,40) output(63,worse,7) output(48,eq,40) output(45,eq,23) output(45,eq,7) output(23,eq,7)
Optimization: 22 12
Progression : [ 2;22] (Error: 10)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),6) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,9) output(5,better,23) output(9,better,23) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(5,worse,63) output(5,worse,15) output(5,worse,45) output(5,worse,40) output(9,worse,40) output(9,worse,7) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(23,worse,7) output(63,worse,15) output(63,worse,45) output(63,worse,40) output(48,eq,45) output(48,eq,40) output(5,eq,7) output(45,eq,40)
Optimization: 18 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasOiliness(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),1) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,23) output(63,better,7) output(48,worse,11) output(5,worse,45) output(5,worse,40) output(9,worse,40) output(15,worse,45) output(15,worse,9) output(15,worse,40) output(23,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,45) output(48,eq,40) output(63,eq,9) output(15,eq,23) output(15,eq,7) output(45,eq,40) output(23,eq,7)
Optimization: 17 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,23) output(15,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,23) output(63,better,7) output(48,worse,11) output(5,worse,45) output(5,worse,40) output(9,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,45) output(48,eq,40) output(63,eq,15) output(63,eq,9) output(15,eq,9) output(45,eq,40) output(23,eq,7)
Optimization: 16 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,5),1,for(atom(hasStyle(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasOiliness(0))),3) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(5,worse,45) output(5,worse,40) output(9,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(23,worse,7) output(63,worse,45) output(63,worse,40) output(48,eq,45) output(48,eq,40) output(63,eq,15) output(45,eq,40) output(9,eq,7)
Optimization: 15 12
Answer: 11
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasStyle(1))),3) preference(1,less(weight)) output(40,better,7) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,9) output(15,better,23) output(15,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(5,worse,40) output(9,worse,40) output(15,worse,45) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,45) output(63,worse,40) output(48,eq,40) output(5,eq,45) output(63,eq,15) output(23,eq,7)
Optimization: 13 8
Progression : [ 3;13] (Error: 3.33333)
Progression : [ 4;13] (Error: 2.25)
Answer: 12
preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),3) preference(1,less(weight)) output(40,better,7) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(9,worse,23) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(48,eq,40) output(5,eq,63) output(45,eq,23)
Optimization: 11 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,6),1,for(atom(hasOiliness(0))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasPrice(0))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,14),1,for(atom(hasStyle(0))),6) preference(1,less(weight)) output(40,better,7) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(9,worse,40) output(23,worse,40) output(48,eq,45) output(48,eq,40) output(5,eq,63) output(45,eq,40)
Optimization: 10 14
Answer: 14
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,9),1,for(atom(hasOiliness(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,11),1,for(atom(hasPrice(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,14),1,for(atom(hasStyle(0))),2) preference(1,less(weight)) output(40,better,7) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(9,worse,40) output(23,worse,40) output(48,eq,45) output(48,eq,40) output(45,eq,40)
Optimization: 9 14
Progression : [5;9] (Error: 0.8)
Progression : [6;9] (Error: 0.5)
Answer: 15
preference(1,(1,1),1,for(atom(hasOiliness(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasStyle(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,10),1,for(atom(hasOiliness(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(5,worse,40) output(9,worse,40) output(11,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,40) output(48,eq,40)
Optimization: 8 12
Progression : [7;8] (Error: 0.142857)
Progression : [8;8] (Error: 0)
Progression : 8 [ 1;12] (Error: 11)
Progression : 8 [ 2;12] (Error: 5)
Answer: 16
preference(1,(1,1),1,for(atom(hasStyle(1))),1) preference(1,(1,2),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasOiliness(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasStyle(0))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(40,better,7) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,40) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,40) output(15,better,7) output(23,better,40) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,40) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,40) output(63,better,7) output(48,worse,11) output(48,worse,5) output(48,worse,63) output(48,worse,15) output(48,worse,45) output(48,worse,9) output(48,worse,23) output(48,eq,40)
Optimization: 8 11
Answer: 17
preference(1,(1,2),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasStyle(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),4) preference(1,less(weight)) output(40,better,7) output(48,better,11) output(48,better,5) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(5,worse,40) output(9,worse,40) output(11,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,40) output(48,eq,40)
Optimization: 8 9
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(40,better,7) output(48,better,63) output(48,better,15) output(48,better,45) output(48,better,9) output(48,better,23) output(48,better,7) output(5,better,63) output(5,better,15) output(5,better,45) output(5,better,9) output(5,better,23) output(5,better,40) output(5,better,7) output(9,better,23) output(9,better,7) output(11,better,5) output(11,better,63) output(11,better,15) output(11,better,45) output(11,better,9) output(11,better,23) output(11,better,40) output(11,better,7) output(15,better,45) output(15,better,9) output(15,better,23) output(15,better,7) output(23,better,7) output(45,better,9) output(45,better,23) output(45,better,7) output(63,better,15) output(63,better,45) output(63,better,9) output(63,better,23) output(63,better,7) output(48,worse,11) output(48,worse,5) output(9,worse,40) output(15,worse,40) output(23,worse,40) output(45,worse,40) output(63,worse,40) output(48,eq,40)
Optimization: 8 8
Progression : 8 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.062 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 8 8
Bounds       : 8 [3;8]
Calls        : 1
Time         : 296.420s (Solving: 294.85s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.559s
Threads      : 4        (Winner: 4)

Choices      : 8450915  (Domain: 657539)
Conflicts    : 6860648  (Analyzed: 6860638)
Restarts     : 6372     (Average: 1076.69 Last: 417712)
Model-Level  : 54.2    
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 6914973  (Deleted: 6587647)
  Binary     : 1676     (Ratio:   0.02%)
  Ternary    : 5122     (Ratio:   0.07%)
  Conflict   : 6860638  (Average Length:  242.7 Ratio:  99.21%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 54335    (Average Length:   31.1 Ratio:   0.79%) 
  Distributed: 18236    (Ratio:   0.27% Average LBD: 3.63) 
  Integrated : 54708    (Ratio: 300.00% Unit: 109 Average Jumps: 9.58)
Backjumps    : 6860638  (Average:  1.19 Max: 345 Sum: 8188579)
  Executed   : 6860625  (Average:  1.19 Max: 345 Sum: 8188390 Ratio: 100.00%)
  Bounded    : 13       (Average: 14.54 Max:  40 Sum:    189 Ratio:   0.00%)

Rules        : 175339  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9885    
Bodies       : 8158    
  Sum        : 87      
  Count      : 14      
Equivalences : 8234     (Atom=Atom: 466 Body=Body: 200 Other: 7568)
Tight        : Yes
Variables    : 6982     (Eliminated:    0 Frozen: 4322)
Constraints  : 177957   (Binary:  97.3% Ternary:   1.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  4 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.
