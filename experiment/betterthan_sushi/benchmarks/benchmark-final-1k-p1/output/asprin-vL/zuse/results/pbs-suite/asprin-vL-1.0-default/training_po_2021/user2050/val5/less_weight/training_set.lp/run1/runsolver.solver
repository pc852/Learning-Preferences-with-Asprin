asprin_vL version 1.0
Reading from stdin
-:242:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:252:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:267:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:348:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:609:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:622:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:799:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:928:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1000:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1004:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1004:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1010:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1109:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1135:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1255:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1289:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1311:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:159:1-16: info: no atoms over signature occur in program:
  output/3

-:151:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:152:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,(1,1),1,for(neg(atom(isUrchin(1)))),1) preference(1,(1,2),1,for(neg(atom(isOctopus(1)))),1) preference(1,(1,3),1,for(neg(atom(isMaguro(1)))),1) preference(1,(1,4),1,for(neg(atom(isRoe(1)))),1) preference(1,(1,5),1,for(neg(atom(isTamago(1)))),1) preference(1,(1,6),1,for(neg(atom(isShrimp(1)))),1) preference(1,(1,7),1,for(neg(atom(isFattyFish(1)))),1) preference(1,(1,8),1,for(neg(atom(isChewy(1)))),1) preference(1,(1,9),1,for(neg(atom(isButtery(1)))),1) preference(1,(1,10),1,for(neg(atom(isCreamy(1)))),1) preference(1,less(weight)) output(1,eq,7) output(1,eq,2) output(1,eq,3) output(1,eq,0) output(1,eq,8) output(1,eq,4) output(1,eq,6) output(1,eq,9) output(7,eq,2) output(7,eq,3) output(7,eq,0) output(7,eq,8) output(7,eq,4) output(7,eq,6) output(7,eq,9) output(2,eq,3) output(2,eq,0) output(2,eq,8) output(2,eq,4) output(2,eq,6) output(2,eq,9) output(3,eq,0) output(3,eq,8) output(3,eq,4) output(3,eq,6) output(3,eq,9) output(0,eq,8) output(0,eq,4) output(0,eq,6) output(0,eq,9) output(8,eq,4) output(8,eq,6) output(8,eq,9) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 36 10
Answer: 2
preference(1,(1,10),1,for(atom(isTamago(1))),15) preference(1,less(weight)) output(1,better,7) output(7,worse,2) output(7,worse,3) output(7,worse,0) output(7,worse,8) output(7,worse,4) output(7,worse,6) output(7,worse,9) output(1,eq,2) output(1,eq,3) output(1,eq,0) output(1,eq,8) output(1,eq,4) output(1,eq,6) output(1,eq,9) output(2,eq,3) output(2,eq,0) output(2,eq,8) output(2,eq,4) output(2,eq,6) output(2,eq,9) output(3,eq,0) output(3,eq,8) output(3,eq,4) output(3,eq,6) output(3,eq,9) output(0,eq,8) output(0,eq,4) output(0,eq,6) output(0,eq,9) output(8,eq,4) output(8,eq,6) output(8,eq,9) output(4,eq,6) output(4,eq,9) output(6,eq,9)
Optimization: 35 1
Answer: 3
preference(1,(1,10),1,for(atom(isRoe(1))),15) preference(1,less(weight)) output(4,better,6) output(2,better,6) output(7,better,6) output(0,better,6) output(1,better,6) output(8,better,6) output(3,better,6) output(6,worse,9) output(1,eq,7) output(1,eq,2) output(1,eq,3) output(1,eq,0) output(1,eq,8) output(1,eq,4) output(1,eq,9) output(7,eq,2) output(7,eq,3) output(7,eq,0) output(7,eq,8) output(7,eq,4) output(7,eq,9) output(2,eq,3) output(2,eq,0) output(2,eq,8) output(2,eq,4) output(2,eq,9) output(3,eq,0) output(3,eq,8) output(3,eq,4) output(3,eq,9) output(0,eq,8) output(0,eq,4) output(0,eq,9) output(8,eq,4) output(8,eq,9) output(4,eq,9)
Optimization: 29 1
Answer: 4
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,less(weight)) output(2,better,8) output(2,better,4) output(7,better,8) output(7,better,4) output(0,better,8) output(0,better,4) output(1,better,8) output(1,better,4) output(3,better,8) output(3,better,4) output(4,worse,6) output(4,worse,9) output(8,worse,6) output(8,worse,9) output(1,eq,7) output(1,eq,2) output(1,eq,3) output(1,eq,0) output(1,eq,6) output(1,eq,9) output(7,eq,2) output(7,eq,3) output(7,eq,0) output(7,eq,6) output(7,eq,9) output(2,eq,3) output(2,eq,0) output(2,eq,6) output(2,eq,9) output(3,eq,0) output(3,eq,6) output(3,eq,9) output(0,eq,6) output(0,eq,9) output(8,eq,4) output(6,eq,9)
Optimization: 26 1
Answer: 5
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,5),1,for(atom(isRoe(1))),3) preference(1,less(weight)) output(2,better,8) output(2,better,4) output(2,better,6) output(7,better,8) output(7,better,4) output(7,better,6) output(0,better,8) output(0,better,4) output(0,better,6) output(1,better,8) output(1,better,4) output(1,better,6) output(3,better,8) output(3,better,4) output(3,better,6) output(4,worse,6) output(4,worse,9) output(6,worse,9) output(8,worse,6) output(8,worse,9) output(1,eq,7) output(1,eq,2) output(1,eq,3) output(1,eq,0) output(1,eq,9) output(7,eq,2) output(7,eq,3) output(7,eq,0) output(7,eq,9) output(2,eq,3) output(2,eq,0) output(2,eq,9) output(3,eq,0) output(3,eq,9) output(0,eq,9) output(8,eq,4)
Optimization: 21 2
Answer: 6
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,5),1,for(atom(isRoe(1))),3) preference(1,(1,8),1,for(atom(isMaguro(1))),4) preference(1,less(weight)) output(2,better,8) output(2,better,4) output(7,better,2) output(7,better,8) output(7,better,4) output(7,better,6) output(0,better,8) output(0,better,4) output(0,better,6) output(1,better,2) output(1,better,8) output(1,better,4) output(1,better,6) output(3,better,8) output(3,better,4) output(3,better,6) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,0) output(2,worse,6) output(2,worse,9) output(6,worse,9) output(8,worse,6) output(8,worse,9) output(1,eq,7) output(1,eq,3) output(1,eq,0) output(1,eq,9) output(7,eq,3) output(7,eq,0) output(7,eq,9) output(3,eq,0) output(3,eq,9) output(0,eq,9) output(8,eq,4)
Optimization: 20 3
Answer: 7
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,5),1,for(atom(isRoe(1))),3) preference(1,(1,7),1,for(atom(isTamago(1))),1) preference(1,(1,8),1,for(atom(isMaguro(1))),4) preference(1,less(weight)) output(2,better,8) output(2,better,4) output(7,better,2) output(7,better,8) output(7,better,4) output(7,better,6) output(0,better,8) output(0,better,4) output(0,better,6) output(1,better,7) output(1,better,2) output(1,better,8) output(1,better,4) output(1,better,6) output(3,better,8) output(3,better,4) output(3,better,6) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,0) output(2,worse,6) output(2,worse,9) output(6,worse,9) output(7,worse,3) output(7,worse,0) output(7,worse,9) output(8,worse,6) output(8,worse,9) output(1,eq,3) output(1,eq,0) output(1,eq,9) output(3,eq,0) output(3,eq,9) output(0,eq,9) output(8,eq,4)
Optimization: 19 4
Answer: 8
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,5),1,for(atom(isRoe(1))),3) preference(1,(1,7),1,for(atom(isUrchin(1))),3) preference(1,(1,8),1,for(atom(isMaguro(1))),4) preference(1,(1,9),1,for(atom(isTamago(1))),2) preference(1,less(weight)) output(2,better,8) output(2,better,4) output(7,better,2) output(7,better,8) output(7,better,4) output(7,better,6) output(0,better,8) output(0,better,4) output(0,better,6) output(1,better,7) output(1,better,2) output(1,better,8) output(1,better,4) output(1,better,6) output(8,better,4) output(3,better,8) output(3,better,4) output(3,better,6) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,0) output(2,worse,6) output(2,worse,9) output(6,worse,9) output(7,worse,3) output(7,worse,0) output(7,worse,9) output(8,worse,6) output(8,worse,9) output(1,eq,3) output(1,eq,0) output(1,eq,9) output(3,eq,0) output(3,eq,9) output(0,eq,9)
Optimization: 18 5
Answer: 9
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,1),1,for(atom(isTamago(1))),1) preference(1,(1,2),1,for(atom(isUrchin(1))),1) preference(1,(1,4),1,for(atom(isMaguro(1))),2) preference(1,(1,5),1,for(atom(isRoe(1))),3) preference(1,less(weight)) output(2,better,8) output(2,better,4) output(2,better,6) output(7,better,2) output(7,better,8) output(7,better,4) output(7,better,6) output(0,better,8) output(0,better,4) output(0,better,6) output(1,better,7) output(1,better,2) output(1,better,8) output(1,better,4) output(1,better,6) output(8,better,4) output(3,better,8) output(3,better,4) output(3,better,6) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,0) output(2,worse,9) output(6,worse,9) output(7,worse,3) output(7,worse,0) output(7,worse,9) output(8,worse,6) output(8,worse,9) output(1,eq,3) output(1,eq,0) output(1,eq,9) output(3,eq,0) output(3,eq,9) output(0,eq,9)
Optimization: 17 5
Answer: 10
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,1),1,for(atom(isRoe(1))),1) preference(1,(1,4),1,for(atom(isMaguro(1))),2) preference(1,(1,5),1,for(atom(isTamago(1))),4) preference(1,(1,9),1,for(atom(isShrimp(1))),10) preference(1,less(weight)) output(2,better,0) output(2,better,8) output(2,better,4) output(2,better,9) output(6,better,9) output(7,better,0) output(7,better,8) output(7,better,4) output(7,better,9) output(0,better,8) output(0,better,4) output(1,better,7) output(1,better,2) output(1,better,0) output(1,better,8) output(1,better,4) output(1,better,6) output(1,better,9) output(3,better,0) output(3,better,8) output(3,better,4) output(3,better,6) output(3,better,9) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,6) output(7,worse,2) output(7,worse,3) output(7,worse,6) output(0,worse,6) output(8,worse,6) output(8,worse,9) output(1,eq,3) output(0,eq,9) output(8,eq,4)
Optimization: 13 5
Answer: 11
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,1),1,for(atom(isRoe(1))),1) preference(1,(1,4),1,for(atom(isMaguro(1))),2) preference(1,(1,5),1,for(atom(isTamago(1))),4) preference(1,(1,8),1,for(atom(isUrchin(1))),1) preference(1,(1,9),1,for(atom(isShrimp(1))),10) preference(1,less(weight)) output(2,better,0) output(2,better,8) output(2,better,4) output(2,better,9) output(6,better,9) output(7,better,0) output(7,better,8) output(7,better,4) output(7,better,9) output(0,better,8) output(0,better,4) output(1,better,7) output(1,better,2) output(1,better,0) output(1,better,8) output(1,better,4) output(1,better,6) output(1,better,9) output(8,better,4) output(3,better,0) output(3,better,8) output(3,better,4) output(3,better,6) output(3,better,9) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,6) output(7,worse,2) output(7,worse,3) output(7,worse,6) output(0,worse,6) output(8,worse,6) output(8,worse,9) output(1,eq,3) output(0,eq,9)
Optimization: 12 6
Answer: 12
preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),15) preference(1,(1,1),1,for(atom(isRoe(1))),1) preference(1,(1,4),1,for(atom(isMaguro(1))),2) preference(1,(1,5),1,for(atom(isTamago(1))),1) preference(1,(1,8),1,for(atom(isUrchin(1))),1) preference(1,(1,9),1,for(atom(isShrimp(1))),10) preference(1,less(weight)) output(2,better,0) output(2,better,8) output(2,better,4) output(2,better,9) output(6,better,9) output(7,better,2) output(7,better,0) output(7,better,8) output(7,better,4) output(7,better,9) output(0,better,8) output(0,better,4) output(1,better,7) output(1,better,2) output(1,better,0) output(1,better,8) output(1,better,4) output(1,better,6) output(1,better,9) output(8,better,4) output(3,better,0) output(3,better,8) output(3,better,4) output(3,better,6) output(3,better,9) output(4,worse,6) output(4,worse,9) output(2,worse,3) output(2,worse,6) output(7,worse,3) output(0,worse,6) output(8,worse,6) output(8,worse,9) output(1,eq,3) output(7,eq,6) output(0,eq,9)
Optimization: 11 6
Answer: 13
preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),11) preference(1,(1,4),1,for(atom(isMaguro(1))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(isChewy(1))),1) preference(1,(1,7),1,for(atom(isShrimp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(isUnique(1))),14) preference(1,less(weight)) output(4,better,6) output(4,better,9) output(2,better,3) output(2,better,0) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,9) output(6,better,9) output(7,better,2) output(7,better,3) output(7,better,0) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,9) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,0) output(1,better,8) output(1,better,4) output(1,better,6) output(1,better,9) output(8,better,4) output(8,better,6) output(8,better,9) output(3,better,0) output(3,better,8) output(3,better,4) output(3,better,6) output(3,better,9)
Optimization: 0 7
Progression : 0 [1;7] (Error: 6)
Answer: 14
preference(1,(1,1),1,for(atom(isRaw(1))),13) preference(1,(1,2),1,for(atom(hasPrice(1))),4) preference(1,(1,4),1,for(atom(isChewy(1))),1) preference(1,(1,5),1,for(atom(isCreamy(1))),1) preference(1,(1,8),1,for(atom(isShrimp(1))),14) preference(1,(1,9),1,for(atom(isRoe(1))),8) preference(1,less(weight)) output(4,better,6) output(4,better,9) output(2,better,3) output(2,better,0) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,9) output(6,better,9) output(7,better,2) output(7,better,3) output(7,better,0) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,9) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,0) output(1,better,8) output(1,better,4) output(1,better,6) output(1,better,9) output(8,better,4) output(8,better,6) output(8,better,9) output(3,better,0) output(3,better,8) output(3,better,4) output(3,better,6) output(3,better,9)
Optimization: 0 6
Progression : 0 [2;6] (Error: 2)
Answer: 15
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(0)))),2) preference(1,(1,6),1,for(neg(atom(isRaw(0)))),4) preference(1,(1,8),1,for(atom(isShrimp(1))),6) preference(1,(1,9),1,for(atom(isUnique(1))),7) preference(1,less(weight)) output(4,better,6) output(4,better,9) output(2,better,3) output(2,better,0) output(2,better,8) output(2,better,4) output(2,better,6) output(2,better,9) output(6,better,9) output(7,better,2) output(7,better,3) output(7,better,0) output(7,better,8) output(7,better,4) output(7,better,6) output(7,better,9) output(0,better,8) output(0,better,4) output(0,better,6) output(0,better,9) output(1,better,7) output(1,better,2) output(1,better,3) output(1,better,0) output(1,better,8) output(1,better,4) output(1,better,6) output(1,better,9) output(8,better,4) output(8,better,6) output(8,better,9) output(3,better,0) output(3,better,8) output(3,better,4) output(3,better,6) output(3,better,9)
Optimization: 0 5
SATISFIABLE

Models       : 15+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 965.211s (Solving: 957.46s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 3836.937s
Threads      : 4        (Winner: 0)

Choices      : 17062274 (Domain: 2478)
Conflicts    : 2384992  (Analyzed: 2384990)
Restarts     : 3475     (Average: 686.33 Last: 75323)
Model-Level  : 3031.5  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2388224  (Deleted: 2221288)
  Binary     : 436      (Ratio:   0.02%)
  Ternary    : 154      (Ratio:   0.01%)
  Conflict   : 2384990  (Average Length: 1617.1 Ratio:  99.86%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3234     (Average Length:  127.2 Ratio:   0.14%) 
  Distributed: 1078     (Ratio:   0.05% Average LBD: 3.42) 
  Integrated : 3234     (Ratio: 300.00% Unit: 1 Average Jumps: 0.00)
Backjumps    : 2384990  (Average:  5.04 Max: 3294 Sum: 12025048)
  Executed   : 2384989  (Average:  5.04 Max: 3294 Sum: 12025041 Ratio: 100.00%)
  Bounded    : 1        (Average:  7.00 Max:   7 Sum:      7 Ratio:   0.00%)

Rules        : 2140283 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 767687  
Bodies       : 785142  
  Sum        : 216     
  Count      : 10      
Equivalences : 2322252  (Atom=Atom: 750364 Body=Body: 769043 Other: 802845)
Tight        : Yes
Variables    : 20923    (Eliminated:    0 Frozen: 13893)
Constraints  : 1414006  (Binary:  98.9% Ternary:   0.5% Other:   0.6%)


Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(isUrchin(1))  ; 
  1 :: not atom(isOctopus(1))  ; 
  1 :: not atom(isMaguro(1))  ; 
  1 :: not atom(isRoe(1))  ; 
  1 :: not atom(isTamago(1))  ; 
  1 :: not atom(isShrimp(1))  ; 
  1 :: not atom(isFattyFish(1))  ; 
  1 :: not atom(isChewy(1))  ; 
  1 :: not atom(isButtery(1))  ; 
  1 :: not atom(isCreamy(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(isTamago(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(isRoe(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(isRoe(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(isRoe(1)) ; 
  4 :: atom(isMaguro(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(isRoe(1)) ; 
  1 :: atom(isTamago(1)) ; 
  4 :: atom(isMaguro(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(isRoe(1)) ; 
  3 :: atom(isUrchin(1)) ; 
  4 :: atom(isMaguro(1)) ; 
  2 :: atom(isTamago(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(isTamago(1)) ; 
  1 :: atom(isUrchin(1)) ; 
  2 :: atom(isMaguro(1)) ; 
  3 :: atom(isRoe(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(isRoe(1)) ; 
  2 :: atom(isMaguro(1)) ; 
  4 :: atom(isTamago(1)) ; 
  10 :: atom(isShrimp(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(isRoe(1)) ; 
  2 :: atom(isMaguro(1)) ; 
  4 :: atom(isTamago(1)) ; 
  1 :: atom(isUrchin(1)) ; 
  10 :: atom(isShrimp(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(isRoe(1)) ; 
  2 :: atom(isMaguro(1)) ; 
  1 :: atom(isTamago(1)) ; 
  1 :: atom(isUrchin(1)) ; 
  10 :: atom(isShrimp(1)) ; 
  15 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(isMaguro(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(isChewy(1)) ; 
  6 :: atom(isShrimp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  11 :: not atom(hasPrice(0))  ; 
  14 :: atom(isUnique(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  13 :: atom(isRaw(1)) ; 
  4 :: atom(hasPrice(1)) ; 
  1 :: atom(isChewy(1)) ; 
  1 :: atom(isCreamy(1)) ; 
  14 :: atom(isShrimp(1)) ; 
  8 :: atom(isRoe(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasPrice(0))  ; 
  2 :: not atom(hasMinorGrp(0))  ; 
  4 :: not atom(isRaw(0))  ; 
  6 :: atom(isShrimp(1)) ; 
  7 :: atom(isUnique(1)) 
}.
Time limit reached
