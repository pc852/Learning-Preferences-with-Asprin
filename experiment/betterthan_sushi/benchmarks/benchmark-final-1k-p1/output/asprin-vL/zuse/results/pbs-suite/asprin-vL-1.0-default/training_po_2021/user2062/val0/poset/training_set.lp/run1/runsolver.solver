asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(5,eq,1) output(5,eq,4) output(5,eq,7) output(5,eq,8) output(5,eq,2) output(5,eq,6) output(5,eq,9) output(5,eq,3) output(1,eq,4) output(1,eq,7) output(1,eq,8) output(1,eq,2) output(1,eq,6) output(1,eq,9) output(1,eq,3) output(4,eq,7) output(4,eq,8) output(4,eq,2) output(4,eq,6) output(4,eq,9) output(4,eq,3) output(7,eq,8) output(7,eq,2) output(7,eq,6) output(7,eq,9) output(7,eq,3) output(8,eq,2) output(8,eq,6) output(8,eq,9) output(8,eq,3) output(2,eq,6) output(2,eq,9) output(2,eq,3) output(6,eq,9) output(6,eq,3) output(9,eq,3)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,7) output(4,better,8) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(5,worse,4) output(1,worse,4) output(5,worse,2) output(1,worse,2) output(7,worse,2) output(5,worse,6) output(1,worse,6) output(7,worse,6) output(5,worse,9) output(1,worse,9) output(7,worse,9) output(5,worse,8) output(7,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(5,eq,1) output(5,eq,7) output(1,eq,7) output(8,eq,2) output(8,eq,6) output(8,eq,9) output(8,eq,3) output(2,eq,6) output(2,eq,9) output(2,eq,3) output(6,eq,9) output(6,eq,3) output(9,eq,3)
Optimization: 30 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset) output(4,better,7) output(4,better,8) output(4,better,2) output(4,better,9) output(4,better,3) output(6,better,9) output(6,better,3) output(5,worse,4) output(1,worse,4) output(5,worse,2) output(1,worse,2) output(7,worse,2) output(5,worse,6) output(1,worse,6) output(7,worse,6) output(8,worse,6) output(2,worse,6) output(5,worse,7) output(1,worse,7) output(5,worse,9) output(1,worse,9) output(7,worse,9) output(5,worse,8) output(7,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(5,eq,1) output(4,eq,6) output(8,eq,2) output(8,eq,9) output(8,eq,3) output(2,eq,9) output(2,eq,3) output(9,eq,3)
Optimization: 29 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isButtery(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(8,better,2) output(8,better,6) output(8,better,9) output(8,better,3) output(5,worse,4) output(1,worse,4) output(5,worse,2) output(1,worse,2) output(7,worse,2) output(5,worse,6) output(1,worse,6) output(7,worse,6) output(5,worse,9) output(1,worse,9) output(7,worse,9) output(5,worse,8) output(7,worse,8) output(1,worse,3) output(7,worse,3) output(1,worse,8) output(5,worse,3) output(5,eq,1) output(5,eq,7) output(1,eq,7) output(4,eq,8) output(2,eq,6) output(2,eq,9) output(2,eq,3) output(6,eq,9) output(6,eq,3) output(9,eq,3)
Optimization: 27 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(5,better,1) output(5,better,4) output(5,better,7) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(7,better,8) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(1,better,8) output(4,worse,7) output(4,worse,9) output(8,worse,9) output(2,worse,9) output(6,worse,9) output(4,worse,3) output(8,worse,3) output(2,worse,3) output(6,worse,3) output(1,eq,7) output(4,eq,8) output(4,eq,2) output(4,eq,6) output(8,eq,2) output(8,eq,6) output(2,eq,6) output(9,eq,3)
Optimization: 17 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(5,better,4) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(2,better,6) output(2,better,9) output(2,better,3) output(7,better,8) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(1,better,4) output(1,better,7) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(8,better,6) output(8,better,9) output(8,better,3) output(1,better,8) output(4,worse,2) output(4,worse,7) output(5,worse,1) output(4,worse,8) output(5,eq,7) output(4,eq,6) output(4,eq,9) output(4,eq,3) output(8,eq,2) output(6,eq,9) output(6,eq,3) output(9,eq,3)
Optimization: 12 1
Answer: 7
preference(1,(1,12),1,for(atom(isRaw(0))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,poset) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(5,better,4) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(7,better,8) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(1,better,4) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,9) output(8,better,3) output(1,better,8) output(4,worse,7) output(5,eq,1) output(5,eq,7) output(1,eq,7) output(4,eq,8) output(2,eq,6) output(2,eq,9) output(2,eq,3) output(6,eq,9) output(6,eq,3) output(9,eq,3)
Optimization: 11 1
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),1,for(atom(isFattyFish(1))),()) preference(1,(1,5),1,for(atom(isCreamy(1))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,7),1,for(atom(isFattyFish(1))),()) preference(1,(1,8),1,for(atom(isUrchin(1))),()) preference(1,(1,10),1,for(atom(isTamago(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),1,for(atom(isOctopus(1))),()) preference(1,(1,1),2,for(atom(hasPrice(0))),()) preference(1,(1,3),2,for(atom(isTamago(1))),()) preference(1,(1,5),2,for(atom(isTamago(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),2,for(atom(isMaguro(1))),()) preference(1,(1,8),2,for(atom(isFattyFish(1))),()) preference(1,(1,10),2,for(atom(isMaguro(1))),()) preference(1,(1,11),2,for(atom(isCreamy(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,7) output(4,better,8) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(5,better,1) output(5,better,4) output(5,better,7) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(2,better,9) output(2,better,3) output(6,better,9) output(6,better,3) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(1,better,7) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,9) output(8,better,3) output(1,better,8) output(1,worse,4) output(2,worse,6) output(7,worse,8) output(9,eq,3)
Optimization: 4 9
Answer: 9
preference(1,(1,2),1,for(atom(isRaw(0))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(isOctopus(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(isOctopus(1))),()) preference(1,(1,2),2,for(atom(hasPrice(1))),()) preference(1,(1,3),2,for(atom(isOctopus(1))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(isShrimp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(isFattyFish(1))),()) preference(1,poset) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(5,better,1) output(5,better,4) output(5,better,7) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(2,better,6) output(2,better,9) output(2,better,3) output(6,better,3) output(7,better,8) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(9,better,3) output(1,better,4) output(1,better,7) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,9) output(8,better,3) output(1,better,8) output(4,worse,7) output(4,worse,8) output(6,unc,9)
Optimization: 3 7
Answer: 10
preference(1,(1,2),1,for(atom(isRoe(1))),()) preference(1,(1,3),1,for(atom(hasPrice(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(isRaw(0))),()) preference(1,(1,6),1,for(atom(isOctopus(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(isShrimp(1))),()) preference(1,(1,2),2,for(atom(isShrimp(1))),()) preference(1,(1,3),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasPrice(0))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,10),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(isFattyFish(1))),()) preference(1,poset) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(5,better,1) output(5,better,4) output(5,better,7) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(2,better,6) output(2,better,9) output(2,better,3) output(6,better,9) output(6,better,3) output(7,better,8) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(9,better,3) output(1,better,4) output(1,better,7) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,9) output(8,better,3) output(1,better,8) output(4,worse,7) output(4,worse,8)
Optimization: 2 7
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),1,for(atom(isSweet(1))),()) preference(1,(1,8),1,for(atom(isOctopus(1))),()) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,1),2,for(atom(isShrimp(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(isSweet(1))),()) preference(1,(1,11),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(isUnique(1))),()) preference(1,poset) output(4,better,7) output(4,better,8) output(4,better,2) output(4,better,6) output(4,better,9) output(4,better,3) output(5,better,1) output(5,better,4) output(5,better,7) output(5,better,8) output(5,better,2) output(5,better,6) output(5,better,9) output(5,better,3) output(2,better,6) output(2,better,9) output(2,better,3) output(6,better,3) output(7,better,8) output(7,better,2) output(7,better,6) output(7,better,9) output(7,better,3) output(9,better,3) output(1,better,4) output(1,better,7) output(1,better,2) output(1,better,6) output(1,better,9) output(1,better,3) output(8,better,2) output(8,better,6) output(8,better,9) output(8,better,3) output(1,better,8) output(6,worse,9)
Optimization: 1 5
SATISFIABLE

Models       : 11+
  Optimum    : unknown
Optimization : 1 5
Calls        : 1
Time         : 1055.639s (Solving: 1048.14s 1st Model: 1.47s Unsat: 0.00s)
CPU Time     : 4198.713s
Threads      : 4        (Winner: 3)

Choices      : 8409159  (Domain: 3034)
Conflicts    : 333507   (Analyzed: 333507)
Restarts     : 388      (Average: 859.55 Last: 5592)
Model-Level  : 161.6   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 27177431 (Deleted: 26989638)
  Binary     : 2701     (Ratio:   0.01%)
  Ternary    : 82588    (Ratio:   0.30%)
  Conflict   : 333507   (Average Length: 1737.8 Ratio:   1.23%) 
  Loop       : 26755379 (Average Length:  262.1 Ratio:  98.45%) 
  Other      : 88545    (Average Length:    3.5 Ratio:   0.33%) 
  Distributed: 29526    (Ratio:   0.11% Average LBD: 2.85) 
  Integrated : 88578    (Ratio: 300.00% Unit: 274 Average Jumps: 2344.15)
Backjumps    : 333507   (Average: 18.60 Max: 146359 Sum: 6203823)
  Executed   : 333463   (Average: 18.60 Max: 146359 Sum: 6203706 Ratio: 100.00%)
  Bounded    : 44       (Average:  2.66 Max:  38 Sum:    117 Ratio:   0.00%)

Rules        : 1508145 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28635   
Bodies       : 1146242 
  Count      : 48      
Equivalences : 32184    (Atom=Atom: 5188 Body=Body: 7868 Other: 19128)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103158  (Eliminated:    0 Frozen: 1092646)
Constraints  : 6431717  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isButtery(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasPrice(0)) ; 
  atom(isFattyFish(1)) >> atom(isTamago(1)) ; 
  atom(isCreamy(1)) >> atom(isTamago(1)) ; 
  atom(isFattyFish(1)) >> atom(hasMinorGrp(2)) ; 
  atom(isFattyFish(1)) >> atom(isMaguro(1)) ; 
  atom(isUrchin(1)) >> atom(isFattyFish(1)) ; 
  atom(isTamago(1)) >> atom(isMaguro(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isCreamy(1)) ; 
  atom(isOctopus(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(isOctopus(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isShrimp(1)) ; 
  atom(isOctopus(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isRoe(1)) ; 
  atom(isOctopus(1)) >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRoe(1)) >> atom(isShrimp(1)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(isRaw(0)) >> atom(hasPrice(1)) ; 
  atom(isOctopus(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isRoe(1)) ; 
  atom(isShrimp(1)) >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(isShrimp(1)) ; 
  atom(isSweet(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isOctopus(1)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(isUnique(1)) 
}.
Time limit reached
