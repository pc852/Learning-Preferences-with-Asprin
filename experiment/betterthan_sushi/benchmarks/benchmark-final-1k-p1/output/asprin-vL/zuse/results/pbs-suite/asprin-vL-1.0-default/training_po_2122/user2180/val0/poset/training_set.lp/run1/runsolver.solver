asprin_vL version 1.0
Reading from stdin
-:250:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:260:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:275:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:356:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:630:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:807:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:936:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1008:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1012:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1012:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1018:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1117:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1143:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1263:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1297:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1319:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:167:1-16: info: no atoms over signature occur in program:
  output/3

-:159:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:160:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:161:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(4,eq,7) output(4,eq,2) output(4,eq,3) output(4,eq,8) output(4,eq,6) output(4,eq,9) output(4,eq,1) output(4,eq,5) output(7,eq,2) output(7,eq,3) output(7,eq,8) output(7,eq,6) output(7,eq,9) output(7,eq,1) output(7,eq,5) output(2,eq,3) output(2,eq,8) output(2,eq,6) output(2,eq,9) output(2,eq,1) output(2,eq,5) output(3,eq,8) output(3,eq,6) output(3,eq,9) output(3,eq,1) output(3,eq,5) output(8,eq,6) output(8,eq,9) output(8,eq,1) output(8,eq,5) output(6,eq,9) output(6,eq,1) output(6,eq,5) output(9,eq,1) output(9,eq,5) output(1,eq,5)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isShrimp(1))),()) preference(1,poset) output(4,better,7) output(4,better,1) output(4,better,5) output(2,better,1) output(2,better,5) output(6,better,1) output(6,better,5) output(9,better,1) output(9,better,5) output(8,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,2) output(7,worse,6) output(4,worse,9) output(7,worse,9) output(2,worse,9) output(3,worse,9) output(8,worse,9) output(6,worse,9) output(7,worse,8) output(7,worse,3) output(4,eq,2) output(4,eq,3) output(4,eq,8) output(4,eq,6) output(7,eq,1) output(7,eq,5) output(2,eq,3) output(2,eq,8) output(2,eq,6) output(3,eq,8) output(3,eq,6) output(8,eq,6) output(1,eq,5)
Optimization: 23 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isRoe(1))),()) preference(1,poset) output(4,better,7) output(4,better,1) output(4,better,5) output(2,better,1) output(2,better,5) output(6,better,9) output(6,better,1) output(6,better,5) output(9,better,1) output(9,better,5) output(8,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,2) output(4,worse,6) output(7,worse,6) output(2,worse,6) output(3,worse,6) output(8,worse,6) output(7,worse,9) output(7,worse,8) output(7,worse,3) output(4,eq,2) output(4,eq,3) output(4,eq,8) output(4,eq,9) output(7,eq,1) output(7,eq,5) output(2,eq,3) output(2,eq,8) output(2,eq,9) output(3,eq,8) output(3,eq,9) output(8,eq,9) output(1,eq,5)
Optimization: 22 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isUrchin(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,6) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,1) output(2,better,5) output(6,better,1) output(6,better,5) output(9,better,1) output(9,better,5) output(8,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,2) output(7,worse,6) output(7,worse,9) output(7,worse,8) output(7,worse,3) output(7,eq,1) output(7,eq,5) output(2,eq,3) output(2,eq,8) output(2,eq,6) output(2,eq,9) output(3,eq,8) output(3,eq,6) output(3,eq,9) output(8,eq,6) output(8,eq,9) output(6,eq,9) output(1,eq,5)
Optimization: 18 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isButtery(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,6) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,1) output(2,better,5) output(6,better,1) output(6,better,5) output(9,better,1) output(9,better,5) output(8,better,6) output(8,better,9) output(8,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,2) output(7,worse,6) output(7,worse,9) output(7,worse,8) output(2,worse,8) output(3,worse,8) output(7,worse,3) output(4,eq,8) output(7,eq,1) output(7,eq,5) output(2,eq,3) output(2,eq,6) output(2,eq,9) output(3,eq,6) output(3,eq,9) output(6,eq,9) output(1,eq,5)
Optimization: 17 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isCreamy(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,6) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,1) output(2,better,5) output(6,better,1) output(6,better,5) output(7,better,1) output(7,better,5) output(9,better,1) output(9,better,5) output(8,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,2) output(7,worse,6) output(7,worse,9) output(7,worse,8) output(7,worse,3) output(2,eq,3) output(2,eq,8) output(2,eq,6) output(2,eq,9) output(3,eq,8) output(3,eq,6) output(3,eq,9) output(8,eq,6) output(8,eq,9) output(6,eq,9) output(1,eq,5)
Optimization: 16 1
Answer: 7
preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,3) output(2,better,9) output(2,better,5) output(6,better,9) output(6,better,1) output(6,better,5) output(7,better,2) output(7,better,3) output(7,better,8) output(7,better,9) output(7,better,1) output(7,better,5) output(8,better,9) output(8,better,5) output(1,better,5) output(2,worse,6) output(3,worse,6) output(8,worse,6) output(3,worse,8) output(3,worse,1) output(9,worse,1) output(4,eq,7) output(4,eq,6) output(7,eq,6) output(2,eq,8) output(2,eq,1) output(3,eq,9) output(3,eq,5) output(8,eq,1) output(9,eq,5)
Optimization: 15 1
Answer: 8
preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(isRaw(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,1) output(2,better,5) output(6,better,9) output(6,better,1) output(6,better,5) output(7,better,2) output(7,better,3) output(7,better,8) output(7,better,9) output(7,better,1) output(7,better,5) output(9,better,1) output(9,better,5) output(8,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,6) output(2,worse,6) output(3,worse,6) output(8,worse,6) output(4,eq,6) output(2,eq,3) output(2,eq,8) output(2,eq,9) output(3,eq,8) output(3,eq,9) output(8,eq,9) output(1,eq,5)
Optimization: 12 1
Answer: 9
preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(isRaw(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,3) output(2,better,9) output(2,better,1) output(2,better,5) output(6,better,9) output(6,better,1) output(6,better,5) output(7,better,2) output(7,better,3) output(7,better,8) output(7,better,9) output(7,better,1) output(7,better,5) output(9,better,1) output(9,better,5) output(8,better,9) output(8,better,5) output(1,better,5) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,6) output(2,worse,6) output(3,worse,6) output(8,worse,6) output(3,worse,8) output(4,eq,6) output(2,eq,8) output(3,eq,9)
Optimization: 8 2
Answer: 10
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isChewy(1))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(isRoe(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(isChewy(1))),()) preference(1,(1,3),2,for(atom(isRaw(0))),()) preference(1,(1,4),2,for(atom(isSweet(1))),()) preference(1,(1,5),2,for(atom(isRaw(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,3) output(2,better,8) output(2,better,9) output(2,better,1) output(2,better,5) output(6,better,9) output(6,better,1) output(6,better,5) output(7,better,2) output(7,better,3) output(7,better,8) output(7,better,9) output(7,better,1) output(7,better,5) output(9,better,1) output(9,better,5) output(8,better,9) output(8,better,5) output(1,better,5) output(3,better,9) output(3,better,1) output(8,better,1) output(3,better,5) output(7,worse,6) output(2,worse,6) output(3,worse,6) output(8,worse,6) output(3,worse,8) output(4,unc,6)
Optimization: 6 10
Answer: 11
preference(1,(1,1),1,for(atom(isRaw(1))),()) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,5),1,for(atom(isCreamy(1))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isChewy(1))),()) preference(1,(1,11),1,for(atom(isUrchin(1))),()) preference(1,(1,12),1,for(atom(isRoe(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),2,for(atom(isChewy(1))),()) preference(1,(1,3),2,for(atom(isRaw(0))),()) preference(1,(1,4),2,for(atom(isSweet(1))),()) preference(1,(1,5),2,for(atom(isRaw(1))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,9),2,for(atom(isRoe(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(1))),()) preference(1,poset) output(4,better,7) output(4,better,2) output(4,better,3) output(4,better,8) output(4,better,6) output(4,better,9) output(4,better,1) output(4,better,5) output(2,better,3) output(2,better,8) output(2,better,6) output(2,better,9) output(2,better,1) output(2,better,5) output(6,better,9) output(6,better,1) output(6,better,5) output(7,better,2) output(7,better,3) output(7,better,8) output(7,better,6) output(7,better,9) output(7,better,1) output(7,better,5) output(9,better,1) output(9,better,5) output(8,better,6) output(8,better,9) output(8,better,5) output(1,better,5) output(3,better,6) output(3,better,9) output(3,better,1) output(8,better,1) output(3,better,5) output(3,worse,8)
Optimization: 1 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.248 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 1 10
Calls        : 1
Time         : 597.331s (Solving: 589.60s 1st Model: 1.33s Unsat: 0.00s)
CPU Time     : 2364.145s
Threads      : 4        (Winner: 4)

Choices      : 9859368  (Domain: 418)
Conflicts    : 165745   (Analyzed: 165745)
Restarts     : 198      (Average: 837.10 Last: 7152)
Model-Level  : 206.1   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 10017298 (Deleted: 9884166)
  Binary     : 728      (Ratio:   0.01%)
  Ternary    : 34952    (Ratio:   0.35%)
  Conflict   : 165745   (Average Length: 1125.1 Ratio:   1.65%) 
  Loop       : 9816130  (Average Length:  327.9 Ratio:  97.99%) 
  Other      : 35423    (Average Length:    3.5 Ratio:   0.35%) 
  Distributed: 11810    (Ratio:   0.12% Average LBD: 2.86) 
  Integrated : 35430    (Ratio: 300.00% Unit: 118 Average Jumps: 1949.40)
Backjumps    : 165745   (Average: 56.05 Max: 330768 Sum: 9289890)
  Executed   : 165721   (Average: 56.05 Max: 330768 Sum: 9289808 Ratio: 100.00%)
  Bounded    : 24       (Average:  3.42 Max:  38 Sum:     82 Ratio:   0.00%)

Rules        : 1508147 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 28637   
Bodies       : 1146244 
  Count      : 48      
Equivalences : 32189    (Atom=Atom: 5189 Body=Body: 7869 Other: 19131)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1089612 Gammas: 0)
Variables    : 1103159  (Eliminated:    0 Frozen: 1092647)
Constraints  : 6431723  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isShrimp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isRoe(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isUrchin(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isButtery(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isChewy(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isRaw(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isSweet(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(isChewy(1)) >> atom(isRoe(1)) ; 
  atom(isUrchin(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isRoe(1)) >> atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isChewy(1)) ; 
  atom(hasMinorGrp(1)) >> atom(isRaw(0)) ; 
  atom(hasMinorGrp(0)) >> atom(isSweet(1)) ; 
  atom(isCreamy(1)) >> atom(isRaw(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(0)) ; 
  atom(isChewy(1)) >> atom(isRoe(1)) ; 
  atom(isUrchin(1)) >> atom(hasMinorGrp(1)) ; 
  atom(isRoe(1)) >> atom(hasMinorGrp(1)) 
}.
