asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,3) output(19,eq,55) output(19,eq,50) output(19,eq,87) output(19,eq,6) output(19,eq,41) output(19,eq,0) output(19,eq,9) output(19,eq,38) output(3,eq,55) output(3,eq,50) output(3,eq,87) output(3,eq,6) output(3,eq,41) output(3,eq,0) output(3,eq,9) output(3,eq,38) output(55,eq,50) output(55,eq,87) output(55,eq,6) output(55,eq,41) output(55,eq,0) output(55,eq,9) output(55,eq,38) output(50,eq,87) output(50,eq,6) output(50,eq,41) output(50,eq,0) output(50,eq,9) output(50,eq,38) output(87,eq,6) output(87,eq,41) output(87,eq,0) output(87,eq,9) output(87,eq,38) output(6,eq,41) output(6,eq,0) output(6,eq,9) output(6,eq,38) output(41,eq,0) output(41,eq,9) output(41,eq,38) output(0,eq,9) output(0,eq,38) output(9,eq,38)
Optimization: 45 0
Answer: 2
preference(1,(1,13),1,for(atom(hasOiliness(1))),10) preference(1,less(weight)) output(0,better,9) output(0,better,38) output(3,better,50) output(3,better,6) output(3,better,41) output(3,better,9) output(3,better,38) output(19,better,50) output(19,better,6) output(19,better,41) output(19,better,9) output(19,better,38) output(55,better,50) output(55,better,6) output(55,better,41) output(55,better,9) output(55,better,38) output(87,better,6) output(87,better,41) output(87,better,9) output(87,better,38) output(6,worse,0) output(41,worse,0) output(50,worse,87) output(50,worse,0) output(19,eq,3) output(19,eq,55) output(19,eq,87) output(19,eq,0) output(3,eq,55) output(3,eq,87) output(3,eq,0) output(55,eq,87) output(55,eq,0) output(50,eq,6) output(50,eq,41) output(50,eq,9) output(50,eq,38) output(87,eq,0) output(6,eq,41) output(6,eq,9) output(6,eq,38) output(41,eq,9) output(41,eq,38) output(9,eq,38)
Optimization: 24 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(3,better,41) output(3,better,0) output(3,better,9) output(3,better,38) output(6,better,41) output(6,better,0) output(6,better,9) output(6,better,38) output(19,better,41) output(19,better,0) output(19,better,9) output(19,better,38) output(50,better,41) output(50,better,0) output(50,better,9) output(50,better,38) output(55,better,41) output(55,better,0) output(55,better,9) output(55,better,38) output(87,better,41) output(87,better,0) output(87,better,9) output(87,better,38) output(19,eq,3) output(19,eq,55) output(19,eq,50) output(19,eq,87) output(19,eq,6) output(3,eq,55) output(3,eq,50) output(3,eq,87) output(3,eq,6) output(55,eq,50) output(55,eq,87) output(55,eq,6) output(50,eq,87) output(50,eq,6) output(87,eq,6) output(41,eq,0) output(41,eq,9) output(41,eq,38) output(0,eq,9) output(0,eq,38) output(9,eq,38)
Optimization: 21 2
Answer: 4
preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,6),1,for(atom(hasOftenSold(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,13),1,for(atom(hasPrice(3))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(0,better,9) output(0,better,38) output(3,better,55) output(3,better,50) output(3,better,87) output(3,better,6) output(3,better,41) output(3,better,0) output(3,better,9) output(3,better,38) output(6,better,41) output(6,better,0) output(6,better,9) output(6,better,38) output(9,better,38) output(19,better,3) output(19,better,55) output(19,better,50) output(19,better,87) output(19,better,6) output(19,better,41) output(19,better,0) output(19,better,9) output(19,better,38) output(41,better,0) output(41,better,9) output(41,better,38) output(50,better,87) output(50,better,6) output(50,better,41) output(50,better,0) output(50,better,9) output(50,better,38) output(55,better,50) output(55,better,87) output(55,better,6) output(55,better,41) output(55,better,0) output(55,better,9) output(55,better,38) output(87,better,6) output(87,better,41) output(87,better,0) output(87,better,9) output(87,better,38)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 5
preference(1,(1,4),1,for(neg(atom(hasOiliness(2)))),6) preference(1,(1,5),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),9) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(2)))),5) preference(1,(1,1),1,for(atom(hasOftenSold(3))),7) preference(1,(1,2),1,for(atom(hasPrice(3))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,6),1,for(atom(hasOftenSold(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasOftenSold(1))),7) preference(1,less(weight)) output(0,better,9) output(0,better,38) output(3,better,55) output(3,better,50) output(3,better,87) output(3,better,6) output(3,better,41) output(3,better,0) output(3,better,9) output(3,better,38) output(6,better,41) output(6,better,0) output(6,better,9) output(6,better,38) output(9,better,38) output(19,better,3) output(19,better,55) output(19,better,50) output(19,better,87) output(19,better,6) output(19,better,41) output(19,better,0) output(19,better,9) output(19,better,38) output(41,better,0) output(41,better,9) output(41,better,38) output(50,better,87) output(50,better,6) output(50,better,41) output(50,better,0) output(50,better,9) output(50,better,38) output(55,better,50) output(55,better,87) output(55,better,6) output(55,better,41) output(55,better,0) output(55,better,9) output(55,better,38) output(87,better,6) output(87,better,41) output(87,better,0) output(87,better,9) output(87,better,38)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),8) preference(1,(1,2),1,for(atom(hasPrice(1))),2) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,5),1,for(atom(hasPrice(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,14),1,for(atom(hasOftenSold(3))),2) preference(1,less(weight)) output(0,better,9) output(0,better,38) output(3,better,55) output(3,better,50) output(3,better,87) output(3,better,6) output(3,better,41) output(3,better,0) output(3,better,9) output(3,better,38) output(6,better,41) output(6,better,0) output(6,better,9) output(6,better,38) output(9,better,38) output(19,better,3) output(19,better,55) output(19,better,50) output(19,better,87) output(19,better,6) output(19,better,41) output(19,better,0) output(19,better,9) output(19,better,38) output(41,better,0) output(41,better,9) output(41,better,38) output(50,better,87) output(50,better,6) output(50,better,41) output(50,better,0) output(50,better,9) output(50,better,38) output(55,better,50) output(55,better,87) output(55,better,6) output(55,better,41) output(55,better,0) output(55,better,9) output(55,better,38) output(87,better,6) output(87,better,41) output(87,better,0) output(87,better,9) output(87,better,38)
Optimization: 0 10
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasOftenSold(0)))),4) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasOftenSold(3))),2) preference(1,(1,11),1,for(atom(hasStyle(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(0,better,9) output(0,better,38) output(3,better,55) output(3,better,50) output(3,better,87) output(3,better,6) output(3,better,41) output(3,better,0) output(3,better,9) output(3,better,38) output(6,better,41) output(6,better,0) output(6,better,9) output(6,better,38) output(9,better,38) output(19,better,3) output(19,better,55) output(19,better,50) output(19,better,87) output(19,better,6) output(19,better,41) output(19,better,0) output(19,better,9) output(19,better,38) output(41,better,0) output(41,better,9) output(41,better,38) output(50,better,87) output(50,better,6) output(50,better,41) output(50,better,0) output(50,better,9) output(50,better,38) output(55,better,50) output(55,better,87) output(55,better,6) output(55,better,41) output(55,better,0) output(55,better,9) output(55,better,38) output(87,better,6) output(87,better,41) output(87,better,0) output(87,better,9) output(87,better,38)
Optimization: 0 9
Answer: 8
preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,4),1,for(atom(hasOiliness(2))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,10),1,for(atom(hasOftenSold(0))),1) preference(1,(1,12),1,for(atom(hasOftenSold(3))),2) preference(1,less(weight)) output(0,better,9) output(0,better,38) output(3,better,55) output(3,better,50) output(3,better,87) output(3,better,6) output(3,better,41) output(3,better,0) output(3,better,9) output(3,better,38) output(6,better,41) output(6,better,0) output(6,better,9) output(6,better,38) output(9,better,38) output(19,better,3) output(19,better,55) output(19,better,50) output(19,better,87) output(19,better,6) output(19,better,41) output(19,better,0) output(19,better,9) output(19,better,38) output(41,better,0) output(41,better,9) output(41,better,38) output(50,better,87) output(50,better,6) output(50,better,41) output(50,better,0) output(50,better,9) output(50,better,38) output(55,better,50) output(55,better,87) output(55,better,6) output(55,better,41) output(55,better,0) output(55,better,9) output(55,better,38) output(87,better,6) output(87,better,41) output(87,better,0) output(87,better,9) output(87,better,38)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.097 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 298.229s (Solving: 283.56s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1148.338s
Threads      : 4        (Winner: 4)

Choices      : 5546431  (Domain: 767)
Conflicts    : 964941   (Analyzed: 964939)
Restarts     : 1076     (Average: 896.78 Last: 72592)
Model-Level  : 1125.1  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 968122   (Deleted: 834010)
  Binary     : 376      (Ratio:   0.04%)
  Ternary    : 218      (Ratio:   0.02%)
  Conflict   : 964939   (Average Length: 1653.3 Ratio:  99.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3183     (Average Length:  228.7 Ratio:   0.33%) 
  Distributed: 1061     (Ratio:   0.11% Average LBD: 3.42) 
  Integrated : 3183     (Ratio: 300.00% Unit: 1 Average Jumps: 8.00)
Backjumps    : 964939   (Average:  3.84 Max: 2888 Sum: 3701725)
  Executed   : 964938   (Average:  3.84 Max: 2888 Sum: 3701685 Ratio: 100.00%)
  Bounded    : 1        (Average: 40.00 Max:  40 Sum:     40 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(1))  ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  5 :: not atom(hasPrice(1))  ; 
  5 :: not atom(hasOiliness(2))  ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOftenSold(3)) ; 
  4 :: atom(hasPrice(3)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  6 :: not atom(hasOiliness(2))  ; 
  4 :: not atom(hasOftenSold(0))  ; 
  8 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasStyle(1))  ; 
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOftenSold(1)) ; 
  5 :: not atom(hasMinorGrp(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  3 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: not atom(hasMajorGrp(0))  ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(hasOftenSold(0))  ; 
  7 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(2)) ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasOftenSold(3)) 
}.
