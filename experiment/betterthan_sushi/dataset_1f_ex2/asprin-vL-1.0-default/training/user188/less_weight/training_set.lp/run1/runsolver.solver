asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,2) output(19,eq,11) output(19,eq,0) output(19,eq,6) output(19,eq,18) output(19,eq,16) output(19,eq,60) output(19,eq,35) output(19,eq,74) output(2,eq,11) output(2,eq,0) output(2,eq,6) output(2,eq,18) output(2,eq,16) output(2,eq,60) output(2,eq,35) output(2,eq,74) output(11,eq,0) output(11,eq,6) output(11,eq,18) output(11,eq,16) output(11,eq,60) output(11,eq,35) output(11,eq,74) output(0,eq,6) output(0,eq,18) output(0,eq,16) output(0,eq,60) output(0,eq,35) output(0,eq,74) output(6,eq,18) output(6,eq,16) output(6,eq,60) output(6,eq,35) output(6,eq,74) output(18,eq,16) output(18,eq,60) output(18,eq,35) output(18,eq,74) output(16,eq,60) output(16,eq,35) output(16,eq,74) output(60,eq,35) output(60,eq,74) output(35,eq,74)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasOiliness(3))),10) preference(1,less(weight)) output(60,better,74) output(0,better,74) output(2,better,74) output(6,better,74) output(11,better,74) output(16,better,74) output(18,better,74) output(19,better,74) output(35,better,74) output(19,eq,2) output(19,eq,11) output(19,eq,0) output(19,eq,6) output(19,eq,18) output(19,eq,16) output(19,eq,60) output(19,eq,35) output(2,eq,11) output(2,eq,0) output(2,eq,6) output(2,eq,18) output(2,eq,16) output(2,eq,60) output(2,eq,35) output(11,eq,0) output(11,eq,6) output(11,eq,18) output(11,eq,16) output(11,eq,60) output(11,eq,35) output(0,eq,6) output(0,eq,18) output(0,eq,16) output(0,eq,60) output(0,eq,35) output(6,eq,18) output(6,eq,16) output(6,eq,60) output(6,eq,35) output(18,eq,16) output(18,eq,60) output(18,eq,35) output(16,eq,60) output(16,eq,35) output(60,eq,35)
Optimization: 36 1
Answer: 3
preference(1,(1,13),1,for(atom(hasOftenSold(1))),10) preference(1,(1,14),1,for(atom(hasOiliness(3))),10) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,35) output(0,better,74) output(2,better,35) output(2,better,74) output(6,better,35) output(6,better,74) output(11,better,35) output(11,better,74) output(16,better,35) output(16,better,74) output(18,better,35) output(18,better,74) output(19,better,35) output(19,better,74) output(19,eq,2) output(19,eq,11) output(19,eq,0) output(19,eq,6) output(19,eq,18) output(19,eq,16) output(19,eq,60) output(2,eq,11) output(2,eq,0) output(2,eq,6) output(2,eq,18) output(2,eq,16) output(2,eq,60) output(11,eq,0) output(11,eq,6) output(11,eq,18) output(11,eq,16) output(11,eq,60) output(0,eq,6) output(0,eq,18) output(0,eq,16) output(0,eq,60) output(6,eq,18) output(6,eq,16) output(6,eq,60) output(18,eq,16) output(18,eq,60) output(16,eq,60) output(35,eq,74)
Optimization: 29 2
Answer: 4
preference(1,(1,12),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),10) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,18) output(0,better,35) output(0,better,74) output(2,better,18) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,35) output(6,better,74) output(11,better,18) output(11,better,35) output(11,better,74) output(16,better,35) output(16,better,74) output(19,better,18) output(19,better,35) output(19,better,74) output(18,worse,16) output(18,worse,60) output(19,eq,2) output(19,eq,11) output(19,eq,0) output(19,eq,6) output(19,eq,16) output(19,eq,60) output(2,eq,11) output(2,eq,0) output(2,eq,6) output(2,eq,16) output(2,eq,60) output(11,eq,0) output(11,eq,6) output(11,eq,16) output(11,eq,60) output(0,eq,6) output(0,eq,16) output(0,eq,60) output(6,eq,16) output(6,eq,60) output(18,eq,35) output(18,eq,74) output(16,eq,60) output(35,eq,74)
Optimization: 26 3
Answer: 5
preference(1,(1,10),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,12),1,for(atom(hasOftenSold(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,18) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,18) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,35) output(6,better,74) output(11,better,18) output(11,better,35) output(11,better,74) output(16,better,35) output(16,better,74) output(19,better,11) output(19,better,18) output(19,better,35) output(19,better,74) output(11,worse,0) output(11,worse,6) output(11,worse,16) output(11,worse,60) output(18,worse,16) output(18,worse,60) output(19,eq,2) output(19,eq,0) output(19,eq,6) output(19,eq,16) output(19,eq,60) output(2,eq,0) output(2,eq,6) output(2,eq,16) output(2,eq,60) output(0,eq,6) output(0,eq,16) output(0,eq,60) output(6,eq,16) output(6,eq,60) output(18,eq,35) output(18,eq,74) output(16,eq,60) output(35,eq,74)
Optimization: 24 4
Answer: 6
preference(1,(1,2),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasOftenSold(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,18) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,18) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,35) output(6,better,74) output(11,better,18) output(11,better,35) output(11,better,74) output(16,better,35) output(16,better,74) output(19,better,11) output(19,better,0) output(19,better,18) output(19,better,35) output(19,better,74) output(0,worse,6) output(0,worse,16) output(0,worse,60) output(11,worse,6) output(11,worse,16) output(11,worse,60) output(18,worse,16) output(18,worse,60) output(19,eq,2) output(19,eq,6) output(19,eq,16) output(19,eq,60) output(2,eq,6) output(2,eq,16) output(2,eq,60) output(11,eq,0) output(6,eq,16) output(6,eq,60) output(18,eq,35) output(18,eq,74) output(16,eq,60) output(35,eq,74)
Optimization: 22 5
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,12),1,for(atom(hasOftenSold(1))),10) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,18) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,18) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,35) output(6,better,74) output(11,better,18) output(11,better,35) output(11,better,74) output(16,better,35) output(16,better,74) output(18,better,35) output(19,better,11) output(19,better,0) output(19,better,18) output(19,better,35) output(19,better,74) output(0,worse,6) output(0,worse,16) output(0,worse,60) output(11,worse,0) output(11,worse,6) output(11,worse,16) output(11,worse,60) output(18,worse,16) output(18,worse,60) output(35,worse,74) output(19,eq,2) output(19,eq,6) output(19,eq,16) output(19,eq,60) output(2,eq,6) output(2,eq,16) output(2,eq,60) output(6,eq,16) output(6,eq,60) output(18,eq,74) output(16,eq,60)
Optimization: 21 6
Answer: 8
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,2),1,for(atom(hasOiliness(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,5),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasOftenSold(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),9) preference(1,less(weight)) output(2,better,11) output(2,better,0) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,60) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(60,worse,35) output(0,worse,6) output(0,worse,18) output(0,worse,16) output(0,worse,35) output(2,worse,18) output(2,worse,16) output(6,worse,18) output(6,worse,16) output(11,worse,6) output(11,worse,18) output(11,worse,16) output(11,worse,35) output(19,worse,18) output(19,eq,16) output(2,eq,6) output(0,eq,60) output(0,eq,74) output(60,eq,74)
Optimization: 19 11
Answer: 9
preference(1,(1,9),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,2),1,for(atom(hasOftenSold(2))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,5),1,for(atom(hasOftenSold(1))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),5) preference(1,less(weight)) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,6) output(11,better,18) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,6) output(19,better,18) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(60,worse,35) output(6,worse,16) output(11,worse,0) output(18,worse,16) output(19,worse,2) output(19,worse,0) output(19,eq,11) output(19,eq,16) output(2,eq,0) output(11,eq,16) output(6,eq,18) output(60,eq,74)
Optimization: 12 11
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,2),1,for(atom(hasOftenSold(2))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,5),1,for(atom(hasOftenSold(1))),3) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,9),1,for(atom(hasStyle(0))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),5) preference(1,less(weight)) output(60,better,74) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,6) output(11,better,18) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,6) output(19,better,18) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74) output(6,worse,16) output(11,worse,0) output(18,worse,16) output(19,worse,2) output(19,worse,0) output(19,eq,11) output(19,eq,16) output(2,eq,0) output(11,eq,16) output(6,eq,18) output(60,eq,35)
Optimization: 11 12
Answer: 11
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),10) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),6) preference(1,(1,6),1,for(atom(hasPrice(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasStyle(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,13),1,for(atom(hasOiliness(3))),9) preference(1,(1,14),1,for(atom(hasPrice(2))),10) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 12
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(7)))),4) preference(1,(1,7),1,for(neg(atom(hasOftenSold(3)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,3),1,for(atom(hasOiliness(2))),3) preference(1,(1,4),1,for(atom(hasOiliness(3))),5) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,9),1,for(atom(hasPrice(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,(1,14),1,for(atom(hasOftenSold(1))),7) preference(1,less(weight)) output(60,better,35) output(60,better,74) output(0,better,6) output(0,better,18) output(0,better,16) output(0,better,60) output(0,better,35) output(0,better,74) output(2,better,11) output(2,better,0) output(2,better,6) output(2,better,18) output(2,better,16) output(2,better,60) output(2,better,35) output(2,better,74) output(6,better,18) output(6,better,16) output(6,better,60) output(6,better,35) output(6,better,74) output(11,better,0) output(11,better,6) output(11,better,18) output(11,better,16) output(11,better,60) output(11,better,35) output(11,better,74) output(16,better,60) output(16,better,35) output(16,better,74) output(18,better,16) output(18,better,60) output(18,better,35) output(18,better,74) output(19,better,2) output(19,better,11) output(19,better,0) output(19,better,6) output(19,better,18) output(19,better,16) output(19,better,60) output(19,better,35) output(19,better,74) output(35,better,74)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.174 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 298.362s (Solving: 283.32s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 1146.924s
Threads      : 4        (Winner: 4)

Choices      : 4553718  (Domain: 881)
Conflicts    : 887638   (Analyzed: 887636)
Restarts     : 879      (Average: 1009.82 Last: 83456)
Model-Level  : 1185.3  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 889343   (Deleted: 801825)
  Binary     : 304      (Ratio:   0.03%)
  Ternary    : 87       (Ratio:   0.01%)
  Conflict   : 887636   (Average Length: 1933.9 Ratio:  99.81%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 1707     (Average Length:  189.2 Ratio:   0.19%) 
  Distributed: 569      (Ratio:   0.06% Average LBD: 3.26) 
  Integrated : 1707     (Ratio: 300.00% Unit: 7 Average Jumps: 3.57)
Backjumps    : 887636   (Average:  3.09 Max: 3973 Sum: 2741103)
  Executed   : 887635   (Average:  3.09 Max: 3973 Sum: 2741090 Ratio: 100.00%)
  Bounded    : 1        (Average: 13.00 Max:  13 Sum:     13 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasOiliness(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  10 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasOiliness(3)) ; 
  9 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  10 :: not atom(hasMajorGrp(0))  ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOiliness(3)) ; 
  5 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOiliness(3)) ; 
  5 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPrice(3)) ; 
  10 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasPrice(0)) ; 
  4 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: not atom(hasMinorGrp(7))  ; 
  3 :: atom(hasOiliness(2)) ; 
  5 :: atom(hasOiliness(3)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  1 :: not atom(hasOftenSold(3))  ; 
  1 :: atom(hasPrice(3)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasPrice(0)) ; 
  7 :: atom(hasOftenSold(1)) 
}.
