asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,42) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(15,eq,28) output(15,eq,92) output(34,eq,54) output(34,eq,4) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,28) output(34,eq,92) output(54,eq,4) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,28) output(54,eq,92) output(4,eq,42) output(4,eq,11) output(4,eq,17) output(4,eq,0) output(4,eq,28) output(4,eq,92) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,28) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,28) output(11,eq,92) output(17,eq,0) output(17,eq,28) output(17,eq,92) output(0,eq,28) output(0,eq,92) output(28,eq,92)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,28) output(4,better,28) output(11,better,28) output(15,better,28) output(17,better,28) output(34,better,28) output(42,better,28) output(54,better,28) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,42) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,4) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,4) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(4,eq,42) output(4,eq,11) output(4,eq,17) output(4,eq,0) output(4,eq,92) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,92) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 37 1
Answer: 3
preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,28) output(11,better,28) output(15,better,4) output(15,better,28) output(17,better,28) output(34,better,4) output(34,better,28) output(42,better,28) output(54,better,4) output(54,better,28) output(4,worse,42) output(4,worse,11) output(4,worse,17) output(4,worse,0) output(4,worse,92) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,42) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,42) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,42) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(4,eq,28) output(42,eq,11) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(11,eq,92) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 35 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(0,better,28) output(4,better,11) output(4,better,28) output(15,better,11) output(15,better,28) output(17,better,28) output(34,better,11) output(34,better,28) output(42,better,11) output(42,better,28) output(54,better,11) output(54,better,28) output(11,worse,17) output(11,worse,0) output(11,worse,92) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,42) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,4) output(34,eq,42) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,4) output(54,eq,42) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(4,eq,42) output(4,eq,17) output(4,eq,0) output(4,eq,92) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,28) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 33 2
Answer: 5
preference(1,(1,12),1,for(atom(hasOiliness(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(0,better,28) output(15,better,4) output(15,better,11) output(15,better,28) output(17,better,28) output(34,better,4) output(34,better,11) output(34,better,28) output(42,better,11) output(42,better,28) output(54,better,4) output(54,better,11) output(54,better,28) output(4,worse,42) output(4,worse,17) output(4,worse,0) output(4,worse,92) output(11,worse,17) output(11,worse,0) output(11,worse,92) output(28,worse,92) output(15,eq,34) output(15,eq,54) output(15,eq,42) output(15,eq,17) output(15,eq,0) output(15,eq,92) output(34,eq,54) output(34,eq,42) output(34,eq,17) output(34,eq,0) output(34,eq,92) output(54,eq,42) output(54,eq,17) output(54,eq,0) output(54,eq,92) output(4,eq,11) output(4,eq,28) output(42,eq,17) output(42,eq,0) output(42,eq,92) output(11,eq,28) output(17,eq,0) output(17,eq,92) output(0,eq,92)
Optimization: 32 3
Answer: 6
preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),10) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,28) output(4,better,92) output(11,better,28) output(11,better,92) output(15,better,42) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(34,better,42) output(34,better,28) output(34,better,92) output(54,better,42) output(54,better,28) output(54,better,92) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,11) output(15,eq,17) output(15,eq,0) output(34,eq,54) output(34,eq,4) output(34,eq,11) output(34,eq,17) output(34,eq,0) output(54,eq,4) output(54,eq,11) output(54,eq,17) output(54,eq,0) output(4,eq,11) output(4,eq,17) output(4,eq,0) output(42,eq,28) output(42,eq,92) output(11,eq,17) output(11,eq,0) output(17,eq,0) output(28,eq,92)
Optimization: 27 2
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),10) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,28) output(4,better,92) output(15,better,42) output(15,better,11) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(34,better,42) output(34,better,11) output(34,better,28) output(34,better,92) output(54,better,42) output(54,better,11) output(54,better,28) output(54,better,92) output(11,worse,17) output(11,worse,0) output(42,worse,17) output(42,worse,0) output(15,eq,34) output(15,eq,54) output(15,eq,4) output(15,eq,17) output(15,eq,0) output(34,eq,54) output(34,eq,4) output(34,eq,17) output(34,eq,0) output(54,eq,4) output(54,eq,17) output(54,eq,0) output(4,eq,17) output(4,eq,0) output(42,eq,11) output(42,eq,28) output(42,eq,92) output(11,eq,28) output(11,eq,92) output(17,eq,0) output(28,eq,92)
Optimization: 25 3
Answer: 8
preference(1,(1,1),1,for(atom(hasOftenSold(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasOftenSold(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasOftenSold(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,28) output(15,better,28) output(17,better,28) output(34,better,54) output(34,better,11) output(34,better,17) output(34,better,28) output(42,better,11) output(42,better,17) output(42,better,28) output(54,better,17) output(54,better,28) output(11,worse,0) output(11,worse,92) output(15,worse,34) output(15,worse,54) output(15,worse,4) output(15,worse,42) output(15,worse,11) output(15,worse,0) output(15,worse,92) output(17,worse,0) output(17,worse,92) output(28,worse,92) output(34,worse,4) output(34,worse,0) output(42,worse,0) output(54,worse,4) output(54,worse,42) output(54,worse,0) output(54,worse,92) output(15,eq,17) output(34,eq,42) output(34,eq,92) output(54,eq,11) output(42,eq,92)
Optimization: 24 8
Answer: 9
preference(1,(1,1),1,for(atom(hasOftenSold(2))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasOftenSold(1))),2) preference(1,(1,14),1,for(atom(hasOftenSold(0))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,28) output(15,better,28) output(17,better,28) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,28) output(54,better,17) output(54,better,28) output(4,worse,0) output(11,worse,0) output(15,worse,34) output(15,worse,54) output(15,worse,4) output(15,worse,42) output(15,worse,11) output(15,worse,0) output(15,worse,92) output(17,worse,0) output(17,worse,92) output(28,worse,92) output(34,worse,0) output(42,worse,0) output(54,worse,4) output(54,worse,0) output(15,eq,17) output(54,eq,42) output(54,eq,11) output(54,eq,92) output(42,eq,11) output(42,eq,92) output(11,eq,92)
Optimization: 23 10
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasOiliness(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(2))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasOftenSold(1))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(0,better,28) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,54) output(15,better,4) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(34,better,54) output(34,better,4) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,28) output(0,worse,92) output(4,worse,42) output(4,worse,11) output(4,worse,17) output(4,worse,0) output(4,worse,28) output(4,worse,92) output(15,worse,11) output(17,worse,92) output(28,worse,92) output(34,worse,11) output(42,worse,11) output(54,worse,42) output(54,worse,11) output(54,worse,92) output(15,eq,34) output(15,eq,42) output(34,eq,42) output(54,eq,17) output(54,eq,0) output(17,eq,0)
Optimization: 21 12
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasOiliness(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(2))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasOftenSold(1))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(0,better,28) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,54) output(15,better,4) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(34,better,54) output(34,better,4) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,28) output(0,worse,92) output(4,worse,42) output(4,worse,11) output(15,worse,11) output(17,worse,92) output(28,worse,92) output(34,worse,11) output(42,worse,11) output(54,worse,4) output(54,worse,42) output(54,worse,11) output(54,worse,92) output(15,eq,34) output(15,eq,42) output(34,eq,42) output(54,eq,17) output(54,eq,0) output(17,eq,0)
Optimization: 18 11
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasOiliness(2)))),10) preference(1,(1,6),1,for(neg(atom(hasOiliness(1)))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(2))),3) preference(1,(1,5),1,for(atom(hasOftenSold(3))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,12),1,for(atom(hasOftenSold(1))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),6) preference(1,less(weight)) output(0,better,28) output(4,better,17) output(4,better,0) output(4,better,28) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,54) output(15,better,4) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(34,better,54) output(34,better,4) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,0) output(54,better,28) output(0,worse,92) output(4,worse,42) output(4,worse,11) output(15,worse,11) output(17,worse,92) output(28,worse,92) output(34,worse,11) output(42,worse,11) output(54,worse,4) output(54,worse,42) output(54,worse,11) output(54,worse,92) output(15,eq,34) output(15,eq,42) output(34,eq,42) output(54,eq,17) output(4,eq,92)
Optimization: 17 12
Answer: 13
preference(1,(1,12),1,for(neg(atom(hasMinorGrp(7)))),2) preference(1,(1,1),1,for(atom(hasOiliness(0))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),10) preference(1,(1,3),1,for(atom(hasPrice(2))),8) preference(1,(1,4),1,for(atom(hasPrice(1))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,7),1,for(atom(hasOftenSold(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,9),1,for(atom(hasOftenSold(2))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,11),1,for(atom(hasOftenSold(3))),4) preference(1,(1,13),1,for(atom(hasOiliness(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(0,better,28) output(4,better,0) output(4,better,28) output(11,better,17) output(11,better,0) output(11,better,28) output(15,better,4) output(15,better,0) output(15,better,28) output(17,better,0) output(17,better,28) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,17) output(42,better,0) output(42,better,28) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(0,worse,92) output(4,worse,42) output(4,worse,11) output(4,worse,17) output(4,worse,92) output(15,worse,34) output(15,worse,54) output(15,worse,42) output(15,worse,11) output(15,worse,17) output(15,worse,92) output(17,worse,92) output(28,worse,92) output(42,eq,11) output(42,eq,92) output(11,eq,92)
Optimization: 16 14
Answer: 14
preference(1,(1,13),1,for(neg(atom(hasOiliness(2)))),10) preference(1,(1,1),1,for(atom(hasPrice(3))),5) preference(1,(1,2),1,for(atom(hasPrice(2))),2) preference(1,(1,3),1,for(atom(hasOiliness(2))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,8),1,for(atom(hasOftenSold(0))),4) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,11),1,for(atom(hasOftenSold(1))),3) preference(1,(1,12),1,for(atom(hasOftenSold(3))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(4,better,0) output(11,better,17) output(11,better,0) output(11,better,28) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(34,better,54) output(34,better,4) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(0,worse,28) output(0,worse,92) output(4,worse,42) output(4,worse,11) output(4,worse,28) output(4,worse,92) output(11,worse,92) output(15,worse,42) output(17,worse,28) output(17,worse,92) output(28,worse,92) output(34,worse,42) output(54,worse,42) output(54,worse,92) output(4,eq,17)
Optimization: 15 14
Answer: 15
preference(1,(1,13),1,for(neg(atom(hasOiliness(2)))),10) preference(1,(1,1),1,for(atom(hasPrice(3))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,3),1,for(atom(hasOiliness(2))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),3) preference(1,(1,7),1,for(atom(hasOftenSold(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasOftenSold(3))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasPrice(2))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),3) preference(1,less(weight)) output(4,better,0) output(11,better,17) output(11,better,0) output(11,better,28) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(34,better,54) output(34,better,4) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(0,worse,28) output(0,worse,92) output(4,worse,42) output(4,worse,11) output(4,worse,92) output(11,worse,92) output(17,worse,92) output(28,worse,92) output(34,worse,42) output(54,worse,42) output(54,worse,92) output(4,eq,17) output(4,eq,28) output(17,eq,28)
Optimization: 14 14
Answer: 16
preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),2) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),7) preference(1,(1,1),1,for(atom(hasPrice(3))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasPrice(1))),3) preference(1,(1,4),1,for(atom(hasOftenSold(3))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,7),1,for(atom(hasPrice(2))),8) preference(1,(1,8),1,for(atom(hasOftenSold(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,13),1,for(atom(hasPrice(0))),1) preference(1,(1,14),1,for(atom(hasOiliness(2))),4) preference(1,less(weight)) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(11,better,0) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(54,better,4) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(0,worse,28) output(0,worse,92) output(4,worse,42) output(4,worse,92) output(11,worse,17) output(11,worse,28) output(11,worse,92) output(17,worse,28) output(17,worse,92) output(28,worse,92) output(54,eq,42) output(54,eq,92) output(42,eq,92)
Optimization: 13 14
Answer: 17
preference(1,(1,5),1,for(neg(atom(hasMinorGrp(7)))),1) preference(1,(1,9),1,for(neg(atom(hasOftenSold(3)))),5) preference(1,(1,1),1,for(atom(hasOiliness(0))),10) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),1) preference(1,(1,7),1,for(atom(hasOftenSold(1))),4) preference(1,(1,8),1,for(atom(hasOftenSold(0))),2) preference(1,(1,10),1,for(atom(hasPrice(2))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,13),1,for(atom(hasOftenSold(3))),9) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,92) output(11,better,0) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,0) output(42,better,92) output(54,better,42) output(54,better,11) output(54,better,0) output(54,better,92) output(0,worse,28) output(0,worse,92) output(4,worse,28) output(11,worse,17) output(11,worse,28) output(17,worse,28) output(42,worse,17) output(42,worse,28) output(54,worse,4) output(54,worse,17) output(54,worse,28) output(42,eq,11)
Optimization: 12 14
Answer: 18
preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),8) preference(1,(1,13),1,for(neg(atom(hasOftenSold(3)))),8) preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,4),1,for(atom(hasOiliness(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,7),1,for(atom(hasOftenSold(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,10),1,for(atom(hasPrice(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasOftenSold(3))),3) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,92) output(54,better,42) output(54,better,11) output(54,better,28) output(54,better,92) output(11,worse,17) output(11,worse,0) output(11,worse,28) output(15,worse,4) output(34,worse,4) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(54,worse,4) output(54,worse,17) output(54,worse,0)
Optimization: 11 14
Answer: 19
preference(1,(1,8),1,for(neg(atom(hasMinorGrp(0)))),8) preference(1,(1,13),1,for(neg(atom(hasOftenSold(3)))),8) preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,2),1,for(atom(hasPrice(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,4),1,for(atom(hasOiliness(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,7),1,for(atom(hasPrice(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,10),1,for(atom(hasPrice(2))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasOftenSold(3))),3) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,92) output(54,better,42) output(54,better,11) output(54,better,28) output(54,better,92) output(11,worse,17) output(11,worse,0) output(11,worse,28) output(34,worse,4) output(42,worse,17) output(42,worse,0) output(42,worse,28) output(54,worse,4) output(54,worse,17) output(54,eq,0)
Optimization: 10 14
Answer: 20
preference(1,(1,4),1,for(neg(atom(hasOiliness(0)))),1) preference(1,(1,7),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),6) preference(1,(1,13),1,for(neg(atom(hasPrice(1)))),8) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(2))),5) preference(1,(1,5),1,for(atom(hasOftenSold(3))),9) preference(1,(1,6),1,for(atom(hasOiliness(2))),10) preference(1,(1,8),1,for(atom(hasOftenSold(2))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasOftenSold(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),7) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,11) output(4,better,28) output(4,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,0) output(54,better,28) output(54,better,92) output(4,worse,42) output(4,worse,17) output(4,worse,0) output(11,worse,17) output(11,worse,0) output(11,worse,28) output(11,worse,92) output(42,worse,17) output(54,eq,17)
Optimization: 9 14
Answer: 21
preference(1,(1,3),1,for(neg(atom(hasOftenSold(2)))),3) preference(1,(1,10),1,for(neg(atom(hasOftenSold(3)))),6) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,2),1,for(atom(hasOftenSold(3))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,6),1,for(atom(hasOiliness(0))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasPrice(2))),8) preference(1,(1,11),1,for(atom(hasOftenSold(1))),1) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,14),1,for(atom(hasOftenSold(0))),1) preference(1,less(weight)) output(0,better,28) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(11,better,17) output(11,better,0) output(11,better,28) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(0,worse,92) output(4,worse,42) output(4,worse,92) output(11,worse,92) output(17,worse,92) output(28,worse,92) output(34,eq,54) output(42,eq,92)
Optimization: 8 14
Answer: 22
preference(1,(1,2),1,for(neg(atom(hasOiliness(1)))),3) preference(1,(1,8),1,for(neg(atom(hasOftenSold(2)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasOiliness(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,7),1,for(atom(hasOftenSold(2))),9) preference(1,(1,9),1,for(atom(hasOftenSold(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasOiliness(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,54) output(15,better,4) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(4,worse,42) output(4,worse,11) output(15,worse,34) output(54,worse,42) output(15,eq,42) output(54,eq,11) output(17,eq,0)
Optimization: 7 12
Answer: 23
preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,11),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,5),1,for(atom(hasPrice(2))),8) preference(1,(1,8),1,for(atom(hasOftenSold(3))),2) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasOftenSold(0))),8) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(11,worse,17) output(11,worse,0) output(42,worse,11) output(42,worse,17) output(42,worse,0) output(34,eq,54)
Optimization: 6 14
Answer: 24
preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,11),1,for(neg(atom(hasPrice(1)))),5) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,5),1,for(atom(hasPrice(2))),8) preference(1,(1,8),1,for(atom(hasOftenSold(3))),2) preference(1,(1,9),1,for(atom(hasPrice(0))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasOftenSold(0))),8) preference(1,(1,13),1,for(atom(hasPrice(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(11,worse,17) output(11,worse,0) output(42,worse,11) output(42,worse,17) output(42,worse,0)
Optimization: 5 14
Answer: 25
preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),9) preference(1,(1,7),1,for(neg(atom(hasOftenSold(0)))),7) preference(1,(1,1),1,for(atom(hasPrice(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,3),1,for(atom(hasOiliness(1))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasPrice(2))),8) preference(1,(1,8),1,for(atom(hasOftenSold(3))),2) preference(1,(1,9),1,for(atom(hasPrice(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,12),1,for(atom(hasOftenSold(0))),5) preference(1,(1,13),1,for(atom(hasPrice(3))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),6) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(11,worse,17) output(42,worse,11) output(42,worse,17) output(42,worse,0)
Optimization: 4 14
Answer: 26
preference(1,(1,6),1,for(neg(atom(hasOftenSold(2)))),3) preference(1,(1,9),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,1),1,for(atom(hasOiliness(2))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,5),1,for(atom(hasOftenSold(3))),4) preference(1,(1,7),1,for(atom(hasOftenSold(2))),4) preference(1,(1,8),1,for(atom(hasPrice(2))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),4) preference(1,(1,11),1,for(atom(hasOftenSold(0))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(42,worse,11) output(42,worse,17) output(42,worse,0)
Optimization: 3 14
Answer: 27
preference(1,(1,1),1,for(neg(atom(hasOftenSold(3)))),3) preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),4) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(6)))),2) preference(1,(1,12),1,for(neg(atom(hasOiliness(2)))),5) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,4),1,for(atom(hasOftenSold(3))),8) preference(1,(1,5),1,for(atom(hasOiliness(2))),9) preference(1,(1,6),1,for(atom(hasPrice(0))),1) preference(1,(1,7),1,for(atom(hasOftenSold(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,9),1,for(atom(hasOftenSold(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,14),1,for(atom(hasPrice(3))),3) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92) output(4,worse,42) output(54,worse,42)
Optimization: 2 14
Answer: 28
preference(1,(1,11),1,for(neg(atom(hasPrice(1)))),9) preference(1,(1,12),1,for(neg(atom(hasOiliness(1)))),9) preference(1,(1,1),1,for(atom(hasOiliness(1))),8) preference(1,(1,2),1,for(atom(hasPrice(2))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,4),1,for(atom(hasOftenSold(3))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasOiliness(2))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,8),1,for(atom(hasOftenSold(2))),3) preference(1,(1,9),1,for(atom(hasPrice(0))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),1) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 29
preference(1,(1,10),1,for(neg(atom(hasOiliness(2)))),1) preference(1,(1,1),1,for(atom(hasOftenSold(2))),4) preference(1,(1,3),1,for(atom(hasOiliness(0))),10) preference(1,(1,4),1,for(atom(hasOftenSold(0))),7) preference(1,(1,5),1,for(atom(hasOftenSold(3))),5) preference(1,(1,6),1,for(atom(hasOiliness(2))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasOftenSold(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92)
Optimization: 0 13
Answer: 30
preference(1,(1,2),1,for(neg(atom(hasMinorGrp(0)))),3) preference(1,(1,5),1,for(neg(atom(hasOftenSold(3)))),1) preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasOftenSold(1))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,9),1,for(atom(hasOftenSold(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,11),1,for(atom(hasPrice(3))),6) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,14),1,for(atom(hasOftenSold(3))),7) preference(1,less(weight)) output(0,better,28) output(0,better,92) output(4,better,42) output(4,better,11) output(4,better,17) output(4,better,0) output(4,better,28) output(4,better,92) output(11,better,17) output(11,better,0) output(11,better,28) output(11,better,92) output(15,better,34) output(15,better,54) output(15,better,4) output(15,better,42) output(15,better,11) output(15,better,17) output(15,better,0) output(15,better,28) output(15,better,92) output(17,better,0) output(17,better,28) output(17,better,92) output(28,better,92) output(34,better,54) output(34,better,4) output(34,better,42) output(34,better,11) output(34,better,17) output(34,better,0) output(34,better,28) output(34,better,92) output(42,better,11) output(42,better,17) output(42,better,0) output(42,better,28) output(42,better,92) output(54,better,4) output(54,better,42) output(54,better,11) output(54,better,17) output(54,better,0) output(54,better,28) output(54,better,92)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.176 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 598.065s (Solving: 583.77s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2348.230s
Threads      : 4        (Winner: 4)

Choices      : 11513089 (Domain: 2846)
Conflicts    : 2288309  (Analyzed: 2288307)
Restarts     : 2470     (Average: 926.44 Last: 180292)
Model-Level  : 1650.4  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2297307  (Deleted: 2090420)
  Binary     : 1004     (Ratio:   0.04%)
  Ternary    : 324      (Ratio:   0.01%)
  Conflict   : 2288307  (Average Length: 1762.4 Ratio:  99.61%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 9000     (Average Length:  251.1 Ratio:   0.39%) 
  Distributed: 3000     (Ratio:   0.13% Average LBD: 3.44) 
  Integrated : 9000     (Ratio: 300.00% Unit: 41 Average Jumps: 45.39)
Backjumps    : 2288307  (Average:  3.22 Max: 3958 Sum: 7367416)
  Executed   : 2288306  (Average:  3.22 Max: 3958 Sum: 7367399 Ratio: 100.00%)
  Bounded    : 1        (Average: 17.00 Max:  17 Sum:     17 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(2)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOftenSold(2)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasOiliness(2))  ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasOiliness(2))  ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasOiliness(2))  ; 
  1 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(2)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  8 :: not atom(hasOiliness(1))  ; 
  4 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(0)) ; 
  8 :: atom(hasPrice(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOftenSold(3)) ; 
  2 :: not atom(hasMinorGrp(7))  ; 
  10 :: atom(hasOiliness(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(3)) ; 
  2 :: atom(hasPrice(2)) ; 
  4 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasOftenSold(3)) ; 
  10 :: not atom(hasOiliness(2))  ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(0)) ; 
  8 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasPrice(2)) ; 
  10 :: not atom(hasOiliness(2))  ; 
  3 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(3)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasPrice(2)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasOftenSold(1))  ; 
  7 :: not atom(hasPrice(0))  ; 
  10 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(0)) ; 
  4 :: atom(hasOiliness(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: not atom(hasMinorGrp(7))  ; 
  1 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  5 :: not atom(hasOftenSold(3))  ; 
  8 :: atom(hasPrice(2)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  8 :: not atom(hasMinorGrp(0))  ; 
  9 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: not atom(hasOftenSold(3))  ; 
  3 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasOiliness(2)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(3)) ; 
  8 :: not atom(hasMinorGrp(0))  ; 
  9 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasPrice(2)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: not atom(hasOftenSold(3))  ; 
  3 :: atom(hasOftenSold(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOiliness(0))  ; 
  9 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(2)) ; 
  5 :: not atom(hasOiliness(2))  ; 
  6 :: atom(hasOftenSold(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  6 :: not atom(hasMinorGrp(6))  ; 
  3 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  8 :: not atom(hasPrice(1))  ; 
  3 :: not atom(hasMinorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  3 :: not atom(hasOftenSold(2))  ; 
  4 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(2)) ; 
  6 :: not atom(hasOftenSold(3))  ; 
  1 :: atom(hasOftenSold(1)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(4)) ; 
  3 :: not atom(hasOiliness(1))  ; 
  6 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOiliness(2)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  1 :: not atom(hasOftenSold(2))  ; 
  2 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPrice(0)) ; 
  9 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasPrice(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: not atom(hasPrice(1))  ; 
  8 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasPrice(2)) ; 
  9 :: not atom(hasMinorGrp(1))  ; 
  7 :: not atom(hasOftenSold(0))  ; 
  2 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(3)) ; 
  6 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(2)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  4 :: atom(hasOftenSold(3)) ; 
  3 :: not atom(hasOftenSold(2))  ; 
  4 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasPrice(2)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  4 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasOftenSold(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasOftenSold(3))  ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: not atom(hasOiliness(1))  ; 
  8 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasOiliness(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOftenSold(0)) ; 
  2 :: not atom(hasMinorGrp(6))  ; 
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: not atom(hasOiliness(2))  ; 
  9 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(2)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasPrice(1))  ; 
  9 :: not atom(hasOiliness(1))  ; 
  2 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasOiliness(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  1 :: not atom(hasOiliness(2))  ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  3 :: not atom(hasMinorGrp(0))  ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  1 :: not atom(hasOftenSold(3))  ; 
  7 :: atom(hasOftenSold(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasPrice(3)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  7 :: atom(hasOftenSold(3)) 
}.
