asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,58) output(36,eq,49) output(36,eq,4) output(36,eq,33) output(36,eq,24) output(36,eq,28) output(20,eq,9) output(20,eq,38) output(20,eq,58) output(20,eq,49) output(20,eq,4) output(20,eq,33) output(20,eq,24) output(20,eq,28) output(9,eq,38) output(9,eq,58) output(9,eq,49) output(9,eq,4) output(9,eq,33) output(9,eq,24) output(9,eq,28) output(38,eq,58) output(38,eq,49) output(38,eq,4) output(38,eq,33) output(38,eq,24) output(38,eq,28) output(58,eq,49) output(58,eq,4) output(58,eq,33) output(58,eq,24) output(58,eq,28) output(49,eq,4) output(49,eq,33) output(49,eq,24) output(49,eq,28) output(4,eq,33) output(4,eq,24) output(4,eq,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 45 0
Answer: 2
preference(1,(1,14),1,for(atom(hasOftenSold(0))),10) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(9,better,58) output(9,better,49) output(20,better,58) output(20,better,49) output(36,better,58) output(36,better,49) output(49,worse,4) output(49,worse,33) output(49,worse,24) output(49,worse,28) output(58,worse,4) output(58,worse,33) output(58,worse,24) output(58,worse,28) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,4) output(36,eq,33) output(36,eq,24) output(36,eq,28) output(20,eq,9) output(20,eq,38) output(20,eq,4) output(20,eq,33) output(20,eq,24) output(20,eq,28) output(9,eq,38) output(9,eq,4) output(9,eq,33) output(9,eq,24) output(9,eq,28) output(38,eq,4) output(38,eq,33) output(38,eq,24) output(38,eq,28) output(58,eq,49) output(4,eq,33) output(4,eq,24) output(4,eq,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 37 1
Answer: 3
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),10) preference(1,less(weight)) output(38,better,49) output(38,better,4) output(9,better,49) output(9,better,4) output(20,better,49) output(20,better,4) output(36,better,49) output(36,better,4) output(58,better,49) output(58,better,4) output(4,worse,33) output(4,worse,24) output(4,worse,28) output(49,worse,33) output(49,worse,24) output(49,worse,28) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,58) output(36,eq,33) output(36,eq,24) output(36,eq,28) output(20,eq,9) output(20,eq,38) output(20,eq,58) output(20,eq,33) output(20,eq,24) output(20,eq,28) output(9,eq,38) output(9,eq,58) output(9,eq,33) output(9,eq,24) output(9,eq,28) output(38,eq,58) output(38,eq,33) output(38,eq,24) output(38,eq,28) output(58,eq,33) output(58,eq,24) output(58,eq,28) output(49,eq,4) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 35 2
Answer: 4
preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,(1,14),1,for(atom(hasOftenSold(0))),10) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(9,better,58) output(9,better,49) output(9,better,4) output(20,better,58) output(20,better,49) output(20,better,4) output(36,better,58) output(36,better,49) output(36,better,4) output(4,worse,33) output(4,worse,24) output(4,worse,28) output(49,worse,33) output(49,worse,24) output(49,worse,28) output(58,worse,33) output(58,worse,24) output(58,worse,28) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,33) output(36,eq,24) output(36,eq,28) output(20,eq,9) output(20,eq,38) output(20,eq,33) output(20,eq,24) output(20,eq,28) output(9,eq,38) output(9,eq,33) output(9,eq,24) output(9,eq,28) output(38,eq,33) output(38,eq,24) output(38,eq,28) output(58,eq,49) output(58,eq,4) output(49,eq,4) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 33 2
Answer: 5
preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,1),1,for(atom(hasPrice(3))),10) preference(1,(1,2),1,for(atom(hasOiliness(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,5),1,for(atom(hasOftenSold(0))),10) preference(1,(1,6),1,for(atom(hasOftenSold(3))),10) preference(1,(1,8),1,for(atom(hasOftenSold(2))),10) preference(1,(1,11),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(36,better,20) output(36,better,9) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(9,worse,38) output(20,worse,38) output(36,eq,38) output(20,eq,9) output(20,eq,58) output(20,eq,49) output(20,eq,4) output(20,eq,33) output(20,eq,24) output(20,eq,28) output(9,eq,58) output(9,eq,49) output(9,eq,4) output(9,eq,33) output(9,eq,24) output(9,eq,28) output(58,eq,49) output(58,eq,4) output(58,eq,33) output(58,eq,24) output(58,eq,28) output(49,eq,4) output(49,eq,33) output(49,eq,24) output(49,eq,28) output(4,eq,33) output(4,eq,24) output(4,eq,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 31 10
Answer: 6
preference(1,(1,5),1,for(atom(hasOftenSold(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,58) output(9,better,49) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,58) output(20,better,49) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,58) output(36,better,49) output(36,better,33) output(36,better,24) output(36,better,28) output(49,worse,4) output(58,worse,4) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,4) output(20,eq,9) output(20,eq,38) output(20,eq,4) output(9,eq,38) output(9,eq,4) output(38,eq,4) output(58,eq,49) output(58,eq,33) output(58,eq,24) output(58,eq,28) output(49,eq,33) output(49,eq,24) output(49,eq,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 22 2
Answer: 7
preference(1,(1,1),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasOftenSold(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),10) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(20,eq,9) output(20,eq,38) output(9,eq,38) output(58,eq,49) output(58,eq,4) output(58,eq,33) output(58,eq,24) output(58,eq,28) output(49,eq,4) output(49,eq,33) output(49,eq,24) output(49,eq,28) output(4,eq,33) output(4,eq,24) output(4,eq,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 21 4
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(7)))),1) preference(1,(1,10),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),10) preference(1,(1,3),1,for(atom(hasPrice(2))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),9) preference(1,less(weight)) output(38,better,58) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,33) output(49,better,24) output(49,better,28) output(38,worse,49) output(38,worse,4) output(38,worse,33) output(38,worse,24) output(38,worse,28) output(9,worse,49) output(9,worse,4) output(36,worse,20) output(36,worse,49) output(36,worse,4) output(49,worse,4) output(58,worse,49) output(58,worse,4) output(58,worse,33) output(58,worse,24) output(58,worse,28) output(20,eq,4) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 20 13
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(7)))),1) preference(1,(1,2),1,for(atom(hasPrice(1))),10) preference(1,(1,3),1,for(atom(hasPrice(2))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,10),1,for(atom(hasOiliness(0))),10) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasOftenSold(1))),9) preference(1,less(weight)) output(38,better,58) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(38,worse,49) output(38,worse,4) output(38,worse,33) output(38,worse,24) output(38,worse,28) output(9,worse,49) output(9,worse,4) output(36,worse,20) output(36,worse,49) output(36,worse,4) output(58,worse,49) output(58,worse,4) output(58,worse,33) output(58,worse,24) output(58,worse,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 18 14
Answer: 10
preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,1),1,for(atom(hasOftenSold(3))),4) preference(1,(1,2),1,for(atom(hasOftenSold(1))),8) preference(1,(1,3),1,for(atom(hasPrice(2))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,6),1,for(atom(hasOiliness(2))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,9),1,for(atom(hasStyle(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasOftenSold(0))),7) preference(1,(1,14),1,for(atom(hasPrice(3))),7) preference(1,less(weight)) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,38) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(38,worse,58) output(38,worse,49) output(9,worse,58) output(9,worse,49) output(36,worse,20) output(36,worse,9) output(36,worse,58) output(36,worse,49) output(20,eq,58) output(20,eq,49) output(58,eq,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 14 14
Answer: 11
preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,1),1,for(atom(hasOftenSold(3))),4) preference(1,(1,2),1,for(atom(hasOftenSold(1))),8) preference(1,(1,3),1,for(atom(hasPrice(2))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,6),1,for(atom(hasOiliness(2))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,9),1,for(atom(hasStyle(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,12),1,for(atom(hasPrice(1))),10) preference(1,(1,13),1,for(atom(hasOftenSold(0))),7) preference(1,(1,14),1,for(atom(hasPrice(3))),3) preference(1,less(weight)) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,38) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(38,worse,58) output(38,worse,49) output(9,worse,58) output(9,worse,49) output(36,worse,20) output(36,worse,9) output(36,worse,58) output(36,worse,49) output(58,eq,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 12 14
Progression : [ 1;12] (Error: 11)
Progression : [ 2;12] (Error: 5)
Progression : [ 3;12] (Error: 3)
Answer: 12
preference(1,(1,1),1,for(neg(atom(hasMinorGrp(4)))),1) preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),4) preference(1,(1,13),1,for(neg(atom(hasOiliness(1)))),7) preference(1,(1,14),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,2),1,for(atom(hasPrice(2))),2) preference(1,(1,3),1,for(atom(hasOiliness(2))),3) preference(1,(1,4),1,for(atom(hasOftenSold(1))),5) preference(1,(1,5),1,for(atom(hasStyle(0))),7) preference(1,(1,6),1,for(atom(hasPrice(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,9),1,for(atom(hasPrice(1))),2) preference(1,(1,10),1,for(atom(hasOftenSold(3))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,less(weight)) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(38,worse,58) output(38,worse,49) output(9,worse,58) output(9,worse,49) output(20,worse,58) output(36,worse,20) output(36,worse,58) output(36,worse,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 11 14
Answer: 13
preference(1,(1,12),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasStyle(0))),1) preference(1,(1,5),1,for(atom(hasOftenSold(0))),10) preference(1,(1,6),1,for(atom(hasOftenSold(1))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,9),1,for(atom(hasOftenSold(3))),1) preference(1,(1,10),1,for(atom(hasOftenSold(2))),1) preference(1,(1,11),1,for(atom(hasPrice(3))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 13
Progression : 3 [ 1;13] (Error: 12)
Answer: 14
preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),6) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(2)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),5) preference(1,(1,2),1,for(atom(hasOftenSold(1))),10) preference(1,(1,4),1,for(atom(hasPrice(3))),2) preference(1,(1,5),1,for(atom(hasPrice(2))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasOftenSold(2))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),2) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 12
Answer: 15
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasPrice(2))),1) preference(1,(1,7),1,for(atom(hasOftenSold(0))),2) preference(1,(1,8),1,for(atom(hasPrice(3))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 11
Answer: 16
preference(1,(1,9),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasOiliness(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,6),1,for(atom(hasPrice(2))),1) preference(1,(1,7),1,for(atom(hasOftenSold(0))),2) preference(1,(1,8),1,for(atom(hasPrice(3))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 10
Answer: 17
preference(1,(1,3),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,6),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,8),1,for(atom(hasOiliness(0))),3) preference(1,(1,9),1,for(atom(hasOftenSold(0))),6) preference(1,(1,10),1,for(atom(hasStyle(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,14),1,for(atom(hasOftenSold(2))),1) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 9
Answer: 18
preference(1,(1,12),1,for(neg(atom(hasStyle(1)))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,6),1,for(atom(hasOftenSold(2))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,9),1,for(atom(hasStyle(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,13),1,for(atom(hasPrice(2))),1) preference(1,(1,14),1,for(atom(hasOftenSold(0))),6) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 8
Progression : 3 [2;8] (Error: 3)
Answer: 19
preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(0))),2) preference(1,(1,2),1,for(atom(hasOftenSold(2))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 7
Answer: 20
preference(1,(1,6),1,for(neg(atom(hasOftenSold(1)))),1) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(2)))),10) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),4) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.103 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 3 6
Bounds       : 3 [2;6]
Calls        : 1
Time         : 597.606s (Solving: 585.69s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2353.593s
Threads      : 4        (Winner: 4)

Choices      : 9377805  (Domain: 1003)
Conflicts    : 1359094  (Analyzed: 1359089)
Restarts     : 1727     (Average: 786.97 Last: 18304)
Model-Level  : 1151.4  
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 1363201  (Deleted: 1221107)
  Binary     : 483      (Ratio:   0.04%)
  Ternary    : 612      (Ratio:   0.04%)
  Conflict   : 1359087  (Average Length: 1957.7 Ratio:  99.70%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4114     (Average Length:  182.7 Ratio:   0.30%) 
  Distributed: 1372     (Ratio:   0.10% Average LBD: 3.40) 
  Integrated : 4116     (Ratio: 300.00% Unit: 46 Average Jumps: 173.65)
Backjumps    : 1359089  (Average:  4.46 Max: 4515 Sum: 6061870)
  Executed   : 1359069  (Average:  4.46 Max: 4515 Sum: 6061485 Ratio:  99.99%)
  Bounded    : 20       (Average: 19.25 Max:  45 Sum:    385 Ratio:   0.01%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasOftenSold(3)) ; 
  10 :: not atom(hasOftenSold(1))  ; 
  10 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(1)) ; 
  7 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  1 :: not atom(hasMinorGrp(7))  ; 
  4 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(1)) ; 
  7 :: atom(hasPrice(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasOftenSold(1))  ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  1 :: not atom(hasMinorGrp(7))  ; 
  10 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOftenSold(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasOftenSold(1)) ; 
  7 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(2)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOftenSold(0)) ; 
  7 :: atom(hasPrice(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasOftenSold(1)) ; 
  7 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(2)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOftenSold(0)) ; 
  3 :: atom(hasPrice(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasMinorGrp(4))  ; 
  2 :: atom(hasPrice(2)) ; 
  3 :: atom(hasOiliness(2)) ; 
  5 :: atom(hasOftenSold(1)) ; 
  7 :: atom(hasStyle(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMajorGrp(0))  ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  7 :: not atom(hasOiliness(1))  ; 
  3 :: not atom(hasStyle(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasOftenSold(3)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  6 :: atom(hasPrice(3)) ; 
  2 :: not atom(hasStyle(1))  ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasPrice(3)) ; 
  1 :: atom(hasPrice(2)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: not atom(hasOftenSold(1))  ; 
  3 :: not atom(hasMinorGrp(2))  ; 
  4 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(3)) ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  2 :: atom(hasPrice(3)) ; 
  1 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  8 :: atom(hasMinorGrp(4)) ; 
  4 :: not atom(hasStyle(1))  ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOftenSold(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  3 :: not atom(hasStyle(1))  ; 
  1 :: atom(hasPrice(2)) ; 
  6 :: atom(hasOftenSold(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(0)) ; 
  1 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  9 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: not atom(hasOftenSold(1))  ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  10 :: not atom(hasMinorGrp(2))  ; 
  4 :: atom(hasMinorGrp(7)) 
}.
