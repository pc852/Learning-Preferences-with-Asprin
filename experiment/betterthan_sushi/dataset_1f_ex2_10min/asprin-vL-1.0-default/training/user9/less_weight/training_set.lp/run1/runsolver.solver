asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,43) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,43) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(37,eq,6) output(3,eq,1) output(3,eq,43) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(3,eq,6) output(1,eq,43) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(1,eq,6) output(43,eq,9) output(43,eq,36) output(43,eq,20) output(43,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,less(weight)) output(1,better,43) output(3,better,43) output(14,better,43) output(37,better,43) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(14,eq,6) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(37,eq,6) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(3,eq,6) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(1,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(36,eq,18) output(36,eq,6) output(20,eq,18) output(20,eq,6) output(18,eq,6)
Optimization: 41 1
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,6) output(3,better,43) output(3,better,6) output(9,better,6) output(14,better,43) output(14,better,6) output(18,better,6) output(20,better,6) output(36,better,6) output(37,better,43) output(37,better,6) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(14,eq,18) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(37,eq,18) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(3,eq,18) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(1,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(9,eq,18) output(36,eq,20) output(36,eq,18) output(20,eq,18)
Optimization: 33 2
Answer: 4
preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(1,better,18) output(1,better,6) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,43) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(37,eq,3) output(37,eq,1) output(37,eq,43) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(3,eq,1) output(3,eq,43) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(1,eq,43) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(43,eq,9) output(43,eq,36) output(43,eq,20) output(9,eq,36) output(9,eq,20) output(36,eq,20) output(18,eq,6)
Optimization: 29 2
Answer: 5
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),10) preference(1,less(weight)) output(1,better,43) output(1,better,18) output(1,better,6) output(3,better,43) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,43) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,18) output(37,better,6) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,9) output(14,eq,36) output(14,eq,20) output(37,eq,3) output(37,eq,1) output(37,eq,9) output(37,eq,36) output(37,eq,20) output(3,eq,1) output(3,eq,9) output(3,eq,36) output(3,eq,20) output(1,eq,9) output(1,eq,36) output(1,eq,20) output(43,eq,18) output(43,eq,6) output(9,eq,36) output(9,eq,20) output(36,eq,20) output(18,eq,6)
Optimization: 27 3
Answer: 6
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),10) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(9,worse,36) output(9,worse,20) output(43,worse,36) output(43,worse,20) output(14,eq,37) output(14,eq,3) output(14,eq,1) output(14,eq,36) output(14,eq,20) output(37,eq,3) output(37,eq,1) output(37,eq,36) output(37,eq,20) output(3,eq,1) output(3,eq,36) output(3,eq,20) output(1,eq,36) output(1,eq,20) output(43,eq,9) output(43,eq,18) output(43,eq,6) output(9,eq,18) output(9,eq,6) output(36,eq,20) output(18,eq,6)
Optimization: 25 4
Answer: 7
preference(1,(1,7),1,for(neg(atom(hasMajorGrp(0)))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasOftenSold(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,6) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(37,eq,18) output(3,eq,36) output(3,eq,20) output(43,eq,6) output(36,eq,20)
Optimization: 21 6
Answer: 8
preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,6) output(43,better,6) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(37,eq,18) output(3,eq,36) output(3,eq,20) output(43,eq,9) output(36,eq,20)
Optimization: 20 7
Answer: 9
preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,6) output(1,worse,36) output(1,worse,20) output(1,worse,18) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(3,eq,36) output(3,eq,20) output(43,eq,9) output(36,eq,20)
Optimization: 19 8
Answer: 10
preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,6) output(1,worse,36) output(1,worse,20) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,36) output(37,worse,20) output(43,worse,36) output(43,worse,20) output(14,eq,3) output(14,eq,36) output(14,eq,20) output(3,eq,36) output(3,eq,20) output(43,eq,9) output(43,eq,18) output(9,eq,18) output(36,eq,20)
Optimization: 18 8
Answer: 11
preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(1,worse,36) output(1,worse,20) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(43,worse,6) output(14,eq,36) output(14,eq,20) output(9,eq,18) output(36,eq,20)
Optimization: 17 10
Answer: 12
preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(3))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),6) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasOftenSold(2))),10) preference(1,(1,11),1,for(atom(hasPrice(3))),10) preference(1,(1,12),1,for(atom(hasOftenSold(0))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(1,worse,36) output(1,worse,20) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(14,worse,36) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(43,worse,18) output(14,eq,20) output(37,eq,3) output(43,eq,6)
Optimization: 16 14
Answer: 13
preference(1,(1,10),1,for(neg(atom(hasMajorGrp(0)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(3))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,4),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasPrice(3))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasOftenSold(2))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),9) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,6) output(1,worse,36) output(1,worse,20) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(14,worse,36) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(14,eq,20) output(37,eq,3) output(43,eq,18)
Optimization: 15 14
Answer: 14
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasOftenSold(2))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasPrice(3))),10) preference(1,(1,13),1,for(atom(hasOftenSold(3))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(1,better,18) output(1,better,6) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,3) output(14,better,1) output(14,better,9) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(1,worse,9) output(1,worse,36) output(3,worse,1) output(3,worse,43) output(3,worse,9) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(14,worse,37) output(14,worse,43) output(14,worse,36) output(43,worse,36) output(1,eq,20)
Optimization: 14 14
Answer: 15
preference(1,(1,5),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,4),1,for(atom(hasOiliness(0))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasOftenSold(2))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,11),1,for(atom(hasPrice(1))),6) preference(1,(1,12),1,for(atom(hasPrice(3))),10) preference(1,(1,13),1,for(atom(hasOftenSold(3))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),8) preference(1,less(weight)) output(1,better,9) output(1,better,18) output(1,better,6) output(3,better,9) output(3,better,18) output(3,better,6) output(9,better,6) output(14,better,3) output(14,better,1) output(14,better,9) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(1,worse,36) output(3,worse,1) output(3,worse,43) output(3,worse,36) output(3,worse,20) output(9,worse,36) output(9,worse,20) output(9,worse,18) output(14,worse,37) output(14,worse,43) output(14,worse,36) output(1,eq,20)
Optimization: 13 14
Answer: 16
preference(1,(1,8),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,10),1,for(neg(atom(hasOiliness(1)))),2) preference(1,(1,1),1,for(atom(hasOftenSold(1))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasOftenSold(2))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,6),1,for(atom(hasPrice(3))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasPrice(2))),4) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(14,worse,3) output(14,worse,1) output(36,worse,20) output(37,worse,3) output(37,worse,1) output(37,worse,9) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(37,eq,36) output(9,eq,20)
Optimization: 12 14
Answer: 17
preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,4),1,for(atom(hasPrice(3))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasPrice(2))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,1) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(37,eq,9) output(1,eq,36)
Optimization: 11 14
Answer: 18
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,4),1,for(atom(hasPrice(3))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasPrice(2))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,1) output(37,worse,36) output(37,worse,20) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(1,eq,36)
Optimization: 10 14
Answer: 19
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasOftenSold(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,4),1,for(atom(hasPrice(3))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasPrice(2))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(37,eq,1) output(37,eq,36) output(1,eq,36)
Optimization: 9 14
Answer: 20
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,13),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,1),1,for(atom(hasPrice(3))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,14),1,for(atom(hasPrice(2))),3) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,43) output(37,better,9) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(37,worse,1) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(37,eq,36)
Optimization: 8 14
Answer: 21
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,5),1,for(atom(hasPrice(2))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),9) preference(1,(1,10),1,for(atom(hasOiliness(3))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasPrice(3))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(9,worse,36) output(9,worse,20) output(37,worse,3) output(43,worse,9) output(43,worse,36) output(43,worse,20)
Optimization: 6 14
Answer: 22
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasOftenSold(1))),1) preference(1,(1,5),1,for(atom(hasPrice(2))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(0))),9) preference(1,(1,10),1,for(atom(hasOiliness(3))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasPrice(3))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),1) preference(1,less(weight)) output(1,better,43) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,18) output(43,better,6) output(37,worse,3) output(43,worse,9) output(43,worse,36) output(43,worse,20) output(1,eq,9)
Optimization: 5 14
Answer: 23
preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),4) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),3) preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,6),1,for(atom(hasOftenSold(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasOftenSold(0))),1) preference(1,(1,10),1,for(atom(hasPrice(2))),1) preference(1,(1,12),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasPrice(3))),6) preference(1,less(weight)) output(1,better,43) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,20) output(43,better,18) output(43,better,6) output(37,worse,3) output(43,worse,9) output(1,eq,9) output(43,eq,36)
Optimization: 4 14
Answer: 24
preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,6),1,for(atom(hasOftenSold(1))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),2) preference(1,(1,10),1,for(atom(hasOftenSold(3))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,12),1,for(atom(hasPrice(2))),2) preference(1,(1,13),1,for(atom(hasPrice(0))),9) preference(1,(1,14),1,for(atom(hasPrice(3))),9) preference(1,less(weight)) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(37,eq,3) output(9,eq,36)
Optimization: 3 14
Answer: 25
preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),4) preference(1,(1,14),1,for(neg(atom(hasMajorGrp(0)))),9) preference(1,(1,1),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,3),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasOftenSold(3))),3) preference(1,(1,5),1,for(atom(hasOftenSold(2))),9) preference(1,(1,6),1,for(atom(hasPrice(3))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,8),1,for(atom(hasPrice(1))),2) preference(1,(1,10),1,for(atom(hasOftenSold(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,12),1,for(atom(hasPrice(2))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6) output(1,worse,43) output(37,worse,3)
Optimization: 2 14
Answer: 26
preference(1,(1,1),1,for(neg(atom(hasOftenSold(3)))),6) preference(1,(1,3),1,for(neg(atom(hasOiliness(2)))),6) preference(1,(1,13),1,for(neg(atom(hasOftenSold(2)))),2) preference(1,(1,2),1,for(atom(hasOftenSold(3))),1) preference(1,(1,4),1,for(atom(hasOiliness(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasPrice(0))),4) preference(1,(1,7),1,for(atom(hasPrice(3))),1) preference(1,(1,8),1,for(atom(hasOftenSold(2))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 27
preference(1,(1,10),1,for(neg(atom(hasOftenSold(2)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,2),1,for(atom(hasOftenSold(3))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasStyle(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,6),1,for(atom(hasOftenSold(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasPrice(3))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 13
Answer: 28
preference(1,(1,10),1,for(neg(atom(hasOftenSold(2)))),4) preference(1,(1,1),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,2),1,for(atom(hasOftenSold(3))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasPrice(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasOftenSold(2))),2) preference(1,(1,13),1,for(atom(hasPrice(3))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 29
preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),4) preference(1,(1,12),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,4),1,for(atom(hasOftenSold(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasPrice(3))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 11
Answer: 30
preference(1,(1,11),1,for(neg(atom(hasOiliness(2)))),4) preference(1,(1,12),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,4),1,for(atom(hasOftenSold(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasPrice(3))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(1,better,43) output(1,better,9) output(1,better,36) output(1,better,20) output(1,better,18) output(1,better,6) output(3,better,1) output(3,better,43) output(3,better,9) output(3,better,36) output(3,better,20) output(3,better,18) output(3,better,6) output(9,better,36) output(9,better,20) output(9,better,18) output(9,better,6) output(14,better,37) output(14,better,3) output(14,better,1) output(14,better,43) output(14,better,9) output(14,better,36) output(14,better,20) output(14,better,18) output(14,better,6) output(18,better,6) output(20,better,18) output(20,better,6) output(36,better,20) output(36,better,18) output(36,better,6) output(37,better,3) output(37,better,1) output(37,better,43) output(37,better,9) output(37,better,36) output(37,better,20) output(37,better,18) output(37,better,6) output(43,better,9) output(43,better,36) output(43,better,20) output(43,better,18) output(43,better,6)
Optimization: 0 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.235 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 598.374s (Solving: 584.58s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2343.896s
Threads      : 4        (Winner: 4)

Choices      : 9717821  (Domain: 2264)
Conflicts    : 1963745  (Analyzed: 1963743)
Restarts     : 1962     (Average: 1000.89 Last: 196967)
Model-Level  : 1507.4  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1969575  (Deleted: 1801309)
  Binary     : 756      (Ratio:   0.04%)
  Ternary    : 424      (Ratio:   0.02%)
  Conflict   : 1963743  (Average Length: 1907.1 Ratio:  99.70%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 5832     (Average Length:  233.4 Ratio:   0.30%) 
  Distributed: 1944     (Ratio:   0.10% Average LBD: 3.38) 
  Integrated : 5832     (Ratio: 300.00% Unit: 6 Average Jumps: 66.83)
Backjumps    : 1963743  (Average:  3.06 Max: 3459 Sum: 6003138)
  Executed   : 1963742  (Average:  3.06 Max: 3459 Sum: 6003126 Ratio: 100.00%)
  Bounded    : 1        (Average: 12.00 Max:  12 Sum:     12 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  10 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  8 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  10 :: atom(hasPrice(3)) ; 
  10 :: atom(hasOftenSold(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(3)) ; 
  2 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  3 :: not atom(hasMajorGrp(0))  ; 
  8 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(3)) ; 
  9 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasOiliness(0)) ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasOftenSold(2)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasPrice(1)) ; 
  10 :: atom(hasPrice(3)) ; 
  9 :: atom(hasOftenSold(3)) ; 
  8 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasOftenSold(2)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasPrice(2)) ; 
  2 :: not atom(hasOiliness(1))  ; 
  9 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(1)) ; 
  4 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(1)) ; 
  4 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrice(3)) ; 
  4 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  9 :: not atom(hasMajorGrp(0))  ; 
  3 :: atom(hasPrice(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: not atom(hasStyle(1))  ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  1 :: atom(hasOiliness(3)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOftenSold(1)) ; 
  3 :: atom(hasPrice(2)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  1 :: atom(hasOiliness(3)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: not atom(hasStyle(1))  ; 
  4 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasOftenSold(0)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  1 :: atom(hasPrice(2)) ; 
  3 :: not atom(hasOiliness(2))  ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(3)) ; 
  2 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOftenSold(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  3 :: atom(hasOftenSold(3)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(2)) ; 
  9 :: atom(hasPrice(0)) ; 
  9 :: atom(hasPrice(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasOftenSold(3)) ; 
  9 :: atom(hasOftenSold(2)) ; 
  9 :: atom(hasPrice(3)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: not atom(hasMinorGrp(4))  ; 
  5 :: atom(hasOftenSold(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(2)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  9 :: not atom(hasMajorGrp(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasOftenSold(3))  ; 
  1 :: atom(hasOftenSold(3)) ; 
  6 :: not atom(hasOiliness(2))  ; 
  4 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasPrice(3)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  2 :: not atom(hasOftenSold(2))  ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: not atom(hasOftenSold(2))  ; 
  1 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasPrice(0)) ; 
  3 :: atom(hasPrice(3)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOftenSold(3)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: not atom(hasOftenSold(2))  ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOftenSold(2)) ; 
  3 :: atom(hasPrice(3)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: not atom(hasOiliness(2))  ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(3)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: not atom(hasOiliness(2))  ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  5 :: atom(hasMinorGrp(6)) 
}.
