asprin_vL version 1.0
Reading from stdin
-:310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:227:1-16: info: no atoms over signature occur in program:
  output/3

-:219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(38,eq,5) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(38,eq,2) output(5,eq,33) output(5,eq,6) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(33,eq,2) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(62,eq,2) output(91,eq,7) output(91,eq,1) output(91,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasStyle(0)))),1) preference(1,(1,2),1,for(neg(atom(hasStyle(1)))),1) preference(1,(1,3),1,for(neg(atom(hasMajorGrp(0)))),1) preference(1,(1,4),1,for(neg(atom(hasMajorGrp(1)))),1) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(0)))),1) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(1)))),1) preference(1,(1,7),1,for(neg(atom(hasMinorGrp(2)))),1) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(3)))),1) preference(1,(1,9),1,for(neg(atom(hasMinorGrp(4)))),1) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(5)))),1) preference(1,(1,11),1,for(neg(atom(hasMinorGrp(6)))),1) preference(1,(1,12),1,for(neg(atom(hasMinorGrp(7)))),1) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(8)))),1) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(11)))),2) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(5,eq,33) output(5,eq,6) output(5,eq,18) output(5,eq,62) output(5,eq,91) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(33,eq,1) output(33,eq,2) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(6,eq,1) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(18,eq,1) output(18,eq,2) output(62,eq,91) output(62,eq,7) output(62,eq,1) output(62,eq,2) output(91,eq,7) output(91,eq,1) output(91,eq,2) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 36 14
Answer: 3
preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(38,better,5) output(38,better,7) output(38,better,2) output(1,better,2) output(6,better,7) output(6,better,2) output(18,better,7) output(18,better,2) output(33,better,7) output(33,better,2) output(62,better,7) output(62,better,2) output(91,better,7) output(91,better,2) output(5,worse,33) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,1) output(7,worse,1) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,1) output(5,eq,7) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,1) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,1) output(18,eq,62) output(18,eq,91) output(18,eq,1) output(62,eq,91) output(62,eq,1) output(91,eq,1) output(7,eq,2)
Optimization: 31 4
Answer: 4
preference(1,(1,11),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,12),1,for(atom(hasOiliness(3))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(38,better,5) output(38,better,1) output(38,better,2) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,1) output(18,better,2) output(33,better,1) output(33,better,2) output(62,better,1) output(62,better,2) output(91,better,1) output(91,better,2) output(5,worse,33) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(5,worse,7) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(38,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(33,eq,7) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(6,eq,7) output(18,eq,62) output(18,eq,91) output(18,eq,7) output(62,eq,91) output(62,eq,7) output(91,eq,7) output(1,eq,2)
Optimization: 30 4
Answer: 5
preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),10) preference(1,less(weight)) output(38,better,5) output(38,better,62) output(38,better,7) output(38,better,2) output(1,better,2) output(6,better,62) output(6,better,7) output(6,better,2) output(18,better,62) output(18,better,7) output(18,better,2) output(33,better,62) output(33,better,7) output(33,better,2) output(91,better,7) output(91,better,2) output(5,worse,33) output(5,worse,6) output(5,worse,18) output(5,worse,91) output(5,worse,1) output(7,worse,1) output(62,worse,91) output(62,worse,1) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,91) output(38,eq,1) output(5,eq,62) output(5,eq,7) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,91) output(33,eq,1) output(6,eq,18) output(6,eq,91) output(6,eq,1) output(18,eq,91) output(18,eq,1) output(62,eq,7) output(62,eq,2) output(91,eq,1) output(7,eq,2)
Optimization: 29 4
Answer: 6
preference(1,(1,11),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(38,better,5) output(38,better,7) output(38,better,1) output(38,better,2) output(6,better,7) output(6,better,1) output(6,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(5,worse,33) output(5,worse,6) output(5,worse,18) output(5,worse,62) output(5,worse,91) output(38,eq,33) output(38,eq,6) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(5,eq,7) output(5,eq,1) output(5,eq,2) output(33,eq,6) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(6,eq,18) output(6,eq,62) output(6,eq,91) output(18,eq,62) output(18,eq,91) output(62,eq,91) output(7,eq,1) output(7,eq,2) output(1,eq,2)
Optimization: 26 4
Answer: 7
preference(1,(1,2),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,5),1,for(atom(hasPrice(3))),9) preference(1,(1,11),1,for(atom(hasPrice(1))),2) preference(1,(1,12),1,for(atom(hasOftenSold(2))),3) preference(1,(1,13),1,for(atom(hasPrice(2))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),8) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,18) output(5,better,62) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,2) output(7,better,2) output(18,better,2) output(33,better,18) output(33,better,2) output(62,better,2) output(91,better,2) output(38,worse,1) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(6,worse,91) output(6,worse,7) output(6,worse,1) output(7,worse,1) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(18,worse,1) output(33,worse,6) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(62,worse,91) output(62,worse,7) output(62,worse,1) output(91,worse,1) output(38,eq,91) output(38,eq,7) output(5,eq,6) output(33,eq,62) output(91,eq,7)
Optimization: 25 7
Answer: 8
preference(1,(1,1),1,for(atom(hasOftenSold(3))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,6),1,for(atom(hasPrice(3))),3) preference(1,(1,11),1,for(atom(hasOiliness(3))),1) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,13),1,for(atom(hasPrice(2))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,2) output(6,better,18) output(6,better,2) output(7,better,2) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,2) output(62,better,2) output(91,better,2) output(5,worse,91) output(5,worse,7) output(5,worse,1) output(6,worse,62) output(6,worse,91) output(6,worse,7) output(6,worse,1) output(18,worse,62) output(18,worse,91) output(18,worse,7) output(18,worse,1) output(33,worse,91) output(33,worse,7) output(33,worse,1) output(62,worse,91) output(62,worse,7) output(62,worse,1) output(38,eq,91) output(38,eq,7) output(38,eq,1) output(33,eq,62) output(91,eq,7) output(91,eq,1) output(7,eq,1)
Optimization: 24 8
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasStyle(0)))),10) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(6)))),10) preference(1,(1,3),1,for(neg(atom(hasMinorGrp(8)))),10) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(11)))),10) preference(1,(1,6),1,for(neg(atom(hasMinorGrp(4)))),10) preference(1,(1,7),1,for(neg(atom(hasOftenSold(1)))),10) preference(1,(1,8),1,for(neg(atom(hasMinorGrp(10)))),10) preference(1,(1,9),1,for(neg(atom(hasPrice(2)))),10) preference(1,(1,10),1,for(neg(atom(hasMinorGrp(5)))),9) preference(1,(1,11),1,for(neg(atom(hasOiliness(3)))),9) preference(1,(1,13),1,for(neg(atom(hasMinorGrp(2)))),10) preference(1,(1,14),1,for(neg(atom(hasMinorGrp(9)))),1) preference(1,(1,5),1,for(atom(hasStyle(1))),10) preference(1,(1,12),1,for(atom(hasOftenSold(3))),7) preference(1,less(weight)) output(38,better,6) output(38,better,7) output(38,better,1) output(38,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(7,better,1) output(7,better,2) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2) output(38,worse,5) output(6,worse,18) output(6,worse,62) output(6,worse,91) output(6,worse,7) output(38,eq,33) output(38,eq,18) output(38,eq,62) output(38,eq,91) output(33,eq,18) output(33,eq,62) output(33,eq,91) output(6,eq,1) output(6,eq,2) output(18,eq,62) output(18,eq,91) output(62,eq,91) output(1,eq,2)
Optimization: 18 14
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasPrice(0)))),3) preference(1,(1,12),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,1),1,for(atom(hasOftenSold(0))),2) preference(1,(1,3),1,for(atom(hasStyle(0))),5) preference(1,(1,4),1,for(atom(hasPrice(3))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,8),1,for(atom(hasPrice(2))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasPrice(1))),7) preference(1,(1,13),1,for(atom(hasOftenSold(2))),9) preference(1,(1,14),1,for(atom(hasOiliness(2))),10) preference(1,less(weight)) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,7) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,7) output(6,better,2) output(7,better,2) output(18,better,7) output(18,better,2) output(33,better,18) output(33,better,62) output(33,better,7) output(33,better,2) output(62,better,7) output(62,better,2) output(91,better,7) output(91,better,2) output(38,worse,5) output(38,worse,91) output(38,worse,1) output(6,worse,91) output(6,worse,1) output(7,worse,1) output(18,worse,62) output(18,worse,91) output(18,worse,1) output(33,worse,6) output(33,worse,91) output(33,worse,1) output(62,worse,91) output(62,worse,1) output(91,eq,1)
Optimization: 15 14
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,10),1,for(atom(hasPrice(3))),4) preference(1,(1,11),1,for(atom(hasOiliness(3))),2) preference(1,(1,12),1,for(atom(hasOftenSold(2))),5) preference(1,(1,13),1,for(atom(hasOftenSold(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),9) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,8),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2)
Optimization: 0 13
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2)
Optimization: 0 12
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2)
Optimization: 0 11
Answer: 15
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasPrice(3))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOftenSold(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),10) preference(1,less(weight)) output(38,better,5) output(38,better,33) output(38,better,6) output(38,better,18) output(38,better,62) output(38,better,91) output(38,better,7) output(38,better,1) output(38,better,2) output(1,better,2) output(5,better,33) output(5,better,6) output(5,better,18) output(5,better,62) output(5,better,91) output(5,better,7) output(5,better,1) output(5,better,2) output(6,better,18) output(6,better,62) output(6,better,91) output(6,better,7) output(6,better,1) output(6,better,2) output(7,better,1) output(7,better,2) output(18,better,62) output(18,better,91) output(18,better,7) output(18,better,1) output(18,better,2) output(33,better,6) output(33,better,18) output(33,better,62) output(33,better,91) output(33,better,7) output(33,better,1) output(33,better,2) output(62,better,91) output(62,better,7) output(62,better,1) output(62,better,2) output(91,better,7) output(91,better,1) output(91,better,2)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.168 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 598.159s (Solving: 583.66s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2348.121s
Threads      : 4        (Winner: 4)

Choices      : 10814745 (Domain: 2154)
Conflicts    : 2025478  (Analyzed: 2025476)
Restarts     : 2226     (Average: 909.92 Last: 100012)
Model-Level  : 1252.9  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2028986  (Deleted: 1857809)
  Binary     : 476      (Ratio:   0.02%)
  Ternary    : 259      (Ratio:   0.01%)
  Conflict   : 2025476  (Average Length: 1770.8 Ratio:  99.83%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3510     (Average Length:  233.4 Ratio:   0.17%) 
  Distributed: 1170     (Ratio:   0.06% Average LBD: 3.32) 
  Integrated : 3510     (Ratio: 300.00% Unit: 2 Average Jumps: 1.00)
Backjumps    : 2025476  (Average:  3.16 Max: 4592 Sum: 6393856)
  Executed   : 2025475  (Average:  3.16 Max: 4592 Sum: 6393855 Ratio: 100.00%)
  Bounded    : 1        (Average:  1.00 Max:   1 Sum:      1 Ratio:   0.00%)

Rules        : 4282222 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 1413767 
Bodies       : 1456703 
  Sum        : 270     
  Count      : 14      
Equivalences : 4281818  (Atom=Atom: 1388483 Body=Body: 1419194 Other: 1474141)
Tight        : Yes
Variables    : 39267    (Eliminated:    0 Frozen: 17707)
Constraints  : 2957569  (Binary:  98.9% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(hasStyle(0))  ; 
  1 :: not atom(hasStyle(1))  ; 
  1 :: not atom(hasMajorGrp(0))  ; 
  1 :: not atom(hasMajorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(0))  ; 
  1 :: not atom(hasMinorGrp(1))  ; 
  1 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(3))  ; 
  1 :: not atom(hasMinorGrp(4))  ; 
  1 :: not atom(hasMinorGrp(5))  ; 
  1 :: not atom(hasMinorGrp(6))  ; 
  1 :: not atom(hasMinorGrp(7))  ; 
  1 :: not atom(hasMinorGrp(8))  ; 
  2 :: not atom(hasMinorGrp(11))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOiliness(3)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasPrice(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasPrice(2)) ; 
  8 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOftenSold(3)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasPrice(3)) ; 
  1 :: atom(hasOiliness(3)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasPrice(2)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: not atom(hasStyle(0))  ; 
  10 :: not atom(hasMinorGrp(6))  ; 
  10 :: not atom(hasMinorGrp(8))  ; 
  10 :: not atom(hasMinorGrp(11))  ; 
  10 :: atom(hasStyle(1)) ; 
  10 :: not atom(hasMinorGrp(4))  ; 
  10 :: not atom(hasOftenSold(1))  ; 
  10 :: not atom(hasMinorGrp(10))  ; 
  10 :: not atom(hasPrice(2))  ; 
  9 :: not atom(hasMinorGrp(5))  ; 
  9 :: not atom(hasOiliness(3))  ; 
  7 :: atom(hasOftenSold(3)) ; 
  10 :: not atom(hasMinorGrp(2))  ; 
  1 :: not atom(hasMinorGrp(9))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOftenSold(0)) ; 
  3 :: not atom(hasPrice(0))  ; 
  5 :: atom(hasStyle(0)) ; 
  9 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasPrice(2)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  2 :: not atom(hasStyle(1))  ; 
  9 :: atom(hasOftenSold(2)) ; 
  10 :: atom(hasOiliness(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  5 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(3)) ; 
  2 :: atom(hasOiliness(3)) ; 
  5 :: atom(hasOftenSold(2)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  9 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOftenSold(0)) ; 
  6 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(9)) 
}.
