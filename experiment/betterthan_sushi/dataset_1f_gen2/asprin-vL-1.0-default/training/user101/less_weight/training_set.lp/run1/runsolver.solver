asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(32,eq,31) output(32,eq,11) output(32,eq,5) output(32,eq,8) output(32,eq,13) output(32,eq,20) output(32,eq,25) output(32,eq,1) output(32,eq,6) output(31,eq,11) output(31,eq,5) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(31,eq,6) output(11,eq,5) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(5,eq,8) output(5,eq,13) output(5,eq,20) output(5,eq,25) output(5,eq,1) output(5,eq,6) output(8,eq,13) output(8,eq,20) output(8,eq,25) output(8,eq,1) output(8,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrice(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,12),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(32,better,31) output(32,better,11) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(31,worse,5) output(32,eq,5) output(31,eq,11) output(31,eq,8) output(31,eq,13) output(31,eq,20) output(31,eq,25) output(31,eq,1) output(31,eq,6) output(11,eq,8) output(11,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,1) output(11,eq,6) output(8,eq,13) output(8,eq,20) output(8,eq,25) output(8,eq,1) output(8,eq,6) output(13,eq,20) output(13,eq,25) output(13,eq,1) output(13,eq,6) output(20,eq,25) output(20,eq,1) output(20,eq,6) output(25,eq,1) output(25,eq,6) output(1,eq,6)
Optimization: 31 3
Answer: 3
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,3),1,for(atom(hasOiliness(0))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasPrice(0))),1) preference(1,(1,8),1,for(atom(hasStyle(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),9) preference(1,less(weight)) output(1,better,6) output(5,better,20) output(8,better,20) output(8,better,25) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,11) output(32,better,5) output(32,better,20) output(5,worse,8) output(5,worse,13) output(5,worse,25) output(5,worse,1) output(5,worse,6) output(8,worse,13) output(8,worse,1) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,worse,25) output(11,worse,1) output(11,worse,6) output(20,worse,25) output(20,worse,1) output(20,worse,6) output(25,worse,1) output(25,worse,6) output(32,worse,31) output(32,worse,8) output(32,worse,13) output(32,worse,25) output(32,worse,1) output(32,worse,6) output(31,eq,13) output(11,eq,20) output(8,eq,6)
Optimization: 27 12
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,6),1,for(atom(hasPrice(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,20) output(5,better,25) output(8,better,20) output(8,better,25) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,13) output(5,worse,1) output(5,worse,6) output(8,worse,13) output(8,worse,1) output(8,worse,6) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,worse,1) output(11,worse,6) output(20,worse,1) output(20,worse,6) output(25,worse,1) output(25,worse,6) output(31,worse,13) output(32,eq,13) output(11,eq,20) output(11,eq,25) output(20,eq,25)
Optimization: 20 14
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,6),1,for(atom(hasPrice(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,20) output(5,better,25) output(5,better,6) output(8,better,20) output(8,better,25) output(8,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,13) output(5,worse,1) output(8,worse,13) output(8,worse,1) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,worse,1) output(20,worse,1) output(25,worse,1) output(31,worse,13) output(32,eq,13) output(11,eq,20) output(11,eq,25) output(11,eq,6) output(20,eq,25) output(20,eq,6) output(25,eq,6)
Optimization: 18 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasPrice(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,20) output(5,better,25) output(5,better,6) output(8,better,20) output(8,better,25) output(8,better,6) output(11,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,6) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,13) output(5,worse,1) output(8,worse,13) output(8,worse,1) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,worse,1) output(20,worse,1) output(25,worse,1) output(31,worse,13) output(32,eq,13) output(11,eq,20) output(11,eq,25) output(20,eq,25)
Optimization: 15 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,6),1,for(atom(hasPrice(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,12),1,for(atom(hasStyle(1))),7) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),2) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,20) output(8,better,25) output(8,better,6) output(11,better,25) output(11,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,6) output(31,better,11) output(31,better,8) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,13) output(8,worse,13) output(8,worse,1) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,worse,1) output(20,worse,1) output(25,worse,1) output(31,worse,5) output(31,worse,13) output(32,eq,13) output(11,eq,20) output(25,eq,6)
Optimization: 14 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(0))),8) preference(1,(1,6),1,for(atom(hasStyle(1))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,9),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,20) output(8,worse,13) output(8,worse,20) output(13,worse,20) output(31,worse,11) output(31,worse,5) output(31,worse,8) output(31,worse,13) output(31,worse,20) output(31,worse,25) output(31,eq,1) output(11,eq,20) output(8,eq,25)
Optimization: 13 9
Answer: 9
preference(1,(1,1),1,for(atom(hasStyle(1))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,5),1,for(atom(hasOiliness(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasPrice(1))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,14),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(13,worse,20) output(31,worse,11) output(31,worse,5) output(31,worse,8) output(31,worse,20) output(31,eq,13) output(11,eq,8) output(11,eq,20) output(8,eq,20)
Optimization: 10 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),8) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,7),1,for(atom(hasStyle(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(3))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,20) output(8,worse,13) output(8,worse,20) output(13,worse,20) output(25,worse,1) output(11,eq,20) output(5,eq,13)
Optimization: 7 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,7),1,for(atom(hasStyle(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,10),1,for(atom(hasPrice(1))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,20) output(8,worse,13) output(8,worse,20) output(13,worse,20) output(11,eq,20) output(5,eq,13)
Optimization: 6 11
Progression : [2;6] (Error: 2)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,4),1,for(atom(hasPrice(1))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),4) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,7),1,for(atom(hasStyle(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,20) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(11,worse,8) output(11,worse,13) output(11,eq,20) output(8,eq,13)
Optimization: 5 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrice(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,3),1,for(atom(hasOiliness(0))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),10) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),10) preference(1,(1,9),1,for(atom(hasStyle(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(11,worse,8) output(13,worse,20) output(25,worse,1) output(11,eq,20)
Optimization: 5 10
Progression : [3;5] (Error: 0.666667)
Progression : [4;5] (Error: 0.25)
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasStyle(1))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,11),1,for(atom(hasPrice(0))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),6) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(11,worse,8) output(13,worse,20) output(11,eq,20)
Optimization: 4 11
Progression : 4 [ 1;11] (Error: 10)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,4),1,for(atom(hasOiliness(0))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,8),1,for(atom(hasPrice(0))),5) preference(1,(1,9),1,for(atom(hasOiliness(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),6) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,5) output(11,better,8) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(5,worse,20) output(8,worse,20) output(13,worse,20) output(11,eq,20)
Optimization: 4 10
Progression : 4 [ 2;10] (Error: 4)
Progression : 4 [ 3;10] (Error: 2.33333)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrice(1))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,11),1,for(atom(hasPrice(0))),3) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(1,better,6) output(5,better,8) output(5,better,13) output(5,better,20) output(5,better,25) output(5,better,1) output(5,better,6) output(8,better,13) output(8,better,20) output(8,better,25) output(8,better,1) output(8,better,6) output(11,better,13) output(11,better,25) output(11,better,1) output(11,better,6) output(13,better,25) output(13,better,1) output(13,better,6) output(20,better,25) output(20,better,1) output(20,better,6) output(25,better,1) output(25,better,6) output(31,better,11) output(31,better,5) output(31,better,8) output(31,better,13) output(31,better,20) output(31,better,25) output(31,better,1) output(31,better,6) output(32,better,31) output(32,better,11) output(32,better,5) output(32,better,8) output(32,better,13) output(32,better,20) output(32,better,25) output(32,better,1) output(32,better,6) output(11,worse,5) output(11,worse,8) output(13,worse,20) output(11,eq,20)
Optimization: 4 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.042 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 4 9
Bounds       : 4 [3;9]
Calls        : 1
Time         : 297.949s (Solving: 296.04s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.849s
Threads      : 4        (Winner: 4)

Choices      : 8516436  (Domain: 663012)
Conflicts    : 7687795  (Analyzed: 7687789)
Restarts     : 6594     (Average: 1165.88 Last: 159207)
Model-Level  : 47.9    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 7887746  (Deleted: 7526542)
  Binary     : 1248     (Ratio:   0.02%)
  Ternary    : 15177    (Ratio:   0.19%)
  Conflict   : 7687789  (Average Length:  237.3 Ratio:  97.46%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 199957   (Average Length:  190.7 Ratio:   2.54%) 
  Distributed: 66756    (Ratio:   0.87% Average LBD: 3.74) 
  Integrated : 200268   (Ratio: 300.00% Unit: 324 Average Jumps: 5.54)
Backjumps    : 7687789  (Average:  1.10 Max:  85 Sum: 8440847)
  Executed   : 7687773  (Average:  1.10 Max:  85 Sum: 8440658 Ratio: 100.00%)
  Bounded    : 16       (Average: 11.81 Max:  33 Sum:    189 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8712    
  Sum        : 79      
  Count      : 14      
Equivalences : 9346     (Atom=Atom: 486 Body=Body: 220 Other: 8640)
Tight        : Yes
Variables    : 7552     (Eliminated:    0 Frozen: 4892)
Constraints  : 189301   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasStyle(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) ; 
  9 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasPrice(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) 
}.
