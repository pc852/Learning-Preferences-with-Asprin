asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(19,eq,9) output(19,eq,6) output(19,eq,11) output(19,eq,10) output(19,eq,39) output(19,eq,23) output(19,eq,89) output(19,eq,17) output(19,eq,52) output(9,eq,6) output(9,eq,11) output(9,eq,10) output(9,eq,39) output(9,eq,23) output(9,eq,89) output(9,eq,17) output(9,eq,52) output(6,eq,11) output(6,eq,10) output(6,eq,39) output(6,eq,23) output(6,eq,89) output(6,eq,17) output(6,eq,52) output(11,eq,10) output(11,eq,39) output(11,eq,23) output(11,eq,89) output(11,eq,17) output(11,eq,52) output(10,eq,39) output(10,eq,23) output(10,eq,89) output(10,eq,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(39,eq,17) output(39,eq,52) output(23,eq,89) output(23,eq,17) output(23,eq,52) output(89,eq,17) output(89,eq,52) output(17,eq,52)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasStyle(1))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),5) preference(1,less(weight)) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,52) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,52) output(17,better,52) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,52) output(23,better,52) output(39,better,52) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(23,worse,17) output(39,worse,17) output(89,worse,17) output(19,eq,9) output(19,eq,6) output(19,eq,11) output(19,eq,17) output(9,eq,6) output(9,eq,11) output(9,eq,17) output(6,eq,11) output(6,eq,17) output(11,eq,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 21 7
Answer: 3
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,10),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),2) preference(1,less(weight)) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,10) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(17,better,52) output(19,better,9) output(19,better,10) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(9,worse,6) output(9,worse,11) output(9,worse,39) output(9,worse,23) output(9,worse,89) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(19,worse,6) output(19,worse,11) output(19,eq,39) output(19,eq,23) output(19,eq,89) output(9,eq,17) output(6,eq,11) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 20 9
Answer: 4
preference(1,(1,1),1,for(atom(hasOiliness(0))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),1) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(11,better,10) output(11,better,17) output(11,better,52) output(17,better,52) output(19,better,9) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(9,worse,6) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(19,eq,6) output(11,eq,39) output(11,eq,23) output(11,eq,89) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 13 14
Answer: 5
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasPrice(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,4),1,for(atom(hasOiliness(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(17,worse,52) output(23,worse,52) output(39,worse,52) output(89,worse,52) output(9,eq,6) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(39,eq,17) output(23,eq,89) output(23,eq,17) output(89,eq,17)
Optimization: 12 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasOiliness(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,12),1,for(atom(hasPrice(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(17,worse,52) output(23,worse,52) output(39,worse,52) output(89,worse,52) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(39,eq,17) output(23,eq,89) output(23,eq,17) output(89,eq,17)
Optimization: 11 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),7) preference(1,(1,3),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,10),1,for(atom(hasPrice(0))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),5) preference(1,less(weight)) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(10,better,39) output(10,better,23) output(10,better,89) output(10,better,17) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(39,better,17) output(89,better,17) output(6,worse,11) output(9,worse,11) output(17,worse,52) output(23,worse,52) output(39,worse,52) output(89,worse,52) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 10 13
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasOiliness(1))),10) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,11),1,for(atom(hasOiliness(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(17,better,52) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(6,worse,11) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(19,eq,9) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 10 10
Answer: 9
preference(1,(1,2),1,for(atom(hasStyle(1))),9) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,12),1,for(atom(hasPrice(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),1) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,eq,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89) output(17,eq,52)
Optimization: 9 8
Answer: 10
preference(1,(1,2),1,for(atom(hasStyle(1))),9) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,9),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasPrice(0))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(0))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(10,better,17) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(17,worse,52) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 8 9
Answer: 11
preference(1,(1,3),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasOiliness(1))),10) preference(1,(1,6),1,for(atom(hasStyle(1))),7) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,13),1,for(atom(hasPrice(0))),4) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(17,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 8 8
Progression : [5;8] (Error: 0.6)
Progression : [7;8] (Error: 0.142857)
Progression : [8;8] (Error: 0)
Progression : 8 [1;8] (Error: 7)
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,11),1,for(atom(hasStyle(1))),6) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),3) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(10,better,17) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(17,worse,52) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 8 7
Progression : 8 [2;7] (Error: 2.5)
Answer: 13
preference(1,(1,6),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,11),1,for(atom(hasStyle(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(17,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 8 6
Answer: 14
preference(1,(1,2),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(6,better,11) output(6,better,10) output(6,better,39) output(6,better,23) output(6,better,89) output(6,better,17) output(6,better,52) output(9,better,6) output(9,better,11) output(9,better,10) output(9,better,39) output(9,better,23) output(9,better,89) output(9,better,17) output(9,better,52) output(11,better,10) output(11,better,39) output(11,better,23) output(11,better,89) output(11,better,17) output(11,better,52) output(17,better,52) output(19,better,9) output(19,better,6) output(19,better,11) output(19,better,10) output(19,better,39) output(19,better,23) output(19,better,89) output(19,better,17) output(19,better,52) output(23,better,17) output(23,better,52) output(39,better,17) output(39,better,52) output(89,better,17) output(89,better,52) output(10,worse,39) output(10,worse,23) output(10,worse,89) output(10,worse,17) output(10,eq,52) output(39,eq,23) output(39,eq,89) output(23,eq,89)
Optimization: 8 5
Progression : 8 [3;5] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.058 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 8 5
Bounds       : 8 [3;5]
Calls        : 1
Time         : 298.166s (Solving: 296.20s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.530s
Threads      : 4        (Winner: 4)

Choices      : 7890077  (Domain: 536013)
Conflicts    : 6167658  (Analyzed: 6167651)
Restarts     : 5588     (Average: 1103.73 Last: 377096)
Model-Level  : 42.7    
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 6211227  (Deleted: 5907751)
  Binary     : 1052     (Ratio:   0.02%)
  Ternary    : 5337     (Ratio:   0.09%)
  Conflict   : 6167651  (Average Length:  231.9 Ratio:  99.30%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 43576    (Average Length:   36.5 Ratio:   0.70%) 
  Distributed: 14613    (Ratio:   0.24% Average LBD: 3.64) 
  Integrated : 43839    (Ratio: 300.00% Unit: 66 Average Jumps: 4.70)
Backjumps    : 6167651  (Average:  1.23 Max: 481 Sum: 7576905)
  Executed   : 6167644  (Average:  1.23 Max: 481 Sum: 7576863 Ratio: 100.00%)
  Bounded    : 7        (Average:  6.00 Max:  16 Sum:     42 Ratio:   0.00%)

Rules        : 185274  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10449   
Bodies       : 8681    
  Sum        : 48      
  Count      : 14      
Equivalences : 9274     (Atom=Atom: 549 Body=Body: 292 Other: 8433)
Tight        : Yes
Variables    : 7485     (Eliminated:    0 Frozen: 4825)
Constraints  : 187801   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) ; 
  1 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(0)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  10 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) 
}.
