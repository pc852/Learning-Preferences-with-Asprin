asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,29) output(1,eq,17) output(1,eq,16) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,29) output(23,eq,17) output(23,eq,16) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,29) output(34,eq,17) output(34,eq,16) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,29) output(5,eq,17) output(5,eq,16) output(18,eq,24) output(18,eq,37) output(18,eq,29) output(18,eq,17) output(18,eq,16) output(24,eq,37) output(24,eq,29) output(24,eq,17) output(24,eq,16) output(37,eq,29) output(37,eq,17) output(37,eq,16) output(29,eq,17) output(29,eq,16) output(17,eq,16)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,less(weight)) output(1,better,29) output(5,better,29) output(18,better,29) output(23,better,29) output(24,better,29) output(34,better,29) output(37,better,29) output(29,worse,17) output(29,worse,16) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,17) output(1,eq,16) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,17) output(23,eq,16) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,17) output(34,eq,16) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,17) output(5,eq,16) output(18,eq,24) output(18,eq,37) output(18,eq,17) output(18,eq,16) output(24,eq,37) output(24,eq,17) output(24,eq,16) output(37,eq,17) output(37,eq,16) output(17,eq,16)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(1,better,29) output(1,better,16) output(5,better,29) output(5,better,16) output(17,better,16) output(18,better,29) output(18,better,16) output(23,better,29) output(23,better,16) output(24,better,29) output(24,better,16) output(34,better,29) output(34,better,16) output(37,better,29) output(37,better,16) output(29,worse,17) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,17) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,17) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,17) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,17) output(18,eq,24) output(18,eq,37) output(18,eq,17) output(24,eq,37) output(24,eq,17) output(37,eq,17) output(29,eq,16)
Optimization: 30 2
Answer: 4
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,less(weight)) output(29,better,16) output(1,better,29) output(1,better,16) output(5,better,29) output(5,better,16) output(17,better,16) output(18,better,29) output(18,better,16) output(23,better,29) output(23,better,16) output(24,better,29) output(24,better,16) output(34,better,29) output(34,better,16) output(37,better,29) output(37,better,16) output(29,worse,17) output(1,eq,23) output(1,eq,34) output(1,eq,5) output(1,eq,18) output(1,eq,24) output(1,eq,37) output(1,eq,17) output(23,eq,34) output(23,eq,5) output(23,eq,18) output(23,eq,24) output(23,eq,37) output(23,eq,17) output(34,eq,5) output(34,eq,18) output(34,eq,24) output(34,eq,37) output(34,eq,17) output(5,eq,18) output(5,eq,24) output(5,eq,37) output(5,eq,17) output(18,eq,24) output(18,eq,37) output(18,eq,17) output(24,eq,37) output(24,eq,17) output(37,eq,17)
Optimization: 29 2
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),4) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),4) preference(1,(1,4),1,for(atom(hasPrice(0))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,10),1,for(atom(hasStyle(0))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,12),1,for(atom(hasOiliness(0))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,14),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,23) output(1,better,18) output(1,better,29) output(1,better,16) output(5,better,18) output(5,better,29) output(5,better,16) output(17,better,16) output(18,better,29) output(23,better,29) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(29,worse,17) output(29,worse,16) output(1,worse,34) output(1,worse,24) output(1,worse,37) output(5,worse,24) output(5,worse,37) output(18,worse,24) output(18,worse,37) output(18,worse,17) output(23,worse,34) output(23,worse,5) output(23,worse,24) output(23,worse,37) output(23,worse,17) output(34,worse,24) output(1,eq,5) output(1,eq,17) output(23,eq,18) output(23,eq,16) output(5,eq,17) output(18,eq,16)
Optimization: 22 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrice(0))),3) preference(1,(1,2),1,for(atom(hasOiliness(1))),3) preference(1,(1,3),1,for(atom(hasStyle(1))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasStyle(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),6) preference(1,(1,8),1,for(atom(hasPrice(1))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),3) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,24) output(23,better,17) output(23,better,16) output(34,better,24) output(34,better,16) output(37,better,17) output(37,better,16) output(1,worse,29) output(5,worse,18) output(5,worse,37) output(5,worse,29) output(5,worse,17) output(18,worse,37) output(18,worse,29) output(23,worse,37) output(23,worse,29) output(24,worse,37) output(24,worse,29) output(24,worse,17) output(34,worse,5) output(34,worse,18) output(34,worse,37) output(34,worse,29) output(34,worse,17) output(37,worse,29) output(23,eq,18) output(24,eq,16)
Optimization: 20 13
Answer: 7
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasPrice(0))),5) preference(1,(1,7),1,for(atom(hasPrice(1))),7) preference(1,(1,8),1,for(atom(hasOiliness(0))),10) preference(1,(1,9),1,for(atom(hasStyle(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,14),1,for(atom(hasOiliness(1))),1) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,37) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,37) output(18,better,16) output(23,better,34) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,18) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(1,worse,23) output(1,worse,34) output(1,worse,5) output(1,worse,24) output(1,worse,29) output(1,worse,17) output(18,worse,24) output(18,worse,29) output(18,worse,17) output(34,worse,5) output(37,worse,29) output(37,worse,17) output(37,worse,16) output(1,eq,18) output(23,eq,5) output(34,eq,24)
Optimization: 16 11
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasStyle(0))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,17) output(18,better,16) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,17) output(37,better,16) output(1,worse,23) output(1,worse,34) output(1,worse,5) output(1,worse,24) output(1,worse,37) output(1,worse,29) output(18,worse,24) output(18,worse,37) output(18,worse,29) output(37,worse,29) output(1,eq,18) output(23,eq,34) output(23,eq,5) output(34,eq,5)
Optimization: 14 12
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,17) output(18,better,16) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,17) output(37,better,16) output(1,worse,23) output(1,worse,34) output(1,worse,5) output(1,worse,24) output(1,worse,37) output(1,worse,29) output(18,worse,24) output(18,worse,37) output(18,worse,29) output(37,worse,29) output(1,eq,18) output(23,eq,34) output(5,eq,24)
Optimization: 13 12
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasStyle(0))),5) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,14),1,for(atom(hasPrice(1))),3) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,17) output(18,better,16) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(1,worse,23) output(1,worse,34) output(1,worse,5) output(1,worse,24) output(1,worse,37) output(5,worse,24) output(18,worse,24) output(18,worse,37) output(1,eq,18) output(1,eq,29) output(23,eq,34) output(18,eq,29)
Optimization: 12 13
Answer: 11
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),3) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,14),1,for(atom(hasStyle(0))),6) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(1,worse,23) output(1,worse,34) output(1,worse,5) output(1,worse,24) output(1,worse,37) output(18,worse,24) output(18,worse,37) output(1,eq,18) output(23,eq,34) output(23,eq,5) output(34,eq,5)
Optimization: 11 12
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(29,better,17) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,5) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,17) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(5,worse,18) output(17,worse,16) output(23,worse,34) output(24,worse,29) output(24,worse,16) output(37,worse,29) output(37,worse,17) output(37,worse,16) output(23,eq,18) output(29,eq,16)
Optimization: 10 11
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,5) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(5,worse,18) output(23,worse,34) output(24,worse,29) output(37,worse,29) output(37,worse,17) output(23,eq,18) output(37,eq,16)
Optimization: 7 11
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,5) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(5,worse,18) output(23,worse,34) output(24,worse,37) output(24,worse,29) output(23,eq,18) output(17,eq,16)
Optimization: 6 11
Answer: 15
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),9) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,5) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(5,worse,18) output(23,worse,34) output(24,worse,37) output(24,worse,29) output(23,eq,18)
Optimization: 5 11
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,4),1,for(atom(hasStyle(1))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,11),1,for(atom(hasOiliness(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),1) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16) output(23,worse,34) output(23,eq,5) output(23,eq,18) output(5,eq,18)
Optimization: 4 11
Answer: 17
preference(1,(1,1),1,for(atom(hasOiliness(0))),3) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasStyle(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,9),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),2) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 18
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,5),1,for(atom(hasOiliness(1))),8) preference(1,(1,6),1,for(atom(hasPrice(1))),5) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,10),1,for(atom(hasStyle(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,13),1,for(atom(hasPrice(0))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 12
Answer: 20
preference(1,(1,1),1,for(atom(hasPrice(1))),4) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasOiliness(1))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),5) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 11
Progression : 0 [ 3;11] (Error: 2.66667)
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,10),1,for(atom(hasOiliness(0))),3) preference(1,(1,11),1,for(atom(hasOiliness(1))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(0))),8) preference(1,less(weight)) output(29,better,17) output(29,better,16) output(1,better,23) output(1,better,34) output(1,better,5) output(1,better,18) output(1,better,24) output(1,better,37) output(1,better,29) output(1,better,17) output(1,better,16) output(5,better,18) output(5,better,24) output(5,better,37) output(5,better,29) output(5,better,17) output(5,better,16) output(17,better,16) output(18,better,24) output(18,better,37) output(18,better,29) output(18,better,17) output(18,better,16) output(23,better,34) output(23,better,5) output(23,better,18) output(23,better,24) output(23,better,37) output(23,better,29) output(23,better,17) output(23,better,16) output(24,better,37) output(24,better,29) output(24,better,17) output(24,better,16) output(34,better,5) output(34,better,18) output(34,better,24) output(34,better,37) output(34,better,29) output(34,better,17) output(34,better,16) output(37,better,29) output(37,better,17) output(37,better,16)
Optimization: 0 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.043 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.290s (Solving: 296.28s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.905s
Threads      : 4        (Winner: 4)

Choices      : 11593400 (Domain: 549509)
Conflicts    : 6322128  (Analyzed: 6322125)
Restarts     : 5553     (Average: 1138.51 Last: 392707)
Model-Level  : 277.0   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6386428  (Deleted: 6129912)
  Binary     : 599      (Ratio:   0.01%)
  Ternary    : 13981    (Ratio:   0.22%)
  Conflict   : 6322125  (Average Length:  268.5 Ratio:  98.99%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 64303    (Average Length:   31.9 Ratio:   1.01%) 
  Distributed: 21484    (Ratio:   0.34% Average LBD: 3.59) 
  Integrated : 64452    (Ratio: 300.00% Unit: 258 Average Jumps: 22.95)
Backjumps    : 6322125  (Average:  1.72 Max: 616 Sum: 10886336)
  Executed   : 6322123  (Average:  1.72 Max: 616 Sum: 10886292 Ratio: 100.00%)
  Bounded    : 2        (Average: 22.00 Max:  43 Sum:     44 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  3 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  3 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasPrice(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  10 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  5 :: atom(hasStyle(0)) ; 
  5 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  3 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(0)) 
}.
