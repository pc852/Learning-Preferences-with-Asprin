asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,58) output(36,eq,49) output(36,eq,4) output(36,eq,33) output(36,eq,24) output(36,eq,28) output(20,eq,9) output(20,eq,38) output(20,eq,58) output(20,eq,49) output(20,eq,4) output(20,eq,33) output(20,eq,24) output(20,eq,28) output(9,eq,38) output(9,eq,58) output(9,eq,49) output(9,eq,4) output(9,eq,33) output(9,eq,24) output(9,eq,28) output(38,eq,58) output(38,eq,49) output(38,eq,4) output(38,eq,33) output(38,eq,24) output(38,eq,28) output(58,eq,49) output(58,eq,4) output(58,eq,33) output(58,eq,24) output(58,eq,28) output(49,eq,4) output(49,eq,33) output(49,eq,24) output(49,eq,28) output(4,eq,33) output(4,eq,24) output(4,eq,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 45 0
Answer: 2
preference(1,(1,9),1,for(atom(hasMinorGrp(4))),6) preference(1,less(weight)) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,33) output(58,better,24) output(58,better,28) output(36,eq,20) output(36,eq,9) output(36,eq,38) output(36,eq,58) output(36,eq,49) output(36,eq,4) output(20,eq,9) output(20,eq,38) output(20,eq,58) output(20,eq,49) output(20,eq,4) output(9,eq,38) output(9,eq,58) output(9,eq,49) output(9,eq,4) output(38,eq,58) output(38,eq,49) output(38,eq,4) output(58,eq,49) output(58,eq,4) output(49,eq,4) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 24 1
Answer: 3
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,2),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasStyle(1))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,7),1,for(atom(hasOiliness(0))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),7) preference(1,less(weight)) output(38,better,58) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,58) output(20,better,9) output(20,better,58) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,58) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(38,worse,49) output(38,worse,4) output(9,worse,38) output(9,worse,49) output(9,worse,4) output(9,worse,33) output(9,worse,24) output(9,worse,28) output(20,worse,38) output(20,worse,49) output(20,worse,4) output(36,worse,38) output(36,worse,49) output(36,worse,4) output(58,worse,49) output(58,worse,4) output(58,worse,33) output(58,worse,24) output(58,worse,28) output(36,eq,20) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 23 12
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasOiliness(1))),6) preference(1,(1,6),1,for(atom(hasPrice(1))),6) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasStyle(0))),5) preference(1,less(weight)) output(38,better,58) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,58) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,33) output(58,better,24) output(58,better,28) output(9,worse,38) output(9,worse,49) output(9,worse,4) output(36,worse,20) output(36,worse,38) output(36,worse,49) output(36,worse,4) output(58,worse,49) output(58,worse,4) output(36,eq,9) output(36,eq,58) output(20,eq,38) output(20,eq,49) output(20,eq,4) output(9,eq,58) output(38,eq,49) output(38,eq,4) output(49,eq,4) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 21 11
Answer: 5
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,11),1,for(atom(hasPrice(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(9,worse,38) output(9,worse,58) output(9,worse,49) output(9,worse,4) output(20,worse,38) output(20,worse,58) output(20,worse,49) output(36,worse,20) output(36,worse,38) output(36,worse,58) output(36,worse,49) output(58,worse,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 15 14
Answer: 6
preference(1,(1,1),1,for(atom(hasOiliness(1))),5) preference(1,(1,4),1,for(atom(hasPrice(1))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasStyle(1))),7) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(9,worse,38) output(9,worse,58) output(20,worse,9) output(20,worse,38) output(20,worse,58) output(36,worse,9) output(36,worse,38) output(36,worse,58) output(20,eq,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 12 10
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,2),1,for(atom(hasPrice(1))),5) preference(1,(1,3),1,for(atom(hasOiliness(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),5) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,11),1,for(atom(hasPrice(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),5) preference(1,less(weight)) output(38,better,58) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,33) output(58,better,24) output(58,better,28) output(38,worse,49) output(9,worse,49) output(36,worse,20) output(36,worse,49) output(58,worse,49) output(58,worse,4) output(20,eq,49) output(38,eq,4) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 11 13
Answer: 8
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(4,worse,33) output(4,worse,24) output(4,worse,28) output(36,eq,20) output(9,eq,38) output(9,eq,58) output(38,eq,58) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 10 10
Answer: 9
preference(1,(1,1),1,for(atom(hasOiliness(1))),1) preference(1,(1,2),1,for(atom(hasStyle(1))),1) preference(1,(1,3),1,for(atom(hasPrice(1))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(38,better,58) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(4,worse,33) output(4,worse,24) output(4,worse,28) output(58,worse,49) output(36,eq,20) output(38,eq,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 9 10
Answer: 10
preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,11),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,12),1,for(atom(hasStyle(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(4,worse,33) output(4,worse,24) output(4,worse,28) output(36,eq,20) output(38,eq,58) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 8 11
Answer: 11
preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasStyle(0))),1) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,12),1,for(atom(hasStyle(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(4,worse,33) output(4,worse,24) output(4,worse,28) output(36,eq,20) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 7 11
Answer: 12
preference(1,(1,1),1,for(atom(hasStyle(0))),1) preference(1,(1,2),1,for(atom(hasOiliness(1))),2) preference(1,(1,3),1,for(atom(hasPrice(1))),2) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(11))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,9),1,for(atom(hasOiliness(0))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,12),1,for(atom(hasStyle(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(4))),10) preference(1,less(weight)) output(38,better,58) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(58,worse,49) output(36,eq,20) output(38,eq,49) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 6 12
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(1))),6) preference(1,(1,3),1,for(atom(hasPrice(1))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),4) preference(1,(1,12),1,for(atom(hasStyle(1))),6) preference(1,(1,13),1,for(atom(hasOiliness(0))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(0))),6) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(9,worse,38) output(36,eq,20) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 5 9
Answer: 14
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,5),1,for(atom(hasPrice(1))),2) preference(1,(1,6),1,for(atom(hasOiliness(1))),9) preference(1,(1,7),1,for(atom(hasStyle(0))),2) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,12),1,for(atom(hasPrice(0))),9) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,14),1,for(atom(hasStyle(1))),9) preference(1,less(weight)) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(38,worse,58) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 4 13
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,3),1,for(atom(hasStyle(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),3) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),4) preference(1,(1,11),1,for(atom(hasOiliness(1))),2) preference(1,(1,12),1,for(atom(hasStyle(1))),8) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),2) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 14
Progression : 3 [ 1;14] (Error: 13)
Answer: 16
preference(1,(1,1),1,for(atom(hasOiliness(0))),7) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasOiliness(1))),9) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,7),1,for(atom(hasStyle(0))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,12),1,for(atom(hasPrice(1))),6) preference(1,(1,13),1,for(atom(hasPrice(0))),9) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 11
Progression : 3 [ 2;11] (Error: 4.5)
Answer: 17
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,6),1,for(atom(hasOiliness(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,12),1,for(atom(hasStyle(0))),6) preference(1,(1,13),1,for(atom(hasStyle(1))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 10
Answer: 18
preference(1,(1,1),1,for(atom(hasOiliness(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,3),1,for(atom(hasStyle(0))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(11))),4) preference(1,(1,7),1,for(atom(hasOiliness(0))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,13),1,for(atom(hasStyle(1))),7) preference(1,(1,14),1,for(atom(hasPrice(1))),8) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 9
Answer: 19
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,4),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,5),1,for(atom(hasStyle(1))),2) preference(1,(1,6),1,for(atom(hasPrice(1))),1) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(38,better,58) output(38,better,49) output(38,better,4) output(38,better,33) output(38,better,24) output(38,better,28) output(4,better,33) output(4,better,24) output(4,better,28) output(9,better,38) output(9,better,58) output(9,better,49) output(9,better,4) output(9,better,33) output(9,better,24) output(9,better,28) output(20,better,9) output(20,better,38) output(20,better,58) output(20,better,49) output(20,better,4) output(20,better,33) output(20,better,24) output(20,better,28) output(36,better,20) output(36,better,9) output(36,better,38) output(36,better,58) output(36,better,49) output(36,better,4) output(36,better,33) output(36,better,24) output(36,better,28) output(49,better,4) output(49,better,33) output(49,better,24) output(49,better,28) output(58,better,49) output(58,better,4) output(58,better,33) output(58,better,24) output(58,better,28) output(33,eq,24) output(33,eq,28) output(24,eq,28)
Optimization: 3 8
Progression : 3 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.048 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 3 8
Calls        : 1
Time         : 298.255s (Solving: 296.33s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.036s
Threads      : 4        (Winner: 4)

Choices      : 8418231  (Domain: 504386)
Conflicts    : 6412667  (Analyzed: 6412664)
Restarts     : 5673     (Average: 1130.38 Last: 407518)
Model-Level  : 89.5    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6453341  (Deleted: 6158482)
  Binary     : 2752     (Ratio:   0.04%)
  Ternary    : 5954     (Ratio:   0.09%)
  Conflict   : 6412664  (Average Length:  333.8 Ratio:  99.37%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 40677    (Average Length:   39.5 Ratio:   0.63%) 
  Distributed: 13560    (Ratio:   0.21% Average LBD: 3.55) 
  Integrated : 40680    (Ratio: 300.00% Unit: 36 Average Jumps: 6.72)
Backjumps    : 6412664  (Average:  1.26 Max: 603 Sum: 8059082)
  Executed   : 6412663  (Average:  1.26 Max: 603 Sum: 8059065 Ratio: 100.00%)
  Bounded    : 1        (Average: 17.00 Max:  17 Sum:     17 Ratio:   0.00%)

Rules        : 185977  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10459   
Bodies       : 8690    
  Sum        : 57      
  Count      : 14      
Equivalences : 9295     (Atom=Atom: 531 Body=Body: 271 Other: 8493)
Tight        : Yes
Variables    : 7509     (Eliminated:    0 Frozen: 4849)
Constraints  : 188536   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasPrice(1)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasStyle(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  1 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasStyle(0)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  4 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasStyle(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasStyle(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasPrice(1)) ; 
  9 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  6 :: atom(hasStyle(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasStyle(0)) ; 
  4 :: atom(hasMinorGrp(11)) ; 
  9 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasStyle(1)) ; 
  8 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasStyle(1)) ; 
  1 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.
