asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(13,eq,41) output(13,eq,1) output(13,eq,11) output(13,eq,2) output(13,eq,33) output(13,eq,4) output(13,eq,10) output(13,eq,44) output(13,eq,84) output(41,eq,1) output(41,eq,11) output(41,eq,2) output(41,eq,33) output(41,eq,4) output(41,eq,10) output(41,eq,44) output(41,eq,84) output(1,eq,11) output(1,eq,2) output(1,eq,33) output(1,eq,4) output(1,eq,10) output(1,eq,44) output(1,eq,84) output(11,eq,2) output(11,eq,33) output(11,eq,4) output(11,eq,10) output(11,eq,44) output(11,eq,84) output(2,eq,33) output(2,eq,4) output(2,eq,10) output(2,eq,44) output(2,eq,84) output(33,eq,4) output(33,eq,10) output(33,eq,44) output(33,eq,84) output(4,eq,10) output(4,eq,44) output(4,eq,84) output(10,eq,44) output(10,eq,84) output(44,eq,84)
Optimization: 45 0
Answer: 2
preference(1,(1,10),1,for(atom(hasMinorGrp(6))),7) preference(1,less(weight)) output(13,better,41) output(41,worse,1) output(41,worse,11) output(41,worse,2) output(41,worse,33) output(41,worse,4) output(41,worse,10) output(41,worse,44) output(41,worse,84) output(13,eq,1) output(13,eq,11) output(13,eq,2) output(13,eq,33) output(13,eq,4) output(13,eq,10) output(13,eq,44) output(13,eq,84) output(1,eq,11) output(1,eq,2) output(1,eq,33) output(1,eq,4) output(1,eq,10) output(1,eq,44) output(1,eq,84) output(11,eq,2) output(11,eq,33) output(11,eq,4) output(11,eq,10) output(11,eq,44) output(11,eq,84) output(2,eq,33) output(2,eq,4) output(2,eq,10) output(2,eq,44) output(2,eq,84) output(33,eq,4) output(33,eq,10) output(33,eq,44) output(33,eq,84) output(4,eq,10) output(4,eq,44) output(4,eq,84) output(10,eq,44) output(10,eq,84) output(44,eq,84)
Optimization: 44 1
Answer: 3
preference(1,(1,10),1,for(atom(hasMinorGrp(10))),10) preference(1,less(weight)) output(1,better,84) output(2,better,84) output(4,better,84) output(10,better,84) output(11,better,84) output(13,better,84) output(33,better,84) output(41,better,84) output(44,better,84) output(13,eq,41) output(13,eq,1) output(13,eq,11) output(13,eq,2) output(13,eq,33) output(13,eq,4) output(13,eq,10) output(13,eq,44) output(41,eq,1) output(41,eq,11) output(41,eq,2) output(41,eq,33) output(41,eq,4) output(41,eq,10) output(41,eq,44) output(1,eq,11) output(1,eq,2) output(1,eq,33) output(1,eq,4) output(1,eq,10) output(1,eq,44) output(11,eq,2) output(11,eq,33) output(11,eq,4) output(11,eq,10) output(11,eq,44) output(2,eq,33) output(2,eq,4) output(2,eq,10) output(2,eq,44) output(33,eq,4) output(33,eq,10) output(33,eq,44) output(4,eq,10) output(4,eq,44) output(10,eq,44)
Optimization: 36 1
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(11))),7) preference(1,less(weight)) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,84) output(33,better,84) output(41,better,1) output(41,better,2) output(41,better,84) output(44,better,84) output(1,worse,11) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(1,worse,44) output(2,worse,33) output(2,worse,4) output(2,worse,10) output(2,worse,44) output(4,worse,10) output(11,worse,10) output(13,worse,41) output(13,worse,11) output(13,worse,33) output(13,worse,4) output(13,worse,10) output(13,worse,44) output(33,worse,10) output(41,worse,10) output(13,eq,1) output(13,eq,2) output(13,eq,84) output(41,eq,11) output(41,eq,33) output(41,eq,4) output(41,eq,44) output(1,eq,2) output(1,eq,84) output(11,eq,33) output(11,eq,4) output(11,eq,44) output(2,eq,84) output(33,eq,4) output(33,eq,44) output(4,eq,44)
Optimization: 35 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(7))),7) preference(1,less(weight)) output(1,better,44) output(2,better,44) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,44) output(11,better,84) output(13,better,44) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,2) output(41,better,44) output(41,better,84) output(1,worse,11) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(2,worse,33) output(2,worse,4) output(2,worse,10) output(4,worse,10) output(11,worse,10) output(13,worse,41) output(13,worse,11) output(13,worse,33) output(13,worse,4) output(13,worse,10) output(33,worse,10) output(41,worse,10) output(44,worse,84) output(13,eq,1) output(13,eq,2) output(13,eq,84) output(41,eq,11) output(41,eq,33) output(41,eq,4) output(1,eq,2) output(1,eq,84) output(11,eq,33) output(11,eq,4) output(2,eq,84) output(33,eq,4)
Optimization: 29 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),7) preference(1,less(weight)) output(1,better,2) output(1,better,44) output(1,better,84) output(2,better,44) output(2,better,84) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,44) output(11,better,84) output(13,better,44) output(13,better,84) output(33,better,44) output(33,better,84) output(41,better,2) output(41,better,44) output(41,better,84) output(1,worse,10) output(2,worse,33) output(2,worse,4) output(2,worse,10) output(4,worse,10) output(11,worse,10) output(13,worse,41) output(13,worse,1) output(13,worse,11) output(13,worse,33) output(13,worse,4) output(13,worse,10) output(33,worse,10) output(41,worse,10) output(44,worse,84) output(13,eq,2) output(41,eq,1) output(41,eq,11) output(41,eq,33) output(41,eq,4) output(1,eq,11) output(1,eq,33) output(1,eq,4) output(11,eq,33) output(11,eq,4) output(33,eq,4)
Optimization: 26 14
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),8) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,3),1,for(atom(hasPrice(0))),8) preference(1,(1,4),1,for(atom(hasOiliness(0))),10) preference(1,(1,5),1,for(atom(hasPrice(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,10),1,for(atom(hasOiliness(1))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),7) preference(1,less(weight)) output(1,better,2) output(1,better,44) output(1,better,84) output(2,better,44) output(2,better,84) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,44) output(11,better,84) output(13,better,44) output(13,better,84) output(33,better,44) output(33,better,84) output(41,better,2) output(41,better,44) output(41,better,84) output(44,better,84) output(1,worse,10) output(2,worse,33) output(2,worse,4) output(2,worse,10) output(4,worse,10) output(11,worse,10) output(13,worse,41) output(13,worse,1) output(13,worse,11) output(13,worse,33) output(13,worse,4) output(13,worse,10) output(33,worse,10) output(41,worse,10) output(13,eq,2) output(41,eq,1) output(41,eq,11) output(41,eq,33) output(41,eq,4) output(1,eq,11) output(1,eq,33) output(1,eq,4) output(11,eq,33) output(11,eq,4) output(33,eq,4)
Optimization: 25 14
Answer: 8
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,84) output(4,better,84) output(10,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,84) output(33,better,84) output(41,better,11) output(41,better,84) output(44,better,84) output(1,worse,10) output(1,worse,44) output(2,worse,10) output(2,worse,44) output(4,worse,10) output(4,worse,44) output(11,worse,2) output(11,worse,33) output(11,worse,4) output(11,worse,10) output(11,worse,44) output(11,worse,84) output(33,worse,10) output(33,worse,44) output(41,worse,1) output(41,worse,2) output(41,worse,10) output(41,worse,44) output(13,eq,10) output(13,eq,44) output(41,eq,33) output(41,eq,4) output(33,eq,4) output(10,eq,44)
Optimization: 24 14
Answer: 9
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,14),1,for(atom(hasOiliness(1))),8) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,84) output(4,better,84) output(10,better,84) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,84) output(33,better,84) output(41,better,11) output(41,better,84) output(44,better,84) output(1,worse,10) output(1,worse,44) output(2,worse,10) output(2,worse,44) output(4,worse,10) output(4,worse,44) output(11,worse,2) output(11,worse,33) output(11,worse,4) output(11,worse,10) output(11,worse,44) output(33,worse,10) output(33,worse,44) output(41,worse,1) output(41,worse,2) output(41,worse,10) output(41,worse,44) output(13,eq,10) output(13,eq,44) output(41,eq,33) output(41,eq,4) output(33,eq,4) output(10,eq,44)
Optimization: 23 14
Answer: 10
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,84) output(4,better,84) output(10,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,84) output(33,better,84) output(41,better,11) output(41,better,33) output(41,better,84) output(44,better,84) output(1,worse,10) output(1,worse,44) output(2,worse,10) output(2,worse,44) output(4,worse,10) output(4,worse,44) output(10,worse,44) output(11,worse,2) output(11,worse,33) output(11,worse,4) output(11,worse,10) output(11,worse,44) output(11,worse,84) output(33,worse,4) output(33,worse,10) output(33,worse,44) output(41,worse,1) output(41,worse,2) output(41,worse,10) output(41,worse,44) output(13,eq,44) output(41,eq,4)
Optimization: 22 14
Answer: 11
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),3) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,84) output(4,better,84) output(10,better,84) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,84) output(33,better,84) output(41,better,11) output(41,better,33) output(41,better,84) output(44,better,84) output(1,worse,10) output(1,worse,44) output(2,worse,10) output(2,worse,44) output(4,worse,10) output(4,worse,44) output(10,worse,44) output(11,worse,2) output(11,worse,4) output(11,worse,10) output(11,worse,44) output(33,worse,4) output(33,worse,10) output(33,worse,44) output(41,worse,1) output(41,worse,2) output(41,worse,10) output(41,worse,44) output(13,eq,44) output(41,eq,4) output(11,eq,33)
Optimization: 21 13
Answer: 12
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,2),1,for(atom(hasStyle(1))),8) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,6),1,for(atom(hasPrice(1))),7) preference(1,(1,7),1,for(atom(hasPrice(0))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,14),1,for(atom(hasOiliness(1))),7) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,84) output(4,better,84) output(10,better,84) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,84) output(33,better,84) output(41,better,11) output(41,better,84) output(44,better,84) output(1,worse,44) output(2,worse,44) output(4,worse,44) output(10,worse,44) output(11,worse,2) output(11,worse,33) output(11,worse,4) output(11,worse,10) output(11,worse,44) output(33,worse,44) output(41,worse,1) output(41,worse,2) output(41,worse,44) output(13,eq,44) output(41,eq,33) output(41,eq,4) output(41,eq,10) output(33,eq,4) output(33,eq,10) output(4,eq,10)
Optimization: 20 14
Answer: 13
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(13,better,1) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(1,worse,11) output(1,worse,2) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(1,worse,44) output(1,worse,84) output(10,worse,84) output(11,worse,2) output(11,worse,4) output(11,worse,84) output(13,worse,41) output(33,worse,4) output(33,worse,84) output(44,worse,84) output(13,eq,2) output(10,eq,44)
Optimization: 17 13
Answer: 14
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(1,worse,11) output(1,worse,2) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(1,worse,44) output(1,worse,84) output(10,worse,84) output(11,worse,2) output(11,worse,4) output(13,worse,41) output(33,worse,4) output(44,worse,84) output(13,eq,2) output(33,eq,84) output(10,eq,44)
Optimization: 16 13
Answer: 15
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(1,worse,11) output(1,worse,2) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(1,worse,44) output(1,worse,84) output(11,worse,2) output(11,worse,4) output(13,worse,41) output(33,worse,4) output(13,eq,2) output(10,eq,44) output(10,eq,84) output(44,eq,84)
Optimization: 15 13
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(1,worse,11) output(1,worse,2) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(1,worse,44) output(11,worse,2) output(11,worse,4) output(13,worse,41) output(33,worse,4) output(13,eq,2) output(1,eq,84) output(10,eq,44)
Optimization: 13 13
Answer: 17
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,2),1,for(atom(hasMinorGrp(3))),10) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(1,worse,11) output(1,worse,2) output(1,worse,33) output(1,worse,4) output(1,worse,10) output(1,worse,44) output(11,worse,2) output(11,worse,4) output(13,worse,41) output(33,worse,4) output(13,eq,2) output(10,eq,44)
Optimization: 12 14
Answer: 18
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(1,worse,11) output(1,worse,2) output(1,worse,4) output(11,worse,2) output(11,worse,4) output(13,worse,41) output(33,worse,4) output(13,eq,2) output(1,eq,33) output(10,eq,44)
Optimization: 10 14
Answer: 19
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,3),1,for(atom(hasPrice(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasOiliness(1))),2) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),2) preference(1,less(weight)) output(1,better,11) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,84) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,11) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(11,worse,2) output(11,worse,4) output(13,worse,41) output(33,worse,4) output(13,eq,1) output(13,eq,2) output(1,eq,2) output(10,eq,44)
Optimization: 8 13
Answer: 20
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasStyle(1))),2) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,4),1,for(atom(hasPrice(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,6),1,for(atom(hasOiliness(1))),7) preference(1,(1,8),1,for(atom(hasOiliness(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),5) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,4) output(2,better,44) output(2,better,84) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,4) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(2,worse,33) output(2,worse,10) output(4,worse,10) output(13,eq,41) output(11,eq,33) output(11,eq,10) output(33,eq,10)
Optimization: 7 11
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),5) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),9) preference(1,(1,6),1,for(atom(hasPrice(0))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(8))),2) preference(1,(1,10),1,for(atom(hasPrice(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasOiliness(1))),9) preference(1,(1,13),1,for(atom(hasStyle(1))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),10) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(2,worse,4) output(33,worse,4) output(33,worse,10) output(33,worse,44) output(11,eq,4) output(10,eq,44)
Optimization: 6 12
Answer: 22
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(4))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasPrice(1))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),5) preference(1,(1,8),1,for(atom(hasOiliness(1))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,12),1,for(atom(hasPrice(0))),1) preference(1,(1,13),1,for(atom(hasStyle(1))),1) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),10) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,44) output(33,better,84) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(33,worse,4) output(13,eq,41) output(13,eq,1) output(41,eq,1) output(33,eq,10)
Optimization: 5 14
Answer: 23
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,13),1,for(atom(hasOiliness(1))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),6) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,44) output(33,better,84) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(33,worse,4) output(41,worse,1) output(13,eq,1) output(33,eq,10)
Optimization: 4 14
Answer: 24
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasOiliness(1))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),3) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(4,worse,10) output(33,eq,10) output(4,eq,44)
Optimization: 3 14
Answer: 25
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasStyle(1))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),1) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,5),1,for(atom(hasOiliness(1))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(4))),3) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,11),1,for(atom(hasOiliness(0))),4) preference(1,(1,12),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),3) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(4,worse,10) output(33,eq,10)
Optimization: 2 14
Answer: 26
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),8) preference(1,(1,7),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,9),1,for(atom(hasStyle(1))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,11),1,for(atom(hasPrice(0))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(8))),6) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),9) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84) output(13,eq,41)
Optimization: 1 12
Answer: 27
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,11),1,for(atom(hasPrice(1))),3) preference(1,(1,12),1,for(atom(hasPrice(0))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(8))),10) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Answer: 28
preference(1,(1,1),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,7),1,for(atom(hasPrice(0))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),10) preference(1,(1,14),1,for(atom(hasMinorGrp(3))),2) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
Answer: 29
preference(1,(1,3),1,for(atom(hasPrice(0))),3) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),4) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),9) preference(1,(1,11),1,for(atom(hasOiliness(1))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),2) preference(1,less(weight)) output(1,better,11) output(1,better,2) output(1,better,33) output(1,better,4) output(1,better,10) output(1,better,44) output(1,better,84) output(2,better,33) output(2,better,4) output(2,better,10) output(2,better,44) output(2,better,84) output(4,better,10) output(4,better,44) output(4,better,84) output(10,better,44) output(10,better,84) output(11,better,2) output(11,better,33) output(11,better,4) output(11,better,10) output(11,better,44) output(11,better,84) output(13,better,41) output(13,better,1) output(13,better,11) output(13,better,2) output(13,better,33) output(13,better,4) output(13,better,10) output(13,better,44) output(13,better,84) output(33,better,4) output(33,better,10) output(33,better,44) output(33,better,84) output(41,better,1) output(41,better,11) output(41,better,2) output(41,better,33) output(41,better,4) output(41,better,10) output(41,better,44) output(41,better,84) output(44,better,84)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.048 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 29+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 298.199s (Solving: 296.33s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.704s
Threads      : 4        (Winner: 4)

Choices      : 7335003  (Domain: 696421)
Conflicts    : 6669970  (Analyzed: 6669967)
Restarts     : 6006     (Average: 1110.55 Last: 443042)
Model-Level  : 40.5    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6827428  (Deleted: 6487335)
  Binary     : 1407     (Ratio:   0.02%)
  Ternary    : 8910     (Ratio:   0.13%)
  Conflict   : 6669967  (Average Length:  277.5 Ratio:  97.69%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 157461   (Average Length:  251.8 Ratio:   2.31%) 
  Distributed: 52571    (Ratio:   0.79% Average LBD: 3.74) 
  Integrated : 157713   (Ratio: 300.00% Unit: 116 Average Jumps: 6.42)
Backjumps    : 6669967  (Average:  1.09 Max:  52 Sum: 7256242)
  Executed   : 6669964  (Average:  1.09 Max:  52 Sum: 7256194 Ratio: 100.00%)
  Bounded    : 3        (Average: 16.00 Max:  44 Sum:     48 Ratio:   0.00%)

Rules        : 187386  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10479   
Bodies       : 8723    
  Sum        : 90      
  Count      : 14      
Equivalences : 5335     (Atom=Atom: 463 Body=Body: 194 Other: 4678)
Tight        : Yes
Variables    : 7579     (Eliminated:    0 Frozen: 4919)
Constraints  : 190041   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(11)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  1 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  7 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  2 :: atom(hasPrice(0)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(8)) ; 
  3 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  1 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(1)) ; 
  10 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(3)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  5 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(4)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  1 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  5 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  4 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(8)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  9 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  5 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(4)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  3 :: atom(hasPrice(0)) ; 
  6 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasMinorGrp(8)) ; 
  2 :: atom(hasMinorGrp(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(8)) ; 
  6 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(4)) 
}.
