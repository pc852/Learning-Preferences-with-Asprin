asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,19) output(8,eq,36) output(8,eq,1) output(8,eq,16) output(8,eq,13) output(8,eq,7) output(8,eq,9) output(8,eq,23) output(8,eq,69) output(19,eq,36) output(19,eq,1) output(19,eq,16) output(19,eq,13) output(19,eq,7) output(19,eq,9) output(19,eq,23) output(19,eq,69) output(36,eq,1) output(36,eq,16) output(36,eq,13) output(36,eq,7) output(36,eq,9) output(36,eq,23) output(36,eq,69) output(1,eq,16) output(1,eq,13) output(1,eq,7) output(1,eq,9) output(1,eq,23) output(1,eq,69) output(16,eq,13) output(16,eq,7) output(16,eq,9) output(16,eq,23) output(16,eq,69) output(13,eq,7) output(13,eq,9) output(13,eq,23) output(13,eq,69) output(7,eq,9) output(7,eq,23) output(7,eq,69) output(9,eq,23) output(9,eq,69) output(23,eq,69)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(7,better,9) output(8,better,36) output(8,better,1) output(16,better,13) output(16,better,9) output(19,better,36) output(19,better,1) output(1,worse,16) output(1,worse,13) output(1,worse,7) output(1,worse,9) output(1,worse,23) output(1,worse,69) output(8,worse,16) output(8,worse,7) output(8,worse,23) output(8,worse,69) output(9,worse,23) output(9,worse,69) output(13,worse,7) output(13,worse,23) output(13,worse,69) output(19,worse,16) output(19,worse,7) output(19,worse,23) output(19,worse,69) output(36,worse,16) output(36,worse,13) output(36,worse,7) output(36,worse,9) output(36,worse,23) output(36,worse,69) output(8,eq,19) output(8,eq,13) output(8,eq,9) output(19,eq,13) output(19,eq,9) output(36,eq,1) output(16,eq,7) output(16,eq,23) output(16,eq,69) output(13,eq,9) output(7,eq,23) output(7,eq,69) output(23,eq,69)
Optimization: 38 13
Answer: 3
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(8,better,36) output(8,better,1) output(8,better,7) output(13,better,7) output(16,better,13) output(16,better,7) output(16,better,9) output(19,better,36) output(19,better,1) output(19,better,7) output(1,worse,16) output(1,worse,13) output(1,worse,9) output(1,worse,23) output(1,worse,69) output(7,worse,9) output(7,worse,23) output(7,worse,69) output(8,worse,16) output(8,worse,23) output(8,worse,69) output(9,worse,23) output(9,worse,69) output(13,worse,23) output(13,worse,69) output(19,worse,16) output(19,worse,23) output(19,worse,69) output(36,worse,16) output(36,worse,13) output(36,worse,9) output(36,worse,23) output(36,worse,69) output(8,eq,19) output(8,eq,13) output(8,eq,9) output(19,eq,13) output(19,eq,9) output(36,eq,1) output(36,eq,7) output(1,eq,7) output(16,eq,23) output(16,eq,69) output(13,eq,9) output(23,eq,69)
Optimization: 35 14
Answer: 4
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(1,better,9) output(7,better,9) output(8,better,36) output(8,better,1) output(8,better,9) output(13,better,9) output(16,better,13) output(16,better,9) output(19,better,36) output(19,better,1) output(19,better,9) output(36,better,9) output(1,worse,16) output(1,worse,13) output(1,worse,7) output(1,worse,23) output(1,worse,69) output(8,worse,16) output(8,worse,7) output(8,worse,23) output(8,worse,69) output(9,worse,23) output(9,worse,69) output(13,worse,7) output(13,worse,23) output(13,worse,69) output(19,worse,16) output(19,worse,7) output(19,worse,23) output(19,worse,69) output(36,worse,16) output(36,worse,13) output(36,worse,7) output(36,worse,23) output(36,worse,69) output(8,eq,19) output(8,eq,13) output(19,eq,13) output(36,eq,1) output(16,eq,7) output(16,eq,23) output(16,eq,69) output(7,eq,23) output(7,eq,69) output(23,eq,69)
Optimization: 33 14
Answer: 5
preference(1,(1,1),1,for(atom(hasStyle(1))),2) preference(1,(1,2),1,for(atom(hasPrice(0))),2) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,4),1,for(atom(hasOiliness(1))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,7),1,for(atom(hasOiliness(0))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(11))),2) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,(1,14),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight)) output(1,better,16) output(1,better,7) output(8,better,1) output(8,better,16) output(8,better,7) output(13,better,7) output(16,better,7) output(19,better,1) output(19,better,16) output(19,better,7) output(36,better,1) output(36,better,16) output(36,better,7) output(1,worse,13) output(1,worse,9) output(1,worse,23) output(1,worse,69) output(7,worse,9) output(7,worse,23) output(7,worse,69) output(16,worse,13) output(16,worse,9) output(16,worse,23) output(16,worse,69) output(8,eq,19) output(8,eq,36) output(8,eq,13) output(8,eq,9) output(8,eq,23) output(8,eq,69) output(19,eq,36) output(19,eq,13) output(19,eq,9) output(19,eq,23) output(19,eq,69) output(36,eq,13) output(36,eq,9) output(36,eq,23) output(36,eq,69) output(13,eq,9) output(13,eq,23) output(13,eq,69) output(9,eq,23) output(9,eq,69) output(23,eq,69)
Optimization: 32 14
Answer: 6
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(7,better,9) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,69) output(9,better,69) output(13,better,69) output(16,better,13) output(16,better,9) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,69) output(23,better,69) output(1,worse,16) output(1,worse,13) output(1,worse,7) output(1,worse,9) output(1,worse,23) output(8,worse,16) output(8,worse,7) output(8,worse,23) output(9,worse,23) output(13,worse,7) output(13,worse,23) output(19,worse,16) output(19,worse,7) output(19,worse,23) output(36,worse,16) output(36,worse,13) output(36,worse,7) output(36,worse,9) output(36,worse,23) output(8,eq,19) output(8,eq,13) output(8,eq,9) output(19,eq,13) output(19,eq,9) output(36,eq,1) output(36,eq,69) output(1,eq,69) output(16,eq,7) output(16,eq,23) output(13,eq,9) output(7,eq,23)
Optimization: 31 14
Answer: 7
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),4) preference(1,(1,2),1,for(atom(hasOiliness(1))),4) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(4))),8) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasStyle(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,10),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,11),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(8,better,36) output(8,better,1) output(8,better,7) output(8,better,69) output(9,better,69) output(13,better,7) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,7) output(19,better,69) output(23,better,69) output(1,worse,16) output(1,worse,13) output(1,worse,9) output(1,worse,23) output(7,worse,9) output(7,worse,23) output(8,worse,16) output(8,worse,23) output(9,worse,23) output(13,worse,23) output(19,worse,16) output(19,worse,23) output(36,worse,16) output(36,worse,13) output(36,worse,9) output(36,worse,23) output(8,eq,19) output(8,eq,13) output(8,eq,9) output(19,eq,13) output(19,eq,9) output(36,eq,1) output(36,eq,7) output(36,eq,69) output(1,eq,7) output(1,eq,69) output(16,eq,23) output(13,eq,9) output(7,eq,69)
Optimization: 29 14
Answer: 8
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(9))),9) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,13),1,for(atom(hasStyle(1))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(1,better,7) output(1,better,9) output(1,better,69) output(8,better,1) output(8,better,7) output(8,better,9) output(8,better,69) output(13,better,7) output(13,better,9) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,1) output(19,better,7) output(19,better,9) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,7) output(36,better,9) output(36,better,69) output(1,worse,16) output(1,worse,13) output(1,worse,23) output(7,worse,9) output(7,worse,23) output(7,worse,69) output(8,worse,16) output(9,worse,23) output(9,worse,69) output(19,worse,16) output(36,worse,16) output(8,eq,19) output(8,eq,36) output(8,eq,13) output(8,eq,23) output(19,eq,36) output(19,eq,13) output(19,eq,23) output(36,eq,13) output(36,eq,23) output(13,eq,23)
Optimization: 21 14
Answer: 9
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,13),1,for(atom(hasStyle(1))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(1,better,7) output(1,better,9) output(1,better,69) output(7,better,9) output(8,better,1) output(8,better,7) output(8,better,9) output(8,better,69) output(13,better,7) output(13,better,9) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,1) output(19,better,7) output(19,better,9) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,7) output(36,better,9) output(36,better,69) output(1,worse,16) output(1,worse,13) output(1,worse,23) output(7,worse,23) output(8,worse,16) output(9,worse,23) output(9,worse,69) output(19,worse,16) output(36,worse,16) output(8,eq,19) output(8,eq,36) output(8,eq,13) output(8,eq,23) output(19,eq,36) output(19,eq,13) output(19,eq,23) output(36,eq,13) output(36,eq,23) output(13,eq,23) output(7,eq,69)
Optimization: 20 13
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(4))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,13),1,for(atom(hasStyle(1))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(1,better,7) output(1,better,9) output(1,better,69) output(7,better,9) output(8,better,36) output(8,better,1) output(8,better,7) output(8,better,9) output(8,better,69) output(13,better,7) output(13,better,9) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,7) output(19,better,9) output(19,better,69) output(23,better,69) output(36,better,7) output(36,better,9) output(36,better,69) output(1,worse,16) output(1,worse,13) output(1,worse,23) output(7,worse,23) output(8,worse,16) output(9,worse,23) output(9,worse,69) output(19,worse,16) output(36,worse,16) output(36,worse,13) output(36,worse,23) output(8,eq,19) output(8,eq,13) output(8,eq,23) output(19,eq,13) output(19,eq,23) output(36,eq,1) output(13,eq,23) output(7,eq,69)
Optimization: 19 14
Answer: 11
preference(1,(1,1),1,for(atom(hasOiliness(1))),10) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),6) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),2) preference(1,(1,5),1,for(atom(hasMinorGrp(0))),2) preference(1,(1,6),1,for(atom(hasOiliness(0))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(3))),2) preference(1,(1,9),1,for(atom(hasPrice(1))),2) preference(1,(1,10),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),10) preference(1,(1,13),1,for(atom(hasStyle(0))),2) preference(1,(1,14),1,for(atom(hasStyle(1))),4) preference(1,less(weight)) output(1,better,16) output(1,better,7) output(1,better,23) output(1,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,23) output(13,better,69) output(16,better,7) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(7,worse,9) output(7,worse,69) output(16,worse,13) output(16,worse,9) output(23,worse,69) output(36,worse,1) output(36,worse,16) output(36,worse,13) output(36,worse,9) output(36,worse,69) output(8,eq,19) output(36,eq,7) output(36,eq,23) output(1,eq,13) output(1,eq,9) output(13,eq,9) output(7,eq,23)
Optimization: 17 14
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(11))),3) preference(1,(1,2),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,5),1,for(atom(hasStyle(0))),10) preference(1,(1,6),1,for(atom(hasOiliness(1))),6) preference(1,(1,7),1,for(atom(hasPrice(1))),6) preference(1,(1,8),1,for(atom(hasOiliness(0))),2) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),10) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,12),1,for(atom(hasMinorGrp(9))),10) preference(1,(1,13),1,for(atom(hasStyle(1))),6) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(8,better,1) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(13,better,7) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,1) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(36,better,1) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(1,worse,16) output(7,worse,9) output(7,worse,23) output(7,worse,69) output(8,worse,16) output(13,worse,9) output(13,worse,69) output(19,worse,16) output(23,worse,69) output(36,worse,16) output(8,eq,19) output(8,eq,36) output(19,eq,36) output(13,eq,23) output(9,eq,69)
Optimization: 15 14
Answer: 13
preference(1,(1,1),1,for(atom(hasMinorGrp(9))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,3),1,for(atom(hasOiliness(0))),4) preference(1,(1,4),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasStyle(0))),9) preference(1,(1,8),1,for(atom(hasMinorGrp(7))),3) preference(1,(1,9),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,10),1,for(atom(hasOiliness(1))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(4))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(5))),6) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 14
Progression : 1 [ 1;14] (Error: 13)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrice(0))),5) preference(1,(1,2),1,for(atom(hasStyle(0))),1) preference(1,(1,3),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(9))),6) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,11),1,for(atom(hasStyle(1))),4) preference(1,(1,13),1,for(atom(hasOiliness(1))),3) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 13
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),10) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),10) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 11
Answer: 17
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,2),1,for(atom(hasOiliness(1))),10) preference(1,(1,3),1,for(atom(hasPrice(0))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMajorGrp(1))),5) preference(1,(1,11),1,for(atom(hasMinorGrp(11))),8) preference(1,(1,13),1,for(atom(hasOiliness(0))),6) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 10
Progression : 1 [ 2;10] (Error: 4)
Answer: 18
preference(1,(1,2),1,for(atom(hasMinorGrp(11))),10) preference(1,(1,3),1,for(atom(hasMinorGrp(3))),6) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasOiliness(1))),6) preference(1,(1,8),1,for(atom(hasStyle(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(0))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,(1,13),1,for(atom(hasMinorGrp(9))),4) preference(1,(1,14),1,for(atom(hasMinorGrp(6))),10) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 9
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(0))),1) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(11))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),5) preference(1,(1,10),1,for(atom(hasOiliness(1))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),9) preference(1,(1,13),1,for(atom(hasPrice(1))),2) preference(1,less(weight)) output(1,better,16) output(1,better,13) output(1,better,7) output(1,better,9) output(1,better,23) output(1,better,69) output(7,better,9) output(7,better,23) output(7,better,69) output(8,better,36) output(8,better,1) output(8,better,16) output(8,better,13) output(8,better,7) output(8,better,9) output(8,better,23) output(8,better,69) output(9,better,23) output(9,better,69) output(13,better,7) output(13,better,9) output(13,better,23) output(13,better,69) output(16,better,13) output(16,better,7) output(16,better,9) output(16,better,23) output(16,better,69) output(19,better,36) output(19,better,1) output(19,better,16) output(19,better,13) output(19,better,7) output(19,better,9) output(19,better,23) output(19,better,69) output(23,better,69) output(36,better,1) output(36,better,16) output(36,better,13) output(36,better,7) output(36,better,9) output(36,better,23) output(36,better,69) output(8,eq,19)
Optimization: 1 8
Progression : 1 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.037 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 1 8
Calls        : 1
Time         : 298.171s (Solving: 296.23s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.651s
Threads      : 4        (Winner: 4)

Choices      : 10917760 (Domain: 662240)
Conflicts    : 6548612  (Analyzed: 6548609)
Restarts     : 6082     (Average: 1076.72 Last: 369941)
Model-Level  : 295.3   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6593237  (Deleted: 6339355)
  Binary     : 674      (Ratio:   0.01%)
  Ternary    : 8683     (Ratio:   0.13%)
  Conflict   : 6548609  (Average Length:  246.6 Ratio:  99.32%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 44628    (Average Length:   37.0 Ratio:   0.68%) 
  Distributed: 15075    (Ratio:   0.23% Average LBD: 3.58) 
  Integrated : 45225    (Ratio: 300.00% Unit: 177 Average Jumps: 23.82)
Backjumps    : 6548609  (Average:  1.55 Max: 651 Sum: 10133594)
  Executed   : 6548608  (Average:  1.55 Max: 651 Sum: 10133559 Ratio: 100.00%)
  Bounded    : 1        (Average: 35.00 Max:  35 Sum:     35 Ratio:   0.00%)

Rules        : 186683  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10469   
Bodies       : 8706    
  Sum        : 73      
  Count      : 14      
Equivalences : 9337     (Atom=Atom: 501 Body=Body: 235 Other: 8601)
Tight        : Yes
Variables    : 7543     (Eliminated:    0 Frozen: 4883)
Constraints  : 189286   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(9)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasOiliness(1)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  2 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasPrice(1)) ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  8 :: atom(hasMinorGrp(4)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(1)) ; 
  6 :: atom(hasMinorGrp(11)) ; 
  2 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasMinorGrp(3)) ; 
  2 :: atom(hasPrice(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(0)) ; 
  4 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasMinorGrp(11)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasStyle(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasPrice(1)) ; 
  2 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(0)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasStyle(1)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  9 :: atom(hasStyle(0)) ; 
  3 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(2)) ; 
  9 :: atom(hasMinorGrp(4)) ; 
  6 :: atom(hasMinorGrp(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrice(0)) ; 
  1 :: atom(hasStyle(0)) ; 
  10 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(9)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasOiliness(0)) ; 
  9 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  4 :: atom(hasStyle(1)) ; 
  3 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  8 :: atom(hasMinorGrp(8)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasOiliness(1)) ; 
  4 :: atom(hasPrice(0)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  5 :: atom(hasMajorGrp(1)) ; 
  8 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasOiliness(0)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasMinorGrp(11)) ; 
  6 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasStyle(1)) ; 
  8 :: atom(hasMinorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(9)) ; 
  10 :: atom(hasMinorGrp(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  9 :: atom(hasMinorGrp(11)) ; 
  5 :: atom(hasMinorGrp(3)) ; 
  5 :: atom(hasOiliness(1)) ; 
  9 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasPrice(1)) 
}.
