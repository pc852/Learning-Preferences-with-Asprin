asprin_vL version 1.0
Reading from stdin
-:299:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:309:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:324:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:405:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:666:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:679:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:856:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:985:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1057:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1061:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1061:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1067:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1166:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1192:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1312:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1346:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1368:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:216:1-16: info: no atoms over signature occur in program:
  output/3

-:208:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:209:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(25,eq,0) output(25,eq,6) output(25,eq,8) output(25,eq,5) output(25,eq,3) output(25,eq,19) output(25,eq,47) output(25,eq,81) output(25,eq,84) output(0,eq,6) output(0,eq,8) output(0,eq,5) output(0,eq,3) output(0,eq,19) output(0,eq,47) output(0,eq,81) output(0,eq,84) output(6,eq,8) output(6,eq,5) output(6,eq,3) output(6,eq,19) output(6,eq,47) output(6,eq,81) output(6,eq,84) output(8,eq,5) output(8,eq,3) output(8,eq,19) output(8,eq,47) output(8,eq,81) output(8,eq,84) output(5,eq,3) output(5,eq,19) output(5,eq,47) output(5,eq,81) output(5,eq,84) output(3,eq,19) output(3,eq,47) output(3,eq,81) output(3,eq,84) output(19,eq,47) output(19,eq,81) output(19,eq,84) output(47,eq,81) output(47,eq,84) output(81,eq,84)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(11))),7) preference(1,(1,3),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(9))),7) preference(1,(1,8),1,for(atom(hasStyle(0))),7) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(4))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(8))),7) preference(1,less(weight)) output(0,better,6) output(0,better,84) output(3,better,84) output(5,better,84) output(8,better,84) output(19,better,84) output(25,better,6) output(25,better,84) output(47,better,84) output(81,better,84) output(6,worse,8) output(6,worse,5) output(6,worse,3) output(6,worse,19) output(6,worse,47) output(6,worse,81) output(25,eq,0) output(25,eq,8) output(25,eq,5) output(25,eq,3) output(25,eq,19) output(25,eq,47) output(25,eq,81) output(0,eq,8) output(0,eq,5) output(0,eq,3) output(0,eq,19) output(0,eq,47) output(0,eq,81) output(6,eq,84) output(8,eq,5) output(8,eq,3) output(8,eq,19) output(8,eq,47) output(8,eq,81) output(5,eq,3) output(5,eq,19) output(5,eq,47) output(5,eq,81) output(3,eq,19) output(3,eq,47) output(3,eq,81) output(19,eq,47) output(19,eq,81) output(47,eq,81)
Optimization: 35 9
Answer: 3
preference(1,(1,1),1,for(atom(hasMinorGrp(7))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,3),1,for(atom(hasStyle(0))),1) preference(1,(1,4),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,5),1,for(atom(hasMinorGrp(3))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(4))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(8))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(9))),1) preference(1,less(weight)) output(0,better,6) output(0,better,5) output(0,better,3) output(6,better,5) output(6,better,3) output(8,better,5) output(8,better,3) output(25,better,6) output(25,better,5) output(25,better,3) output(3,worse,19) output(3,worse,47) output(3,worse,81) output(3,worse,84) output(5,worse,19) output(5,worse,47) output(5,worse,81) output(5,worse,84) output(6,worse,8) output(6,worse,19) output(6,worse,47) output(6,worse,81) output(6,worse,84) output(25,worse,0) output(25,worse,8) output(25,worse,19) output(25,worse,47) output(25,worse,81) output(25,worse,84) output(0,eq,8) output(0,eq,19) output(0,eq,47) output(0,eq,81) output(0,eq,84) output(8,eq,19) output(8,eq,47) output(8,eq,81) output(8,eq,84) output(5,eq,3) output(19,eq,47) output(19,eq,81) output(19,eq,84) output(47,eq,81) output(47,eq,84) output(81,eq,84)
Optimization: 35 8
Answer: 4
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(3))),7) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),5) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),7) preference(1,less(weight)) output(0,better,5) output(0,better,3) output(0,better,84) output(3,better,84) output(5,better,84) output(6,better,5) output(6,better,3) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,84) output(19,better,84) output(25,better,5) output(25,better,3) output(25,better,84) output(47,better,84) output(81,better,84) output(3,worse,19) output(3,worse,47) output(3,worse,81) output(5,worse,19) output(5,worse,47) output(5,worse,81) output(25,eq,0) output(25,eq,6) output(25,eq,8) output(25,eq,19) output(25,eq,47) output(25,eq,81) output(0,eq,6) output(0,eq,8) output(0,eq,19) output(0,eq,47) output(0,eq,81) output(6,eq,8) output(6,eq,19) output(6,eq,47) output(6,eq,81) output(8,eq,19) output(8,eq,47) output(8,eq,81) output(5,eq,3) output(19,eq,47) output(19,eq,81) output(47,eq,81)
Optimization: 28 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrice(0))),4) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),2) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,5),1,for(atom(hasStyle(1))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),3) preference(1,(1,7),1,for(atom(hasPrice(1))),2) preference(1,(1,8),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,9),1,for(atom(hasOiliness(0))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(8))),7) preference(1,(1,11),1,for(atom(hasOiliness(1))),9) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),5) preference(1,(1,14),1,for(atom(hasMinorGrp(9))),7) preference(1,less(weight)) output(3,better,47) output(5,better,47) output(6,better,5) output(6,better,3) output(6,better,47) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,5) output(25,better,3) output(25,better,47) output(25,better,81) output(25,better,84) output(0,worse,6) output(0,worse,8) output(0,worse,5) output(0,worse,3) output(0,worse,19) output(0,worse,47) output(0,worse,81) output(0,worse,84) output(3,worse,19) output(3,worse,81) output(3,worse,84) output(5,worse,19) output(5,worse,81) output(5,worse,84) output(6,worse,8) output(6,worse,19) output(6,worse,81) output(6,worse,84) output(47,worse,81) output(47,worse,84) output(25,eq,8) output(25,eq,19) output(8,eq,19) output(5,eq,3) output(81,eq,84)
Optimization: 25 14
Answer: 6
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),3) preference(1,less(weight)) output(0,better,5) output(0,better,3) output(0,better,81) output(0,better,84) output(3,better,81) output(5,better,81) output(6,better,5) output(6,better,3) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,81) output(8,better,84) output(19,better,81) output(19,better,84) output(25,better,5) output(25,better,3) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(3,worse,19) output(3,worse,47) output(5,worse,19) output(5,worse,47) output(81,worse,84) output(25,eq,0) output(25,eq,6) output(25,eq,8) output(25,eq,19) output(25,eq,47) output(0,eq,6) output(0,eq,8) output(0,eq,19) output(0,eq,47) output(6,eq,8) output(6,eq,19) output(6,eq,47) output(8,eq,19) output(8,eq,47) output(5,eq,3) output(5,eq,84) output(3,eq,84) output(19,eq,47)
Optimization: 23 13
Answer: 7
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,9),1,for(atom(hasMinorGrp(5))),3) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),4) preference(1,less(weight)) output(0,better,5) output(0,better,3) output(0,better,81) output(0,better,84) output(3,better,81) output(3,better,84) output(5,better,81) output(5,better,84) output(6,better,5) output(6,better,3) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,81) output(8,better,84) output(19,better,81) output(19,better,84) output(25,better,5) output(25,better,3) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(3,worse,19) output(3,worse,47) output(5,worse,19) output(5,worse,47) output(81,worse,84) output(25,eq,0) output(25,eq,6) output(25,eq,8) output(25,eq,19) output(25,eq,47) output(0,eq,6) output(0,eq,8) output(0,eq,19) output(0,eq,47) output(6,eq,8) output(6,eq,19) output(6,eq,47) output(8,eq,19) output(8,eq,47) output(5,eq,3) output(19,eq,47)
Optimization: 21 13
Answer: 8
preference(1,(1,1),1,for(atom(hasStyle(1))),6) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,3),1,for(atom(hasOiliness(1))),7) preference(1,(1,4),1,for(atom(hasMajorGrp(0))),6) preference(1,(1,5),1,for(atom(hasPrice(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),4) preference(1,(1,8),1,for(atom(hasOiliness(0))),7) preference(1,(1,10),1,for(atom(hasPrice(1))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(7))),7) preference(1,(1,12),1,for(atom(hasMajorGrp(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(10))),5) preference(1,less(weight)) output(0,better,5) output(0,better,3) output(0,better,81) output(0,better,84) output(3,better,81) output(3,better,84) output(5,better,81) output(5,better,84) output(6,better,5) output(6,better,3) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,81) output(8,better,84) output(19,better,81) output(19,better,84) output(25,better,5) output(25,better,3) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,19) output(3,worse,47) output(5,worse,19) output(5,worse,47) output(25,eq,0) output(25,eq,6) output(25,eq,8) output(25,eq,19) output(25,eq,47) output(0,eq,6) output(0,eq,8) output(0,eq,19) output(0,eq,47) output(6,eq,8) output(6,eq,19) output(6,eq,47) output(8,eq,19) output(8,eq,47) output(5,eq,3) output(19,eq,47)
Optimization: 20 13
Answer: 9
preference(1,(1,1),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,2),1,for(atom(hasPrice(1))),1) preference(1,(1,3),1,for(atom(hasPrice(0))),7) preference(1,(1,4),1,for(atom(hasOiliness(0))),1) preference(1,(1,5),1,for(atom(hasMajorGrp(1))),2) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,7),1,for(atom(hasOiliness(1))),1) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(10))),5) preference(1,(1,10),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,11),1,for(atom(hasStyle(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,14),1,for(atom(hasStyle(1))),2) preference(1,less(weight)) output(0,better,84) output(3,better,81) output(3,better,84) output(5,better,81) output(5,better,84) output(6,better,5) output(6,better,3) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,5) output(25,better,3) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(0,worse,6) output(0,worse,8) output(0,worse,5) output(0,worse,3) output(0,worse,19) output(0,worse,47) output(3,worse,19) output(3,worse,47) output(5,worse,19) output(5,worse,47) output(25,eq,6) output(25,eq,8) output(25,eq,19) output(0,eq,81) output(6,eq,8) output(6,eq,19) output(8,eq,19) output(5,eq,3)
Optimization: 18 14
Answer: 10
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,81) output(6,better,84) output(8,better,81) output(19,better,81) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(3,worse,47) output(5,worse,47) output(6,worse,47) output(8,worse,5) output(8,worse,3) output(8,worse,47) output(19,worse,47) output(81,worse,84) output(0,eq,47) output(8,eq,19) output(8,eq,84) output(5,eq,3) output(19,eq,84)
Optimization: 13 10
Answer: 11
preference(1,(1,1),1,for(atom(hasOiliness(1))),2) preference(1,(1,2),1,for(atom(hasPrice(1))),3) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,4),1,for(atom(hasPrice(0))),10) preference(1,(1,5),1,for(atom(hasMinorGrp(5))),2) preference(1,(1,6),1,for(atom(hasMajorGrp(0))),5) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),8) preference(1,(1,10),1,for(atom(hasOiliness(0))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,13),1,for(atom(hasStyle(1))),2) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),2) preference(1,less(weight)) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,84) output(81,better,84) output(0,worse,6) output(47,worse,81) output(0,eq,8) output(0,eq,5) output(0,eq,3) output(0,eq,19) output(8,eq,5) output(8,eq,3) output(8,eq,19) output(5,eq,3) output(5,eq,19) output(3,eq,19)
Optimization: 12 13
Answer: 12
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),3) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,81) output(6,better,84) output(8,better,81) output(8,better,84) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,47) output(5,worse,47) output(6,worse,47) output(8,worse,5) output(8,worse,3) output(8,worse,47) output(19,worse,47) output(0,eq,47) output(8,eq,19) output(5,eq,3)
Optimization: 10 10
Answer: 13
preference(1,(1,1),1,for(atom(hasOiliness(0))),2) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,4),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),8) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,9),1,for(atom(hasPrice(1))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,14),1,for(atom(hasPrice(0))),2) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,81) output(6,better,84) output(8,better,81) output(8,better,84) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,47) output(5,worse,47) output(6,worse,47) output(8,worse,5) output(8,worse,3) output(8,worse,47) output(19,worse,47) output(8,eq,19) output(5,eq,3)
Optimization: 9 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrice(1))),9) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,4),1,for(atom(hasPrice(0))),10) preference(1,(1,5),1,for(atom(hasStyle(1))),6) preference(1,(1,6),1,for(atom(hasOiliness(0))),7) preference(1,(1,7),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,8),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),1) preference(1,(1,11),1,for(atom(hasMinorGrp(2))),5) preference(1,(1,12),1,for(atom(hasOiliness(1))),10) preference(1,(1,13),1,for(atom(hasMajorGrp(0))),3) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(25,worse,0) output(25,eq,6) output(8,eq,5) output(8,eq,3) output(8,eq,19) output(5,eq,3) output(5,eq,19) output(3,eq,19)
Optimization: 8 11
Answer: 15
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,3),1,for(atom(hasPrice(1))),10) preference(1,(1,4),1,for(atom(hasOiliness(1))),6) preference(1,(1,5),1,for(atom(hasStyle(1))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),3) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,10),1,for(atom(hasPrice(0))),6) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),1) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),7) preference(1,(1,13),1,for(atom(hasOiliness(0))),10) preference(1,less(weight)) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,84) output(81,better,84) output(0,worse,6) output(8,worse,5) output(8,worse,3) output(47,worse,81) output(25,eq,6) output(8,eq,19) output(5,eq,3)
Optimization: 7 12
Answer: 16
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,2),1,for(atom(hasOiliness(1))),9) preference(1,(1,3),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,4),1,for(atom(hasPrice(1))),4) preference(1,(1,5),1,for(atom(hasPrice(0))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),10) preference(1,(1,11),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,13),1,for(atom(hasStyle(1))),3) preference(1,(1,14),1,for(atom(hasOiliness(0))),5) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,81) output(8,better,84) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(8,worse,5) output(8,worse,3) output(8,eq,19) output(8,eq,47) output(5,eq,3) output(19,eq,47)
Optimization: 6 13
Answer: 17
preference(1,(1,1),1,for(atom(hasStyle(1))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(6))),6) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,4),1,for(atom(hasOiliness(1))),2) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),7) preference(1,(1,6),1,for(atom(hasPrice(1))),10) preference(1,(1,8),1,for(atom(hasMinorGrp(10))),9) preference(1,(1,9),1,for(atom(hasPrice(0))),1) preference(1,(1,11),1,for(atom(hasOiliness(0))),10) preference(1,(1,12),1,for(atom(hasMinorGrp(7))),1) preference(1,(1,13),1,for(atom(hasMinorGrp(5))),9) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(8,worse,5) output(8,worse,3) output(25,worse,0) output(8,eq,19) output(5,eq,3)
Optimization: 5 12
Answer: 18
preference(1,(1,1),1,for(atom(hasMajorGrp(1))),9) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,6),1,for(atom(hasStyle(1))),4) preference(1,(1,7),1,for(atom(hasOiliness(0))),4) preference(1,(1,8),1,for(atom(hasPrice(0))),1) preference(1,(1,9),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,10),1,for(atom(hasMinorGrp(5))),6) preference(1,(1,11),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,12),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,13),1,for(atom(hasOiliness(1))),2) preference(1,(1,14),1,for(atom(hasPrice(1))),5) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,19) output(5,worse,19) output(8,eq,19) output(5,eq,3)
Optimization: 4 13
Progression : [4;4] (Error: 0)
Progression : 4 [ 1;13] (Error: 12)
Answer: 19
preference(1,(1,1),1,for(atom(hasOiliness(1))),8) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),4) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,5),1,for(atom(hasPrice(0))),3) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,7),1,for(atom(hasMinorGrp(6))),5) preference(1,(1,8),1,for(atom(hasStyle(1))),8) preference(1,(1,10),1,for(atom(hasOiliness(0))),7) preference(1,(1,11),1,for(atom(hasMajorGrp(0))),8) preference(1,(1,13),1,for(atom(hasPrice(1))),7) preference(1,(1,14),1,for(atom(hasMinorGrp(2))),10) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(8,worse,5) output(8,worse,3) output(8,eq,19) output(5,eq,3)
Optimization: 4 12
Progression : 4 [ 2;12] (Error: 5)
Answer: 20
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,13),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,14),1,for(atom(hasMajorGrp(1))),6) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,19) output(5,worse,19) output(8,eq,19) output(5,eq,3)
Optimization: 4 11
Answer: 21
preference(1,(1,1),1,for(atom(hasMinorGrp(6))),7) preference(1,(1,2),1,for(atom(hasMinorGrp(5))),4) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),3) preference(1,(1,4),1,for(atom(hasPrice(0))),7) preference(1,(1,5),1,for(atom(hasOiliness(0))),1) preference(1,(1,6),1,for(atom(hasMinorGrp(7))),2) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),8) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,11),1,for(atom(hasOiliness(1))),7) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),8) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,19) output(5,worse,19) output(8,eq,19) output(5,eq,3)
Optimization: 4 10
Answer: 22
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),9) preference(1,(1,3),1,for(atom(hasMinorGrp(6))),3) preference(1,(1,4),1,for(atom(hasMinorGrp(5))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,8),1,for(atom(hasPrice(1))),6) preference(1,(1,9),1,for(atom(hasMinorGrp(1))),5) preference(1,(1,12),1,for(atom(hasOiliness(0))),6) preference(1,(1,13),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,14),1,for(atom(hasOiliness(1))),4) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,5) output(8,better,3) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(3,worse,19) output(5,worse,19) output(8,eq,19) output(5,eq,3)
Optimization: 4 9
Progression : 4 [3;9] (Error: 2)
Answer: 23
preference(1,(1,2),1,for(atom(hasOiliness(0))),5) preference(1,(1,4),1,for(atom(hasMinorGrp(7))),4) preference(1,(1,5),1,for(atom(hasMinorGrp(6))),8) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),6) preference(1,(1,8),1,for(atom(hasMinorGrp(5))),10) preference(1,(1,10),1,for(atom(hasPrice(1))),5) preference(1,(1,12),1,for(atom(hasMinorGrp(10))),10) preference(1,(1,13),1,for(atom(hasMinorGrp(2))),9) preference(1,less(weight)) output(0,better,6) output(0,better,8) output(0,better,5) output(0,better,3) output(0,better,19) output(0,better,47) output(0,better,81) output(0,better,84) output(3,better,19) output(3,better,47) output(3,better,81) output(3,better,84) output(5,better,19) output(5,better,47) output(5,better,81) output(5,better,84) output(6,better,8) output(6,better,5) output(6,better,3) output(6,better,19) output(6,better,47) output(6,better,81) output(6,better,84) output(8,better,47) output(8,better,81) output(8,better,84) output(19,better,47) output(19,better,81) output(19,better,84) output(25,better,0) output(25,better,6) output(25,better,8) output(25,better,5) output(25,better,3) output(25,better,19) output(25,better,47) output(25,better,81) output(25,better,84) output(47,better,81) output(47,better,84) output(81,better,84) output(8,worse,5) output(8,worse,3) output(8,eq,19) output(5,eq,3)
Optimization: 4 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.056 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 4 8
Bounds       : 4 [3;8]
Calls        : 1
Time         : 298.173s (Solving: 296.21s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.403s
Threads      : 4        (Winner: 4)

Choices      : 6950276  (Domain: 561324)
Conflicts    : 6288672  (Analyzed: 6288666)
Restarts     : 5163     (Average: 1218.03 Last: 368393)
Model-Level  : 38.4    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 6515242  (Deleted: 6258800)
  Binary     : 1991     (Ratio:   0.03%)
  Ternary    : 5199     (Ratio:   0.08%)
  Conflict   : 6288666  (Average Length:  288.9 Ratio:  96.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 226576   (Average Length:  410.4 Ratio:   3.48%) 
  Distributed: 75679    (Ratio:   1.20% Average LBD: 3.85) 
  Integrated : 227037   (Ratio: 300.00% Unit: 125 Average Jumps: 4.60)
Backjumps    : 6288666  (Average:  1.09 Max: 158 Sum: 6882428)
  Executed   : 6288661  (Average:  1.09 Max: 158 Sum: 6882368 Ratio: 100.00%)
  Bounded    : 5        (Average: 12.00 Max:  21 Sum:     60 Ratio:   0.00%)

Rules        : 185980  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10459   
Bodies       : 8693    
  Sum        : 60      
  Count      : 14      
Equivalences : 9310     (Atom=Atom: 529 Body=Body: 266 Other: 8515)
Tight        : Yes
Variables    : 7513     (Eliminated:    0 Frozen: 4853)
Constraints  : 188541   (Binary:  97.5% Ternary:   1.4% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(11)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(9)) ; 
  7 :: atom(hasStyle(0)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(4)) ; 
  7 :: atom(hasMinorGrp(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  1 :: atom(hasMinorGrp(3)) ; 
  1 :: atom(hasMinorGrp(4)) ; 
  1 :: atom(hasMinorGrp(8)) ; 
  1 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(3)) ; 
  7 :: atom(hasOiliness(0)) ; 
  5 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrice(0)) ; 
  4 :: atom(hasMinorGrp(10)) ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  2 :: atom(hasStyle(1)) ; 
  3 :: atom(hasMajorGrp(0)) ; 
  2 :: atom(hasPrice(1)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(8)) ; 
  9 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMinorGrp(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  3 :: atom(hasMinorGrp(5)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  4 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasMinorGrp(6)) ; 
  7 :: atom(hasOiliness(1)) ; 
  6 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(2)) ; 
  7 :: atom(hasOiliness(0)) ; 
  6 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(7)) ; 
  7 :: atom(hasMajorGrp(1)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasMajorGrp(0)) ; 
  1 :: atom(hasPrice(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  1 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(10)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  1 :: atom(hasStyle(0)) ; 
  1 :: atom(hasMinorGrp(0)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  2 :: atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasPrice(1)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  2 :: atom(hasStyle(1)) ; 
  2 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMajorGrp(1)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasPrice(1)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasPrice(0)) ; 
  6 :: atom(hasStyle(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasOiliness(1)) ; 
  3 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasMinorGrp(6)) ; 
  10 :: atom(hasPrice(1)) ; 
  6 :: atom(hasOiliness(1)) ; 
  1 :: atom(hasStyle(1)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasMinorGrp(2)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasPrice(0)) ; 
  1 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasMinorGrp(10)) ; 
  10 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(1)) ; 
  9 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  4 :: atom(hasPrice(1)) ; 
  8 :: atom(hasPrice(0)) ; 
  9 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(7)) ; 
  10 :: atom(hasMinorGrp(2)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasStyle(1)) ; 
  5 :: atom(hasOiliness(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasStyle(1)) ; 
  6 :: atom(hasMinorGrp(6)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasPrice(1)) ; 
  9 :: atom(hasMinorGrp(10)) ; 
  1 :: atom(hasPrice(0)) ; 
  10 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasMinorGrp(7)) ; 
  9 :: atom(hasMinorGrp(5)) ; 
  9 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMajorGrp(1)) ; 
  4 :: atom(hasMajorGrp(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  4 :: atom(hasStyle(1)) ; 
  4 :: atom(hasOiliness(0)) ; 
  1 :: atom(hasPrice(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  6 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  2 :: atom(hasOiliness(1)) ; 
  5 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasOiliness(1)) ; 
  7 :: atom(hasMinorGrp(5)) ; 
  4 :: atom(hasMinorGrp(1)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  3 :: atom(hasPrice(0)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  5 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasStyle(1)) ; 
  7 :: atom(hasOiliness(0)) ; 
  8 :: atom(hasMajorGrp(0)) ; 
  7 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(6)) ; 
  4 :: atom(hasMinorGrp(5)) ; 
  3 :: atom(hasMinorGrp(1)) ; 
  7 :: atom(hasPrice(0)) ; 
  1 :: atom(hasOiliness(0)) ; 
  2 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(2)) ; 
  5 :: atom(hasPrice(1)) ; 
  7 :: atom(hasOiliness(1)) ; 
  8 :: atom(hasMinorGrp(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasMinorGrp(6)) ; 
  8 :: atom(hasMinorGrp(5)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  6 :: atom(hasPrice(1)) ; 
  5 :: atom(hasMinorGrp(1)) ; 
  6 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  4 :: atom(hasOiliness(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasOiliness(0)) ; 
  4 :: atom(hasMinorGrp(7)) ; 
  8 :: atom(hasMinorGrp(6)) ; 
  6 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(hasMinorGrp(5)) ; 
  5 :: atom(hasPrice(1)) ; 
  10 :: atom(hasMinorGrp(10)) ; 
  9 :: atom(hasMinorGrp(2)) 
}.
