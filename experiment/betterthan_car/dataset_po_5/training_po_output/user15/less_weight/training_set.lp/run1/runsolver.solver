asprin_vL version 1.0
Reading from stdin
-:165:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:175:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:190:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:271:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:532:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:545:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:722:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:851:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:923:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:927:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:927:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:933:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1032:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1058:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1178:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1212:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1234:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:82:1-16: info: no atoms over signature occur in program:
  output/3

-:74:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:75:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(2,eq,7) output(7,eq,9) output(9,eq,6) output(6,eq,8) output(10,eq,3) output(4,eq,5) output(5,eq,1)
Optimization: 7 0
Answer: 2
preference(1,(1,7),1,for(atom(hasEngineCap(2))),4) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(5,worse,1) output(6,worse,8) output(7,eq,9) output(9,eq,6) output(10,eq,3)
Optimization: 5 1
Answer: 3
preference(1,(1,7),1,for(atom(hasBodyType(1))),2) preference(1,(1,10),1,for(atom(hasEngineCap(1))),2) preference(1,less(weight)) output(5,better,1) output(6,better,8) output(10,better,3) output(4,worse,5) output(9,worse,6) output(2,eq,7) output(7,eq,9)
Optimization: 4 2
Answer: 4
preference(1,(1,7),1,for(atom(hasBodyType(1))),2) preference(1,(1,8),1,for(atom(hasEngineCap(1))),2) preference(1,(1,10),1,for(atom(hasFuelCons(1))),10) preference(1,less(weight)) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3) output(4,worse,5) output(7,worse,9) output(2,eq,7)
Optimization: 3 3
Answer: 5
preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),1) preference(1,(1,4),1,for(atom(hasEngineCap(1))),10) preference(1,(1,6),1,for(atom(hasFuelCons(1))),2) preference(1,(1,7),1,for(atom(hasBodyType(1))),2) preference(1,(1,8),1,for(atom(hasEngineCap(4))),9) preference(1,(1,10),1,for(atom(hasEngineCap(2))),3) preference(1,less(weight)) output(4,better,5) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3) output(2,worse,7) output(7,worse,9)
Optimization: 2 6
Answer: 6
preference(1,(1,9),1,for(neg(atom(hasTransmission(2)))),2) preference(1,(1,2),1,for(atom(hasEngineCap(3))),5) preference(1,(1,4),1,for(atom(hasEngineCap(5))),4) preference(1,(1,6),1,for(atom(hasEngineCap(1))),3) preference(1,(1,7),1,for(atom(hasEngineCap(2))),2) preference(1,(1,12),1,for(atom(hasBodyType(2))),5) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3) output(7,eq,9)
Optimization: 1 6
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),2) preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),6) preference(1,(1,8),1,for(neg(atom(hasBodyType(2)))),4) preference(1,(1,9),1,for(neg(atom(hasTransmission(1)))),5) preference(1,(1,10),1,for(neg(atom(hasFuelCons(1)))),8) preference(1,(1,2),1,for(atom(hasEngineCap(3))),9) preference(1,(1,3),1,for(atom(hasEngineCap(2))),6) preference(1,(1,4),1,for(atom(hasBodyType(2))),10) preference(1,(1,6),1,for(atom(hasEngineCap(1))),9) preference(1,(1,7),1,for(atom(hasFuelCons(1))),4) preference(1,(1,11),1,for(atom(hasTransmission(1))),7) preference(1,(1,12),1,for(atom(hasBodyType(1))),2) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),5) preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),6) preference(1,(1,7),1,for(neg(atom(hasFuelCons(1)))),8) preference(1,(1,9),1,for(neg(atom(hasTransmission(1)))),5) preference(1,(1,11),1,for(neg(atom(hasBodyType(1)))),2) preference(1,(1,2),1,for(atom(hasEngineCap(3))),9) preference(1,(1,4),1,for(atom(hasBodyType(2))),10) preference(1,(1,6),1,for(atom(hasEngineCap(2))),6) preference(1,(1,8),1,for(atom(hasTransmission(1))),7) preference(1,(1,10),1,for(atom(hasEngineCap(1))),9) preference(1,(1,12),1,for(atom(hasBodyType(1))),2) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 11
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),2) preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),6) preference(1,(1,8),1,for(neg(atom(hasBodyType(2)))),4) preference(1,(1,9),1,for(neg(atom(hasTransmission(1)))),5) preference(1,(1,12),1,for(neg(atom(hasFuelCons(1)))),2) preference(1,(1,2),1,for(atom(hasEngineCap(3))),8) preference(1,(1,4),1,for(atom(hasBodyType(2))),10) preference(1,(1,7),1,for(atom(hasEngineCap(1))),8) preference(1,(1,10),1,for(atom(hasEngineCap(2))),6) preference(1,(1,11),1,for(atom(hasTransmission(1))),7) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 10
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasEngineCap(4)))),2) preference(1,(1,2),1,for(neg(atom(hasBodyType(2)))),4) preference(1,(1,4),1,for(neg(atom(hasFuelCons(2)))),5) preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),7) preference(1,(1,9),1,for(neg(atom(hasBodyType(1)))),10) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),6) preference(1,(1,8),1,for(atom(hasEngineCap(1))),4) preference(1,(1,10),1,for(atom(hasEngineCap(2))),6) preference(1,(1,11),1,for(atom(hasFuelCons(2))),8) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 9
Answer: 11
preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),1) preference(1,(1,9),1,for(neg(atom(hasFuelCons(2)))),1) preference(1,(1,12),1,for(neg(atom(hasBodyType(1)))),2) preference(1,(1,2),1,for(atom(hasFuelCons(2))),7) preference(1,(1,6),1,for(atom(hasEngineCap(1))),6) preference(1,(1,8),1,for(atom(hasTransmission(1))),9) preference(1,(1,10),1,for(atom(hasFuelCons(1))),5) preference(1,(1,11),1,for(atom(hasEngineCap(2))),4) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 8
Answer: 12
preference(1,(1,3),1,for(neg(atom(hasTransmission(2)))),6) preference(1,(1,6),1,for(neg(atom(hasEngineCap(4)))),3) preference(1,(1,7),1,for(neg(atom(hasBodyType(1)))),8) preference(1,(1,8),1,for(neg(atom(hasFuelCons(1)))),4) preference(1,(1,2),1,for(atom(hasEngineCap(1))),1) preference(1,(1,10),1,for(atom(hasEngineCap(5))),7) preference(1,(1,11),1,for(atom(hasTransmission(1))),5) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 7
Progression : 0 [2;7] (Error: 2.5)
Answer: 13
preference(1,(1,5),1,for(neg(atom(hasEngineCap(4)))),10) preference(1,(1,8),1,for(neg(atom(hasEngineCap(2)))),1) preference(1,(1,4),1,for(atom(hasTransmission(1))),5) preference(1,(1,7),1,for(atom(hasEngineCap(4))),2) preference(1,(1,9),1,for(atom(hasFuelCons(2))),2) preference(1,(1,12),1,for(atom(hasBodyType(2))),3) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 6
Answer: 14
preference(1,(1,4),1,for(neg(atom(hasTransmission(2)))),5) preference(1,(1,5),1,for(neg(atom(hasFuelCons(1)))),1) preference(1,(1,7),1,for(neg(atom(hasBodyType(1)))),2) preference(1,(1,1),1,for(atom(hasEngineCap(1))),8) preference(1,(1,11),1,for(atom(hasEngineCap(2))),6) preference(1,less(weight)) output(2,better,7) output(4,better,5) output(7,better,9) output(9,better,6) output(5,better,1) output(6,better,8) output(10,better,3)
Optimization: 0 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.091 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 599.334s (Solving: 596.08s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2320.693s
Threads      : 4        (Winner: 4)

Choices      : 6943316  (Domain: 21078)
Conflicts    : 1974224  (Analyzed: 1974222)
Restarts     : 2692     (Average: 733.37 Last: 121200)
Model-Level  : 667.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2060311  (Deleted: 1871549)
  Binary     : 160      (Ratio:   0.01%)
  Ternary    : 117      (Ratio:   0.01%)
  Conflict   : 1974222  (Average Length:  755.2 Ratio:  95.82%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 86089    (Average Length:  938.7 Ratio:   4.18%) 
  Distributed: 28699    (Ratio:   1.45% Average LBD: 3.53) 
  Integrated : 86097    (Ratio: 300.00% Unit: 39 Average Jumps: 9.15)
Backjumps    : 1974222  (Average:  2.71 Max: 1526 Sum: 5348858)
  Executed   : 1974221  (Average:  2.71 Max: 1526 Sum: 5348854 Ratio: 100.00%)
  Bounded    : 1        (Average:  4.00 Max:   4 Sum:      4 Ratio:   0.00%)

Rules        : 222871  
  Choice     : 13      
  Minimize   : 2       
Atoms        : 64904   
Bodies       : 75135   
  Sum        : 42      
  Count      : 12      
Equivalences : 209232   (Atom=Atom: 58923 Body=Body: 67310 Other: 82999)
Tight        : Yes
Variables    : 7911     (Eliminated:    0 Frozen: 5139)
Constraints  : 172487   (Binary:  96.9% Ternary:   1.6% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasBodyType(1)) ; 
  2 :: atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasBodyType(1)) ; 
  2 :: atom(hasEngineCap(1)) ; 
  10 :: atom(hasFuelCons(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasEngineCap(1)) ; 
  2 :: atom(hasFuelCons(1)) ; 
  2 :: atom(hasBodyType(1)) ; 
  9 :: atom(hasEngineCap(4)) ; 
  3 :: atom(hasEngineCap(2)) ; 
  1 :: not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasEngineCap(3)) ; 
  4 :: atom(hasEngineCap(5)) ; 
  3 :: atom(hasEngineCap(1)) ; 
  2 :: atom(hasEngineCap(2)) ; 
  5 :: atom(hasBodyType(2)) ; 
  2 :: not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasEngineCap(3)) ; 
  6 :: atom(hasEngineCap(2)) ; 
  10 :: atom(hasBodyType(2)) ; 
  9 :: atom(hasEngineCap(1)) ; 
  4 :: atom(hasFuelCons(1)) ; 
  7 :: atom(hasTransmission(1)) ; 
  2 :: atom(hasBodyType(1)) ; 
  2 :: not atom(hasBodyType(1))  ; 
  6 :: not atom(hasTransmission(2))  ; 
  4 :: not atom(hasBodyType(2))  ; 
  5 :: not atom(hasTransmission(1))  ; 
  8 :: not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: atom(hasEngineCap(3)) ; 
  10 :: atom(hasBodyType(2)) ; 
  6 :: atom(hasEngineCap(2)) ; 
  7 :: atom(hasTransmission(1)) ; 
  9 :: atom(hasEngineCap(1)) ; 
  2 :: atom(hasBodyType(1)) ; 
  5 :: not atom(hasEngineCap(1))  ; 
  6 :: not atom(hasTransmission(2))  ; 
  8 :: not atom(hasFuelCons(1))  ; 
  5 :: not atom(hasTransmission(1))  ; 
  2 :: not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasEngineCap(3)) ; 
  10 :: atom(hasBodyType(2)) ; 
  8 :: atom(hasEngineCap(1)) ; 
  6 :: atom(hasEngineCap(2)) ; 
  7 :: atom(hasTransmission(1)) ; 
  2 :: not atom(hasBodyType(1))  ; 
  6 :: not atom(hasTransmission(2))  ; 
  4 :: not atom(hasBodyType(2))  ; 
  5 :: not atom(hasTransmission(1))  ; 
  2 :: not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasEngineCap(1)) ; 
  6 :: atom(hasEngineCap(2)) ; 
  8 :: atom(hasFuelCons(2)) ; 
  2 :: not atom(hasEngineCap(4))  ; 
  4 :: not atom(hasBodyType(2))  ; 
  5 :: not atom(hasFuelCons(2))  ; 
  7 :: not atom(hasTransmission(2))  ; 
  10 :: not atom(hasBodyType(1))  ; 
  6 :: not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasFuelCons(2)) ; 
  6 :: atom(hasEngineCap(1)) ; 
  9 :: atom(hasTransmission(1)) ; 
  5 :: atom(hasFuelCons(1)) ; 
  4 :: atom(hasEngineCap(2)) ; 
  1 :: not atom(hasTransmission(2))  ; 
  1 :: not atom(hasFuelCons(2))  ; 
  2 :: not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasEngineCap(1)) ; 
  7 :: atom(hasEngineCap(5)) ; 
  5 :: atom(hasTransmission(1)) ; 
  6 :: not atom(hasTransmission(2))  ; 
  3 :: not atom(hasEngineCap(4))  ; 
  8 :: not atom(hasBodyType(1))  ; 
  4 :: not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasTransmission(1)) ; 
  2 :: atom(hasEngineCap(4)) ; 
  2 :: atom(hasFuelCons(2)) ; 
  3 :: atom(hasBodyType(2)) ; 
  10 :: not atom(hasEngineCap(4))  ; 
  1 :: not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasEngineCap(1)) ; 
  6 :: atom(hasEngineCap(2)) ; 
  5 :: not atom(hasTransmission(2))  ; 
  1 :: not atom(hasFuelCons(1))  ; 
  2 :: not atom(hasBodyType(1))  
}.
