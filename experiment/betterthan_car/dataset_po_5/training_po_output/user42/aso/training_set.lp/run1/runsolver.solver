asprin_vL version 1.0
Reading from stdin
-:173:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:198:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:279:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:553:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:730:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:931:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:935:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:935:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:941:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1040:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1066:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1186:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1220:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1242:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:90:1-16: info: no atoms over signature occur in program:
  output/3

-:82:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:83:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:84:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:85:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:115:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,aso) output(6,eq,8) output(8,eq,10) output(10,eq,5) output(5,eq,1) output(7,eq,9) output(2,eq,3) output(3,eq,4)
Optimization: 7 0
Answer: 2
preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,2),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(8,better,10) output(7,better,9) output(6,eq,8) output(10,eq,5) output(5,eq,1) output(3,eq,4)
Optimization: 5 3
Answer: 3
preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(8,better,10) output(5,better,1) output(7,better,9) output(10,worse,5) output(6,eq,8) output(3,eq,4)
Optimization: 4 3
Answer: 4
preference(1,(1,11),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,12),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,aso) output(6,better,8) output(8,better,10) output(5,better,1) output(7,better,9) output(10,worse,5) output(2,eq,3) output(3,eq,4)
Optimization: 3 2
Answer: 5
preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,aso) output(6,better,8) output(8,better,10) output(5,better,1) output(7,better,9) output(2,better,3) output(10,worse,5) output(3,eq,4)
Optimization: 2 2
Answer: 6
preference(1,(1,10),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,aso) output(6,better,8) output(8,better,10) output(5,better,1) output(7,better,9) output(2,better,3) output(3,better,4) output(10,worse,5)
Optimization: 1 3
Progression : [1;1] (Error: 0)
Progression : 1 [1;3] (Error: 2)
Progression : 1 [2;3] (Error: 0.5)
OPTIMUM FOUND

Models       : 6
  Optimum    : yes
Optimization : 1 3
Calls        : 1
Time         : 3.009s (Solving: 1.18s 1st Model: 0.02s Unsat: 1.13s)
CPU Time     : 6.183s
Threads      : 4        (Winner: 0)

Choices      : 18058    (Domain: 281)
Conflicts    : 4926     (Analyzed: 4920)
Restarts     : 16       (Average: 307.50 Last: 512)
Model-Level  : 419.0   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 7470     (Deleted: 0)
  Binary     : 428      (Ratio:   5.73%)
  Ternary    : 278      (Ratio:   3.72%)
  Conflict   : 4918     (Average Length:   29.1 Ratio:  65.84%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 2552     (Average Length:   15.7 Ratio:  34.16%) 
  Distributed: 860      (Ratio:  17.49% Average LBD: 2.84) 
  Integrated : 2580     (Ratio: 300.00% Unit: 70 Average Jumps: 40.76)
Backjumps    : 4920     (Average:  2.60 Max: 245 Sum:  12778)
  Executed   : 4919     (Average:  2.60 Max: 245 Sum:  12772 Ratio:  99.95%)
  Bounded    : 1        (Average:  6.00 Max:   6 Sum:      6 Ratio:   0.05%)

Rules        : 137949  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 39374   
Bodies       : 45879   
  Count      : 288     
Equivalences : 106676   (Atom=Atom: 31949 Body=Body: 30665 Other: 44062)
Tight        : Yes
Variables    : 13127    (Eliminated:    0 Frozen: 4643)
Constraints  : 127763   (Binary:  90.3% Ternary:   8.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(2)) >> atom(hasTransmission(2)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(2)) >> atom(hasTransmission(2)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasBodyType(2))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasTransmission(2))  >> not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasBodyType(2))  >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasBodyType(2))  >> not atom(hasEngineCap(2))  
}.
