asprin_vL version 1.0
Reading from stdin
-:173:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:198:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:279:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:553:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:730:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:931:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:935:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:935:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:941:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1040:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1066:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1186:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1220:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1242:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:90:1-16: info: no atoms over signature occur in program:
  output/3

-:82:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:83:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:84:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:85:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:115:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,aso) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(7,eq,2) output(9,eq,1) output(5,eq,3) output(3,eq,4)
Optimization: 7 0
Answer: 2
preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(10,better,7) output(5,worse,3) output(8,eq,6) output(6,eq,10) output(7,eq,2) output(3,eq,4)
Optimization: 6 3
Answer: 3
preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,6),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(4))),()) preference(1,aso) output(10,better,7) output(7,better,2) output(5,worse,3) output(8,eq,6) output(6,eq,10) output(3,eq,4)
Optimization: 5 4
Answer: 4
preference(1,(1,11),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(3,better,4) output(6,worse,10) output(7,worse,2) output(9,worse,1) output(5,worse,3)
Optimization: 4 2
Answer: 5
preference(1,(1,11),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),2,for(atom(hasFuelCons(1))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(9,better,1) output(5,better,3) output(6,worse,10) output(7,worse,2) output(3,eq,4)
Optimization: 3 2
Answer: 6
preference(1,(1,5),0,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,6),0,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,7),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,10),0,for(atom(hasFuelCons(1))),()) preference(1,(1,12),0,for(atom(hasFuelCons(1))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,5),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,9),2,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(9,better,1) output(5,better,3) output(3,better,4) output(6,worse,10)
Optimization: 2 11
Answer: 7
preference(1,(1,1),0,for(atom(hasEngineCap(4))),()) preference(1,(1,2),0,for(atom(hasFuelCons(1))),()) preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,9),0,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,10),0,for(atom(hasFuelCons(2))),()) preference(1,(1,12),0,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,5),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),1,for(atom(hasBodyType(2))),()) preference(1,(1,9),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasTransmission(2))),()) preference(1,(1,9),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(7,better,2) output(9,better,1) output(5,better,3) output(3,better,4) output(6,worse,10)
Optimization: 1 12
Progression : [1;1] (Error: 0)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),0,for(atom(hasEngineCap(4))),()) preference(1,(1,3),0,for(atom(hasEngineCap(5))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasEngineCap(4))),()) preference(1,(1,12),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,1),1,for(atom(hasFuelCons(1))),()) preference(1,(1,5),1,for(atom(hasFuelCons(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(2))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(7,better,2) output(9,better,1) output(5,better,3) output(3,better,4) output(6,worse,10)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Answer: 9
preference(1,(1,5),0,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,6),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,10),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),0,for(atom(hasEngineCap(5))),()) preference(1,(1,6),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,5),1,for(atom(hasTransmission(2))),()) preference(1,(1,10),1,for(atom(hasFuelCons(2))),()) preference(1,(1,11),1,for(atom(hasBodyType(1))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(7,better,2) output(9,better,1) output(5,better,3) output(3,better,4) output(6,worse,10)
Optimization: 1 5
Progression : 1 [2;5] (Error: 1.5)
Answer: 10
preference(1,(1,4),0,for(atom(hasFuelCons(2))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),1,for(atom(hasFuelCons(2))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(7,better,2) output(9,better,1) output(5,better,3) output(3,better,4) output(6,worse,10)
Optimization: 1 4
Answer: 11
preference(1,(1,8),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,10),0,for(atom(hasFuelCons(1))),()) preference(1,(1,11),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,8),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,8),1,for(atom(hasBodyType(2))),()) preference(1,(1,10),1,for(atom(hasEngineCap(5))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(7,better,2) output(9,better,1) output(5,better,3) output(3,better,4) output(6,worse,10)
Optimization: 1 3
OPTIMUM FOUND

Models       : 11
  Optimum    : yes
Optimization : 1 3
Calls        : 1
Time         : 2.922s (Solving: 1.06s 1st Model: 0.02s Unsat: 0.57s)
CPU Time     : 5.413s
Threads      : 4        (Winner: 1)

Choices      : 17614    (Domain: 326)
Conflicts    : 4788     (Analyzed: 4781)
Restarts     : 17       (Average: 281.24 Last: 787)
Model-Level  : 227.8   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 8012     (Deleted: 0)
  Binary     : 425      (Ratio:   5.30%)
  Ternary    : 691      (Ratio:   8.62%)
  Conflict   : 4781     (Average Length:   26.3 Ratio:  59.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3231     (Average Length:   14.7 Ratio:  40.33%) 
  Distributed: 1103     (Ratio:  23.07% Average LBD: 2.82) 
  Integrated : 3289     (Ratio: 298.19% Unit: 69 Average Jumps: 22.59)
Backjumps    : 4781     (Average:  2.96 Max: 225 Sum:  14147)
  Executed   : 4777     (Average:  2.96 Max: 225 Sum:  14129 Ratio:  99.87%)
  Bounded    : 4        (Average:  4.50 Max:   6 Sum:     18 Ratio:   0.13%)

Rules        : 137949  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 39374   
Bodies       : 45951   
  Count      : 288     
Equivalences : 106748   (Atom=Atom: 31949 Body=Body: 30737 Other: 44062)
Tight        : Yes
Variables    : 13127    (Eliminated:    0 Frozen: 4643)
Constraints  : 127763   (Binary:  90.3% Ternary:   8.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) ; 
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) ; 
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) ; 
  not atom(hasTransmission(2))  >> atom(hasEngineCap(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(2))  >> atom(hasFuelCons(1)) ; 
  not atom(hasTransmission(1))  >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(2))  >> not atom(hasEngineCap(5))  || atom(hasFuelCons(1)) ; 
  not atom(hasEngineCap(2))  >> not atom(hasEngineCap(5))  || atom(hasFuelCons(1)) ; 
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(4))  || not atom(hasBodyType(2))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(4))  || not atom(hasFuelCons(1))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(1))  || not atom(hasEngineCap(2))  ; 
  atom(hasFuelCons(2)) >> not atom(hasBodyType(2))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(3))  ; 
  not atom(hasEngineCap(4))  ; 
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(5))  || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(5))  || atom(hasFuelCons(1)) ; 
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(5))  || atom(hasFuelCons(2)) ; 
  not atom(hasFuelCons(1))  >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(2)) >> not atom(hasEngineCap(4))  || not atom(hasEngineCap(2))  ; 
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) || not atom(hasTransmission(1))  ; 
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(1))  || not atom(hasTransmission(2))  ; 
  not atom(hasEngineCap(4))  >> atom(hasTransmission(2)) ; 
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(4))  >> not atom(hasFuelCons(2))  || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(2)) >> not atom(hasEngineCap(1))  || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(2))  || not atom(hasTransmission(2))  ; 
  atom(hasFuelCons(2)) >> not atom(hasEngineCap(5))  || not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(2))  || not atom(hasTransmission(2))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(3))  || not atom(hasEngineCap(2))  ; 
  atom(hasFuelCons(2)) >> not atom(hasEngineCap(5))  || not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  || not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(3))  || atom(hasFuelCons(2)) ; 
  atom(hasFuelCons(2)) >> not atom(hasEngineCap(5))  || not atom(hasEngineCap(1))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(1))  || not atom(hasEngineCap(2))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) >> not atom(hasEngineCap(1))  || atom(hasFuelCons(1)) ; 
  atom(hasBodyType(2)) >> not atom(hasEngineCap(3))  || not atom(hasEngineCap(2))  ; 
  atom(hasFuelCons(1)) >> not atom(hasTransmission(2))  || not atom(hasEngineCap(2))  
}.
