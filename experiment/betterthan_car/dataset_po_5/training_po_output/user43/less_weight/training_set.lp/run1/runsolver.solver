asprin_vL version 1.0
Reading from stdin
-:165:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:175:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:190:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:271:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:532:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:545:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:722:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:851:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:923:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:927:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:927:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:933:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1032:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1058:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1178:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1212:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1234:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:82:1-16: info: no atoms over signature occur in program:
  output/3

-:74:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:75:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(2,eq,7) output(7,eq,6) output(6,eq,8) output(8,eq,9) output(10,eq,4) output(3,eq,5) output(5,eq,1)
Optimization: 7 0
Answer: 2
preference(1,(1,7),1,for(atom(hasEngineCap(1))),2) preference(1,less(weight)) output(5,better,1) output(6,better,8) output(8,worse,9) output(2,eq,7) output(7,eq,6) output(10,eq,4) output(3,eq,5)
Optimization: 5 1
Answer: 3
preference(1,(1,6),1,for(atom(hasEngineCap(2))),10) preference(1,less(weight)) output(2,better,7) output(3,better,5) output(8,better,9) output(5,worse,1) output(6,worse,8) output(7,eq,6) output(10,eq,4)
Optimization: 4 1
Answer: 4
preference(1,(1,4),1,for(atom(hasEngineCap(5))),10) preference(1,(1,6),1,for(atom(hasEngineCap(2))),10) preference(1,less(weight)) output(2,better,7) output(3,better,5) output(8,better,9) output(10,better,4) output(5,worse,1) output(6,worse,8) output(7,eq,6)
Optimization: 3 2
Answer: 5
preference(1,(1,4),1,for(neg(atom(hasTransmission(2)))),4) preference(1,(1,5),1,for(neg(atom(hasBodyType(1)))),1) preference(1,(1,3),1,for(atom(hasEngineCap(1))),10) preference(1,(1,7),1,for(atom(hasFuelCons(2))),9) preference(1,(1,10),1,for(atom(hasEngineCap(2))),5) preference(1,(1,11),1,for(atom(hasTransmission(1))),7) preference(1,less(weight)) output(2,better,7) output(3,better,5) output(7,better,6) output(5,better,1) output(6,better,8) output(8,better,9) output(10,better,4)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Progression : 0 [2;6] (Error: 2)
Answer: 6
preference(1,(1,7),1,for(neg(atom(hasEngineCap(3)))),6) preference(1,(1,8),1,for(neg(atom(hasFuelCons(1)))),8) preference(1,(1,1),1,for(atom(hasEngineCap(1))),10) preference(1,(1,6),1,for(atom(hasBodyType(2))),5) preference(1,(1,11),1,for(atom(hasEngineCap(2))),9) preference(1,less(weight)) output(2,better,7) output(3,better,5) output(7,better,6) output(5,better,1) output(6,better,8) output(8,better,9) output(10,better,4)
Optimization: 0 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.185 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 6+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 599.511s (Solving: 596.30s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2340.197s
Threads      : 4        (Winner: 4)

Choices      : 3405320  (Domain: 13794)
Conflicts    : 1617671  (Analyzed: 1617669)
Restarts     : 1541     (Average: 1049.75 Last: 105824)
Model-Level  : 173.2   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1619739  (Deleted: 1456393)
  Binary     : 28       (Ratio:   0.00%)
  Ternary    : 21       (Ratio:   0.00%)
  Conflict   : 1617669  (Average Length:  852.0 Ratio:  99.87%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 2070     (Average Length:  151.6 Ratio:   0.13%) 
  Distributed: 690      (Ratio:   0.04% Average LBD: 3.85) 
  Integrated : 2070     (Ratio: 300.00% Unit: 3 Average Jumps: 39.67)
Backjumps    : 1617669  (Average:  1.69 Max: 1020 Sum: 2740655)
  Executed   : 1617669  (Average:  1.69 Max: 1020 Sum: 2740655 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 222871  
  Choice     : 13      
  Minimize   : 2       
Atoms        : 64904   
Bodies       : 75135   
  Sum        : 42      
  Count      : 12      
Equivalences : 209232   (Atom=Atom: 58923 Body=Body: 67310 Other: 82999)
Tight        : Yes
Variables    : 7911     (Eliminated:    0 Frozen: 5139)
Constraints  : 172487   (Binary:  96.9% Ternary:   1.6% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasEngineCap(5)) ; 
  10 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasEngineCap(1)) ; 
  9 :: atom(hasFuelCons(2)) ; 
  5 :: atom(hasEngineCap(2)) ; 
  7 :: atom(hasTransmission(1)) ; 
  4 :: not atom(hasTransmission(2))  ; 
  1 :: not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasEngineCap(1)) ; 
  5 :: atom(hasBodyType(2)) ; 
  9 :: atom(hasEngineCap(2)) ; 
  6 :: not atom(hasEngineCap(3))  ; 
  8 :: not atom(hasFuelCons(1))  
}.
