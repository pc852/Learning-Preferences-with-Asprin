asprin_vL version 1.0
Reading from stdin
-:174:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:199:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:280:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:554:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:731:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:932:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:936:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:936:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:942:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1041:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1067:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1187:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1221:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1243:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:91:1-16: info: no atoms over signature occur in program:
  output/3

-:83:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:84:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:85:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:86:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:116:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,aso) output(8,eq,6) output(6,eq,10) output(7,eq,2) output(2,eq,9) output(9,eq,1) output(1,eq,5) output(5,eq,3) output(3,eq,4)
Optimization: 8 0
Answer: 2
preference(1,(1,3),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasBodyType(1))),()) preference(1,(1,4),2,for(atom(hasFuelCons(1))),()) preference(1,aso) output(6,better,10) output(2,better,9) output(8,eq,6) output(7,eq,2) output(9,eq,1) output(1,eq,5) output(5,eq,3)
Optimization: 6 3
Answer: 3
preference(1,(1,3),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasBodyType(1))),()) preference(1,(1,4),2,for(atom(hasFuelCons(1))),()) preference(1,(1,12),2,for(atom(hasEngineCap(1))),()) preference(1,aso) output(6,better,10) output(2,better,9) output(9,better,1) output(8,worse,6) output(1,worse,5) output(7,eq,2) output(5,eq,3)
Optimization: 5 4
Answer: 4
preference(1,(1,3),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(5))),()) preference(1,(1,3),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasBodyType(1))),()) preference(1,(1,4),2,for(atom(hasFuelCons(1))),()) preference(1,aso) output(6,better,10) output(7,better,2) output(9,better,1) output(5,better,3) output(8,worse,6) output(1,worse,5)
Optimization: 4 5
Answer: 5
preference(1,(1,1),0,for(atom(hasBodyType(1))),()) preference(1,(1,11),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(atom(hasEngineCap(2))),()) preference(1,aso) output(6,better,10) output(7,better,2) output(5,better,3) output(3,better,4) output(2,worse,9) output(8,eq,6) output(9,eq,1) output(1,eq,5)
Optimization: 4 2
Answer: 6
preference(1,(1,3),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,1),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,4),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,3),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,12),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasBodyType(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(3))),()) preference(1,aso) output(6,better,10) output(2,better,9) output(9,better,1) output(1,better,5) output(5,better,3) output(8,eq,6) output(7,eq,2)
Optimization: 3 6
Progression : [1;3] (Error: 2)
Answer: 7
preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasBodyType(1))),()) preference(1,(1,12),0,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),1,for(atom(hasEngineCap(5))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasTransmission(1))),()) preference(1,(1,6),1,for(atom(hasEngineCap(5))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,12),1,for(atom(hasTransmission(2))),()) preference(1,(1,1),2,for(atom(hasEngineCap(5))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,6),2,for(atom(hasEngineCap(4))),()) preference(1,(1,8),2,for(atom(hasEngineCap(5))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(5,better,3) output(3,better,4) output(2,worse,9) output(1,eq,5)
Optimization: 2 9
Answer: 8
preference(1,(1,2),0,for(atom(hasEngineCap(4))),()) preference(1,(1,3),0,for(atom(hasTransmission(2))),()) preference(1,(1,4),0,for(atom(hasBodyType(2))),()) preference(1,(1,5),0,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,8),0,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,10),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,11),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,5),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,9),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),1,for(atom(hasEngineCap(1))),()) preference(1,(1,5),1,for(atom(hasEngineCap(5))),()) preference(1,(1,6),1,for(atom(hasTransmission(2))),()) preference(1,(1,7),1,for(atom(hasEngineCap(4))),()) preference(1,(1,8),1,for(atom(hasEngineCap(1))),()) preference(1,(1,9),1,for(atom(hasEngineCap(1))),()) preference(1,(1,10),1,for(atom(hasEngineCap(2))),()) preference(1,(1,1),2,for(atom(hasEngineCap(1))),()) preference(1,(1,6),2,for(atom(hasEngineCap(5))),()) preference(1,(1,8),2,for(atom(hasFuelCons(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(1))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(2,better,9) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(7,worse,2)
Optimization: 1 12
Answer: 9
preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasBodyType(1))),()) preference(1,(1,12),0,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),1,for(atom(hasEngineCap(5))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(atom(hasEngineCap(5))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,12),1,for(atom(hasTransmission(2))),()) preference(1,(1,1),2,for(atom(hasTransmission(1))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,5),2,for(atom(hasFuelCons(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(4))),()) preference(1,(1,8),2,for(atom(hasEngineCap(5))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4)
Optimization: 1 9
Progression : 1 [1;9] (Error: 8)
Answer: 10
preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,5),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(5))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(atom(hasEngineCap(5))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,12),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(4))),()) preference(1,(1,8),2,for(atom(hasEngineCap(5))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4)
Optimization: 1 8
Answer: 11
preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,5),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(5))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasTransmission(2))),()) preference(1,(1,6),1,for(atom(hasEngineCap(1))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,12),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,6),2,for(atom(hasTransmission(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(5))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(2,worse,9)
Optimization: 1 7
Answer: 12
preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(5))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasEngineCap(1))),()) preference(1,(1,5),1,for(atom(hasTransmission(2))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,12),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,5),2,for(atom(hasTransmission(1))),()) preference(1,(1,8),2,for(atom(hasEngineCap(5))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(2,worse,9)
Optimization: 1 6
Progression : 1 [2;6] (Error: 2)
Answer: 13
preference(1,(1,1),0,for(atom(hasBodyType(2))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,11),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,1),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,5),1,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(atom(hasEngineCap(2))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,5),2,for(atom(hasTransmission(1))),()) preference(1,(1,6),2,for(atom(hasBodyType(1))),()) preference(1,(1,8),2,for(atom(hasTransmission(1))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(2,worse,9)
Optimization: 1 5
Progression : 1 [3;5] (Error: 0.666667)
Progression : 1 [4;5] (Error: 0.25)
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 1 5
Calls        : 1
Time         : 9.426s (Solving: 7.30s 1st Model: 0.03s Unsat: 7.05s)
CPU Time     : 29.386s
Threads      : 4        (Winner: 3)

Choices      : 60133    (Domain: 1072)
Conflicts    : 33156    (Analyzed: 33150)
Restarts     : 58       (Average: 571.55 Last: 1437)
Model-Level  : 303.6   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 36954    (Deleted: 4751)
  Binary     : 540      (Ratio:   1.46%)
  Ternary    : 379      (Ratio:   1.03%)
  Conflict   : 33147    (Average Length:   36.7 Ratio:  89.70%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3807     (Average Length:   17.1 Ratio:  10.30%) 
  Distributed: 1320     (Ratio:   3.98% Average LBD: 3.07) 
  Integrated : 3960     (Ratio: 300.00% Unit: 96 Average Jumps: 36.83)
Backjumps    : 33150    (Average:  1.57 Max: 260 Sum:  51904)
  Executed   : 33144    (Average:  1.57 Max: 260 Sum:  51891 Ratio:  99.97%)
  Bounded    : 6        (Average:  2.17 Max:   7 Sum:     13 Ratio:   0.03%)

Rules        : 154600  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 44076   
Bodies       : 50606   
  Count      : 324     
Equivalences : 119880   (Atom=Atom: 36059 Body=Body: 35094 Other: 48727)
Tight        : Yes
Variables    : 13555    (Eliminated:    0 Frozen: 5047)
Constraints  : 140191   (Binary:  90.9% Ternary:   7.9% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(1)) || atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> atom(hasFuelCons(1)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(1)) || atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> atom(hasFuelCons(1)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasBodyType(2))  >> atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(1)) || atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(5)) >> not atom(hasEngineCap(2))  ; 
  atom(hasTransmission(2)) >> atom(hasFuelCons(1)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(1))  || atom(hasBodyType(1)) ; 
  atom(hasEngineCap(2)) >> not atom(hasEngineCap(1))  || not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(1)) || atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(1)) >> not atom(hasTransmission(2))  ; 
  atom(hasTransmission(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(1))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  || atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(1))  || not atom(hasTransmission(1))  ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(5)) >> atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(4)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(2))  || atom(hasTransmission(2)) ; 
  atom(hasEngineCap(1)) >> not atom(hasTransmission(1))  || atom(hasBodyType(2)) ; 
  atom(hasEngineCap(5)) >> not atom(hasFuelCons(2))  || not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(1)) >> atom(hasFuelCons(2)) || not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(1)) >> not atom(hasTransmission(2))  || not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(2)) >> atom(hasEngineCap(1)) || not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(4)) >> not atom(hasEngineCap(4))  ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(1)) ; 
  not atom(hasTransmission(1))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  || atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(1))  || not atom(hasTransmission(1))  ; 
  atom(hasEngineCap(1)) >> atom(hasTransmission(1)) ; 
  atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(4)) >> atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(5)) >> atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  || atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(4)) >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(5)) >> atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasTransmission(2))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(2))  ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(1))  || not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(2))  ; 
  atom(hasTransmission(2)) >> atom(hasTransmission(1)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(1)) >> not atom(hasTransmission(1))  || atom(hasBodyType(2)) ; 
  atom(hasEngineCap(4)) >> atom(hasTransmission(1)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(2)) >> atom(hasBodyType(1)) || not atom(hasEngineCap(3))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(2))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(4)) >> atom(hasTransmission(1)) 
}.
