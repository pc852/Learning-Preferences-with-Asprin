asprin_vL version 1.0
Reading from stdin
-:196:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:206:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:221:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:302:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:563:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:576:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:753:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:882:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:954:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:958:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:958:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:964:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1063:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1089:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1209:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1243:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1265:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:113:1-16: info: no atoms over signature occur in program:
  output/3

-:105:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:106:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,5) output(4,eq,8) output(10,eq,5) output(6,eq,7) output(2,eq,10) output(5,eq,3) output(2,eq,8) output(4,eq,7) output(7,eq,3) output(7,eq,8) output(4,eq,10) output(2,eq,5) output(7,eq,1) output(10,eq,7) output(8,eq,1) output(4,eq,6) output(6,eq,1) output(10,eq,8) output(10,eq,3) output(10,eq,6) output(8,eq,3) output(5,eq,1) output(6,eq,8) output(6,eq,5) output(2,eq,7) output(4,eq,3) output(3,eq,1) output(2,eq,1) output(2,eq,6) output(2,eq,4) output(5,eq,8) output(2,eq,3) output(4,eq,5) output(6,eq,3) output(4,eq,1) output(10,eq,1)
Optimization: 36 0
Answer: 2
preference(1,(1,3),1,for(atom(hasEngineCap(2))),8) preference(1,less(weight)) output(2,better,5) output(2,better,7) output(2,better,6) output(4,better,7) output(4,better,6) output(4,better,5) output(10,better,5) output(10,better,7) output(10,better,6) output(7,worse,3) output(7,worse,8) output(7,worse,1) output(5,worse,3) output(5,worse,1) output(5,worse,8) output(6,worse,1) output(6,worse,8) output(6,worse,3) output(7,eq,5) output(4,eq,8) output(6,eq,7) output(2,eq,10) output(2,eq,8) output(4,eq,10) output(8,eq,1) output(10,eq,8) output(10,eq,3) output(8,eq,3) output(6,eq,5) output(4,eq,3) output(3,eq,1) output(2,eq,1) output(2,eq,4) output(2,eq,3) output(4,eq,1) output(10,eq,1)
Optimization: 27 1
Answer: 3
preference(1,(1,2),1,for(atom(hasEngineCap(1))),8) preference(1,(1,3),1,for(atom(hasEngineCap(2))),8) preference(1,less(weight)) output(2,better,8) output(2,better,5) output(2,better,7) output(2,better,1) output(2,better,6) output(3,better,1) output(4,better,8) output(4,better,7) output(4,better,6) output(4,better,5) output(4,better,1) output(10,better,5) output(10,better,7) output(10,better,8) output(10,better,6) output(10,better,1) output(7,worse,3) output(5,worse,3) output(6,worse,3) output(8,worse,3) output(7,eq,5) output(6,eq,7) output(2,eq,10) output(7,eq,8) output(4,eq,10) output(7,eq,1) output(8,eq,1) output(6,eq,1) output(10,eq,3) output(5,eq,1) output(6,eq,8) output(6,eq,5) output(4,eq,3) output(2,eq,4) output(5,eq,8) output(2,eq,3)
Optimization: 20 2
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),7) preference(1,(1,2),1,for(neg(atom(hasEngineCap(3)))),7) preference(1,(1,3),1,for(neg(atom(hasEngineCap(2)))),7) preference(1,(1,4),1,for(neg(atom(hasBodyType(1)))),6) preference(1,(1,5),1,for(neg(atom(hasEngineCap(4)))),7) preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),1) preference(1,(1,8),1,for(neg(atom(hasEngineCap(1)))),5) preference(1,(1,7),1,for(atom(hasFuelCons(2))),7) preference(1,less(weight)) output(2,better,10) output(2,better,8) output(2,better,5) output(2,better,1) output(2,better,6) output(2,better,4) output(2,better,3) output(3,better,1) output(4,better,10) output(4,better,6) output(4,better,5) output(4,better,1) output(7,better,5) output(7,better,3) output(7,better,8) output(7,better,1) output(6,better,5) output(8,better,1) output(4,worse,7) output(5,worse,3) output(5,worse,1) output(5,worse,8) output(6,worse,7) output(6,worse,1) output(6,worse,8) output(6,worse,3) output(10,worse,7) output(10,worse,8) output(10,worse,3) output(10,worse,6) output(10,worse,1) output(4,eq,8) output(10,eq,5) output(8,eq,3) output(2,eq,7) output(4,eq,3)
Optimization: 18 8
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasEngineCap(2)))),3) preference(1,(1,2),1,for(neg(atom(hasEngineCap(4)))),3) preference(1,(1,3),1,for(neg(atom(hasEngineCap(1)))),4) preference(1,(1,4),1,for(neg(atom(hasBodyType(1)))),3) preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),2) preference(1,(1,7),1,for(neg(atom(hasEngineCap(3)))),3) preference(1,(1,8),1,for(neg(atom(hasEngineCap(5)))),6) preference(1,(1,5),1,for(atom(hasBodyType(2))),4) preference(1,less(weight)) output(2,better,10) output(2,better,5) output(2,better,1) output(2,better,3) output(4,better,8) output(4,better,7) output(4,better,10) output(4,better,6) output(4,better,3) output(4,better,5) output(4,better,1) output(7,better,5) output(7,better,3) output(7,better,1) output(6,better,1) output(6,better,5) output(6,better,3) output(8,better,1) output(8,better,3) output(2,worse,4) output(5,worse,8) output(10,worse,7) output(10,worse,8) output(10,worse,6) output(10,eq,5) output(6,eq,7) output(5,eq,3) output(2,eq,8) output(7,eq,8) output(10,eq,3) output(5,eq,1) output(6,eq,8) output(2,eq,7) output(3,eq,1) output(2,eq,6) output(10,eq,1)
Optimization: 17 8
Answer: 6
preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),2) preference(1,(1,3),1,for(neg(atom(hasTransmission(2)))),8) preference(1,(1,4),1,for(neg(atom(hasEngineCap(2)))),4) preference(1,(1,5),1,for(neg(atom(hasEngineCap(3)))),3) preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),2) preference(1,(1,7),1,for(neg(atom(hasEngineCap(4)))),2) preference(1,(1,8),1,for(neg(atom(hasEngineCap(5)))),2) preference(1,(1,2),1,for(atom(hasFuelCons(2))),2) preference(1,less(weight)) output(2,better,5) output(2,better,1) output(2,better,4) output(2,better,3) output(3,better,1) output(7,better,5) output(7,better,3) output(7,better,8) output(7,better,1) output(5,better,3) output(5,better,1) output(6,better,1) output(6,better,8) output(6,better,5) output(6,better,3) output(8,better,1) output(8,better,3) output(10,better,5) output(10,better,8) output(10,better,3) output(10,better,1) output(2,worse,10) output(2,worse,7) output(2,worse,6) output(4,worse,8) output(4,worse,7) output(4,worse,10) output(4,worse,6) output(4,worse,3) output(4,worse,5) output(5,worse,8) output(10,worse,7) output(10,worse,6) output(6,eq,7) output(2,eq,8) output(4,eq,1)
Optimization: 15 8
Answer: 7
preference(1,(1,1),1,for(neg(atom(hasTransmission(2)))),2) preference(1,(1,2),1,for(neg(atom(hasEngineCap(4)))),6) preference(1,(1,4),1,for(neg(atom(hasEngineCap(3)))),6) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),6) preference(1,(1,3),1,for(atom(hasEngineCap(1))),8) preference(1,(1,5),1,for(atom(hasFuelCons(1))),1) preference(1,(1,7),1,for(atom(hasBodyType(1))),7) preference(1,(1,8),1,for(atom(hasEngineCap(2))),6) preference(1,less(weight)) output(2,better,8) output(2,better,1) output(2,better,4) output(2,better,3) output(3,better,1) output(4,better,1) output(7,better,3) output(7,better,8) output(7,better,1) output(5,better,3) output(5,better,1) output(5,better,8) output(6,better,7) output(6,better,1) output(6,better,8) output(6,better,5) output(6,better,3) output(8,better,1) output(10,better,5) output(10,better,7) output(10,better,8) output(10,better,3) output(10,better,6) output(10,better,1) output(2,worse,10) output(2,worse,5) output(2,worse,6) output(4,worse,7) output(4,worse,10) output(4,worse,6) output(4,worse,5) output(7,worse,5) output(4,eq,8) output(8,eq,3) output(2,eq,7) output(4,eq,3)
Optimization: 12 8
Answer: 8
preference(1,(1,1),1,for(neg(atom(hasTransmission(2)))),3) preference(1,(1,2),1,for(neg(atom(hasEngineCap(4)))),6) preference(1,(1,4),1,for(neg(atom(hasEngineCap(3)))),6) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),6) preference(1,(1,3),1,for(atom(hasEngineCap(1))),8) preference(1,(1,5),1,for(atom(hasFuelCons(1))),1) preference(1,(1,7),1,for(atom(hasBodyType(1))),7) preference(1,(1,8),1,for(atom(hasEngineCap(2))),6) preference(1,less(weight)) output(2,better,8) output(2,better,1) output(2,better,4) output(2,better,3) output(3,better,1) output(4,better,1) output(7,better,3) output(7,better,8) output(7,better,1) output(5,better,3) output(5,better,1) output(5,better,8) output(6,better,7) output(6,better,1) output(6,better,8) output(6,better,5) output(6,better,3) output(8,better,1) output(8,better,3) output(10,better,5) output(10,better,7) output(10,better,8) output(10,better,3) output(10,better,6) output(10,better,1) output(2,worse,10) output(2,worse,5) output(2,worse,6) output(4,worse,8) output(4,worse,7) output(4,worse,10) output(4,worse,6) output(4,worse,5) output(7,worse,5) output(2,eq,7) output(4,eq,3)
Optimization: 11 8
Answer: 9
preference(1,(1,1),1,for(neg(atom(hasEngineCap(2)))),8) preference(1,(1,3),1,for(neg(atom(hasEngineCap(1)))),3) preference(1,(1,4),1,for(neg(atom(hasBodyType(1)))),1) preference(1,(1,6),1,for(neg(atom(hasEngineCap(3)))),1) preference(1,(1,7),1,for(neg(atom(hasEngineCap(4)))),5) preference(1,(1,8),1,for(neg(atom(hasEngineCap(5)))),7) preference(1,(1,2),1,for(atom(hasFuelCons(2))),4) preference(1,(1,5),1,for(atom(hasBodyType(2))),6) preference(1,less(weight)) output(2,better,10) output(2,better,8) output(2,better,5) output(2,better,1) output(2,better,6) output(2,better,4) output(2,better,3) output(3,better,1) output(4,better,8) output(4,better,10) output(4,better,6) output(4,better,3) output(4,better,5) output(4,better,1) output(7,better,5) output(7,better,3) output(7,better,8) output(7,better,1) output(5,better,3) output(5,better,1) output(5,better,8) output(6,better,1) output(6,better,8) output(6,better,5) output(6,better,3) output(8,better,1) output(2,worse,7) output(4,worse,7) output(6,worse,7) output(10,worse,5) output(10,worse,7) output(10,worse,8) output(10,worse,3) output(10,worse,6) output(10,worse,1) output(8,eq,3)
Optimization: 10 8
Answer: 10
preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),6) preference(1,(1,3),1,for(neg(atom(hasBodyType(2)))),8) preference(1,(1,2),1,for(atom(hasBodyType(2))),7) preference(1,(1,4),1,for(atom(hasTransmission(1))),4) preference(1,(1,5),1,for(atom(hasEngineCap(2))),6) preference(1,(1,6),1,for(atom(hasEngineCap(3))),7) preference(1,(1,7),1,for(atom(hasEngineCap(1))),3) preference(1,(1,8),1,for(atom(hasFuelCons(1))),2) preference(1,less(weight)) output(2,better,10) output(2,better,8) output(2,better,5) output(2,better,7) output(2,better,1) output(2,better,6) output(2,better,4) output(2,better,3) output(3,better,1) output(4,better,8) output(4,better,7) output(4,better,10) output(4,better,6) output(4,better,3) output(4,better,5) output(4,better,1) output(7,better,5) output(7,better,3) output(7,better,8) output(7,better,1) output(5,better,3) output(5,better,1) output(5,better,8) output(6,better,7) output(6,better,1) output(6,better,8) output(6,better,5) output(6,better,3) output(8,better,1) output(8,better,3) output(10,better,5) output(10,better,7) output(10,better,8) output(10,better,3) output(10,better,6) output(10,better,1)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Progression : 0 [2;8] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.129 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 1198.390s (Solving: 1196.14s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 4785.944s
Threads      : 4        (Winner: 4)

Choices      : 14332417 (Domain: 111584)
Conflicts    : 9396364  (Analyzed: 9396362)
Restarts     : 10175    (Average: 923.48 Last: 244271)
Model-Level  : 62.4    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 9400394  (Deleted: 8774502)
  Binary     : 495      (Ratio:   0.01%)
  Ternary    : 543      (Ratio:   0.01%)
  Conflict   : 9396362  (Average Length:  429.5 Ratio:  99.96%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4032     (Average Length:   98.0 Ratio:   0.04%) 
  Distributed: 1346     (Ratio:   0.01% Average LBD: 3.49) 
  Integrated : 4038     (Ratio: 300.00% Unit: 3 Average Jumps: 73.67)
Backjumps    : 9396362  (Average:  1.33 Max: 607 Sum: 12477387)
  Executed   : 9396361  (Average:  1.33 Max: 607 Sum: 12477381 Ratio: 100.00%)
  Bounded    : 1        (Average:  6.00 Max:   6 Sum:      6 Ratio:   0.00%)

Rules        : 512202  
  Choice     : 9       
  Minimize   : 2       
Atoms        : 170630  
Bodies       : 170408  
  Sum        : 216     
  Count      : 8       
Equivalences : 501762   (Atom=Atom: 161573 Body=Body: 165534 Other: 174655)
Tight        : Yes
Variables    : 7619     (Eliminated:    0 Frozen: 5771)
Constraints  : 356511   (Binary:  98.3% Ternary:   0.5% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasEngineCap(1)) ; 
  8 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: not atom(hasEngineCap(5))  ; 
  7 :: not atom(hasEngineCap(3))  ; 
  7 :: not atom(hasEngineCap(2))  ; 
  6 :: not atom(hasBodyType(1))  ; 
  7 :: not atom(hasEngineCap(4))  ; 
  1 :: not atom(hasFuelCons(1))  ; 
  7 :: atom(hasFuelCons(2)) ; 
  5 :: not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasEngineCap(2))  ; 
  3 :: not atom(hasEngineCap(4))  ; 
  4 :: not atom(hasEngineCap(1))  ; 
  3 :: not atom(hasBodyType(1))  ; 
  4 :: atom(hasBodyType(2)) ; 
  2 :: not atom(hasFuelCons(1))  ; 
  3 :: not atom(hasEngineCap(3))  ; 
  6 :: not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasEngineCap(1))  ; 
  2 :: atom(hasFuelCons(2)) ; 
  8 :: not atom(hasTransmission(2))  ; 
  4 :: not atom(hasEngineCap(2))  ; 
  3 :: not atom(hasEngineCap(3))  ; 
  2 :: not atom(hasFuelCons(1))  ; 
  2 :: not atom(hasEngineCap(4))  ; 
  2 :: not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasTransmission(2))  ; 
  6 :: not atom(hasEngineCap(4))  ; 
  8 :: atom(hasEngineCap(1)) ; 
  6 :: not atom(hasEngineCap(3))  ; 
  1 :: atom(hasFuelCons(1)) ; 
  6 :: not atom(hasEngineCap(5))  ; 
  7 :: atom(hasBodyType(1)) ; 
  6 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(hasTransmission(2))  ; 
  6 :: not atom(hasEngineCap(4))  ; 
  8 :: atom(hasEngineCap(1)) ; 
  6 :: not atom(hasEngineCap(3))  ; 
  1 :: atom(hasFuelCons(1)) ; 
  6 :: not atom(hasEngineCap(5))  ; 
  7 :: atom(hasBodyType(1)) ; 
  6 :: atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: not atom(hasEngineCap(2))  ; 
  4 :: atom(hasFuelCons(2)) ; 
  3 :: not atom(hasEngineCap(1))  ; 
  1 :: not atom(hasBodyType(1))  ; 
  6 :: atom(hasBodyType(2)) ; 
  1 :: not atom(hasEngineCap(3))  ; 
  5 :: not atom(hasEngineCap(4))  ; 
  7 :: not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: not atom(hasBodyType(1))  ; 
  7 :: atom(hasBodyType(2)) ; 
  8 :: not atom(hasBodyType(2))  ; 
  4 :: atom(hasTransmission(1)) ; 
  6 :: atom(hasEngineCap(2)) ; 
  7 :: atom(hasEngineCap(3)) ; 
  3 :: atom(hasEngineCap(1)) ; 
  2 :: atom(hasFuelCons(1)) 
}.
