asprin_vL version 1.0
Reading from stdin
-:205:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:215:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:230:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:311:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:585:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:762:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:891:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:963:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:967:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:967:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:973:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1072:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1098:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1218:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1252:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1274:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:122:1-16: info: no atoms over signature occur in program:
  output/3

-:114:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:115:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:116:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(3,eq,9) output(9,eq,1) output(4,eq,8) output(10,eq,5) output(10,eq,2) output(10,eq,9) output(3,eq,5) output(2,eq,8) output(4,eq,10) output(5,eq,2) output(1,eq,8) output(9,eq,2) output(4,eq,6) output(4,eq,9) output(1,eq,6) output(10,eq,8) output(3,eq,10) output(10,eq,6) output(3,eq,8) output(5,eq,1) output(9,eq,6) output(6,eq,8) output(9,eq,5) output(5,eq,6) output(3,eq,4) output(3,eq,1) output(2,eq,1) output(2,eq,6) output(4,eq,2) output(5,eq,8) output(3,eq,2) output(4,eq,5) output(3,eq,6) output(9,eq,8) output(4,eq,1) output(10,eq,1)
Optimization: 36 0
Answer: 2
preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,worse,2) output(10,worse,9) output(5,worse,2) output(1,worse,8) output(1,worse,6) output(5,worse,6) output(4,worse,2) output(5,worse,8) output(3,worse,2) output(10,worse,8) output(10,worse,6) output(9,worse,2) output(3,eq,9) output(10,eq,5) output(4,eq,9) output(5,eq,1) output(6,eq,8) output(3,eq,4) output(10,eq,1)
Optimization: 19 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,better,5) output(10,better,1) output(10,worse,2) output(10,worse,9) output(5,worse,2) output(3,worse,9) output(1,worse,8) output(4,worse,9) output(1,worse,6) output(5,worse,6) output(4,worse,2) output(5,worse,8) output(3,worse,2) output(10,worse,8) output(10,worse,6) output(9,worse,2) output(5,eq,1) output(6,eq,8) output(3,eq,4)
Optimization: 17 2
Answer: 4
preference(1,(1,12),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(1)))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(4,better,6) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,6) output(9,better,8) output(10,better,2) output(5,better,2) output(1,better,8) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(10,better,8) output(10,better,6) output(4,worse,10) output(3,worse,10) output(2,worse,1) output(3,worse,9) output(4,worse,9) output(10,eq,9) output(3,eq,5) output(2,eq,8) output(5,eq,1) output(6,eq,8) output(3,eq,4) output(3,eq,1) output(2,eq,6) output(4,eq,5) output(4,eq,1)
Optimization: 15 1
Answer: 5
preference(1,(1,12),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(2)))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,better,2) output(5,better,2) output(1,better,8) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(9,better,2) output(10,better,8) output(10,better,6) output(10,worse,9) output(2,worse,1) output(3,eq,9) output(10,eq,5) output(4,eq,9) output(5,eq,1) output(6,eq,8) output(3,eq,4) output(10,eq,1)
Optimization: 9 1
Answer: 6
preference(1,(1,12),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(1,better,8) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(10,better,8) output(10,better,6) output(10,worse,2) output(10,worse,9) output(5,worse,2) output(3,worse,9) output(4,worse,9) output(5,eq,1) output(6,eq,8) output(3,eq,4)
Optimization: 8 2
Answer: 7
preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(3,better,9) output(1,better,8) output(4,better,9) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,1) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,8) output(10,better,6) output(10,worse,2) output(10,worse,9) output(10,worse,5) output(3,eq,4) output(5,unc,2) output(1,unc,6) output(9,unc,5)
Optimization: 7 2
Answer: 8
preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(2)))),()) preference(1,poset) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,better,2) output(10,better,9) output(5,better,2) output(3,better,9) output(1,better,8) output(4,better,9) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(9,better,2) output(10,better,8) output(10,better,6) output(9,worse,1) output(2,worse,1) output(5,worse,1) output(6,worse,8) output(3,eq,4) output(10,eq,1)
Optimization: 6 2
Answer: 9
preference(1,(1,3),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasEngineCap(5))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(3,better,9) output(1,better,8) output(4,better,9) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,8) output(10,better,6) output(3,better,4) output(5,worse,2) output(10,unc,2) output(10,unc,9) output(4,unc,10) output(1,unc,6)
Optimization: 5 3
Answer: 10
preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasEngineCap(5))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(3,better,9) output(1,better,8) output(4,better,9) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,8) output(10,better,6) output(3,better,4) output(5,worse,2) output(10,unc,2) output(10,unc,9) output(4,unc,10)
Optimization: 4 3
Answer: 11
preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,4),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,8),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(3))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,better,2) output(5,better,2) output(3,better,9) output(1,better,8) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,8) output(10,better,6) output(3,better,4) output(10,worse,9) output(4,worse,9) output(1,worse,6)
Optimization: 3 5
Answer: 12
preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasFuelCons(1))),()) preference(1,(1,2),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),1,for(atom(hasTransmission(1))),()) preference(1,(1,6),1,for(atom(hasTransmission(1))),()) preference(1,(1,8),1,for(atom(hasFuelCons(1))),()) preference(1,(1,9),1,for(atom(hasEngineCap(2))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,2),2,for(atom(hasEngineCap(1))),()) preference(1,(1,3),2,for(atom(hasEngineCap(2))),()) preference(1,(1,5),2,for(atom(hasFuelCons(1))),()) preference(1,(1,6),2,for(atom(hasTransmission(2))),()) preference(1,(1,7),2,for(atom(hasEngineCap(4))),()) preference(1,(1,8),2,for(atom(hasTransmission(1))),()) preference(1,(1,10),2,for(atom(hasTransmission(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(1))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(3,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,better,2) output(10,better,9) output(5,better,2) output(3,better,9) output(1,better,8) output(4,better,9) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,8) output(10,better,6) output(3,better,4) output(9,worse,5) output(2,worse,1)
Optimization: 2 12
Answer: 13
preference(1,(1,1),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,3),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,8),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,2),1,for(atom(hasTransmission(2))),()) preference(1,(1,6),1,for(atom(hasFuelCons(1))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasFuelCons(1))),()) preference(1,(1,9),1,for(atom(hasEngineCap(2))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),1,for(atom(hasBodyType(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(4))),()) preference(1,(1,2),2,for(atom(hasEngineCap(1))),()) preference(1,(1,5),2,for(atom(hasFuelCons(1))),()) preference(1,(1,6),2,for(atom(hasTransmission(2))),()) preference(1,(1,7),2,for(atom(hasTransmission(2))),()) preference(1,(1,9),2,for(atom(hasFuelCons(2))),()) preference(1,(1,10),2,for(atom(hasBodyType(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(3))),()) preference(1,(1,12),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(9,better,1) output(4,better,8) output(3,better,5) output(2,better,8) output(4,better,10) output(4,better,6) output(3,better,10) output(3,better,8) output(9,better,6) output(9,better,5) output(3,better,1) output(2,better,6) output(4,better,5) output(3,better,6) output(9,better,8) output(4,better,1) output(10,better,2) output(10,better,9) output(5,better,2) output(3,better,9) output(1,better,8) output(4,better,9) output(1,better,6) output(5,better,6) output(4,better,2) output(5,better,8) output(3,better,2) output(10,better,5) output(10,better,1) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,8) output(10,better,6) output(3,better,4) output(2,worse,1)
Optimization: 1 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.086 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 1 12
Calls        : 1
Time         : 1195.988s (Solving: 1183.88s 1st Model: 2.37s Unsat: 0.00s)
CPU Time     : 4745.018s
Threads      : 4        (Winner: 4)

Choices      : 5462841  (Domain: 921)
Conflicts    : 206382   (Analyzed: 206382)
Restarts     : 295      (Average: 699.60 Last: 3477)
Model-Level  : 726.8   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 22318274 (Deleted: 22162638)
  Binary     : 3592     (Ratio:   0.02%)
  Ternary    : 63070    (Ratio:   0.28%)
  Conflict   : 206382   (Average Length: 2442.5 Ratio:   0.92%) 
  Loop       : 22028912 (Average Length:  417.5 Ratio:  98.70%) 
  Other      : 82980    (Average Length:    3.6 Ratio:   0.37%) 
  Distributed: 27664    (Ratio:   0.12% Average LBD: 2.84) 
  Integrated : 82986    (Ratio: 299.98% Unit: 200 Average Jumps: 1626.72)
Backjumps    : 206382   (Average: 21.36 Max: 147718 Sum: 4408906)
  Executed   : 206351   (Average: 21.36 Max: 147718 Sum: 4408845 Ratio: 100.00%)
  Bounded    : 31       (Average:  1.97 Max:   2 Sum:     61 Ratio:   0.00%)

Rules        : 2284093 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 48669   
Bodies       : 1794031 
  Count      : 48      
Equivalences : 72199    (Atom=Atom: 12599 Body=Body: 16972 Other: 42628)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1706166 Gammas: 0)
Variables    : 1729623  (Eliminated:    0 Frozen: 1715407)
Constraints  : 9998430  (Binary:  82.4% Ternary:   3.7% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(1))  >> not atom(hasTransmission(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(1))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(1))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasTransmission(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(1))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(1))  ; 
  atom(hasBodyType(1)) >> not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(1))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(5))  >> atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(3)) ; 
  not atom(hasFuelCons(1))  >> atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> atom(hasEngineCap(1)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(1))  >> atom(hasFuelCons(1)) ; 
  atom(hasTransmission(1)) >> atom(hasTransmission(2)) ; 
  not atom(hasEngineCap(2))  >> atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(1)) ; 
  atom(hasEngineCap(2)) >> not atom(hasEngineCap(5))  ; 
  atom(hasEngineCap(4)) >> atom(hasTransmission(1)) ; 
  not atom(hasEngineCap(1))  >> atom(hasEngineCap(1)) ; 
  not atom(hasEngineCap(1))  >> atom(hasFuelCons(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(2))  >> atom(hasEngineCap(4)) ; 
  atom(hasTransmission(2)) >> atom(hasEngineCap(1)) ; 
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(1))  >> atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(2)) ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) ; 
  atom(hasFuelCons(1)) >> not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(4)) >> atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(2))  >> atom(hasEngineCap(2)) 
}.
