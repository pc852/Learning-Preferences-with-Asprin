asprin_vL version 1.0
Reading from stdin
-:175:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:200:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:281:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:555:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:732:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:933:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:937:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:937:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:943:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1042:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1068:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1188:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1222:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1244:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:92:1-16: info: no atoms over signature occur in program:
  output/3

-:84:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:85:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:86:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:87:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:117:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,aso) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(7,eq,2) output(2,eq,9) output(9,eq,1) output(1,eq,5) output(5,eq,3) output(3,eq,4)
Optimization: 9 0
Answer: 2
preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(3))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(1,better,5) output(5,worse,3) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(7,eq,2) output(2,eq,9) output(9,eq,1) output(3,eq,4)
Optimization: 8 3
Answer: 3
preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(3))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(1,better,5) output(3,better,4) output(5,worse,3) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(7,eq,2) output(2,eq,9) output(9,eq,1)
Optimization: 7 3
Answer: 4
preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),2,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(3))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(10,better,7) output(1,better,5) output(3,better,4) output(2,worse,9) output(5,worse,3) output(8,eq,6) output(6,eq,10) output(7,eq,2) output(9,eq,1)
Optimization: 6 4
Answer: 5
preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),1,for(atom(hasFuelCons(2))),()) preference(1,(1,12),2,for(atom(hasEngineCap(2))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(2,better,9) output(1,better,5) output(6,worse,10) output(7,worse,2) output(9,worse,1) output(5,worse,3) output(3,eq,4)
Optimization: 5 2
Answer: 6
preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,10),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(3))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,aso) output(6,better,10) output(2,better,9) output(9,better,1) output(1,better,5) output(3,better,4) output(10,worse,7) output(5,worse,3) output(8,eq,6) output(7,eq,2)
Optimization: 4 6
Answer: 7
preference(1,(1,1),0,for(atom(hasTransmission(1))),()) preference(1,(1,2),0,for(atom(hasBodyType(2))),()) preference(1,(1,8),0,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),0,for(atom(hasEngineCap(5))),()) preference(1,(1,12),0,for(atom(hasEngineCap(2))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(atom(hasEngineCap(1))),()) preference(1,(1,9),2,for(atom(hasTransmission(1))),()) preference(1,aso) output(8,better,6) output(10,better,7) output(2,better,9) output(1,better,5) output(3,better,4) output(6,worse,10) output(7,worse,2) output(9,worse,1) output(5,worse,3)
Optimization: 4 5
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),0,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),0,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,8),0,for(atom(hasTransmission(1))),()) preference(1,(1,9),0,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(1))),()) preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,9),1,for(atom(hasEngineCap(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(3))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,8),2,for(atom(hasBodyType(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(4))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(10,worse,7) output(2,worse,9) output(3,eq,4)
Optimization: 3 9
Progression : [1;3] (Error: 2)
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),0,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,8),0,for(atom(hasTransmission(1))),()) preference(1,(1,9),0,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(1))),()) preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,9),1,for(atom(hasEngineCap(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(3))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,8),2,for(atom(hasBodyType(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(4))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(10,worse,7) output(2,worse,9)
Optimization: 2 9
Progression : [2;2] (Error: 0)
Progression : 2 [1;9] (Error: 8)
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),0,for(atom(hasTransmission(1))),()) preference(1,(1,9),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasFuelCons(1))),()) preference(1,(1,12),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(atom(hasEngineCap(3))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(3))),()) preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,8),1,for(atom(hasEngineCap(4))),()) preference(1,(1,9),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasBodyType(2))),()) preference(1,(1,12),1,for(atom(hasEngineCap(1))),()) preference(1,(1,5),2,for(atom(hasEngineCap(1))),()) preference(1,(1,8),2,for(atom(hasBodyType(1))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(2,worse,9)
Optimization: 2 8
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,9),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasBodyType(1))),()) preference(1,(1,12),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(3))),()) preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,9),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(1))),()) preference(1,(1,12),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(4))),()) preference(1,(1,5),2,for(atom(hasEngineCap(5))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(10,worse,7) output(2,worse,9)
Optimization: 2 7
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,9),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),0,for(atom(hasTransmission(2))),()) preference(1,(1,2),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,5),1,for(atom(hasEngineCap(3))),()) preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,9),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(1))),()) preference(1,(1,5),2,for(atom(hasEngineCap(5))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(10,worse,7) output(2,worse,9)
Optimization: 2 6
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,9),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,9),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(5))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(8,better,6) output(6,better,10) output(7,better,2) output(9,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(10,worse,7) output(2,worse,9)
Optimization: 2 5
Progression : 2 [2;5] (Error: 1.5)
Progression : 2 [3;5] (Error: 0.666667)
Progression : 2 [4;5] (Error: 0.25)
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 2 5
Calls        : 1
Time         : 20.999s (Solving: 19.14s 1st Model: 0.02s Unsat: 18.89s)
CPU Time     : 74.254s
Threads      : 4        (Winner: 1)

Choices      : 126974   (Domain: 5279)
Conflicts    : 78481    (Analyzed: 78472)
Restarts     : 95       (Average: 826.02 Last: 7610)
Model-Level  : 344.2   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 84944    (Deleted: 37895)
  Binary     : 883      (Ratio:   1.04%)
  Ternary    : 730      (Ratio:   0.86%)
  Conflict   : 78472    (Average Length:   38.9 Ratio:  92.38%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 6472     (Average Length:   17.3 Ratio:   7.62%) 
  Distributed: 2191     (Ratio:   2.79% Average LBD: 3.06) 
  Integrated : 6573     (Ratio: 300.00% Unit: 149 Average Jumps: 31.62)
Backjumps    : 78472    (Average:  1.49 Max: 335 Sum: 116983)
  Executed   : 78466    (Average:  1.49 Max: 335 Sum: 116951 Ratio:  99.97%)
  Bounded    : 6        (Average:  5.33 Max:   8 Sum:     32 Ratio:   0.03%)

Rules        : 171251  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 48778   
Bodies       : 55369   
  Count      : 360     
Equivalences : 133264   (Atom=Atom: 40241 Body=Body: 39655 Other: 53368)
Tight        : Yes
Variables    : 13911    (Eliminated:    0 Frozen: 5379)
Constraints  : 152187   (Binary:  91.4% Ternary:   7.4% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) ; 
  not atom(hasEngineCap(2))  >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  not atom(hasFuelCons(2))  >> atom(hasFuelCons(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(5))  >> not atom(hasBodyType(1))  || atom(hasTransmission(1)) ; 
  not atom(hasEngineCap(5))  >> atom(hasEngineCap(1)) || atom(hasBodyType(2)) ; 
  not atom(hasEngineCap(5))  >> atom(hasTransmission(1)) || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(2))  >> not atom(hasEngineCap(1))  || atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(5))  || not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) >> atom(hasBodyType(1)) || atom(hasTransmission(1)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(3)) || not atom(hasEngineCap(3))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(1))  || not atom(hasTransmission(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(3)) || not atom(hasTransmission(1))  ; 
  atom(hasEngineCap(1)) >> not atom(hasTransmission(1))  || not atom(hasBodyType(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) >> atom(hasBodyType(1)) || atom(hasTransmission(1)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(3)) || not atom(hasEngineCap(3))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(3)) || not atom(hasTransmission(1))  ; 
  atom(hasEngineCap(1)) >> not atom(hasTransmission(1))  || not atom(hasBodyType(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(3))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) >> atom(hasBodyType(1)) || atom(hasTransmission(1)) ; 
  atom(hasBodyType(2)) >> not atom(hasTransmission(1))  || atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(2))  || not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(1)) || not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(1)) >> not atom(hasBodyType(1))  || not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(2))  || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(4)) || not atom(hasEngineCap(4))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) || not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(1)) >> not atom(hasBodyType(1))  || not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(2))  || atom(hasTransmission(2)) ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(2))  || not atom(hasEngineCap(4))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) || not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasBodyType(1))  >> atom(hasEngineCap(5)) || not atom(hasEngineCap(4))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(2))  
}.
