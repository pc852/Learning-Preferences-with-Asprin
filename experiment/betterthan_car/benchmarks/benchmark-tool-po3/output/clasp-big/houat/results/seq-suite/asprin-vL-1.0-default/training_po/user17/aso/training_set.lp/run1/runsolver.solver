asprin_vL version 1.0
Reading from stdin
-:175:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:200:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:281:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:555:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:732:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:933:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:937:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:937:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:943:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1042:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1068:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1188:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1222:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1244:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:92:1-16: info: no atoms over signature occur in program:
  output/3

-:84:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:85:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:86:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:87:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:117:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,aso) output(8,eq,6) output(6,eq,7) output(7,eq,2) output(2,eq,9) output(9,eq,10) output(10,eq,1) output(1,eq,5) output(5,eq,3) output(3,eq,4)
Optimization: 9 0
Answer: 2
preference(1,(1,2),1,for(atom(hasEngineCap(2))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,2),2,for(atom(hasEngineCap(3))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(9,better,10) output(6,worse,7) output(3,worse,4) output(8,eq,6) output(7,eq,2) output(2,eq,9) output(1,eq,5)
Optimization: 8 3
Answer: 3
preference(1,(1,3),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,3),2,for(atom(hasBodyType(2))),()) preference(1,(1,4),2,for(atom(hasEngineCap(2))),()) preference(1,aso) output(8,better,6) output(2,better,9) output(7,worse,2) output(9,worse,10) output(6,eq,7) output(10,eq,1) output(1,eq,5) output(5,eq,3) output(3,eq,4)
Optimization: 7 2
Answer: 4
preference(1,(1,1),0,for(atom(hasBodyType(1))),()) preference(1,(1,2),0,for(atom(hasBodyType(1))),()) preference(1,(1,3),0,for(atom(hasBodyType(1))),()) preference(1,(1,4),0,for(atom(hasBodyType(1))),()) preference(1,(1,5),0,for(atom(hasBodyType(1))),()) preference(1,(1,6),0,for(atom(hasBodyType(1))),()) preference(1,(1,7),0,for(atom(hasBodyType(1))),()) preference(1,(1,8),0,for(atom(hasBodyType(1))),()) preference(1,(1,9),0,for(atom(hasBodyType(1))),()) preference(1,(1,10),0,for(atom(hasBodyType(1))),()) preference(1,(1,11),0,for(atom(hasBodyType(1))),()) preference(1,(1,12),0,for(atom(hasBodyType(1))),()) preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,5),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,6),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,7),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,8),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,9),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,10),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,1),2,for(atom(hasBodyType(2))),()) preference(1,(1,2),2,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasTransmission(2))),()) preference(1,(1,5),2,for(atom(hasTransmission(2))),()) preference(1,(1,6),2,for(atom(hasTransmission(2))),()) preference(1,(1,7),2,for(atom(hasTransmission(2))),()) preference(1,(1,8),2,for(atom(hasTransmission(2))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,(1,10),2,for(atom(hasTransmission(2))),()) preference(1,(1,11),2,for(atom(hasTransmission(2))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,aso) output(6,better,7) output(2,better,9) output(5,better,3) output(9,worse,10) output(8,eq,6) output(7,eq,2) output(10,eq,1) output(1,eq,5) output(3,eq,4)
Optimization: 6 12
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),1,for(atom(hasFuelCons(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(2))),()) preference(1,aso) output(2,better,9) output(9,better,10) output(1,better,5) output(3,better,4) output(6,worse,7) output(5,worse,3) output(8,eq,6) output(7,eq,2)
Optimization: 5 4
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,2),0,for(atom(hasEngineCap(5))),()) preference(1,(1,3),0,for(atom(hasEngineCap(5))),()) preference(1,(1,4),0,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,5),0,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,6),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),0,for(atom(hasEngineCap(5))),()) preference(1,(1,8),0,for(atom(hasEngineCap(5))),()) preference(1,(1,9),0,for(atom(hasEngineCap(5))),()) preference(1,(1,10),0,for(atom(hasEngineCap(5))),()) preference(1,(1,11),0,for(atom(hasEngineCap(5))),()) preference(1,(1,12),0,for(atom(hasEngineCap(4))),()) preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,4),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,5),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,8),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,6),1,for(atom(hasEngineCap(1))),()) preference(1,(1,7),1,for(atom(hasTransmission(2))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasFuelCons(1))),()) preference(1,(1,12),2,for(atom(hasFuelCons(1))),()) preference(1,aso) output(8,better,6) output(6,better,7) output(7,better,2) output(1,better,5) output(5,better,3) output(2,worse,9) output(9,worse,10) output(10,worse,1)
Optimization: 4 12
Answer: 7
preference(1,(1,1),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),0,for(atom(hasEngineCap(1))),()) preference(1,(1,3),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,6),0,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,7),0,for(atom(hasEngineCap(1))),()) preference(1,(1,8),0,for(atom(hasEngineCap(5))),()) preference(1,(1,10),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,11),0,for(atom(hasTransmission(1))),()) preference(1,(1,12),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,5),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,6),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,8),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,1),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(2))),()) preference(1,(1,8),1,for(atom(hasFuelCons(2))),()) preference(1,(1,7),2,for(atom(hasEngineCap(4))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,aso) output(7,better,2) output(9,better,10) output(10,better,1) output(5,better,3) output(3,better,4) output(8,worse,6) output(2,worse,9) output(1,worse,5) output(6,eq,7)
Optimization: 4 11
Progression : [1;4] (Error: 3)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),0,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,3),0,for(atom(hasEngineCap(3))),()) preference(1,(1,4),0,for(atom(hasBodyType(1))),()) preference(1,(1,5),0,for(atom(hasTransmission(2))),()) preference(1,(1,10),0,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,5),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,10),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,2),1,for(atom(hasTransmission(2))),()) preference(1,(1,4),1,for(atom(hasBodyType(2))),()) preference(1,(1,8),1,for(atom(hasEngineCap(1))),()) preference(1,(1,9),1,for(atom(hasEngineCap(1))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(5))),()) preference(1,(1,3),2,for(atom(hasEngineCap(2))),()) preference(1,(1,5),2,for(atom(hasEngineCap(4))),()) preference(1,(1,9),2,for(atom(hasFuelCons(1))),()) preference(1,aso) output(8,better,6) output(6,better,7) output(7,better,2) output(9,better,10) output(10,better,1) output(1,better,5) output(3,better,4) output(2,worse,9) output(5,worse,3)
Optimization: 2 11
Progression : [2;2] (Error: 0)
Progression : 2 [ 1;11] (Error: 10)
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,2),0,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,3),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,10),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,2),1,for(atom(hasFuelCons(1))),()) preference(1,(1,3),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),1,for(atom(hasEngineCap(4))),()) preference(1,(1,5),1,for(atom(hasEngineCap(4))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,1),2,for(atom(hasEngineCap(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(3))),()) preference(1,(1,5),2,for(atom(hasTransmission(1))),()) preference(1,(1,10),2,for(atom(hasTransmission(1))),()) preference(1,aso) output(8,better,6) output(6,better,7) output(2,better,9) output(10,better,1) output(1,better,5) output(5,better,3) output(3,better,4) output(7,worse,2) output(9,worse,10)
Optimization: 2 6
Progression : 2 [2;6] (Error: 2)
Answer: 10
preference(1,(1,3),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,5),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,5),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,10),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,2),1,for(atom(hasFuelCons(1))),()) preference(1,(1,3),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),1,for(atom(hasEngineCap(3))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,3),2,for(atom(hasFuelCons(1))),()) preference(1,(1,5),2,for(atom(hasBodyType(1))),()) preference(1,aso) output(8,better,6) output(6,better,7) output(2,better,9) output(9,better,10) output(10,better,1) output(5,better,3) output(3,better,4) output(7,worse,2) output(1,worse,5)
Optimization: 2 5
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,2),0,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,3),0,for(atom(hasFuelCons(2))),()) preference(1,(1,11),0,for(atom(hasEngineCap(5))),()) preference(1,(1,2),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(4))),()) preference(1,(1,3),1,for(atom(hasEngineCap(2))),()) preference(1,(1,2),2,for(atom(hasFuelCons(1))),()) preference(1,aso) output(8,better,6) output(6,better,7) output(2,better,9) output(9,better,10) output(1,better,5) output(5,better,3) output(3,better,4) output(7,worse,2) output(10,worse,1)
Optimization: 2 4
Progression : 2 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 11
  Optimum    : yes
Optimization : 2 4
Calls        : 1
Time         : 11.136s (Solving: 8.98s 1st Model: 0.02s Unsat: 8.51s)
CPU Time     : 34.646s
Threads      : 4        (Winner: 1)

Choices      : 67004    (Domain: 1993)
Conflicts    : 33263    (Analyzed: 33255)
Restarts     : 59       (Average: 563.64 Last: 3288)
Model-Level  : 272.4   
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 39286    (Deleted: 3106)
  Binary     : 609      (Ratio:   1.55%)
  Ternary    : 786      (Ratio:   2.00%)
  Conflict   : 33254    (Average Length:   34.2 Ratio:  84.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 6032     (Average Length:   16.7 Ratio:  15.35%) 
  Distributed: 2027     (Ratio:   6.10% Average LBD: 2.94) 
  Integrated : 6081     (Ratio: 300.00% Unit: 78 Average Jumps: 44.59)
Backjumps    : 33255    (Average:  1.77 Max: 296 Sum:  58723)
  Executed   : 33247    (Average:  1.76 Max: 296 Sum:  58693 Ratio:  99.95%)
  Bounded    : 8        (Average:  3.75 Max:   8 Sum:     30 Ratio:   0.05%)

Rules        : 171251  
  Choice     : 37      
  Minimize   : 2       
Atoms        : 48778   
Bodies       : 55261   
  Count      : 360     
Equivalences : 133084   (Atom=Atom: 40205 Body=Body: 39499 Other: 53380)
Tight        : Yes
Variables    : 13947    (Eliminated:    0 Frozen: 5415)
Constraints  : 152403   (Binary:  91.3% Ternary:   7.4% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(2)) >> atom(hasEngineCap(3)) ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) ; 
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(4))  >> atom(hasBodyType(2)) ; 
  not atom(hasTransmission(2))  >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasBodyType(1))  >> atom(hasBodyType(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasTransmission(2)) || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(2)) || atom(hasBodyType(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(1))  ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) ; 
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(4))  >> not atom(hasEngineCap(5))  || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(5))  >> atom(hasFuelCons(2)) || atom(hasEngineCap(5)) ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(5))  || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  atom(hasBodyType(2)) >> not atom(hasEngineCap(5))  || atom(hasEngineCap(5)) ; 
  not atom(hasTransmission(1))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(4))  >> atom(hasFuelCons(1)) || atom(hasEngineCap(4)) ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  || not atom(hasBodyType(2))  ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(1)) || not atom(hasBodyType(2))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(5))  || not atom(hasBodyType(2))  ; 
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(5))  || not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(5))  || atom(hasEngineCap(1)) ; 
  not atom(hasEngineCap(5))  >> atom(hasEngineCap(4)) || atom(hasEngineCap(1)) ; 
  atom(hasFuelCons(2)) >> not atom(hasEngineCap(5))  || atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasTransmission(2))  || atom(hasTransmission(1)) ; 
  not atom(hasEngineCap(2))  >> atom(hasFuelCons(2)) || atom(hasEngineCap(5)) ; 
  not atom(hasBodyType(1))  || not atom(hasEngineCap(3))  ; 
  not atom(hasBodyType(2))  || not atom(hasEngineCap(4))  ; 
  not atom(hasBodyType(2))  || not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  || not atom(hasEngineCap(4))  ; 
  atom(hasEngineCap(2)) >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(3))  >> atom(hasEngineCap(2)) || atom(hasEngineCap(3)) ; 
  atom(hasBodyType(2)) >> not atom(hasFuelCons(2))  || atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(4)) || atom(hasTransmission(2)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(5)) || not atom(hasEngineCap(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasEngineCap(4))  || not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(4)) >> not atom(hasBodyType(1))  || not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(1)) >> not atom(hasTransmission(2))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasTransmission(2))  ; 
  not atom(hasTransmission(1))  >> not atom(hasEngineCap(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasTransmission(2))  >> atom(hasEngineCap(2)) || not atom(hasEngineCap(4))  ; 
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(1))  || not atom(hasBodyType(2))  ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(3)) || not atom(hasEngineCap(3))  ; 
  atom(hasEngineCap(4)) >> not atom(hasBodyType(2))  || not atom(hasEngineCap(3))  ; 
  atom(hasEngineCap(4)) >> atom(hasTransmission(1)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(4)) >> atom(hasTransmission(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) >> atom(hasFuelCons(1)) || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> not atom(hasFuelCons(1))  || not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(1))  >> atom(hasBodyType(1)) || not atom(hasEngineCap(4))  ; 
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(4)) >> not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(2)) >> not atom(hasEngineCap(1))  || atom(hasFuelCons(2)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasEngineCap(4))  || atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(4)) >> not atom(hasEngineCap(1))  || not atom(hasEngineCap(4))  ; 
  not atom(hasEngineCap(2))  >> atom(hasFuelCons(1)) || not atom(hasBodyType(2))  
}.
