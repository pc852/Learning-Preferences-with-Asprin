asprin_vL version 1.0
Reading from stdin
-:171:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:181:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:196:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:277:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:551:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:728:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:857:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:929:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:933:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:933:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:939:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1038:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1064:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1184:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1218:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1240:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:88:1-16: info: no atoms over signature occur in program:
  output/3

-:80:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:81:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:82:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,(1,1),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,5),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,6),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,7),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,8),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,9),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,10),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,1),2,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasBodyType(1))),()) preference(1,(1,3),2,for(atom(hasEngineCap(2))),()) preference(1,(1,4),2,for(atom(hasEngineCap(3))),()) preference(1,(1,5),2,for(atom(hasEngineCap(4))),()) preference(1,(1,6),2,for(atom(hasEngineCap(5))),()) preference(1,(1,7),2,for(atom(hasFuelCons(1))),()) preference(1,(1,8),2,for(atom(hasFuelCons(2))),()) preference(1,(1,9),2,for(atom(hasFuelCons(2))),()) preference(1,(1,10),2,for(atom(hasFuelCons(2))),()) preference(1,(1,11),2,for(atom(hasFuelCons(2))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,poset) output(6,better,7) output(5,better,9) output(8,better,3) output(4,worse,10) output(7,worse,5) output(9,worse,8) output(3,worse,1) output(2,unc,4) output(10,unc,6)
Optimization: 6 12
Answer: 2
preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,poset) output(6,better,7) output(5,better,9) output(8,better,3) output(10,better,6) output(4,worse,10) output(7,worse,5) output(9,worse,8) output(3,worse,1) output(2,eq,4)
Optimization: 5 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(2)))),()) preference(1,poset) output(7,better,5) output(9,better,8) output(3,better,1) output(8,better,3) output(2,better,4) output(6,worse,7) output(5,worse,9) output(4,worse,10) output(10,eq,6)
Optimization: 4 1
Answer: 4
preference(1,(1,11),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(2)))),()) preference(1,poset) output(4,better,10) output(7,better,5) output(3,better,1) output(5,better,9) output(8,better,3) output(2,better,4) output(6,worse,7) output(9,worse,8) output(10,worse,6)
Optimization: 3 2
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,7),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,11),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,2),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,8),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(4))),()) preference(1,(1,5),1,for(atom(hasTransmission(2))),()) preference(1,(1,8),1,for(atom(hasEngineCap(5))),()) preference(1,(1,9),1,for(atom(hasBodyType(2))),()) preference(1,(1,10),1,for(atom(hasEngineCap(5))),()) preference(1,(1,1),2,for(atom(hasTransmission(2))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(4))),()) preference(1,poset) output(7,better,5) output(9,better,8) output(3,better,1) output(6,better,7) output(5,better,9) output(8,better,3) output(10,better,6) output(5,worse,9) output(8,worse,3) output(7,worse,5) output(9,worse,8) output(3,worse,1) output(2,unc,4) output(4,unc,10)
Optimization: 2 12
Answer: 6
preference(1,(1,2),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,3),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,11),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,10),2,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,2),2,for(atom(hasFuelCons(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(3))),()) preference(1,(1,5),2,for(atom(hasFuelCons(2))),()) preference(1,(1,6),2,for(atom(hasBodyType(1))),()) preference(1,poset) output(4,better,10) output(7,better,5) output(9,better,8) output(3,better,1) output(6,better,7) output(5,better,9) output(8,better,3) output(2,better,4) output(10,better,6) output(6,worse,7) output(5,worse,9) output(8,worse,3) output(4,worse,10) output(7,worse,5) output(9,worse,8) output(3,worse,1)
Optimization: 0 7
Progression : 0 [1;7] (Error: 6)
Answer: 7
preference(1,(1,7),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,1),1,for(atom(hasFuelCons(2))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasTransmission(2))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,7),2,for(atom(hasTransmission(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(4,better,10) output(7,better,5) output(9,better,8) output(3,better,1) output(6,better,7) output(5,better,9) output(8,better,3) output(2,better,4) output(10,better,6) output(6,worse,7) output(5,worse,9) output(8,worse,3) output(4,worse,10) output(7,worse,5) output(9,worse,8) output(3,worse,1) output(2,worse,4) output(10,worse,6)
Optimization: 0 6
Answer: 8
preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,1),1,for(atom(hasFuelCons(2))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasTransmission(2))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasTransmission(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(4,better,10) output(7,better,5) output(9,better,8) output(3,better,1) output(6,better,7) output(5,better,9) output(8,better,3) output(2,better,4) output(10,better,6) output(6,worse,7) output(5,worse,9) output(8,worse,3) output(4,worse,10) output(7,worse,5) output(9,worse,8) output(3,worse,1) output(2,worse,4) output(10,worse,6)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 9
preference(1,(1,6),1,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,11),2,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,1),1,for(atom(hasTransmission(2))),()) preference(1,(1,11),1,for(atom(hasTransmission(2))),()) preference(1,(1,12),1,for(atom(hasBodyType(2))),()) preference(1,(1,1),2,for(atom(hasFuelCons(2))),()) preference(1,(1,6),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasTransmission(2))),()) preference(1,poset) output(4,better,10) output(7,better,5) output(9,better,8) output(3,better,1) output(6,better,7) output(5,better,9) output(8,better,3) output(2,better,4) output(10,better,6) output(6,worse,7) output(5,worse,9) output(8,worse,3) output(4,worse,10) output(7,worse,5) output(9,worse,8) output(3,worse,1)
Optimization: 0 4
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.191 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 0 4
Calls        : 1
Time         : 599.432s (Solving: 580.87s 1st Model: 6.32s Unsat: 0.00s)
CPU Time     : 2251.999s
Threads      : 4        (Winner: 4)

Choices      : 643394   (Domain: 861)
Conflicts    : 25482    (Analyzed: 25480)
Restarts     : 60       (Average: 424.67 Last: 2811)
Model-Level  : 852.9   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1537170  (Deleted: 1465022)
  Binary     : 52       (Ratio:   0.00%)
  Ternary    : 3386     (Ratio:   0.22%)
  Conflict   : 25480    (Average Length: 1269.2 Ratio:   1.66%) 
  Loop       : 1508813  (Average Length:   91.5 Ratio:  98.16%) 
  Other      : 2877     (Average Length:   10.9 Ratio:   0.19%) 
  Distributed: 959      (Ratio:   0.06% Average LBD: 2.76) 
  Integrated : 2877     (Ratio: 300.00% Unit: 114 Average Jumps: 1189.65)
Backjumps    : 25480    (Average: 15.13 Max: 9394 Sum: 385487)
  Executed   : 25443    (Average: 15.13 Max: 9394 Sum: 385413 Ratio:  99.98%)
  Bounded    : 37       (Average:  2.00 Max:   2 Sum:     74 Ratio:   0.02%)

Rules        : 1743111 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 14325   
Bodies       : 1602317 
  Count      : 24      
Equivalences : 21587    (Atom=Atom: 5532 Body=Body: 4292 Other: 11763)
Tight        : No       (SCCs: 9 Non-Hcfs: 0 Nodes: 92862 Gammas: 0)
Variables    : 1567526  (Eliminated:    0 Frozen: 96195)
Constraints  : 9298982  (Binary:  82.8% Ternary:   1.0% Other:  16.2%)


Learned preference statement: 

#preference(1,poset){
  not atom(hasBodyType(1))  >> atom(hasEngineCap(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasBodyType(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(3)) ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(4)) ; 
  not atom(hasBodyType(1))  >> atom(hasEngineCap(5)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(1)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(2)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasTransmission(1))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  not atom(hasTransmission(2))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(2)) >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasFuelCons(2))  ; 
  atom(hasTransmission(2)) >> atom(hasBodyType(2)) ; 
  atom(hasEngineCap(5)) >> not atom(hasEngineCap(4))  ; 
  atom(hasBodyType(2)) >> not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(5)) >> atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(1))  >> atom(hasTransmission(2)) ; 
  not atom(hasEngineCap(2))  >> not atom(hasFuelCons(2))  ; 
  not atom(hasEngineCap(4))  >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasBodyType(2))  >> atom(hasFuelCons(2)) ; 
  not atom(hasEngineCap(5))  >> atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(5))  >> atom(hasFuelCons(2)) ; 
  not atom(hasBodyType(2))  >> atom(hasBodyType(1)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasBodyType(2))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasBodyType(2))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasFuelCons(2)) >> atom(hasBodyType(1)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> not atom(hasFuelCons(1))  ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(1))  >> atom(hasTransmission(2)) ; 
  not atom(hasFuelCons(2))  >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasFuelCons(2)) >> atom(hasBodyType(1)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) ; 
  atom(hasTransmission(2)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasTransmission(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasTransmission(2)) >> not atom(hasBodyType(2))  ; 
  atom(hasBodyType(2)) >> atom(hasTransmission(2)) ; 
  not atom(hasBodyType(2))  >> atom(hasBodyType(2)) 
}.
