asprin_vL version 1.0
Reading from stdin
-:177:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:187:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:202:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:283:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:557:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:734:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:863:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:935:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:939:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:939:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:945:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1044:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1070:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1190:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1224:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1246:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:94:1-16: info: no atoms over signature occur in program:
  output/3

-:86:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:87:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:88:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(7,eq,2) output(2,eq,9) output(9,eq,1) output(1,eq,5) output(5,eq,3)
Optimization: 8 0
Answer: 2
preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,1) output(6,better,10) output(2,better,9) output(10,worse,7) output(5,worse,3) output(8,eq,6) output(7,eq,2) output(1,eq,5)
Optimization: 5 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(2)))),()) preference(1,poset) output(10,better,7) output(8,better,6) output(1,better,5) output(2,better,9) output(5,worse,3) output(9,worse,1) output(6,worse,10) output(7,worse,2)
Optimization: 4 1
Answer: 4
preference(1,(1,12),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,11),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),2,for(atom(hasEngineCap(5))),()) preference(1,poset) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(7,better,2) output(2,worse,9) output(6,eq,10) output(9,unc,1)
Optimization: 3 3
Answer: 5
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(2)))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,poset) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(6,better,10) output(2,better,9) output(9,worse,1) output(7,worse,2)
Optimization: 2 3
Answer: 6
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(5))),()) preference(1,(1,11),2,for(atom(hasEngineCap(1))),()) preference(1,poset) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(2,better,9) output(9,worse,1)
Optimization: 1 3
Answer: 7
preference(1,(1,2),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,5),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,8),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(1))),()) preference(1,(1,10),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(2))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,7),2,for(atom(hasEngineCap(5))),()) preference(1,(1,8),2,for(atom(hasFuelCons(1))),()) preference(1,(1,10),2,for(atom(hasEngineCap(1))),()) preference(1,poset) output(9,better,1) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(2,better,9)
Optimization: 0 10
Answer: 8
preference(1,(1,2),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,8),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(1))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(1))),()) preference(1,(1,10),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(2))),()) preference(1,(1,7),2,for(atom(hasEngineCap(5))),()) preference(1,(1,8),2,for(atom(hasFuelCons(1))),()) preference(1,(1,10),2,for(atom(hasEngineCap(1))),()) preference(1,poset) output(9,better,1) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(2,better,9)
Optimization: 0 9
Progression : 0 [1;9] (Error: 8)
Progression : 0 [2;9] (Error: 3.5)
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.139 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 1198.234s (Solving: 1189.01s 1st Model: 1.69s Unsat: 0.00s)
CPU Time     : 4763.351s
Threads      : 4        (Winner: 4)

Choices      : 4736674  (Domain: 3566)
Conflicts    : 271469   (Analyzed: 271466)
Restarts     : 337      (Average: 805.54 Last: 10123)
Model-Level  : 1915.2  
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 12619189 (Deleted: 12458979)
  Binary     : 2076     (Ratio:   0.02%)
  Ternary    : 65744    (Ratio:   0.52%)
  Conflict   : 271466   (Average Length: 2656.6 Ratio:   2.15%) 
  Loop       : 12276161 (Average Length:  194.2 Ratio:  97.28%) 
  Other      : 71562    (Average Length:    3.6 Ratio:   0.57%) 
  Distributed: 23854    (Ratio:   0.19% Average LBD: 2.84) 
  Integrated : 71562    (Ratio: 300.00% Unit: 175 Average Jumps: 1122.87)
Backjumps    : 271466   (Average: 14.31 Max: 29705 Sum: 3884442)
  Executed   : 271437   (Average: 14.31 Max: 29705 Sum: 3884390 Ratio: 100.00%)
  Bounded    : 29       (Average:  1.79 Max:   2 Sum:     52 Ratio:   0.00%)

Rules        : 1671163 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 18623   
Bodies       : 1514084 
  Count      : 48      
Equivalences : 35834    (Atom=Atom: 5050 Body=Body: 9317 Other: 21467)
Tight        : No       (SCCs: 9 Non-Hcfs: 0 Nodes: 1434510 Gammas: 0)
Variables    : 1444417  (Eliminated:    0 Frozen: 1436965)
Constraints  : 8591844  (Binary:  82.8% Ternary:   1.1% Other:  16.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(5)) ; 
  not atom(hasEngineCap(4))  >> not atom(hasTransmission(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(2)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(2)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(4))  ; 
  atom(hasEngineCap(5)) >> atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) ; 
  not atom(hasTransmission(1))  >> not atom(hasBodyType(1))  ; 
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(3))  ; 
  not atom(hasBodyType(1))  >> atom(hasBodyType(2)) ; 
  not atom(hasEngineCap(3))  >> atom(hasEngineCap(5)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(1))  ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) ; 
  not atom(hasEngineCap(3))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasFuelCons(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) ; 
  not atom(hasTransmission(1))  >> not atom(hasBodyType(1))  ; 
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(3))  ; 
  not atom(hasEngineCap(3))  >> atom(hasEngineCap(5)) ; 
  not atom(hasBodyType(1))  >> atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(1)) >> not atom(hasEngineCap(1))  ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) ; 
  not atom(hasEngineCap(3))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasFuelCons(1))  
}.
