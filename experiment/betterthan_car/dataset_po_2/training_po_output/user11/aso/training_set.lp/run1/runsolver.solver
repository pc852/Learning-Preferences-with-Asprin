asprin_vL version 1.0
Reading from stdin
-:175:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:200:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:281:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:555:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:732:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:933:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:937:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:937:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:943:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1042:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1068:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1188:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1222:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1244:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:92:1-16: info: no atoms over signature occur in program:
  output/3

-:84:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:85:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:86:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:87:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:117:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,aso) output(9,eq,10) output(10,eq,4) output(4,eq,3) output(3,eq,5) output(5,eq,2) output(2,eq,1) output(1,eq,7) output(7,eq,6) output(6,eq,8)
Optimization: 9 0
Answer: 2
preference(1,(1,1),0,for(atom(hasEngineCap(4))),()) preference(1,(1,2),0,for(atom(hasTransmission(1))),()) preference(1,(1,3),0,for(atom(hasEngineCap(3))),()) preference(1,(1,4),0,for(atom(hasEngineCap(1))),()) preference(1,(1,5),0,for(atom(hasBodyType(1))),()) preference(1,(1,7),0,for(atom(hasTransmission(1))),()) preference(1,(1,8),0,for(atom(hasEngineCap(4))),()) preference(1,(1,9),0,for(atom(hasEngineCap(4))),()) preference(1,(1,10),0,for(atom(hasEngineCap(4))),()) preference(1,(1,11),0,for(atom(hasTransmission(1))),()) preference(1,(1,12),0,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(3))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(3))),()) preference(1,(1,5),1,for(atom(hasBodyType(2))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(3))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(4,better,3) output(1,worse,7) output(9,eq,10) output(10,eq,4) output(7,eq,6) output(6,eq,8)
Optimization: 8 12
Answer: 3
preference(1,(1,1),0,for(atom(hasEngineCap(4))),()) preference(1,(1,2),0,for(atom(hasFuelCons(2))),()) preference(1,(1,3),0,for(atom(hasEngineCap(3))),()) preference(1,(1,4),0,for(atom(hasEngineCap(1))),()) preference(1,(1,5),0,for(atom(hasBodyType(1))),()) preference(1,(1,7),0,for(atom(hasTransmission(1))),()) preference(1,(1,8),0,for(atom(hasEngineCap(4))),()) preference(1,(1,9),0,for(atom(hasEngineCap(4))),()) preference(1,(1,10),0,for(atom(hasEngineCap(4))),()) preference(1,(1,11),0,for(atom(hasTransmission(1))),()) preference(1,(1,12),0,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(3))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(3))),()) preference(1,(1,5),1,for(atom(hasBodyType(2))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(3))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(10,worse,4) output(1,worse,7) output(7,eq,6) output(6,eq,8)
Optimization: 7 12
Answer: 4
preference(1,(1,1),0,for(atom(hasEngineCap(4))),()) preference(1,(1,3),0,for(atom(hasEngineCap(3))),()) preference(1,(1,4),0,for(atom(hasEngineCap(1))),()) preference(1,(1,5),0,for(atom(hasBodyType(1))),()) preference(1,(1,7),0,for(atom(hasTransmission(1))),()) preference(1,(1,8),0,for(atom(hasEngineCap(4))),()) preference(1,(1,9),0,for(atom(hasEngineCap(4))),()) preference(1,(1,10),0,for(atom(hasEngineCap(4))),()) preference(1,(1,11),0,for(atom(hasTransmission(1))),()) preference(1,(1,12),0,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(3))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(3))),()) preference(1,(1,5),1,for(atom(hasBodyType(2))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(3))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(7,better,6) output(10,worse,4) output(1,worse,7) output(6,eq,8)
Optimization: 6 12
Answer: 5
preference(1,(1,1),0,for(atom(hasEngineCap(4))),()) preference(1,(1,3),0,for(atom(hasEngineCap(3))),()) preference(1,(1,4),0,for(atom(hasEngineCap(1))),()) preference(1,(1,7),0,for(atom(hasBodyType(2))),()) preference(1,(1,8),0,for(atom(hasBodyType(2))),()) preference(1,(1,9),0,for(atom(hasEngineCap(4))),()) preference(1,(1,10),0,for(atom(hasEngineCap(4))),()) preference(1,(1,11),0,for(atom(hasTransmission(1))),()) preference(1,(1,12),0,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(3))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(3))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(3))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(7,better,6) output(10,worse,4) output(1,worse,7) output(6,eq,8)
Optimization: 6 11
Answer: 6
preference(1,(1,1),0,for(atom(hasEngineCap(4))),()) preference(1,(1,2),0,for(atom(hasEngineCap(1))),()) preference(1,(1,3),0,for(atom(hasEngineCap(3))),()) preference(1,(1,4),0,for(atom(hasEngineCap(1))),()) preference(1,(1,5),0,for(atom(hasTransmission(2))),()) preference(1,(1,7),0,for(atom(hasBodyType(2))),()) preference(1,(1,8),0,for(atom(hasBodyType(2))),()) preference(1,(1,9),0,for(atom(hasEngineCap(4))),()) preference(1,(1,10),0,for(atom(hasEngineCap(4))),()) preference(1,(1,11),0,for(atom(hasTransmission(1))),()) preference(1,(1,12),0,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(atom(hasEngineCap(3))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasEngineCap(3))),()) preference(1,(1,5),1,for(atom(hasTransmission(1))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasFuelCons(1))),()) preference(1,(1,1),2,for(atom(hasBodyType(1))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasFuelCons(2))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(3))),()) preference(1,(1,9),2,for(atom(hasTransmission(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasTransmission(2))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(7,better,6) output(6,better,8) output(10,worse,4) output(1,worse,7)
Optimization: 5 12
Answer: 7
preference(1,(1,2),0,for(atom(hasEngineCap(1))),()) preference(1,(1,3),0,for(atom(hasFuelCons(1))),()) preference(1,(1,5),0,for(atom(hasFuelCons(2))),()) preference(1,(1,6),0,for(atom(hasEngineCap(4))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasEngineCap(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(2))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(1))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(1))),()) preference(1,aso) output(9,better,10) output(3,better,5) output(2,better,1) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7) output(4,eq,3) output(7,eq,6)
Optimization: 5 10
Answer: 8
preference(1,(1,2),0,for(atom(hasEngineCap(1))),()) preference(1,(1,3),0,for(atom(hasFuelCons(1))),()) preference(1,(1,6),0,for(atom(hasEngineCap(4))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasBodyType(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(2))),()) preference(1,(1,2),2,for(atom(hasTransmission(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(1))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(1))),()) preference(1,aso) output(9,better,10) output(3,better,5) output(2,better,1) output(7,better,6) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7) output(4,eq,3)
Optimization: 4 10
Answer: 9
preference(1,(1,2),0,for(atom(hasEngineCap(1))),()) preference(1,(1,6),0,for(atom(hasEngineCap(4))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(2))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasBodyType(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(1))),()) preference(1,aso) output(9,better,10) output(3,better,5) output(2,better,1) output(7,better,6) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7) output(4,eq,3)
Optimization: 4 9
Answer: 10
preference(1,(1,2),0,for(atom(hasEngineCap(1))),()) preference(1,(1,5),0,for(atom(hasTransmission(1))),()) preference(1,(1,6),0,for(atom(hasEngineCap(4))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasEngineCap(5))),()) preference(1,(1,6),1,for(atom(hasBodyType(2))),()) preference(1,(1,2),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasBodyType(2))),()) preference(1,(1,5),2,for(atom(hasFuelCons(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(1))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(3,better,5) output(2,better,1) output(7,better,6) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7)
Optimization: 3 10
Answer: 11
preference(1,(1,1),0,for(atom(hasEngineCap(1))),()) preference(1,(1,3),0,for(atom(hasFuelCons(2))),()) preference(1,(1,10),0,for(atom(hasBodyType(2))),()) preference(1,(1,12),0,for(atom(hasEngineCap(1))),()) preference(1,(1,1),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasEngineCap(5))),()) preference(1,(1,5),1,for(atom(hasBodyType(1))),()) preference(1,(1,10),1,for(atom(hasBodyType(1))),()) preference(1,(1,12),1,for(atom(hasFuelCons(2))),()) preference(1,(1,1),2,for(atom(hasBodyType(2))),()) preference(1,(1,3),2,for(atom(hasTransmission(1))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,10),2,for(atom(hasFuelCons(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(1))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(3,better,5) output(2,better,1) output(7,better,6) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7)
Optimization: 3 5
Answer: 12
preference(1,(1,1),0,for(atom(hasEngineCap(1))),()) preference(1,(1,10),0,for(atom(hasBodyType(2))),()) preference(1,(1,1),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasBodyType(1))),()) preference(1,(1,10),1,for(atom(hasBodyType(1))),()) preference(1,(1,12),1,for(atom(hasEngineCap(5))),()) preference(1,(1,1),2,for(atom(hasBodyType(2))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(3,better,5) output(2,better,1) output(7,better,6) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7)
Optimization: 3 4
Answer: 13
preference(1,(1,1),0,for(atom(hasEngineCap(1))),()) preference(1,(1,1),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasBodyType(1))),()) preference(1,(1,12),1,for(atom(hasEngineCap(5))),()) preference(1,(1,1),2,for(atom(hasBodyType(2))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,aso) output(9,better,10) output(4,better,3) output(3,better,5) output(2,better,1) output(7,better,6) output(6,better,8) output(10,worse,4) output(5,worse,2) output(1,worse,7)
Optimization: 3 3
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 3 3
Calls        : 1
Time         : 13.029s (Solving: 8.61s 1st Model: 0.01s Unsat: 7.92s)
CPU Time     : 11.563s

Choices      : 14989   
Conflicts    : 7418     (Analyzed: 7417)
Restarts     : 36       (Average: 206.03 Last: 58)
Model-Level  : 48.1    
Problems     : 1        (Average Length: 1.00 Splits: 0)
Lemmas       : 7417     (Deleted: 4984)
  Binary     : 75       (Ratio:   1.01%)
  Ternary    : 145      (Ratio:   1.95%)
  Conflict   : 7417     (Average Length:   24.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7417     (Average:  1.98 Max: 133 Sum:  14687)
  Executed   : 7396     (Average:  1.98 Max: 133 Sum:  14666 Ratio:  99.86%)
  Bounded    : 21       (Average:  1.00 Max:   1 Sum:     21 Ratio:   0.14%)

Rules        : 105383   (Original: 102215)
  Choice     : 37      
  Minimize   : 2       
Atoms        : 36322    (Original: 34918 Auxiliary: 1404)
Bodies       : 37513    (Original: 35821)
  Count      : 0        (Original: 360)
Equivalences : 93544    (Atom=Atom: 27785 Body=Body: 26983 Other: 38776)
Tight        : Yes
Variables    : 10527    (Eliminated:    0 Frozen: 4815)
Constraints  : 95367    (Binary:  90.3% Ternary:   7.9% Other:   1.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasTransmission(1)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) || atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) || atom(hasTransmission(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(2)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(2)) || atom(hasTransmission(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasFuelCons(2)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) || atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) || atom(hasTransmission(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(2)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(2)) || atom(hasTransmission(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) || atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) || atom(hasTransmission(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(2)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(2)) || atom(hasTransmission(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) || atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) || atom(hasBodyType(2)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) || atom(hasBodyType(2)) ; 
  atom(hasFuelCons(2)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(2)) || atom(hasTransmission(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(2)) >> atom(hasFuelCons(2)) || atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) || atom(hasEngineCap(1)) ; 
  atom(hasTransmission(1)) >> atom(hasBodyType(2)) || atom(hasTransmission(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) || atom(hasBodyType(2)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) || atom(hasBodyType(2)) ; 
  atom(hasFuelCons(2)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(3)) || atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(2)) || atom(hasTransmission(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasTransmission(2)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(1)) || atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasBodyType(2)) || atom(hasFuelCons(2)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(1)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasTransmission(2)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(1)) || atom(hasFuelCons(1)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(1)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(1)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(5)) >> atom(hasFuelCons(2)) || atom(hasTransmission(1)) ; 
  atom(hasBodyType(2)) >> atom(hasEngineCap(1)) || atom(hasEngineCap(4)) ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(5)) >> atom(hasTransmission(1)) || atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) || atom(hasBodyType(2)) ; 
  atom(hasFuelCons(2)) >> atom(hasBodyType(1)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) || atom(hasBodyType(2)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) ; 
  atom(hasEngineCap(5)) >> atom(hasFuelCons(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) || atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) ; 
  atom(hasEngineCap(5)) >> atom(hasFuelCons(2)) 
}.
