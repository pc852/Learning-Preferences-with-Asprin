asprin_vL version 1.0
Reading from stdin
-:166:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:176:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:191:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:272:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:533:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:546:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:723:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:839:34-71: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,for(neg(atom(#X3))),#P4)

-:852:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:924:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:928:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:928:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:934:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1033:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1059:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1179:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1213:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1235:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:83:1-16: info: no atoms over signature occur in program:
  output/3

-:75:25-37: info: atom does not occur in any rule head:
  forbid_worse

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,2) output(2,eq,7) output(10,eq,6) output(6,eq,8) output(4,eq,3) output(5,eq,1)
Optimization: 6 0
Answer: 2
preference(1,(1,8),1,for(atom(hasEngineCap(4))),7) preference(1,less(weight)) output(9,better,2) output(2,worse,7) output(10,eq,6) output(6,eq,8) output(4,eq,3) output(5,eq,1)
Optimization: 5 1
Answer: 3
preference(1,(1,1),1,for(atom(hasBodyType(2))),1) preference(1,(1,2),1,for(atom(hasTransmission(2))),1) preference(1,(1,3),1,for(atom(hasFuelCons(1))),1) preference(1,(1,4),1,for(atom(hasBodyType(1))),1) preference(1,(1,5),1,for(atom(hasTransmission(1))),1) preference(1,(1,6),1,for(atom(hasEngineCap(1))),1) preference(1,(1,7),1,for(atom(hasEngineCap(2))),1) preference(1,(1,8),1,for(atom(hasFuelCons(2))),1) preference(1,(1,9),1,for(atom(hasEngineCap(5))),1) preference(1,(1,10),1,for(atom(hasEngineCap(3))),2) preference(1,(1,11),1,for(atom(hasEngineCap(4))),2) preference(1,less(weight)) output(4,better,3) output(9,better,2) output(2,worse,7) output(10,worse,6) output(6,eq,8) output(5,eq,1)
Optimization: 4 11
Answer: 4
preference(1,(1,1),1,for(atom(hasFuelCons(1))),10) preference(1,(1,2),1,for(atom(hasEngineCap(4))),10) preference(1,(1,9),1,for(atom(hasEngineCap(3))),7) preference(1,less(weight)) output(4,better,3) output(9,better,2) output(10,better,6) output(2,eq,7) output(6,eq,8) output(5,eq,1)
Optimization: 3 3
Answer: 5
preference(1,(1,2),1,for(atom(hasFuelCons(1))),10) preference(1,(1,5),1,for(atom(hasEngineCap(1))),7) preference(1,(1,6),1,for(atom(hasEngineCap(3))),7) preference(1,(1,9),1,for(atom(hasEngineCap(2))),6) preference(1,less(weight)) output(2,better,7) output(4,better,3) output(9,better,2) output(5,better,1) output(6,better,8) output(10,better,6)
Optimization: 0 4
Progression : 0 [1;4] (Error: 3)
Progression : 0 [2;4] (Error: 1)
Progression : 0 [3;4] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.080 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 5+
  Optimum    : unknown
Optimization : 0 4
Calls        : 1
Time         : 599.355s (Solving: 597.33s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 2326.845s
Threads      : 4        (Winner: 4)

Choices      : 5251727  (Domain: 160304)
Conflicts    : 5084089  (Analyzed: 5084086)
Restarts     : 4256     (Average: 1194.57 Last: 319778)
Model-Level  : 34.2    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 5705524  (Deleted: 5363378)
  Binary     : 204      (Ratio:   0.00%)
  Ternary    : 242      (Ratio:   0.00%)
  Conflict   : 5084086  (Average Length:  300.0 Ratio:  89.11%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 621438   (Average Length:  309.7 Ratio:  10.89%) 
  Distributed: 209111   (Ratio:   4.11% Average LBD: 3.97) 
  Integrated : 627333   (Ratio: 300.00% Unit: 153 Average Jumps: 2.49)
Backjumps    : 5084086  (Average:  1.03 Max:  18 Sum: 5235593)
  Executed   : 5084085  (Average:  1.03 Max:  18 Sum: 5235588 Ratio: 100.00%)
  Bounded    : 1        (Average:  5.00 Max:   5 Sum:      5 Ratio:   0.00%)

Rules        : 35219   
  Choice     : 13      
  Minimize   : 2       
Atoms        : 3099    
Bodies       : 3250    
  Sum        : 12      
  Count      : 12      
Equivalences : 2018     (Atom=Atom: 71 Body=Body: 36 Other: 1911)
Tight        : Yes
Variables    : 3011     (Eliminated:    0 Frozen: 2351)
Constraints  : 36733    (Binary:  95.4% Ternary:   1.8% Other:   2.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasEngineCap(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasBodyType(2)) ; 
  1 :: atom(hasTransmission(2)) ; 
  1 :: atom(hasFuelCons(1)) ; 
  1 :: atom(hasBodyType(1)) ; 
  1 :: atom(hasTransmission(1)) ; 
  1 :: atom(hasEngineCap(1)) ; 
  1 :: atom(hasEngineCap(2)) ; 
  1 :: atom(hasFuelCons(2)) ; 
  1 :: atom(hasEngineCap(5)) ; 
  2 :: atom(hasEngineCap(3)) ; 
  2 :: atom(hasEngineCap(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasFuelCons(1)) ; 
  10 :: atom(hasEngineCap(4)) ; 
  7 :: atom(hasEngineCap(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(hasFuelCons(1)) ; 
  7 :: atom(hasEngineCap(1)) ; 
  7 :: atom(hasEngineCap(3)) ; 
  6 :: atom(hasEngineCap(2)) 
}.
