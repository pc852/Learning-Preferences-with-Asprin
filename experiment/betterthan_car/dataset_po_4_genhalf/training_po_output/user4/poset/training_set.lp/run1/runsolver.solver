asprin_vL version 1.0
Reading from stdin
-:172:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:182:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:197:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:278:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:552:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:729:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:845:34-71: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,for(neg(atom(#X3))),#P4)

-:858:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:930:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:934:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:934:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:940:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1039:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1065:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1185:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1219:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1241:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:89:1-16: info: no atoms over signature occur in program:
  output/3

-:81:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:82:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,(1,1),1,for(atom(hasBodyType(1))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasBodyType(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasBodyType(1))),()) preference(1,(1,10),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasBodyType(1))),()) preference(1,(1,12),1,for(atom(hasBodyType(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(3))),()) preference(1,(1,4),2,for(atom(hasEngineCap(4))),()) preference(1,(1,5),2,for(atom(hasEngineCap(5))),()) preference(1,(1,6),2,for(atom(hasFuelCons(1))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasFuelCons(2))),()) preference(1,(1,9),2,for(atom(hasFuelCons(2))),()) preference(1,(1,10),2,for(atom(hasFuelCons(2))),()) preference(1,(1,11),2,for(atom(hasFuelCons(2))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,poset) output(6,worse,7) output(10,worse,2) output(8,unc,6) output(2,unc,9) output(5,unc,1) output(3,unc,4)
Optimization: 6 12
Answer: 2
preference(1,(1,12),1,for(atom(hasEngineCap(2))),()) preference(1,poset) output(5,better,1) output(8,worse,6) output(2,worse,9) output(6,eq,7) output(10,eq,2) output(3,eq,4)
Optimization: 5 1
Answer: 3
preference(1,(1,12),1,for(atom(hasEngineCap(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(6,better,7) output(10,better,2) output(5,better,1) output(8,worse,6) output(2,worse,9) output(3,eq,4)
Optimization: 3 1
Answer: 4
preference(1,(1,6),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(6,better,7) output(10,better,2) output(5,better,1) output(3,better,4) output(8,worse,6) output(2,worse,9)
Optimization: 2 2
Answer: 5
preference(1,(1,3),1,for(atom(hasEngineCap(4))),()) preference(1,(1,6),1,for(atom(hasEngineCap(3))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(4))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(6,better,7) output(10,better,2) output(8,better,6) output(3,better,4) output(2,better,9) output(5,worse,1)
Optimization: 1 4
Answer: 6
preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,4),1,for(atom(hasTransmission(2))),()) preference(1,(1,7),1,for(atom(hasEngineCap(3))),()) preference(1,(1,3),2,for(atom(hasBodyType(1))),()) preference(1,(1,4),2,for(atom(hasEngineCap(1))),()) preference(1,(1,7),2,for(atom(hasEngineCap(4))),()) preference(1,poset) output(6,better,7) output(10,better,2) output(8,better,6) output(3,better,4) output(2,better,9) output(5,worse,1)
Optimization: 1 3
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 6+
  Optimum    : unknown
Optimization : 1 3
Calls        : 1
Time         : 599.266s (Solving: 596.32s 1st Model: 0.76s Unsat: 0.00s)
CPU Time     : 2330.150s
Threads      : 4        (Winner: 4)

Choices      : 3460267  (Domain: 6)
Conflicts    : 388791   (Analyzed: 388791)
Restarts     : 481      (Average: 808.30 Last: 14583)
Model-Level  : 155.0   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 1903983  (Deleted: 1726767)
  Binary     : 14452    (Ratio:   0.76%)
  Ternary    : 63556    (Ratio:   3.34%)
  Conflict   : 388791   (Average Length:  648.1 Ratio:  20.42%) 
  Loop       : 1289150  (Average Length:   94.1 Ratio:  67.71%) 
  Other      : 226042   (Average Length:    4.2 Ratio:  11.87%) 
  Distributed: 75348    (Ratio:   4.49% Average LBD: 2.98) 
  Integrated : 226042   (Ratio: 300.00% Unit: 1429 Average Jumps: 273.67)
Backjumps    : 388791   (Average:  7.35 Max: 24652 Sum: 2856902)
  Executed   : 388466   (Average:  7.35 Max: 24652 Sum: 2856379 Ratio:  99.98%)
  Bounded    : 325      (Average:  1.61 Max:   8 Sum:    523 Ratio:   0.02%)

Rules        : 207490  
  Choice     : 25      
  Minimize   : 2       
Atoms        : 3862    
Bodies       : 179432  
  Count      : 24      
Equivalences : 5707     (Atom=Atom: 1786 Body=Body: 1073 Other: 2848)
Tight        : No       (SCCs: 7 Non-Hcfs: 0 Nodes: 168740 Gammas: 0)
Variables    : 170989   (Eliminated:    0 Frozen: 169329)
Constraints  : 1024830  (Binary:  82.6% Ternary:   1.0% Other:  16.5%)


Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(4)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(5)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(1)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(2)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(2)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(1)) >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(2)) >> atom(hasBodyType(1)) ; 
  atom(hasTransmission(2)) >> atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) 
}.
