asprin_vL version 1.0
Reading from stdin
-:172:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:182:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:197:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:278:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:552:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:729:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:845:34-71: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,for(neg(atom(#X3))),#P4)

-:858:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:930:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:934:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:934:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:940:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1039:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1065:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1185:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1219:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1241:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:89:1-16: info: no atoms over signature occur in program:
  output/3

-:81:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:82:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,(1,1),1,for(atom(hasBodyType(1))),()) preference(1,(1,2),1,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasBodyType(1))),()) preference(1,(1,4),1,for(atom(hasBodyType(1))),()) preference(1,(1,5),1,for(atom(hasBodyType(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,(1,7),1,for(atom(hasBodyType(1))),()) preference(1,(1,8),1,for(atom(hasBodyType(1))),()) preference(1,(1,9),1,for(atom(hasBodyType(1))),()) preference(1,(1,10),1,for(atom(hasBodyType(1))),()) preference(1,(1,11),1,for(atom(hasBodyType(1))),()) preference(1,(1,12),1,for(atom(hasBodyType(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(1))),()) preference(1,(1,2),2,for(atom(hasEngineCap(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(3))),()) preference(1,(1,4),2,for(atom(hasEngineCap(4))),()) preference(1,(1,5),2,for(atom(hasEngineCap(5))),()) preference(1,(1,6),2,for(atom(hasFuelCons(1))),()) preference(1,(1,7),2,for(atom(hasFuelCons(2))),()) preference(1,(1,8),2,for(atom(hasFuelCons(2))),()) preference(1,(1,9),2,for(atom(hasFuelCons(2))),()) preference(1,(1,10),2,for(atom(hasFuelCons(2))),()) preference(1,(1,11),2,for(atom(hasFuelCons(2))),()) preference(1,(1,12),2,for(atom(hasFuelCons(2))),()) preference(1,poset) output(8,unc,6) output(6,unc,10) output(7,unc,2) output(2,unc,9) output(1,unc,5) output(3,unc,4)
Optimization: 6 12
Answer: 2
preference(1,(1,12),1,for(atom(hasEngineCap(2))),()) preference(1,poset) output(6,better,10) output(7,better,2) output(8,worse,6) output(2,worse,9) output(1,worse,5) output(3,eq,4)
Optimization: 4 1
Answer: 3
preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,12),1,for(atom(hasEngineCap(1))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(2,better,9) output(7,worse,2) output(6,eq,10) output(3,eq,4)
Optimization: 3 2
Answer: 4
preference(1,(1,6),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,(1,12),1,for(atom(hasEngineCap(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(3))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(3,better,4) output(2,better,9) output(7,worse,2)
Optimization: 1 3
Answer: 5
preference(1,(1,1),1,for(atom(hasTransmission(1))),()) preference(1,(1,2),1,for(atom(hasFuelCons(1))),()) preference(1,(1,3),1,for(atom(hasTransmission(1))),()) preference(1,(1,4),1,for(atom(hasTransmission(1))),()) preference(1,(1,5),1,for(atom(hasFuelCons(1))),()) preference(1,(1,6),1,for(atom(hasEngineCap(1))),()) preference(1,(1,7),1,for(atom(hasTransmission(1))),()) preference(1,(1,8),1,for(atom(hasTransmission(1))),()) preference(1,(1,9),1,for(atom(hasTransmission(1))),()) preference(1,(1,10),1,for(atom(hasTransmission(1))),()) preference(1,(1,11),1,for(atom(hasTransmission(1))),()) preference(1,(1,12),1,for(atom(hasTransmission(1))),()) preference(1,(1,1),2,for(atom(hasEngineCap(2))),()) preference(1,(1,2),2,for(atom(hasEngineCap(2))),()) preference(1,(1,3),2,for(atom(hasEngineCap(2))),()) preference(1,(1,4),2,for(atom(hasEngineCap(2))),()) preference(1,(1,5),2,for(atom(hasEngineCap(3))),()) preference(1,(1,6),2,for(atom(hasFuelCons(1))),()) preference(1,(1,7),2,for(atom(hasEngineCap(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(2))),()) preference(1,(1,9),2,for(atom(hasEngineCap(2))),()) preference(1,(1,10),2,for(atom(hasEngineCap(2))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,(1,12),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(3,better,4) output(2,better,9)
Optimization: 0 12
Answer: 6
preference(1,(1,3),1,for(atom(hasTransmission(1))),()) preference(1,(1,5),1,for(atom(hasEngineCap(2))),()) preference(1,(1,6),1,for(atom(hasEngineCap(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,(1,3),2,for(atom(hasEngineCap(1))),()) preference(1,(1,5),2,for(atom(hasFuelCons(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(2))),()) preference(1,(1,9),2,for(atom(hasEngineCap(4))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(3,better,4) output(2,better,9)
Optimization: 0 6
Answer: 7
preference(1,(1,5),1,for(atom(hasEngineCap(2))),()) preference(1,(1,6),1,for(atom(hasEngineCap(1))),()) preference(1,(1,9),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,(1,5),2,for(atom(hasFuelCons(2))),()) preference(1,(1,6),2,for(atom(hasEngineCap(2))),()) preference(1,(1,9),2,for(atom(hasEngineCap(4))),()) preference(1,(1,10),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(3,better,4) output(2,better,9)
Optimization: 0 5
Progression : 0 [1;5] (Error: 4)
Answer: 8
preference(1,(1,3),1,for(atom(hasFuelCons(2))),()) preference(1,(1,4),1,for(atom(hasFuelCons(1))),()) preference(1,(1,11),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(1))),()) preference(1,(1,3),2,for(atom(hasEngineCap(3))),()) preference(1,(1,4),2,for(atom(hasFuelCons(2))),()) preference(1,(1,11),2,for(atom(hasEngineCap(1))),()) preference(1,(1,12),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(3,better,4) output(2,better,9)
Optimization: 0 4
Answer: 9
preference(1,(1,10),1,for(atom(hasEngineCap(3))),()) preference(1,(1,11),1,for(atom(hasEngineCap(1))),()) preference(1,(1,12),1,for(atom(hasFuelCons(1))),()) preference(1,(1,10),2,for(atom(hasEngineCap(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,(1,12),2,for(atom(hasEngineCap(3))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(3,better,4) output(2,better,9)
Optimization: 0 3
OPTIMUM FOUND

Models       : 9
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 23.023s (Solving: 20.17s 1st Model: 0.73s Unsat: 16.62s)
CPU Time     : 78.464s
Threads      : 4        (Winner: 3)

Choices      : 97437    (Domain: 468)
Conflicts    : 7956     (Analyzed: 7954)
Restarts     : 26       (Average: 305.92 Last: 755)
Model-Level  : 187.9   
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 74505    (Deleted: 25911)
  Binary     : 32       (Ratio:   0.04%)
  Ternary    : 1711     (Ratio:   2.30%)
  Conflict   : 7954     (Average Length:  356.8 Ratio:  10.68%) 
  Loop       : 61826    (Average Length:  144.5 Ratio:  82.98%) 
  Other      : 4725     (Average Length:   23.0 Ratio:   6.34%) 
  Distributed: 1580     (Ratio:   2.26% Average LBD: 3.20) 
  Integrated : 4733     (Ratio: 299.56% Unit: 34 Average Jumps: 319.82)
Backjumps    : 7954     (Average:  9.96 Max: 4174 Sum:  79193)
  Executed   : 7952     (Average:  9.96 Max: 4174 Sum:  79189 Ratio:  99.99%)
  Bounded    : 2        (Average:  2.00 Max:   2 Sum:      4 Ratio:   0.01%)

Rules        : 207450  
  Choice     : 25      
  Minimize   : 2       
Atoms        : 3834    
Bodies       : 179400  
  Count      : 24      
Equivalences : 5633     (Atom=Atom: 1774 Body=Body: 1058 Other: 2801)
Tight        : No       (SCCs: 7 Non-Hcfs: 0 Nodes: 168740 Gammas: 0)
Variables    : 170975   (Eliminated:    0 Frozen: 169317)
Constraints  : 1024776  (Binary:  82.6% Ternary:   1.0% Other:  16.5%)


Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(3)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(4)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(5)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(1)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasBodyType(1)) >> atom(hasFuelCons(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(1)) >> atom(hasFuelCons(1)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasTransmission(1)) >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasTransmission(1)) >> atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasFuelCons(2)) >> atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(3)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasFuelCons(2)) >> atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(3)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasFuelCons(2)) >> atom(hasEngineCap(3)) ; 
  atom(hasFuelCons(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(3)) >> atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(3)) 
}.
