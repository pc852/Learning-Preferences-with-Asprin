asprin_vL version 1.0
Reading from stdin
-:1238:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1248:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1263:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1344:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1618:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1795:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1924:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1996:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2000:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2000:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2006:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2105:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2131:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2251:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2285:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2307:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1155:1-16: info: no atoms over signature occur in program:
  output/3

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1148:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1149:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(25,eq,64) output(65,eq,52) output(52,eq,69) output(69,eq,67) output(67,eq,72) output(72,eq,42) output(10,eq,14) output(14,eq,13) output(13,eq,51) output(18,eq,65) output(65,eq,25) output(25,eq,42) output(65,eq,42) output(18,eq,25) output(14,eq,51) output(10,eq,13) output(67,eq,42) output(69,eq,72) output(52,eq,67) output(65,eq,69) output(18,eq,52) output(65,eq,64) output(18,eq,64) output(18,eq,69) output(65,eq,67) output(18,eq,67) output(52,eq,72) output(65,eq,72) output(69,eq,42) output(52,eq,42) output(10,eq,51) output(18,eq,42) output(18,eq,72)
Optimization: 33 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(3))),()) preference(1,poset) output(10,better,14) output(65,better,52) output(65,better,25) output(65,better,69) output(65,better,64) output(65,better,67) output(10,better,13) output(65,better,42) output(65,better,72) output(10,better,51) output(18,worse,65) output(25,eq,64) output(52,eq,69) output(69,eq,67) output(67,eq,72) output(72,eq,42) output(14,eq,13) output(13,eq,51) output(25,eq,42) output(18,eq,25) output(14,eq,51) output(67,eq,42) output(69,eq,72) output(52,eq,67) output(18,eq,52) output(18,eq,64) output(18,eq,69) output(18,eq,67) output(52,eq,72) output(69,eq,42) output(52,eq,42) output(18,eq,42) output(18,eq,72)
Optimization: 23 1
Answer: 3
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(10,better,14) output(69,better,72) output(52,better,72) output(65,better,52) output(65,better,25) output(14,better,51) output(65,better,69) output(65,better,64) output(65,better,67) output(13,better,51) output(10,better,13) output(65,better,42) output(65,better,72) output(10,better,51) output(69,better,67) output(52,better,67) output(18,worse,52) output(18,worse,64) output(18,worse,69) output(25,worse,42) output(67,worse,42) output(25,worse,64) output(18,worse,42) output(72,worse,42) output(18,worse,65) output(52,eq,69) output(67,eq,72) output(14,eq,13) output(18,eq,25) output(18,eq,67) output(69,eq,42) output(52,eq,42) output(18,eq,72)
Optimization: 17 1
Answer: 4
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasCost(1))),()) preference(1,poset) output(67,better,72) output(10,better,14) output(25,better,42) output(67,better,42) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(65,better,25) output(65,better,69) output(65,better,64) output(65,better,67) output(10,better,13) output(65,better,42) output(65,better,72) output(10,better,51) output(14,worse,13) output(18,worse,25) output(14,worse,51) output(18,worse,52) output(18,worse,64) output(18,worse,69) output(18,worse,67) output(18,worse,65) output(25,eq,64) output(52,eq,69) output(69,eq,67) output(72,eq,42) output(13,eq,51) output(52,eq,67) output(18,eq,42) output(18,eq,72)
Optimization: 16 1
Answer: 5
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrepTime(3))),()) preference(1,poset) output(10,better,14) output(65,better,52) output(14,better,13) output(65,better,25) output(18,better,25) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(10,better,13) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(10,better,51) output(13,worse,51) output(18,worse,65) output(25,eq,64) output(52,eq,69) output(69,eq,67) output(67,eq,72) output(72,eq,42) output(25,eq,42) output(14,eq,51) output(67,eq,42) output(69,eq,72) output(52,eq,67) output(52,eq,72) output(69,eq,42) output(52,eq,42)
Optimization: 15 1
Answer: 6
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(6))),()) preference(1,poset) output(10,better,14) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(65,better,25) output(18,better,25) output(65,better,69) output(65,better,64) output(18,better,64) output(65,better,67) output(18,better,67) output(13,better,51) output(10,better,13) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(10,better,51) output(69,better,67) output(52,better,67) output(14,worse,13) output(18,worse,65) output(25,eq,64) output(52,eq,69) output(67,eq,72) output(72,eq,42) output(25,eq,42) output(14,eq,51) output(67,eq,42) output(18,eq,52) output(18,eq,69)
Optimization: 11 1
Answer: 7
preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasPrep(6))),()) preference(1,poset) output(10,better,14) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(65,better,25) output(18,better,25) output(14,better,51) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(13,better,51) output(10,better,13) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(10,better,51) output(69,better,67) output(52,better,67) output(14,worse,13) output(67,worse,72) output(25,worse,42) output(67,worse,42) output(18,worse,65) output(25,eq,64) output(52,eq,69) output(72,eq,42)
Optimization: 8 2
Answer: 8
preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,8),2,for(atom(hasPrepTime(3))),()) preference(1,poset) output(10,better,14) output(25,better,42) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(65,better,25) output(18,better,25) output(14,better,51) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(13,better,51) output(25,better,64) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(10,better,51) output(69,better,67) output(52,better,67) output(14,worse,13) output(18,worse,65) output(52,eq,69) output(67,eq,72) output(72,eq,42) output(67,eq,42) output(10,unc,13)
Optimization: 7 3
Answer: 9
preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,12),1,for(atom(hasPrep(0))),()) preference(1,(1,13),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,7),2,for(atom(hasPrep(1))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,(1,12),2,for(atom(hasPrep(7))),()) preference(1,(1,13),2,for(atom(hasCost(1))),()) preference(1,poset) output(67,better,72) output(10,better,14) output(25,better,42) output(67,better,42) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(14,better,13) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(10,better,13) output(25,better,64) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(18,better,65) output(10,better,51) output(69,better,67) output(52,better,67) output(14,worse,51) output(13,worse,51) output(72,worse,42) output(52,eq,69) output(65,unc,25) output(18,unc,25)
Optimization: 6 7
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,9),1,for(atom(hasCost(2))),()) preference(1,(1,11),1,for(atom(hasCost(1))),()) preference(1,(1,12),1,for(atom(hasPrep(0))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,7),2,for(atom(hasPrep(1))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,(1,9),2,for(atom(hasPrep(2))),()) preference(1,(1,11),2,for(atom(hasPrep(4))),()) preference(1,(1,12),2,for(atom(hasPrep(7))),()) preference(1,(1,13),2,for(atom(hasPrep(7))),()) preference(1,poset) output(67,better,72) output(10,better,14) output(25,better,42) output(67,better,42) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(14,better,13) output(65,better,25) output(18,better,25) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(10,better,13) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(18,better,65) output(10,better,51) output(69,better,67) output(52,better,67) output(14,worse,51) output(13,worse,51) output(72,worse,42) output(52,worse,69) output(25,unc,64)
Optimization: 5 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,9),1,for(atom(hasCost(2))),()) preference(1,(1,11),1,for(atom(hasCost(1))),()) preference(1,(1,12),1,for(atom(hasPrep(0))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,7),2,for(atom(hasPrep(1))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,(1,9),2,for(atom(hasPrep(2))),()) preference(1,(1,11),2,for(atom(hasPrep(4))),()) preference(1,(1,12),2,for(atom(hasPrep(7))),()) preference(1,(1,13),2,for(atom(hasPrep(7))),()) preference(1,poset) output(67,better,72) output(10,better,14) output(25,better,42) output(67,better,42) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(14,better,13) output(65,better,25) output(18,better,25) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(10,better,13) output(25,better,64) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(18,better,65) output(10,better,51) output(69,better,67) output(52,better,67) output(14,worse,51) output(13,worse,51) output(72,worse,42) output(52,worse,69)
Optimization: 4 10
Answer: 12
preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,7),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,11),1,for(atom(hasPrepTime(3))),()) preference(1,(1,14),1,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,7),2,for(atom(hasPrep(5))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,(1,11),2,for(atom(hasPrep(6))),()) preference(1,(1,14),2,for(atom(hasPrep(0))),()) preference(1,poset) output(67,better,72) output(10,better,14) output(25,better,42) output(67,better,42) output(69,better,72) output(52,better,72) output(69,better,42) output(52,better,42) output(65,better,52) output(14,better,13) output(65,better,25) output(18,better,25) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(10,better,13) output(25,better,64) output(65,better,42) output(65,better,72) output(18,better,42) output(18,better,72) output(18,better,65) output(10,better,51) output(69,better,67) output(52,better,67) output(72,better,42) output(14,worse,51) output(13,worse,51) output(52,eq,69)
Optimization: 3 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.042 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 3 6
Calls        : 1
Time         : 297.918s (Solving: 292.73s 1st Model: 0.84s Unsat: 0.00s)
CPU Time     : 1174.361s
Threads      : 4        (Winner: 4)

Choices      : 3028675  (Domain: 2959)
Conflicts    : 139817   (Analyzed: 139817)
Restarts     : 163      (Average: 857.77 Last: 7518)
Model-Level  : 944.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 7208672  (Deleted: 7105420)
  Binary     : 2375     (Ratio:   0.03%)
  Ternary    : 32866    (Ratio:   0.46%)
  Conflict   : 139817   (Average Length:  807.6 Ratio:   1.94%) 
  Loop       : 7018279  (Average Length:  233.4 Ratio:  97.36%) 
  Other      : 50576    (Average Length:    3.9 Ratio:   0.70%) 
  Distributed: 16884    (Ratio:   0.24% Average LBD: 2.80) 
  Integrated : 50652    (Ratio: 300.00% Unit: 276 Average Jumps: 727.29)
Backjumps    : 139817   (Average: 18.95 Max: 55439 Sum: 2649535)
  Executed   : 139781   (Average: 18.95 Max: 55439 Sum: 2649368 Ratio:  99.99%)
  Bounded    : 36       (Average:  4.64 Max:  34 Sum:    167 Ratio:   0.01%)

Rules        : 977698  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 22034   
Bodies       : 724862  
  Count      : 56      
Equivalences : 24371    (Atom=Atom: 4211 Body=Body: 5861 Other: 14299)
Tight        : No       (SCCs: 34 Non-Hcfs: 0 Nodes: 676200 Gammas: 0)
Variables    : 685030   (Eliminated:    0 Frozen: 678455)
Constraints  : 4098441  (Binary:  82.8% Ternary:   2.5% Other:  14.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(3)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(2)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(7)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(4)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(2)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) ; 
  atom(hasCost(2)) >> atom(hasPrep(2)) ; 
  atom(hasCost(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(4)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasCost(1)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(2)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) ; 
  atom(hasCost(2)) >> atom(hasPrep(2)) ; 
  atom(hasCost(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(5)) ; 
  atom(hasCost(1)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(0)) 
}.
