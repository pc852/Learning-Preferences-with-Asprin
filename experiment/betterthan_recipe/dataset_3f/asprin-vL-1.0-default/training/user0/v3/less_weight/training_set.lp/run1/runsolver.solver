asprin_vL version 1.0
Reading from stdin
-:1233:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1243:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1258:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1339:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1600:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1613:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1790:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1919:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1991:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1995:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2100:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2126:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2246:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2280:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1150:1-16: info: no atoms over signature occur in program:
  output/3

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(47,eq,64) output(64,eq,10) output(49,eq,23) output(23,eq,18) output(24,eq,50) output(50,eq,29) output(25,eq,64) output(64,eq,24) output(24,eq,23) output(65,eq,52) output(52,eq,69) output(69,eq,67) output(67,eq,72) output(69,eq,72) output(52,eq,67) output(65,eq,69) output(64,eq,23) output(47,eq,24) output(25,eq,24) output(24,eq,29) output(64,eq,50) output(49,eq,18) output(24,eq,18) output(47,eq,10) output(25,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(47,eq,29) output(25,eq,29) output(47,eq,23) output(25,eq,23) output(65,eq,67) output(52,eq,72) output(65,eq,72)
Optimization: 38 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(25,better,64) output(25,better,10) output(25,better,29) output(50,better,29) output(24,better,29) output(47,better,64) output(47,better,10) output(47,better,29) output(65,better,52) output(65,better,69) output(52,worse,67) output(52,worse,72) output(64,worse,24) output(64,worse,23) output(64,worse,50) output(64,worse,18) output(69,worse,67) output(69,worse,72) output(64,eq,10) output(49,eq,23) output(23,eq,18) output(24,eq,50) output(24,eq,23) output(52,eq,69) output(67,eq,72) output(47,eq,24) output(25,eq,24) output(49,eq,18) output(24,eq,18) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(47,eq,23) output(25,eq,23) output(65,eq,67) output(65,eq,72)
Optimization: 28 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrep(3))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(25,better,29) output(50,better,29) output(64,better,29) output(23,better,18) output(24,better,50) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,29) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(25,worse,24) output(25,worse,18) output(25,worse,23) output(52,worse,67) output(52,worse,72) output(64,worse,24) output(64,worse,23) output(64,worse,18) output(69,worse,67) output(69,worse,72) output(47,worse,24) output(47,worse,18) output(47,worse,23) output(47,eq,64) output(64,eq,10) output(49,eq,23) output(25,eq,64) output(52,eq,69) output(67,eq,72) output(64,eq,50) output(47,eq,10) output(25,eq,10) output(47,eq,50) output(25,eq,50)
Optimization: 24 7
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(4))),7) preference(1,less(weight)) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,50) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,50) output(47,better,24) output(47,better,10) output(47,better,50) output(65,better,69) output(65,better,67) output(65,better,72) output(25,worse,64) output(25,worse,24) output(25,worse,18) output(25,worse,29) output(25,worse,23) output(50,worse,29) output(64,worse,23) output(24,worse,23) output(24,worse,29) output(24,worse,18) output(47,worse,23) output(49,worse,23) output(49,worse,18) output(47,eq,64) output(65,eq,52) output(67,eq,72) output(25,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,50) output(64,eq,29) output(47,eq,29)
Optimization: 22 9
Progression : [ 2;22] (Error: 10)
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,29) output(50,better,29) output(52,better,67) output(52,better,72) output(64,better,24) output(69,better,67) output(69,better,72) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,29) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(64,worse,23) output(64,worse,50) output(64,worse,18) output(24,worse,50) output(24,worse,23) output(24,worse,29) output(24,worse,18) output(64,eq,10) output(49,eq,23) output(23,eq,18) output(52,eq,69) output(67,eq,72) output(49,eq,18) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(47,eq,23) output(25,eq,23)
Optimization: 20 2
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(4))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(25,better,24) output(25,better,10) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,29) output(67,better,72) output(24,better,23) output(47,better,24) output(47,better,10) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,69) output(25,worse,18) output(52,worse,67) output(52,worse,72) output(64,worse,18) output(69,worse,67) output(69,worse,72) output(23,worse,18) output(24,worse,50) output(24,worse,18) output(47,worse,18) output(65,worse,52) output(65,worse,67) output(65,worse,72) output(47,eq,64) output(25,eq,64) output(24,eq,29) output(64,eq,50) output(47,eq,50) output(25,eq,50)
Optimization: 19 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(67,better,72) output(69,better,67) output(69,better,72) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,67) output(65,better,72) output(64,worse,50) output(64,worse,18) output(64,worse,29) output(23,worse,18) output(24,worse,50) output(24,worse,23) output(24,worse,29) output(24,worse,18) output(65,worse,52) output(65,worse,69) output(52,eq,69) output(25,eq,50)
Optimization: 12 11
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,18) output(64,better,29) output(23,better,18) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(52,worse,67) output(52,worse,72) output(64,worse,50) output(67,worse,72) output(69,worse,67) output(69,worse,72) output(24,worse,50) output(47,worse,50) output(24,eq,23) output(52,eq,69) output(25,eq,50)
Optimization: 11 11
Progression : [ 3;11] (Error: 2.66667)
Answer: 9
preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),3) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,50) output(64,better,18) output(64,better,29) output(67,better,72) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,50) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(25,worse,64) output(25,worse,24) output(47,eq,64) output(52,eq,69) output(25,eq,50)
Optimization: 5 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,18) output(64,better,29) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(64,worse,50) output(24,worse,50) output(24,eq,23) output(67,eq,72) output(25,eq,50)
Optimization: 5 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,50) output(64,better,18) output(64,better,29) output(67,better,72) output(69,better,72) output(23,better,18) output(24,better,50) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(25,worse,64) output(25,worse,24) output(69,worse,67) output(25,eq,50)
Optimization: 4 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,18) output(64,better,29) output(67,better,72) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(64,worse,50) output(24,worse,50) output(25,eq,50)
Optimization: 3 11
Progression : 3 [ 1;11] (Error: 10)
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(7))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrep(4))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,18) output(64,better,29) output(67,better,72) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(64,worse,50) output(24,worse,50) output(25,eq,50)
Optimization: 3 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),6) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,18) output(64,better,29) output(67,better,72) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(64,worse,50) output(24,worse,50) output(25,eq,50)
Optimization: 3 9
Progression : 3 [2;9] (Error: 3.5)
Answer: 15
preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(25,better,10) output(25,better,18) output(25,better,29) output(25,better,23) output(50,better,29) output(52,better,69) output(52,better,67) output(52,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,50) output(64,better,18) output(64,better,29) output(67,better,72) output(69,better,67) output(69,better,72) output(23,better,18) output(24,better,50) output(24,better,23) output(24,better,29) output(24,better,18) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(25,worse,64) output(25,worse,24) output(25,eq,50)
Optimization: 3 8
Progression : 3 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 3 8
Bounds       : 3 [3;8]
Calls        : 1
Time         : 297.068s (Solving: 295.55s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.046s
Threads      : 4        (Winner: 4)

Choices      : 9563435  (Domain: 656116)
Conflicts    : 6320387  (Analyzed: 6320382)
Restarts     : 5292     (Average: 1194.33 Last: 469894)
Model-Level  : 107.7   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 6359333  (Deleted: 6090226)
  Binary     : 306      (Ratio:   0.00%)
  Ternary    : 4161     (Ratio:   0.07%)
  Conflict   : 6320382  (Average Length:  238.7 Ratio:  99.39%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 38951    (Average Length:   33.0 Ratio:   0.61%) 
  Distributed: 13004    (Ratio:   0.21% Average LBD: 3.64) 
  Integrated : 39012    (Ratio: 300.00% Unit: 137 Average Jumps: 20.20)
Backjumps    : 6320382  (Average:  1.41 Max: 522 Sum: 8901092)
  Executed   : 6320374  (Average:  1.41 Max: 522 Sum: 8900985 Ratio: 100.00%)
  Bounded    : 8        (Average: 13.38 Max:  26 Sum:    107 Ratio:   0.00%)

Rules        : 102835  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9328    
Bodies       : 5656    
  Sum        : 73      
  Count      : 14      
Equivalences : 6380     (Atom=Atom: 396 Body=Body: 172 Other: 5812)
Tight        : Yes
Variables    : 4796     (Eliminated:    0 Frozen: 3326)
Constraints  : 101470   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(6)) 
}.
