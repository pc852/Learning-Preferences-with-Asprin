asprin_vL version 1.0
Reading from stdin
-:1234:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1244:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1259:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1340:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1601:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1614:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1791:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1920:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1992:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1996:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1996:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2002:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2101:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2127:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2247:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2281:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2303:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1151:1-16: info: no atoms over signature occur in program:
  output/3

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(20,eq,60) output(60,eq,75) output(75,eq,32) output(38,eq,5) output(26,eq,55) output(55,eq,48) output(73,eq,57) output(57,eq,10) output(10,eq,75) output(75,eq,62) output(62,eq,76) output(25,eq,26) output(26,eq,38) output(25,eq,38) output(75,eq,76) output(60,eq,62) output(10,eq,62) output(57,eq,75) output(73,eq,10) output(26,eq,48) output(25,eq,55) output(26,eq,5) output(60,eq,32) output(10,eq,32) output(20,eq,75) output(57,eq,32) output(73,eq,32) output(20,eq,32) output(25,eq,5) output(25,eq,48) output(73,eq,75) output(57,eq,62) output(73,eq,62) output(20,eq,62) output(60,eq,76) output(10,eq,76) output(57,eq,76) output(20,eq,76) output(73,eq,76)
Optimization: 39 0
Progression : [ 2;39] (Error: 18.5)
Answer: 2
preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(57,worse,10) output(73,worse,10) output(20,eq,60) output(60,eq,75) output(75,eq,32) output(38,eq,5) output(26,eq,55) output(55,eq,48) output(73,eq,57) output(75,eq,62) output(62,eq,76) output(25,eq,26) output(26,eq,38) output(25,eq,38) output(75,eq,76) output(60,eq,62) output(57,eq,75) output(26,eq,48) output(25,eq,55) output(26,eq,5) output(60,eq,32) output(20,eq,75) output(57,eq,32) output(73,eq,32) output(20,eq,32) output(25,eq,5) output(25,eq,48) output(73,eq,75) output(57,eq,62) output(73,eq,62) output(20,eq,62) output(60,eq,76) output(57,eq,76) output(20,eq,76) output(73,eq,76)
Optimization: 35 2
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(10,better,75) output(10,better,32) output(25,better,55) output(25,better,48) output(26,better,55) output(26,better,48) output(55,better,48) output(60,better,75) output(60,better,32) output(20,better,75) output(20,better,32) output(73,better,57) output(10,worse,62) output(10,worse,76) output(57,worse,10) output(57,worse,75) output(57,worse,32) output(57,worse,62) output(57,worse,76) output(20,worse,60) output(20,worse,62) output(20,worse,76) output(73,worse,10) output(73,worse,32) output(73,worse,62) output(73,worse,76) output(75,worse,32) output(75,worse,62) output(75,worse,76) output(38,eq,5) output(62,eq,76) output(25,eq,26) output(26,eq,38) output(25,eq,38) output(60,eq,62) output(26,eq,5) output(25,eq,5) output(73,eq,75) output(60,eq,76)
Optimization: 27 12
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrep(3))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(10,better,75) output(10,better,32) output(25,better,48) output(26,better,55) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,32) output(60,better,75) output(60,better,32) output(20,better,75) output(20,better,32) output(75,better,32) output(10,worse,62) output(10,worse,76) output(25,worse,26) output(25,worse,38) output(25,worse,55) output(25,worse,5) output(57,worse,10) output(57,worse,75) output(57,worse,62) output(57,worse,76) output(60,worse,62) output(60,worse,76) output(20,worse,60) output(20,worse,62) output(20,worse,76) output(73,worse,57) output(73,worse,10) output(73,worse,32) output(73,worse,75) output(73,worse,62) output(73,worse,76) output(75,worse,62) output(75,worse,76) output(38,eq,5) output(62,eq,76)
Optimization: 25 10
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasPrep(4))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,48) output(55,better,48) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,32) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(26,worse,55) output(26,worse,38) output(26,worse,48) output(26,worse,5) output(57,worse,10) output(20,worse,60) output(73,worse,57) output(73,worse,10) output(38,eq,5) output(62,eq,76) output(25,eq,38) output(25,eq,55) output(20,eq,75) output(25,eq,5) output(73,eq,75)
Optimization: 15 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,48) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(25,worse,55) output(26,worse,55) output(26,worse,38) output(26,worse,5) output(20,worse,60) output(38,eq,5) output(62,eq,76) output(25,eq,38) output(26,eq,48) output(20,eq,75) output(25,eq,5)
Optimization: 11 14
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,48) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,10) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,62) output(75,better,76) output(10,worse,32) output(26,worse,38) output(26,worse,5) output(73,worse,57) output(75,worse,32) output(38,eq,5) output(26,eq,55) output(62,eq,76) output(60,eq,32) output(73,eq,32)
Optimization: 10 9
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,48) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,62) output(75,better,76) output(10,worse,32) output(26,worse,38) output(26,worse,5) output(75,worse,32) output(38,eq,5) output(26,eq,55) output(62,eq,76) output(60,eq,32)
Optimization: 8 9
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,48) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(26,worse,38) output(26,worse,5) output(73,worse,57) output(38,eq,5) output(26,eq,55) output(10,eq,75) output(62,eq,76)
Optimization: 7 11
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,5) output(25,better,48) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(26,worse,55) output(62,worse,76) output(73,worse,57) output(38,eq,5) output(73,eq,10) output(25,eq,55)
Optimization: 6 12
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,55) output(26,better,48) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(26,worse,38) output(26,worse,5) output(62,worse,76) output(20,worse,60) output(38,eq,5)
Optimization: 5 10
Answer: 12
preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,55) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(62,worse,76) output(20,worse,60) output(38,eq,5) output(75,eq,76)
Optimization: 4 10
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasCost(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,55) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(57,worse,10) output(38,eq,5) output(62,eq,76)
Optimization: 3 12
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrep(4))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,55) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(62,worse,76) output(38,eq,5)
Optimization: 2 12
Progression : 2 [ 1;12] (Error: 11)
Progression : 2 [ 2;12] (Error: 5)
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,55) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(62,worse,76) output(38,eq,5)
Optimization: 2 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(10,better,75) output(10,better,62) output(10,better,32) output(10,better,76) output(25,better,26) output(25,better,38) output(25,better,55) output(25,better,5) output(25,better,48) output(26,better,55) output(26,better,38) output(26,better,48) output(26,better,5) output(55,better,48) output(57,better,10) output(57,better,75) output(57,better,32) output(57,better,62) output(57,better,76) output(60,better,75) output(60,better,62) output(60,better,32) output(60,better,76) output(20,better,60) output(20,better,75) output(20,better,32) output(20,better,62) output(20,better,76) output(73,better,57) output(73,better,10) output(73,better,32) output(73,better,75) output(73,better,62) output(73,better,76) output(75,better,32) output(75,better,62) output(75,better,76) output(62,worse,76) output(38,eq,5)
Optimization: 2 10
Progression : 2 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 2 10
Bounds       : 2 [3;10]
Calls        : 1
Time         : 297.066s (Solving: 295.41s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.976s
Threads      : 4        (Winner: 4)

Choices      : 7266153  (Domain: 683255)
Conflicts    : 6144265  (Analyzed: 6144261)
Restarts     : 4646     (Average: 1322.48 Last: 563263)
Model-Level  : 39.0    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6279650  (Deleted: 6035288)
  Binary     : 474      (Ratio:   0.01%)
  Ternary    : 6462     (Ratio:   0.10%)
  Conflict   : 6144261  (Average Length:  191.8 Ratio:  97.84%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 135389   (Average Length:   40.4 Ratio:   2.16%) 
  Distributed: 45154    (Ratio:   0.73% Average LBD: 3.73) 
  Integrated : 135462   (Ratio: 300.00% Unit: 247 Average Jumps: 6.26)
Backjumps    : 6144261  (Average:  1.17 Max: 213 Sum: 7169299)
  Executed   : 6144255  (Average:  1.17 Max: 213 Sum: 7169182 Ratio: 100.00%)
  Bounded    : 6        (Average: 19.50 Max:  35 Sum:    117 Ratio:   0.00%)

Rules        : 105074  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9434    
Bodies       : 5665    
  Sum        : 73      
  Count      : 14      
Equivalences : 6419     (Atom=Atom: 411 Body=Body: 181 Other: 5827)
Tight        : Yes
Variables    : 4805     (Eliminated:    0 Frozen: 3335)
Constraints  : 103621   (Binary:  97.0% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) 
}.
