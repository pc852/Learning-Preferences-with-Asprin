asprin_vL version 1.0
Reading from stdin
-:1232:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1242:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1257:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1338:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1599:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1612:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1789:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1918:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1990:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1994:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1994:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2000:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2099:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2125:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2245:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2279:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2301:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1149:1-16: info: no atoms over signature occur in program:
  output/3

-:1141:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(18,eq,7) output(42,eq,90) output(90,eq,51) output(51,eq,78) output(31,eq,79) output(72,eq,23) output(4,eq,18) output(18,eq,76) output(76,eq,42) output(42,eq,41) output(32,eq,37) output(37,eq,72) output(72,eq,92) output(37,eq,92) output(32,eq,72) output(76,eq,41) output(18,eq,42) output(4,eq,76) output(37,eq,23) output(90,eq,78) output(42,eq,51) output(76,eq,90) output(4,eq,7) output(18,eq,90) output(4,eq,90) output(76,eq,51) output(18,eq,51) output(42,eq,78) output(76,eq,78) output(32,eq,23) output(4,eq,42) output(18,eq,41) output(4,eq,41) output(32,eq,92) output(18,eq,78) output(4,eq,78) output(4,eq,51)
Optimization: 37 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(31,better,79) output(37,better,72) output(37,better,92) output(37,better,23) output(51,better,78) output(76,better,42) output(76,better,41) output(76,better,90) output(76,better,78) output(90,better,78) output(18,better,7) output(18,better,41) output(32,better,92) output(42,better,41) output(42,better,78) output(72,better,92) output(4,worse,18) output(4,worse,76) output(4,worse,7) output(4,worse,90) output(4,worse,42) output(4,worse,41) output(4,worse,78) output(4,worse,51) output(76,worse,51) output(90,worse,51) output(18,worse,76) output(18,worse,42) output(18,worse,90) output(18,worse,51) output(32,worse,37) output(32,worse,23) output(42,worse,51) output(72,worse,23) output(42,eq,90) output(32,eq,72) output(18,eq,78)
Optimization: 21 3
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,72) output(37,better,23) output(76,better,41) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,23) output(42,better,41) output(72,better,23) output(4,worse,90) output(37,worse,92) output(76,worse,90) output(76,worse,51) output(76,worse,78) output(18,worse,90) output(32,worse,37) output(32,worse,92) output(42,worse,90) output(42,worse,51) output(42,worse,78) output(72,worse,92) output(51,eq,78) output(76,eq,42) output(32,eq,72)
Optimization: 15 12
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,90) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,72) output(37,better,23) output(76,better,41) output(76,better,51) output(76,better,78) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,90) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,23) output(42,better,41) output(42,better,51) output(42,better,78) output(72,better,23) output(37,worse,92) output(51,worse,78) output(76,worse,90) output(32,worse,37) output(32,worse,92) output(42,worse,90) output(72,worse,92) output(76,eq,42) output(32,eq,72)
Optimization: 9 12
Progression : [2;9] (Error: 3.5)
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasPrep(4))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,90) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,23) output(51,better,78) output(76,better,42) output(76,better,41) output(76,better,90) output(76,better,51) output(76,better,78) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,90) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,37) output(32,better,23) output(42,better,90) output(42,better,41) output(42,better,51) output(42,better,78) output(72,better,23) output(37,worse,72) output(37,worse,92) output(32,worse,92) output(72,worse,92) output(32,eq,72)
Optimization: 5 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,90) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,72) output(37,better,92) output(37,better,23) output(51,better,78) output(76,better,42) output(76,better,41) output(76,better,90) output(76,better,51) output(76,better,78) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,90) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,23) output(42,better,90) output(42,better,41) output(42,better,51) output(42,better,78) output(72,better,23) output(32,worse,37) output(32,worse,92) output(72,worse,92) output(32,eq,72)
Optimization: 4 11
Progression : [3;4] (Error: 0.333333)
Progression : [4;4] (Error: 0)
Progression : 4 [ 1;11] (Error: 10)
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasCost(2))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,90) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,72) output(37,better,92) output(37,better,23) output(51,better,78) output(76,better,42) output(76,better,41) output(76,better,90) output(76,better,51) output(76,better,78) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,90) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,23) output(42,better,90) output(42,better,41) output(42,better,51) output(42,better,78) output(72,better,23) output(32,worse,37) output(32,worse,92) output(72,worse,92) output(32,eq,72)
Optimization: 4 10
Answer: 8
preference(1,(1,3),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),3) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,90) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,72) output(37,better,92) output(37,better,23) output(51,better,78) output(76,better,42) output(76,better,41) output(76,better,90) output(76,better,51) output(76,better,78) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,90) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,23) output(42,better,90) output(42,better,41) output(42,better,51) output(42,better,78) output(72,better,23) output(32,worse,37) output(32,worse,92) output(72,worse,92) output(32,eq,72)
Optimization: 4 7
Progression : 4 [2;7] (Error: 2.5)
Progression : 4 [3;7] (Error: 1.33333)
Answer: 9
preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,7) output(4,better,90) output(4,better,42) output(4,better,41) output(4,better,78) output(4,better,51) output(31,better,79) output(37,better,72) output(37,better,92) output(37,better,23) output(51,better,78) output(76,better,42) output(76,better,41) output(76,better,90) output(76,better,51) output(76,better,78) output(90,better,51) output(90,better,78) output(18,better,7) output(18,better,76) output(18,better,42) output(18,better,90) output(18,better,51) output(18,better,41) output(18,better,78) output(32,better,23) output(42,better,90) output(42,better,41) output(42,better,51) output(42,better,78) output(72,better,23) output(32,worse,37) output(32,worse,92) output(72,worse,92) output(32,eq,72)
Optimization: 4 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.053 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 4 6
Bounds       : 4 [3;6]
Calls        : 1
Time         : 296.689s (Solving: 295.04s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.627s
Threads      : 4        (Winner: 4)

Choices      : 8033067  (Domain: 847471)
Conflicts    : 7265492  (Analyzed: 7265486)
Restarts     : 7233     (Average: 1004.49 Last: 488218)
Model-Level  : 44.6    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 7469830  (Deleted: 7130923)
  Binary     : 836      (Ratio:   0.01%)
  Ternary    : 7020     (Ratio:   0.09%)
  Conflict   : 7265486  (Average Length:  160.9 Ratio:  97.26%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 204344   (Average Length:   78.4 Ratio:   2.74%) 
  Distributed: 68225    (Ratio:   0.94% Average LBD: 3.75) 
  Integrated : 204675   (Ratio: 300.00% Unit: 220 Average Jumps: 4.40)
Backjumps    : 7265486  (Average:  1.09 Max:  63 Sum: 7950755)
  Executed   : 7265483  (Average:  1.09 Max:  63 Sum: 7950730 Ratio: 100.00%)
  Bounded    : 3        (Average:  8.33 Max:  23 Sum:     25 Ratio:   0.00%)

Rules        : 101492  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9230    
Bodies       : 5643    
  Sum        : 69      
  Count      : 14      
Equivalences : 6335     (Atom=Atom: 391 Body=Body: 173 Other: 5771)
Tight        : Yes
Variables    : 4789     (Eliminated:    0 Frozen: 3319)
Constraints  : 100213   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(4)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) 
}.
