asprin_vL version 1.0
Reading from stdin
-:1239:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1249:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1264:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1345:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1619:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1796:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1925:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1997:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2001:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2007:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2106:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2132:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2252:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2286:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1156:1-16: info: no atoms over signature occur in program:
  output/3

-:1148:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1149:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1150:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(14,eq,51) output(51,eq,100) output(82,eq,73) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(51,eq,16) output(16,eq,17) output(17,eq,15) output(57,eq,20) output(20,eq,82) output(89,eq,5) output(78,eq,82) output(57,eq,82) output(16,eq,15) output(51,eq,17) output(14,eq,16) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(57,eq,88) output(20,eq,73) output(14,eq,100) output(78,eq,73) output(57,eq,73) output(78,eq,50) output(57,eq,50) output(20,eq,72) output(78,eq,72) output(57,eq,72) output(14,eq,17) output(51,eq,15) output(14,eq,15)
Optimization: 34 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(57,better,20) output(16,better,15) output(57,better,88) output(57,better,72) output(14,better,51) output(14,better,17) output(16,better,17) output(57,better,50) output(14,better,15) output(20,worse,82) output(78,worse,82) output(51,worse,100) output(51,worse,16) output(78,worse,73) output(20,worse,73) output(89,worse,5) output(82,eq,73) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(17,eq,15) output(57,eq,82) output(51,eq,17) output(14,eq,16) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(14,eq,100) output(57,eq,73) output(78,eq,50) output(20,eq,72) output(78,eq,72) output(51,eq,15)
Optimization: 25 1
Answer: 3
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasCost(1))),()) preference(1,poset) output(51,better,100) output(82,better,73) output(50,better,72) output(17,better,15) output(57,better,20) output(16,better,15) output(57,better,88) output(57,better,73) output(57,better,72) output(51,better,15) output(14,worse,51) output(88,worse,50) output(20,worse,82) output(78,worse,82) output(14,worse,16) output(20,worse,50) output(78,worse,50) output(14,worse,17) output(78,eq,20) output(20,eq,88) output(51,eq,16) output(16,eq,17) output(89,eq,5) output(57,eq,82) output(51,eq,17) output(88,eq,72) output(78,eq,88) output(20,eq,73) output(14,eq,100) output(78,eq,73) output(57,eq,50) output(20,eq,72) output(78,eq,72) output(14,eq,15)
Optimization: 24 1
Answer: 4
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrepTime(3))),()) preference(1,poset) output(51,better,100) output(20,better,82) output(78,better,82) output(14,better,16) output(20,better,50) output(78,better,50) output(14,better,17) output(51,better,16) output(51,better,17) output(78,better,88) output(78,better,73) output(78,better,72) output(20,better,88) output(20,better,73) output(14,better,100) output(20,better,72) output(17,worse,15) output(57,worse,20) output(16,worse,15) output(14,eq,51) output(82,eq,73) output(78,eq,20) output(88,eq,50) output(50,eq,72) output(16,eq,17) output(89,eq,5) output(57,eq,82) output(88,eq,72) output(57,eq,88) output(57,eq,73) output(57,eq,50) output(57,eq,72) output(51,eq,15) output(14,eq,15)
Optimization: 18 1
Answer: 5
preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(57,better,20) output(57,better,88) output(57,better,72) output(14,better,51) output(88,better,50) output(20,better,82) output(78,better,82) output(20,better,50) output(78,better,50) output(14,better,17) output(78,better,20) output(78,better,88) output(78,better,72) output(16,better,17) output(57,better,50) output(57,better,82) output(89,better,5) output(14,worse,16) output(51,worse,100) output(82,worse,73) output(50,worse,72) output(17,worse,15) output(16,worse,15) output(57,worse,73) output(51,worse,15) output(51,worse,16) output(20,worse,73) output(14,worse,100) output(14,worse,15) output(20,eq,88) output(51,eq,17) output(88,eq,72) output(78,eq,73) output(20,eq,72)
Optimization: 17 1
Answer: 6
preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasPrepTime(3))),()) preference(1,poset) output(57,better,20) output(57,better,88) output(57,better,72) output(20,better,82) output(78,better,82) output(20,better,50) output(78,better,50) output(14,better,17) output(78,better,20) output(51,better,17) output(78,better,88) output(78,better,73) output(78,better,72) output(16,better,17) output(57,better,50) output(20,better,88) output(20,better,72) output(57,better,82) output(89,better,5) output(14,worse,16) output(51,worse,100) output(82,worse,73) output(17,worse,15) output(16,worse,15) output(51,worse,15) output(51,worse,16) output(20,worse,73) output(14,worse,100) output(14,worse,15) output(14,eq,51) output(88,eq,50) output(50,eq,72) output(88,eq,72) output(57,eq,73)
Optimization: 15 1
Answer: 7
preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,poset) output(57,better,88) output(57,better,72) output(14,better,51) output(88,better,50) output(20,better,82) output(78,better,82) output(20,better,50) output(78,better,50) output(14,better,17) output(78,better,20) output(51,better,17) output(78,better,88) output(78,better,73) output(78,better,72) output(16,better,17) output(57,better,50) output(20,better,88) output(20,better,72) output(57,better,82) output(89,better,5) output(82,worse,73) output(50,worse,72) output(17,worse,15) output(16,worse,15) output(57,worse,73) output(51,worse,15) output(14,worse,15) output(88,eq,72) output(51,unc,100) output(51,unc,16) output(57,unc,20) output(14,unc,16) output(20,unc,73) output(14,unc,100)
Optimization: 14 2
Answer: 8
preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasPrep(6))),()) preference(1,poset) output(51,better,100) output(57,better,88) output(57,better,72) output(14,better,51) output(88,better,50) output(20,better,82) output(78,better,82) output(14,better,16) output(20,better,50) output(78,better,50) output(14,better,17) output(78,better,20) output(51,better,16) output(51,better,17) output(78,better,88) output(78,better,73) output(78,better,72) output(16,better,17) output(57,better,50) output(20,better,88) output(20,better,73) output(14,better,100) output(20,better,72) output(57,better,82) output(89,better,5) output(82,worse,73) output(50,worse,72) output(17,worse,15) output(57,worse,20) output(16,worse,15) output(57,worse,73) output(51,worse,15) output(14,worse,15) output(88,eq,72)
Optimization: 9 2
Answer: 9
preference(1,(1,2),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(2))),()) preference(1,(1,7),1,for(atom(hasPrep(3))),()) preference(1,(1,8),1,for(atom(hasPrepTime(2))),()) preference(1,(1,9),1,for(atom(hasCost(2))),()) preference(1,(1,10),1,for(atom(hasPrepTime(2))),()) preference(1,(1,11),1,for(atom(hasPrepTime(2))),()) preference(1,(1,12),1,for(atom(hasPrep(0))),()) preference(1,(1,13),1,for(atom(hasDifficulty(2))),()) preference(1,(1,14),1,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,7),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasPrep(3))),()) preference(1,(1,9),2,for(atom(hasCost(1))),()) preference(1,(1,10),2,for(atom(hasDifficulty(1))),()) preference(1,(1,11),2,for(atom(hasPrep(6))),()) preference(1,(1,12),2,for(atom(hasPrep(5))),()) preference(1,(1,13),2,for(atom(hasCost(2))),()) preference(1,(1,14),2,for(atom(hasCost(1))),()) preference(1,poset) output(51,better,100) output(82,better,73) output(57,better,88) output(57,better,73) output(57,better,72) output(51,better,15) output(88,better,50) output(20,better,82) output(78,better,82) output(14,better,16) output(20,better,50) output(78,better,50) output(14,better,17) output(78,better,20) output(51,better,16) output(51,better,17) output(78,better,88) output(78,better,73) output(78,better,72) output(57,better,50) output(20,better,88) output(20,better,73) output(14,better,100) output(20,better,72) output(57,better,82) output(89,better,5) output(14,worse,51) output(50,worse,72) output(17,worse,15) output(57,worse,20) output(16,worse,15) output(88,worse,72) output(14,worse,15) output(16,unc,17)
Optimization: 8 13
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,7),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasCost(2))),()) preference(1,(1,9),1,for(atom(hasPrepTime(1))),()) preference(1,(1,12),1,for(atom(hasPrep(0))),()) preference(1,(1,13),1,for(atom(hasPrep(6))),()) preference(1,(1,14),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,7),2,for(atom(hasDifficulty(1))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,(1,9),2,for(atom(hasPrep(6))),()) preference(1,(1,12),2,for(atom(hasDifficulty(1))),()) preference(1,(1,13),2,for(atom(hasPrep(1))),()) preference(1,(1,14),2,for(atom(hasPrepTime(1))),()) preference(1,poset) output(51,better,100) output(82,better,73) output(57,better,88) output(57,better,73) output(57,better,72) output(51,better,15) output(88,better,50) output(20,better,82) output(78,better,82) output(14,better,16) output(20,better,50) output(78,better,50) output(14,better,17) output(78,better,20) output(51,better,16) output(51,better,17) output(78,better,88) output(78,better,73) output(78,better,72) output(16,better,17) output(57,better,50) output(20,better,88) output(20,better,73) output(14,better,100) output(20,better,72) output(57,better,82) output(89,better,5) output(14,worse,51) output(50,worse,72) output(17,worse,15) output(57,worse,20) output(16,worse,15) output(88,worse,72) output(14,worse,15)
Optimization: 7 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.028 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 7 11
Calls        : 1
Time         : 298.037s (Solving: 292.33s 1st Model: 0.85s Unsat: 0.00s)
CPU Time     : 1174.288s
Threads      : 4        (Winner: 4)

Choices      : 5826018  (Domain: 3831)
Conflicts    : 145437   (Analyzed: 145437)
Restarts     : 196      (Average: 742.03 Last: 8291)
Model-Level  : 891.5   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 9385487  (Deleted: 9247549)
  Binary     : 2942     (Ratio:   0.03%)
  Ternary    : 39842    (Ratio:   0.42%)
  Conflict   : 145437   (Average Length:  843.2 Ratio:   1.55%) 
  Loop       : 9179442  (Average Length:  141.0 Ratio:  97.80%) 
  Other      : 60608    (Average Length:    3.6 Ratio:   0.65%) 
  Distributed: 20256    (Ratio:   0.22% Average LBD: 2.80) 
  Integrated : 60768    (Ratio: 300.00% Unit: 199 Average Jumps: 1146.32)
Backjumps    : 145437   (Average: 33.94 Max: 266473 Sum: 4936030)
  Executed   : 145404   (Average: 33.94 Max: 266473 Sum: 4935972 Ratio: 100.00%)
  Bounded    : 33       (Average:  1.76 Max:   2 Sum:     58 Ratio:   0.00%)

Rules        : 987261  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 22666   
Bodies       : 728059  
  Count      : 56      
Equivalences : 25175    (Atom=Atom: 4367 Body=Body: 6044 Other: 14764)
Tight        : No       (SCCs: 35 Non-Hcfs: 0 Nodes: 679140 Gammas: 0)
Variables    : 688263   (Eliminated:    0 Frozen: 681559)
Constraints  : 4116612  (Binary:  82.8% Ternary:   2.6% Other:  14.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) ; 
  atom(hasDifficulty(2)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(3)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(3)) ; 
  atom(hasCost(2)) >> atom(hasCost(1)) ; 
  atom(hasPrepTime(2)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(5)) ; 
  atom(hasDifficulty(2)) >> atom(hasCost(2)) ; 
  atom(hasPrep(6)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasDifficulty(1)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(2)) >> atom(hasCost(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrepTime(1)) 
}.
