asprin_vL version 1.0
Reading from stdin
-:1229:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1239:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1254:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1335:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1596:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1609:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1786:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1915:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1987:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1991:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2096:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2122:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2242:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2276:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1146:1-16: info: no atoms over signature occur in program:
  output/3

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(14,eq,51) output(51,eq,100) output(82,eq,73) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(51,eq,16) output(16,eq,17) output(17,eq,15) output(57,eq,20) output(20,eq,82) output(89,eq,5) output(78,eq,82) output(57,eq,82) output(16,eq,15) output(51,eq,17) output(14,eq,16) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(57,eq,88) output(20,eq,73) output(14,eq,100) output(78,eq,73) output(57,eq,73) output(78,eq,50) output(57,eq,50) output(20,eq,72) output(78,eq,72) output(57,eq,72) output(14,eq,17) output(51,eq,15) output(14,eq,15)
Optimization: 34 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrep(4))),8) preference(1,less(weight)) output(51,better,100) output(14,better,100) output(14,eq,51) output(82,eq,73) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(51,eq,16) output(16,eq,17) output(17,eq,15) output(57,eq,20) output(20,eq,82) output(89,eq,5) output(78,eq,82) output(57,eq,82) output(16,eq,15) output(51,eq,17) output(14,eq,16) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(57,eq,88) output(20,eq,73) output(78,eq,73) output(57,eq,73) output(78,eq,50) output(57,eq,50) output(20,eq,72) output(78,eq,72) output(57,eq,72) output(14,eq,17) output(51,eq,15) output(14,eq,15)
Optimization: 32 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(17,better,15) output(51,better,16) output(51,better,15) output(57,better,73) output(82,better,73) output(14,better,16) output(14,better,15) output(20,better,73) output(78,better,73) output(88,better,50) output(16,worse,17) output(16,worse,15) output(50,worse,72) output(51,worse,100) output(51,worse,17) output(57,worse,20) output(57,worse,82) output(57,worse,88) output(57,worse,50) output(57,worse,72) output(89,worse,5) output(14,worse,51) output(14,worse,100) output(14,worse,17) output(20,worse,88) output(20,worse,82) output(20,worse,72) output(78,worse,20) output(78,worse,82) output(78,worse,88) output(78,worse,50) output(78,worse,72) output(88,worse,72) output(20,eq,50)
Optimization: 24 11
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(14,better,51) output(14,better,16) output(14,better,17) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(16,worse,15) output(17,worse,15) output(50,worse,72) output(51,worse,100) output(51,worse,15) output(57,worse,20) output(57,worse,72) output(88,worse,72) output(82,eq,73) output(78,eq,20) output(88,eq,50) output(51,eq,16) output(16,eq,17) output(89,eq,5) output(57,eq,82) output(51,eq,17) output(57,eq,88) output(14,eq,100) output(57,eq,73) output(57,eq,50) output(20,eq,72) output(78,eq,72) output(14,eq,15)
Optimization: 23 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(16,worse,15) output(17,worse,15) output(50,worse,72) output(51,worse,15) output(57,worse,20) output(57,worse,72) output(88,worse,72) output(51,eq,100) output(82,eq,73) output(78,eq,20) output(88,eq,50) output(51,eq,16) output(16,eq,17) output(89,eq,5) output(57,eq,82) output(51,eq,17) output(57,eq,88) output(57,eq,73) output(57,eq,50) output(20,eq,72) output(78,eq,72) output(14,eq,15)
Optimization: 22 14
Progression : [ 1;22] (Error: 21)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasCost(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,72) output(82,better,73) output(14,better,16) output(14,better,100) output(20,better,88) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(16,worse,17) output(16,worse,15) output(57,worse,20) output(57,worse,82) output(57,worse,73) output(57,worse,50) output(89,worse,5) output(14,worse,51) output(14,worse,17) output(20,worse,82) output(88,worse,50) output(88,eq,72) output(14,eq,15)
Optimization: 13 14
Answer: 7
preference(1,(1,2),1,for(atom(hasPrep(0))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,73) output(82,better,73) output(14,better,16) output(14,better,100) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,72) output(16,worse,17) output(16,worse,15) output(57,worse,20) output(57,worse,82) output(57,worse,88) output(57,worse,50) output(57,worse,72) output(89,worse,5) output(14,worse,51) output(14,worse,17) output(88,worse,50)
Optimization: 11 10
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrep(3))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(16,better,17) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,20) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,16) output(14,better,100) output(14,better,17) output(20,better,88) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,72) output(16,worse,15) output(17,worse,15) output(14,worse,51) output(20,worse,82) output(78,worse,82) output(88,worse,50) output(78,eq,20) output(89,eq,5) output(57,eq,82) output(14,eq,15)
Optimization: 10 11
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(1))),2) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,73) output(57,better,72) output(82,better,73) output(89,better,5) output(14,better,100) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,82) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(16,worse,17) output(57,worse,20) output(57,worse,88) output(14,worse,51) output(14,worse,16) output(14,worse,17) output(78,worse,20) output(78,worse,88) output(57,eq,82) output(57,eq,50)
Optimization: 10 10
Answer: 10
preference(1,(1,2),1,for(atom(hasPrep(3))),1) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCost(1))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(4))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,50) output(57,better,72) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,72) output(17,worse,15) output(57,worse,20) output(57,worse,73) output(82,worse,73) output(14,worse,51) output(14,worse,16) output(88,worse,50) output(89,eq,5) output(57,eq,82)
Optimization: 9 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasCost(1))),3) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,20) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,100) output(14,better,15) output(20,better,88) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(14,worse,51) output(14,worse,16) output(14,worse,17) output(20,worse,82) output(88,worse,50) output(88,worse,72) output(89,eq,5) output(57,eq,82) output(20,eq,50)
Optimization: 9 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,100) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,72) output(57,worse,20) output(57,worse,82) output(14,worse,51) output(14,worse,16) output(14,worse,17) output(88,worse,50) output(89,eq,5) output(14,eq,15)
Optimization: 8 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,73) output(57,better,50) output(82,better,73) output(89,better,5) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(88,better,50) output(50,worse,72) output(57,worse,20) output(57,worse,88) output(57,worse,72) output(78,worse,20) output(88,worse,72) output(57,eq,82) output(78,eq,72)
Optimization: 8 11
Answer: 14
preference(1,(1,4),1,for(atom(hasPrep(4))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,20) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,100) output(14,better,15) output(20,better,88) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,72) output(57,worse,82) output(89,worse,5) output(14,worse,51) output(14,worse,16) output(14,worse,17) output(20,worse,82) output(88,worse,50)
Optimization: 7 9
Answer: 15
preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,20) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,100) output(14,better,15) output(20,better,88) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(14,worse,51) output(14,worse,16) output(14,worse,17) output(20,worse,82) output(89,eq,5) output(57,eq,82)
Optimization: 6 9
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasPrep(3))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(57,worse,20) output(14,worse,51) output(14,worse,16) output(89,eq,5) output(57,eq,82)
Optimization: 5 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(17,worse,15) output(57,worse,20) output(57,worse,88) output(89,worse,5) output(57,eq,82)
Optimization: 5 10
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(4))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(57,worse,20) output(57,worse,82) output(57,worse,88) output(89,worse,5)
Optimization: 4 11
Answer: 19
preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(89,better,5) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(16,worse,17) output(57,worse,20) output(57,eq,82)
Optimization: 3 11
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasPrep(4))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,20) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(89,better,5) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(20,worse,82) output(57,eq,82)
Optimization: 2 12
Progression : [2;2] (Error: 0)
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(89,better,5) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(57,worse,20) output(57,eq,82)
Optimization: 2 11
Answer: 22
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrep(4))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(16,better,17) output(16,better,15) output(17,better,15) output(50,better,72) output(51,better,100) output(51,better,16) output(51,better,17) output(51,better,15) output(57,better,88) output(57,better,73) output(57,better,50) output(57,better,72) output(82,better,73) output(89,better,5) output(14,better,51) output(14,better,16) output(14,better,100) output(14,better,17) output(14,better,15) output(20,better,88) output(20,better,82) output(20,better,50) output(20,better,73) output(20,better,72) output(78,better,20) output(78,better,82) output(78,better,88) output(78,better,73) output(78,better,50) output(78,better,72) output(88,better,50) output(88,better,72) output(57,worse,20) output(57,eq,82)
Optimization: 2 10
Progression : 2 [ 1;10] (Error: 9)
Progression : 2 [ 2;10] (Error: 4)
Progression : 2 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.067 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 2 10
Bounds       : 2 [3;10]
Calls        : 1
Time         : 293.725s (Solving: 292.14s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1169.823s
Threads      : 4        (Winner: 4)

Choices      : 7745267  (Domain: 565670)
Conflicts    : 6273277  (Analyzed: 6273270)
Restarts     : 5775     (Average: 1086.28 Last: 465229)
Model-Level  : 39.6    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 6445806  (Deleted: 6181182)
  Binary     : 515      (Ratio:   0.01%)
  Ternary    : 9743     (Ratio:   0.15%)
  Conflict   : 6273270  (Average Length:  193.4 Ratio:  97.32%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 172536   (Average Length:   37.0 Ratio:   2.68%) 
  Distributed: 57677    (Ratio:   0.92% Average LBD: 3.69) 
  Integrated : 173031   (Ratio: 300.00% Unit: 303 Average Jumps: 4.99)
Backjumps    : 6273270  (Average:  1.19 Max: 383 Sum: 7494231)
  Executed   : 6273264  (Average:  1.19 Max: 383 Sum: 7494143 Ratio: 100.00%)
  Bounded    : 6        (Average: 14.67 Max:  24 Sum:     88 Ratio:   0.00%)

Rules        : 98474   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8960    
Bodies       : 5615    
  Sum        : 68      
  Count      : 14      
Equivalences : 3608     (Atom=Atom: 353 Body=Body: 150 Other: 3105)
Tight        : Yes
Variables    : 4809     (Eliminated:    0 Frozen: 3339)
Constraints  : 97504    (Binary:  96.8% Ternary:   1.5% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) 
}.
