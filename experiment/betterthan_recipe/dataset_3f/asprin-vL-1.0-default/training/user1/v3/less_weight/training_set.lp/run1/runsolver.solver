asprin_vL version 1.0
Reading from stdin
-:1226:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1236:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1251:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1332:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1593:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1606:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1783:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1912:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1984:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1988:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1988:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1994:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2093:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2119:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2239:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2273:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2295:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1143:1-16: info: no atoms over signature occur in program:
  output/3

-:1135:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1136:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(64,eq,50) output(50,eq,47) output(47,eq,70) output(49,eq,29) output(29,eq,24) output(24,eq,23) output(23,eq,18) output(64,eq,69) output(69,eq,67) output(42,eq,24) output(65,eq,23) output(23,eq,72) output(25,eq,52) output(24,eq,72) output(65,eq,72) output(64,eq,67) output(24,eq,18) output(65,eq,18) output(29,eq,23) output(42,eq,23) output(49,eq,24) output(50,eq,70) output(64,eq,47) output(64,eq,70) output(49,eq,23) output(29,eq,18) output(42,eq,18) output(49,eq,18) output(29,eq,72) output(42,eq,72) output(49,eq,72)
Optimization: 31 0
Answer: 2
preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(23,better,18) output(23,better,72) output(24,better,72) output(24,better,18) output(29,worse,24) output(29,worse,23) output(42,worse,24) output(42,worse,23) output(49,worse,24) output(49,worse,23) output(65,worse,23) output(64,eq,50) output(50,eq,47) output(47,eq,70) output(49,eq,29) output(24,eq,23) output(64,eq,69) output(69,eq,67) output(25,eq,52) output(65,eq,72) output(64,eq,67) output(65,eq,18) output(50,eq,70) output(64,eq,47) output(64,eq,70) output(29,eq,18) output(42,eq,18) output(49,eq,18) output(29,eq,72) output(42,eq,72) output(49,eq,72)
Optimization: 27 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(25,better,52) output(50,better,47) output(64,better,69) output(64,better,47) output(49,better,29) output(29,worse,24) output(29,worse,23) output(29,worse,18) output(29,worse,72) output(64,worse,50) output(64,worse,67) output(64,worse,70) output(69,worse,67) output(42,worse,24) output(42,worse,23) output(42,worse,18) output(42,worse,72) output(47,worse,70) output(24,eq,23) output(23,eq,18) output(65,eq,23) output(23,eq,72) output(24,eq,72) output(65,eq,72) output(24,eq,18) output(65,eq,18) output(49,eq,24) output(50,eq,70) output(49,eq,23) output(49,eq,18) output(49,eq,72)
Optimization: 26 13
Answer: 4
preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(50,better,47) output(64,better,47) output(42,better,24) output(42,better,23) output(49,better,24) output(49,better,23) output(65,better,23) output(23,worse,18) output(23,worse,72) output(24,worse,72) output(24,worse,18) output(47,worse,70) output(64,eq,50) output(49,eq,29) output(24,eq,23) output(64,eq,69) output(69,eq,67) output(25,eq,52) output(65,eq,72) output(64,eq,67) output(65,eq,18) output(50,eq,70) output(64,eq,70) output(29,eq,18) output(42,eq,18) output(49,eq,18) output(29,eq,72) output(42,eq,72) output(49,eq,72)
Optimization: 22 2
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(4))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(50,better,47) output(64,better,69) output(64,better,47) output(42,better,24) output(42,better,23) output(49,better,24) output(49,better,23) output(65,better,23) output(69,worse,67) output(23,worse,18) output(23,worse,72) output(24,worse,72) output(24,worse,18) output(47,worse,70) output(64,eq,50) output(49,eq,29) output(24,eq,23) output(25,eq,52) output(65,eq,72) output(64,eq,67) output(65,eq,18) output(50,eq,70) output(64,eq,70) output(29,eq,18) output(42,eq,18) output(49,eq,18) output(29,eq,72) output(42,eq,72) output(49,eq,72)
Optimization: 21 3
Answer: 6
preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,72) output(50,better,47) output(64,better,67) output(64,better,47) output(69,better,67) output(42,better,24) output(42,better,23) output(42,better,72) output(49,better,24) output(49,better,23) output(49,better,72) output(65,better,23) output(65,better,72) output(23,worse,18) output(24,worse,18) output(47,worse,70) output(64,eq,50) output(49,eq,29) output(24,eq,23) output(64,eq,69) output(23,eq,72) output(25,eq,52) output(24,eq,72) output(65,eq,18) output(50,eq,70) output(64,eq,70) output(29,eq,18) output(42,eq,18) output(49,eq,18)
Optimization: 16 3
Answer: 7
preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasPrep(4))),8) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(25,worse,52) output(50,eq,47) output(47,eq,70) output(49,eq,29) output(24,eq,23) output(23,eq,18) output(69,eq,67) output(65,eq,23) output(23,eq,72) output(24,eq,72) output(65,eq,72) output(24,eq,18) output(65,eq,18) output(50,eq,70)
Optimization: 14 6
Answer: 8
preference(1,(1,2),1,for(atom(hasPrep(4))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(64,eq,50) output(47,eq,70) output(49,eq,29) output(24,eq,23) output(23,eq,18) output(69,eq,67) output(65,eq,23) output(23,eq,72) output(25,eq,52) output(24,eq,72) output(65,eq,72) output(24,eq,18) output(65,eq,18)
Optimization: 13 5
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),3) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasPrep(4))),3) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,72) output(24,better,18) output(47,better,70) output(49,better,24) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(29,worse,23) output(64,worse,50) output(64,worse,69) output(24,worse,23) output(42,worse,24) output(42,worse,23) output(49,worse,29) output(49,worse,23) output(65,worse,23) output(64,eq,67) output(42,eq,18) output(42,eq,72)
Optimization: 12 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),7) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(23,worse,18) output(23,worse,72) output(24,worse,23) output(24,worse,72) output(24,worse,18) output(47,worse,70) output(65,worse,18) output(64,eq,50) output(29,eq,18)
Optimization: 9 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasPrep(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(23,worse,18) output(23,worse,72) output(24,worse,23) output(24,worse,72) output(24,worse,18) output(47,worse,70) output(65,worse,18) output(25,eq,52)
Optimization: 8 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(24,better,23) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(23,worse,18) output(23,worse,72) output(24,worse,72) output(24,worse,18) output(65,worse,18) output(47,eq,70) output(25,eq,52)
Optimization: 7 11
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,18) output(42,better,24) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(29,worse,23) output(64,worse,50) output(24,worse,23) output(24,worse,72) output(42,worse,23) output(65,worse,23)
Optimization: 6 8
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),3) preference(1,less(weight)) output(25,better,52) output(29,better,18) output(50,better,47) output(50,better,70) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(29,worse,24) output(29,worse,23) output(64,worse,50) output(65,worse,23) output(29,eq,72)
Optimization: 5 10
Answer: 15
preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(64,worse,50) output(65,worse,23) output(65,worse,72) output(65,worse,18)
Optimization: 4 10
Answer: 16
preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(64,worse,50) output(65,worse,23)
Optimization: 2 10
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrep(3))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,eq,23)
Optimization: 1 12
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,2),1,for(atom(hasPrep(3))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 13
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 11
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 10
Answer: 23
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 8
Answer: 25
preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(25,better,52) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(50,better,47) output(50,better,70) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,23) output(24,better,72) output(24,better,18) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18)
Optimization: 0 7
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.030 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 297.877s (Solving: 296.49s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.634s
Threads      : 4        (Winner: 4)

Choices      : 8210787  (Domain: 865657)
Conflicts    : 7679801  (Analyzed: 7679798)
Restarts     : 5928     (Average: 1295.51 Last: 584563)
Model-Level  : 55.0    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 7888586  (Deleted: 7593549)
  Binary     : 601      (Ratio:   0.01%)
  Ternary    : 6557     (Ratio:   0.08%)
  Conflict   : 7679798  (Average Length:  215.3 Ratio:  97.35%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 208788   (Average Length:  170.4 Ratio:   2.65%) 
  Distributed: 69770    (Ratio:   0.91% Average LBD: 3.81) 
  Integrated : 209310   (Ratio: 300.00% Unit: 218 Average Jumps: 4.95)
Backjumps    : 7679798  (Average:  1.06 Max:  78 Sum: 8145952)
  Executed   : 7679797  (Average:  1.06 Max:  78 Sum: 8145929 Ratio: 100.00%)
  Bounded    : 1        (Average: 23.00 Max:  23 Sum:     23 Ratio:   0.00%)

Rules        : 92205   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8650    
Bodies       : 5582    
  Sum        : 62      
  Count      : 14      
Equivalences : 3503     (Atom=Atom: 323 Body=Body: 138 Other: 3042)
Tight        : Yes
Variables    : 4781     (Eliminated:    0 Frozen: 3311)
Constraints  : 91492    (Binary:  96.6% Ternary:   1.6% Other:   1.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) 
}.
