asprin_vL version 1.0
Reading from stdin
-:1249:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1274:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1355:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1629:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1806:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2007:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2011:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2011:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2017:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2116:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2142:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2262:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2296:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2318:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1166:1-16: info: no atoms over signature occur in program:
  output/3

-:1158:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1159:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1160:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1161:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1191:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Progression : [1;inf]
Answer: 1
preference(1,(1,3),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,aso) output(62,better,75) output(75,better,78) output(52,better,25) output(71,better,57) output(76,better,51) output(62,better,78) output(71,better,91) output(71,better,25) output(8,worse,94) output(8,worse,55) output(67,worse,52) output(86,worse,55) output(86,worse,94) output(57,worse,52) output(86,eq,8) output(67,eq,25) output(71,eq,52)
Optimization: 32 6
Answer: 2
preference(1,(1,3),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,aso) output(62,better,75) output(75,better,78) output(52,better,25) output(71,better,57) output(76,better,51) output(71,better,8) output(62,better,78) output(71,better,94) output(71,better,55) output(71,better,91) output(71,better,25) output(8,worse,94) output(55,worse,52) output(8,worse,55) output(51,worse,67) output(67,worse,52) output(51,worse,52) output(76,worse,67) output(86,worse,55) output(8,worse,52) output(86,worse,94) output(86,worse,52) output(57,worse,52) output(51,worse,25) output(76,worse,25) output(8,worse,25) output(86,worse,25) output(76,worse,52) output(86,eq,8) output(67,eq,25) output(71,eq,52)
Optimization: 29 6
Answer: 3
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,aso) output(8,better,94) output(55,better,52) output(71,better,57) output(8,better,55) output(51,better,67) output(67,better,52) output(51,better,52) output(76,better,67) output(86,better,55) output(8,better,52) output(86,better,94) output(86,better,52) output(71,better,52) output(76,better,52) output(62,worse,75) output(52,worse,25) output(57,worse,8) output(55,worse,91) output(57,worse,55) output(71,worse,8) output(55,worse,25) output(67,worse,25) output(57,worse,94) output(62,worse,78) output(57,worse,25) output(57,worse,91) output(71,worse,91) output(71,worse,25) output(75,eq,78) output(86,eq,8) output(76,eq,51) output(8,eq,91) output(71,eq,94) output(57,eq,52) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(71,eq,55) output(86,eq,91)
Optimization: 26 6
Answer: 4
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(62,better,75) output(8,better,55) output(76,better,51) output(67,better,52) output(8,better,91) output(86,better,55) output(57,better,55) output(67,better,25) output(8,better,52) output(62,better,78) output(86,better,52) output(57,better,52) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(86,better,91) output(57,better,91) output(76,better,52) output(71,worse,57) output(51,worse,67) output(71,worse,8) output(71,worse,94) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(55,eq,52) output(52,eq,25) output(57,eq,8) output(51,eq,52) output(76,eq,67) output(55,eq,25) output(86,eq,94) output(57,eq,94) output(71,eq,52) output(51,eq,25) output(71,eq,55) output(71,eq,25)
Optimization: 21 6
Answer: 5
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(8,better,94) output(8,better,55) output(76,better,51) output(67,better,52) output(51,better,52) output(8,better,91) output(86,better,55) output(57,better,55) output(67,better,25) output(8,better,52) output(86,better,94) output(86,better,52) output(57,better,52) output(71,better,52) output(76,better,25) output(8,better,25) output(86,better,25) output(71,better,55) output(86,better,91) output(57,better,91) output(76,better,52) output(52,worse,25) output(57,worse,8) output(51,worse,67) output(71,worse,8) output(55,worse,25) output(75,eq,78) output(86,eq,8) output(55,eq,52) output(76,eq,67) output(57,eq,94) output(51,eq,25) output(71,eq,25)
Optimization: 19 6
Answer: 6
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(8,better,94) output(55,better,52) output(71,better,57) output(8,better,55) output(55,better,91) output(51,better,67) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(8,better,52) output(86,better,94) output(71,better,94) output(86,better,52) output(57,better,52) output(71,better,52) output(71,better,55) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(52,worse,25) output(57,worse,8) output(55,worse,25) output(67,worse,25) output(57,worse,25) output(75,eq,78) output(86,eq,8) output(76,eq,51) output(57,eq,55) output(71,eq,8) output(57,eq,94) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(71,eq,25)
Optimization: 18 6
Progression : [ 2;18] (Error: 8)
Answer: 7
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(8,better,94) output(71,better,57) output(8,better,55) output(55,better,91) output(76,better,51) output(67,better,52) output(8,better,91) output(86,better,55) output(67,better,25) output(8,better,52) output(86,better,94) output(71,better,94) output(86,better,52) output(71,better,52) output(76,better,25) output(8,better,25) output(86,better,25) output(71,better,55) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(57,worse,8) output(51,worse,67) output(75,eq,78) output(86,eq,8) output(55,eq,52) output(76,eq,67) output(57,eq,55) output(71,eq,8) output(57,eq,94) output(57,eq,52) output(51,eq,25)
Optimization: 17 6
Answer: 8
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(8,better,94) output(55,better,52) output(8,better,55) output(55,better,91) output(51,better,67) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(57,better,55) output(8,better,52) output(86,better,94) output(57,better,94) output(86,better,52) output(57,better,52) output(51,better,25) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(86,better,91) output(57,better,91) output(76,better,52) output(52,worse,25) output(71,worse,57) output(71,worse,8) output(71,worse,94) output(71,worse,55) output(71,worse,25) output(75,eq,78) output(86,eq,8) output(57,eq,8) output(76,eq,51) output(67,eq,25) output(71,eq,52)
Optimization: 16 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(atom(hasPrep(0))),()) preference(1,(1,4),0,for(atom(hasCost(2))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasPrep(1))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,aso) output(62,better,75) output(8,better,94) output(71,better,57) output(8,better,55) output(76,better,51) output(67,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(8,better,52) output(86,better,94) output(62,better,78) output(71,better,94) output(86,better,52) output(57,better,52) output(71,better,52) output(76,better,25) output(8,better,25) output(86,better,25) output(71,better,55) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(57,worse,8) output(75,eq,78) output(86,eq,8) output(71,eq,8) output(55,eq,25) output(57,eq,94) output(51,eq,25)
Optimization: 15 6
Progression : [ 3;15] (Error: 4)
Answer: 10
preference(1,(1,1),0,for(atom(hasPrep(4))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(atom(hasPrep(3))),()) preference(1,(1,5),0,for(atom(hasPrep(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,aso) output(86,better,8) output(8,better,94) output(55,better,52) output(52,better,25) output(57,better,8) output(55,better,91) output(76,better,51) output(67,better,52) output(8,better,91) output(55,better,25) output(67,better,25) output(86,better,94) output(57,better,94) output(71,better,94) output(86,better,52) output(57,better,52) output(51,better,25) output(76,better,25) output(86,better,25) output(57,better,25) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(71,worse,57) output(8,worse,55) output(51,worse,67) output(71,worse,55) output(75,eq,78) output(51,eq,52) output(76,eq,67) output(86,eq,55) output(57,eq,55) output(71,eq,52)
Optimization: 15 5
Answer: 11
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,3),0,for(atom(hasPrepTime(1))),()) preference(1,(1,4),0,for(atom(hasPrep(1))),()) preference(1,(1,5),0,for(atom(hasPrep(4))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,aso) output(8,better,94) output(55,better,52) output(71,better,57) output(8,better,55) output(55,better,91) output(51,better,67) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(8,better,52) output(86,better,94) output(71,better,94) output(86,better,52) output(57,better,52) output(71,better,52) output(51,better,25) output(76,better,25) output(8,better,25) output(86,better,25) output(71,better,55) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(62,worse,75) output(57,worse,8) output(62,worse,78) output(75,eq,78) output(86,eq,8) output(76,eq,51) output(71,eq,8)
Optimization: 13 4
Progression : [ 4;13] (Error: 2.25)
Answer: 12
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,3),0,for(atom(hasPrepTime(1))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(atom(hasPrep(4))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,aso) output(8,better,94) output(55,better,52) output(8,better,55) output(55,better,91) output(51,better,67) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(57,better,55) output(8,better,52) output(86,better,94) output(57,better,94) output(71,better,94) output(86,better,52) output(57,better,52) output(71,better,52) output(51,better,25) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(71,better,55) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(62,worse,75) output(62,worse,78) output(75,eq,78) output(86,eq,8) output(71,eq,57) output(57,eq,8) output(76,eq,51) output(71,eq,8)
Optimization: 11 4
Answer: 13
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(1))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,aso) output(62,better,75) output(75,better,78) output(8,better,94) output(55,better,52) output(8,better,55) output(55,better,91) output(76,better,51) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(57,better,55) output(67,better,25) output(8,better,52) output(86,better,94) output(57,better,94) output(62,better,78) output(86,better,52) output(57,better,52) output(71,better,52) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(71,worse,57) output(71,worse,8) output(86,eq,8) output(57,eq,8)
Optimization: 10 6
Progression : [ 5;10] (Error: 1)
Progression : [ 6;10] (Error: 0.666667)
Answer: 14
preference(1,(1,1),0,for(atom(hasPrep(3))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),0,for(atom(hasPrepTime(1))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,aso) output(62,better,75) output(8,better,94) output(55,better,52) output(8,better,55) output(51,better,67) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(57,better,55) output(67,better,25) output(8,better,52) output(86,better,94) output(57,better,94) output(62,better,78) output(71,better,94) output(86,better,52) output(57,better,52) output(71,better,52) output(51,better,25) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(71,better,55) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(75,eq,78) output(86,eq,8) output(71,eq,57) output(57,eq,8) output(76,eq,51) output(71,eq,8)
Optimization: 10 5
Progression : [ 7;10] (Error: 0.428571)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,aso) output(62,better,75) output(75,better,78) output(8,better,94) output(55,better,52) output(52,better,25) output(57,better,8) output(8,better,55) output(55,better,91) output(76,better,51) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(57,better,55) output(55,better,25) output(67,better,25) output(8,better,52) output(86,better,94) output(57,better,94) output(62,better,78) output(86,better,52) output(57,better,52) output(51,better,25) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(71,worse,57) output(71,worse,8) output(71,worse,94) output(71,worse,55) output(86,eq,8) output(71,eq,52)
Optimization: 7 6
Progression : 7 [1;6] (Error: 5)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,aso) output(62,better,75) output(75,better,78) output(8,better,94) output(55,better,52) output(52,better,25) output(57,better,8) output(8,better,55) output(55,better,91) output(76,better,51) output(67,better,52) output(51,better,52) output(76,better,67) output(8,better,91) output(86,better,55) output(57,better,55) output(55,better,25) output(67,better,25) output(8,better,52) output(86,better,94) output(57,better,94) output(62,better,78) output(86,better,52) output(57,better,52) output(51,better,25) output(76,better,25) output(8,better,25) output(86,better,25) output(57,better,25) output(86,better,91) output(57,better,91) output(71,better,91) output(76,better,52) output(71,better,25) output(71,worse,57) output(71,worse,8) output(71,worse,94) output(71,worse,55) output(86,eq,8) output(71,eq,52)
Optimization: 7 5
Progression : 7 [2;5] (Error: 1.5)
Progression : 7 [3;5] (Error: 0.666667)
Progression : 7 [4;5] (Error: 0.25)
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 7 5
Calls        : 1
Time         : 4.660s (Solving: 2.67s 1st Model: 0.03s Unsat: 2.28s)
CPU Time     : 12.592s
Threads      : 4        (Winner: 1)

Choices      : 123638   (Domain: 7785)
Conflicts    : 57578    (Analyzed: 57565)
Restarts     : 86       (Average: 669.36 Last: 4675)
Model-Level  : 217.2   
Problems     : 15       (Average Length: 0.27 Splits: 0)
Lemmas       : 66386    (Deleted: 19827)
  Binary     : 590      (Ratio:   0.89%)
  Ternary    : 614      (Ratio:   0.92%)
  Conflict   : 57565    (Average Length:   43.1 Ratio:  86.71%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8821     (Average Length:   21.4 Ratio:  13.29%) 
  Distributed: 2949     (Ratio:   5.12% Average LBD: 3.10) 
  Integrated : 8847     (Ratio: 300.00% Unit: 104 Average Jumps: 34.58)
Backjumps    : 57565    (Average:  2.03 Max: 362 Sum: 116773)
  Executed   : 57542    (Average:  2.02 Max: 362 Sum: 116432 Ratio:  99.71%)
  Bounded    : 23       (Average: 14.83 Max:  32 Sum:    341 Ratio:   0.29%)

Rules        : 545235  
  Choice     : 19      
  Minimize   : 2       
Atoms        : 124408  
Bodies       : 135381  
  Count      : 738     
Equivalences : 349542   (Atom=Atom: 106994 Body=Body: 118785 Other: 123763)
Tight        : Yes
Variables    : 16729    (Eliminated:    0 Frozen: 8419)
Constraints  : 443075   (Binary:  96.3% Ternary:   2.9% Other:   0.8%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasCost(1))  ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(2))  >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) ; 
  atom(hasPrep(4)) >> not atom(hasPrepTime(3))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasCost(1))  ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(2))  >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) ; 
  atom(hasPrep(4)) >> atom(hasCost(2)) ; 
  atom(hasPrep(6)) >> not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrep(1)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(5))  ; 
  not atom(hasPrep(1))  >> atom(hasPrep(4)) ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(7)) ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(5))  ; 
  not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(7)) ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(2)) ; 
  not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(7)) ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(2)) ; 
  not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(7)) ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> not atom(hasPrepTime(3))  ; 
  not atom(hasPrep(1))  >> not atom(hasPrep(3))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(7)) ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> not atom(hasPrep(4))  || not atom(hasPrep(6))  ; 
  not atom(hasPrep(6))  >> not atom(hasPrep(7))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(1)) >> not atom(hasDifficulty(1))  || atom(hasPrep(0)) ; 
  not atom(hasPrep(4))  >> atom(hasDifficulty(2)) || atom(hasCost(2)) ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(3))  || atom(hasPrepTime(2)) ; 
  not atom(hasPrepTime(3))  >> not atom(hasPrep(4))  || atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> not atom(hasPrep(4))  || atom(hasPrep(4)) ; 
  atom(hasPrep(3)) >> not atom(hasPrep(7))  || not atom(hasPrep(5))  ; 
  not atom(hasPrep(4))  >> atom(hasPrepTime(3)) || atom(hasPrep(3)) ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrepTime(2))  || atom(hasPrep(2)) ; 
  not atom(hasPrep(0))  >> not atom(hasPrep(4))  || not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> not atom(hasPrep(7))  || atom(hasPrepTime(2)) ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrep(6))  || atom(hasPrepTime(1)) ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(1))  || atom(hasPrep(1)) ; 
  not atom(hasPrep(2))  >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> not atom(hasPrep(3))  || atom(hasPrepTime(2)) ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrep(6))  || atom(hasPrepTime(1)) ; 
  not atom(hasPrep(1))  >> not atom(hasPrep(3))  || not atom(hasPrepTime(1))  ; 
  not atom(hasPrep(2))  >> not atom(hasPrepTime(1))  || atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(2)) || atom(hasDifficulty(1)) ; 
  atom(hasPrep(4)) >> not atom(hasPrepTime(3))  || not atom(hasPrep(3))  ; 
  atom(hasPrep(1)) >> atom(hasPrep(4)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(1))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(0)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(3))  >> not atom(hasDifficulty(1))  || atom(hasPrep(3)) ; 
  atom(hasPrepTime(3)) >> not atom(hasPrep(4))  || not atom(hasPrep(1))  ; 
  not atom(hasPrep(6))  >> not atom(hasPrepTime(1))  || not atom(hasPrep(3))  ; 
  not atom(hasPrep(2))  >> not atom(hasPrep(4))  || atom(hasPrepTime(1)) ; 
  not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  || not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(2)) || atom(hasDifficulty(1)) ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(3))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(2)) || atom(hasDifficulty(1)) ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(3))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(3))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(5))  
}.
