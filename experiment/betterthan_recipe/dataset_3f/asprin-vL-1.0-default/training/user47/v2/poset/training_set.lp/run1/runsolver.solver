asprin_vL version 1.0
Reading from stdin
-:1230:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1240:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1255:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1336:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1610:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1787:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1916:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1988:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1992:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1992:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1998:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2097:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2123:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2243:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2277:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2299:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1147:1-16: info: no atoms over signature occur in program:
  output/3

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1141:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(50,eq,46) preference(1,poset) output(22,eq,28) output(100,eq,19) output(19,eq,73) output(73,eq,86) output(68,eq,50) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(68,eq,46) output(98,eq,46) output(19,eq,86) output(65,eq,86) output(100,eq,73) output(100,eq,86) output(100,eq,52) output(19,eq,54) output(65,eq,54) output(100,eq,54)
Optimization: 25 0
Answer: 2
output(50,eq,46) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(3))),()) preference(1,poset) output(65,better,52) output(65,better,86) output(65,better,54) output(65,better,73) output(22,eq,28) output(100,eq,19) output(19,eq,73) output(73,eq,86) output(68,eq,50) output(100,eq,63) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(73,eq,54) output(19,eq,52) output(68,eq,46) output(98,eq,46) output(19,eq,86) output(100,eq,73) output(100,eq,86) output(100,eq,52) output(19,eq,54) output(100,eq,54)
Optimization: 21 1
Answer: 3
output(50,eq,46) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(73,better,86) output(98,better,50) output(65,better,52) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(65,better,54) output(65,better,73) output(100,better,63) output(22,worse,28) output(100,eq,19) output(19,eq,73) output(68,eq,50) output(73,eq,52) output(52,eq,54) output(25,eq,67) output(73,eq,54) output(19,eq,52) output(68,eq,46) output(100,eq,73) output(100,eq,52) output(19,eq,54) output(100,eq,54)
Optimization: 15 1
Answer: 4
output(50,eq,46) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,poset) output(73,better,86) output(73,better,52) output(73,better,54) output(19,better,52) output(65,better,52) output(19,better,86) output(65,better,86) output(19,better,54) output(65,better,54) output(25,better,67) output(65,better,73) output(98,worse,50) output(98,worse,46) output(22,worse,28) output(100,worse,19) output(100,worse,73) output(19,eq,73) output(68,eq,50) output(100,eq,63) output(52,eq,54) output(68,eq,46) output(100,eq,86) output(100,eq,52) output(100,eq,54)
Optimization: 14 1
Answer: 5
output(50,eq,46) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(65,better,73) output(22,worse,28) output(100,eq,19) output(19,eq,73) output(100,eq,63) output(52,eq,54) output(25,eq,67) output(100,eq,73)
Optimization: 8 1
Answer: 6
output(50,eq,46) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,poset) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(100,better,19) output(65,better,73) output(52,better,54) output(19,worse,52) output(22,worse,28) output(19,worse,73) output(100,eq,63) output(25,eq,67) output(100,eq,73)
Optimization: 7 2
Answer: 7
output(50,eq,46) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(100,better,19) output(65,better,73) output(100,better,63) output(52,better,54) output(19,worse,52) output(22,worse,28) output(19,worse,73) output(25,eq,67) output(100,eq,73)
Optimization: 6 2
Answer: 8
output(50,eq,46) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,poset) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(22,worse,28) output(52,eq,54) output(25,eq,67)
Optimization: 4 2
Answer: 9
output(50,eq,46) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,10),1,for(atom(hasCost(2))),()) preference(1,(1,11),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,10),2,for(atom(hasPrepTime(3))),()) preference(1,(1,11),2,for(atom(hasPrep(6))),()) preference(1,poset) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(19,better,73) output(100,better,63) output(52,better,54) output(22,worse,28) output(65,worse,73)
Optimization: 3 6
Answer: 10
output(50,eq,46) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,10),1,for(atom(hasCost(2))),()) preference(1,(1,11),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,10),2,for(atom(hasPrepTime(3))),()) preference(1,(1,11),2,for(atom(hasPrep(6))),()) preference(1,poset) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(52,better,54) output(22,worse,28)
Optimization: 2 6
Answer: 11
output(50,eq,46) preference(1,(1,3),1,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,9),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasPrep(4))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,12),1,for(atom(hasPrep(7))),()) preference(1,(1,13),1,for(atom(hasPrep(0))),()) preference(1,(1,14),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,7),2,for(atom(hasPrep(4))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,(1,9),2,for(atom(hasDifficulty(1))),()) preference(1,(1,10),2,for(atom(hasPrepTime(1))),()) preference(1,(1,11),2,for(atom(hasCost(2))),()) preference(1,(1,12),2,for(atom(hasPrepTime(1))),()) preference(1,(1,13),2,for(atom(hasPrep(6))),()) preference(1,(1,14),2,for(atom(hasPrepTime(2))),()) preference(1,poset) output(22,better,28) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(52,better,54)
Optimization: 1 10
Answer: 12
output(50,eq,46) preference(1,(1,3),1,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,9),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasPrep(4))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,13),1,for(atom(hasPrep(0))),()) preference(1,(1,14),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,7),2,for(atom(hasPrep(4))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,(1,9),2,for(atom(hasDifficulty(1))),()) preference(1,(1,10),2,for(atom(hasPrepTime(1))),()) preference(1,(1,11),2,for(atom(hasCost(2))),()) preference(1,(1,13),2,for(atom(hasPrep(6))),()) preference(1,(1,14),2,for(atom(hasPrepTime(2))),()) preference(1,poset) output(22,better,28) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(52,better,54)
Optimization: 1 9
Answer: 13
output(50,eq,46) preference(1,(1,3),1,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,9),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasPrep(4))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,13),1,for(atom(hasPrep(0))),()) preference(1,(1,14),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,(1,9),2,for(atom(hasDifficulty(1))),()) preference(1,(1,10),2,for(atom(hasPrepTime(1))),()) preference(1,(1,11),2,for(atom(hasCost(2))),()) preference(1,(1,13),2,for(atom(hasPrep(6))),()) preference(1,(1,14),2,for(atom(hasPrepTime(2))),()) preference(1,poset) output(22,better,28) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(52,better,54)
Optimization: 1 8
Progression : 1 [1;8] (Error: 7)
Answer: 14
output(50,eq,46) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,7),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasCost(2))),()) preference(1,(1,12),1,for(atom(hasCost(1))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,7),2,for(atom(hasPrep(6))),()) preference(1,(1,10),2,for(atom(hasCost(1))),()) preference(1,(1,12),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasPrep(2))),()) preference(1,poset) output(22,better,28) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(52,better,54)
Optimization: 1 7
Answer: 15
output(50,eq,46) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,7),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasDifficulty(1))),()) preference(1,(1,12),1,for(atom(hasCost(2))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,7),2,for(atom(hasPrep(6))),()) preference(1,(1,10),2,for(atom(hasCost(2))),()) preference(1,(1,12),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasPrep(2))),()) preference(1,poset) output(22,better,28) output(73,better,86) output(68,better,50) output(73,better,52) output(98,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(25,better,67) output(100,better,19) output(100,better,73) output(65,better,73) output(19,better,73) output(100,better,63) output(52,better,54)
Optimization: 1 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.064 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 1 6
Calls        : 1
Time         : 297.040s (Solving: 292.51s 1st Model: 0.73s Unsat: 0.00s)
CPU Time     : 1173.755s
Threads      : 4        (Winner: 4)

Choices      : 1617862  (Domain: 2473)
Conflicts    : 115577   (Analyzed: 115576)
Restarts     : 219      (Average: 527.74 Last: 6596)
Model-Level  : 901.3   
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 10812538 (Deleted: 10703483)
  Binary     : 1636     (Ratio:   0.02%)
  Ternary    : 28772    (Ratio:   0.27%)
  Conflict   : 115576   (Average Length:  630.4 Ratio:   1.07%) 
  Loop       : 10654731 (Average Length:  112.5 Ratio:  98.54%) 
  Other      : 42231    (Average Length:    3.6 Ratio:   0.39%) 
  Distributed: 14511    (Ratio:   0.13% Average LBD: 2.79) 
  Integrated : 43532    (Ratio: 299.99% Unit: 140 Average Jumps: 781.89)
Backjumps    : 115576   (Average:  9.99 Max: 19374 Sum: 1155072)
  Executed   : 115549   (Average:  9.99 Max: 19374 Sum: 1154972 Ratio:  99.99%)
  Bounded    : 27       (Average:  3.70 Max:  26 Sum:    100 Ratio:   0.01%)

Rules        : 903614  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 18706   
Bodies       : 701270  
  Count      : 56      
Equivalences : 22113    (Atom=Atom: 3733 Body=Body: 5427 Other: 12953)
Tight        : No       (SCCs: 26 Non-Hcfs: 0 Nodes: 652680 Gammas: 0)
Variables    : 660155   (Eliminated:    0 Frozen: 654470)
Constraints  : 3956644  (Binary:  82.8% Ternary:   2.0% Other:  15.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(1)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasCost(2)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(0)) >> atom(hasCost(2)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasCost(2)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(4)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(4)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(2)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(0)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(0)) >> atom(hasPrep(6)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(0)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) ; 
  atom(hasCost(2)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(0)) >> atom(hasPrep(6)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(2)) ; 
  atom(hasCost(2)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(2)) 
}.
