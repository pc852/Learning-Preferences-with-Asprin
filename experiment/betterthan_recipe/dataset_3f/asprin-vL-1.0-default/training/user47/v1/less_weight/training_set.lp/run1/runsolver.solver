asprin_vL version 1.0
Reading from stdin
-:1300:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1310:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1325:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1406:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1667:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1680:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1857:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1986:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2058:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2062:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2062:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2068:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2167:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2193:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2313:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2347:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2369:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1217:1-16: info: no atoms over signature occur in program:
  output/3

-:1209:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1210:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(33,eq,79) output(79,eq,65) output(65,eq,49) output(49,eq,95) output(95,eq,86) output(98,eq,25) output(28,eq,33) output(86,eq,98) output(63,eq,65) output(65,eq,73) output(52,eq,54) output(54,eq,98) output(98,eq,50) output(25,eq,67) output(100,eq,63) output(73,eq,52) output(50,eq,25) output(65,eq,52) output(98,eq,67) output(50,eq,67) output(86,eq,50) output(54,eq,50) output(52,eq,98) output(73,eq,54) output(79,eq,73) output(63,eq,73) output(100,eq,65) output(95,eq,98) output(86,eq,25) output(54,eq,25) output(49,eq,86) output(65,eq,95) output(79,eq,49) output(63,eq,49) output(33,eq,65) output(28,eq,79) output(28,eq,65) output(100,eq,49) output(33,eq,49) output(28,eq,49) output(79,eq,95) output(63,eq,95) output(100,eq,95) output(33,eq,95) output(65,eq,86) output(79,eq,86) output(63,eq,86) output(52,eq,25) output(73,eq,25) output(95,eq,25) output(49,eq,25) output(49,eq,98) output(65,eq,98) output(100,eq,73) output(33,eq,73) output(28,eq,73) output(65,eq,54) output(79,eq,54) output(63,eq,54) output(73,eq,98) output(52,eq,50) output(73,eq,50) output(95,eq,50) output(49,eq,50) output(86,eq,67) output(54,eq,67) output(52,eq,67) output(95,eq,67) output(79,eq,52) output(63,eq,52) output(100,eq,52) output(33,eq,52) output(28,eq,52) output(49,eq,67) output(65,eq,67) output(79,eq,67) output(63,eq,67) output(100,eq,67) output(33,eq,67) output(73,eq,67) output(65,eq,50) output(79,eq,50) output(63,eq,50) output(100,eq,50) output(33,eq,50) output(28,eq,50) output(79,eq,98) output(63,eq,98) output(100,eq,98) output(33,eq,98) output(28,eq,98) output(100,eq,54) output(33,eq,54) output(28,eq,54) output(65,eq,25) output(79,eq,25) output(63,eq,25) output(100,eq,25) output(33,eq,25) output(28,eq,25) output(100,eq,86) output(33,eq,86) output(28,eq,86) output(28,eq,95) output(28,eq,67)
Optimization: 105 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(86,better,98) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,98) output(95,better,25) output(95,better,50) output(95,better,67) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(65,better,73) output(65,better,52) output(65,better,98) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(79,worse,65) output(79,worse,49) output(79,worse,95) output(79,worse,86) output(28,worse,65) output(28,worse,49) output(28,worse,86) output(28,worse,95) output(33,worse,65) output(33,worse,49) output(33,worse,95) output(33,worse,86) output(63,worse,65) output(63,worse,49) output(63,worse,95) output(63,worse,86) output(100,worse,65) output(100,worse,49) output(100,worse,95) output(100,worse,86) output(33,eq,79) output(65,eq,49) output(49,eq,95) output(95,eq,86) output(98,eq,25) output(28,eq,33) output(52,eq,54) output(54,eq,98) output(98,eq,50) output(25,eq,67) output(100,eq,63) output(73,eq,52) output(50,eq,25) output(98,eq,67) output(50,eq,67) output(54,eq,50) output(52,eq,98) output(73,eq,54) output(79,eq,73) output(63,eq,73) output(54,eq,25) output(49,eq,86) output(65,eq,95) output(28,eq,79) output(65,eq,86) output(52,eq,25) output(73,eq,25) output(100,eq,73) output(33,eq,73) output(28,eq,73) output(79,eq,54) output(63,eq,54) output(73,eq,98) output(52,eq,50) output(73,eq,50) output(54,eq,67) output(52,eq,67) output(79,eq,52) output(63,eq,52) output(100,eq,52) output(33,eq,52) output(28,eq,52) output(79,eq,67) output(63,eq,67) output(100,eq,67) output(33,eq,67) output(73,eq,67) output(79,eq,50) output(63,eq,50) output(100,eq,50) output(33,eq,50) output(28,eq,50) output(79,eq,98) output(63,eq,98) output(100,eq,98) output(33,eq,98) output(28,eq,98) output(100,eq,54) output(33,eq,54) output(28,eq,54) output(79,eq,25) output(63,eq,25) output(100,eq,25) output(33,eq,25) output(28,eq,25) output(28,eq,67)
Optimization: 86 3
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(79,better,65) output(79,better,95) output(79,better,86) output(28,better,33) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,86) output(28,better,95) output(33,better,65) output(33,better,95) output(33,better,86) output(49,better,95) output(49,better,86) output(63,better,65) output(63,better,95) output(63,better,86) output(100,better,65) output(100,better,95) output(100,better,86) output(52,worse,54) output(52,worse,98) output(52,worse,25) output(52,worse,50) output(52,worse,67) output(79,worse,54) output(79,worse,67) output(79,worse,50) output(79,worse,98) output(79,worse,25) output(86,worse,98) output(86,worse,50) output(86,worse,25) output(86,worse,67) output(95,worse,98) output(95,worse,25) output(95,worse,50) output(95,worse,67) output(28,worse,50) output(28,worse,98) output(28,worse,54) output(28,worse,25) output(28,worse,67) output(33,worse,67) output(33,worse,50) output(33,worse,98) output(33,worse,54) output(33,worse,25) output(49,worse,25) output(49,worse,98) output(49,worse,50) output(49,worse,67) output(63,worse,54) output(63,worse,67) output(63,worse,50) output(63,worse,98) output(63,worse,25) output(65,worse,49) output(65,worse,73) output(65,worse,52) output(65,worse,95) output(65,worse,86) output(65,worse,98) output(65,worse,54) output(65,worse,67) output(65,worse,50) output(65,worse,25) output(73,worse,54) output(73,worse,25) output(73,worse,98) output(73,worse,50) output(73,worse,67) output(100,worse,67) output(100,worse,50) output(100,worse,98) output(100,worse,54) output(100,worse,25) output(33,eq,79) output(95,eq,86) output(98,eq,25) output(54,eq,98) output(98,eq,50) output(25,eq,67) output(100,eq,63) output(73,eq,52) output(50,eq,25) output(98,eq,67) output(50,eq,67) output(54,eq,50) output(79,eq,73) output(63,eq,73) output(54,eq,25) output(79,eq,49) output(63,eq,49) output(100,eq,49) output(33,eq,49) output(100,eq,73) output(33,eq,73) output(54,eq,67) output(79,eq,52) output(63,eq,52) output(100,eq,52) output(33,eq,52)
Optimization: 83 5
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrep(4))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(79,better,65) output(28,better,79) output(28,better,65) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,95) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,98) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,95) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(79,worse,73) output(79,worse,49) output(79,worse,54) output(79,worse,52) output(79,worse,67) output(79,worse,50) output(79,worse,98) output(79,worse,25) output(86,worse,98) output(86,worse,50) output(86,worse,25) output(86,worse,67) output(95,worse,98) output(95,worse,25) output(95,worse,50) output(95,worse,67) output(63,worse,73) output(63,worse,49) output(65,worse,49) output(65,worse,73) output(65,worse,52) output(65,worse,95) output(65,worse,86) output(65,worse,98) output(65,worse,54) output(65,worse,67) output(65,worse,50) output(65,worse,25) output(100,worse,49) output(100,worse,73) output(95,eq,86) output(28,eq,33) output(52,eq,54) output(25,eq,67) output(100,eq,63) output(50,eq,25) output(50,eq,67) output(54,eq,50) output(54,eq,25) output(33,eq,49) output(28,eq,49) output(79,eq,95) output(79,eq,86) output(52,eq,25) output(33,eq,73) output(28,eq,73) output(52,eq,50) output(54,eq,67) output(52,eq,67) output(63,eq,98) output(100,eq,98)
Optimization: 53 13
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),5) preference(1,(1,13),1,for(atom(hasPrep(4))),6) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(54,better,50) output(54,better,25) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,79) output(28,better,52) output(28,better,50) output(28,better,54) output(28,better,25) output(33,better,79) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,98) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,98) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,50) output(100,better,25) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(52,worse,67) output(54,worse,98) output(54,worse,67) output(79,worse,65) output(79,worse,73) output(79,worse,49) output(79,worse,95) output(79,worse,86) output(79,worse,67) output(79,worse,98) output(28,worse,33) output(28,worse,65) output(28,worse,49) output(28,worse,73) output(28,worse,98) output(28,worse,86) output(28,worse,95) output(28,worse,67) output(33,worse,65) output(33,worse,49) output(33,worse,73) output(63,worse,65) output(63,worse,73) output(63,worse,49) output(100,worse,63) output(100,worse,65) output(100,worse,49) output(100,worse,95) output(100,worse,73) output(100,worse,67) output(100,worse,98) output(100,worse,86) output(95,eq,86) output(86,eq,98) output(52,eq,54) output(50,eq,25) output(95,eq,98) output(63,eq,95) output(33,eq,95) output(63,eq,86) output(79,eq,54) output(79,eq,52) output(100,eq,52) output(63,eq,98) output(33,eq,98) output(100,eq,54) output(33,eq,86)
Optimization: 50 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrep(4))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,67) output(54,better,67) output(79,better,65) output(79,better,95) output(79,better,86) output(79,better,67) output(28,better,79) output(28,better,65) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,95) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,95) output(65,better,86) output(65,better,67) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,98) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,95) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(79,worse,73) output(79,worse,49) output(79,worse,54) output(79,worse,52) output(79,worse,50) output(79,worse,98) output(79,worse,25) output(86,worse,98) output(86,worse,50) output(86,worse,25) output(86,worse,67) output(95,worse,98) output(95,worse,25) output(95,worse,50) output(95,worse,67) output(63,worse,73) output(63,worse,49) output(65,worse,49) output(65,worse,73) output(65,worse,52) output(65,worse,98) output(65,worse,54) output(65,worse,50) output(65,worse,25) output(100,worse,49) output(100,worse,73) output(95,eq,86) output(28,eq,33) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(54,eq,50) output(54,eq,25) output(33,eq,49) output(28,eq,49) output(52,eq,25) output(33,eq,73) output(28,eq,73) output(52,eq,50) output(63,eq,98) output(100,eq,98)
Optimization: 43 13
Progression : [ 3;43] (Error: 13.3333)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrep(4))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(54,better,50) output(54,better,25) output(79,better,65) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(95,better,25) output(95,better,50) output(28,better,79) output(28,better,65) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,95) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,98) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,95) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(54,worse,98) output(79,worse,73) output(79,worse,49) output(79,worse,54) output(79,worse,52) output(79,worse,67) output(79,worse,98) output(86,worse,98) output(86,worse,67) output(95,worse,98) output(95,worse,67) output(63,worse,73) output(63,worse,49) output(65,worse,49) output(65,worse,73) output(65,worse,52) output(65,worse,95) output(65,worse,86) output(65,worse,98) output(65,worse,54) output(65,worse,67) output(100,worse,49) output(100,worse,73) output(95,eq,86) output(28,eq,33) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(33,eq,49) output(28,eq,49) output(79,eq,95) output(79,eq,86) output(33,eq,73) output(28,eq,73) output(54,eq,67) output(52,eq,67) output(63,eq,98) output(100,eq,98)
Optimization: 41 13
Answer: 8
preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,98) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,98) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,67) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,79) output(28,better,49) output(28,better,73) output(28,better,50) output(28,better,98) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(63,better,73) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,98) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,73) output(100,better,67) output(100,better,50) output(100,better,25) output(79,worse,65) output(79,worse,49) output(79,worse,95) output(79,worse,86) output(79,worse,54) output(79,worse,52) output(79,worse,50) output(79,worse,98) output(79,worse,25) output(28,worse,33) output(28,worse,65) output(28,worse,52) output(28,worse,54) output(33,worse,65) output(63,worse,65) output(63,worse,49) output(63,worse,54) output(63,worse,52) output(73,worse,52) output(73,worse,54) output(73,worse,25) output(73,worse,98) output(73,worse,50) output(100,worse,65) output(100,worse,49) output(100,worse,52) output(100,worse,54) output(95,eq,86) output(86,eq,98) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(79,eq,73) output(95,eq,98) output(63,eq,95) output(100,eq,95) output(63,eq,86) output(63,eq,98) output(100,eq,98) output(100,eq,86)
Optimization: 40 11
Progression : [ 4;40] (Error: 9)
Progression : [ 5;40] (Error: 7)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(54,better,50) output(54,better,25) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(95,better,25) output(95,better,50) output(28,better,50) output(28,better,25) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,98) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(52,worse,67) output(54,worse,98) output(54,worse,67) output(79,worse,65) output(79,worse,73) output(79,worse,49) output(79,worse,98) output(86,worse,98) output(86,worse,67) output(95,worse,98) output(95,worse,67) output(28,worse,33) output(28,worse,79) output(28,worse,65) output(28,worse,49) output(28,worse,73) output(28,worse,52) output(28,worse,98) output(28,worse,54) output(28,worse,86) output(28,worse,95) output(28,worse,67) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(100,worse,63) output(95,eq,86) output(52,eq,54) output(50,eq,25) output(79,eq,67) output(100,eq,98) output(33,eq,98)
Optimization: 35 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(54,better,50) output(54,better,25) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(95,better,25) output(95,better,50) output(28,better,79) output(28,better,52) output(28,better,50) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,98) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(52,worse,67) output(54,worse,98) output(54,worse,67) output(79,worse,65) output(79,worse,73) output(79,worse,49) output(79,worse,98) output(86,worse,98) output(86,worse,67) output(95,worse,98) output(95,worse,67) output(28,worse,33) output(28,worse,65) output(28,worse,49) output(28,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(100,worse,63) output(95,eq,86) output(52,eq,54) output(50,eq,25) output(28,eq,73) output(79,eq,67) output(100,eq,98) output(33,eq,98)
Optimization: 29 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(54,better,50) output(54,better,25) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(95,better,25) output(95,better,50) output(28,better,79) output(28,better,52) output(28,better,50) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,98) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(54,worse,98) output(79,worse,65) output(79,worse,73) output(79,worse,49) output(79,worse,98) output(86,worse,98) output(86,worse,67) output(95,worse,98) output(95,worse,67) output(28,worse,33) output(28,worse,65) output(28,worse,49) output(28,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(100,worse,63) output(95,eq,86) output(52,eq,54) output(50,eq,25) output(28,eq,73) output(54,eq,67) output(52,eq,67) output(100,eq,98) output(33,eq,98)
Optimization: 28 11
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(95,better,25) output(95,better,50) output(28,better,79) output(28,better,52) output(28,better,50) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,98) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(54,worse,98) output(79,worse,65) output(79,worse,73) output(79,worse,49) output(79,worse,98) output(86,worse,98) output(86,worse,67) output(95,worse,98) output(95,worse,67) output(28,worse,33) output(28,worse,65) output(28,worse,49) output(28,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(100,worse,63) output(95,eq,86) output(52,eq,54) output(50,eq,25) output(28,eq,73) output(100,eq,98) output(33,eq,98)
Optimization: 26 12
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,98) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,33) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,95) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,98) output(49,better,50) output(49,better,67) output(63,better,73) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,98) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,98) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,98) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,95) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(79,worse,65) output(79,worse,73) output(79,worse,49) output(86,worse,98) output(95,worse,98) output(33,worse,79) output(33,worse,65) output(33,worse,49) output(33,worse,73) output(63,worse,65) output(63,worse,49) output(100,worse,63) output(100,worse,65) output(100,worse,49) output(100,worse,73) output(95,eq,86) output(52,eq,54) output(25,eq,67) output(50,eq,25) output(50,eq,67) output(100,eq,98) output(33,eq,98)
Optimization: 24 8
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrep(4))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,73) output(79,better,49) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(79,worse,98) output(86,worse,98) output(95,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(79,eq,65) output(95,eq,86) output(28,eq,33) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 16 14
Progression : [ 6;16] (Error: 1.66667)
Progression : [ 7;16] (Error: 1.28571)
Progression : [ 8;16] (Error: 1)
Progression : [ 9;16] (Error: 0.777778)
Progression : [10;16] (Error: 0.6)
Progression : [11;16] (Error: 0.454545)
Progression : [12;16] (Error: 0.333333)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(1))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,65) output(79,better,73) output(79,better,49) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,33) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(79,worse,98) output(86,worse,98) output(95,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(95,eq,86) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(63,eq,98) output(100,eq,98) output(33,eq,98)
Optimization: 15 11
Answer: 16
preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,65) output(79,better,73) output(79,better,49) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,98) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,33) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(86,worse,98) output(95,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(33,eq,79) output(95,eq,86) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 14 10
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,65) output(79,better,73) output(79,better,49) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,98) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,33) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(86,worse,98) output(95,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(95,eq,86) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 13 13
Progression : [13;13] (Error: 0)
Progression : 13 [ 1;13] (Error: 12)
Answer: 18
preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,25) output(52,better,50) output(52,better,67) output(54,better,50) output(54,better,25) output(54,better,67) output(79,better,65) output(79,better,73) output(79,better,49) output(79,better,95) output(79,better,86) output(79,better,54) output(79,better,52) output(79,better,67) output(79,better,50) output(79,better,98) output(79,better,25) output(86,better,50) output(86,better,25) output(86,better,67) output(95,better,25) output(95,better,50) output(95,better,67) output(28,better,33) output(28,better,79) output(28,better,65) output(28,better,49) output(28,better,73) output(28,better,52) output(28,better,50) output(28,better,98) output(28,better,54) output(28,better,25) output(28,better,86) output(28,better,95) output(28,better,67) output(33,better,79) output(33,better,65) output(33,better,49) output(33,better,95) output(33,better,73) output(33,better,52) output(33,better,67) output(33,better,50) output(33,better,98) output(33,better,54) output(33,better,25) output(33,better,86) output(49,better,95) output(49,better,86) output(49,better,25) output(49,better,50) output(49,better,67) output(63,better,65) output(63,better,73) output(63,better,49) output(63,better,95) output(63,better,86) output(63,better,54) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,25) output(65,better,49) output(65,better,73) output(65,better,52) output(65,better,95) output(65,better,86) output(65,better,54) output(65,better,67) output(65,better,50) output(65,better,25) output(73,better,52) output(73,better,54) output(73,better,25) output(73,better,50) output(73,better,67) output(98,better,25) output(98,better,50) output(98,better,67) output(100,better,65) output(100,better,49) output(100,better,95) output(100,better,73) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,54) output(100,better,25) output(100,better,86) output(52,worse,98) output(54,worse,98) output(86,worse,98) output(95,worse,98) output(49,worse,98) output(65,worse,98) output(73,worse,98) output(95,eq,86) output(52,eq,54) output(100,eq,63) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 13 11
Progression : 13 [ 2;11] (Error: 4.5)
Progression : 13 [ 3;11] (Error: 2.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.065 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 13 11
Bounds       : 13 [3;11]
Calls        : 1
Time         : 297.006s (Solving: 294.96s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.474s
Threads      : 4        (Winner: 4)

Choices      : 8279956  (Domain: 545612)
Conflicts    : 6612610  (Analyzed: 6612596)
Restarts     : 5894     (Average: 1121.92 Last: 595320)
Model-Level  : 43.7    
Problems     : 21       (Average Length: 0.19 Splits: 0)
Lemmas       : 6840407  (Deleted: 6540147)
  Binary     : 910      (Ratio:   0.01%)
  Ternary    : 11438    (Ratio:   0.17%)
  Conflict   : 6612595  (Average Length:  142.1 Ratio:  96.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 227812   (Average Length:   40.7 Ratio:   3.33%) 
  Distributed: 76105    (Ratio:   1.15% Average LBD: 3.69) 
  Integrated : 228315   (Ratio: 300.00% Unit: 387 Average Jumps: 5.10)
Backjumps    : 6612596  (Average:  1.23 Max: 296 Sum: 8108371)
  Executed   : 6612587  (Average:  1.23 Max: 296 Sum: 8108297 Ratio: 100.00%)
  Bounded    : 9        (Average:  8.22 Max:  30 Sum:     74 Ratio:   0.00%)

Rules        : 208157  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15902   
Bodies       : 6346    
  Sum        : 160     
  Count      : 14      
Equivalences : 9116     (Atom=Atom: 1179 Body=Body: 556 Other: 7381)
Tight        : Yes
Variables    : 5001     (Eliminated:    0 Frozen: 3531)
Constraints  : 200586   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(4)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.
