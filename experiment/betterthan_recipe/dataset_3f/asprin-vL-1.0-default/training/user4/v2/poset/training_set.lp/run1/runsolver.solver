asprin_vL version 1.0
Reading from stdin
-:1265:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1275:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1290:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1371:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1645:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1822:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1951:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2023:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2027:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2027:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2033:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2132:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2158:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2278:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2312:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2334:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1182:1-16: info: no atoms over signature occur in program:
  output/3

-:1174:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1175:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1176:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(72,eq,31) output(31,eq,18) output(18,eq,51) output(51,eq,90) output(90,eq,79) output(42,eq,23) output(23,eq,7) output(4,eq,72) output(60,eq,76) output(76,eq,37) output(37,eq,42) output(42,eq,18) output(18,eq,92) output(31,eq,92) output(42,eq,92) output(37,eq,18) output(76,eq,42) output(60,eq,37) output(42,eq,7) output(37,eq,23) output(51,eq,79) output(18,eq,90) output(31,eq,51) output(42,eq,51) output(72,eq,18) output(4,eq,31) output(4,eq,18) output(37,eq,51) output(76,eq,51) output(72,eq,51) output(4,eq,51) output(31,eq,90) output(42,eq,90) output(37,eq,90) output(72,eq,90) output(18,eq,79) output(31,eq,79) output(42,eq,79) output(76,eq,23) output(60,eq,23) output(37,eq,7) output(76,eq,7) output(60,eq,42) output(76,eq,18) output(60,eq,18) output(37,eq,92) output(76,eq,92) output(72,eq,92) output(4,eq,92) output(60,eq,92) output(60,eq,7) output(37,eq,79) output(76,eq,79) output(60,eq,79) output(72,eq,79) output(4,eq,79) output(4,eq,90) output(76,eq,90) output(60,eq,90) output(60,eq,51)
Optimization: 60 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,poset) output(37,better,42) output(37,better,18) output(37,better,7) output(37,better,51) output(37,better,90) output(37,better,92) output(37,better,79) output(23,better,7) output(76,worse,23) output(60,worse,23) output(42,worse,23) output(76,worse,37) output(60,worse,37) output(72,eq,31) output(31,eq,18) output(18,eq,51) output(51,eq,90) output(90,eq,79) output(4,eq,72) output(60,eq,76) output(42,eq,18) output(18,eq,92) output(31,eq,92) output(42,eq,92) output(76,eq,42) output(42,eq,7) output(37,eq,23) output(51,eq,79) output(18,eq,90) output(31,eq,51) output(42,eq,51) output(72,eq,18) output(4,eq,31) output(4,eq,18) output(76,eq,51) output(72,eq,51) output(4,eq,51) output(31,eq,90) output(42,eq,90) output(72,eq,90) output(18,eq,79) output(31,eq,79) output(42,eq,79) output(76,eq,7) output(60,eq,42) output(76,eq,18) output(60,eq,18) output(76,eq,92) output(72,eq,92) output(4,eq,92) output(60,eq,92) output(60,eq,7) output(76,eq,79) output(60,eq,79) output(72,eq,79) output(4,eq,79) output(4,eq,90) output(76,eq,90) output(60,eq,90) output(60,eq,51)
Optimization: 52 1
Answer: 3
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(31,better,18) output(4,better,72) output(37,better,42) output(37,better,18) output(37,better,23) output(4,better,18) output(37,better,7) output(42,better,92) output(42,better,51) output(42,better,90) output(42,better,79) output(31,better,51) output(37,better,51) output(4,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(42,better,18) output(37,better,90) output(37,better,92) output(37,better,79) output(4,better,90) output(4,better,92) output(4,better,79) output(23,better,7) output(72,worse,31) output(76,worse,42) output(76,worse,23) output(60,worse,23) output(76,worse,7) output(60,worse,42) output(60,worse,7) output(42,worse,23) output(76,worse,37) output(60,worse,37) output(18,eq,51) output(51,eq,90) output(90,eq,79) output(60,eq,76) output(18,eq,92) output(42,eq,7) output(51,eq,79) output(18,eq,90) output(72,eq,18) output(4,eq,31) output(76,eq,51) output(72,eq,51) output(72,eq,90) output(18,eq,79) output(76,eq,18) output(60,eq,18) output(76,eq,92) output(72,eq,92) output(60,eq,92) output(76,eq,79) output(60,eq,79) output(72,eq,79) output(76,eq,90) output(60,eq,90) output(60,eq,51)
Optimization: 35 1
Answer: 4
preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(31,better,18) output(4,better,72) output(37,better,42) output(37,better,18) output(37,better,23) output(4,better,18) output(37,better,7) output(18,better,51) output(42,better,92) output(42,better,51) output(72,better,51) output(42,better,90) output(42,better,79) output(42,better,7) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(60,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(42,better,18) output(37,better,90) output(37,better,92) output(37,better,79) output(4,better,90) output(4,better,92) output(4,better,79) output(23,better,7) output(72,worse,31) output(76,worse,42) output(76,worse,23) output(60,worse,23) output(60,worse,42) output(51,worse,90) output(51,worse,79) output(42,worse,23) output(76,worse,37) output(60,worse,37) output(90,eq,79) output(60,eq,76) output(18,eq,92) output(18,eq,90) output(72,eq,18) output(4,eq,31) output(72,eq,90) output(18,eq,79) output(76,eq,18) output(60,eq,18) output(76,eq,92) output(72,eq,92) output(60,eq,92) output(76,eq,79) output(60,eq,79) output(72,eq,79) output(76,eq,90) output(60,eq,90) output(76,unc,7) output(60,unc,7)
Optimization: 30 2
Answer: 5
preference(1,(1,8),1,for(atom(hasPrep(5))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(31,better,18) output(37,better,18) output(76,better,42) output(37,better,23) output(4,better,18) output(76,better,23) output(76,better,18) output(72,better,31) output(42,better,92) output(42,better,51) output(72,better,51) output(42,better,90) output(72,better,90) output(42,better,79) output(72,better,92) output(72,better,79) output(42,better,23) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(42,better,18) output(72,better,18) output(37,better,90) output(37,better,92) output(76,better,92) output(37,better,79) output(76,better,79) output(76,better,90) output(4,better,90) output(4,better,92) output(4,better,79) output(76,better,37) output(4,worse,72) output(37,worse,7) output(76,worse,7) output(60,worse,42) output(60,worse,7) output(42,worse,7) output(23,worse,7) output(60,worse,37) output(60,worse,76) output(18,eq,51) output(51,eq,90) output(90,eq,79) output(37,eq,42) output(18,eq,92) output(51,eq,79) output(18,eq,90) output(4,eq,31) output(18,eq,79) output(60,eq,23) output(60,eq,18) output(60,eq,92) output(60,eq,79) output(60,eq,90) output(60,eq,51)
Optimization: 24 1
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,9),1,for(atom(hasCost(1))),()) preference(1,(1,10),1,for(atom(hasPrep(3))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,12),1,for(atom(hasCost(2))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,14),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,7),2,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasPrep(0))),()) preference(1,(1,9),2,for(atom(hasPrep(5))),()) preference(1,(1,10),2,for(atom(hasPrep(1))),()) preference(1,(1,11),2,for(atom(hasPrep(2))),()) preference(1,(1,12),2,for(atom(hasPrep(0))),()) preference(1,(1,13),2,for(atom(hasPrepTime(2))),()) preference(1,(1,14),2,for(atom(hasDifficulty(2))),()) preference(1,poset) output(31,better,18) output(4,better,72) output(37,better,42) output(37,better,18) output(37,better,23) output(4,better,18) output(37,better,7) output(76,better,18) output(60,better,18) output(42,better,92) output(42,better,51) output(42,better,90) output(42,better,79) output(42,better,23) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(42,better,18) output(72,better,18) output(4,better,31) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(4,better,90) output(4,better,92) output(4,better,79) output(90,better,79) output(72,worse,31) output(18,worse,92) output(18,worse,90) output(72,worse,90) output(18,worse,79) output(72,worse,92) output(72,worse,79) output(76,worse,42) output(60,worse,42) output(23,worse,7) output(76,worse,37) output(60,worse,37) output(60,worse,76) output(18,unc,51) output(51,unc,90) output(42,unc,7) output(51,unc,79) output(72,unc,51) output(76,unc,23) output(60,unc,23) output(76,unc,7) output(60,unc,7) output(60,unc,51)
Optimization: 23 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,9),1,for(atom(hasPrepTime(3))),()) preference(1,(1,10),1,for(atom(hasPrepTime(1))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,12),1,for(atom(hasPrep(5))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,14),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,7),2,for(atom(hasPrepTime(3))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,(1,9),2,for(atom(hasPrep(7))),()) preference(1,(1,10),2,for(atom(hasCost(2))),()) preference(1,(1,11),2,for(atom(hasPrep(2))),()) preference(1,(1,12),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasCost(1))),()) preference(1,(1,14),2,for(atom(hasDifficulty(2))),()) preference(1,poset) output(31,better,18) output(76,better,42) output(37,better,23) output(76,better,23) output(60,better,23) output(37,better,7) output(76,better,7) output(76,better,18) output(60,better,7) output(72,better,31) output(18,better,51) output(42,better,51) output(72,better,51) output(72,better,90) output(72,better,92) output(72,better,79) output(42,better,23) output(42,better,7) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(60,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(72,better,18) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(4,better,90) output(76,better,37) output(4,worse,72) output(51,worse,90) output(51,worse,79) output(4,worse,31) output(42,worse,18) output(90,worse,79) output(23,worse,7) output(60,worse,76) output(4,eq,92) output(4,eq,79) output(37,unc,42) output(18,unc,92) output(42,unc,92) output(37,unc,18) output(60,unc,37) output(18,unc,90) output(4,unc,18) output(42,unc,90) output(18,unc,79) output(42,unc,79) output(60,unc,42) output(60,unc,18)
Optimization: 22 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,9),1,for(atom(hasPrepTime(3))),()) preference(1,(1,10),1,for(atom(hasPrep(2))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,12),1,for(atom(hasPrep(5))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,14),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,7),2,for(atom(hasPrepTime(3))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,(1,9),2,for(atom(hasPrep(7))),()) preference(1,(1,10),2,for(atom(hasCost(2))),()) preference(1,(1,11),2,for(atom(hasPrep(2))),()) preference(1,(1,12),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasCost(1))),()) preference(1,(1,14),2,for(atom(hasDifficulty(2))),()) preference(1,poset) output(31,better,18) output(37,better,42) output(76,better,42) output(37,better,23) output(76,better,23) output(60,better,23) output(37,better,7) output(76,better,7) output(60,better,42) output(76,better,18) output(60,better,18) output(60,better,7) output(72,better,31) output(18,better,51) output(42,better,51) output(72,better,51) output(72,better,90) output(72,better,92) output(72,better,79) output(42,better,23) output(42,better,7) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(60,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(72,better,18) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(4,better,90) output(76,better,37) output(4,worse,72) output(51,worse,90) output(51,worse,79) output(4,worse,31) output(42,worse,18) output(90,worse,79) output(23,worse,7) output(60,worse,76) output(4,eq,92) output(4,eq,79) output(18,unc,92) output(42,unc,92) output(37,unc,18) output(60,unc,37) output(18,unc,90) output(4,unc,18) output(42,unc,90) output(18,unc,79) output(42,unc,79)
Optimization: 19 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasPrepTime(3))),()) preference(1,(1,9),1,for(atom(hasPrepTime(3))),()) preference(1,(1,10),1,for(atom(hasPrep(5))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,12),1,for(atom(hasPrep(5))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,14),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,7),2,for(atom(hasPrepTime(3))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,(1,9),2,for(atom(hasPrep(7))),()) preference(1,(1,10),2,for(atom(hasPrepTime(1))),()) preference(1,(1,11),2,for(atom(hasPrep(2))),()) preference(1,(1,12),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasCost(1))),()) preference(1,(1,14),2,for(atom(hasDifficulty(2))),()) preference(1,poset) output(31,better,18) output(37,better,42) output(37,better,18) output(76,better,42) output(37,better,23) output(76,better,23) output(60,better,23) output(37,better,7) output(76,better,7) output(60,better,42) output(76,better,18) output(60,better,18) output(60,better,7) output(72,better,31) output(18,better,51) output(42,better,51) output(72,better,51) output(72,better,90) output(72,better,92) output(72,better,79) output(42,better,23) output(42,better,7) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(60,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(72,better,18) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(4,better,90) output(76,better,37) output(42,worse,92) output(42,worse,79) output(4,worse,72) output(51,worse,90) output(51,worse,79) output(4,worse,31) output(42,worse,18) output(90,worse,79) output(23,worse,7) output(60,worse,76) output(4,eq,92) output(4,eq,79) output(18,unc,92) output(60,unc,37) output(18,unc,90) output(4,unc,18) output(42,unc,90) output(18,unc,79)
Optimization: 18 14
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,7),1,for(atom(hasPrep(0))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,9),1,for(atom(hasPrepTime(3))),()) preference(1,(1,10),1,for(atom(hasPrep(5))),()) preference(1,(1,11),1,for(atom(hasDifficulty(2))),()) preference(1,(1,12),1,for(atom(hasPrepTime(1))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,14),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,7),2,for(atom(hasPrepTime(3))),()) preference(1,(1,8),2,for(atom(hasPrep(0))),()) preference(1,(1,9),2,for(atom(hasPrep(7))),()) preference(1,(1,10),2,for(atom(hasCost(1))),()) preference(1,(1,11),2,for(atom(hasPrepTime(1))),()) preference(1,(1,12),2,for(atom(hasCost(2))),()) preference(1,(1,13),2,for(atom(hasPrep(2))),()) preference(1,(1,14),2,for(atom(hasDifficulty(2))),()) preference(1,poset) output(31,better,18) output(37,better,42) output(37,better,18) output(76,better,42) output(37,better,23) output(4,better,18) output(76,better,23) output(60,better,23) output(37,better,7) output(76,better,7) output(60,better,42) output(76,better,18) output(60,better,18) output(60,better,7) output(72,better,31) output(18,better,51) output(42,better,51) output(72,better,51) output(72,better,90) output(72,better,92) output(72,better,79) output(42,better,23) output(42,better,7) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(60,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(72,better,18) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(4,better,90) output(76,better,37) output(18,worse,92) output(42,worse,92) output(18,worse,90) output(42,worse,90) output(18,worse,79) output(42,worse,79) output(4,worse,72) output(51,worse,90) output(51,worse,79) output(4,worse,31) output(42,worse,18) output(90,worse,79) output(23,worse,7) output(60,worse,76) output(4,eq,92) output(4,eq,79) output(60,unc,37)
Optimization: 17 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,7),1,for(atom(hasPrepTime(1))),()) preference(1,(1,8),1,for(atom(hasPrep(4))),()) preference(1,(1,9),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasPrep(3))),()) preference(1,(1,11),1,for(atom(hasDifficulty(2))),()) preference(1,(1,12),1,for(atom(hasPrepTime(3))),()) preference(1,(1,13),1,for(atom(hasPrep(5))),()) preference(1,(1,14),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasPrep(3))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasCost(2))),()) preference(1,(1,5),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,7),2,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,(1,9),2,for(atom(hasPrep(2))),()) preference(1,(1,10),2,for(atom(hasCost(1))),()) preference(1,(1,11),2,for(atom(hasPrep(7))),()) preference(1,(1,12),2,for(atom(hasCost(1))),()) preference(1,(1,13),2,for(atom(hasPrepTime(3))),()) preference(1,(1,14),2,for(atom(hasPrep(4))),()) preference(1,poset) output(31,better,18) output(4,better,72) output(37,better,18) output(37,better,23) output(4,better,18) output(76,better,23) output(76,better,18) output(18,better,51) output(18,better,92) output(42,better,92) output(18,better,90) output(42,better,51) output(72,better,51) output(42,better,90) output(72,better,90) output(18,better,79) output(42,better,79) output(72,better,92) output(72,better,79) output(42,better,23) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(51,better,90) output(51,better,79) output(31,better,92) output(31,better,90) output(31,better,79) output(42,better,18) output(72,better,18) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(4,better,90) output(4,better,92) output(4,better,79) output(90,better,79) output(72,worse,31) output(76,worse,42) output(60,worse,23) output(37,worse,7) output(76,worse,7) output(60,worse,42) output(60,worse,18) output(60,worse,7) output(42,worse,7) output(60,worse,51) output(4,worse,31) output(23,worse,7) output(76,worse,37) output(60,worse,37) output(60,worse,76) output(37,unc,42)
Optimization: 16 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,7),1,for(atom(hasPrep(5))),()) preference(1,(1,8),1,for(atom(hasPrepTime(3))),()) preference(1,(1,9),1,for(atom(hasPrep(5))),()) preference(1,(1,10),1,for(atom(hasPrepTime(1))),()) preference(1,(1,11),1,for(atom(hasDifficulty(1))),()) preference(1,(1,13),1,for(atom(hasPrep(7))),()) preference(1,(1,14),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,7),2,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(0))),()) preference(1,(1,9),2,for(atom(hasPrep(6))),()) preference(1,(1,10),2,for(atom(hasPrep(5))),()) preference(1,(1,11),2,for(atom(hasPrep(6))),()) preference(1,(1,13),2,for(atom(hasPrepTime(1))),()) preference(1,(1,14),2,for(atom(hasPrepTime(3))),()) preference(1,poset) output(4,better,72) output(37,better,42) output(37,better,18) output(76,better,42) output(37,better,23) output(76,better,23) output(60,better,23) output(37,better,7) output(76,better,7) output(60,better,42) output(60,better,18) output(60,better,7) output(18,better,51) output(18,better,92) output(42,better,92) output(18,better,90) output(42,better,51) output(72,better,51) output(42,better,90) output(72,better,90) output(18,better,79) output(42,better,79) output(42,better,23) output(42,better,7) output(31,better,51) output(37,better,51) output(76,better,51) output(4,better,51) output(60,better,51) output(31,better,92) output(31,better,90) output(31,better,79) output(37,better,90) output(37,better,92) output(76,better,92) output(60,better,92) output(37,better,79) output(76,better,79) output(60,better,79) output(76,better,90) output(60,better,90) output(60,better,76) output(4,better,90) output(4,better,92) output(4,better,79) output(72,worse,31) output(72,worse,92) output(72,worse,79) output(31,worse,18) output(4,worse,18) output(76,worse,18) output(51,worse,90) output(51,worse,79) output(4,worse,31) output(42,worse,18) output(72,worse,18) output(90,worse,79) output(23,worse,7) output(76,worse,37) output(60,worse,37)
Optimization: 15 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.028 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 15 12
Calls        : 1
Time         : 296.481s (Solving: 291.02s 1st Model: 0.91s Unsat: 0.00s)
CPU Time     : 1168.732s
Threads      : 4        (Winner: 4)

Choices      : 13123898 (Domain: 5266)
Conflicts    : 103000   (Analyzed: 103000)
Restarts     : 111      (Average: 927.93 Last: 8260)
Model-Level  : 2191.7  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 8591660  (Deleted: 8476644)
  Binary     : 2963     (Ratio:   0.03%)
  Ternary    : 36017    (Ratio:   0.42%)
  Conflict   : 103000   (Average Length: 1026.4 Ratio:   1.20%) 
  Loop       : 8441257  (Average Length:  235.7 Ratio:  98.25%) 
  Other      : 47403    (Average Length:    3.9 Ratio:   0.55%) 
  Distributed: 16078    (Ratio:   0.19% Average LBD: 2.80) 
  Integrated : 48231    (Ratio: 299.98% Unit: 560 Average Jumps: 1555.83)
Backjumps    : 103000   (Average: 114.84 Max: 211096 Sum: 11828548)
  Executed   : 102921   (Average: 114.84 Max: 211096 Sum: 11828332 Ratio: 100.00%)
  Bounded    : 79       (Average:  2.73 Max:  61 Sum:    216 Ratio:   0.00%)

Rules        : 1226578 
  Choice     : 43      
  Minimize   : 2       
Atoms        : 32440   
Bodies       : 803571  
  Count      : 56      
Equivalences : 29914    (Atom=Atom: 5431 Body=Body: 6862 Other: 17621)
Tight        : No       (SCCs: 61 Non-Hcfs: 0 Nodes: 755580 Gammas: 0)
Variables    : 768546   (Eliminated:    0 Frozen: 759010)
Constraints  : 4575427  (Binary:  82.8% Ternary:   3.9% Other:  13.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(5)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(1)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(3)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(1)) >> atom(hasCost(1)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(2)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(2)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(0)) ; 
  atom(hasCost(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(2)) ; 
  atom(hasCost(2)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(5)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(7)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(2)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(5)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(2)) >> atom(hasCost(2)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(5)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(5)) ; 
  atom(hasCost(1)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasDifficulty(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(5)) ; 
  atom(hasCost(1)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(3)) ; 
  atom(hasCost(1)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(5)) >> atom(hasCost(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) ; 
  atom(hasDifficulty(2)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(5)) >> atom(hasCost(2)) ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(2)) ; 
  atom(hasCost(1)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(3)) >> atom(hasCost(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrepTime(3)) >> atom(hasCost(1)) ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(3)) ; 
  atom(hasCost(2)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(0)) >> atom(hasPrep(7)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) ; 
  atom(hasCost(1)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(1)) >> atom(hasCost(1)) ; 
  atom(hasPrep(5)) >> atom(hasCost(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(5)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrepTime(3)) 
}.
