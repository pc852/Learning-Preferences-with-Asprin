asprin_vL version 1.0
Reading from stdin
-:1259:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1269:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1284:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1365:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1626:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1639:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1816:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1945:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2017:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2021:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2021:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2027:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2126:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2152:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2272:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2328:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1176:1-16: info: no atoms over signature occur in program:
  output/3

-:1168:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1169:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(79,eq,88) output(88,eq,49) output(49,eq,28) output(28,eq,86) output(86,eq,65) output(95,eq,98) output(50,eq,22) output(22,eq,19) output(19,eq,86) output(86,eq,68) output(68,eq,88) output(100,eq,28) output(86,eq,88) output(28,eq,68) output(19,eq,68) output(22,eq,86) output(50,eq,19) output(28,eq,65) output(19,eq,65) output(49,eq,86) output(100,eq,86) output(88,eq,28) output(79,eq,49) output(68,eq,49) output(86,eq,49) output(28,eq,49) output(19,eq,49) output(79,eq,28) output(68,eq,28) output(86,eq,28) output(88,eq,86) output(79,eq,86) output(68,eq,86) output(22,eq,65) output(50,eq,65) output(49,eq,65) output(100,eq,65) output(88,eq,65) output(50,eq,86) output(22,eq,68) output(50,eq,68) output(49,eq,68) output(100,eq,68) output(88,eq,68) output(28,eq,88) output(19,eq,88) output(22,eq,88) output(49,eq,88) output(100,eq,88) output(88,eq,88) output(50,eq,88) output(79,eq,68) output(68,eq,68) output(79,eq,65) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(22,eq,28) output(50,eq,28) output(22,eq,49) output(50,eq,49) output(49,eq,49) output(100,eq,49)
Optimization: 64 0
Progression : [ 8;64] (Error: 7)
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(22,better,65) output(50,better,65) output(79,better,65) output(86,better,65) output(19,better,65) output(28,better,65) output(49,better,65) output(68,better,65) output(88,better,65) output(100,better,65) output(79,eq,88) output(88,eq,49) output(49,eq,28) output(28,eq,86) output(95,eq,98) output(50,eq,22) output(22,eq,19) output(19,eq,86) output(86,eq,68) output(68,eq,88) output(100,eq,28) output(86,eq,88) output(28,eq,68) output(19,eq,68) output(22,eq,86) output(50,eq,19) output(49,eq,86) output(100,eq,86) output(88,eq,28) output(79,eq,49) output(68,eq,49) output(86,eq,49) output(28,eq,49) output(19,eq,49) output(79,eq,28) output(68,eq,28) output(86,eq,28) output(88,eq,86) output(79,eq,86) output(68,eq,86) output(50,eq,86) output(22,eq,68) output(50,eq,68) output(49,eq,68) output(100,eq,68) output(88,eq,68) output(28,eq,88) output(19,eq,88) output(22,eq,88) output(49,eq,88) output(100,eq,88) output(88,eq,88) output(50,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(22,eq,28) output(50,eq,28) output(22,eq,49) output(50,eq,49) output(49,eq,49) output(100,eq,49)
Optimization: 54 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(4))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,68) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,68) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,88) output(49,better,68) output(49,better,88) output(100,better,28) output(100,better,68) output(100,better,88) output(100,better,49) output(50,worse,22) output(50,worse,19) output(50,worse,65) output(50,worse,86) output(50,worse,28) output(50,worse,49) output(79,worse,86) output(79,worse,65) output(86,worse,65) output(95,worse,98) output(19,worse,86) output(19,worse,65) output(28,worse,86) output(28,worse,65) output(49,worse,86) output(49,worse,65) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(68,worse,65) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(88,worse,65) output(100,worse,86) output(100,worse,65) output(49,eq,28) output(68,eq,88) output(28,eq,49) output(22,eq,65) output(50,eq,68) output(88,eq,68) output(88,eq,88) output(50,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 38 10
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(4))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(28,better,88) output(49,better,65) output(49,better,68) output(49,better,88) output(100,better,28) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(50,worse,22) output(50,worse,19) output(50,worse,86) output(50,worse,28) output(50,worse,49) output(79,worse,86) output(95,worse,98) output(19,worse,86) output(28,worse,86) output(49,worse,86) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(100,worse,86) output(49,eq,28) output(68,eq,88) output(28,eq,49) output(50,eq,65) output(88,eq,65) output(50,eq,68) output(88,eq,68) output(88,eq,88) output(50,eq,88) output(68,eq,68) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 31 10
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasPrep(3))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,88) output(49,better,68) output(49,better,88) output(100,better,28) output(100,better,68) output(100,better,88) output(100,better,49) output(22,worse,86) output(50,worse,86) output(95,worse,98) output(19,worse,86) output(28,worse,86) output(28,worse,65) output(49,worse,86) output(49,worse,65) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(68,worse,65) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(88,worse,65) output(100,worse,86) output(49,eq,28) output(22,eq,19) output(68,eq,88) output(28,eq,49) output(100,eq,65) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 28 13
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrep(4))),1) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(19,better,65) output(28,better,65) output(28,better,49) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,65) output(88,better,49) output(88,better,28) output(88,better,65) output(100,better,65) output(100,better,49) output(50,worse,22) output(50,worse,86) output(79,worse,86) output(19,worse,86) output(19,worse,68) output(19,worse,88) output(19,worse,28) output(28,worse,86) output(28,worse,68) output(28,worse,88) output(49,worse,28) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(68,worse,86) output(88,worse,86) output(100,worse,28) output(100,worse,86) output(100,worse,68) output(100,worse,88) output(68,eq,88) output(19,eq,49) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 28 10
Progression : [ 9;28] (Error: 2.11111)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),7) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,65) output(86,better,65) output(19,better,86) output(19,better,65) output(19,better,28) output(28,better,86) output(28,better,65) output(49,better,28) output(49,better,86) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(86,worse,68) output(86,worse,88) output(86,worse,49) output(86,worse,28) output(95,worse,98) output(19,worse,68) output(19,worse,88) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(49,worse,68) output(49,worse,88) output(100,worse,68) output(100,worse,88) output(79,eq,88) output(68,eq,88) output(19,eq,49) output(88,eq,68) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49) output(100,eq,49)
Optimization: 25 8
Progression : [10;25] (Error: 1.5)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,49) output(86,better,28) output(95,better,98) output(19,better,65) output(28,better,65) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(100,better,28) output(100,better,65) output(100,better,49) output(86,worse,68) output(86,worse,88) output(19,worse,86) output(19,worse,68) output(19,worse,88) output(28,worse,86) output(28,worse,68) output(28,worse,88) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(100,worse,86) output(100,worse,68) output(100,worse,88) output(49,eq,28) output(68,eq,88) output(28,eq,49) output(19,eq,49) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(49,eq,49)
Optimization: 25 7
Answer: 9
preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,88) output(28,better,86) output(28,better,68) output(28,better,65) output(28,better,88) output(49,better,86) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(86,worse,49) output(86,worse,28) output(95,worse,98) output(68,worse,49) output(68,worse,28) output(88,worse,49) output(88,worse,28) output(49,eq,28) output(86,eq,68) output(68,eq,88) output(100,eq,28) output(86,eq,88) output(28,eq,49) output(19,eq,49) output(88,eq,86) output(68,eq,86) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(49,eq,49) output(100,eq,49)
Optimization: 24 4
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,88) output(19,better,28) output(28,better,65) output(49,better,28) output(49,better,86) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,28) output(68,better,65) output(88,better,28) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(86,worse,49) output(95,worse,98) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(68,worse,49) output(88,worse,49) output(86,eq,68) output(68,eq,88) output(86,eq,88) output(19,eq,49) output(88,eq,86) output(68,eq,86) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49) output(100,eq,49)
Optimization: 21 5
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(22,better,19) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,68) output(19,better,65) output(19,better,88) output(19,better,28) output(28,better,65) output(49,better,28) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,28) output(68,better,65) output(88,better,28) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(95,worse,98) output(19,worse,86) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(49,worse,86) output(68,worse,49) output(68,worse,86) output(88,worse,49) output(88,worse,86) output(68,eq,88) output(22,eq,86) output(19,eq,49) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 20 7
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(3))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasPrep(4))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(22,better,19) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(28,better,49) output(28,better,88) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,28) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(22,worse,86) output(19,worse,86) output(28,worse,86) output(49,worse,28) output(49,worse,86) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(100,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 19 13
Progression : [11;19] (Error: 0.727273)
Answer: 13
preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(49,better,28) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,28) output(68,better,65) output(88,better,28) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(50,worse,22) output(95,worse,98) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(49,worse,86) output(68,worse,49) output(68,worse,86) output(88,worse,49) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 18 10
Answer: 14
preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrep(4))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(28,better,88) output(49,better,28) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(50,worse,22) output(95,worse,98) output(28,worse,86) output(28,worse,49) output(49,worse,86) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 18 9
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(4))),2) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(49,better,28) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,28) output(68,better,65) output(88,better,28) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(95,worse,98) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(49,worse,86) output(68,worse,49) output(68,worse,86) output(88,worse,49) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasCost(1))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(49,better,28) output(49,better,86) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,28) output(68,better,65) output(88,better,28) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(86,worse,49) output(95,worse,98) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(68,worse,49) output(68,worse,86) output(88,worse,49) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 11
Progression : [17;17] (Error: 0)
Answer: 17
preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(28,better,49) output(28,better,88) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(95,worse,98) output(28,worse,86) output(49,worse,28) output(49,worse,86) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 10
Answer: 18
preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(28,better,49) output(28,better,88) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(95,worse,98) output(28,worse,86) output(49,worse,28) output(49,worse,86) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 9
Answer: 19
preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(28,better,49) output(28,better,88) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(95,worse,98) output(28,worse,86) output(49,worse,28) output(49,worse,86) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 8
Answer: 20
preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,86) output(28,better,68) output(28,better,65) output(28,better,49) output(28,better,88) output(49,better,86) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(86,worse,49) output(86,worse,28) output(95,worse,98) output(49,worse,28) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 7
Progression : 17 [1;7] (Error: 6)
Progression : 17 [2;7] (Error: 2.5)
Progression : 17 [3;7] (Error: 1.33333)
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(86,better,65) output(86,better,28) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(49,better,28) output(49,better,86) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(86,worse,68) output(86,worse,88) output(86,worse,49) output(95,worse,98) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(49,worse,68) output(49,worse,88) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 17 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.044 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 17 6
Bounds       : 17 [3;6]
Calls        : 1
Time         : 297.035s (Solving: 295.30s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1182.176s
Threads      : 4        (Winner: 4)

Choices      : 11101467 (Domain: 1019838)
Conflicts    : 7444479  (Analyzed: 7444465)
Restarts     : 6984     (Average: 1065.93 Last: 99470)
Model-Level  : 120.2   
Problems     : 21       (Average Length: 0.19 Splits: 0)
Lemmas       : 7555854  (Deleted: 7257306)
  Binary     : 1129     (Ratio:   0.01%)
  Ternary    : 7199     (Ratio:   0.10%)
  Conflict   : 7444465  (Average Length:  213.3 Ratio:  98.53%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 111389   (Average Length:  187.6 Ratio:   1.47%) 
  Distributed: 37178    (Ratio:   0.50% Average LBD: 3.78) 
  Integrated : 111534   (Ratio: 300.00% Unit: 166 Average Jumps: 18.25)
Backjumps    : 7444465  (Average:  1.40 Max: 554 Sum: 10443296)
  Executed   : 7444450  (Average:  1.40 Max: 554 Sum: 10443154 Ratio: 100.00%)
  Bounded    : 15       (Average:  9.47 Max:  27 Sum:    142 Ratio:   0.00%)

Rules        : 142327  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 11860   
Bodies       : 5911    
  Sum        : 94      
  Count      : 14      
Equivalences : 7376     (Atom=Atom: 705 Body=Body: 343 Other: 6328)
Tight        : Yes
Variables    : 4836     (Eliminated:    0 Frozen: 3366)
Constraints  : 138513   (Binary:  97.7% Ternary:   1.1% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) 
}.
