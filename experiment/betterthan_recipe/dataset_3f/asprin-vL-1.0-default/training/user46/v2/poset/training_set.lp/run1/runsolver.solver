asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1247:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1923:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1148:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(46,eq,50) output(68,eq,88) preference(1,poset) output(50,eq,22) output(22,eq,19) output(19,eq,86) output(100,eq,28) output(50,eq,54) output(54,eq,67) output(67,eq,100) output(100,eq,52) output(65,eq,73) output(98,eq,63) output(67,eq,52) output(54,eq,100) output(50,eq,67) output(46,eq,54) output(67,eq,28) output(22,eq,86) output(50,eq,19) output(46,eq,22) output(46,eq,19) output(50,eq,86) output(46,eq,86) output(54,eq,28) output(50,eq,28) output(46,eq,67) output(50,eq,100) output(46,eq,100) output(54,eq,52) output(50,eq,52) output(46,eq,52) output(46,eq,28)
Optimization: 32 0
Answer: 2
output(46,eq,50) output(68,eq,88) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(3))),()) preference(1,poset) output(65,better,73) output(50,eq,22) output(22,eq,19) output(19,eq,86) output(100,eq,28) output(50,eq,54) output(54,eq,67) output(67,eq,100) output(100,eq,52) output(98,eq,63) output(67,eq,52) output(54,eq,100) output(50,eq,67) output(46,eq,54) output(67,eq,28) output(22,eq,86) output(50,eq,19) output(46,eq,22) output(46,eq,19) output(50,eq,86) output(46,eq,86) output(54,eq,28) output(50,eq,28) output(46,eq,67) output(50,eq,100) output(46,eq,100) output(54,eq,52) output(50,eq,52) output(46,eq,52) output(46,eq,28)
Optimization: 31 1
Answer: 3
output(46,eq,50) output(68,eq,88) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(19,better,86) output(65,better,73) output(54,better,67) output(98,better,63) output(22,worse,19) output(67,worse,100) output(67,worse,28) output(50,worse,19) output(46,worse,19) output(50,worse,28) output(50,worse,100) output(46,worse,100) output(46,worse,28) output(50,worse,54) output(46,worse,54) output(50,worse,52) output(46,worse,52) output(67,worse,52) output(50,eq,22) output(100,eq,28) output(100,eq,52) output(54,eq,100) output(50,eq,67) output(22,eq,86) output(46,eq,22) output(50,eq,86) output(46,eq,86) output(54,eq,28) output(46,eq,67) output(54,eq,52)
Optimization: 28 1
Answer: 4
output(46,eq,50) output(68,eq,88) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,poset) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(19,better,86) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(65,better,73) output(22,worse,19) output(100,eq,28) output(54,eq,67) output(67,eq,100) output(100,eq,52) output(98,eq,63) output(67,eq,52) output(54,eq,100) output(67,eq,28) output(22,eq,86) output(50,eq,19) output(46,eq,19) output(54,eq,28) output(54,eq,52)
Optimization: 16 1
Answer: 5
output(46,eq,50) output(68,eq,88) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,poset) output(67,better,100) output(54,better,100) output(50,better,19) output(46,better,19) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(65,better,73) output(100,worse,52) output(100,worse,28) output(54,eq,67) output(98,eq,63) output(67,eq,52) output(22,eq,86) output(54,eq,52) output(22,unc,19) output(19,unc,86) output(67,unc,28) output(54,unc,28)
Optimization: 13 2
Answer: 6
output(46,eq,50) output(68,eq,88) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,poset) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(65,better,73) output(100,worse,52) output(100,eq,28) output(54,eq,67) output(98,eq,63) output(67,eq,52) output(22,eq,86) output(54,eq,52) output(22,unc,19) output(19,unc,86)
Optimization: 11 2
Answer: 7
output(46,eq,50) output(68,eq,88) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,poset) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(100,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(65,better,73) output(100,worse,52) output(54,eq,67) output(98,eq,63) output(67,eq,52) output(22,eq,86) output(54,eq,52) output(22,unc,19) output(19,unc,86)
Optimization: 10 3
Answer: 8
output(46,eq,50) output(68,eq,88) preference(1,(1,11),1,for(atom(hasCost(1))),()) preference(1,(1,14),1,for(atom(hasCost(1))),()) preference(1,(1,11),2,for(atom(hasPrep(2))),()) preference(1,(1,14),2,for(atom(hasDifficulty(1))),()) preference(1,poset) output(22,better,19) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(100,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(19,worse,86) output(100,worse,52) output(54,eq,67) output(65,eq,73) output(98,eq,63) output(67,eq,52) output(22,eq,86) output(54,eq,52)
Optimization: 10 2
Answer: 9
output(46,eq,50) output(68,eq,88) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,poset) output(22,better,19) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(100,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(22,better,86) output(19,worse,86) output(100,worse,52) output(54,eq,67) output(65,eq,73) output(98,eq,63) output(67,eq,52) output(54,eq,52)
Optimization: 9 2
Answer: 10
output(46,eq,50) output(68,eq,88) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,poset) output(22,better,19) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(100,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(22,better,86) output(65,better,73) output(19,worse,86) output(100,worse,52) output(54,eq,67) output(98,eq,63) output(67,eq,52) output(54,eq,52)
Optimization: 8 4
Answer: 11
output(46,eq,50) output(68,eq,88) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,14),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,(1,14),2,for(atom(hasPrep(5))),()) preference(1,poset) output(22,better,19) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(100,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(22,better,86) output(65,better,73) output(67,better,52) output(19,worse,86) output(100,worse,52) output(54,worse,67) output(98,eq,63) output(54,eq,52)
Optimization: 7 5
Answer: 12
output(46,eq,50) output(68,eq,88) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,7),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,13),1,for(atom(hasPrep(5))),()) preference(1,(1,14),1,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,7),2,for(atom(hasPrep(5))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,(1,13),2,for(atom(hasPrep(1))),()) preference(1,(1,14),2,for(atom(hasPrep(5))),()) preference(1,poset) output(22,better,19) output(67,better,100) output(54,better,100) output(67,better,28) output(50,better,19) output(46,better,19) output(54,better,28) output(50,better,28) output(50,better,100) output(46,better,100) output(46,better,28) output(100,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(46,better,54) output(46,better,22) output(50,better,86) output(46,better,86) output(46,better,67) output(50,better,52) output(46,better,52) output(22,better,86) output(65,better,73) output(98,better,63) output(67,better,52) output(19,worse,86) output(100,worse,52) output(54,worse,67) output(54,eq,52)
Optimization: 6 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.036 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 6 5
Calls        : 1
Time         : 296.755s (Solving: 292.02s 1st Model: 0.75s Unsat: 0.00s)
CPU Time     : 1172.032s
Threads      : 4        (Winner: 4)

Choices      : 1657732  (Domain: 2841)
Conflicts    : 140435   (Analyzed: 140435)
Restarts     : 167      (Average: 840.93 Last: 9283)
Model-Level  : 892.8   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 9127919  (Deleted: 9021240)
  Binary     : 1572     (Ratio:   0.02%)
  Ternary    : 32196    (Ratio:   0.35%)
  Conflict   : 140435   (Average Length:  880.1 Ratio:   1.54%) 
  Loop       : 8937868  (Average Length:  134.1 Ratio:  97.92%) 
  Other      : 49616    (Average Length:    3.8 Ratio:   0.54%) 
  Distributed: 16545    (Ratio:   0.18% Average LBD: 2.79) 
  Integrated : 49621    (Ratio: 299.92% Unit: 124 Average Jumps: 668.18)
Backjumps    : 140435   (Average:  9.84 Max: 34383 Sum: 1381247)
  Executed   : 140408   (Average:  9.83 Max: 34383 Sum: 1381166 Ratio:  99.99%)
  Bounded    : 27       (Average:  3.00 Max:  31 Sum:     81 Ratio:   0.01%)

Rules        : 967985  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 21289   
Bodies       : 721543  
  Count      : 56      
Equivalences : 23289    (Atom=Atom: 4009 Body=Body: 5628 Other: 13652)
Tight        : No       (SCCs: 33 Non-Hcfs: 0 Nodes: 673260 Gammas: 0)
Variables    : 681724   (Eliminated:    0 Frozen: 675286)
Constraints  : 4080038  (Binary:  82.8% Ternary:   2.5% Other:  14.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(1)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(1)) >> atom(hasPrep(2)) ; 
  atom(hasCost(1)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasCost(1)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(2)) ; 
  atom(hasPrep(2)) >> atom(hasCost(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasCost(1)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(5)) >> atom(hasCost(2)) ; 
  atom(hasPrep(7)) >> atom(hasCost(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasCost(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(5)) ; 
  atom(hasCost(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(5)) 
}.
