asprin_vL version 1.0
Reading from stdin
-:1257:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1267:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1282:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1363:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1624:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1637:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1814:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1943:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2015:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2019:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2025:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2124:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2150:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2270:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2326:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1174:1-16: info: no atoms over signature occur in program:
  output/3

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(33,eq,78) output(78,eq,7) output(7,eq,39) output(39,eq,60) output(79,eq,52) output(52,eq,46) output(18,eq,23) output(23,eq,78) output(78,eq,31) output(42,eq,51) output(51,eq,90) output(90,eq,7) output(7,eq,79) output(78,eq,79) output(90,eq,79) output(51,eq,7) output(42,eq,90) output(33,eq,31) output(23,eq,31) output(18,eq,78) output(79,eq,46) output(7,eq,52) output(7,eq,60) output(78,eq,39) output(90,eq,39) output(33,eq,7) output(23,eq,7) output(18,eq,7) output(51,eq,39) output(42,eq,39) output(33,eq,39) output(23,eq,39) output(18,eq,39) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(33,eq,60) output(23,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(7,eq,46) output(78,eq,46) output(90,eq,46) output(18,eq,31) output(42,eq,7) output(51,eq,79) output(42,eq,79) output(33,eq,79) output(23,eq,79) output(18,eq,79) output(51,eq,46) output(42,eq,46) output(33,eq,46) output(23,eq,46) output(18,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 62 0
Answer: 2
preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(39,better,60) output(52,better,46) output(79,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,46) output(18,better,60) output(33,better,78) output(33,better,7) output(33,better,60) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,7) output(42,better,46) output(42,better,60) output(51,worse,39) output(51,worse,52) output(51,worse,79) output(90,worse,79) output(90,worse,39) output(90,worse,52) output(7,worse,39) output(7,worse,79) output(7,worse,52) output(23,worse,31) output(23,worse,39) output(23,worse,52) output(23,worse,79) output(78,worse,31) output(78,worse,79) output(78,worse,39) output(78,worse,52) output(78,eq,7) output(79,eq,52) output(23,eq,78) output(51,eq,90) output(90,eq,7) output(51,eq,7) output(33,eq,31) output(7,eq,60) output(23,eq,7) output(42,eq,39) output(33,eq,39) output(18,eq,39) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(23,eq,60) output(33,eq,52) output(7,eq,46) output(78,eq,46) output(90,eq,46) output(18,eq,31) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(51,eq,46) output(23,eq,46) output(18,eq,52) output(42,eq,52)
Optimization: 45 2
Progression : [ 1;45] (Error: 44)
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasPrep(3))),1) preference(1,(1,5),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(51,better,7) output(51,better,39) output(90,better,7) output(90,better,39) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(23,better,7) output(23,better,39) output(33,better,78) output(33,better,7) output(33,better,39) output(42,better,51) output(42,better,39) output(42,better,7) output(78,better,7) output(78,better,39) output(39,worse,60) output(51,worse,90) output(51,worse,60) output(51,worse,52) output(51,worse,79) output(51,worse,46) output(7,worse,39) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(7,worse,46) output(23,worse,31) output(23,worse,60) output(23,worse,52) output(23,worse,79) output(23,worse,46) output(78,worse,31) output(78,worse,79) output(78,worse,60) output(78,worse,52) output(78,worse,46) output(79,eq,52) output(52,eq,46) output(23,eq,78) output(90,eq,79) output(42,eq,90) output(33,eq,31) output(79,eq,46) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(90,eq,46) output(18,eq,31) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(42,eq,46) output(33,eq,46) output(18,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 44 5
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),5) preference(1,(1,13),1,for(atom(hasPrep(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,31) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,worse,7) output(18,worse,23) output(18,worse,78) output(18,worse,7) output(33,worse,78) output(33,worse,7) output(42,worse,51) output(42,worse,7) output(78,eq,7) output(39,eq,60) output(79,eq,52) output(52,eq,46) output(23,eq,78) output(90,eq,79) output(51,eq,7) output(42,eq,90) output(33,eq,31) output(79,eq,46) output(90,eq,39) output(23,eq,7) output(42,eq,39) output(33,eq,39) output(18,eq,39) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(90,eq,46) output(18,eq,31) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(42,eq,46) output(33,eq,46) output(18,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 39 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(90,better,7) output(90,better,39) output(7,better,39) output(18,better,23) output(18,better,7) output(18,better,39) output(23,better,39) output(33,better,7) output(33,better,39) output(42,better,39) output(42,better,7) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(7,worse,46) output(18,worse,78) output(23,worse,78) output(23,worse,31) output(23,worse,60) output(23,worse,52) output(23,worse,79) output(23,worse,46) output(33,worse,78) output(42,worse,51) output(79,eq,52) output(52,eq,46) output(90,eq,79) output(42,eq,90) output(33,eq,31) output(79,eq,46) output(23,eq,7) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(90,eq,46) output(18,eq,31) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(42,eq,46) output(33,eq,46) output(18,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 37 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(90,better,7) output(90,better,39) output(7,better,39) output(18,better,7) output(18,better,39) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,7) output(33,better,39) output(42,better,39) output(42,better,7) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(7,worse,46) output(18,worse,23) output(18,worse,78) output(33,worse,78) output(42,worse,51) output(79,eq,52) output(52,eq,46) output(23,eq,78) output(90,eq,79) output(42,eq,90) output(33,eq,31) output(79,eq,46) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(90,eq,46) output(18,eq,31) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(42,eq,46) output(33,eq,46) output(18,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 32 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,60) output(51,better,52) output(51,better,79) output(90,better,79) output(90,better,60) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,79) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,60) output(33,better,79) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(51,worse,7) output(52,worse,46) output(79,worse,52) output(79,worse,46) output(90,worse,7) output(90,worse,39) output(90,worse,46) output(18,worse,23) output(18,worse,78) output(18,worse,7) output(18,worse,39) output(18,worse,46) output(18,worse,52) output(23,worse,78) output(33,worse,78) output(33,worse,7) output(33,worse,39) output(33,worse,46) output(42,worse,51) output(42,worse,90) output(42,worse,39) output(42,worse,7) output(42,worse,46) output(42,worse,52) output(42,worse,60) output(51,eq,39) output(90,eq,52) output(33,eq,52) output(18,eq,31) output(42,eq,79) output(51,eq,46) output(18,eq,60)
Optimization: 32 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,39) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,39) output(18,better,31) output(18,better,46) output(23,better,31) output(23,better,46) output(33,better,31) output(33,better,39) output(33,better,46) output(42,better,39) output(42,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(90,worse,7) output(18,worse,78) output(18,worse,7) output(23,worse,78) output(23,worse,7) output(23,worse,60) output(23,worse,52) output(23,worse,79) output(33,worse,78) output(33,worse,7) output(42,worse,51) output(42,worse,7) output(79,eq,52) output(90,eq,79) output(42,eq,90) output(23,eq,39) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 28 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,39) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,39) output(18,better,31) output(18,better,46) output(23,better,31) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,39) output(33,better,46) output(42,better,39) output(42,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(90,worse,7) output(18,worse,23) output(18,worse,78) output(18,worse,7) output(23,worse,78) output(33,worse,78) output(33,worse,7) output(42,worse,51) output(42,worse,7) output(79,eq,52) output(90,eq,79) output(42,eq,90) output(23,eq,7) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 25 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,39) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,39) output(18,better,31) output(18,better,46) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,39) output(33,better,46) output(42,better,39) output(42,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(90,worse,7) output(18,worse,23) output(18,worse,78) output(18,worse,7) output(33,worse,78) output(33,worse,7) output(42,worse,51) output(42,worse,7) output(79,eq,52) output(23,eq,78) output(90,eq,79) output(42,eq,90) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 24 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,7) output(90,better,39) output(90,better,46) output(7,better,39) output(7,better,46) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,46) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,46) output(42,better,39) output(42,better,7) output(42,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(18,worse,23) output(18,worse,78) output(33,worse,78) output(42,worse,51) output(79,eq,52) output(23,eq,78) output(90,eq,79) output(42,eq,90) output(90,eq,60) output(33,eq,60) output(90,eq,52) output(33,eq,52) output(42,eq,79) output(33,eq,79) output(18,eq,79) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 23 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(79,better,52) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,52) output(7,better,39) output(7,better,79) output(7,better,52) output(18,better,23) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,52) output(42,better,39) output(42,better,79) output(42,better,52) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,52) output(78,better,46) output(39,worse,60) output(52,worse,46) output(79,worse,46) output(90,worse,60) output(7,worse,60) output(7,worse,46) output(18,worse,60) output(23,worse,78) output(23,worse,60) output(33,worse,78) output(33,worse,7) output(33,worse,39) output(33,worse,60) output(33,worse,79) output(33,worse,46) output(42,worse,51) output(42,worse,90) output(42,worse,7) output(42,worse,46) output(42,worse,60) output(78,worse,60) output(18,eq,78) output(90,eq,46)
Optimization: 23 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(0))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(18,better,7) output(18,better,39) output(18,better,46) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,7) output(33,better,39) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(7,worse,39) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(7,worse,46) output(18,worse,23) output(18,worse,78) output(18,worse,31) output(18,worse,60) output(33,worse,78) output(33,worse,31) output(33,worse,60) output(79,eq,52) output(23,eq,78) output(51,eq,90) output(33,eq,52) output(33,eq,79) output(18,eq,79) output(18,eq,52)
Optimization: 20 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,52) output(51,better,79) output(51,better,46) output(79,better,52) output(90,better,7) output(90,better,79) output(90,better,52) output(7,better,52) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,52) output(78,better,46) output(39,worse,60) output(51,worse,60) output(52,worse,46) output(79,worse,46) output(90,worse,39) output(90,worse,60) output(7,worse,39) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(23,worse,60) output(33,worse,60) output(78,worse,60) output(23,eq,78) output(51,eq,39) output(90,eq,46)
Optimization: 16 12
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,39) output(42,better,7) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,worse,60) output(51,worse,90) output(51,worse,79) output(7,worse,39) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(7,worse,46) output(18,worse,79) output(23,worse,79) output(42,worse,51) output(42,worse,90) output(42,worse,79) output(78,worse,79) output(23,eq,78)
Optimization: 15 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,39) output(51,better,60) output(51,better,79) output(51,better,46) output(52,better,46) output(90,better,39) output(90,better,60) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(51,worse,7) output(51,worse,52) output(79,worse,52) output(79,worse,46) output(90,worse,7) output(90,worse,52) output(90,worse,46) output(18,worse,23) output(18,worse,78) output(18,worse,7) output(18,worse,46) output(18,worse,52) output(42,worse,7) output(23,eq,78) output(90,eq,79)
Optimization: 15 9
Answer: 17
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,60) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(51,worse,79) output(90,worse,7) output(90,worse,79) output(90,worse,39) output(90,worse,52) output(7,worse,39) output(7,worse,79) output(7,worse,52) output(23,worse,78) output(18,eq,78) output(51,eq,52) output(90,eq,46)
Optimization: 12 9
Answer: 18
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,39) output(90,better,60) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,worse,7) output(90,worse,79) output(90,worse,52) output(23,worse,78) output(23,worse,7) output(79,eq,52) output(18,eq,78) output(90,eq,46)
Optimization: 8 8
Answer: 19
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,39) output(90,better,60) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,worse,7) output(90,worse,79) output(90,worse,52) output(23,worse,78) output(23,worse,7) output(79,eq,52) output(18,eq,78)
Optimization: 7 9
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(39,better,60) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(51,worse,90) output(79,worse,52) output(33,worse,78) output(23,eq,78) output(42,eq,90) output(79,eq,46)
Optimization: 6 12
Answer: 21
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(79,worse,52) output(90,worse,7) output(23,eq,78) output(51,eq,7) output(90,eq,52)
Optimization: 5 10
Answer: 22
preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(79,worse,52) output(90,worse,7) output(90,worse,52) output(23,eq,78)
Optimization: 4 11
Answer: 23
preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(39,eq,60) output(79,eq,52) output(23,eq,78)
Optimization: 3 12
Answer: 24
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(1))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(33,eq,78) output(23,eq,78)
Optimization: 2 12
Answer: 25
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(23,eq,78)
Optimization: 1 12
Answer: 26
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(23,eq,78)
Optimization: 1 11
Progression : 1 [ 1;11] (Error: 10)
Answer: 27
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(23,eq,78)
Optimization: 1 10
Answer: 28
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(23,eq,78)
Optimization: 1 9
Progression : 1 [2;9] (Error: 3.5)
Answer: 29
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(23,eq,78)
Optimization: 1 8
Answer: 30
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(39,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(52,better,46) output(79,better,52) output(79,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(23,eq,78)
Optimization: 1 7
Progression : 1 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.044 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 1 7
Bounds       : 1 [3;7]
Calls        : 1
Time         : 297.348s (Solving: 295.54s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.715s
Threads      : 4        (Winner: 4)

Choices      : 7138965  (Domain: 832475)
Conflicts    : 6674672  (Analyzed: 6674668)
Restarts     : 5065     (Average: 1317.80 Last: 535477)
Model-Level  : 32.3    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 6877156  (Deleted: 6519016)
  Binary     : 413      (Ratio:   0.01%)
  Ternary    : 5314     (Ratio:   0.08%)
  Conflict   : 6674668  (Average Length:  233.9 Ratio:  97.06%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 202488   (Average Length:  210.7 Ratio:   2.94%) 
  Distributed: 67653    (Ratio:   1.01% Average LBD: 3.83) 
  Integrated : 202959   (Ratio: 300.00% Unit: 191 Average Jumps: 7.63)
Backjumps    : 6674668  (Average:  1.06 Max:  87 Sum: 7088306)
  Executed   : 6674662  (Average:  1.06 Max:  87 Sum: 7088203 Ratio: 100.00%)
  Bounded    : 6        (Average: 17.17 Max:  37 Sum:    103 Ratio:   0.00%)

Rules        : 141230  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 11688   
Bodies       : 5923    
  Sum        : 124     
  Count      : 14      
Equivalences : 4588     (Atom=Atom: 633 Body=Body: 262 Other: 3693)
Tight        : Yes
Variables    : 4905     (Eliminated:    0 Frozen: 3435)
Constraints  : 137696   (Binary:  97.6% Ternary:   1.1% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) 
}.
