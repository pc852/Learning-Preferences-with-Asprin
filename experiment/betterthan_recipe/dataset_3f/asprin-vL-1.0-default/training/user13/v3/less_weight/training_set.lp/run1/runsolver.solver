asprin_vL version 1.0
Reading from stdin
-:1240:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1250:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1265:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1346:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1607:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1620:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1797:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1926:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1998:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2002:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2002:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2008:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2107:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2133:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2253:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2287:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2309:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1157:1-16: info: no atoms over signature occur in program:
  output/3

-:1149:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1150:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(32,eq,23) output(23,eq,98) output(98,eq,41) output(41,eq,60) output(60,eq,79) output(46,eq,31) output(31,eq,48) output(28,eq,98) output(98,eq,52) output(52,eq,41) output(41,eq,96) output(96,eq,8) output(20,eq,46) output(41,eq,8) output(98,eq,96) output(52,eq,96) output(23,eq,52) output(28,eq,52) output(46,eq,48) output(20,eq,31) output(41,eq,79) output(98,eq,60) output(52,eq,60) output(23,eq,41) output(28,eq,41) output(32,eq,98) output(32,eq,41) output(23,eq,60) output(28,eq,60) output(32,eq,60) output(98,eq,79) output(52,eq,79) output(23,eq,79) output(28,eq,79) output(20,eq,48) output(32,eq,52) output(23,eq,96) output(28,eq,96) output(32,eq,96) output(98,eq,8) output(52,eq,8) output(23,eq,8) output(28,eq,8) output(32,eq,8) output(32,eq,79)
Optimization: 45 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(52,better,60) output(20,better,46) output(23,better,60) output(28,better,60) output(32,better,60) output(41,better,60) output(98,better,60) output(46,worse,31) output(46,worse,48) output(60,worse,79) output(32,eq,23) output(23,eq,98) output(98,eq,41) output(31,eq,48) output(28,eq,98) output(98,eq,52) output(52,eq,41) output(41,eq,96) output(96,eq,8) output(41,eq,8) output(98,eq,96) output(52,eq,96) output(23,eq,52) output(28,eq,52) output(20,eq,31) output(41,eq,79) output(23,eq,41) output(28,eq,41) output(32,eq,98) output(32,eq,41) output(98,eq,79) output(52,eq,79) output(23,eq,79) output(28,eq,79) output(20,eq,48) output(32,eq,52) output(23,eq,96) output(28,eq,96) output(32,eq,96) output(98,eq,8) output(52,eq,8) output(23,eq,8) output(28,eq,8) output(32,eq,8) output(32,eq,79)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasPrep(4))),1) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(20,better,46) output(20,better,31) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(31,worse,48) output(46,worse,48) output(28,worse,98) output(28,worse,52) output(28,worse,41) output(28,worse,60) output(28,worse,79) output(28,worse,96) output(28,worse,8) output(32,worse,23) output(98,eq,41) output(41,eq,60) output(60,eq,79) output(46,eq,31) output(98,eq,52) output(52,eq,41) output(41,eq,96) output(96,eq,8) output(41,eq,8) output(98,eq,96) output(52,eq,96) output(41,eq,79) output(98,eq,60) output(52,eq,60) output(32,eq,98) output(32,eq,41) output(32,eq,60) output(98,eq,79) output(52,eq,79) output(20,eq,48) output(32,eq,52) output(32,eq,96) output(98,eq,8) output(52,eq,8) output(32,eq,8) output(32,eq,79)
Optimization: 36 10
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasPrep(4))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(52,better,96) output(52,better,60) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,60) output(28,better,96) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(46,worse,31) output(46,worse,48) output(52,worse,41) output(60,worse,79) output(96,worse,8) output(28,worse,98) output(28,worse,41) output(32,eq,23) output(23,eq,98) output(98,eq,41) output(28,eq,52) output(23,eq,41) output(32,eq,98) output(32,eq,41) output(52,eq,79) output(28,eq,79) output(52,eq,8) output(28,eq,8)
Optimization: 19 14
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(46,better,31) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,52) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(46,worse,48) output(52,worse,41) output(52,worse,96) output(52,worse,60) output(28,worse,98) output(28,worse,41) output(32,eq,23) output(23,eq,98) output(98,eq,41) output(23,eq,41) output(32,eq,98) output(32,eq,41) output(52,eq,79) output(52,eq,8)
Optimization: 15 12
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(52,better,60) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(46,worse,31) output(46,worse,48) output(52,worse,41) output(52,worse,96) output(60,worse,79) output(32,eq,23) output(23,eq,98) output(98,eq,41) output(23,eq,41) output(32,eq,98) output(32,eq,41) output(52,eq,79) output(52,eq,8)
Optimization: 14 12
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasPrep(4))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,41) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,31) output(20,better,48) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,96) output(98,better,79) output(98,better,8) output(31,worse,48) output(20,worse,46) output(23,worse,52) output(23,worse,41) output(23,worse,60) output(28,worse,52) output(32,worse,52) output(98,worse,41) output(98,worse,52) output(98,worse,60) output(23,eq,98) output(32,eq,41)
Optimization: 12 14
Progression : [ 2;12] (Error: 5)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,8) output(96,better,8) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(52,worse,41) output(52,worse,79) output(60,worse,79) output(20,worse,46) output(32,eq,23) output(23,eq,98) output(98,eq,41) output(23,eq,41) output(32,eq,98) output(32,eq,41)
Optimization: 11 9
Answer: 9
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(4))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(46,better,31) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,52) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(46,worse,48) output(52,worse,41) output(96,worse,8) output(23,worse,98) output(23,worse,41) output(28,worse,98) output(28,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 10 10
Answer: 10
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(7))),4) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(4))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,52) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(52,worse,41) output(96,worse,8) output(23,worse,98) output(23,worse,41) output(28,worse,98) output(28,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 9 10
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(52,worse,41) output(23,worse,98) output(23,worse,41) output(28,worse,41) output(98,worse,41) output(60,eq,79) output(32,eq,41)
Optimization: 8 10
Answer: 12
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(52,worse,41) output(23,worse,98) output(23,worse,41) output(28,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 7 10
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrep(4))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(31,worse,48) output(52,worse,41) output(60,worse,79) output(23,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 6 13
Progression : [3;6] (Error: 1)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,23) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(52,worse,41) output(52,worse,60) output(20,worse,46) output(23,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 6 12
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,41) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,98) output(32,better,60) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(32,worse,23) output(32,worse,52) output(98,worse,41) output(98,worse,52) output(32,eq,41)
Optimization: 5 11
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(52,worse,41) output(32,worse,23) output(98,worse,41) output(31,eq,48) output(32,eq,41)
Optimization: 5 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrep(4))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,98) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(52,worse,41) output(32,worse,23) output(98,worse,41) output(32,eq,41)
Optimization: 4 13
Progression : [4;4] (Error: 0)
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasPrep(4))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,41) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,41) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(32,worse,23) output(32,worse,98) output(32,worse,52) output(32,eq,41)
Optimization: 4 12
Progression : 4 [ 1;12] (Error: 11)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,41) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(52,worse,41) output(32,worse,23) output(32,worse,98) output(32,eq,41)
Optimization: 4 8
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,41) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(52,worse,41) output(32,worse,23) output(32,worse,98) output(32,eq,41)
Optimization: 4 7
Progression : 4 [2;7] (Error: 2.5)
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(31,better,48) output(46,better,31) output(46,better,48) output(52,better,96) output(52,better,60) output(52,better,79) output(52,better,8) output(60,better,79) output(96,better,8) output(20,better,46) output(20,better,31) output(20,better,48) output(23,better,98) output(23,better,52) output(23,better,41) output(23,better,60) output(23,better,79) output(23,better,96) output(23,better,8) output(28,better,98) output(28,better,52) output(28,better,41) output(28,better,60) output(28,better,79) output(28,better,96) output(28,better,8) output(32,better,60) output(32,better,52) output(32,better,96) output(32,better,8) output(32,better,79) output(41,better,60) output(41,better,96) output(41,better,8) output(41,better,79) output(98,better,41) output(98,better,52) output(98,better,96) output(98,better,60) output(98,better,79) output(98,better,8) output(52,worse,41) output(32,worse,23) output(32,worse,98) output(32,eq,41)
Optimization: 4 6
Progression : 4 [3;6] (Error: 1)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.037 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 4 6
Bounds       : 4 [3;6]
Calls        : 1
Time         : 296.588s (Solving: 294.97s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.325s
Threads      : 4        (Winner: 4)

Choices      : 10055394 (Domain: 612718)
Conflicts    : 8063939  (Analyzed: 8063931)
Restarts     : 7640     (Average: 1055.49 Last: 287933)
Model-Level  : 38.5    
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 8130853  (Deleted: 7860724)
  Binary     : 1044     (Ratio:   0.01%)
  Ternary    : 5168     (Ratio:   0.06%)
  Conflict   : 8063931  (Average Length:  251.2 Ratio:  99.18%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 66922    (Average Length:   35.8 Ratio:   0.82%) 
  Distributed: 22328    (Ratio:   0.28% Average LBD: 3.68) 
  Integrated : 66984    (Ratio: 300.00% Unit: 101 Average Jumps: 7.76)
Backjumps    : 8063931  (Average:  1.20 Max: 367 Sum: 9703978)
  Executed   : 8063920  (Average:  1.20 Max: 367 Sum: 9703867 Ratio: 100.00%)
  Bounded    : 11       (Average: 10.09 Max:  26 Sum:    111 Ratio:   0.00%)

Rules        : 113804  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10014   
Bodies       : 5727    
  Sum        : 81      
  Count      : 14      
Equivalences : 6665     (Atom=Atom: 481 Body=Body: 215 Other: 5969)
Tight        : Yes
Variables    : 4815     (Eliminated:    0 Frozen: 3345)
Constraints  : 111787   (Binary:  97.2% Ternary:   1.4% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) 
}.
