asprin_vL version 1.0
Reading from stdin
-:1228:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1238:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1253:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1334:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1595:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1608:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1785:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1914:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1986:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1990:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1996:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2095:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2121:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2241:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2275:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2297:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1145:1-16: info: no atoms over signature occur in program:
  output/3

-:1137:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(57,eq,55) output(51,eq,67) output(67,eq,76) output(76,eq,99) output(99,eq,91) output(91,eq,71) output(30,eq,60) output(78,eq,53) output(53,eq,76) output(99,eq,98) output(98,eq,71) output(99,eq,71) output(76,eq,98) output(78,eq,76) output(76,eq,91) output(67,eq,99) output(53,eq,99) output(51,eq,76) output(78,eq,99) output(51,eq,99) output(67,eq,91) output(53,eq,91) output(78,eq,91) output(51,eq,91) output(67,eq,98) output(53,eq,98) output(78,eq,98) output(51,eq,98) output(76,eq,71) output(67,eq,71) output(53,eq,71) output(78,eq,71) output(51,eq,71)
Optimization: 33 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(51,better,67) output(51,better,98) output(57,better,55) output(76,better,98) output(78,better,53) output(78,better,98) output(91,better,71) output(99,better,98) output(30,worse,60) output(51,worse,91) output(53,worse,76) output(53,worse,99) output(53,worse,91) output(53,worse,71) output(67,worse,76) output(67,worse,99) output(67,worse,91) output(67,worse,71) output(76,worse,91) output(78,worse,91) output(98,worse,71) output(99,worse,91) output(76,eq,99) output(99,eq,71) output(78,eq,76) output(51,eq,76) output(78,eq,99) output(51,eq,99) output(67,eq,98) output(53,eq,98) output(76,eq,71) output(78,eq,71) output(51,eq,71)
Optimization: 25 6
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(30,better,60) output(51,better,76) output(53,better,76) output(53,better,99) output(57,better,55) output(67,better,76) output(67,better,99) output(78,better,76) output(51,worse,67) output(51,worse,99) output(51,worse,91) output(51,worse,98) output(51,worse,71) output(67,worse,91) output(67,worse,98) output(67,worse,71) output(76,worse,99) output(76,worse,98) output(76,worse,91) output(76,worse,71) output(78,worse,53) output(78,worse,91) output(78,worse,98) output(78,worse,71) output(99,worse,91) output(99,worse,98) output(99,worse,71) output(91,eq,71) output(98,eq,71) output(78,eq,99) output(53,eq,91) output(53,eq,98) output(53,eq,71)
Optimization: 25 5
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(78,better,76) output(91,better,71) output(98,better,71) output(53,worse,91) output(53,worse,98) output(67,worse,99) output(67,worse,91) output(67,worse,98) output(67,worse,71) output(76,worse,99) output(76,worse,98) output(76,worse,91) output(76,worse,71) output(78,worse,91) output(78,worse,98) output(99,worse,91) output(99,worse,98) output(57,eq,55) output(67,eq,76) output(30,eq,60) output(78,eq,53) output(99,eq,71) output(53,eq,99) output(78,eq,99) output(53,eq,71) output(78,eq,71)
Optimization: 23 9
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,71) output(78,better,76) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,71) output(53,worse,91) output(53,worse,98) output(67,worse,99) output(67,worse,91) output(67,worse,98) output(67,worse,71) output(76,worse,99) output(76,worse,98) output(76,worse,91) output(76,worse,71) output(78,worse,91) output(78,worse,98) output(99,worse,91) output(99,worse,98) output(57,eq,55) output(67,eq,76) output(30,eq,60) output(78,eq,53) output(53,eq,99) output(78,eq,99)
Optimization: 20 9
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,71) output(67,better,71) output(76,better,71) output(78,better,76) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,71) output(30,worse,60) output(53,worse,91) output(53,worse,98) output(57,worse,55) output(67,worse,99) output(67,worse,91) output(67,worse,98) output(76,worse,99) output(76,worse,98) output(76,worse,91) output(78,worse,53) output(78,worse,91) output(78,worse,98) output(99,worse,91) output(99,worse,98) output(67,eq,76) output(78,eq,99)
Optimization: 17 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,71) output(67,better,71) output(76,better,71) output(78,better,76) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,71) output(30,worse,60) output(53,worse,98) output(57,worse,55) output(67,worse,99) output(67,worse,91) output(67,worse,98) output(76,worse,99) output(76,worse,98) output(76,worse,91) output(78,worse,53) output(78,worse,98) output(99,worse,98) output(67,eq,76) output(99,eq,91) output(78,eq,99) output(78,eq,91)
Optimization: 16 11
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrep(6))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(30,better,60) output(51,better,71) output(53,better,99) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,71) output(51,worse,67) output(51,worse,76) output(51,worse,99) output(51,worse,91) output(51,worse,98) output(53,worse,76) output(78,worse,53) output(78,worse,76) output(78,worse,91) output(78,worse,98) output(99,worse,91) output(99,worse,98) output(78,eq,99) output(53,eq,91) output(53,eq,98)
Optimization: 15 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,71) output(53,better,76) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,98) output(67,better,71) output(76,better,98) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,98) output(99,better,71) output(51,worse,67) output(51,worse,76) output(51,worse,99) output(51,worse,91) output(53,worse,99) output(53,worse,91) output(67,worse,99) output(67,worse,91) output(76,worse,99) output(76,worse,91) output(99,eq,91) output(78,eq,99) output(78,eq,91) output(51,eq,98)
Optimization: 14 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,98) output(67,better,71) output(76,better,98) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,98) output(78,better,71) output(91,better,71) output(99,better,98) output(99,better,71) output(53,worse,99) output(53,worse,91) output(67,worse,99) output(67,worse,91) output(76,worse,99) output(76,worse,91) output(99,eq,91) output(98,eq,71) output(78,eq,99) output(51,eq,99) output(78,eq,91) output(51,eq,91)
Optimization: 12 9
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,98) output(67,better,71) output(76,better,98) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,98) output(99,better,71) output(51,worse,99) output(51,worse,91) output(53,worse,99) output(53,worse,91) output(67,worse,99) output(67,worse,91) output(76,worse,99) output(76,worse,91) output(99,eq,91) output(78,eq,99) output(78,eq,91)
Optimization: 11 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,98) output(78,better,71) output(91,better,71) output(99,better,98) output(99,better,71) output(51,worse,67) output(51,worse,76) output(78,worse,53) output(78,worse,76) output(99,eq,91) output(98,eq,71) output(78,eq,99) output(51,eq,99) output(78,eq,91) output(51,eq,91)
Optimization: 10 9
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,98) output(99,better,71) output(51,worse,67) output(51,worse,76) output(78,worse,53) output(78,worse,76) output(99,eq,91) output(78,eq,99) output(51,eq,99) output(78,eq,91) output(51,eq,91)
Optimization: 9 9
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(76,better,98) output(76,better,91) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(99,better,91) output(99,better,98) output(53,worse,71) output(67,worse,71) output(76,worse,71) output(91,worse,71) output(98,worse,71) output(99,worse,71) output(76,eq,99) output(78,eq,71)
Optimization: 8 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(99,better,91) output(99,better,98) output(99,better,71) output(51,worse,67) output(51,worse,76) output(51,worse,99) output(78,worse,53) output(78,worse,76) output(98,eq,71) output(78,eq,99)
Optimization: 7 10
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71) output(51,worse,67) output(51,worse,76) output(51,worse,99) output(78,worse,53) output(78,worse,76) output(78,eq,99)
Optimization: 6 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,76) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,76) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71) output(51,worse,67) output(76,worse,99) output(78,worse,53) output(78,eq,99) output(51,eq,99)
Optimization: 5 10
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrep(7))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71) output(53,worse,99) output(67,worse,99) output(76,worse,99) output(78,eq,99)
Optimization: 4 12
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrep(7))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasCost(1))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71) output(78,worse,53) output(78,worse,76) output(78,eq,99)
Optimization: 3 12
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(99,better,98) output(99,better,71) output(99,eq,91) output(98,eq,71)
Optimization: 2 11
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,98) output(99,better,71) output(99,eq,91)
Optimization: 1 12
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 13
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 24
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 11
Answer: 25
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 10
Answer: 26
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 27
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 7
Progression : 0 [3;7] (Error: 1.33333)
Answer: 28
preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(30,better,60) output(51,better,67) output(51,better,76) output(51,better,99) output(51,better,91) output(51,better,98) output(51,better,71) output(53,better,76) output(53,better,99) output(53,better,91) output(53,better,98) output(53,better,71) output(57,better,55) output(67,better,76) output(67,better,99) output(67,better,91) output(67,better,98) output(67,better,71) output(76,better,99) output(76,better,98) output(76,better,91) output(76,better,71) output(78,better,53) output(78,better,76) output(78,better,99) output(78,better,91) output(78,better,98) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,98) output(99,better,71)
Optimization: 0 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 28+
  Optimum    : unknown
Optimization : 0 6
Calls        : 1
Time         : 298.169s (Solving: 296.59s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.769s
Threads      : 4        (Winner: 4)

Choices      : 6917534  (Domain: 482906)
Conflicts    : 6589158  (Analyzed: 6589155)
Restarts     : 5281     (Average: 1247.71 Last: 284619)
Model-Level  : 28.9    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6759491  (Deleted: 6415669)
  Binary     : 563      (Ratio:   0.01%)
  Ternary    : 2206     (Ratio:   0.03%)
  Conflict   : 6589155  (Average Length:  295.5 Ratio:  97.48%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 170336   (Average Length:  305.8 Ratio:   2.52%) 
  Distributed: 56903    (Ratio:   0.86% Average LBD: 3.90) 
  Integrated : 170709   (Ratio: 300.00% Unit: 35 Average Jumps: 5.63)
Backjumps    : 6589155  (Average:  1.04 Max:  53 Sum: 6864476)
  Executed   : 6589154  (Average:  1.04 Max:  53 Sum: 6864444 Ratio: 100.00%)
  Bounded    : 1        (Average: 32.00 Max:  32 Sum:     32 Ratio:   0.00%)

Rules        : 94891   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8838    
Bodies       : 5604    
  Sum        : 66      
  Count      : 14      
Equivalences : 3573     (Atom=Atom: 343 Body=Body: 146 Other: 3084)
Tight        : Yes
Variables    : 4781     (Eliminated:    0 Frozen: 3311)
Constraints  : 93988    (Binary:  96.7% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) 
}.
