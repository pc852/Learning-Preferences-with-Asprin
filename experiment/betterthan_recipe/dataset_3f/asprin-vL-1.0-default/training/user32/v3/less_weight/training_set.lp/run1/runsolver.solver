asprin_vL version 1.0
Reading from stdin
-:1222:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1232:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1247:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1328:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1589:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1602:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1779:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1908:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1980:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1984:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2089:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2115:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2235:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2269:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1139:1-16: info: no atoms over signature occur in program:
  output/3

-:1131:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,55) output(55,eq,52) output(52,eq,78) output(86,eq,75) output(75,eq,62) output(62,eq,25) output(25,eq,94) output(99,eq,55) output(52,eq,67) output(76,eq,91) output(91,eq,51) output(71,eq,57) output(76,eq,51) output(55,eq,67) output(62,eq,94) output(75,eq,25) output(86,eq,62) output(55,eq,78) output(8,eq,52) output(99,eq,52) output(8,eq,78) output(99,eq,78) output(86,eq,25) output(75,eq,94) output(86,eq,94) output(8,eq,67) output(99,eq,67)
Optimization: 27 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(25,better,94) output(52,better,78) output(91,better,51) output(8,worse,52) output(8,worse,67) output(55,worse,52) output(55,worse,67) output(62,worse,25) output(76,worse,91) output(86,worse,25) output(75,worse,25) output(99,worse,52) output(99,worse,67) output(8,eq,55) output(86,eq,75) output(75,eq,62) output(99,eq,55) output(52,eq,67) output(71,eq,57) output(76,eq,51) output(62,eq,94) output(86,eq,62) output(55,eq,78) output(8,eq,78) output(99,eq,78) output(75,eq,94) output(86,eq,94)
Optimization: 24 1
Answer: 3
preference(1,(1,2),1,for(atom(hasPrep(4))),2) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(25,better,94) output(71,better,57) output(76,better,91) output(86,better,62) output(86,better,94) output(75,better,62) output(75,better,94) output(8,worse,55) output(8,worse,52) output(8,worse,78) output(8,worse,67) output(52,worse,67) output(55,worse,67) output(62,worse,25) output(86,worse,25) output(75,worse,25) output(91,worse,51) output(99,worse,55) output(99,worse,52) output(99,worse,78) output(99,worse,67) output(55,eq,52) output(52,eq,78) output(86,eq,75) output(76,eq,51) output(62,eq,94) output(55,eq,78)
Optimization: 20 6
Answer: 4
preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(8,better,52) output(8,better,78) output(25,better,94) output(55,better,52) output(55,better,78) output(62,better,94) output(76,better,91) output(86,better,75) output(86,better,94) output(52,worse,67) output(75,worse,62) output(75,worse,25) output(91,worse,51) output(99,worse,55) output(99,worse,67) output(8,eq,55) output(52,eq,78) output(62,eq,25) output(71,eq,57) output(76,eq,51) output(55,eq,67) output(86,eq,62) output(99,eq,52) output(99,eq,78) output(86,eq,25) output(75,eq,94) output(8,eq,67)
Optimization: 18 1
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(25,better,94) output(76,better,91) output(86,better,62) output(86,better,94) output(75,better,62) output(75,better,94) output(99,better,55) output(99,better,52) output(52,worse,78) output(52,worse,67) output(55,worse,67) output(55,worse,78) output(62,worse,25) output(91,worse,51) output(55,eq,52) output(86,eq,75) output(71,eq,57) output(76,eq,51) output(62,eq,94) output(75,eq,25) output(8,eq,78) output(99,eq,78) output(86,eq,25) output(8,eq,67) output(99,eq,67)
Optimization: 17 1
Answer: 6
preference(1,(1,2),1,for(atom(hasPrep(4))),2) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(55,better,52) output(55,better,67) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(8,worse,55) output(8,worse,78) output(52,worse,78) output(99,worse,55) output(99,worse,78) output(86,eq,75) output(62,eq,25) output(25,eq,94) output(52,eq,67) output(91,eq,51) output(62,eq,94) output(55,eq,78) output(8,eq,52) output(99,eq,52) output(8,eq,67) output(99,eq,67)
Optimization: 16 9
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(52,better,67) output(62,better,25) output(71,better,57) output(76,better,51) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,55) output(99,better,52) output(99,better,67) output(8,worse,55) output(8,worse,52) output(8,worse,78) output(8,worse,67) output(25,worse,94) output(52,worse,78) output(55,worse,52) output(55,worse,78) output(62,worse,94) output(76,worse,91) output(86,worse,75) output(55,eq,67) output(99,eq,78)
Optimization: 13 14
Progression : [ 1;13] (Error: 12)
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(8,better,52) output(8,better,67) output(55,better,52) output(55,better,67) output(62,better,25) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(99,better,52) output(99,better,67) output(8,worse,78) output(25,worse,94) output(52,worse,78) output(55,worse,78) output(91,worse,51) output(99,worse,78) output(8,eq,55) output(86,eq,75) output(99,eq,55) output(52,eq,67) output(62,eq,94)
Optimization: 11 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(3))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,78) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,25) output(86,better,94) output(75,worse,62) output(75,worse,25) output(99,worse,55) output(99,worse,52) output(8,eq,55) output(91,eq,51) output(86,eq,62) output(99,eq,78) output(75,eq,94) output(99,eq,67)
Optimization: 10 11
Answer: 10
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,78) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,25) output(86,better,94) output(91,better,51) output(75,worse,62) output(75,worse,25) output(99,worse,55) output(99,worse,52) output(8,eq,55) output(86,eq,62) output(99,eq,78) output(75,eq,94) output(99,eq,67)
Optimization: 9 9
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrep(3))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(55,better,52) output(55,better,67) output(71,better,57) output(76,better,91) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(99,better,55) output(99,better,52) output(99,better,67) output(52,worse,78) output(52,worse,67) output(55,worse,78) output(62,worse,25) output(91,worse,51) output(76,eq,51) output(62,eq,94) output(99,eq,78)
Optimization: 8 13
Answer: 12
preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,67) output(25,better,94) output(55,better,52) output(55,better,67) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,25) output(75,better,94) output(99,better,55) output(99,better,52) output(99,better,67) output(8,worse,78) output(52,worse,78) output(52,worse,67) output(55,worse,78) output(76,worse,51) output(75,worse,62) output(91,worse,51) output(99,eq,78)
Optimization: 8 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrep(3))),7) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(8,better,55) output(8,better,67) output(25,better,94) output(52,better,67) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,55) output(99,better,52) output(99,better,67) output(8,worse,52) output(8,worse,78) output(52,worse,78) output(55,worse,52) output(55,worse,67) output(55,worse,78) output(99,worse,78)
Optimization: 7 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(25,worse,94) output(52,worse,78) output(52,worse,67) output(99,worse,55) output(75,eq,62) output(99,eq,78)
Optimization: 6 10
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(3))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,78) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,worse,55) output(99,worse,52) output(99,worse,78) output(99,worse,67) output(52,eq,67)
Optimization: 5 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,78) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,worse,55) output(99,worse,52) output(99,worse,78) output(99,worse,67)
Optimization: 4 10
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(52,worse,78) output(52,worse,67) output(99,worse,55) output(99,worse,78)
Optimization: 4 9
Progression : [2;4] (Error: 1)
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(52,worse,78) output(99,worse,55) output(99,eq,78)
Optimization: 3 13
Progression : [3;3] (Error: 0)
Progression : 3 [ 1;13] (Error: 12)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(52,worse,78) output(99,worse,55) output(99,eq,78)
Optimization: 3 12
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(52,worse,78) output(99,worse,55) output(99,eq,78)
Optimization: 3 11
Progression : 3 [ 2;11] (Error: 4.5)
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(52,worse,78) output(99,worse,55) output(99,eq,78)
Optimization: 3 10
Answer: 22
preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,67) output(55,better,52) output(55,better,67) output(55,better,78) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,52) output(99,better,67) output(52,worse,78) output(99,worse,55) output(99,eq,78)
Optimization: 3 9
Answer: 23
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(8,better,55) output(8,better,52) output(8,better,78) output(8,better,67) output(25,better,94) output(52,better,67) output(55,better,52) output(55,better,67) output(62,better,25) output(62,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(75,better,62) output(75,better,25) output(75,better,94) output(91,better,51) output(99,better,55) output(99,better,52) output(99,better,67) output(52,worse,78) output(55,worse,78) output(99,eq,78)
Optimization: 3 8
Progression : 3 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.056 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 3 8
Bounds       : 3 [3;8]
Calls        : 1
Time         : 297.909s (Solving: 296.32s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.364s
Threads      : 4        (Winner: 4)

Choices      : 9982089  (Domain: 897712)
Conflicts    : 8203502  (Analyzed: 8203495)
Restarts     : 7274     (Average: 1127.78 Last: 330746)
Model-Level  : 38.4    
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 8267959  (Deleted: 8009185)
  Binary     : 1691     (Ratio:   0.02%)
  Ternary    : 6527     (Ratio:   0.08%)
  Conflict   : 8203493  (Average Length:  253.3 Ratio:  99.22%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 64466    (Average Length:   30.1 Ratio:   0.78%) 
  Distributed: 21525    (Ratio:   0.26% Average LBD: 3.63) 
  Integrated : 64575    (Ratio: 300.00% Unit: 174 Average Jumps: 6.09)
Backjumps    : 8203495  (Average:  1.18 Max: 475 Sum: 9660920)
  Executed   : 8203488  (Average:  1.18 Max: 475 Sum: 9660881 Ratio: 100.00%)
  Bounded    : 7        (Average:  5.57 Max:  26 Sum:     39 Ratio:   0.00%)

Rules        : 86721   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8266    
Bodies       : 5538    
  Sum        : 54      
  Count      : 14      
Equivalences : 3363     (Atom=Atom: 283 Body=Body: 122 Other: 2958)
Tight        : Yes
Variables    : 4773     (Eliminated:    0 Frozen: 3303)
Constraints  : 86380    (Binary:  96.4% Ternary:   1.7% Other:   1.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) 
}.
