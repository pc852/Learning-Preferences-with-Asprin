asprin_vL version 1.0
Reading from stdin
-:1233:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1258:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1339:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1613:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1790:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1991:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1995:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2100:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2126:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2246:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2280:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1150:1-16: info: no atoms over signature occur in program:
  output/3

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1144:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1145:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1175:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(90,better,79) output(44,better,100) output(65,better,22) output(16,worse,75) output(79,worse,51) output(16,worse,90) output(58,worse,65) output(90,worse,51) output(77,worse,51) output(92,worse,51) output(16,worse,51) output(9,eq,67) output(67,eq,33) output(92,eq,77) output(77,eq,79) output(92,eq,79) output(9,eq,33) output(16,eq,79)
Optimization: 21 6
Progression : [ 1;21] (Error: 20)
Answer: 2
preference(1,(1,1),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),0,for(atom(hasPrepTime(1))),()) preference(1,(1,3),0,for(atom(hasPrep(1))),()) preference(1,(1,5),0,for(atom(hasPrep(0))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,aso) output(44,better,100) output(65,better,22) output(92,better,77) output(58,better,22) output(16,worse,75) output(79,worse,51) output(16,worse,90) output(77,worse,79) output(79,worse,10) output(90,worse,10) output(77,worse,10) output(90,worse,51) output(77,worse,51) output(16,worse,79) output(92,worse,51) output(16,worse,51) output(92,worse,10) output(16,worse,10) output(90,eq,79) output(9,eq,67) output(67,eq,33) output(58,eq,65) output(92,eq,79) output(9,eq,33)
Optimization: 20 6
Answer: 3
preference(1,(1,1),0,for(atom(hasPrep(1))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,3),0,for(atom(hasPrep(2))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,aso) output(9,better,67) output(16,better,90) output(65,better,22) output(77,better,79) output(58,better,22) output(16,better,79) output(79,worse,51) output(67,worse,33) output(92,worse,77) output(79,worse,10) output(90,worse,10) output(90,worse,51) output(92,worse,51) output(92,worse,10) output(16,eq,75) output(90,eq,79) output(44,eq,100) output(58,eq,65) output(77,eq,10) output(92,eq,79) output(9,eq,33) output(77,eq,51) output(16,eq,51) output(16,eq,10)
Optimization: 18 6
Answer: 4
preference(1,(1,1),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasPrep(1))),()) preference(1,(1,5),0,for(atom(hasPrep(0))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,aso) output(90,better,79) output(44,better,100) output(67,better,33) output(65,better,22) output(77,better,79) output(58,better,22) output(9,better,33) output(16,worse,75) output(79,worse,51) output(16,worse,90) output(92,worse,77) output(79,worse,10) output(90,worse,10) output(77,worse,10) output(90,worse,51) output(77,worse,51) output(16,worse,79) output(92,worse,51) output(16,worse,51) output(92,worse,10) output(16,worse,10) output(9,eq,67) output(58,eq,65) output(92,eq,79)
Optimization: 17 6
Answer: 5
preference(1,(1,1),0,for(atom(hasPrep(1))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,3),0,for(atom(hasPrep(2))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,aso) output(44,better,100) output(9,better,67) output(16,better,90) output(65,better,22) output(77,better,79) output(58,better,22) output(9,better,33) output(16,better,79) output(79,worse,51) output(92,worse,77) output(79,worse,10) output(90,worse,10) output(90,worse,51) output(92,worse,51) output(92,worse,10) output(16,eq,75) output(90,eq,79) output(67,eq,33) output(58,eq,65) output(77,eq,10) output(92,eq,79) output(77,eq,51) output(16,eq,51) output(16,eq,10)
Optimization: 16 6
Answer: 6
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,aso) output(9,better,67) output(16,better,90) output(65,better,22) output(77,better,79) output(77,better,10) output(58,better,22) output(77,better,51) output(16,better,79) output(16,better,51) output(16,better,10) output(67,worse,33) output(92,worse,77) output(16,eq,75) output(90,eq,79) output(44,eq,100) output(58,eq,65) output(92,eq,79) output(9,eq,33)
Optimization: 14 6
Answer: 7
preference(1,(1,2),0,for(atom(hasPrepTime(3))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,aso) output(16,better,75) output(79,better,51) output(79,better,10) output(90,better,10) output(77,better,10) output(90,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(44,worse,100) output(65,worse,22) output(58,worse,22) output(90,eq,79) output(9,eq,67) output(67,eq,33) output(16,eq,90) output(58,eq,65) output(92,eq,77) output(77,eq,79) output(92,eq,79) output(9,eq,33) output(16,eq,79)
Optimization: 13 1
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,aso) output(79,better,51) output(9,better,67) output(16,better,90) output(65,better,22) output(79,better,10) output(77,better,10) output(58,better,22) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(90,worse,79) output(67,worse,33) output(16,eq,75) output(44,eq,100) output(58,eq,65) output(92,eq,77) output(77,eq,79) output(90,eq,10) output(92,eq,79) output(9,eq,33) output(90,eq,51) output(16,eq,79)
Optimization: 12 1
Progression : [ 2;12] (Error: 5)
Progression : [ 3;12] (Error: 3)
Answer: 9
preference(1,(1,1),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,3),0,for(atom(hasCost(2))),()) preference(1,(1,5),0,for(atom(hasPrep(4))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,aso) output(79,better,51) output(67,better,33) output(58,better,65) output(79,better,10) output(90,better,10) output(77,better,10) output(9,better,33) output(90,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(44,worse,100) output(65,worse,22) output(16,eq,75) output(90,eq,79) output(9,eq,67) output(16,eq,90) output(92,eq,77) output(77,eq,79) output(92,eq,79) output(58,eq,22) output(16,eq,79)
Optimization: 11 5
Answer: 10
preference(1,(1,1),0,for(atom(hasPrepTime(1))),()) preference(1,(1,2),0,for(atom(hasPrep(2))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,aso) output(16,better,75) output(79,better,51) output(44,better,100) output(9,better,67) output(16,better,90) output(92,better,77) output(79,better,10) output(90,better,10) output(77,better,10) output(58,better,22) output(9,better,33) output(90,better,51) output(77,better,51) output(16,better,79) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(90,worse,79) output(77,worse,79) output(92,eq,79)
Optimization: 6 6
Progression : [4;6] (Error: 0.5)
Answer: 11
preference(1,(1,1),0,for(atom(hasPrepTime(1))),()) preference(1,(1,2),0,for(atom(hasPrep(2))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,aso) output(16,better,75) output(79,better,51) output(44,better,100) output(9,better,67) output(67,better,33) output(16,better,90) output(65,better,22) output(77,better,79) output(79,better,10) output(90,better,10) output(77,better,10) output(58,better,22) output(9,better,33) output(90,better,51) output(77,better,51) output(16,better,79) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(92,worse,77) output(90,eq,79) output(58,eq,65) output(92,eq,79)
Optimization: 4 6
Progression : 4 [1;6] (Error: 5)
Answer: 12
preference(1,(1,1),0,for(atom(hasPrepTime(1))),()) preference(1,(1,2),0,for(atom(hasPrep(2))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,aso) output(16,better,75) output(79,better,51) output(44,better,100) output(9,better,67) output(67,better,33) output(16,better,90) output(65,better,22) output(77,better,79) output(79,better,10) output(90,better,10) output(77,better,10) output(58,better,22) output(9,better,33) output(90,better,51) output(77,better,51) output(16,better,79) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(92,worse,77) output(90,eq,79) output(58,eq,65) output(92,eq,79)
Optimization: 4 5
Progression : 4 [2;5] (Error: 1.5)
Answer: 13
preference(1,(1,1),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasCost(2))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,aso) output(16,better,75) output(79,better,51) output(44,better,100) output(9,better,67) output(67,better,33) output(16,better,90) output(65,better,22) output(77,better,79) output(79,better,10) output(90,better,10) output(77,better,10) output(58,better,22) output(9,better,33) output(90,better,51) output(77,better,51) output(16,better,79) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(92,worse,77) output(90,eq,79) output(58,eq,65) output(92,eq,79)
Optimization: 4 4
Progression : 4 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 4 4
Calls        : 1
Time         : 1.990s (Solving: 0.44s 1st Model: 0.02s Unsat: 0.27s)
CPU Time     : 3.251s
Threads      : 4        (Winner: 1)

Choices      : 31121    (Domain: 996)
Conflicts    : 10496    (Analyzed: 10487)
Restarts     : 27       (Average: 388.41 Last: 1091)
Model-Level  : 202.5   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 14303    (Deleted: 0)
  Binary     : 338      (Ratio:   2.36%)
  Ternary    : 479      (Ratio:   3.35%)
  Conflict   : 10485    (Average Length:   39.5 Ratio:  73.31%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3818     (Average Length:   21.8 Ratio:  26.69%) 
  Distributed: 1286     (Ratio:  12.27% Average LBD: 2.99) 
  Integrated : 3858     (Ratio: 300.00% Unit: 68 Average Jumps: 36.69)
Backjumps    : 10487    (Average:  2.53 Max: 157 Sum:  26496)
  Executed   : 10465    (Average:  2.50 Max: 157 Sum:  26250 Ratio:  99.07%)
  Bounded    : 22       (Average: 11.18 Max:  26 Sum:    246 Ratio:   0.93%)

Rules        : 335387  
  Choice     : 19      
  Minimize   : 2       
Atoms        : 79260   
Bodies       : 86384   
  Count      : 450     
Equivalences : 217431   (Atom=Atom: 66043 Body=Body: 71435 Other: 79953)
Tight        : Yes
Variables    : 13781    (Eliminated:    0 Frozen: 5663)
Constraints  : 280269   (Binary:  95.3% Ternary:   3.9% Other:   0.8%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) ; 
  not atom(hasPrep(5))  >> atom(hasPrep(1)) ; 
  not atom(hasPrep(7))  >> atom(hasCost(1)) ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) || atom(hasDifficulty(2)) ; 
  not atom(hasPrepTime(1))  >> atom(hasPrep(0)) || atom(hasPrepTime(1)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) || atom(hasPrep(1)) ; 
  not atom(hasPrep(7))  || atom(hasPrep(0)) ; 
  not atom(hasPrep(5))  >> atom(hasPrep(1)) ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  || atom(hasPrep(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasCost(1)) || atom(hasPrepTime(2)) ; 
  atom(hasPrep(7)) || atom(hasPrep(2)) ; 
  atom(hasCost(2)) || atom(hasCost(1)) ; 
  atom(hasPrepTime(2)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(1)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) || atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) || not atom(hasPrep(7))  ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) || atom(hasPrep(1)) ; 
  not atom(hasPrep(7))  || atom(hasPrep(0)) ; 
  not atom(hasPrep(5))  >> atom(hasPrep(1)) ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  || atom(hasPrep(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasDifficulty(1)) || atom(hasPrepTime(2)) ; 
  atom(hasPrep(7)) || atom(hasPrep(2)) ; 
  atom(hasCost(2)) || atom(hasCost(1)) ; 
  atom(hasPrepTime(2)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(1)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasDifficulty(2)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(3))  >> not atom(hasPrep(4))  || atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> not atom(hasPrep(4))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasPrepTime(3)) || atom(hasDifficulty(2)) ; 
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) || atom(hasPrep(4)) ; 
  atom(hasCost(1)) >> atom(hasPrep(7)) || atom(hasCost(2)) ; 
  not atom(hasPrep(3))  >> not atom(hasPrep(4))  || atom(hasPrep(4)) ; 
  not atom(hasPrep(1))  >> not atom(hasPrep(7))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrep(1)) || atom(hasPrepTime(1)) ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) || atom(hasPrep(2)) ; 
  not atom(hasPrep(6))  >> not atom(hasCost(1))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(2))  >> not atom(hasCost(2))  || not atom(hasDifficulty(1))  ; 
  atom(hasPrep(4)) >> not atom(hasCost(2))  || not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrep(1)) || atom(hasPrepTime(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(3)) || atom(hasPrep(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) || not atom(hasPrep(0))  ; 
  not atom(hasPrep(1))  >> not atom(hasCost(1))  || not atom(hasDifficulty(2))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(1)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrep(1)) || atom(hasPrepTime(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(3)) || atom(hasPrep(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) || not atom(hasPrep(0))  ; 
  not atom(hasPrep(1))  >> not atom(hasCost(1))  || not atom(hasDifficulty(2))  ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasPrep(4))  || atom(hasDifficulty(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) || not atom(hasPrep(0))  ; 
  atom(hasPrep(7)) >> not atom(hasCost(1))  || atom(hasDifficulty(1)) ; 
  atom(hasPrepTime(1)) >> not atom(hasPrepTime(1))  
}.
