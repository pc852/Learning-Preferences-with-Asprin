asprin_vL version 1.0
Reading from stdin
-:1223:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1233:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1248:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1329:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1590:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1603:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1780:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1909:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1981:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1985:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1985:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2090:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2116:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2236:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2270:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2292:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1140:1-16: info: no atoms over signature occur in program:
  output/3

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1133:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(75,eq,5) output(60,eq,20) output(20,eq,55) output(55,eq,48) output(48,eq,32) output(26,eq,22) output(73,eq,57) output(11,eq,10) output(10,eq,76) output(76,eq,38) output(38,eq,26) output(25,eq,62) output(76,eq,26) output(10,eq,38) output(11,eq,76) output(38,eq,22) output(55,eq,32) output(20,eq,48) output(60,eq,55) output(60,eq,48) output(20,eq,32) output(60,eq,32) output(76,eq,22) output(10,eq,22) output(11,eq,38) output(10,eq,26) output(11,eq,26) output(11,eq,22)
Optimization: 28 0
Answer: 2
preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,worse,10) output(75,eq,5) output(60,eq,20) output(20,eq,55) output(55,eq,48) output(48,eq,32) output(26,eq,22) output(73,eq,57) output(76,eq,38) output(38,eq,26) output(25,eq,62) output(76,eq,26) output(11,eq,76) output(38,eq,22) output(55,eq,32) output(20,eq,48) output(60,eq,55) output(60,eq,48) output(20,eq,32) output(60,eq,32) output(76,eq,22) output(11,eq,38) output(11,eq,26) output(11,eq,22)
Optimization: 24 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrep(4))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(11,better,10) output(11,better,38) output(26,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,22) output(20,better,48) output(20,better,32) output(48,better,32) output(10,worse,76) output(10,worse,38) output(10,worse,22) output(10,worse,26) output(11,worse,76) output(11,worse,26) output(11,worse,22) output(25,worse,62) output(38,worse,26) output(38,worse,22) output(20,worse,55) output(73,worse,57) output(75,eq,5) output(76,eq,26) output(60,eq,55)
Optimization: 15 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrep(4))),2) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(11,better,10) output(11,better,38) output(11,better,22) output(26,better,22) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,22) output(20,better,48) output(20,better,32) output(48,better,32) output(10,worse,76) output(10,worse,38) output(10,worse,22) output(10,worse,26) output(11,worse,76) output(11,worse,26) output(25,worse,62) output(38,worse,26) output(20,worse,55) output(73,worse,57) output(75,worse,5) output(76,eq,26) output(60,eq,55)
Optimization: 13 14
Answer: 5
preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(10,better,22) output(11,better,10) output(11,better,38) output(11,better,26) output(11,better,22) output(26,better,22) output(38,better,22) output(55,better,32) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(10,worse,76) output(10,worse,38) output(10,worse,26) output(25,worse,62) output(60,worse,20) output(55,eq,48) output(38,eq,26) output(11,eq,76)
Optimization: 8 10
Answer: 6
preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(10,better,22) output(11,better,10) output(11,better,38) output(11,better,26) output(11,better,22) output(26,better,22) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(10,worse,76) output(10,worse,38) output(10,worse,26) output(25,worse,62) output(60,worse,20) output(38,eq,26) output(11,eq,76)
Optimization: 7 12
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,32) output(60,better,55) output(60,better,32) output(76,better,22) output(20,better,55) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(55,worse,48) output(60,worse,48) output(76,worse,38) output(20,worse,48) output(60,eq,20) output(76,eq,26)
Optimization: 6 10
Answer: 8
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasCost(2))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,32) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(55,worse,48) output(60,worse,20) output(60,worse,55) output(60,worse,48) output(20,worse,48)
Optimization: 5 11
Answer: 9
preference(1,(1,3),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(20,better,55) output(20,better,48) output(20,better,32) output(73,better,57) output(75,better,5) output(76,worse,38) output(48,eq,32) output(26,eq,22) output(76,eq,26) output(76,eq,22)
Optimization: 5 9
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),5) preference(1,less(weight)) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(55,better,48) output(55,better,32) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(10,worse,76) output(38,worse,26) output(38,worse,22) output(60,worse,20)
Optimization: 4 12
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(10,worse,76) output(38,worse,26) output(38,worse,22)
Optimization: 3 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasCost(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(10,worse,76) output(11,worse,76) output(26,worse,22)
Optimization: 3 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(10,eq,76) output(38,eq,26)
Optimization: 2 11
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5) output(38,eq,26)
Optimization: 1 10
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrep(4))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrep(3))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 14
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasPrep(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasCost(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(3))),7) preference(1,(1,12),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 11
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 10
Progression : 0 [ 2;10] (Error: 4)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 9
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 8
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(10,better,22) output(10,better,26) output(11,better,10) output(11,better,76) output(11,better,38) output(11,better,26) output(11,better,22) output(25,better,62) output(26,better,22) output(38,better,26) output(38,better,22) output(55,better,48) output(55,better,32) output(60,better,20) output(60,better,55) output(60,better,48) output(60,better,32) output(76,better,38) output(76,better,26) output(76,better,22) output(20,better,55) output(20,better,48) output(20,better,32) output(48,better,32) output(73,better,57) output(75,better,5)
Optimization: 0 7
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.058 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 292.132s (Solving: 290.56s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1163.563s
Threads      : 4        (Winner: 4)

Choices      : 7459064  (Domain: 831031)
Conflicts    : 6960015  (Analyzed: 6960012)
Restarts     : 5355     (Average: 1299.72 Last: 516446)
Model-Level  : 32.1    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7119643  (Deleted: 6803741)
  Binary     : 1403     (Ratio:   0.02%)
  Ternary    : 5193     (Ratio:   0.07%)
  Conflict   : 6960012  (Average Length:  255.2 Ratio:  97.76%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 159631   (Average Length:  201.4 Ratio:   2.24%) 
  Distributed: 53239    (Ratio:   0.76% Average LBD: 3.85) 
  Integrated : 159717   (Ratio: 300.00% Unit: 82 Average Jumps: 5.80)
Backjumps    : 6960012  (Average:  1.06 Max:  69 Sum: 7404608)
  Executed   : 6960011  (Average:  1.06 Max:  69 Sum: 7404598 Ratio: 100.00%)
  Bounded    : 1        (Average: 10.00 Max:  10 Sum:     10 Ratio:   0.00%)

Rules        : 88848   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8372    
Bodies       : 5549    
  Sum        : 56      
  Count      : 14      
Equivalences : 3398     (Atom=Atom: 293 Body=Body: 126 Other: 2979)
Tight        : Yes
Variables    : 4785     (Eliminated:    0 Frozen: 3315)
Constraints  : 88424    (Binary:  96.5% Ternary:   1.7% Other:   1.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) 
}.
