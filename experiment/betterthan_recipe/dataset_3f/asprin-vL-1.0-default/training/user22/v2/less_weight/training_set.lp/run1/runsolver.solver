asprin_vL version 1.0
Reading from stdin
-:1235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1152:1-16: info: no atoms over signature occur in program:
  output/3

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(73,eq,57) output(57,eq,11) output(11,eq,10) output(10,eq,76) output(76,eq,38) output(25,eq,62) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(5,eq,11) output(22,eq,25) output(25,eq,36) output(22,eq,36) output(42,eq,23) output(51,eq,73) output(22,eq,62) output(10,eq,38) output(11,eq,76) output(57,eq,10) output(5,eq,10) output(73,eq,11) output(42,eq,57) output(51,eq,57) output(42,eq,11) output(51,eq,11) output(73,eq,10) output(42,eq,10) output(57,eq,76) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(57,eq,38) output(5,eq,38) output(51,eq,23) output(73,eq,38) output(42,eq,38) output(51,eq,38) output(42,eq,76) output(51,eq,76) output(51,eq,10)
Optimization: 40 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(51,better,57) output(42,better,57) output(73,better,57) output(57,worse,11) output(57,worse,10) output(57,worse,76) output(57,worse,38) output(11,eq,10) output(10,eq,76) output(76,eq,38) output(25,eq,62) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(5,eq,11) output(22,eq,25) output(25,eq,36) output(22,eq,36) output(42,eq,23) output(51,eq,73) output(22,eq,62) output(10,eq,38) output(11,eq,76) output(5,eq,10) output(73,eq,11) output(42,eq,11) output(51,eq,11) output(73,eq,10) output(42,eq,10) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(5,eq,38) output(51,eq,23) output(73,eq,38) output(42,eq,38) output(51,eq,38) output(42,eq,76) output(51,eq,76) output(51,eq,10)
Optimization: 37 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrep(3))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(4))),8) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,73) output(51,better,11) output(51,better,38) output(51,better,76) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(5,worse,10) output(11,worse,10) output(25,worse,36) output(51,worse,57) output(42,worse,23) output(42,worse,57) output(42,worse,10) output(73,worse,57) output(73,worse,23) output(73,worse,10) output(76,eq,38) output(25,eq,62) output(42,eq,73) output(5,eq,11) output(11,eq,76) output(73,eq,11) output(42,eq,11) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(5,eq,38) output(51,eq,23) output(73,eq,38) output(42,eq,38) output(42,eq,76) output(51,eq,10)
Optimization: 26 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrep(4))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),8) preference(1,less(weight)) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(25,worse,36) output(42,worse,57) output(73,worse,57) output(11,eq,10) output(10,eq,76) output(76,eq,38) output(25,eq,62) output(42,eq,73) output(73,eq,23) output(5,eq,11) output(42,eq,23) output(10,eq,38) output(11,eq,76) output(5,eq,10) output(73,eq,11) output(42,eq,11) output(73,eq,10) output(42,eq,10) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(5,eq,38) output(73,eq,38) output(42,eq,38) output(42,eq,76)
Optimization: 25 14
Answer: 5
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrep(7))),6) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrep(3))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(5,better,11) output(5,better,10) output(5,better,76) output(11,better,10) output(11,better,76) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,57) output(51,better,10) output(57,better,10) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(10,worse,76) output(10,worse,38) output(11,worse,38) output(51,worse,42) output(51,worse,73) output(51,worse,11) output(51,worse,23) output(51,worse,38) output(51,worse,76) output(57,worse,11) output(57,worse,76) output(57,worse,38) output(76,worse,38) output(42,worse,73) output(42,eq,23) output(5,eq,38)
Optimization: 16 11
Progression : [ 2;16] (Error: 7)
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrep(3))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(5,better,11) output(5,better,10) output(5,better,76) output(11,better,10) output(11,better,76) output(22,better,62) output(25,better,62) output(51,better,57) output(51,better,11) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(10,worse,76) output(10,worse,38) output(11,worse,38) output(22,worse,25) output(22,worse,36) output(25,worse,36) output(51,worse,42) output(51,worse,73) output(51,worse,23) output(76,worse,38) output(5,eq,38)
Optimization: 11 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(5,better,11) output(5,better,10) output(11,better,10) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,10) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(10,worse,76) output(10,worse,38) output(11,worse,76) output(11,worse,38) output(22,worse,25) output(57,worse,11) output(57,worse,76) output(57,worse,38) output(76,eq,38) output(5,eq,76) output(5,eq,38)
Optimization: 11 13
Progression : [ 3;11] (Error: 2.66667)
Answer: 8
preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(5,better,10) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,57) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,10) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,76) output(10,worse,76) output(10,worse,38) output(51,worse,42) output(51,worse,73) output(57,worse,11) output(57,worse,76) output(51,eq,11) output(5,eq,38)
Optimization: 10 9
Answer: 9
preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(5,better,10) output(5,better,76) output(10,better,76) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,57) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,10) output(57,better,76) output(57,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(10,worse,38) output(22,worse,25) output(51,worse,42) output(51,worse,73) output(57,worse,11) output(76,worse,38) output(51,eq,11) output(5,eq,38)
Optimization: 9 8
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(5,better,11) output(5,better,10) output(5,better,76) output(10,better,76) output(11,better,76) output(22,better,62) output(25,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(10,worse,38) output(11,worse,38) output(22,worse,25) output(22,worse,36) output(25,worse,36) output(76,worse,38) output(11,eq,10) output(5,eq,38)
Optimization: 8 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(5,better,11) output(5,better,10) output(5,better,76) output(10,better,76) output(11,better,10) output(11,better,76) output(22,better,62) output(25,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(10,worse,38) output(11,worse,38) output(22,worse,25) output(22,worse,36) output(25,worse,36) output(76,worse,38) output(5,eq,38)
Optimization: 7 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(5,better,11) output(5,better,10) output(5,better,76) output(10,better,76) output(11,better,10) output(11,better,76) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(10,worse,38) output(11,worse,38) output(22,worse,25) output(22,worse,36) output(76,worse,38) output(5,eq,38)
Optimization: 6 11
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrep(4))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasPrep(3))),5) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,10) output(57,better,76) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(57,eq,11) output(5,eq,38)
Optimization: 5 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasPrep(4))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(3))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(5,better,10) output(5,better,76) output(10,better,76) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(10,worse,38) output(76,worse,38) output(5,eq,38)
Optimization: 4 13
Progression : [4;4] (Error: 0)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(1))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(5,eq,38)
Optimization: 4 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(1))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,12),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(5,eq,38)
Optimization: 4 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(1))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(5,eq,38)
Optimization: 4 10
Progression : 4 [ 1;10] (Error: 9)
Progression : 4 [ 2;10] (Error: 4)
Answer: 18
preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrep(3))),2) preference(1,(1,9),1,for(atom(hasPrep(4))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(5,eq,38)
Optimization: 4 9
Answer: 19
preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrep(3))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(25,better,62) output(25,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(76,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(5,eq,38)
Optimization: 4 8
Progression : 4 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.060 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 4 8
Bounds       : 4 [3;8]
Calls        : 1
Time         : 298.208s (Solving: 296.54s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.210s
Threads      : 4        (Winner: 4)

Choices      : 10945429 (Domain: 902731)
Conflicts    : 7150809  (Analyzed: 7150802)
Restarts     : 6364     (Average: 1123.63 Last: 40045)
Model-Level  : 93.3    
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 7267189  (Deleted: 6937552)
  Binary     : 315      (Ratio:   0.00%)
  Ternary    : 6988     (Ratio:   0.10%)
  Conflict   : 7150802  (Average Length:  238.2 Ratio:  98.40%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 116387   (Average Length:  180.6 Ratio:   1.60%) 
  Distributed: 38866    (Ratio:   0.54% Average LBD: 3.76) 
  Integrated : 116598   (Ratio: 300.00% Unit: 261 Average Jumps: 13.44)
Backjumps    : 7150802  (Average:  1.44 Max: 481 Sum: 10281856)
  Executed   : 7150788  (Average:  1.44 Max: 481 Sum: 10281567 Ratio: 100.00%)
  Bounded    : 14       (Average: 20.64 Max:  27 Sum:    289 Ratio:   0.00%)

Rules        : 106193  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9524    
Bodies       : 5680    
  Sum        : 79      
  Count      : 14      
Equivalences : 6467     (Atom=Atom: 411 Body=Body: 175 Other: 5881)
Tight        : Yes
Variables    : 4807     (Eliminated:    0 Frozen: 3337)
Constraints  : 104651   (Binary:  97.0% Ternary:   1.4% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) 
}.
