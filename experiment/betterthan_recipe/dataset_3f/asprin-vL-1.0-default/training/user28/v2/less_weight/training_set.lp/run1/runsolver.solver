asprin_vL version 1.0
Reading from stdin
-:1229:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1239:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1254:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1335:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1596:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1609:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1786:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1915:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1987:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1991:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2096:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2122:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2242:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2276:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1146:1-16: info: no atoms over signature occur in program:
  output/3

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,39) output(39,eq,74) output(74,eq,65) output(65,eq,80) output(82,eq,33) output(68,eq,88) output(83,eq,68) output(68,eq,55) output(52,eq,39) output(46,eq,74) output(74,eq,47) output(47,eq,66) output(74,eq,66) output(39,eq,47) output(46,eq,47) output(83,eq,55) output(83,eq,88) output(74,eq,80) output(39,eq,65) output(46,eq,65) output(10,eq,74) output(52,eq,74) output(10,eq,65) output(52,eq,65) output(39,eq,80) output(46,eq,80) output(10,eq,80) output(52,eq,80) output(10,eq,47) output(52,eq,47) output(39,eq,66) output(46,eq,66) output(10,eq,66) output(52,eq,66)
Optimization: 34 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(10,better,47) output(39,better,47) output(46,better,47) output(52,better,47) output(74,better,47) output(47,worse,66) output(10,eq,39) output(39,eq,74) output(74,eq,65) output(65,eq,80) output(82,eq,33) output(68,eq,88) output(83,eq,68) output(68,eq,55) output(52,eq,39) output(46,eq,74) output(74,eq,66) output(83,eq,55) output(83,eq,88) output(74,eq,80) output(39,eq,65) output(46,eq,65) output(10,eq,74) output(52,eq,74) output(10,eq,65) output(52,eq,65) output(39,eq,80) output(46,eq,80) output(10,eq,80) output(52,eq,80) output(39,eq,66) output(46,eq,66) output(10,eq,66) output(52,eq,66)
Optimization: 29 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(3))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(39,better,80) output(39,better,66) output(46,better,80) output(46,better,66) output(52,better,80) output(52,better,66) output(74,better,66) output(74,better,80) output(47,better,66) output(65,better,80) output(10,worse,39) output(10,worse,74) output(10,worse,65) output(10,worse,47) output(82,worse,33) output(39,eq,74) output(74,eq,65) output(68,eq,88) output(83,eq,68) output(68,eq,55) output(52,eq,39) output(46,eq,74) output(74,eq,47) output(39,eq,47) output(46,eq,47) output(83,eq,55) output(83,eq,88) output(39,eq,65) output(46,eq,65) output(52,eq,74) output(52,eq,65) output(10,eq,80) output(52,eq,47) output(10,eq,66)
Optimization: 24 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(3))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(39,better,47) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,80) output(46,better,66) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,47) output(74,better,66) output(74,better,80) output(65,better,80) output(10,worse,39) output(10,worse,74) output(10,worse,65) output(82,worse,33) output(39,eq,74) output(74,eq,65) output(68,eq,88) output(83,eq,68) output(68,eq,55) output(52,eq,39) output(46,eq,74) output(47,eq,66) output(83,eq,55) output(83,eq,88) output(39,eq,65) output(46,eq,65) output(52,eq,74) output(52,eq,65) output(10,eq,80) output(10,eq,47) output(10,eq,66)
Optimization: 21 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(3))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(10,better,47) output(39,better,47) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,80) output(46,better,66) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,47) output(74,better,66) output(74,better,80) output(65,better,80) output(10,worse,39) output(10,worse,74) output(10,worse,65) output(82,worse,33) output(47,worse,66) output(39,eq,74) output(74,eq,65) output(68,eq,88) output(83,eq,68) output(68,eq,55) output(52,eq,39) output(46,eq,74) output(83,eq,55) output(83,eq,88) output(39,eq,65) output(46,eq,65) output(52,eq,74) output(52,eq,65) output(10,eq,80) output(10,eq,66)
Optimization: 20 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(3))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasCost(1))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(10,better,65) output(10,better,47) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(46,better,47) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(74,better,65) output(74,better,47) output(82,better,33) output(83,better,68) output(83,better,88) output(10,worse,39) output(10,worse,80) output(10,worse,66) output(46,worse,74) output(46,worse,65) output(46,worse,80) output(46,worse,66) output(74,worse,66) output(74,worse,80) output(47,worse,66) output(65,worse,80) output(68,worse,55) output(68,eq,88) output(52,eq,39) output(83,eq,55) output(10,eq,74) output(39,eq,66) output(52,eq,66)
Optimization: 18 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrep(3))),7) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,47) output(39,better,80) output(46,better,47) output(46,better,80) output(52,better,80) output(52,better,47) output(74,better,47) output(74,better,80) output(83,better,68) output(83,better,88) output(65,better,80) output(46,worse,74) output(46,worse,65) output(46,worse,66) output(47,worse,66) output(68,worse,55) output(39,eq,74) output(74,eq,65) output(82,eq,33) output(68,eq,88) output(52,eq,39) output(74,eq,66) output(83,eq,55) output(39,eq,65) output(52,eq,74) output(52,eq,65) output(39,eq,66) output(52,eq,66)
Optimization: 17 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(10,better,47) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(83,better,55) output(65,better,80) output(68,better,55) output(10,worse,39) output(10,worse,74) output(10,worse,65) output(10,worse,80) output(10,worse,66) output(82,worse,33) output(47,worse,66) output(39,eq,74) output(68,eq,88) output(83,eq,68) output(52,eq,39) output(46,eq,74) output(83,eq,88) output(52,eq,74)
Optimization: 14 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(83,better,55) output(65,better,80) output(68,better,55) output(10,worse,39) output(10,worse,74) output(10,worse,65) output(10,worse,80) output(10,worse,47) output(10,worse,66) output(82,worse,33) output(47,worse,66) output(68,eq,88) output(83,eq,68) output(52,eq,39) output(46,eq,74) output(83,eq,88)
Optimization: 13 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(83,better,55) output(47,better,66) output(65,better,80) output(68,better,55) output(10,worse,39) output(10,worse,74) output(10,worse,65) output(10,worse,80) output(10,worse,47) output(10,worse,66) output(82,worse,33) output(68,eq,88) output(83,eq,68) output(52,eq,39) output(46,eq,74) output(83,eq,88)
Optimization: 12 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(10,better,39) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(68,better,55) output(39,worse,74) output(52,worse,74) output(83,worse,68) output(83,worse,55) output(83,worse,88) output(47,worse,66) output(65,eq,80) output(68,eq,88) output(52,eq,39) output(46,eq,74) output(10,eq,74)
Optimization: 11 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(10,better,39) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(47,better,66) output(68,better,55) output(39,worse,74) output(52,worse,74) output(83,worse,68) output(83,worse,55) output(83,worse,88) output(65,eq,80) output(68,eq,88) output(52,eq,39) output(46,eq,74) output(10,eq,74)
Optimization: 10 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(10,better,39) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(47,better,66) output(65,better,80) output(68,better,55) output(10,worse,74) output(39,worse,74) output(52,worse,74) output(83,worse,68) output(83,worse,55) output(83,worse,88) output(68,eq,88) output(52,eq,39) output(46,eq,74)
Optimization: 9 13
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,74) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,39) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(83,better,68) output(83,better,55) output(83,better,88) output(47,better,66) output(65,better,80) output(68,better,55) output(68,eq,88)
Optimization: 1 13
Progression : 1 [ 1;13] (Error: 12)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,74) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,39) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(83,better,68) output(83,better,55) output(83,better,88) output(47,better,66) output(65,better,80) output(68,better,55) output(68,eq,88)
Optimization: 1 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,74) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,39) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(83,better,68) output(83,better,55) output(83,better,88) output(47,better,66) output(65,better,80) output(68,better,55) output(68,eq,88)
Optimization: 1 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,74) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,39) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(83,better,68) output(83,better,55) output(83,better,88) output(47,better,66) output(65,better,80) output(68,better,55) output(68,eq,88)
Optimization: 1 9
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,74) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,39) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(83,better,68) output(83,better,55) output(83,better,88) output(47,better,66) output(65,better,80) output(68,better,55) output(68,eq,88)
Optimization: 1 8
Progression : 1 [2;8] (Error: 3)
Progression : 1 [3;8] (Error: 1.66667)
Answer: 19
preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(10,better,39) output(10,better,74) output(10,better,65) output(10,better,80) output(10,better,47) output(10,better,66) output(39,better,74) output(39,better,47) output(39,better,65) output(39,better,80) output(39,better,66) output(46,better,74) output(46,better,47) output(46,better,65) output(46,better,80) output(46,better,66) output(52,better,39) output(52,better,74) output(52,better,65) output(52,better,80) output(52,better,47) output(52,better,66) output(74,better,65) output(74,better,47) output(74,better,66) output(74,better,80) output(82,better,33) output(83,better,68) output(83,better,55) output(83,better,88) output(47,better,66) output(65,better,80) output(68,better,55) output(68,eq,88)
Optimization: 1 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.047 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 1 7
Calls        : 1
Time         : 298.031s (Solving: 296.36s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.678s
Threads      : 4        (Winner: 4)

Choices      : 7248843  (Domain: 834541)
Conflicts    : 6748314  (Analyzed: 6748311)
Restarts     : 5862     (Average: 1151.20 Last: 472123)
Model-Level  : 35.7    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6858521  (Deleted: 6625042)
  Binary     : 524      (Ratio:   0.01%)
  Ternary    : 4526     (Ratio:   0.07%)
  Conflict   : 6748311  (Average Length:  236.5 Ratio:  98.39%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 110210   (Average Length:  190.4 Ratio:   1.61%) 
  Distributed: 36928    (Ratio:   0.55% Average LBD: 3.77) 
  Integrated : 110784   (Ratio: 300.00% Unit: 199 Average Jumps: 7.56)
Backjumps    : 6748311  (Average:  1.06 Max:  31 Sum: 7181450)
  Executed   : 6748310  (Average:  1.06 Max:  31 Sum: 7181420 Ratio: 100.00%)
  Bounded    : 1        (Average: 30.00 Max:  30 Sum:     30 Ratio:   0.00%)

Rules        : 97687   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8944    
Bodies       : 5612    
  Sum        : 65      
  Count      : 14      
Equivalences : 6212     (Atom=Atom: 356 Body=Body: 156 Other: 5700)
Tight        : Yes
Variables    : 4788     (Eliminated:    0 Frozen: 3318)
Constraints  : 96694    (Binary:  96.8% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(7)) 
}.
