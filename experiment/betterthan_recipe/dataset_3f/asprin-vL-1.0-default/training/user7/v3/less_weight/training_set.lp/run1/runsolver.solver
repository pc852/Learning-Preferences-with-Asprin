asprin_vL version 1.0
Reading from stdin
-:1227:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1237:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1252:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1333:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1594:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1607:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1784:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1913:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1985:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1989:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1989:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2094:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2120:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2240:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2274:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2296:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1144:1-16: info: no atoms over signature occur in program:
  output/3

-:1136:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1137:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(78,eq,52) output(52,eq,39) output(39,eq,32) output(46,eq,33) output(33,eq,7) output(7,eq,60) output(42,eq,78) output(78,eq,51) output(72,eq,31) output(31,eq,23) output(23,eq,79) output(79,eq,7) output(23,eq,7) output(31,eq,79) output(72,eq,23) output(42,eq,51) output(33,eq,60) output(79,eq,60) output(46,eq,7) output(52,eq,32) output(78,eq,39) output(42,eq,52) output(42,eq,39) output(78,eq,32) output(42,eq,32) output(23,eq,60) output(31,eq,60) output(46,eq,60) output(72,eq,79) output(31,eq,7) output(72,eq,7) output(72,eq,60)
Optimization: 32 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(31,better,7) output(46,better,7) output(52,better,39) output(52,better,32) output(79,better,7) output(23,better,7) output(33,better,7) output(42,better,39) output(42,better,32) output(78,better,39) output(78,better,32) output(7,worse,60) output(72,worse,31) output(72,worse,23) output(72,worse,79) output(72,worse,60) output(78,eq,52) output(39,eq,32) output(46,eq,33) output(42,eq,78) output(78,eq,51) output(31,eq,23) output(23,eq,79) output(31,eq,79) output(42,eq,51) output(33,eq,60) output(79,eq,60) output(42,eq,52) output(23,eq,60) output(31,eq,60) output(46,eq,60) output(72,eq,7)
Optimization: 21 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(31,better,7) output(46,better,7) output(52,better,39) output(52,better,32) output(79,better,7) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,7) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(39,worse,32) output(46,worse,33) output(7,worse,60) output(72,worse,31) output(72,worse,23) output(72,worse,79) output(72,worse,60) output(42,eq,78) output(31,eq,79) output(79,eq,60) output(31,eq,60) output(46,eq,60)
Optimization: 13 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(79,better,7) output(79,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(31,worse,79) output(31,worse,60) output(39,worse,32) output(52,worse,39) output(52,worse,32) output(7,worse,60) output(42,worse,78) output(42,worse,51) output(42,worse,52) output(42,worse,39) output(42,worse,32)
Optimization: 12 13
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(6))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(23,better,7) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,39) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(39,worse,32) output(79,worse,60) output(7,worse,60) output(23,worse,60) output(42,worse,52) output(42,worse,32) output(78,worse,52) output(78,worse,51) output(78,worse,39) output(78,worse,32) output(23,eq,79) output(31,eq,60)
Optimization: 12 11
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(31,better,60) output(31,better,7) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,51) output(42,better,39) output(42,better,32) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(46,worse,33) output(7,worse,60) output(42,worse,78) output(72,worse,31) output(72,worse,23) output(72,worse,79) output(39,eq,32) output(31,eq,79) output(42,eq,52)
Optimization: 10 11
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(31,better,60) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,51) output(42,better,39) output(42,better,32) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(31,worse,79) output(39,worse,32) output(7,worse,60) output(42,worse,78) output(72,worse,31) output(72,worse,23) output(72,worse,79) output(42,eq,52)
Optimization: 9 12
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(31,better,79) output(31,better,60) output(31,better,7) output(46,better,7) output(46,better,60) output(52,better,39) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,51) output(42,better,52) output(42,better,39) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(39,worse,32) output(46,worse,33) output(52,worse,32) output(42,worse,78) output(42,worse,32) output(72,worse,31) output(72,worse,23)
Optimization: 8 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(52,worse,39) output(52,worse,32) output(79,worse,7) output(79,worse,60) output(72,worse,31) output(72,worse,23)
Optimization: 7 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(52,worse,39) output(52,worse,32) output(79,worse,7) output(79,worse,60) output(72,worse,31) output(72,eq,23)
Optimization: 6 12
Answer: 11
preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(31,better,60) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,23) output(39,worse,32) output(52,worse,32) output(72,worse,23) output(31,eq,79)
Optimization: 5 11
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(31,better,23) output(31,better,60) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(31,worse,79) output(39,worse,32) output(52,worse,32) output(23,worse,79)
Optimization: 4 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),1) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,39) output(39,worse,32) output(52,worse,32) output(78,worse,51) output(78,worse,32)
Optimization: 4 12
Answer: 14
preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(46,better,7) output(46,better,60) output(52,better,39) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(39,worse,32) output(46,worse,33) output(52,worse,32)
Optimization: 3 13
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(42,worse,78) output(31,eq,23)
Optimization: 2 12
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32) output(39,worse,32) output(23,worse,79)
Optimization: 2 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,51) output(78,better,39) output(78,better,32) output(78,eq,52)
Optimization: 1 12
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32)
Optimization: 0 11
Answer: 21
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
Answer: 22
preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(31,better,23) output(31,better,79) output(31,better,60) output(31,better,7) output(39,better,32) output(46,better,33) output(46,better,7) output(46,better,60) output(52,better,39) output(52,better,32) output(79,better,7) output(79,better,60) output(7,better,60) output(23,better,79) output(23,better,7) output(23,better,60) output(33,better,7) output(33,better,60) output(42,better,78) output(42,better,51) output(42,better,52) output(42,better,39) output(42,better,32) output(72,better,31) output(72,better,23) output(72,better,79) output(72,better,7) output(72,better,60) output(78,better,52) output(78,better,51) output(78,better,39) output(78,better,32)
Optimization: 0 9
Progression : 0 [4;9] (Error: 1.25)
Progression : 0 [5;9] (Error: 0.8)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.061 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 293.115s (Solving: 291.60s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1167.509s
Threads      : 4        (Winner: 4)

Choices      : 7930187  (Domain: 918448)
Conflicts    : 7373312  (Analyzed: 7373307)
Restarts     : 5283     (Average: 1395.67 Last: 367468)
Model-Level  : 34.7    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 7569382  (Deleted: 7330867)
  Binary     : 296      (Ratio:   0.00%)
  Ternary    : 7377     (Ratio:   0.10%)
  Conflict   : 7373307  (Average Length:  205.3 Ratio:  97.41%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 196075   (Average Length:   76.0 Ratio:   2.59%) 
  Distributed: 65565    (Ratio:   0.89% Average LBD: 3.69) 
  Integrated : 196695   (Ratio: 300.00% Unit: 2189 Average Jumps: 5.02)
Backjumps    : 7373307  (Average:  1.07 Max:  45 Sum: 7872839)
  Executed   : 7373290  (Average:  1.07 Max:  45 Sum: 7872797 Ratio: 100.00%)
  Bounded    : 17       (Average:  2.47 Max:  26 Sum:     42 Ratio:   0.00%)

Rules        : 93660   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8740    
Bodies       : 5593    
  Sum        : 64      
  Count      : 14      
Equivalences : 3538     (Atom=Atom: 333 Body=Body: 142 Other: 3063)
Tight        : Yes
Variables    : 4777     (Eliminated:    0 Frozen: 3307)
Constraints  : 92848    (Binary:  96.7% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) 
}.
