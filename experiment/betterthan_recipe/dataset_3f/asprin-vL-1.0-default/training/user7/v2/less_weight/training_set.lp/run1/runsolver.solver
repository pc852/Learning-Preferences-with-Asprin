asprin_vL version 1.0
Reading from stdin
-:1239:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1249:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1264:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1345:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1606:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1619:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1796:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1925:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1997:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2001:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2007:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2106:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2132:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2252:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2286:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1156:1-16: info: no atoms over signature occur in program:
  output/3

-:1148:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1149:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(90,eq,42) output(42,eq,78) output(51,eq,18) output(18,eq,72) output(72,eq,31) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(41,eq,37) output(32,eq,72) output(72,eq,92) output(18,eq,92) output(32,eq,92) output(76,eq,37) output(18,eq,41) output(51,eq,76) output(4,eq,76) output(31,eq,79) output(72,eq,23) output(18,eq,31) output(32,eq,31) output(51,eq,72) output(4,eq,72) output(90,eq,78) output(51,eq,31) output(4,eq,31) output(18,eq,23) output(32,eq,23) output(51,eq,23) output(4,eq,23) output(72,eq,79) output(18,eq,79) output(32,eq,79) output(51,eq,41) output(4,eq,41) output(18,eq,37) output(51,eq,37) output(4,eq,37) output(51,eq,92) output(4,eq,92) output(51,eq,79) output(4,eq,79)
Optimization: 44 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(23,better,79) output(4,worse,23) output(31,worse,23) output(51,worse,23) output(90,worse,78) output(18,worse,23) output(32,worse,23) output(42,worse,78) output(72,worse,23) output(90,eq,42) output(51,eq,18) output(18,eq,72) output(72,eq,31) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(41,eq,37) output(32,eq,72) output(72,eq,92) output(18,eq,92) output(32,eq,92) output(76,eq,37) output(18,eq,41) output(51,eq,76) output(4,eq,76) output(31,eq,79) output(18,eq,31) output(32,eq,31) output(51,eq,72) output(4,eq,72) output(51,eq,31) output(4,eq,31) output(72,eq,79) output(18,eq,79) output(32,eq,79) output(51,eq,41) output(4,eq,41) output(18,eq,37) output(51,eq,37) output(4,eq,37) output(51,eq,92) output(4,eq,92) output(51,eq,79) output(4,eq,79)
Optimization: 43 4
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,41) output(51,better,76) output(51,better,72) output(51,better,41) output(18,better,72) output(18,better,76) output(18,better,41) output(76,worse,37) output(32,worse,92) output(32,worse,31) output(32,worse,23) output(32,worse,79) output(41,worse,37) output(72,worse,31) output(72,worse,92) output(72,worse,23) output(72,worse,79) output(90,eq,42) output(42,eq,78) output(51,eq,18) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(31,eq,79) output(18,eq,31) output(90,eq,78) output(51,eq,31) output(4,eq,31) output(18,eq,23) output(51,eq,23) output(4,eq,23) output(18,eq,79) output(18,eq,37) output(51,eq,37) output(4,eq,37) output(51,eq,92) output(4,eq,92) output(51,eq,79) output(4,eq,79)
Optimization: 35 9
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasCost(2))),1) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,41) output(51,better,76) output(51,better,72) output(51,better,41) output(18,better,72) output(18,better,76) output(18,better,41) output(76,worse,37) output(32,worse,92) output(32,worse,31) output(32,worse,23) output(32,worse,79) output(41,worse,37) output(72,worse,31) output(72,worse,92) output(72,worse,23) output(72,worse,79) output(90,eq,42) output(42,eq,78) output(51,eq,18) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(31,eq,79) output(18,eq,31) output(90,eq,78) output(51,eq,31) output(4,eq,31) output(18,eq,23) output(51,eq,23) output(4,eq,23) output(18,eq,79) output(18,eq,37) output(51,eq,37) output(4,eq,37) output(51,eq,92) output(4,eq,92) output(51,eq,79) output(4,eq,79)
Optimization: 35 8
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,76) output(51,better,72) output(51,better,23) output(51,better,41) output(51,better,37) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,23) output(18,better,37) output(76,worse,37) output(23,worse,79) output(32,worse,92) output(32,worse,31) output(32,worse,23) output(32,worse,79) output(41,worse,37) output(72,worse,31) output(72,worse,92) output(72,worse,23) output(72,worse,79) output(90,eq,42) output(42,eq,78) output(51,eq,18) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(31,eq,79) output(18,eq,31) output(90,eq,78) output(51,eq,31) output(4,eq,31) output(18,eq,79) output(51,eq,92) output(4,eq,92) output(51,eq,79) output(4,eq,79)
Optimization: 28 9
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(4,better,31) output(4,better,23) output(4,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(18,better,31) output(18,better,23) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(72,better,31) output(72,better,23) output(31,worse,79) output(23,worse,79) output(90,eq,42) output(42,eq,78) output(18,eq,72) output(31,eq,23) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(32,eq,72) output(72,eq,92) output(18,eq,92) output(32,eq,92) output(18,eq,41) output(4,eq,76) output(4,eq,72) output(90,eq,78) output(72,eq,79) output(18,eq,79) output(32,eq,79) output(4,eq,41) output(4,eq,92) output(4,eq,79)
Optimization: 23 13
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,76) output(51,better,72) output(51,better,23) output(51,better,41) output(51,better,37) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,23) output(18,better,37) output(32,better,23) output(41,better,37) output(42,better,78) output(72,better,23) output(51,worse,31) output(51,worse,92) output(51,worse,79) output(76,worse,41) output(18,worse,92) output(18,worse,31) output(18,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,31) output(32,worse,79) output(72,worse,31) output(72,worse,92) output(72,worse,79) output(90,eq,42) output(51,eq,18) output(32,eq,72) output(76,eq,37) output(31,eq,79) output(4,eq,31) output(4,eq,92) output(4,eq,79)
Optimization: 22 10
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,23) output(18,better,37) output(32,better,23) output(41,better,37) output(72,better,23) output(23,worse,79) output(32,worse,92) output(32,worse,31) output(32,worse,79) output(72,worse,31) output(72,worse,92) output(72,worse,79) output(90,eq,42) output(42,eq,78) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(31,eq,79) output(18,eq,31) output(90,eq,78) output(4,eq,31) output(18,eq,79) output(4,eq,92) output(4,eq,79)
Optimization: 20 13
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,37) output(32,better,23) output(41,better,37) output(72,better,23) output(31,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(90,eq,42) output(42,eq,78) output(72,eq,31) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(32,eq,31) output(90,eq,78) output(18,eq,79) output(4,eq,92) output(4,eq,79)
Optimization: 18 14
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(76,better,37) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,23) output(31,worse,79) output(51,worse,18) output(51,worse,92) output(51,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(90,eq,42) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(18,eq,79) output(4,eq,92) output(4,eq,79)
Optimization: 17 12
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(72,better,31) output(72,better,23) output(31,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(90,eq,42) output(42,eq,78) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(90,eq,78) output(18,eq,79) output(4,eq,92) output(4,eq,79)
Optimization: 16 12
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,23) output(31,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(90,eq,42) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(18,eq,79) output(4,eq,92) output(4,eq,79)
Optimization: 14 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrep(4))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,23) output(4,worse,18) output(4,worse,92) output(4,worse,79) output(31,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(18,eq,79)
Optimization: 13 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(4,better,23) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,76) output(4,worse,72) output(4,worse,41) output(23,worse,79) output(42,worse,78) output(76,eq,41) output(32,eq,72) output(31,eq,79) output(4,eq,31) output(4,eq,92) output(4,eq,79)
Optimization: 12 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,41) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(72,better,31) output(72,better,23) output(4,worse,18) output(31,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(42,eq,78) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 11 10
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,41) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,31) output(32,better,23) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,23) output(4,worse,18) output(31,worse,79) output(23,worse,79) output(32,worse,92) output(32,worse,79) output(72,worse,92) output(72,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 10 10
Progression : [ 2;10] (Error: 4)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(7))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(4,better,76) output(4,better,31) output(4,better,23) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,72) output(4,worse,41) output(31,worse,79) output(76,worse,41) output(23,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 9 12
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(4,better,23) output(4,better,37) output(31,better,23) output(31,better,79) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,41) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,76) output(4,worse,72) output(4,worse,31) output(4,worse,41) output(23,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 9 11
Progression : [3;9] (Error: 2)
Progression : [5;9] (Error: 0.8)
Progression : [6;9] (Error: 0.5)
Progression : [7;9] (Error: 0.285714)
Progression : [8;9] (Error: 0.125)
Progression : [9;9] (Error: 0)
Progression : 9 [ 1;11] (Error: 10)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasCost(2))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(4,better,31) output(4,better,23) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,41) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,76) output(4,worse,72) output(4,worse,41) output(31,worse,79) output(23,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 9 10
Progression : 9 [ 2;10] (Error: 4)
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(4,better,23) output(4,better,37) output(31,better,23) output(31,better,79) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,41) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,76) output(4,worse,72) output(4,worse,31) output(4,worse,41) output(23,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 9 9
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(7))),5) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(4,better,76) output(4,better,31) output(4,better,23) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,72) output(4,worse,41) output(31,worse,79) output(76,worse,41) output(23,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 9 8
Answer: 22
preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(4,better,76) output(4,better,31) output(4,better,23) output(4,better,37) output(31,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(76,better,37) output(90,better,42) output(90,better,78) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(42,better,78) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,worse,18) output(4,worse,72) output(4,worse,41) output(31,worse,79) output(76,worse,41) output(23,worse,79) output(32,eq,72) output(4,eq,92) output(4,eq,79)
Optimization: 9 7
Progression : 9 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.036 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 9 7
Bounds       : 9 [3;7]
Calls        : 1
Time         : 296.790s (Solving: 295.15s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.878s
Threads      : 4        (Winner: 4)

Choices      : 8541842  (Domain: 764852)
Conflicts    : 7654762  (Analyzed: 7654751)
Restarts     : 7599     (Average: 1007.34 Last: 469214)
Model-Level  : 31.8    
Problems     : 18       (Average Length: 0.22 Splits: 0)
Lemmas       : 7954901  (Deleted: 7643486)
  Binary     : 717      (Ratio:   0.01%)
  Ternary    : 2451     (Ratio:   0.03%)
  Conflict   : 7654751  (Average Length:  227.6 Ratio:  96.23%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 300150   (Average Length:  215.7 Ratio:   3.77%) 
  Distributed: 100274   (Ratio:   1.31% Average LBD: 3.83) 
  Integrated : 300822   (Ratio: 300.00% Unit: 88 Average Jumps: 5.38)
Backjumps    : 7654751  (Average:  1.10 Max:  41 Sum: 8444961)
  Executed   : 7654739  (Average:  1.10 Max:  41 Sum: 8444919 Ratio: 100.00%)
  Bounded    : 12       (Average:  3.50 Max:  14 Sum:     42 Ratio:   0.00%)

Rules        : 111565  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9908    
Bodies       : 5702    
  Sum        : 65      
  Count      : 14      
Equivalences : 6602     (Atom=Atom: 506 Body=Body: 246 Other: 5850)
Tight        : Yes
Variables    : 4782     (Eliminated:    0 Frozen: 3312)
Constraints  : 109596   (Binary:  97.2% Ternary:   1.4% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.
