asprin_vL version 1.0
Reading from stdin
-:1240:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1250:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1265:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1346:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1620:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1797:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1926:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1998:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2002:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2002:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2008:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2107:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2133:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2253:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2287:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2309:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1157:1-16: info: no atoms over signature occur in program:
  output/3

-:1149:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1150:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1151:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(84,eq,90) preference(1,poset) output(92,eq,58) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(92,eq,64) output(100,eq,58) output(51,eq,38) output(38,eq,52) output(52,eq,84) output(84,eq,24) output(52,eq,24) output(38,eq,84) output(51,eq,52) output(52,eq,22) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(100,eq,77) output(92,eq,10) output(100,eq,10) output(58,eq,16) output(92,eq,16) output(100,eq,16) output(38,eq,22) output(51,eq,22) output(52,eq,90) output(38,eq,90) output(51,eq,84) output(38,eq,24) output(51,eq,24) output(51,eq,90)
Optimization: 35 0
Answer: 2
output(84,eq,90) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,poset) output(84,better,24) output(52,better,24) output(38,better,24) output(51,better,24) output(22,better,90) output(65,worse,79) output(100,worse,58) output(100,worse,77) output(100,worse,10) output(100,worse,16) output(51,worse,22) output(38,worse,22) output(84,worse,22) output(52,worse,22) output(92,eq,58) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(92,eq,64) output(51,eq,38) output(38,eq,52) output(52,eq,84) output(38,eq,84) output(51,eq,52) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(52,eq,90) output(38,eq,90) output(51,eq,84) output(51,eq,90)
Optimization: 30 1
Answer: 3
output(84,eq,90) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(65,better,79) output(100,better,77) output(10,better,16) output(38,better,84) output(38,better,22) output(38,better,90) output(58,better,77) output(58,better,16) output(52,better,84) output(52,better,22) output(52,better,90) output(100,worse,58) output(100,worse,10) output(84,worse,24) output(52,worse,24) output(38,worse,24) output(51,worse,24) output(51,worse,38) output(51,worse,52) output(77,worse,10) output(92,worse,10) output(92,worse,16) output(92,worse,58) output(92,worse,64) output(77,worse,16) output(84,eq,22) output(22,eq,90) output(38,eq,52) output(58,eq,10) output(92,eq,77) output(100,eq,16) output(51,eq,22) output(51,eq,84) output(51,eq,90)
Optimization: 24 1
Answer: 4
output(84,eq,90) preference(1,(1,8),1,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,poset) output(84,better,24) output(52,better,24) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(92,better,10) output(10,better,16) output(92,better,58) output(92,better,77) output(92,better,16) output(58,better,77) output(58,better,16) output(65,worse,79) output(38,worse,24) output(51,worse,24) output(51,worse,52) output(51,worse,22) output(51,worse,84) output(51,worse,90) output(77,worse,10) output(38,worse,52) output(38,worse,84) output(38,worse,22) output(38,worse,90) output(84,eq,22) output(22,eq,90) output(92,eq,64) output(51,eq,38) output(52,eq,84) output(52,eq,22) output(77,eq,16) output(58,eq,10) output(52,eq,90)
Optimization: 22 1
Answer: 5
output(84,eq,90) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,8),2,for(atom(hasPrep(7))),()) preference(1,poset) output(52,better,24) output(65,better,79) output(100,better,77) output(100,better,10) output(58,better,10) output(92,better,10) output(51,better,38) output(51,better,22) output(51,better,84) output(51,better,90) output(92,better,77) output(58,better,77) output(58,better,16) output(52,better,84) output(52,better,22) output(52,better,90) output(92,better,64) output(100,worse,58) output(84,worse,24) output(38,worse,24) output(51,worse,24) output(10,worse,16) output(51,worse,52) output(77,worse,10) output(38,worse,52) output(92,worse,58) output(77,worse,16) output(84,eq,22) output(22,eq,90) output(38,eq,84) output(92,eq,16) output(100,eq,16) output(38,eq,22) output(38,eq,90)
Optimization: 18 2
Answer: 6
output(84,eq,90) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(52,better,24) output(65,better,79) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(58,better,10) output(92,better,10) output(51,better,38) output(51,better,22) output(51,better,84) output(51,better,90) output(92,better,77) output(58,better,77) output(52,better,84) output(52,better,22) output(52,better,90) output(92,better,64) output(84,worse,24) output(38,worse,24) output(51,worse,24) output(10,worse,16) output(51,worse,52) output(77,worse,10) output(38,worse,52) output(77,worse,16) output(92,eq,58) output(84,eq,22) output(22,eq,90) output(38,eq,84) output(58,eq,16) output(92,eq,16) output(38,eq,22) output(38,eq,90)
Optimization: 17 2
Answer: 7
output(84,eq,90) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,7),1,for(atom(hasPrep(5))),()) preference(1,(1,8),1,for(atom(hasPrep(5))),()) preference(1,(1,9),1,for(atom(hasPrep(4))),()) preference(1,(1,10),1,for(atom(hasPrep(7))),()) preference(1,(1,11),1,for(atom(hasPrep(3))),()) preference(1,(1,12),1,for(atom(hasPrepTime(3))),()) preference(1,(1,13),1,for(atom(hasPrep(4))),()) preference(1,(1,14),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,7),2,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasCost(1))),()) preference(1,(1,9),2,for(atom(hasPrepTime(1))),()) preference(1,(1,10),2,for(atom(hasPrep(1))),()) preference(1,(1,11),2,for(atom(hasPrepTime(3))),()) preference(1,(1,12),2,for(atom(hasPrep(5))),()) preference(1,(1,13),2,for(atom(hasPrep(5))),()) preference(1,(1,14),2,for(atom(hasPrep(7))),()) preference(1,poset) output(84,better,24) output(52,better,24) output(38,better,24) output(51,better,24) output(65,better,79) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(77,better,10) output(58,better,10) output(92,better,10) output(38,better,84) output(38,better,22) output(38,better,90) output(92,better,77) output(58,better,77) output(52,better,84) output(52,better,22) output(52,better,90) output(84,better,22) output(92,better,64) output(10,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,22) output(51,worse,84) output(51,worse,90) output(58,worse,16) output(92,worse,16) output(38,worse,52) output(92,worse,58) output(77,worse,16) output(22,worse,90)
Optimization: 13 14
Answer: 8
output(84,eq,90) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,7),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,9),1,for(atom(hasPrep(6))),()) preference(1,(1,10),1,for(atom(hasPrep(2))),()) preference(1,(1,11),1,for(atom(hasPrep(0))),()) preference(1,(1,13),1,for(atom(hasPrep(2))),()) preference(1,(1,14),1,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,(1,7),2,for(atom(hasPrep(1))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,(1,9),2,for(atom(hasPrep(0))),()) preference(1,(1,10),2,for(atom(hasPrepTime(3))),()) preference(1,(1,11),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasDifficulty(2))),()) preference(1,(1,14),2,for(atom(hasPrep(5))),()) preference(1,poset) output(84,better,24) output(52,better,24) output(38,better,24) output(51,better,24) output(100,better,58) output(100,better,77) output(100,better,10) output(58,better,10) output(92,better,10) output(51,better,22) output(51,better,84) output(51,better,90) output(38,better,84) output(38,better,22) output(38,better,90) output(92,better,58) output(92,better,77) output(58,better,77) output(52,better,84) output(52,better,22) output(52,better,90) output(84,better,22) output(92,better,64) output(65,worse,79) output(10,worse,16) output(51,worse,38) output(51,worse,52) output(58,worse,16) output(92,worse,16) output(38,worse,52) output(77,worse,16) output(22,worse,90) output(77,unc,10) output(100,unc,16)
Optimization: 12 12
Answer: 9
output(84,eq,90) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,7),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,9),1,for(atom(hasPrep(6))),()) preference(1,(1,10),1,for(atom(hasPrep(5))),()) preference(1,(1,11),1,for(atom(hasPrep(0))),()) preference(1,(1,12),1,for(atom(hasPrep(7))),()) preference(1,(1,13),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,(1,7),2,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,(1,9),2,for(atom(hasPrep(4))),()) preference(1,(1,10),2,for(atom(hasCost(2))),()) preference(1,(1,11),2,for(atom(hasPrep(5))),()) preference(1,(1,12),2,for(atom(hasPrep(4))),()) preference(1,(1,13),2,for(atom(hasPrep(6))),()) preference(1,poset) output(84,better,24) output(52,better,24) output(38,better,24) output(51,better,24) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(92,better,10) output(51,better,22) output(51,better,84) output(51,better,90) output(38,better,52) output(38,better,84) output(38,better,22) output(38,better,90) output(92,better,58) output(92,better,77) output(92,better,16) output(52,better,84) output(52,better,22) output(52,better,90) output(84,better,22) output(92,better,64) output(65,worse,79) output(10,worse,16) output(51,worse,38) output(51,worse,52) output(77,worse,10) output(58,worse,10) output(58,worse,77) output(58,worse,16) output(77,worse,16) output(22,worse,90)
Optimization: 11 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.022 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 11 12
Calls        : 1
Time         : 296.563s (Solving: 291.72s 1st Model: 0.76s Unsat: 0.00s)
CPU Time     : 1170.755s
Threads      : 4        (Winner: 4)

Choices      : 2642393  (Domain: 5154)
Conflicts    : 120773   (Analyzed: 120773)
Restarts     : 189      (Average: 639.01 Last: 7248)
Model-Level  : 337.1   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 10116369 (Deleted: 9994989)
  Binary     : 2469     (Ratio:   0.02%)
  Ternary    : 32253    (Ratio:   0.32%)
  Conflict   : 120773   (Average Length: 1184.1 Ratio:   1.19%) 
  Loop       : 9947769  (Average Length:  127.7 Ratio:  98.33%) 
  Other      : 47827    (Average Length:    4.3 Ratio:   0.47%) 
  Distributed: 15956    (Ratio:   0.16% Average LBD: 2.75) 
  Integrated : 47868    (Ratio: 300.00% Unit: 208 Average Jumps: 870.32)
Backjumps    : 120773   (Average: 17.68 Max: 115848 Sum: 2134770)
  Executed   : 120739   (Average: 17.68 Max: 115848 Sum: 2134707 Ratio: 100.00%)
  Bounded    : 34       (Average:  1.85 Max:   2 Sum:     63 Ratio:   0.00%)

Rules        : 996130  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 22794   
Bodies       : 730674  
  Count      : 56      
Equivalences : 24761    (Atom=Atom: 4296 Body=Body: 5926 Other: 14539)
Tight        : No       (SCCs: 36 Non-Hcfs: 0 Nodes: 682080 Gammas: 0)
Variables    : 691202   (Eliminated:    0 Frozen: 684415)
Constraints  : 4133759  (Binary:  82.8% Ternary:   2.6% Other:  14.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(1)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(2)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasDifficulty(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) ; 
  atom(hasCost(1)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(3)) ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(5)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(5)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(2)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasDifficulty(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(5)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(6)) 
}.
