asprin_vL version 1.0
Reading from stdin
-:1234:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1244:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1259:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1340:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1601:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1614:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1791:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1920:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1992:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1996:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1996:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2002:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2101:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2127:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2247:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2281:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2303:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1151:1-16: info: no atoms over signature occur in program:
  output/3

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,100) output(33,eq,75) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(79,eq,90) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(16,eq,65) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(84,eq,90) output(16,eq,79) output(10,eq,65) output(77,eq,16) output(58,eq,10) output(67,eq,90) output(65,eq,90) output(44,eq,79) output(16,eq,67) output(10,eq,44) output(77,eq,44) output(58,eq,44) output(10,eq,67) output(77,eq,67) output(10,eq,79) output(16,eq,90) output(10,eq,90) output(44,eq,90) output(58,eq,16) output(77,eq,65) output(58,eq,65) output(77,eq,79) output(58,eq,79) output(77,eq,90) output(58,eq,90) output(58,eq,67)
Optimization: 39 0
Answer: 2
preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(58,worse,10) output(77,worse,10) output(9,eq,100) output(33,eq,75) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(79,eq,90) output(58,eq,77) output(16,eq,65) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(84,eq,90) output(16,eq,79) output(77,eq,16) output(67,eq,90) output(65,eq,90) output(44,eq,79) output(16,eq,67) output(77,eq,44) output(58,eq,44) output(77,eq,67) output(16,eq,90) output(44,eq,90) output(58,eq,16) output(77,eq,65) output(58,eq,65) output(77,eq,79) output(58,eq,79) output(77,eq,90) output(58,eq,90) output(58,eq,67)
Optimization: 33 3
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,65) output(10,better,44) output(16,better,44) output(16,better,65) output(58,better,44) output(58,better,65) output(77,better,10) output(77,better,44) output(77,better,65) output(10,worse,16) output(10,worse,67) output(10,worse,79) output(10,worse,90) output(58,worse,77) output(58,worse,16) output(58,worse,79) output(58,worse,90) output(58,worse,67) output(44,worse,67) output(44,worse,79) output(44,worse,90) output(65,worse,79) output(65,worse,90) output(9,eq,100) output(33,eq,75) output(67,eq,79) output(79,eq,90) output(84,eq,22) output(22,eq,90) output(84,eq,90) output(16,eq,79) output(77,eq,16) output(58,eq,10) output(67,eq,90) output(16,eq,67) output(77,eq,67) output(16,eq,90) output(77,eq,79) output(77,eq,90)
Optimization: 30 10
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(16,better,65) output(16,better,90) output(22,better,90) output(58,better,10) output(58,better,90) output(67,better,90) output(77,better,10) output(77,better,65) output(77,better,90) output(79,better,90) output(44,better,90) output(65,better,90) output(10,worse,16) output(10,worse,65) output(10,worse,44) output(10,worse,67) output(10,worse,79) output(10,worse,90) output(58,worse,77) output(58,worse,44) output(58,worse,16) output(58,worse,79) output(58,worse,67) output(84,worse,22) output(65,worse,79) output(9,eq,100) output(33,eq,75) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(84,eq,90) output(16,eq,79) output(77,eq,16) output(44,eq,79) output(16,eq,67) output(77,eq,44) output(77,eq,67) output(58,eq,65) output(77,eq,79)
Optimization: 27 10
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(16,better,44) output(16,better,65) output(16,better,90) output(22,better,90) output(58,better,10) output(58,better,44) output(58,better,65) output(58,better,90) output(67,better,90) output(77,better,10) output(77,better,44) output(77,better,65) output(77,better,90) output(79,better,90) output(44,better,90) output(65,better,90) output(10,worse,16) output(10,worse,65) output(10,worse,44) output(10,worse,67) output(10,worse,79) output(84,worse,22) output(44,worse,67) output(44,worse,79) output(65,worse,79) output(9,eq,100) output(33,eq,75) output(67,eq,79) output(58,eq,77) output(84,eq,90) output(16,eq,79) output(77,eq,16) output(16,eq,67) output(77,eq,67) output(10,eq,90) output(58,eq,16) output(77,eq,79) output(58,eq,79) output(58,eq,67)
Optimization: 23 10
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(4))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,16) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,90) output(79,better,90) output(9,better,100) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(10,worse,65) output(10,worse,44) output(10,worse,67) output(10,worse,79) output(10,worse,90) output(16,worse,44) output(16,worse,65) output(16,worse,79) output(16,worse,67) output(16,worse,90) output(58,worse,44) output(58,worse,65) output(67,worse,79) output(77,worse,44) output(77,worse,67) output(77,worse,65) output(77,worse,79) output(84,worse,22) output(33,worse,75) output(84,eq,90)
Optimization: 20 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrep(4))),3) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,79) output(10,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,16) output(77,better,79) output(9,better,100) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(10,worse,65) output(10,worse,44) output(16,worse,44) output(16,worse,65) output(16,worse,79) output(16,worse,67) output(16,worse,90) output(58,worse,44) output(77,worse,10) output(77,worse,44) output(77,worse,67) output(77,worse,65) output(79,worse,90) output(84,worse,22) output(33,worse,75) output(84,eq,90) output(58,eq,65) output(77,eq,90)
Optimization: 18 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(10,better,16) output(10,better,79) output(10,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,67) output(77,better,79) output(77,better,90) output(9,better,100) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(10,worse,65) output(10,worse,44) output(16,worse,44) output(16,worse,65) output(16,worse,79) output(16,worse,67) output(16,worse,90) output(58,worse,44) output(58,worse,65) output(77,worse,44) output(77,worse,65) output(79,worse,90) output(84,worse,22) output(33,eq,75) output(84,eq,90) output(10,eq,67)
Optimization: 16 12
Answer: 9
preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,65) output(16,better,79) output(16,better,67) output(58,better,65) output(58,better,79) output(58,better,67) output(67,better,79) output(77,better,16) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(84,better,22) output(9,better,100) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(16,worse,44) output(16,worse,90) output(22,worse,90) output(58,worse,77) output(58,worse,10) output(58,worse,44) output(58,worse,90) output(67,worse,90) output(77,worse,10) output(77,worse,44) output(79,worse,90) output(65,worse,90) output(33,eq,75) output(84,eq,90) output(58,eq,16)
Optimization: 15 7
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),3) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,67) output(10,better,90) output(16,better,79) output(16,better,67) output(16,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(77,better,10) output(77,better,16) output(77,better,67) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(10,worse,16) output(10,worse,65) output(10,worse,44) output(10,worse,79) output(16,worse,44) output(16,worse,65) output(67,worse,79) output(77,worse,44) output(77,worse,65) output(33,worse,75) output(84,eq,22) output(22,eq,90) output(84,eq,90) output(67,eq,90)
Optimization: 14 13
Answer: 11
preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,65) output(16,better,79) output(16,better,90) output(22,better,90) output(58,better,65) output(58,better,79) output(58,better,90) output(67,better,79) output(67,better,90) output(77,better,16) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(9,better,100) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(16,worse,44) output(16,worse,67) output(58,worse,77) output(58,worse,10) output(58,worse,44) output(58,worse,67) output(77,worse,10) output(77,worse,44) output(84,worse,22) output(33,eq,75) output(79,eq,90) output(84,eq,90) output(58,eq,16)
Optimization: 13 7
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(4))),3) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,10) output(58,better,44) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,90) output(10,worse,16) output(10,worse,65) output(10,worse,44) output(10,worse,67) output(10,worse,79) output(10,worse,90) output(58,worse,77) output(84,worse,22) output(67,eq,79) output(65,eq,79) output(84,eq,90) output(58,eq,16)
Optimization: 12 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(16,worse,44) output(58,worse,10) output(58,worse,44) output(77,worse,10) output(77,worse,44) output(79,worse,90) output(84,worse,22) output(65,worse,90) output(84,eq,90) output(77,eq,16)
Optimization: 10 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(16,worse,44) output(58,worse,10) output(77,worse,10) output(77,worse,44) output(79,worse,90) output(84,worse,22) output(65,worse,90) output(84,eq,90) output(77,eq,16)
Optimization: 9 11
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(9,better,100) output(33,better,75) output(44,better,79) output(44,better,90) output(65,better,79) output(58,worse,10) output(77,worse,10) output(79,worse,90) output(84,worse,22) output(65,worse,90) output(44,eq,67) output(84,eq,90) output(77,eq,16)
Optimization: 8 11
Progression : [2;8] (Error: 3)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(9,better,100) output(33,better,75) output(44,better,79) output(44,better,90) output(65,better,79) output(58,worse,77) output(79,worse,90) output(84,worse,22) output(65,worse,90) output(44,eq,67) output(84,eq,90) output(58,eq,10)
Optimization: 7 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(84,better,22) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(22,worse,90) output(67,worse,79) output(67,worse,90) output(16,eq,44) output(84,eq,90)
Optimization: 5 12
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasPrep(4))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(77,worse,10) output(84,worse,22) output(79,eq,90) output(84,eq,90)
Optimization: 4 13
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrep(3))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasCost(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(84,worse,22) output(44,eq,67) output(84,eq,90)
Optimization: 3 11
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(84,worse,22) output(84,eq,90)
Optimization: 2 12
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(84,worse,22) output(84,eq,90)
Optimization: 2 11
Progression : 2 [ 1;11] (Error: 10)
Answer: 22
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(84,worse,22) output(84,eq,90)
Optimization: 2 10
Answer: 23
preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasPrep(3))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(84,worse,22) output(84,eq,90)
Optimization: 2 9
Progression : 2 [2;9] (Error: 3.5)
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(3))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,44) output(10,better,67) output(10,better,79) output(10,better,90) output(16,better,44) output(16,better,65) output(16,better,79) output(16,better,67) output(16,better,90) output(22,better,90) output(58,better,77) output(58,better,10) output(58,better,44) output(58,better,16) output(58,better,65) output(58,better,79) output(58,better,90) output(58,better,67) output(67,better,79) output(67,better,90) output(77,better,10) output(77,better,16) output(77,better,44) output(77,better,67) output(77,better,65) output(77,better,79) output(77,better,90) output(79,better,90) output(9,better,100) output(33,better,75) output(44,better,67) output(44,better,79) output(44,better,90) output(65,better,79) output(65,better,90) output(84,worse,22) output(84,eq,90)
Optimization: 2 8
Progression : 2 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.053 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 2 8
Bounds       : 2 [3;8]
Calls        : 1
Time         : 296.929s (Solving: 295.38s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1182.815s
Threads      : 4        (Winner: 4)

Choices      : 8951643  (Domain: 964573)
Conflicts    : 7318648  (Analyzed: 7318644)
Restarts     : 6884     (Average: 1063.14 Last: 452454)
Model-Level  : 33.4    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 7393890  (Deleted: 7134767)
  Binary     : 846      (Ratio:   0.01%)
  Ternary    : 4986     (Ratio:   0.07%)
  Conflict   : 7318644  (Average Length:  249.0 Ratio:  98.98%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 75246    (Average Length:   36.4 Ratio:   1.02%) 
  Distributed: 25161    (Ratio:   0.34% Average LBD: 3.66) 
  Integrated : 75483    (Ratio: 300.00% Unit: 207 Average Jumps: 8.73)
Backjumps    : 7318644  (Average:  1.17 Max: 399 Sum: 8585391)
  Executed   : 7318640  (Average:  1.17 Max: 399 Sum: 8585344 Ratio: 100.00%)
  Bounded    : 4        (Average: 11.75 Max:  31 Sum:     47 Ratio:   0.00%)

Rules        : 104850  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9426    
Bodies       : 5667    
  Sum        : 75      
  Count      : 14      
Equivalences : 6422     (Atom=Atom: 406 Body=Body: 176 Other: 5840)
Tight        : Yes
Variables    : 4800     (Eliminated:    0 Frozen: 3330)
Constraints  : 103394   (Binary:  97.0% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) 
}.
