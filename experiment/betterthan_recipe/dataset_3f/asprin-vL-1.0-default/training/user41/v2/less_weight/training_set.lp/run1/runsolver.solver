asprin_vL version 1.0
Reading from stdin
-:1238:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1248:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1263:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1344:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1605:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1618:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1795:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1924:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1996:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2000:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2000:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2006:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2105:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2131:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2251:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2285:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2307:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1155:1-16: info: no atoms over signature occur in program:
  output/3

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1148:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,90) output(77,eq,92) output(92,eq,10) output(10,eq,22) output(22,eq,84) output(84,eq,16) output(65,eq,79) output(100,eq,92) output(92,eq,64) output(64,eq,84) output(84,eq,24) output(24,eq,38) output(51,eq,52) output(84,eq,38) output(22,eq,24) output(64,eq,24) output(92,eq,84) output(77,eq,64) output(100,eq,64) output(22,eq,16) output(64,eq,16) output(10,eq,84) output(92,eq,22) output(77,eq,10) output(100,eq,10) output(77,eq,22) output(100,eq,22) output(77,eq,84) output(100,eq,84) output(92,eq,16) output(77,eq,16) output(100,eq,16) output(10,eq,16) output(92,eq,24) output(77,eq,24) output(100,eq,24) output(10,eq,24) output(22,eq,38) output(64,eq,38) output(92,eq,38) output(10,eq,38) output(77,eq,38) output(100,eq,38)
Optimization: 43 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(10,better,16) output(22,better,16) output(64,better,16) output(77,better,16) output(84,better,16) output(92,better,16) output(100,better,16) output(58,eq,90) output(77,eq,92) output(92,eq,10) output(10,eq,22) output(22,eq,84) output(65,eq,79) output(100,eq,92) output(92,eq,64) output(64,eq,84) output(84,eq,24) output(24,eq,38) output(51,eq,52) output(84,eq,38) output(22,eq,24) output(64,eq,24) output(92,eq,84) output(77,eq,64) output(100,eq,64) output(10,eq,84) output(92,eq,22) output(77,eq,10) output(100,eq,10) output(77,eq,22) output(100,eq,22) output(77,eq,84) output(100,eq,84) output(92,eq,24) output(77,eq,24) output(100,eq,24) output(10,eq,24) output(22,eq,38) output(64,eq,38) output(92,eq,38) output(10,eq,38) output(77,eq,38) output(100,eq,38)
Optimization: 36 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),2) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(22,better,24) output(22,better,16) output(64,better,24) output(64,better,16) output(77,better,10) output(77,better,16) output(77,better,24) output(84,better,16) output(84,better,24) output(92,better,10) output(92,better,16) output(92,better,24) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,16) output(10,worse,24) output(10,worse,38) output(51,worse,52) output(58,worse,90) output(24,worse,38) output(65,worse,79) output(77,eq,92) output(22,eq,84) output(92,eq,64) output(64,eq,84) output(84,eq,38) output(92,eq,84) output(77,eq,64) output(92,eq,22) output(77,eq,22) output(77,eq,84) output(22,eq,38) output(64,eq,38) output(92,eq,38) output(77,eq,38)
Optimization: 23 13
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,16) output(10,better,24) output(22,better,24) output(22,better,16) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(84,better,16) output(84,better,24) output(92,better,10) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(100,better,24) output(10,worse,38) output(22,worse,38) output(51,worse,52) output(84,worse,38) output(24,worse,38) output(65,worse,79) output(100,worse,92) output(100,worse,64) output(100,worse,10) output(100,worse,22) output(100,worse,84) output(100,worse,38) output(77,eq,92) output(10,eq,22) output(22,eq,84) output(92,eq,64) output(77,eq,64) output(10,eq,84) output(100,eq,16) output(64,eq,38) output(92,eq,38) output(77,eq,38)
Optimization: 22 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),2) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(22,better,24) output(22,better,16) output(22,better,38) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,10) output(77,better,16) output(77,better,24) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,16) output(10,worse,24) output(10,worse,38) output(51,worse,52) output(58,worse,90) output(77,worse,92) output(77,worse,64) output(77,worse,22) output(77,worse,84) output(24,worse,38) output(65,worse,79) output(22,eq,84) output(92,eq,64) output(64,eq,84) output(92,eq,84) output(92,eq,22) output(77,eq,38)
Optimization: 19 13
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,64) output(77,better,10) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,64) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(100,better,16) output(100,better,24) output(100,better,38) output(10,worse,22) output(10,worse,84) output(22,worse,84) output(58,worse,90) output(64,worse,84) output(77,worse,92) output(77,worse,22) output(77,worse,84) output(65,worse,79) output(100,worse,92) output(100,worse,22) output(100,worse,84) output(92,eq,84) output(100,eq,64) output(100,eq,10)
Optimization: 15 13
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(3))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(22,better,24) output(22,better,16) output(58,better,90) output(64,better,24) output(64,better,16) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(84,better,16) output(84,better,24) output(92,better,16) output(92,better,24) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(10,worse,38) output(22,worse,38) output(51,worse,52) output(64,worse,38) output(84,worse,38) output(92,worse,10) output(92,worse,38) output(24,worse,38) output(22,eq,84) output(92,eq,64) output(64,eq,84) output(92,eq,84) output(92,eq,22) output(77,eq,38) output(100,eq,38)
Optimization: 15 12
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,16) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(77,worse,10) output(92,worse,10) output(92,worse,64) output(92,worse,84) output(92,worse,22) output(64,eq,84) output(100,eq,10) output(77,eq,22) output(92,eq,24)
Optimization: 9 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,worse,90) output(77,worse,10) output(92,worse,10) output(92,worse,64) output(92,worse,84) output(92,worse,22) output(64,eq,84) output(77,eq,22)
Optimization: 8 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(77,worse,10) output(92,worse,10) output(92,worse,64) output(92,worse,84) output(92,worse,22) output(64,eq,84) output(77,eq,22)
Optimization: 7 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,worse,90) output(92,worse,10) output(92,worse,64) output(92,worse,84) output(92,worse,22) output(64,eq,84)
Optimization: 6 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(92,worse,10) output(92,worse,64) output(92,worse,84) output(92,worse,22) output(64,eq,84)
Optimization: 5 13
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(92,worse,10) output(92,worse,64) output(92,worse,22) output(92,eq,84)
Optimization: 4 13
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,64) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(77,worse,92) output(100,worse,92) output(100,eq,10)
Optimization: 3 10
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(24,worse,38) output(92,eq,64)
Optimization: 2 11
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(92,eq,64)
Optimization: 1 12
Progression : [1;1] (Error: 0)
Progression : 1 [ 1;12] (Error: 11)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),4) preference(1,(1,10),1,for(atom(hasCost(1))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(92,eq,64)
Optimization: 1 11
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasCost(1))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(92,eq,64)
Optimization: 1 10
Progression : 1 [ 2;10] (Error: 4)
Answer: 19
preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(58,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(92,better,10) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(24,better,38) output(65,better,79) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(92,eq,64)
Optimization: 1 9
Progression : 1 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.056 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 1 9
Bounds       : 1 [3;9]
Calls        : 1
Time         : 297.449s (Solving: 295.77s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.516s
Threads      : 4        (Winner: 4)

Choices      : 9355196  (Domain: 899764)
Conflicts    : 8518282  (Analyzed: 8518277)
Restarts     : 7475     (Average: 1139.57 Last: 297948)
Model-Level  : 43.7    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 8724007  (Deleted: 8382255)
  Binary     : 271      (Ratio:   0.00%)
  Ternary    : 7740     (Ratio:   0.09%)
  Conflict   : 8518277  (Average Length:  205.5 Ratio:  97.64%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 205730   (Average Length:   89.1 Ratio:   2.36%) 
  Distributed: 68819    (Ratio:   0.81% Average LBD: 3.73) 
  Integrated : 206456   (Ratio: 300.00% Unit: 473 Average Jumps: 4.30)
Backjumps    : 8518277  (Average:  1.09 Max: 104 Sum: 9280174)
  Executed   : 8518265  (Average:  1.09 Max: 104 Sum: 9280099 Ratio: 100.00%)
  Bounded    : 12       (Average:  6.25 Max:  42 Sum:     75 Ratio:   0.00%)

Rules        : 111681  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9826    
Bodies       : 5714    
  Sum        : 86      
  Count      : 14      
Equivalences : 3923     (Atom=Atom: 443 Body=Body: 186 Other: 3294)
Tight        : Yes
Variables    : 4829     (Eliminated:    0 Frozen: 3359)
Constraints  : 109876   (Binary:  97.1% Ternary:   1.4% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(3)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) 
}.
