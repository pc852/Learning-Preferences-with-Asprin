asprin_vL version 1.0
Reading from stdin
-:1319:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1329:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1344:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1425:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1686:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1699:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1876:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2005:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2077:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2081:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2081:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2087:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2186:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2212:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2332:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2366:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2388:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1236:1-16: info: no atoms over signature occur in program:
  output/3

-:1228:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1229:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(75,eq,33) output(33,eq,90) output(9,eq,100) output(100,eq,79) output(44,eq,51) output(51,eq,67) output(67,eq,16) output(90,eq,9) output(79,eq,44) output(75,eq,100) output(100,eq,92) output(64,eq,84) output(24,eq,38) output(38,eq,51) output(51,eq,52) output(58,eq,75) output(92,eq,64) output(84,eq,24) output(64,eq,24) output(100,eq,64) output(44,eq,52) output(38,eq,52) output(24,eq,51) output(84,eq,38) output(92,eq,84) output(9,eq,92) output(75,eq,92) output(58,eq,100) output(100,eq,44) output(33,eq,9) output(51,eq,16) output(44,eq,67) output(38,eq,67) output(79,eq,51) output(9,eq,79) output(75,eq,79) output(90,eq,100) output(75,eq,90) output(58,eq,33) output(58,eq,90) output(33,eq,100) output(58,eq,79) output(90,eq,79) output(33,eq,79) output(100,eq,51) output(9,eq,51) output(75,eq,51) output(24,eq,67) output(84,eq,67) output(79,eq,67) output(100,eq,67) output(44,eq,16) output(38,eq,16) output(24,eq,16) output(79,eq,16) output(75,eq,9) output(58,eq,9) output(9,eq,44) output(75,eq,44) output(58,eq,44) output(90,eq,44) output(58,eq,92) output(90,eq,92) output(33,eq,92) output(100,eq,84) output(9,eq,84) output(75,eq,84) output(64,eq,38) output(92,eq,38) output(84,eq,51) output(64,eq,51) output(24,eq,52) output(84,eq,52) output(79,eq,52) output(100,eq,52) output(9,eq,64) output(75,eq,64) output(58,eq,64) output(90,eq,64) output(92,eq,24) output(100,eq,24) output(9,eq,24) output(75,eq,24) output(58,eq,24) output(90,eq,24) output(33,eq,24) output(33,eq,64) output(9,eq,52) output(75,eq,52) output(58,eq,52) output(90,eq,52) output(33,eq,52) output(64,eq,52) output(92,eq,52) output(92,eq,51) output(58,eq,51) output(90,eq,51) output(100,eq,38) output(9,eq,38) output(75,eq,38) output(58,eq,38) output(90,eq,38) output(33,eq,38) output(58,eq,84) output(90,eq,84) output(33,eq,84) output(33,eq,44) output(100,eq,16) output(9,eq,16) output(75,eq,16) output(58,eq,16) output(90,eq,16) output(33,eq,16) output(84,eq,16) output(64,eq,16) output(92,eq,16) output(9,eq,67) output(75,eq,67) output(58,eq,67) output(90,eq,67) output(33,eq,67) output(64,eq,67) output(92,eq,67) output(33,eq,51)
Optimization: 124 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,79) output(58,better,9) output(58,better,92) output(58,better,52) output(58,better,16) output(64,better,52) output(64,better,16) output(67,better,16) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,92) output(90,better,52) output(90,better,16) output(9,better,100) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(44,better,52) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,9) output(75,better,52) output(75,better,16) output(58,worse,24) output(58,worse,51) output(58,worse,38) output(58,worse,67) output(64,worse,24) output(64,worse,38) output(64,worse,51) output(64,worse,67) output(79,worse,44) output(79,worse,51) output(79,worse,67) output(79,worse,16) output(79,worse,52) output(84,worse,24) output(84,worse,38) output(84,worse,67) output(84,worse,51) output(90,worse,24) output(90,worse,51) output(90,worse,38) output(90,worse,67) output(92,worse,64) output(92,worse,84) output(92,worse,38) output(92,worse,24) output(92,worse,52) output(92,worse,51) output(92,worse,16) output(92,worse,67) output(9,worse,51) output(9,worse,44) output(9,worse,84) output(9,worse,64) output(9,worse,24) output(9,worse,52) output(9,worse,38) output(9,worse,16) output(9,worse,67) output(33,worse,90) output(33,worse,24) output(33,worse,64) output(33,worse,38) output(33,worse,84) output(33,worse,44) output(33,worse,16) output(33,worse,67) output(33,worse,51) output(44,worse,51) output(44,worse,67) output(75,worse,51) output(75,worse,24) output(75,worse,38) output(75,worse,67) output(100,worse,79) output(100,worse,92) output(100,worse,64) output(100,worse,44) output(100,worse,51) output(100,worse,67) output(100,worse,84) output(100,worse,52) output(100,worse,24) output(100,worse,38) output(100,worse,16) output(64,eq,84) output(38,eq,51) output(58,eq,75) output(9,eq,92) output(9,eq,79) output(75,eq,90) output(58,eq,90) output(75,eq,44) output(58,eq,44) output(90,eq,44) output(75,eq,84) output(75,eq,64) output(58,eq,64) output(90,eq,64) output(33,eq,52) output(58,eq,84) output(90,eq,84)
Optimization: 81 5
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(38,better,52) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,79) output(58,better,9) output(58,better,92) output(58,better,64) output(58,better,52) output(58,better,38) output(58,better,16) output(67,better,16) output(84,better,38) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,92) output(90,better,64) output(90,better,52) output(90,better,38) output(90,better,16) output(9,better,100) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,64) output(44,better,52) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,9) output(75,better,64) output(75,better,52) output(75,better,38) output(75,better,16) output(38,worse,51) output(38,worse,67) output(58,worse,24) output(58,worse,51) output(58,worse,67) output(64,worse,84) output(64,worse,24) output(64,worse,38) output(64,worse,51) output(64,worse,52) output(64,worse,16) output(64,worse,67) output(79,worse,44) output(79,worse,51) output(79,worse,67) output(79,worse,16) output(79,worse,52) output(84,worse,24) output(84,worse,67) output(84,worse,51) output(90,worse,24) output(90,worse,51) output(90,worse,67) output(92,worse,84) output(92,worse,38) output(92,worse,24) output(92,worse,52) output(92,worse,51) output(92,worse,16) output(92,worse,67) output(9,worse,51) output(9,worse,44) output(9,worse,84) output(9,worse,24) output(9,worse,52) output(9,worse,38) output(9,worse,16) output(9,worse,67) output(33,worse,90) output(33,worse,24) output(33,worse,38) output(33,worse,84) output(33,worse,44) output(33,worse,16) output(33,worse,67) output(33,worse,51) output(44,worse,51) output(44,worse,67) output(75,worse,51) output(75,worse,24) output(75,worse,67) output(100,worse,79) output(100,worse,92) output(100,worse,64) output(100,worse,44) output(100,worse,51) output(100,worse,67) output(100,worse,84) output(100,worse,52) output(100,worse,24) output(100,worse,38) output(100,worse,16) output(58,eq,75) output(92,eq,64) output(9,eq,92) output(9,eq,79) output(75,eq,90) output(58,eq,90) output(38,eq,16) output(75,eq,44) output(58,eq,44) output(90,eq,44) output(75,eq,84) output(9,eq,64) output(33,eq,52) output(58,eq,84) output(90,eq,84)
Optimization: 77 6
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(38,better,52) output(38,better,67) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,79) output(58,better,9) output(58,better,92) output(58,better,64) output(58,better,52) output(58,better,38) output(58,better,16) output(58,better,67) output(84,better,38) output(84,better,67) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,92) output(90,better,64) output(90,better,52) output(90,better,38) output(90,better,16) output(90,better,67) output(9,better,100) output(24,better,38) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,64) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,9) output(75,better,64) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(38,worse,51) output(58,worse,51) output(64,worse,84) output(64,worse,24) output(64,worse,38) output(64,worse,51) output(64,worse,52) output(64,worse,16) output(64,worse,67) output(67,worse,16) output(79,worse,44) output(79,worse,51) output(79,worse,67) output(79,worse,16) output(79,worse,52) output(84,worse,51) output(90,worse,51) output(92,worse,84) output(92,worse,38) output(92,worse,24) output(92,worse,52) output(92,worse,51) output(92,worse,16) output(92,worse,67) output(9,worse,51) output(9,worse,44) output(9,worse,84) output(9,worse,24) output(9,worse,52) output(9,worse,38) output(9,worse,16) output(9,worse,67) output(24,worse,51) output(33,worse,90) output(33,worse,24) output(33,worse,38) output(33,worse,84) output(33,worse,44) output(33,worse,16) output(33,worse,51) output(44,worse,51) output(75,worse,51) output(100,worse,79) output(100,worse,92) output(100,worse,64) output(100,worse,44) output(100,worse,51) output(100,worse,67) output(100,worse,84) output(100,worse,52) output(100,worse,24) output(100,worse,38) output(100,worse,16) output(58,eq,75) output(92,eq,64) output(84,eq,24) output(9,eq,92) output(9,eq,79) output(75,eq,90) output(58,eq,90) output(38,eq,16) output(75,eq,44) output(58,eq,44) output(90,eq,44) output(75,eq,84) output(9,eq,64) output(75,eq,24) output(58,eq,24) output(90,eq,24) output(33,eq,52) output(58,eq,84) output(90,eq,84) output(33,eq,67)
Optimization: 73 7
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(4))),5) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasPrep(3))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(38,better,16) output(51,better,16) output(58,better,51) output(58,better,38) output(58,better,16) output(64,better,38) output(64,better,51) output(64,better,16) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,16) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,51) output(92,better,16) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,51) output(75,better,44) output(75,better,64) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,44) output(58,worse,92) output(58,worse,64) output(58,worse,24) output(58,worse,52) output(58,worse,84) output(58,worse,67) output(64,worse,84) output(64,worse,24) output(64,worse,52) output(64,worse,67) output(79,worse,67) output(79,worse,52) output(84,worse,24) output(90,worse,9) output(90,worse,100) output(90,worse,24) output(92,worse,84) output(92,worse,24) output(92,worse,52) output(92,worse,67) output(33,worse,9) output(44,worse,52) output(44,worse,67) output(75,worse,33) output(75,worse,100) output(75,worse,90) output(75,worse,9) output(75,worse,84) output(75,worse,24) output(75,worse,52) output(38,eq,51) output(92,eq,64) output(84,eq,52) output(90,eq,52) output(90,eq,84)
Optimization: 46 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(38,better,16) output(51,better,16) output(58,better,24) output(58,better,38) output(58,better,16) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,51) output(75,better,44) output(75,better,64) output(75,better,24) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,44) output(58,worse,92) output(58,worse,64) output(58,worse,52) output(58,worse,51) output(58,worse,84) output(58,worse,67) output(64,worse,84) output(64,worse,52) output(64,worse,67) output(79,worse,67) output(79,worse,52) output(90,worse,9) output(90,worse,100) output(92,worse,84) output(92,worse,52) output(92,worse,67) output(24,worse,51) output(24,worse,67) output(24,worse,52) output(33,worse,9) output(44,worse,52) output(44,worse,67) output(75,worse,33) output(75,worse,100) output(75,worse,90) output(75,worse,9) output(75,worse,84) output(75,worse,52) output(24,eq,38) output(92,eq,64) output(84,eq,52) output(90,eq,52) output(90,eq,84)
Optimization: 45 13
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(7))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(38,better,16) output(51,better,16) output(58,better,38) output(58,better,16) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,51) output(75,better,44) output(75,better,64) output(75,better,24) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,44) output(58,worse,92) output(58,worse,64) output(58,worse,24) output(58,worse,52) output(58,worse,51) output(58,worse,84) output(58,worse,67) output(64,worse,84) output(64,worse,52) output(64,worse,67) output(79,worse,67) output(79,worse,52) output(90,worse,9) output(90,worse,100) output(92,worse,84) output(92,worse,52) output(92,worse,67) output(24,worse,67) output(24,worse,52) output(33,worse,9) output(44,worse,52) output(44,worse,67) output(75,worse,33) output(75,worse,100) output(75,worse,90) output(75,worse,9) output(75,worse,84) output(75,worse,52) output(92,eq,64) output(84,eq,52) output(90,eq,52) output(90,eq,84)
Optimization: 44 12
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(7))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(38,better,16) output(51,better,16) output(58,better,51) output(58,better,38) output(58,better,16) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,51) output(75,better,44) output(75,better,64) output(75,better,24) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,44) output(58,worse,92) output(58,worse,64) output(58,worse,24) output(58,worse,52) output(58,worse,84) output(58,worse,67) output(64,worse,84) output(64,worse,52) output(64,worse,67) output(79,worse,67) output(79,worse,52) output(90,worse,9) output(90,worse,100) output(92,worse,84) output(92,worse,52) output(92,worse,67) output(24,worse,67) output(24,worse,52) output(33,worse,9) output(44,worse,52) output(44,worse,67) output(75,worse,33) output(75,worse,100) output(75,worse,90) output(75,worse,9) output(75,worse,84) output(75,worse,52) output(38,eq,51) output(92,eq,64) output(84,eq,52) output(90,eq,52) output(90,eq,84)
Optimization: 43 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(4))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(38,better,16) output(51,better,67) output(51,better,16) output(58,better,38) output(58,better,16) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,67) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,51) output(75,better,44) output(75,better,64) output(75,better,24) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(38,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,44) output(58,worse,92) output(58,worse,64) output(58,worse,24) output(58,worse,52) output(58,worse,51) output(58,worse,84) output(64,worse,84) output(64,worse,24) output(64,worse,52) output(79,worse,52) output(90,worse,9) output(92,worse,84) output(92,worse,24) output(92,worse,52) output(24,worse,52) output(33,worse,9) output(44,worse,52) output(75,worse,33) output(75,worse,90) output(75,worse,9) output(75,worse,84) output(75,worse,52) output(100,worse,84) output(100,worse,52) output(75,eq,100) output(92,eq,64) output(84,eq,52) output(90,eq,52) output(90,eq,84) output(58,eq,67)
Optimization: 41 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(38,better,16) output(51,better,67) output(51,better,16) output(58,better,38) output(58,better,16) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,67) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(38,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,44) output(58,worse,92) output(58,worse,64) output(58,worse,24) output(58,worse,52) output(58,worse,51) output(58,worse,84) output(64,worse,84) output(64,worse,52) output(79,worse,52) output(84,worse,52) output(90,worse,9) output(90,worse,100) output(90,worse,52) output(92,worse,84) output(92,worse,52) output(24,worse,51) output(24,worse,52) output(33,worse,9) output(44,worse,52) output(75,worse,33) output(75,worse,100) output(75,worse,9) output(75,worse,52) output(44,eq,51) output(92,eq,64) output(90,eq,84) output(58,eq,67)
Optimization: 38 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(38,better,51) output(38,better,16) output(51,better,16) output(58,better,9) output(58,better,44) output(58,better,24) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,9) output(90,better,44) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,51) output(9,better,44) output(9,better,24) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,67) output(44,better,16) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,92) output(58,worse,64) output(58,worse,52) output(58,worse,84) output(90,worse,100) output(9,worse,100) output(9,worse,92) output(9,worse,79) output(9,worse,84) output(9,worse,64) output(9,worse,52) output(24,worse,52) output(44,worse,52) output(75,worse,33) output(75,worse,100) output(64,eq,84) output(92,eq,64) output(92,eq,84) output(38,eq,67) output(33,eq,100) output(90,eq,79) output(90,eq,92) output(84,eq,52) output(79,eq,52) output(90,eq,64) output(90,eq,52) output(64,eq,52) output(92,eq,52) output(90,eq,84)
Optimization: 37 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(38,better,51) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,16) output(58,better,75) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,16) output(67,better,16) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,16) output(90,better,64) output(90,better,16) output(92,better,64) output(92,better,84) output(92,better,38) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,16) output(51,worse,67) output(51,worse,52) output(64,worse,84) output(64,worse,24) output(64,worse,38) output(64,worse,51) output(64,worse,52) output(64,worse,67) output(79,worse,44) output(84,worse,24) output(84,worse,38) output(84,worse,67) output(84,worse,52) output(90,worse,9) output(90,worse,100) output(90,worse,79) output(90,worse,44) output(90,worse,92) output(90,worse,24) output(90,worse,52) output(90,worse,38) output(90,worse,67) output(92,worse,24) output(100,worse,79) output(100,worse,92) output(100,worse,44) output(100,worse,24) output(75,eq,33) output(33,eq,9) output(75,eq,9) output(84,eq,51) output(90,eq,51) output(100,eq,38) output(90,eq,84)
Optimization: 34 12
Progression : [ 2;34] (Error: 16)
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(38,better,51) output(58,better,90) output(58,better,79) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,84) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(92,better,64) output(92,better,84) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(51,worse,16) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(64,worse,24) output(84,worse,24) output(84,worse,38) output(84,worse,67) output(84,worse,52) output(84,worse,16) output(90,worse,9) output(90,worse,100) output(90,worse,79) output(90,worse,44) output(90,worse,92) output(90,worse,64) output(90,worse,24) output(90,worse,52) output(90,worse,38) output(90,worse,16) output(90,worse,67) output(9,worse,100) output(33,eq,100) output(38,eq,16) output(58,eq,9) output(84,eq,51) output(64,eq,52) output(90,eq,51) output(90,eq,84)
Optimization: 33 9
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),4) preference(1,(1,13),1,for(atom(hasPrep(0))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,75) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,16) output(67,better,16) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,16) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,16) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(38,worse,67) output(64,worse,84) output(64,worse,24) output(64,worse,51) output(64,worse,52) output(64,worse,67) output(79,worse,44) output(79,worse,51) output(79,worse,67) output(79,worse,52) output(92,worse,84) output(92,worse,24) output(92,worse,52) output(92,worse,51) output(92,worse,67) output(9,worse,84) output(24,worse,51) output(24,worse,52) output(44,worse,51) output(44,worse,52) output(44,worse,67) output(100,worse,51) output(100,worse,67) output(100,worse,84) output(100,worse,52) output(100,worse,24) output(75,eq,33) output(9,eq,51) output(24,eq,67) output(90,eq,84)
Optimization: 32 12
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),6) preference(1,(1,14),1,for(atom(hasPrep(3))),3) preference(1,less(weight)) output(38,better,16) output(51,better,16) output(58,better,75) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,16) output(67,better,16) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,16) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,16) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(64,worse,84) output(64,worse,24) output(64,worse,51) output(64,worse,52) output(64,worse,67) output(79,worse,44) output(79,worse,51) output(79,worse,67) output(79,worse,52) output(92,worse,84) output(92,worse,24) output(92,worse,52) output(92,worse,51) output(92,worse,67) output(9,worse,84) output(24,worse,52) output(44,worse,52) output(44,worse,67) output(100,worse,67) output(100,worse,84) output(100,worse,52) output(100,worse,24) output(75,eq,33) output(44,eq,51) output(24,eq,67) output(90,eq,84)
Optimization: 31 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrep(3))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,84) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,44) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,84) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,24) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(84,worse,24) output(84,worse,52) output(90,worse,9) output(90,worse,100) output(90,worse,79) output(90,worse,92) output(90,worse,64) output(90,worse,24) output(90,worse,52) output(24,worse,52) output(33,worse,9) output(33,worse,79) output(33,worse,92) output(44,worse,52) output(100,worse,79) output(100,worse,92) output(100,eq,64) output(9,eq,92) output(44,eq,67) output(9,eq,79) output(33,eq,100) output(100,eq,52) output(33,eq,64) output(33,eq,52) output(64,eq,52) output(90,eq,84)
Optimization: 30 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(4))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),6) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(38,better,51) output(38,better,16) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,84) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,16) output(90,better,44) output(90,better,24) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,84) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,24) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(84,worse,52) output(90,worse,9) output(90,worse,100) output(90,worse,79) output(90,worse,92) output(90,worse,64) output(90,worse,52) output(24,worse,52) output(33,worse,9) output(33,worse,79) output(33,worse,92) output(44,worse,52) output(44,worse,67) output(100,worse,79) output(100,worse,92) output(100,worse,64) output(100,worse,52) output(9,eq,92) output(9,eq,79) output(24,eq,67) output(33,eq,64) output(33,eq,52) output(64,eq,52) output(90,eq,84)
Optimization: 29 14
Progression : [ 3;29] (Error: 8.66667)
Progression : [ 4;29] (Error: 6.25)
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(4))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasPrep(3))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,16) output(58,better,24) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,51) output(79,better,67) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,9) output(58,worse,44) output(58,worse,84) output(64,worse,84) output(79,worse,44) output(92,worse,84) output(9,worse,84) output(24,worse,52) output(100,worse,44) output(100,worse,84) output(75,eq,33) output(24,eq,38) output(92,eq,64) output(58,eq,79) output(9,eq,44) output(58,eq,92) output(79,eq,52) output(58,eq,64) output(58,eq,52) output(64,eq,52) output(92,eq,52) output(90,eq,84)
Optimization: 28 13
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(3))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(38,better,51) output(38,better,16) output(51,better,16) output(58,better,9) output(58,better,44) output(58,better,64) output(58,better,24) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,51) output(64,better,16) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,67) output(44,better,16) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(38,worse,67) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,92) output(58,worse,84) output(64,worse,84) output(64,worse,24) output(64,worse,52) output(64,worse,67) output(92,worse,84) output(9,worse,100) output(9,worse,92) output(9,worse,79) output(9,worse,84) output(9,worse,52) output(24,worse,52) output(44,worse,52) output(100,worse,84) output(75,eq,33) output(58,eq,52) output(90,eq,84)
Optimization: 27 13
Progression : [ 5;27] (Error: 4.4)
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrep(4))),4) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(38,better,51) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,44) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,44) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,16) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,92) output(58,worse,84) output(64,worse,84) output(64,worse,24) output(64,worse,38) output(64,worse,51) output(9,worse,92) output(9,worse,79) output(9,worse,84) output(100,worse,79) output(100,worse,92) output(100,worse,84) output(24,eq,38) output(92,eq,84) output(100,eq,44) output(90,eq,79) output(90,eq,92) output(100,eq,24) output(64,eq,52) output(100,eq,38) output(90,eq,84)
Optimization: 26 9
Answer: 21
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,44) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,44) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,92) output(58,worse,84) output(64,worse,84) output(64,worse,24) output(64,worse,51) output(9,worse,92) output(9,worse,79) output(9,worse,84) output(100,worse,79) output(100,worse,92) output(100,worse,84) output(92,eq,84) output(100,eq,44) output(90,eq,79) output(90,eq,92) output(100,eq,24) output(64,eq,52) output(90,eq,84)
Optimization: 25 10
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,4),1,for(atom(hasPrep(4))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,44) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,24) output(64,better,38) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,100) output(90,better,44) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,51) output(38,worse,52) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,9) output(58,worse,92) output(58,worse,84) output(64,worse,84) output(64,worse,51) output(90,worse,9) output(24,worse,51) output(24,worse,52) output(33,worse,9) output(100,worse,79) output(100,worse,92) output(100,worse,84) output(92,eq,84) output(100,eq,44) output(90,eq,79) output(90,eq,92) output(64,eq,52) output(90,eq,84)
Optimization: 24 11
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasPrep(4))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,16) output(58,better,100) output(58,better,44) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,44) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,79) output(58,worse,92) output(58,worse,84) output(64,worse,84) output(64,worse,24) output(9,worse,92) output(9,worse,79) output(9,worse,84) output(100,worse,79) output(100,worse,92) output(100,worse,84) output(92,eq,84) output(90,eq,79) output(58,eq,9) output(90,eq,92) output(64,eq,52) output(90,eq,84)
Optimization: 23 10
Answer: 24
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrep(4))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,16) output(58,better,100) output(58,better,79) output(58,better,9) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,51) output(79,better,67) output(79,better,16) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,52) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,44) output(58,worse,84) output(64,worse,84) output(79,worse,44) output(92,worse,84) output(9,worse,44) output(9,worse,84) output(24,worse,52) output(100,worse,44) output(100,worse,84) output(9,eq,100) output(38,eq,51) output(92,eq,64) output(79,eq,52) output(64,eq,52) output(92,eq,52) output(90,eq,84)
Optimization: 22 12
Answer: 25
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrep(4))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,16) output(58,better,100) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,84) output(64,worse,84) output(92,worse,84) output(9,worse,84) output(24,worse,38) output(24,worse,51) output(24,worse,67) output(24,worse,52) output(100,worse,84) output(100,eq,79) output(79,eq,44) output(100,eq,92) output(100,eq,44) output(64,eq,52) output(90,eq,84)
Optimization: 21 13
Answer: 26
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasPrep(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(1))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(38,better,51) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,16) output(58,better,100) output(58,better,79) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,16) output(58,better,67) output(64,better,24) output(64,better,51) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,100) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(51,worse,52) output(58,worse,75) output(58,worse,33) output(58,worse,90) output(58,worse,84) output(64,worse,84) output(64,worse,38) output(79,worse,44) output(92,worse,84) output(9,worse,84) output(24,worse,38) output(24,worse,51) output(24,worse,67) output(24,worse,52) output(100,worse,84) output(100,eq,44) output(58,eq,9) output(92,eq,38) output(64,eq,52) output(90,eq,84)
Optimization: 20 13
Progression : [ 6;20] (Error: 2.33333)
Answer: 27
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,16) output(58,better,90) output(58,better,79) output(58,better,44) output(58,better,92) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,84) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,9) output(90,worse,9) output(90,worse,100) output(90,worse,64) output(92,worse,64) output(92,worse,84) output(9,worse,100) output(44,worse,52) output(44,eq,67) output(24,eq,52) output(58,eq,64) output(90,eq,84)
Optimization: 18 13
Answer: 28
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,16) output(58,better,90) output(58,better,79) output(58,better,44) output(58,better,92) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,84) output(64,better,24) output(64,better,38) output(64,better,51) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,38) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(38,worse,52) output(51,worse,67) output(51,worse,52) output(58,worse,75) output(58,worse,100) output(58,worse,33) output(58,worse,9) output(90,worse,9) output(90,worse,100) output(90,worse,64) output(92,worse,64) output(92,worse,84) output(9,worse,100) output(79,eq,44) output(58,eq,64) output(92,eq,24) output(90,eq,84)
Optimization: 17 12
Answer: 29
preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(38,better,51) output(38,better,52) output(38,better,16) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,51) output(64,better,52) output(64,better,16) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(51,worse,67) output(58,worse,75) output(64,worse,84) output(64,worse,24) output(90,worse,100) output(92,worse,84) output(9,worse,100) output(9,worse,84) output(44,eq,67) output(38,eq,67) output(33,eq,100) output(64,eq,38) output(92,eq,24) output(90,eq,84) output(64,eq,67)
Optimization: 15 11
Progression : [ 7;15] (Error: 1.14286)
Progression : [ 8;15] (Error: 0.875)
Answer: 30
preference(1,(1,1),1,for(atom(hasPrep(4))),1) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(38,better,51) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,51) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(51,worse,52) output(64,worse,84) output(90,worse,100) output(92,worse,84) output(9,worse,100) output(9,worse,84) output(58,eq,75) output(64,eq,24) output(44,eq,52) output(38,eq,52) output(9,eq,92) output(9,eq,79) output(33,eq,100) output(90,eq,84)
Optimization: 14 14
Answer: 31
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(58,worse,75) output(58,worse,9) output(64,worse,84) output(64,worse,24) output(64,worse,38) output(64,worse,51) output(90,worse,9) output(90,worse,100) output(92,worse,84) output(33,worse,9) output(38,eq,51) output(33,eq,100) output(90,eq,84)
Optimization: 13 13
Answer: 32
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(38,better,51) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,51) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(58,worse,75) output(64,worse,84) output(90,worse,9) output(90,worse,100) output(92,worse,84) output(9,eq,100) output(24,eq,38) output(64,eq,24) output(33,eq,9) output(33,eq,100) output(64,eq,38) output(90,eq,84)
Optimization: 12 12
Answer: 33
preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(38,better,51) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,51) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,9) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,9) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,84) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(58,worse,75) output(64,worse,84) output(64,worse,24) output(90,worse,100) output(92,worse,84) output(9,worse,100) output(9,worse,84) output(51,eq,67) output(33,eq,100) output(64,eq,38) output(90,eq,84)
Optimization: 11 11
Answer: 34
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(38,better,52) output(38,better,67) output(38,better,16) output(51,better,67) output(51,better,52) output(51,better,16) output(58,better,100) output(58,better,33) output(58,better,90) output(58,better,79) output(58,better,9) output(58,better,44) output(58,better,92) output(58,better,64) output(58,better,24) output(58,better,52) output(58,better,51) output(58,better,38) output(58,better,84) output(58,better,16) output(58,better,67) output(64,better,38) output(64,better,51) output(64,better,52) output(64,better,16) output(64,better,67) output(67,better,16) output(79,better,44) output(79,better,51) output(79,better,67) output(79,better,16) output(79,better,52) output(84,better,24) output(84,better,38) output(84,better,67) output(84,better,51) output(84,better,52) output(84,better,16) output(90,better,79) output(90,better,44) output(90,better,92) output(90,better,64) output(90,better,24) output(90,better,52) output(90,better,51) output(90,better,38) output(90,better,16) output(90,better,67) output(92,better,64) output(92,better,38) output(92,better,24) output(92,better,52) output(92,better,51) output(92,better,16) output(92,better,67) output(9,better,100) output(9,better,92) output(9,better,79) output(9,better,51) output(9,better,44) output(9,better,84) output(9,better,64) output(9,better,24) output(9,better,52) output(9,better,38) output(9,better,16) output(9,better,67) output(24,better,38) output(24,better,51) output(24,better,67) output(24,better,16) output(24,better,52) output(33,better,90) output(33,better,100) output(33,better,79) output(33,better,92) output(33,better,24) output(33,better,64) output(33,better,52) output(33,better,38) output(33,better,84) output(33,better,44) output(33,better,16) output(33,better,67) output(33,better,51) output(44,better,51) output(44,better,52) output(44,better,67) output(44,better,16) output(75,better,33) output(75,better,100) output(75,better,92) output(75,better,79) output(75,better,90) output(75,better,51) output(75,better,9) output(75,better,44) output(75,better,84) output(75,better,64) output(75,better,24) output(75,better,52) output(75,better,38) output(75,better,16) output(75,better,67) output(100,better,79) output(100,better,92) output(100,better,64) output(100,better,44) output(100,better,51) output(100,better,67) output(100,better,52) output(100,better,24) output(100,better,38) output(100,better,16) output(58,worse,75) output(64,worse,84) output(90,worse,9) output(92,worse,84) output(38,eq,51) output(64,eq,24) output(33,eq,9) output(90,eq,100) output(100,eq,84) output(90,eq,84)
Optimization: 10 13
Progression : [ 9;10] (Error: 0.111111)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.034 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 34+
  Optimum    : unknown
Optimization : 10 13
Bounds       : [9;10] [0;13]
Calls        : 1
Time         : 297.434s (Solving: 295.12s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.928s
Threads      : 4        (Winner: 4)

Choices      : 14663480 (Domain: 885940)
Conflicts    : 11332792 (Analyzed: 11332784)
Restarts     : 9773     (Average: 1159.60 Last: 3164301)
Model-Level  : 61.7    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 11500232 (Deleted: 11101372)
  Binary     : 344      (Ratio:   0.00%)
  Ternary    : 9729     (Ratio:   0.08%)
  Conflict   : 11332784 (Average Length:  124.3 Ratio:  98.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 167448   (Average Length:   30.3 Ratio:   1.46%) 
  Distributed: 55891    (Ratio:   0.49% Average LBD: 3.68) 
  Integrated : 167670   (Ratio: 299.99% Unit: 255 Average Jumps: 6.28)
Backjumps    : 11332784 (Average:  1.28 Max: 147 Sum: 14458325)
  Executed   : 11332780 (Average:  1.28 Max: 147 Sum: 14458205 Ratio: 100.00%)
  Bounded    : 4        (Average: 30.00 Max:  60 Sum:    120 Ratio:   0.00%)

Rules        : 238941  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 17772   
Bodies       : 6566    
  Sum        : 209     
  Count      : 14      
Equivalences : 9938     (Atom=Atom: 1346 Body=Body: 606 Other: 7986)
Tight        : Yes
Variables    : 5102     (Eliminated:    0 Frozen: 3632)
Constraints  : 229676   (Binary:  98.5% Ternary:   0.7% Other:   0.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(4)) ; 
  7 :: atom(hasDifficulty(2)) 
}.
