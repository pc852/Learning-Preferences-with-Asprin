asprin_vL version 1.0
Reading from stdin
-:1239:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1264:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1345:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1619:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1796:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1997:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2001:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2007:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2106:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2132:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2252:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2286:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1156:1-16: info: no atoms over signature occur in program:
  output/3

-:1148:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1149:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1150:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1151:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1181:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),0,for(atom(hasPrep(3))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasPrep(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,aso) output(79,eq,7) output(7,eq,46) output(46,eq,60) output(33,eq,32) output(39,eq,4) output(78,eq,52) output(31,eq,79) output(7,eq,51) output(42,eq,23) output(18,eq,90) output(90,eq,78) output(18,eq,78) output(79,eq,51) output(90,eq,52) output(7,eq,60) output(79,eq,46) output(31,eq,7) output(31,eq,46) output(79,eq,60) output(31,eq,60) output(18,eq,52) output(31,eq,51)
Optimization: 22 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,5),2,for(atom(hasPrep(3))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(90,better,52) output(7,better,60) output(18,better,52) output(79,worse,7) output(42,worse,23) output(79,worse,51) output(79,worse,46) output(31,worse,46) output(79,worse,60) output(33,eq,32) output(18,eq,78)
Optimization: 15 6
Answer: 3
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasPrep(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,aso) output(7,better,46) output(33,better,32) output(31,better,79) output(7,better,51) output(7,better,60) output(31,better,46) output(31,better,60) output(31,better,51) output(79,worse,7) output(78,worse,52) output(90,worse,52) output(18,worse,52) output(46,eq,60) output(39,eq,4) output(42,eq,23) output(18,eq,90) output(90,eq,78) output(18,eq,78) output(79,eq,51) output(79,eq,46) output(31,eq,7) output(79,eq,60)
Optimization: 14 6
Answer: 4
preference(1,(1,2),0,for(atom(hasPrep(4))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasPrep(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,aso) output(46,better,60) output(78,better,52) output(31,better,79) output(7,better,51) output(18,better,90) output(7,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(79,worse,7) output(90,worse,78) output(79,worse,46) output(7,eq,46) output(33,eq,32) output(39,eq,4) output(42,eq,23) output(18,eq,78) output(79,eq,51) output(90,eq,52) output(31,eq,7) output(31,eq,46) output(79,eq,60)
Optimization: 13 6
Answer: 5
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(3))),()) preference(1,(1,4),3,for(atom(hasPrepTime(3))),()) preference(1,(1,5),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(7,better,46) output(46,better,60) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(18,better,90) output(7,better,60) output(31,better,46) output(31,better,60) output(18,better,52) output(31,better,51) output(79,worse,7) output(90,worse,78) output(79,worse,46) output(31,worse,7) output(33,eq,32) output(42,eq,23) output(18,eq,78) output(90,eq,52) output(79,eq,60)
Optimization: 10 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,5),3,for(atom(hasPrep(7))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(90,better,52) output(31,better,7) output(31,better,46) output(18,better,52) output(31,better,51) output(46,worse,60) output(33,worse,32) output(90,worse,78) output(7,worse,60) output(79,worse,60) output(31,eq,60)
Optimization: 10 5
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(7,better,46) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(18,better,90) output(18,better,78) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,46) output(18,better,52) output(79,worse,7) output(46,worse,60) output(79,worse,51) output(31,worse,7) output(79,worse,60)
Optimization: 9 6
Answer: 8
preference(1,(1,1),0,for(atom(hasPrep(1))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasDifficulty(2))),()) preference(1,(1,5),0,for(atom(hasPrep(1))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,aso) output(79,better,7) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(7,worse,46) output(39,worse,4) output(78,worse,52) output(7,worse,51) output(7,worse,60) output(46,eq,60) output(33,eq,32) output(31,eq,79)
Optimization: 8 6
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(atom(hasPrep(0))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(79,better,7) output(39,better,4) output(78,better,52) output(31,better,79) output(18,better,90) output(18,better,78) output(79,better,51) output(90,better,52) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(33,worse,32) output(42,worse,23)
Optimization: 7 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(atom(hasPrep(0))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasPrep(4))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(79,better,7) output(46,better,60) output(39,better,4) output(78,better,52) output(31,better,79) output(18,better,90) output(18,better,78) output(79,better,51) output(90,better,52) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(7,worse,46) output(33,worse,32) output(7,worse,51) output(42,worse,23) output(7,worse,60)
Optimization: 6 6
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(atom(hasPrep(0))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(3))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasPrep(4))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(7,better,46) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(18,better,90) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(46,worse,60) output(42,worse,23) output(33,eq,32)
Optimization: 5 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(78,better,52) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(39,worse,4) output(90,worse,78) output(90,worse,52) output(31,eq,79)
Optimization: 4 4
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,1),3,for(atom(hasPrepTime(2))),()) preference(1,(1,5),3,for(atom(hasPrep(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(18,better,90) output(18,better,78) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(90,worse,78) output(90,worse,52)
Optimization: 3 5
Progression : [1;3] (Error: 2)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(46,worse,60) output(33,worse,32)
Optimization: 2 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,1),3,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasPrepTime(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(31,eq,79)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,(1,1),3,for(atom(hasPrepTime(2))),()) preference(1,(1,3),3,for(atom(hasPrepTime(3))),()) preference(1,(1,4),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(31,eq,79)
Optimization: 1 5
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,1),3,for(atom(hasPrepTime(2))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(31,eq,79)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 17
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 4.642s (Solving: 2.58s 1st Model: 0.05s Unsat: 1.35s)
CPU Time     : 12.251s
Threads      : 4        (Winner: 1)

Choices      : 119981   (Domain: 1868)
Conflicts    : 36093    (Analyzed: 36087)
Restarts     : 61       (Average: 591.59 Last: 1862)
Model-Level  : 190.8   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 58277    (Deleted: 6891)
  Binary     : 1723     (Ratio:   2.96%)
  Ternary    : 6196     (Ratio:  10.63%)
  Conflict   : 36087    (Average Length:   80.3 Ratio:  61.92%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 22190    (Average Length:   34.5 Ratio:  38.08%) 
  Distributed: 7440     (Ratio:  20.62% Average LBD: 3.14) 
  Integrated : 22320    (Ratio: 300.00% Unit: 218 Average Jumps: 33.83)
Backjumps    : 36087    (Average:  2.90 Max: 509 Sum: 104749)
  Executed   : 36073    (Average:  2.90 Max: 509 Sum: 104582 Ratio:  99.84%)
  Bounded    : 14       (Average: 11.93 Max:  21 Sum:    167 Ratio:   0.16%)

Rules        : 519220  
  Choice     : 25      
  Minimize   : 2       
Atoms        : 149958  
Bodies       : 170687  
  Count      : 816     
Equivalences : 435351   (Atom=Atom: 126475 Body=Body: 134937 Other: 173939)
Tight        : Yes
Variables    : 24207    (Eliminated:    0 Frozen: 13503)
Constraints  : 409334   (Binary:  94.3% Ternary:   4.7% Other:   1.1%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(3))  >> atom(hasPrep(5)) >> not atom(hasPrep(0))  || atom(hasPrep(3)) ; 
  not atom(hasPrep(4))  >> not atom(hasDifficulty(2))  >> atom(hasPrepTime(3)) ; 
  not atom(hasPrep(3))  >> atom(hasPrep(1)) >> atom(hasPrep(3)) ; 
  not atom(hasPrep(3))  >> not atom(hasPrepTime(3))  >> atom(hasDifficulty(2)) ; 
  not atom(hasPrep(3))  >> not atom(hasCost(1))  >> atom(hasPrep(1)) ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(2))  >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(4))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(2))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(7))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) >> not atom(hasPrepTime(3))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) >> not atom(hasPrepTime(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(3))  >> atom(hasPrep(5)) >> not atom(hasPrep(0))  || atom(hasPrep(4)) ; 
  atom(hasPrep(7)) >> not atom(hasPrep(7))  >> atom(hasPrep(1)) || not atom(hasPrep(1))  ; 
  not atom(hasPrep(4))  >> atom(hasPrep(1)) >> atom(hasPrepTime(3)) ; 
  not atom(hasPrep(3))  >> atom(hasPrep(1)) >> atom(hasPrep(3)) ; 
  not atom(hasPrep(3))  >> not atom(hasPrepTime(3))  >> atom(hasDifficulty(2)) ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(2))  >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(3))  >> atom(hasPrep(5)) >> not atom(hasPrep(0))  || atom(hasPrep(4)) ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(7))  >> atom(hasPrep(1)) || not atom(hasCost(2))  ; 
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  not atom(hasPrep(3))  >> atom(hasPrep(1)) >> atom(hasPrep(3)) ; 
  not atom(hasPrep(3))  >> not atom(hasPrepTime(3))  >> atom(hasDifficulty(2)) ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(2))  >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> not atom(hasPrep(3))  >> atom(hasPrep(1)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasPrep(0))  >> not atom(hasPrepTime(1))  || atom(hasCost(1)) ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(2))  >> atom(hasPrepTime(3)) || atom(hasCost(1)) ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(2))  >> atom(hasPrepTime(3)) || atom(hasCost(1)) ; 
  atom(hasDifficulty(1)) >> not atom(hasDifficulty(2))  >> atom(hasPrepTime(3)) || atom(hasCost(1)) ; 
  atom(hasDifficulty(1)) >> not atom(hasPrep(4))  >> atom(hasPrep(2)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> not atom(hasPrep(3))  >> atom(hasPrep(0)) || not atom(hasPrep(0))  ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  >> not atom(hasPrep(4))  || atom(hasCost(1)) ; 
  not atom(hasPrep(2))  >> atom(hasDifficulty(2)) || atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(7)) || atom(hasDifficulty(2)) ; 
  not atom(hasDifficulty(2))  >> atom(hasDifficulty(1)) >> atom(hasPrep(7)) || atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(3)) >> atom(hasCost(2)) >> atom(hasPrepTime(1)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(4))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) >> not atom(hasPrepTime(3))  ; 
  not atom(hasCost(1))  >> not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  ; 
  atom(hasPrep(5)) >> not atom(hasDifficulty(1))  >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> not atom(hasPrepTime(1))  || atom(hasPrep(1)) ; 
  atom(hasPrepTime(3)) >> not atom(hasPrep(3))  >> not atom(hasPrep(5))  || atom(hasPrep(7)) ; 
  not atom(hasCost(2))  >> not atom(hasPrep(4))  || atom(hasDifficulty(2)) ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  >> not atom(hasPrep(0))  || atom(hasPrep(1)) ; 
  not atom(hasDifficulty(2))  >> not atom(hasPrep(7))  || atom(hasPrep(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(2)) >> not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(6))  || atom(hasPrep(0)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(2)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(0))  ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(1)) >> atom(hasPrep(0)) || not atom(hasPrep(0))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(4))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(0))  >> atom(hasPrep(4)) || atom(hasPrep(0)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(2)) >> atom(hasPrep(4)) || not atom(hasPrep(0))  ; 
  not atom(hasCost(1))  >> atom(hasPrep(3)) >> atom(hasPrep(4)) || not atom(hasPrep(0))  ; 
  not atom(hasPrep(2))  >> atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> atom(hasPrep(2)) || not atom(hasPrepTime(2))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(3)) >> atom(hasPrep(4)) || atom(hasPrep(0)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(2)) >> atom(hasPrep(4)) || not atom(hasPrep(0))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> not atom(hasPrepTime(1))  || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(1)) >> atom(hasPrep(0)) || not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasPrepTime(3)) >> not atom(hasPrepTime(1))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(5)) >> atom(hasPrep(2)) || not atom(hasPrepTime(2))  ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrep(2))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> not atom(hasPrepTime(1))  || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasCost(1))  >> atom(hasPrepTime(2)) || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(2)) >> not atom(hasPrep(5))  || not atom(hasPrep(6))  ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrep(2))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(2)) >> atom(hasPrep(2)) || not atom(hasPrep(7))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(4))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(2)) >> not atom(hasPrep(0))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(4)) >> atom(hasPrep(1)) || not atom(hasPrep(0))  ; 
  atom(hasPrep(0)) >> not atom(hasPrep(4))  >> not atom(hasPrep(1))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrepTime(2))  || atom(hasPrep(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(0)) >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrepTime(1))  >> not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasPrep(5))  >> atom(hasPrepTime(2)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) || atom(hasCost(1)) ; 
  atom(hasPrep(2)) >> not atom(hasDifficulty(1))  >> atom(hasPrepTime(2)) || not atom(hasPrep(0))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(2)) >> atom(hasPrepTime(2)) || not atom(hasPrepTime(2))  ; 
  not atom(hasDifficulty(2))  >> atom(hasPrepTime(2)) >> not atom(hasPrep(6))  ; 
  not atom(hasPrep(2))  >> not atom(hasCost(1))  >> not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasDifficulty(2)) >> atom(hasPrepTime(2)) || not atom(hasPrep(2))  ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(5))  >> not atom(hasCost(1))  || not atom(hasPrep(0))  ; 
  atom(hasCost(2)) >> atom(hasPrep(1)) >> atom(hasPrepTime(3)) || not atom(hasPrepTime(1))  ; 
  not atom(hasPrep(1))  >> atom(hasPrep(2)) >> atom(hasPrepTime(2)) || not atom(hasCost(2))  ; 
  atom(hasPrep(3)) >> atom(hasDifficulty(2)) >> not atom(hasPrepTime(2))  || atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasDifficulty(2)) >> atom(hasPrepTime(2)) || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(5))  >> not atom(hasPrep(6))  || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) || atom(hasCost(1)) ; 
  atom(hasPrepTime(2)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(6))  || atom(hasPrep(2)) 
}.
