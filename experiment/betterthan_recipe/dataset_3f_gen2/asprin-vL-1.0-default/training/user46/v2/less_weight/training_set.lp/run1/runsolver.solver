asprin_vL version 1.0
Reading from stdin
-:1227:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1237:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1252:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1333:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1594:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1607:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1784:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1913:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1985:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1989:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1989:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2094:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2120:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2240:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2274:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2296:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1144:1-16: info: no atoms over signature occur in program:
  output/3

-:1136:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1137:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(46,eq,50) output(50,eq,22) output(22,eq,19) output(19,eq,86) output(68,eq,88) output(100,eq,28) output(50,eq,54) output(54,eq,67) output(67,eq,100) output(100,eq,52) output(65,eq,73) output(98,eq,63) output(67,eq,52) output(54,eq,100) output(50,eq,67) output(46,eq,54) output(67,eq,28) output(22,eq,86) output(50,eq,19) output(46,eq,22) output(46,eq,19) output(50,eq,86) output(46,eq,86) output(54,eq,28) output(50,eq,28) output(46,eq,67) output(50,eq,100) output(46,eq,100) output(54,eq,52) output(50,eq,52) output(46,eq,52) output(46,eq,28)
Optimization: 32 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(46,better,22) output(46,better,86) output(46,better,67) output(50,better,22) output(50,better,67) output(50,better,86) output(54,better,67) output(19,better,86) output(22,worse,19) output(67,worse,100) output(67,worse,52) output(67,worse,28) output(46,eq,50) output(68,eq,88) output(100,eq,28) output(50,eq,54) output(100,eq,52) output(65,eq,73) output(98,eq,63) output(54,eq,100) output(46,eq,54) output(22,eq,86) output(50,eq,19) output(46,eq,19) output(54,eq,28) output(50,eq,28) output(50,eq,100) output(46,eq,100) output(54,eq,52) output(50,eq,52) output(46,eq,52) output(46,eq,28)
Optimization: 24 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(4))),6) preference(1,(1,10),1,for(atom(hasPrep(3))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(22,better,19) output(46,better,28) output(50,better,28) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,28) output(100,better,28) output(46,worse,54) output(46,worse,22) output(46,worse,86) output(46,worse,67) output(46,worse,52) output(50,worse,22) output(50,worse,54) output(50,worse,67) output(50,worse,86) output(50,worse,52) output(67,worse,52) output(19,worse,86) output(65,worse,73) output(100,worse,52) output(46,eq,50) output(68,eq,88) output(98,eq,63) output(22,eq,86) output(50,eq,19) output(46,eq,19) output(50,eq,100) output(46,eq,100)
Optimization: 22 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(4))),6) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(22,better,19) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,28) output(50,better,22) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,28) output(100,better,28) output(46,worse,54) output(50,worse,54) output(67,worse,52) output(19,worse,86) output(65,worse,73) output(100,worse,52) output(46,eq,50) output(68,eq,88) output(98,eq,63) output(22,eq,86) output(50,eq,52) output(46,eq,52)
Optimization: 12 13
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(22,better,19) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,28) output(67,better,28) output(65,better,73) output(100,better,28) output(100,better,52) output(22,worse,86) output(46,worse,86) output(50,worse,86) output(54,worse,100) output(67,worse,100) output(67,worse,52) output(19,worse,86) output(46,eq,50) output(68,eq,88) output(98,eq,63) output(54,eq,52)
Optimization: 11 12
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(4))),8) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(19,worse,86) output(46,eq,50) output(68,eq,88)
Optimization: 3 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 13
Progression : 2 [ 1;13] (Error: 12)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(4))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 10
Progression : 2 [ 2;10] (Error: 4)
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),8) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 9
Answer: 12
preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 8
Answer: 13
preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(46,better,54) output(46,better,22) output(46,better,19) output(46,better,86) output(46,better,67) output(46,better,100) output(46,better,52) output(46,better,28) output(50,better,22) output(50,better,54) output(50,better,67) output(50,better,19) output(50,better,86) output(50,better,28) output(50,better,100) output(50,better,52) output(54,better,67) output(54,better,100) output(54,better,28) output(54,better,52) output(67,better,100) output(67,better,52) output(67,better,28) output(19,better,86) output(65,better,73) output(98,better,63) output(100,better,28) output(100,better,52) output(46,eq,50) output(68,eq,88)
Optimization: 2 7
Progression : 2 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.047 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 2 7
Calls        : 1
Time         : 297.150s (Solving: 295.61s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.772s
Threads      : 4        (Winner: 4)

Choices      : 6903468  (Domain: 614080)
Conflicts    : 6527768  (Analyzed: 6527765)
Restarts     : 4816     (Average: 1355.43 Last: 301381)
Model-Level  : 36.2    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6672058  (Deleted: 6354167)
  Binary     : 1474     (Ratio:   0.02%)
  Ternary    : 3671     (Ratio:   0.06%)
  Conflict   : 6527765  (Average Length:  306.2 Ratio:  97.84%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 144293   (Average Length:  254.7 Ratio:   2.16%) 
  Distributed: 48124    (Ratio:   0.74% Average LBD: 3.85) 
  Integrated : 144372   (Ratio: 300.00% Unit: 76 Average Jumps: 8.58)
Backjumps    : 6527765  (Average:  1.05 Max:  62 Sum: 6855111)
  Executed   : 6527764  (Average:  1.05 Max:  62 Sum: 6855102 Ratio: 100.00%)
  Bounded    : 1        (Average:  9.00 Max:   9 Sum:      9 Ratio:   0.00%)

Rules        : 93318   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8740    
Bodies       : 5573    
  Sum        : 44      
  Count      : 14      
Equivalences : 6095     (Atom=Atom: 374 Body=Body: 189 Other: 5532)
Tight        : Yes
Variables    : 4746     (Eliminated:    0 Frozen: 3276)
Constraints  : 92457    (Binary:  96.7% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.
