asprin_vL version 1.0
Reading from stdin
-:1273:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1283:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1298:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1379:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1640:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1653:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1830:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1959:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2031:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2035:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2035:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2041:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2140:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2166:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2286:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2342:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1190:1-16: info: no atoms over signature occur in program:
  output/3

-:1182:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1183:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(79,eq,88) output(49,eq,28) output(65,eq,95) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(88,eq,49) output(86,eq,65) output(54,eq,67) output(67,eq,100) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(100,eq,52) output(73,eq,98) output(65,eq,98) output(67,eq,52) output(95,eq,63) output(73,eq,63) output(86,eq,73) output(52,eq,73) output(100,eq,65) output(54,eq,100) output(50,eq,67) output(79,eq,49) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(73,eq,25) output(86,eq,95) output(52,eq,95) output(88,eq,28) output(79,eq,28) output(100,eq,95) output(67,eq,95) output(65,eq,25) output(86,eq,25) output(52,eq,25) output(95,eq,33) output(73,eq,33) output(65,eq,33) output(50,eq,100) output(67,eq,65) output(54,eq,65) output(100,eq,73) output(67,eq,73) output(65,eq,63) output(86,eq,63) output(52,eq,63) output(54,eq,52) output(50,eq,52) output(86,eq,98) output(52,eq,98) output(100,eq,98) output(67,eq,98) output(54,eq,98) output(50,eq,98) output(100,eq,63) output(67,eq,63) output(54,eq,63) output(50,eq,63) output(54,eq,73) output(50,eq,73) output(50,eq,65) output(86,eq,33) output(52,eq,33) output(100,eq,33) output(67,eq,33) output(54,eq,33) output(100,eq,25) output(67,eq,25) output(54,eq,25) output(50,eq,25) output(54,eq,95) output(50,eq,95) output(50,eq,33)
Optimization: 78 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(4))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,33) output(54,better,100) output(54,better,52) output(54,better,63) output(54,better,33) output(67,better,100) output(67,better,52) output(67,better,63) output(67,better,33) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(98,better,33) output(50,worse,95) output(52,worse,65) output(52,worse,73) output(52,worse,95) output(52,worse,25) output(52,worse,98) output(52,worse,33) output(54,worse,65) output(54,worse,73) output(54,worse,25) output(54,worse,95) output(67,worse,95) output(67,worse,65) output(67,worse,73) output(67,worse,25) output(79,worse,88) output(79,worse,49) output(79,worse,28) output(49,worse,28) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(54,eq,67) output(65,eq,73) output(86,eq,95) output(52,eq,63) output(67,eq,98) output(54,eq,98) output(50,eq,25)
Optimization: 40 6
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrep(4))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,33) output(52,better,63) output(52,better,98) output(54,better,100) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(67,better,100) output(67,better,52) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(88,better,49) output(88,better,28) output(50,worse,95) output(52,worse,65) output(52,worse,95) output(52,worse,25) output(54,worse,65) output(54,worse,25) output(54,worse,95) output(67,worse,95) output(67,worse,65) output(67,worse,25) output(79,worse,88) output(79,worse,49) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(98,worse,63) output(98,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(54,eq,67) output(52,eq,73) output(86,eq,95) output(73,eq,33) output(52,eq,33) output(50,eq,25)
Optimization: 34 11
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,2),1,for(atom(hasPrep(1))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,33) output(52,better,73) output(54,better,100) output(54,better,52) output(54,better,98) output(54,better,73) output(54,better,33) output(67,better,100) output(67,better,52) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,33) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(88,better,49) output(88,better,28) output(98,better,33) output(100,better,73) output(50,worse,67) output(50,worse,95) output(52,worse,65) output(52,worse,95) output(52,worse,25) output(52,worse,63) output(52,worse,98) output(54,worse,67) output(54,worse,65) output(54,worse,63) output(54,worse,25) output(54,worse,95) output(79,worse,88) output(63,worse,25) output(65,worse,95) output(65,worse,25) output(73,worse,98) output(73,worse,63) output(73,worse,25) output(73,worse,33) output(98,worse,25) output(98,worse,63) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(86,eq,95) output(67,eq,95) output(52,eq,33) output(50,eq,25)
Optimization: 33 11
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(4))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,95) output(50,better,33) output(52,better,65) output(52,better,63) output(52,better,98) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,33) output(49,better,28) output(73,better,98) output(73,better,63) output(88,better,49) output(88,better,28) output(98,better,63) output(100,better,65) output(52,worse,95) output(52,worse,25) output(54,worse,25) output(67,worse,95) output(67,worse,25) output(79,worse,88) output(79,worse,49) output(86,worse,25) output(95,worse,25) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(65,worse,73) output(65,worse,98) output(65,worse,25) output(65,worse,33) output(65,worse,63) output(73,worse,25) output(98,worse,25) output(98,worse,33) output(100,worse,52) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(52,eq,73) output(86,eq,95) output(73,eq,33) output(52,eq,33) output(50,eq,25)
Optimization: 32 13
Answer: 6
preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,95) output(50,better,33) output(52,better,65) output(52,better,63) output(52,better,98) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,33) output(49,better,28) output(73,better,98) output(73,better,63) output(88,better,49) output(88,better,28) output(98,better,63) output(100,better,65) output(52,worse,95) output(52,worse,25) output(54,worse,25) output(67,worse,25) output(79,worse,88) output(79,worse,49) output(86,worse,25) output(95,worse,25) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(65,worse,73) output(65,worse,98) output(65,worse,25) output(65,worse,33) output(65,worse,63) output(73,worse,25) output(98,worse,25) output(98,worse,33) output(100,worse,52) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,33) output(100,worse,25) output(52,eq,73) output(86,eq,95) output(73,eq,33) output(100,eq,63) output(52,eq,33) output(50,eq,25)
Optimization: 31 12
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(4))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasCost(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,73) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,100) output(54,better,65) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,63) output(73,better,98) output(73,better,63) output(88,better,28) output(25,worse,33) output(50,worse,54) output(50,worse,67) output(50,worse,52) output(50,worse,65) output(50,worse,95) output(50,worse,33) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(73,worse,25) output(73,worse,33) output(98,worse,25) output(98,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,33) output(100,worse,25) output(88,eq,49) output(54,eq,67) output(98,eq,63) output(67,eq,52) output(86,eq,95) output(65,eq,33) output(54,eq,52) output(100,eq,98) output(100,eq,63) output(50,eq,25)
Optimization: 30 12
Progression : [ 3;30] (Error: 9)
Progression : [ 4;30] (Error: 6.5)
Answer: 8
preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrep(4))),8) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(50,better,73) output(52,better,73) output(52,better,25) output(52,better,63) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,25) output(65,better,73) output(65,better,25) output(65,better,33) output(65,better,63) output(88,better,49) output(88,better,28) output(98,better,25) output(98,better,63) output(98,better,33) output(100,better,73) output(100,better,25) output(25,worse,33) output(50,worse,54) output(50,worse,67) output(50,worse,100) output(50,worse,52) output(50,worse,98) output(50,worse,63) output(50,worse,65) output(50,worse,95) output(50,worse,33) output(52,worse,65) output(52,worse,95) output(52,worse,98) output(63,worse,33) output(65,worse,95) output(65,worse,98) output(73,worse,98) output(73,worse,63) output(73,worse,25) output(73,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(86,eq,95) output(67,eq,95) output(50,eq,25)
Optimization: 29 12
Progression : [ 5;29] (Error: 4.8)
Progression : [ 6;29] (Error: 3.83333)
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,95) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,25) output(65,better,95) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(88,better,49) output(88,better,28) output(98,better,25) output(98,better,63) output(98,better,33) output(100,better,73) output(100,better,25) output(25,worse,33) output(50,worse,54) output(50,worse,67) output(50,worse,100) output(50,worse,52) output(50,worse,98) output(50,worse,63) output(50,worse,65) output(50,worse,95) output(50,worse,33) output(67,worse,52) output(86,worse,65) output(73,worse,98) output(73,worse,63) output(73,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,98) output(63,eq,33) output(73,eq,25) output(86,eq,95) output(67,eq,65) output(100,eq,63) output(50,eq,73) output(100,eq,33) output(50,eq,25)
Optimization: 27 13
Progression : [ 8;27] (Error: 2.375)
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,25) output(65,better,95) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(88,better,28) output(98,better,25) output(98,better,63) output(100,better,25) output(25,worse,33) output(50,worse,54) output(50,worse,67) output(50,worse,100) output(50,worse,52) output(50,worse,98) output(50,worse,63) output(50,worse,73) output(50,worse,65) output(50,worse,95) output(50,worse,33) output(86,worse,65) output(63,worse,33) output(88,worse,49) output(98,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,33) output(54,eq,67) output(86,eq,73) output(86,eq,95) output(100,eq,63) output(50,eq,25)
Optimization: 26 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),2) preference(1,(1,10),1,for(atom(hasPrep(4))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(52,better,65) output(52,better,73) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,25) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,63) output(73,better,25) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,25) output(98,better,63) output(98,better,33) output(100,better,25) output(25,worse,33) output(50,worse,54) output(50,worse,67) output(50,worse,100) output(50,worse,52) output(50,worse,98) output(50,worse,63) output(50,worse,73) output(50,worse,65) output(50,worse,95) output(50,worse,33) output(65,worse,95) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(54,eq,67) output(73,eq,98) output(63,eq,33) output(86,eq,95) output(52,eq,95) output(100,eq,63) output(100,eq,33) output(50,eq,25)
Optimization: 25 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasPrep(4))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),7) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(25,better,33) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(88,better,28) output(98,better,63) output(50,worse,54) output(50,worse,67) output(50,worse,52) output(50,worse,95) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(73,worse,25) output(73,worse,33) output(98,worse,25) output(98,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(88,eq,49) output(86,eq,95) output(65,eq,25) output(50,eq,65) output(50,eq,25)
Optimization: 24 14
Progression : [ 9;24] (Error: 1.66667)
Answer: 13
preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,95) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,73) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,33) output(49,better,28) output(65,better,95) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(98,better,33) output(52,worse,25) output(54,worse,25) output(67,worse,25) output(86,worse,65) output(86,worse,25) output(95,worse,25) output(63,worse,25) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,25) output(54,eq,67) output(63,eq,33) output(86,eq,95) output(100,eq,63) output(100,eq,33) output(50,eq,25)
Optimization: 22 10
Progression : [10;22] (Error: 1.2)
Progression : [11;22] (Error: 1)
Progression : [12;22] (Error: 0.833333)
Progression : [13;22] (Error: 0.692308)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(1))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(4))),8) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(25,better,33) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(50,worse,54) output(50,worse,67) output(50,worse,52) output(50,worse,95) output(63,worse,25) output(63,worse,33) output(65,worse,95) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(98,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(86,eq,95) output(50,eq,25)
Optimization: 21 13
Progression : [14;21] (Error: 0.5)
Progression : [15;21] (Error: 0.4)
Answer: 15
preference(1,(1,2),1,for(atom(hasPrepTime(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(25,better,33) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,95) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,33) output(49,better,28) output(63,better,33) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(98,better,33) output(52,worse,25) output(54,worse,25) output(67,worse,25) output(86,worse,25) output(95,worse,25) output(63,worse,25) output(65,worse,95) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,25) output(86,eq,95) output(100,eq,33) output(50,eq,25)
Optimization: 20 12
Progression : [16;20] (Error: 0.25)
Progression : [17;20] (Error: 0.176471)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrepTime(1))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(25,better,33) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,33) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(98,better,33) output(50,worse,54) output(50,worse,67) output(50,worse,52) output(50,worse,95) output(63,worse,25) output(65,worse,95) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(86,eq,95) output(50,eq,25)
Optimization: 19 11
Progression : [18;19] (Error: 0.0555556)
Progression : [19;19] (Error: 0)
Progression : 19 [ 1;11] (Error: 10)
Progression : 19 [ 2;11] (Error: 4.5)
Answer: 17
preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(25,better,33) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,33) output(65,better,73) output(65,better,98) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(98,better,33) output(50,worse,54) output(50,worse,67) output(50,worse,52) output(50,worse,95) output(63,worse,25) output(65,worse,95) output(65,worse,25) output(73,worse,25) output(98,worse,25) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,25) output(86,eq,95) output(100,eq,33) output(50,eq,25)
Optimization: 19 10
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasPrep(4))),7) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(25,better,33) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,33) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(79,better,88) output(79,better,49) output(79,better,28) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(49,better,28) output(63,better,33) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(88,better,49) output(88,better,28) output(98,better,63) output(98,better,33) output(50,worse,54) output(50,worse,67) output(50,worse,52) output(50,worse,73) output(50,worse,65) output(50,worse,95) output(63,worse,25) output(65,worse,95) output(98,worse,25) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,33) output(100,worse,25) output(86,eq,95) output(50,eq,25)
Optimization: 19 9
Progression : 19 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.049 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 19 9
Bounds       : 19 [3;9]
Calls        : 1
Time         : 297.575s (Solving: 295.64s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.041s
Threads      : 4        (Winner: 4)

Choices      : 8808166  (Domain: 931850)
Conflicts    : 7787919  (Analyzed: 7787900)
Restarts     : 6696     (Average: 1163.07 Last: 493610)
Model-Level  : 44.0    
Problems     : 27       (Average Length: 0.15 Splits: 0)
Lemmas       : 8001538  (Deleted: 7586248)
  Binary     : 684      (Ratio:   0.01%)
  Ternary    : 11642    (Ratio:   0.15%)
  Conflict   : 7787900  (Average Length:  182.7 Ratio:  97.33%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 213638   (Average Length:  128.1 Ratio:   2.67%) 
  Distributed: 71734    (Ratio:   0.92% Average LBD: 3.71) 
  Integrated : 215202   (Ratio: 300.00% Unit: 235 Average Jumps: 6.16)
Backjumps    : 7787900  (Average:  1.12 Max:  83 Sum: 8727121)
  Executed   : 7787875  (Average:  1.12 Max:  83 Sum: 8726883 Ratio: 100.00%)
  Bounded    : 25       (Average:  9.52 Max:  49 Sum:    238 Ratio:   0.00%)

Rules        : 166296  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13264   
Bodies       : 6087    
  Sum        : 144     
  Count      : 14      
Equivalences : 8039     (Atom=Atom: 814 Body=Body: 353 Other: 6872)
Tight        : Yes
Variables    : 4958     (Eliminated:    0 Frozen: 3488)
Constraints  : 161285   (Binary:  98.0% Ternary:   1.0% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(4)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) 
}.
