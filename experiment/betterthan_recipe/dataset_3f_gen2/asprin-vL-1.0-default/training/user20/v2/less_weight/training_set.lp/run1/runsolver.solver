asprin_vL version 1.0
Reading from stdin
-:1222:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1232:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1247:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1328:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1589:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1602:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1779:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1908:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1980:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1984:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2089:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2115:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2235:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2269:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1139:1-16: info: no atoms over signature occur in program:
  output/3

-:1131:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(57,eq,75) output(62,eq,76) output(76,eq,38) output(11,eq,10) output(10,eq,25) output(25,eq,73) output(73,eq,26) output(42,eq,51) output(51,eq,36) output(32,eq,11) output(11,eq,23) output(23,eq,25) output(11,eq,25) output(32,eq,23) output(42,eq,36) output(25,eq,26) output(10,eq,73) output(23,eq,73) output(32,eq,10) output(62,eq,38) output(11,eq,73) output(32,eq,73) output(10,eq,26) output(23,eq,26) output(11,eq,26) output(32,eq,25) output(32,eq,26)
Optimization: 27 0
Answer: 2
preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(23,better,25) output(23,better,73) output(23,better,26) output(11,worse,10) output(11,worse,23) output(32,worse,23) output(32,worse,10) output(42,worse,51) output(42,worse,36) output(57,eq,75) output(62,eq,76) output(76,eq,38) output(25,eq,73) output(73,eq,26) output(51,eq,36) output(32,eq,11) output(11,eq,25) output(25,eq,26) output(62,eq,38) output(11,eq,73) output(32,eq,73) output(11,eq,26) output(32,eq,25) output(32,eq,26)
Optimization: 21 1
Answer: 3
preference(1,(1,2),1,for(atom(hasPrep(4))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(11,better,25) output(11,better,73) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(32,better,73) output(32,better,25) output(25,worse,26) output(73,worse,26) output(57,eq,75) output(62,eq,76) output(11,eq,10) output(25,eq,73) output(42,eq,51) output(51,eq,36) output(32,eq,11) output(11,eq,23) output(32,eq,23) output(42,eq,36) output(32,eq,10) output(10,eq,26) output(23,eq,26) output(11,eq,26) output(32,eq,26)
Optimization: 17 2
Answer: 4
preference(1,(1,2),1,for(atom(hasPrep(4))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(11,better,10) output(11,better,25) output(11,better,73) output(11,better,26) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(51,worse,36) output(57,eq,75) output(62,eq,76) output(10,eq,25) output(25,eq,73) output(73,eq,26) output(32,eq,11) output(11,eq,23) output(32,eq,23) output(42,eq,36) output(25,eq,26) output(10,eq,73) output(10,eq,26)
Optimization: 13 3
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(11,better,10) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(51,better,36) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(10,worse,26) output(25,worse,26) output(57,worse,75) output(62,worse,76) output(73,worse,26) output(11,eq,23)
Optimization: 6 11
Progression : [1;6] (Error: 5)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(10,better,26) output(11,better,10) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(10,worse,25) output(10,worse,73) output(57,worse,75) output(62,eq,76) output(11,eq,23)
Optimization: 5 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(51,better,36) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(25,worse,26) output(57,worse,75) output(73,worse,26) output(62,eq,76)
Optimization: 4 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(57,better,75) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(62,eq,76)
Optimization: 1 12
Progression : 1 [ 1;12] (Error: 11)
Answer: 9
preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(57,better,75) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(62,eq,76)
Optimization: 1 11
Answer: 10
preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),8) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(57,better,75) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(62,eq,76)
Optimization: 1 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(57,better,75) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(62,eq,76)
Optimization: 1 9
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(57,better,75) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(62,worse,76)
Optimization: 1 8
Progression : 1 [2;8] (Error: 3)
Progression : 1 [3;8] (Error: 1.66667)
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(10,better,25) output(10,better,73) output(10,better,26) output(11,better,10) output(11,better,23) output(11,better,25) output(11,better,73) output(11,better,26) output(25,better,73) output(25,better,26) output(51,better,36) output(57,better,75) output(62,better,38) output(76,better,38) output(23,better,25) output(23,better,73) output(23,better,26) output(32,better,11) output(32,better,23) output(32,better,10) output(32,better,73) output(32,better,25) output(32,better,26) output(42,better,51) output(42,better,36) output(73,better,26) output(62,eq,76)
Optimization: 1 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.038 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 1 7
Bounds       : 1 [3;7]
Calls        : 1
Time         : 297.197s (Solving: 295.60s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.425s
Threads      : 4        (Winner: 4)

Choices      : 7226303  (Domain: 610793)
Conflicts    : 6585191  (Analyzed: 6585187)
Restarts     : 5100     (Average: 1291.21 Last: 465486)
Model-Level  : 54.7    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6766445  (Deleted: 6478637)
  Binary     : 883      (Ratio:   0.01%)
  Ternary    : 3605     (Ratio:   0.05%)
  Conflict   : 6585187  (Average Length:  260.0 Ratio:  97.32%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 181258   (Average Length:  231.7 Ratio:   2.68%) 
  Distributed: 60459    (Ratio:   0.92% Average LBD: 3.86) 
  Integrated : 181377   (Ratio: 300.00% Unit: 82 Average Jumps: 5.28)
Backjumps    : 6585187  (Average:  1.09 Max:  57 Sum: 7174580)
  Executed   : 6585181  (Average:  1.09 Max:  57 Sum: 7174476 Ratio: 100.00%)
  Bounded    : 6        (Average: 17.33 Max:  26 Sum:    104 Ratio:   0.00%)

Rules        : 86833   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8266    
Bodies       : 5538    
  Sum        : 54      
  Count      : 14      
Equivalences : 3363     (Atom=Atom: 283 Body=Body: 122 Other: 2958)
Tight        : Yes
Variables    : 4773     (Eliminated:    0 Frozen: 3303)
Constraints  : 86492    (Binary:  96.4% Ternary:   1.7% Other:   1.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) 
}.
