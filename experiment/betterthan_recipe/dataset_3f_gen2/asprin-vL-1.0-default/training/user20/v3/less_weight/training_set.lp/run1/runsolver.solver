asprin_vL version 1.0
Reading from stdin
-:1242:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1252:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1267:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1348:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1609:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1622:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1799:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1928:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2000:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2004:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2004:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2010:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2109:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2135:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2255:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2289:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2311:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1159:1-16: info: no atoms over signature occur in program:
  output/3

-:1151:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1152:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(38,eq,75) output(75,eq,5) output(26,eq,20) output(20,eq,48) output(48,eq,60) output(60,eq,55) output(55,eq,22) output(57,eq,75) output(75,eq,62) output(62,eq,76) output(76,eq,38) output(11,eq,10) output(73,eq,26) output(62,eq,38) output(75,eq,76) output(38,eq,62) output(57,eq,62) output(60,eq,22) output(48,eq,55) output(20,eq,60) output(26,eq,48) output(73,eq,20) output(38,eq,5) output(57,eq,5) output(76,eq,75) output(62,eq,75) output(75,eq,75) output(76,eq,5) output(62,eq,5) output(73,eq,48) output(26,eq,60) output(73,eq,60) output(20,eq,55) output(26,eq,55) output(48,eq,22) output(20,eq,22) output(76,eq,62) output(62,eq,62) output(38,eq,76) output(57,eq,76) output(76,eq,76) output(75,eq,38) output(38,eq,38) output(57,eq,38) output(26,eq,22) output(73,eq,22) output(73,eq,55)
Optimization: 47 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(57,better,75) output(57,better,5) output(57,better,38) output(62,better,38) output(62,better,75) output(62,better,5) output(76,better,38) output(76,better,75) output(76,better,5) output(38,worse,62) output(38,worse,76) output(20,worse,60) output(20,worse,55) output(20,worse,22) output(48,worse,60) output(48,worse,55) output(48,worse,22) output(73,worse,26) output(73,worse,60) output(73,worse,22) output(73,worse,55) output(75,worse,62) output(75,worse,76) output(38,eq,75) output(75,eq,5) output(20,eq,48) output(60,eq,55) output(55,eq,22) output(62,eq,76) output(11,eq,10) output(57,eq,62) output(60,eq,22) output(73,eq,20) output(38,eq,5) output(75,eq,75) output(73,eq,48) output(26,eq,60) output(26,eq,55) output(76,eq,62) output(62,eq,62) output(57,eq,76) output(76,eq,76) output(75,eq,38) output(38,eq,38) output(26,eq,22)
Optimization: 36 2
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(57,better,75) output(57,better,5) output(57,better,38) output(62,better,38) output(62,better,75) output(62,better,5) output(76,better,38) output(76,better,75) output(76,better,5) output(38,worse,62) output(38,worse,76) output(20,worse,60) output(20,worse,55) output(20,worse,22) output(48,worse,60) output(48,worse,55) output(48,worse,22) output(73,worse,26) output(73,worse,60) output(73,worse,22) output(73,worse,55) output(75,worse,62) output(75,worse,76) output(38,eq,75) output(75,eq,5) output(20,eq,48) output(60,eq,55) output(55,eq,22) output(62,eq,76) output(57,eq,62) output(60,eq,22) output(73,eq,20) output(38,eq,5) output(75,eq,75) output(73,eq,48) output(26,eq,60) output(26,eq,55) output(76,eq,62) output(62,eq,62) output(57,eq,76) output(76,eq,76) output(75,eq,38) output(38,eq,38) output(26,eq,22)
Optimization: 35 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasPrep(3))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(11,better,10) output(26,better,22) output(55,better,22) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(20,better,60) output(20,better,22) output(48,better,60) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,38) output(26,worse,20) output(26,worse,48) output(26,worse,55) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,62) output(57,worse,5) output(57,worse,76) output(57,worse,38) output(60,worse,55) output(73,worse,20) output(73,worse,48) output(73,worse,55) output(20,eq,48) output(75,eq,62) output(62,eq,76) output(73,eq,26) output(75,eq,76) output(48,eq,55) output(38,eq,5) output(76,eq,75) output(62,eq,75) output(75,eq,75) output(26,eq,60) output(73,eq,60) output(20,eq,55) output(76,eq,62) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 32 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(11,better,10) output(26,better,22) output(55,better,22) output(57,better,5) output(57,better,38) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(20,better,60) output(20,better,22) output(48,better,60) output(48,better,22) output(75,better,5) output(75,better,38) output(26,worse,20) output(26,worse,48) output(26,worse,55) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,62) output(57,worse,76) output(60,worse,55) output(73,worse,26) output(73,worse,20) output(73,worse,48) output(73,worse,60) output(73,worse,22) output(73,worse,55) output(20,eq,48) output(75,eq,62) output(62,eq,76) output(75,eq,76) output(48,eq,55) output(38,eq,5) output(76,eq,75) output(62,eq,75) output(75,eq,75) output(26,eq,60) output(20,eq,55) output(76,eq,62) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 31 12
Progression : [ 6;31] (Error: 4.16667)
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(11,better,10) output(26,better,48) output(26,better,55) output(57,better,5) output(57,better,38) output(60,better,55) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(20,better,48) output(20,better,55) output(73,better,48) output(73,better,55) output(75,better,5) output(75,better,38) output(26,worse,22) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(55,worse,22) output(60,worse,22) output(20,worse,22) output(48,worse,60) output(48,worse,22) output(73,worse,26) output(73,worse,20) output(73,worse,60) output(73,worse,22) output(26,eq,20) output(57,eq,75) output(75,eq,62) output(62,eq,76) output(75,eq,76) output(57,eq,62) output(48,eq,55) output(20,eq,60) output(38,eq,5) output(76,eq,75) output(62,eq,75) output(75,eq,75) output(26,eq,60) output(76,eq,62) output(62,eq,62) output(57,eq,76) output(76,eq,76) output(38,eq,38)
Optimization: 31 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(3))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(11,better,10) output(26,better,22) output(55,better,22) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(20,better,60) output(20,better,22) output(48,better,60) output(48,better,22) output(73,better,26) output(73,better,60) output(73,better,22) output(75,better,5) output(75,better,38) output(26,worse,20) output(26,worse,48) output(26,worse,55) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,62) output(57,worse,5) output(57,worse,76) output(57,worse,38) output(60,worse,55) output(73,worse,20) output(73,worse,48) output(73,worse,55) output(20,eq,48) output(75,eq,62) output(62,eq,76) output(75,eq,76) output(48,eq,55) output(38,eq,5) output(76,eq,75) output(62,eq,75) output(75,eq,75) output(26,eq,60) output(20,eq,55) output(76,eq,62) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 30 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(11,better,10) output(26,better,22) output(38,better,62) output(38,better,76) output(55,better,22) output(57,better,62) output(57,better,76) output(60,better,55) output(60,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,22) output(73,better,26) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,62) output(75,better,76) output(26,worse,20) output(26,worse,48) output(26,worse,60) output(26,worse,55) output(57,worse,75) output(57,worse,5) output(57,worse,38) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(76,worse,38) output(76,worse,75) output(76,worse,5) output(48,worse,60) output(38,eq,75) output(75,eq,5) output(62,eq,76) output(48,eq,55) output(73,eq,20) output(38,eq,5) output(75,eq,75) output(76,eq,62) output(62,eq,62) output(76,eq,76) output(75,eq,38) output(38,eq,38)
Optimization: 26 9
Answer: 9
preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(11,better,10) output(38,better,62) output(57,better,75) output(57,better,62) output(57,better,5) output(57,better,76) output(57,better,38) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,60) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(26,worse,20) output(26,worse,48) output(26,worse,60) output(26,worse,55) output(26,worse,22) output(38,worse,75) output(38,worse,76) output(55,worse,22) output(60,worse,55) output(60,worse,22) output(62,worse,76) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(76,worse,75) output(20,worse,48) output(73,worse,20) output(73,worse,48) output(73,worse,22) output(73,worse,55) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 25 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(11,better,10) output(26,better,48) output(26,better,55) output(38,better,62) output(38,better,76) output(57,better,62) output(57,better,5) output(57,better,76) output(57,better,38) output(60,better,55) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(73,better,26) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(26,worse,20) output(38,worse,75) output(55,worse,22) output(57,worse,75) output(62,worse,76) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(76,worse,38) output(76,worse,75) output(76,worse,5) output(48,worse,60) output(48,worse,22) output(73,worse,20) output(60,eq,22) output(48,eq,55) output(38,eq,5) output(75,eq,75) output(26,eq,60) output(62,eq,62) output(76,eq,76) output(38,eq,38) output(26,eq,22)
Optimization: 23 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(11,better,10) output(26,better,48) output(26,better,55) output(26,better,22) output(38,better,62) output(38,better,76) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,76) output(57,better,38) output(60,better,55) output(60,better,22) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,22) output(73,better,26) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(26,worse,20) output(38,worse,75) output(57,worse,75) output(62,worse,76) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(76,worse,38) output(76,worse,75) output(76,worse,5) output(48,worse,60) output(73,worse,20) output(48,eq,55) output(38,eq,5) output(75,eq,75) output(26,eq,60) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 19 12
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(38,better,62) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,22) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,22) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(60,worse,55) output(62,worse,76) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(76,worse,75) output(73,worse,26) output(73,worse,20) output(48,eq,55) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 18 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(38,better,62) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(60,better,22) output(76,better,38) output(76,better,75) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,22) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,38) output(38,worse,75) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(48,worse,60) output(73,worse,26) output(75,worse,76) output(48,eq,55) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 17 11
Progression : [ 7;17] (Error: 1.42857)
Progression : [ 8;17] (Error: 1.125)
Answer: 14
preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(55,worse,22) output(57,worse,75) output(57,worse,76) output(60,worse,22) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(73,worse,26) output(38,eq,5) output(75,eq,75) output(48,eq,22) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 17 10
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),7) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(38,better,62) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,76) output(57,better,38) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,76) output(57,worse,75) output(60,worse,55) output(60,worse,22) output(62,worse,76) output(62,worse,38) output(62,worse,75) output(62,worse,5) output(76,worse,75) output(48,eq,55) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 16 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrep(7))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(20,eq,48) output(60,eq,55) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 15 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(55,eq,22) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 14 11
Progression : [ 9;14] (Error: 0.555556)
Progression : [10;14] (Error: 0.4)
Progression : [11;14] (Error: 0.272727)
Progression : [12;14] (Error: 0.166667)
Answer: 18
preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 13 12
Progression : [13;13] (Error: 0)
Progression : 13 [ 1;12] (Error: 11)
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 13 8
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 13 7
Progression : 13 [2;7] (Error: 2.5)
Answer: 21
preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(11,better,10) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(55,better,22) output(57,better,62) output(57,better,5) output(57,better,38) output(60,better,55) output(60,better,22) output(62,better,38) output(62,better,5) output(76,better,38) output(76,better,5) output(76,better,62) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,26) output(73,better,20) output(73,better,48) output(73,better,60) output(73,better,22) output(73,better,55) output(75,better,5) output(75,better,62) output(75,better,76) output(75,better,38) output(38,worse,75) output(38,worse,62) output(38,worse,76) output(57,worse,75) output(57,worse,76) output(62,worse,76) output(62,worse,75) output(76,worse,75) output(38,eq,5) output(75,eq,75) output(62,eq,62) output(76,eq,76) output(38,eq,38)
Optimization: 13 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.088 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 13 6
Bounds       : 13 [2;6]
Calls        : 1
Time         : 298.329s (Solving: 296.57s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.717s
Threads      : 4        (Winner: 4)

Choices      : 6985703  (Domain: 606767)
Conflicts    : 5454520  (Analyzed: 5454510)
Restarts     : 5166     (Average: 1055.85 Last: 193229)
Model-Level  : 39.9    
Problems     : 18       (Average Length: 0.22 Splits: 0)
Lemmas       : 5649627  (Deleted: 5366575)
  Binary     : 580      (Ratio:   0.01%)
  Ternary    : 12146    (Ratio:   0.21%)
  Conflict   : 5454508  (Average Length:  128.7 Ratio:  96.55%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 195119   (Average Length:   33.1 Ratio:   3.45%) 
  Distributed: 65304    (Ratio:   1.20% Average LBD: 3.62) 
  Integrated : 195911   (Ratio: 300.00% Unit: 367 Average Jumps: 4.71)
Backjumps    : 5454510  (Average:  1.25 Max: 287 Sum: 6792026)
  Executed   : 5454476  (Average:  1.25 Max: 287 Sum: 6791621 Ratio:  99.99%)
  Bounded    : 34       (Average: 11.91 Max:  34 Sum:    405 Ratio:   0.01%)

Rules        : 117710  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10218   
Bodies       : 5744    
  Sum        : 80      
  Count      : 14      
Equivalences : 6710     (Atom=Atom: 495 Body=Body: 229 Other: 5986)
Tight        : Yes
Variables    : 4822     (Eliminated:    0 Frozen: 3352)
Constraints  : 115511   (Binary:  97.3% Ternary:   1.3% Other:   1.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) 
}.
