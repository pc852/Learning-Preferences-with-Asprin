asprin_vL version 1.0
Reading from stdin
-:1229:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1239:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1254:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1335:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1596:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1609:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1786:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1915:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1987:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1991:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2096:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2122:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2242:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2276:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1146:1-16: info: no atoms over signature occur in program:
  output/3

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(75,eq,32) output(60,eq,48) output(48,eq,55) output(55,eq,26) output(26,eq,5) output(20,eq,38) output(38,eq,22) output(73,eq,75) output(75,eq,62) output(11,eq,76) output(76,eq,57) output(57,eq,38) output(38,eq,10) output(25,eq,26) output(20,eq,10) output(57,eq,10) output(76,eq,38) output(11,eq,57) output(73,eq,62) output(20,eq,22) output(57,eq,22) output(55,eq,5) output(25,eq,5) output(48,eq,26) output(60,eq,55) output(73,eq,32) output(60,eq,26) output(48,eq,5) output(60,eq,5) output(76,eq,22) output(11,eq,22) output(11,eq,38) output(76,eq,10) output(11,eq,10)
Optimization: 34 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(11,better,38) output(11,better,10) output(26,better,5) output(38,better,10) output(57,better,38) output(57,better,10) output(60,better,55) output(60,better,5) output(76,better,38) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,62) output(75,better,62) output(25,worse,26) output(38,worse,22) output(55,worse,26) output(55,worse,5) output(60,worse,48) output(73,worse,75) output(73,worse,32) output(75,eq,32) output(11,eq,76) output(76,eq,57) output(11,eq,57) output(57,eq,22) output(25,eq,5) output(60,eq,26) output(76,eq,22) output(11,eq,22)
Optimization: 16 3
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),5) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,10) output(25,better,26) output(38,better,22) output(38,better,10) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,22) output(76,better,10) output(20,better,10) output(20,better,22) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(26,worse,5) output(55,worse,26) output(55,worse,5) output(57,worse,38) output(57,worse,10) output(57,worse,22) output(76,worse,38) output(48,worse,26) output(48,worse,5) output(48,eq,55) output(20,eq,38) output(73,eq,75) output(25,eq,5) output(11,eq,38)
Optimization: 14 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(4))),1) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrep(3))),3) preference(1,(1,14),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,5) output(26,better,5) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,26) output(48,better,5) output(73,better,62) output(75,better,32) output(75,better,62) output(25,worse,26) output(38,worse,22) output(48,worse,55) output(73,worse,75) output(73,worse,32)
Optimization: 5 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,5) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(48,eq,55) output(55,eq,26) output(57,eq,38) output(48,eq,26)
Optimization: 4 11
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(48,worse,55) output(57,eq,38) output(48,eq,26)
Optimization: 3 11
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(48,eq,55) output(57,eq,38)
Optimization: 2 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,26) output(48,better,5) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(73,worse,75) output(48,eq,55)
Optimization: 2 9
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(48,eq,55)
Optimization: 1 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62) output(48,eq,55)
Optimization: 1 12
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrep(3))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),2) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 12
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 11
Progression : 0 [ 3;11] (Error: 2.66667)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 10
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(6))),6) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 9
Answer: 17
preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,22) output(11,better,38) output(11,better,10) output(25,better,26) output(25,better,5) output(26,better,5) output(38,better,22) output(38,better,10) output(55,better,26) output(55,better,5) output(57,better,38) output(57,better,10) output(57,better,22) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(76,better,57) output(76,better,38) output(76,better,22) output(76,better,10) output(20,better,38) output(20,better,10) output(20,better,22) output(48,better,55) output(48,better,26) output(48,better,5) output(73,better,75) output(73,better,62) output(73,better,32) output(75,better,32) output(75,better,62)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.060 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 298.253s (Solving: 296.62s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.809s
Threads      : 4        (Winner: 4)

Choices      : 7844943  (Domain: 792713)
Conflicts    : 7167125  (Analyzed: 7167122)
Restarts     : 5894     (Average: 1216.00 Last: 487937)
Model-Level  : 31.1    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 7379986  (Deleted: 7017395)
  Binary     : 534      (Ratio:   0.01%)
  Ternary    : 7732     (Ratio:   0.10%)
  Conflict   : 7167122  (Average Length:  212.4 Ratio:  97.12%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 212864   (Average Length:  124.8 Ratio:   2.88%) 
  Distributed: 71044    (Ratio:   0.99% Average LBD: 3.82) 
  Integrated : 213132   (Ratio: 300.00% Unit: 316 Average Jumps: 4.69)
Backjumps    : 7167122  (Average:  1.09 Max:  37 Sum: 7781985)
  Executed   : 7167120  (Average:  1.09 Max:  37 Sum: 7781974 Ratio: 100.00%)
  Bounded    : 2        (Average:  5.50 Max:   9 Sum:     11 Ratio:   0.00%)

Rules        : 98250   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8960    
Bodies       : 5615    
  Sum        : 68      
  Count      : 14      
Equivalences : 3608     (Atom=Atom: 353 Body=Body: 150 Other: 3105)
Tight        : Yes
Variables    : 4809     (Eliminated:    0 Frozen: 3339)
Constraints  : 97280    (Binary:  96.8% Ternary:   1.5% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) 
}.
