asprin_vL version 1.0
Reading from stdin
-:1223:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1233:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1248:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1329:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1590:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1603:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1780:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1909:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1981:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1985:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1985:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2090:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2116:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2236:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2270:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2292:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1140:1-16: info: no atoms over signature occur in program:
  output/3

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1133:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(73,eq,57) output(57,eq,10) output(10,eq,75) output(62,eq,76) output(76,eq,25) output(25,eq,26) output(51,eq,73) output(73,eq,23) output(23,eq,25) output(5,eq,42) output(22,eq,11) output(11,eq,36) output(22,eq,36) output(73,eq,25) output(51,eq,23) output(76,eq,26) output(23,eq,26) output(62,eq,25) output(57,eq,75) output(73,eq,10) output(51,eq,57) output(51,eq,10) output(73,eq,75) output(51,eq,75) output(73,eq,26) output(51,eq,26) output(62,eq,26) output(51,eq,25)
Optimization: 28 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(51,better,23) output(51,better,10) output(57,better,10) output(73,better,23) output(73,better,10) output(10,worse,75) output(23,worse,25) output(23,worse,26) output(73,eq,57) output(62,eq,76) output(76,eq,25) output(25,eq,26) output(51,eq,73) output(5,eq,42) output(22,eq,11) output(11,eq,36) output(22,eq,36) output(73,eq,25) output(76,eq,26) output(62,eq,25) output(57,eq,75) output(51,eq,57) output(73,eq,75) output(51,eq,75) output(73,eq,26) output(51,eq,26) output(62,eq,26) output(51,eq,25)
Optimization: 23 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(25,better,26) output(51,better,10) output(51,better,26) output(57,better,10) output(76,better,26) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,10) output(73,better,26) output(5,worse,42) output(10,worse,75) output(22,worse,11) output(22,worse,36) output(51,worse,73) output(51,worse,23) output(51,worse,57) output(51,worse,75) output(51,worse,25) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(76,worse,25) output(23,worse,25) output(73,worse,75) output(11,eq,36) output(73,eq,25)
Optimization: 18 6
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(5,better,42) output(11,better,36) output(22,better,36) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(57,better,10) output(73,better,23) output(73,better,10) output(10,worse,75) output(22,worse,11) output(51,worse,26) output(51,worse,25) output(23,worse,25) output(23,worse,26) output(73,worse,25) output(73,worse,26) output(73,eq,57) output(62,eq,76) output(76,eq,25) output(25,eq,26) output(76,eq,26) output(62,eq,25) output(57,eq,75) output(73,eq,75) output(62,eq,26)
Optimization: 17 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,10) output(57,better,10) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(5,worse,42) output(10,worse,75) output(51,worse,73) output(51,worse,23) output(51,worse,57) output(51,worse,75) output(51,worse,26) output(51,worse,25) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(76,worse,25) output(23,worse,25) output(11,eq,36) output(76,eq,26)
Optimization: 16 9
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,10) output(57,better,10) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(5,worse,42) output(10,worse,75) output(51,worse,73) output(51,worse,23) output(51,worse,57) output(51,worse,75) output(51,worse,26) output(51,worse,25) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(76,worse,25) output(23,worse,25) output(76,eq,26)
Optimization: 15 9
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(5,better,42) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,10) output(57,better,10) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(10,worse,75) output(51,worse,73) output(51,worse,23) output(51,worse,57) output(51,worse,75) output(51,worse,26) output(51,worse,25) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(76,worse,25) output(23,worse,25) output(76,eq,26)
Optimization: 14 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrep(3))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(10,better,75) output(22,better,11) output(22,better,36) output(51,better,23) output(51,better,10) output(51,better,75) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(76,better,25) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(5,worse,42) output(11,worse,36) output(25,worse,26) output(23,worse,25) output(23,worse,26) output(73,eq,57) output(62,eq,76) output(51,eq,73) output(76,eq,26) output(51,eq,57) output(73,eq,26) output(51,eq,26) output(62,eq,26)
Optimization: 13 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrep(3))),5) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(5,better,42) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(57,better,10) output(57,better,75) output(73,better,57) output(73,better,23) output(73,better,10) output(73,better,75) output(73,better,26) output(10,worse,75) output(51,worse,73) output(51,worse,26) output(51,worse,25) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(76,worse,25) output(23,worse,25) output(23,worse,26) output(73,worse,25) output(76,eq,26)
Optimization: 12 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(5,better,42) output(22,better,11) output(22,better,36) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(76,better,25) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,25) output(73,better,10) output(73,better,75) output(10,worse,75) output(25,worse,26) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(73,worse,23) output(73,worse,26) output(11,eq,36) output(76,eq,26)
Optimization: 10 13
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(22,better,11) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(5,worse,42) output(10,worse,75) output(11,worse,36) output(22,worse,36) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(57,eq,10) output(76,eq,25)
Optimization: 10 12
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,26) output(51,better,25) output(57,better,10) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,26) output(5,worse,42) output(10,worse,75) output(51,worse,73) output(51,worse,75) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(73,worse,75)
Optimization: 9 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(5,better,42) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,26) output(51,better,25) output(57,better,10) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,26) output(10,worse,75) output(51,worse,73) output(51,worse,75) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,worse,26) output(73,worse,75)
Optimization: 8 13
Progression : [1;8] (Error: 7)
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),3) preference(1,(1,9),1,for(atom(hasPrep(4))),4) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,75) output(62,better,25) output(76,better,25) output(76,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(25,worse,26) output(62,worse,76) output(23,worse,25) output(23,worse,26) output(73,worse,26) output(57,eq,10) output(62,eq,26)
Optimization: 7 13
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrep(3))),3) preference(1,(1,9),1,for(atom(hasPrep(4))),4) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(76,better,25) output(76,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(25,worse,26) output(62,worse,76) output(23,worse,25) output(23,worse,26) output(73,worse,26) output(62,eq,26)
Optimization: 6 13
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(4))),2) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasPrep(3))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(57,worse,10) output(57,worse,75) output(62,worse,76) output(62,worse,25) output(62,eq,26)
Optimization: 5 13
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrep(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasPrep(4))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),4) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(22,worse,11) output(23,worse,25) output(23,worse,26) output(62,eq,76)
Optimization: 4 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasCost(1))),5) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(5,better,42) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(10,worse,75) output(57,worse,75) output(62,worse,76)
Optimization: 3 12
Answer: 19
preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(5,better,42) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(10,worse,75) output(62,eq,76)
Optimization: 2 13
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),2) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrep(3))),2) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,10),1,for(atom(hasCost(1))),1) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(62,eq,76)
Optimization: 1 12
Progression : 1 [ 1;12] (Error: 11)
Progression : 1 [ 2;12] (Error: 5)
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(62,worse,76)
Optimization: 1 11
Answer: 22
preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(62,eq,76)
Optimization: 1 10
Progression : 1 [ 3;10] (Error: 2.33333)
Answer: 23
preference(1,(1,1),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(5,better,42) output(10,better,75) output(11,better,36) output(22,better,11) output(22,better,36) output(25,better,26) output(51,better,73) output(51,better,23) output(51,better,57) output(51,better,10) output(51,better,75) output(51,better,26) output(51,better,25) output(57,better,10) output(57,better,75) output(62,better,25) output(62,better,26) output(76,better,25) output(76,better,26) output(23,better,25) output(23,better,26) output(73,better,57) output(73,better,23) output(73,better,25) output(73,better,10) output(73,better,75) output(73,better,26) output(62,eq,76)
Optimization: 1 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 1 9
Bounds       : 1 [3;9]
Calls        : 1
Time         : 298.324s (Solving: 296.72s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.938s
Threads      : 4        (Winner: 4)

Choices      : 10877237 (Domain: 805733)
Conflicts    : 6829241  (Analyzed: 6829237)
Restarts     : 6081     (Average: 1123.05 Last: 580253)
Model-Level  : 154.5   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 6940694  (Deleted: 6654853)
  Binary     : 400      (Ratio:   0.01%)
  Ternary    : 7100     (Ratio:   0.10%)
  Conflict   : 6829237  (Average Length:  265.9 Ratio:  98.39%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 111457   (Average Length:  185.0 Ratio:   1.61%) 
  Distributed: 37229    (Ratio:   0.55% Average LBD: 3.75) 
  Integrated : 111687   (Ratio: 300.00% Unit: 102 Average Jumps: 14.57)
Backjumps    : 6829237  (Average:  1.50 Max: 510 Sum: 10250010)
  Executed   : 6829230  (Average:  1.50 Max: 510 Sum: 10249873 Ratio: 100.00%)
  Bounded    : 7        (Average: 19.57 Max:  26 Sum:    137 Ratio:   0.00%)

Rules        : 88400   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8364    
Bodies       : 5549    
  Sum        : 56      
  Count      : 14      
Equivalences : 3398     (Atom=Atom: 293 Body=Body: 126 Other: 2979)
Tight        : Yes
Variables    : 4777     (Eliminated:    0 Frozen: 3307)
Constraints  : 87968    (Binary:  96.5% Ternary:   1.7% Other:   1.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(4)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(4)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) 
}.
