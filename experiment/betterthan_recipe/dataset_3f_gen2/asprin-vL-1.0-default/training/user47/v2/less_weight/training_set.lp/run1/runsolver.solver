asprin_vL version 1.0
Reading from stdin
-:1220:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1230:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1245:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1326:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1587:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1600:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1777:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1906:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1978:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1982:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1982:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1988:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2087:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2113:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2233:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2267:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2289:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1137:1-16: info: no atoms over signature occur in program:
  output/3

-:1129:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1130:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(22,eq,28) output(100,eq,19) output(19,eq,73) output(73,eq,86) output(68,eq,50) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(68,eq,46) output(98,eq,46) output(19,eq,86) output(65,eq,86) output(100,eq,73) output(100,eq,86) output(100,eq,52) output(19,eq,54) output(65,eq,54) output(100,eq,54)
Optimization: 25 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(68,better,50) output(68,better,46) output(98,better,50) output(98,better,46) output(100,better,19) output(25,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,86) output(19,worse,54) output(22,eq,28) output(73,eq,86) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(65,eq,52) output(65,eq,86) output(100,eq,73) output(100,eq,86) output(100,eq,52) output(65,eq,54) output(100,eq,54)
Optimization: 20 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(4))),4) preference(1,less(weight)) output(22,better,28) output(65,better,73) output(65,better,52) output(65,better,54) output(98,better,50) output(98,better,46) output(25,worse,67) output(19,worse,52) output(19,worse,86) output(19,worse,54) output(73,worse,86) output(73,worse,52) output(73,worse,54) output(100,worse,19) output(100,worse,63) output(100,worse,73) output(100,worse,86) output(100,worse,52) output(100,worse,54) output(19,eq,73) output(68,eq,50) output(50,eq,46) output(52,eq,54) output(68,eq,46) output(65,eq,86)
Optimization: 19 8
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(4))),4) preference(1,less(weight)) output(22,better,28) output(65,better,73) output(65,better,52) output(65,better,54) output(68,better,50) output(68,better,46) output(98,better,50) output(98,better,46) output(25,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,86) output(19,worse,54) output(73,worse,86) output(100,worse,19) output(100,worse,63) output(100,worse,73) output(100,worse,86) output(100,worse,52) output(100,worse,54) output(50,eq,46) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(65,eq,86)
Optimization: 17 8
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(22,better,28) output(65,better,73) output(65,better,52) output(65,better,54) output(68,better,50) output(68,better,46) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(25,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,86) output(19,worse,54) output(73,worse,86) output(73,worse,52) output(73,worse,54) output(100,worse,63) output(100,worse,86) output(50,eq,46) output(52,eq,54) output(65,eq,86) output(100,eq,52) output(100,eq,54)
Optimization: 15 8
Answer: 6
preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,52) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(22,worse,28) output(65,worse,86) output(73,worse,86) output(100,worse,19) output(100,worse,73) output(100,worse,86) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(52,eq,54) output(100,eq,52) output(100,eq,54)
Optimization: 12 7
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(25,better,67) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,86) output(100,better,52) output(100,better,54) output(22,worse,28) output(19,worse,73) output(65,worse,73) output(100,worse,73) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(52,eq,54)
Optimization: 8 11
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),6) preference(1,(1,11),1,for(atom(hasPrep(4))),6) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,86) output(100,better,52) output(100,better,54) output(19,worse,73) output(65,worse,73) output(100,worse,73) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(52,eq,54)
Optimization: 7 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(4))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,86) output(100,better,52) output(100,better,54) output(22,worse,28) output(52,worse,54) output(100,worse,19) output(50,eq,46) output(100,eq,63) output(100,eq,73)
Optimization: 6 10
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(22,better,28) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(25,worse,67) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(52,eq,54)
Optimization: 5 12
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(22,better,28) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(25,worse,67) output(52,worse,54) output(100,worse,63) output(50,eq,46) output(73,eq,54)
Optimization: 5 11
Progression : [2;5] (Error: 1.5)
Answer: 12
preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrep(4))),2) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(52,worse,54) output(100,worse,19) output(50,eq,46) output(100,eq,63)
Optimization: 4 10
Progression : [3;4] (Error: 0.333333)
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(50,eq,46) output(100,eq,63) output(52,eq,54)
Optimization: 3 11
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(50,eq,46) output(100,eq,63) output(52,eq,54)
Optimization: 3 10
Progression : 3 [ 1;10] (Error: 9)
Progression : 3 [ 2;10] (Error: 4)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasPrep(4))),5) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(50,eq,46) output(100,eq,63) output(52,eq,54)
Optimization: 3 8
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrep(4))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(52,worse,54) output(100,worse,63) output(50,eq,46)
Optimization: 3 7
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(52,worse,54) output(100,worse,63) output(50,eq,46)
Optimization: 3 6
Answer: 18
preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(22,better,28) output(25,better,67) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(52,worse,54) output(50,eq,46) output(100,eq,63)
Optimization: 3 5
Progression : 3 [3;5] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.038 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 3 5
Bounds       : 3 [3;5]
Calls        : 1
Time         : 298.189s (Solving: 296.58s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.697s
Threads      : 4        (Winner: 4)

Choices      : 6037453  (Domain: 313006)
Conflicts    : 5770814  (Analyzed: 5770809)
Restarts     : 4576     (Average: 1261.10 Last: 376220)
Model-Level  : 35.3    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 5879822  (Deleted: 5590106)
  Binary     : 924      (Ratio:   0.02%)
  Ternary    : 2066     (Ratio:   0.04%)
  Conflict   : 5770809  (Average Length:  251.5 Ratio:  98.15%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 109013   (Average Length:  228.6 Ratio:   1.85%) 
  Distributed: 36365    (Ratio:   0.63% Average LBD: 3.85) 
  Integrated : 109095   (Ratio: 300.00% Unit: 53 Average Jumps: 6.96)
Backjumps    : 5770809  (Average:  1.04 Max:  41 Sum: 5999710)
  Executed   : 5770799  (Average:  1.04 Max:  41 Sum: 5999617 Ratio: 100.00%)
  Bounded    : 10       (Average:  9.30 Max:  19 Sum:     93 Ratio:   0.00%)

Rules        : 82352   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8054    
Bodies       : 5511    
  Sum        : 45      
  Count      : 14      
Equivalences : 5831     (Atom=Atom: 271 Body=Body: 125 Other: 5435)
Tight        : Yes
Variables    : 4741     (Eliminated:    0 Frozen: 3271)
Constraints  : 82165    (Binary:  96.3% Ternary:   1.8% Other:   1.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(4)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) 
}.
