asprin_vL version 1.0
Reading from stdin
-:1254:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1264:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1279:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1360:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1621:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1634:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1811:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1940:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2012:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2016:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2016:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2022:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2121:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2147:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2267:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2301:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2323:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1171:1-16: info: no atoms over signature occur in program:
  output/3

-:1163:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1164:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(32,eq,98) output(98,eq,48) output(31,eq,46) output(46,eq,60) output(60,eq,23) output(23,eq,79) output(20,eq,52) output(52,eq,98) output(98,eq,8) output(8,eq,41) output(41,eq,46) output(46,eq,26) output(31,eq,26) output(41,eq,26) output(8,eq,46) output(98,eq,41) output(32,eq,8) output(52,eq,8) output(20,eq,98) output(60,eq,79) output(46,eq,23) output(31,eq,60) output(41,eq,60) output(32,eq,48) output(52,eq,48) output(20,eq,48) output(8,eq,60) output(98,eq,60) output(31,eq,23) output(41,eq,23) output(8,eq,23) output(46,eq,79) output(31,eq,79) output(41,eq,79) output(20,eq,8) output(32,eq,41) output(52,eq,41) output(20,eq,41) output(98,eq,46) output(32,eq,46) output(52,eq,46) output(8,eq,26) output(98,eq,26) output(32,eq,26) output(52,eq,26) output(20,eq,26) output(20,eq,46) output(8,eq,79) output(98,eq,79) output(32,eq,79) output(52,eq,79) output(20,eq,79) output(98,eq,23) output(32,eq,23) output(52,eq,23) output(20,eq,23) output(32,eq,60) output(52,eq,60) output(20,eq,60)
Optimization: 59 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(46,better,26) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,23) output(52,better,60) output(20,better,48) output(20,better,8) output(20,better,26) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,23) output(8,worse,41) output(8,worse,46) output(8,worse,60) output(8,worse,23) output(8,worse,79) output(31,worse,46) output(31,worse,60) output(31,worse,23) output(31,worse,79) output(46,worse,79) output(52,worse,79) output(60,worse,79) output(20,worse,52) output(20,worse,98) output(20,worse,41) output(20,worse,79) output(23,worse,79) output(32,worse,79) output(41,worse,79) output(98,worse,79) output(32,eq,98) output(46,eq,60) output(60,eq,23) output(52,eq,98) output(31,eq,26) output(98,eq,41) output(46,eq,23) output(32,eq,41) output(52,eq,41) output(8,eq,26) output(20,eq,46) output(20,eq,23) output(20,eq,60)
Optimization: 33 7
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(8,better,23) output(8,better,79) output(31,better,23) output(46,better,23) output(46,better,79) output(52,better,23) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,48) output(20,better,79) output(20,better,23) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(41,better,46) output(41,better,26) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,60) output(31,worse,46) output(31,worse,26) output(31,worse,60) output(31,worse,79) output(46,worse,60) output(52,worse,98) output(52,worse,8) output(52,worse,48) output(52,worse,41) output(52,worse,46) output(52,worse,26) output(52,worse,79) output(52,worse,60) output(20,worse,98) output(20,worse,8) output(20,worse,41) output(20,worse,26) output(20,worse,46) output(20,worse,60) output(23,worse,79) output(32,worse,60) output(41,worse,60) output(98,worse,60) output(32,eq,98) output(46,eq,26) output(8,eq,46) output(98,eq,41) output(32,eq,41) output(8,eq,26)
Optimization: 31 8
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(8,better,23) output(8,better,79) output(31,better,23) output(46,better,23) output(46,better,79) output(52,better,48) output(52,better,23) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,48) output(20,better,79) output(20,better,23) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(41,better,46) output(41,better,26) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,60) output(31,worse,46) output(31,worse,26) output(31,worse,60) output(31,worse,79) output(46,worse,60) output(52,worse,98) output(52,worse,8) output(52,worse,41) output(52,worse,46) output(52,worse,26) output(52,worse,79) output(52,worse,60) output(20,worse,98) output(20,worse,8) output(20,worse,41) output(20,worse,26) output(20,worse,46) output(20,worse,60) output(23,worse,79) output(32,worse,60) output(41,worse,60) output(98,worse,60) output(32,eq,98) output(46,eq,26) output(8,eq,46) output(98,eq,41) output(32,eq,41) output(8,eq,26)
Optimization: 30 9
Progression : [ 2;30] (Error: 14)
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(8,better,23) output(8,better,79) output(31,better,23) output(46,better,60) output(46,better,23) output(46,better,79) output(52,better,79) output(52,better,23) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,48) output(20,better,8) output(20,better,79) output(20,better,23) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,46) output(8,worse,60) output(8,worse,26) output(31,worse,46) output(31,worse,26) output(31,worse,60) output(31,worse,79) output(52,worse,98) output(52,worse,8) output(52,worse,48) output(52,worse,41) output(52,worse,46) output(52,worse,26) output(52,worse,60) output(20,worse,98) output(20,worse,41) output(20,worse,26) output(20,worse,46) output(23,worse,79) output(32,eq,98) output(46,eq,26) output(98,eq,41) output(32,eq,41) output(20,eq,60)
Optimization: 25 9
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(8,better,23) output(8,better,79) output(31,better,23) output(46,better,60) output(46,better,23) output(46,better,79) output(52,better,48) output(52,better,79) output(52,better,23) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,48) output(20,better,8) output(20,better,79) output(20,better,23) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,46) output(8,worse,60) output(8,worse,26) output(31,worse,46) output(31,worse,26) output(31,worse,60) output(31,worse,79) output(52,worse,98) output(52,worse,8) output(52,worse,41) output(52,worse,46) output(52,worse,26) output(52,worse,60) output(20,worse,98) output(20,worse,41) output(20,worse,26) output(20,worse,46) output(23,worse,79) output(32,eq,98) output(46,eq,26) output(98,eq,41) output(32,eq,41) output(20,eq,60)
Optimization: 24 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,26) output(31,better,60) output(31,better,23) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,48) output(52,better,26) output(52,better,23) output(52,better,60) output(60,better,23) output(20,better,52) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,46) output(31,worse,46) output(52,worse,98) output(52,worse,8) output(52,worse,41) output(52,worse,46) output(60,worse,79) output(20,worse,98) output(20,worse,41) output(23,worse,79) output(98,worse,41) output(31,eq,79) output(32,eq,41) output(20,eq,46) output(52,eq,79)
Optimization: 16 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(3))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,23) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(46,worse,79) output(52,worse,98) output(52,worse,41) output(60,worse,79) output(20,worse,98) output(20,worse,41) output(23,worse,79) output(32,eq,98) output(20,eq,52) output(46,eq,26) output(98,eq,41) output(32,eq,41)
Optimization: 13 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,48) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,60) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(31,worse,46) output(52,worse,8) output(52,worse,41) output(52,worse,46) output(23,worse,79) output(98,worse,8) output(98,worse,41) output(98,worse,46) output(8,eq,46) output(60,eq,79) output(32,eq,41) output(20,eq,41)
Optimization: 13 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(8,better,60) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,8) output(52,better,48) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(20,better,52) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,46) output(52,worse,98) output(52,worse,41) output(60,worse,23) output(60,worse,79) output(20,worse,98) output(20,worse,41) output(98,worse,41) output(8,eq,23) output(32,eq,41) output(52,eq,46)
Optimization: 12 12
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(8,better,23) output(8,better,26) output(31,better,46) output(31,better,26) output(31,better,23) output(31,better,79) output(46,better,26) output(46,better,23) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,60) output(31,worse,60) output(46,worse,60) output(52,worse,41) output(23,worse,79) output(98,worse,41) output(8,eq,46) output(46,eq,79) output(32,eq,41) output(8,eq,79)
Optimization: 11 13
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(8,better,60) output(8,better,23) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,46) output(8,worse,26) output(8,worse,79) output(60,worse,79) output(23,worse,79) output(32,eq,98) output(31,eq,46) output(98,eq,41) output(32,eq,41)
Optimization: 10 13
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(8,better,60) output(8,better,23) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(8,worse,46) output(8,worse,26) output(8,worse,79) output(60,worse,79) output(23,worse,79) output(98,worse,41) output(32,eq,41) output(98,eq,46)
Optimization: 9 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(52,worse,98) output(52,worse,41) output(20,worse,41) output(98,worse,41) output(46,eq,60) output(52,eq,8) output(32,eq,41)
Optimization: 8 13
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,26) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(31,worse,46) output(31,worse,60) output(32,worse,98) output(23,eq,79) output(8,eq,46) output(32,eq,41)
Optimization: 7 12
Answer: 16
preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(52,worse,98) output(32,worse,98) output(46,eq,60) output(32,eq,41) output(52,eq,41)
Optimization: 6 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),8) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(52,worse,98) output(32,worse,98) output(46,eq,60) output(32,eq,41)
Optimization: 5 12
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(32,eq,98) output(98,eq,41) output(32,eq,41)
Optimization: 4 11
Progression : [3;4] (Error: 0.333333)
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 3 13
Progression : 3 [ 1;13] (Error: 12)
Progression : 3 [ 2;13] (Error: 5.5)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 3 11
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasPrepTime(3))),7) preference(1,(1,12),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,better,23) output(60,better,79) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(8,worse,41) output(98,worse,41) output(32,eq,41)
Optimization: 3 10
Progression : 3 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.062 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 3 10
Bounds       : 3 [3;10]
Calls        : 1
Time         : 298.171s (Solving: 296.36s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.909s
Threads      : 4        (Winner: 4)

Choices      : 10368414 (Domain: 825934)
Conflicts    : 6994873  (Analyzed: 6994868)
Restarts     : 6153     (Average: 1136.82 Last: 258114)
Model-Level  : 135.7   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 7116542  (Deleted: 6863365)
  Binary     : 613      (Ratio:   0.01%)
  Ternary    : 8228     (Ratio:   0.12%)
  Conflict   : 6994867  (Average Length:  178.0 Ratio:  98.29%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 121675   (Average Length:   43.4 Ratio:   1.71%) 
  Distributed: 40908    (Ratio:   0.58% Average LBD: 3.69) 
  Integrated : 122724   (Ratio: 300.00% Unit: 371 Average Jumps: 11.97)
Backjumps    : 6994868  (Average:  1.43 Max: 511 Sum: 9998908)
  Executed   : 6994859  (Average:  1.43 Max: 511 Sum: 9998855 Ratio: 100.00%)
  Bounded    : 9        (Average:  5.89 Max:  27 Sum:     53 Ratio:   0.00%)

Rules        : 135070  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 11378   
Bodies       : 5879    
  Sum        : 107     
  Count      : 14      
Equivalences : 7250     (Atom=Atom: 626 Body=Body: 276 Other: 6348)
Tight        : Yes
Variables    : 4860     (Eliminated:    0 Frozen: 3390)
Constraints  : 131766   (Binary:  97.6% Ternary:   1.2% Other:   1.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(6)) 
}.
