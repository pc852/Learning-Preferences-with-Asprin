asprin_vL version 1.0
Reading from stdin
-:1256:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1266:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1281:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1362:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1623:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1636:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1813:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1942:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2014:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2018:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2018:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2024:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2123:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2149:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2269:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2303:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2325:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1173:1-16: info: no atoms over signature occur in program:
  output/3

-:1165:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(17,eq,86) output(86,eq,94) output(94,eq,78) output(78,eq,62) output(62,eq,25) output(25,eq,75) output(52,eq,17) output(30,eq,60) output(60,eq,17) output(17,eq,94) output(78,eq,53) output(53,eq,76) output(98,eq,71) output(99,eq,98) output(99,eq,71) output(78,eq,76) output(94,eq,53) output(52,eq,94) output(60,eq,94) output(30,eq,17) output(62,eq,75) output(78,eq,25) output(94,eq,62) output(86,eq,78) output(17,eq,78) output(52,eq,86) output(60,eq,86) output(30,eq,86) output(52,eq,78) output(60,eq,78) output(30,eq,78) output(86,eq,62) output(17,eq,62) output(52,eq,62) output(60,eq,62) output(94,eq,25) output(86,eq,25) output(17,eq,25) output(78,eq,75) output(94,eq,75) output(30,eq,94) output(86,eq,53) output(17,eq,53) output(52,eq,53) output(60,eq,53) output(94,eq,76) output(86,eq,76) output(17,eq,76) output(52,eq,76) output(60,eq,76) output(30,eq,76) output(30,eq,53) output(86,eq,75) output(17,eq,75) output(52,eq,75) output(60,eq,75) output(30,eq,75) output(52,eq,25) output(60,eq,25) output(30,eq,25) output(30,eq,62)
Optimization: 61 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,62) output(52,better,53) output(52,better,76) output(78,better,62) output(78,better,53) output(78,better,76) output(17,worse,78) output(17,worse,25) output(17,worse,75) output(60,worse,78) output(60,worse,75) output(60,worse,25) output(62,worse,25) output(62,worse,75) output(86,worse,78) output(86,worse,25) output(86,worse,75) output(94,worse,78) output(94,worse,25) output(94,worse,75) output(98,worse,71) output(99,worse,71) output(17,eq,86) output(86,eq,94) output(25,eq,75) output(60,eq,17) output(17,eq,94) output(53,eq,76) output(99,eq,98) output(94,eq,53) output(60,eq,94) output(78,eq,25) output(94,eq,62) output(60,eq,86) output(52,eq,78) output(30,eq,78) output(86,eq,62) output(17,eq,62) output(60,eq,62) output(78,eq,75) output(86,eq,53) output(17,eq,53) output(60,eq,53) output(94,eq,76) output(86,eq,76) output(17,eq,76) output(60,eq,76) output(52,eq,75) output(30,eq,75) output(52,eq,25) output(30,eq,25)
Optimization: 45 3
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(17,better,25) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,76) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,76) output(52,better,25) output(53,better,76) output(60,better,25) output(62,better,25) output(86,better,25) output(94,better,78) output(94,better,62) output(94,better,25) output(94,better,76) output(78,better,25) output(98,better,71) output(17,worse,94) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(60,worse,17) output(60,worse,94) output(60,worse,86) output(60,worse,78) output(60,worse,62) output(60,worse,53) output(60,worse,76) output(60,worse,75) output(62,worse,75) output(86,worse,94) output(86,worse,53) output(86,worse,75) output(78,worse,53) output(78,worse,75) output(99,worse,98) output(17,eq,86) output(78,eq,62) output(99,eq,71) output(78,eq,76) output(94,eq,53) output(52,eq,94) output(86,eq,78) output(17,eq,78) output(86,eq,62) output(17,eq,62) output(94,eq,75) output(30,eq,94) output(52,eq,53) output(86,eq,76) output(17,eq,76) output(30,eq,53) output(52,eq,75) output(30,eq,75)
Optimization: 37 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(17,better,25) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,76) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,76) output(52,better,25) output(53,better,76) output(60,better,25) output(62,better,25) output(86,better,25) output(94,better,78) output(94,better,62) output(94,better,25) output(94,better,76) output(78,better,25) output(98,better,71) output(99,better,71) output(17,worse,94) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(60,worse,17) output(60,worse,94) output(60,worse,86) output(60,worse,78) output(60,worse,62) output(60,worse,53) output(60,worse,76) output(60,worse,75) output(62,worse,75) output(86,worse,94) output(86,worse,53) output(86,worse,75) output(78,worse,53) output(78,worse,75) output(99,worse,98) output(17,eq,86) output(78,eq,62) output(78,eq,76) output(94,eq,53) output(52,eq,94) output(86,eq,78) output(17,eq,78) output(86,eq,62) output(17,eq,62) output(94,eq,75) output(30,eq,94) output(52,eq,53) output(86,eq,76) output(17,eq,76) output(30,eq,53) output(52,eq,75) output(30,eq,75)
Optimization: 36 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(17,better,25) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,76) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,76) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,76) output(60,better,25) output(62,better,25) output(86,better,25) output(94,better,78) output(94,better,62) output(94,better,25) output(94,better,76) output(78,better,25) output(98,better,71) output(99,better,71) output(17,worse,94) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(62,worse,75) output(86,worse,94) output(86,worse,53) output(86,worse,75) output(78,worse,53) output(78,worse,75) output(99,worse,98) output(17,eq,86) output(78,eq,62) output(30,eq,60) output(78,eq,76) output(94,eq,53) output(52,eq,94) output(60,eq,94) output(86,eq,78) output(17,eq,78) output(86,eq,62) output(17,eq,62) output(94,eq,75) output(30,eq,94) output(52,eq,53) output(60,eq,53) output(86,eq,76) output(17,eq,76) output(30,eq,53) output(52,eq,75) output(60,eq,75) output(30,eq,75)
Optimization: 32 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(17,better,25) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,76) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,76) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,76) output(60,better,25) output(62,better,25) output(86,better,25) output(94,better,78) output(94,better,62) output(94,better,25) output(94,better,76) output(78,better,25) output(98,better,71) output(99,better,71) output(17,worse,94) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(60,worse,94) output(60,worse,53) output(60,worse,75) output(62,worse,75) output(86,worse,94) output(86,worse,53) output(86,worse,75) output(78,worse,53) output(78,worse,75) output(99,worse,98) output(17,eq,86) output(78,eq,62) output(78,eq,76) output(94,eq,53) output(52,eq,94) output(86,eq,78) output(17,eq,78) output(86,eq,62) output(17,eq,62) output(94,eq,75) output(30,eq,94) output(52,eq,53) output(86,eq,76) output(17,eq,76) output(30,eq,53) output(52,eq,75) output(30,eq,75)
Optimization: 31 13
Progression : [ 2;31] (Error: 14.5)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(17,better,25) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,76) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,76) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,76) output(60,better,25) output(62,better,25) output(86,better,25) output(94,better,78) output(94,better,62) output(94,better,25) output(94,better,76) output(78,better,62) output(78,better,76) output(78,better,25) output(98,better,71) output(99,better,71) output(17,worse,94) output(17,worse,78) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(62,worse,75) output(86,worse,94) output(86,worse,78) output(86,worse,53) output(86,worse,75) output(78,worse,53) output(78,worse,75) output(99,worse,98) output(17,eq,86) output(30,eq,60) output(94,eq,53) output(52,eq,94) output(60,eq,94) output(86,eq,62) output(17,eq,62) output(94,eq,75) output(30,eq,94) output(52,eq,53) output(60,eq,53) output(86,eq,76) output(17,eq,76) output(30,eq,53) output(52,eq,75) output(60,eq,75) output(30,eq,75)
Optimization: 30 11
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(30,better,53) output(30,better,25) output(30,better,62) output(52,better,62) output(52,better,53) output(52,better,25) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,25) output(86,better,62) output(86,better,25) output(86,better,53) output(94,better,53) output(94,better,62) output(94,better,25) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(99,better,98) output(99,better,71) output(17,worse,78) output(17,worse,75) output(25,worse,75) output(30,worse,60) output(30,worse,17) output(30,worse,86) output(30,worse,78) output(30,worse,94) output(30,worse,76) output(30,worse,75) output(52,worse,17) output(52,worse,94) output(52,worse,86) output(52,worse,78) output(52,worse,76) output(52,worse,75) output(53,worse,76) output(60,worse,78) output(62,worse,25) output(62,worse,75) output(86,worse,78) output(86,worse,75) output(94,worse,78) output(94,worse,75) output(98,worse,71) output(86,eq,94) output(94,eq,76) output(86,eq,76) output(60,eq,75)
Optimization: 29 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(17,better,62) output(17,better,25) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,62) output(60,better,25) output(86,better,62) output(86,better,25) output(94,better,62) output(94,better,25) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(98,better,71) output(99,better,98) output(99,better,71) output(17,worse,78) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(30,worse,78) output(52,worse,78) output(60,worse,78) output(60,worse,53) output(60,worse,75) output(62,worse,25) output(62,worse,75) output(86,worse,78) output(86,worse,53) output(86,worse,75) output(94,worse,78) output(94,worse,53) output(94,worse,75) output(17,eq,86) output(86,eq,94) output(60,eq,17) output(17,eq,94) output(60,eq,94) output(60,eq,86) output(94,eq,76) output(86,eq,76) output(17,eq,76) output(60,eq,76)
Optimization: 27 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(17,better,62) output(17,better,25) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,62) output(60,better,76) output(60,better,25) output(86,better,62) output(86,better,25) output(94,better,62) output(94,better,25) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(98,better,71) output(99,better,98) output(99,better,71) output(17,worse,78) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(30,worse,78) output(52,worse,78) output(60,worse,78) output(62,worse,25) output(62,worse,75) output(86,worse,78) output(86,worse,53) output(86,worse,75) output(94,worse,78) output(94,worse,53) output(94,worse,75) output(17,eq,86) output(86,eq,94) output(17,eq,94) output(60,eq,53) output(94,eq,76) output(86,eq,76) output(17,eq,76) output(60,eq,75)
Optimization: 23 12
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(17,better,62) output(17,better,25) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,25) output(86,better,62) output(86,better,25) output(94,better,62) output(94,better,25) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(98,better,71) output(99,better,98) output(99,better,71) output(17,worse,86) output(17,worse,94) output(17,worse,78) output(17,worse,53) output(17,worse,76) output(17,worse,75) output(25,worse,75) output(30,worse,78) output(52,worse,78) output(60,worse,78) output(62,worse,25) output(62,worse,75) output(86,worse,78) output(86,worse,53) output(86,worse,75) output(94,worse,78) output(94,worse,53) output(94,worse,75) output(86,eq,94) output(94,eq,76) output(86,eq,76) output(60,eq,75)
Optimization: 22 11
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,62) output(17,better,25) output(17,better,76) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,62) output(60,better,76) output(60,better,25) output(86,better,62) output(86,better,25) output(94,better,62) output(94,better,25) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(98,better,71) output(99,better,98) output(99,better,71) output(17,worse,78) output(17,worse,53) output(17,worse,75) output(25,worse,75) output(30,worse,78) output(52,worse,78) output(60,worse,78) output(60,worse,53) output(62,worse,25) output(62,worse,75) output(86,worse,78) output(86,worse,53) output(86,worse,75) output(94,worse,78) output(94,worse,53) output(94,worse,75) output(86,eq,94) output(94,eq,76) output(86,eq,76) output(60,eq,75)
Optimization: 20 11
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(17,better,86) output(17,better,78) output(17,better,62) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(60,better,17) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,75) output(86,better,78) output(86,better,53) output(86,better,75) output(94,better,78) output(94,better,53) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(99,better,98) output(17,worse,94) output(17,worse,25) output(53,worse,76) output(62,worse,25) output(86,worse,94) output(86,worse,25) output(78,worse,62) output(78,worse,53) output(78,worse,76) output(78,worse,25) output(78,worse,75) output(98,worse,71) output(99,worse,71) output(60,eq,94) output(86,eq,62) output(86,eq,76)
Optimization: 16 11
Progression : [ 3;16] (Error: 4.33333)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(60,better,94) output(60,better,86) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,25) output(62,better,75) output(86,better,25) output(86,better,75) output(94,better,25) output(94,better,75) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(98,better,71) output(99,better,98) output(99,better,71) output(60,worse,17) output(60,worse,78) output(86,worse,78) output(94,worse,78) output(86,eq,94) output(52,eq,17) output(53,eq,76) output(94,eq,53) output(30,eq,17) output(94,eq,62) output(86,eq,62) output(86,eq,53) output(94,eq,76) output(86,eq,76)
Optimization: 14 10
Answer: 15
preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(17,better,86) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,86) output(30,better,78) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(60,better,17) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,25) output(62,better,75) output(86,better,62) output(86,better,25) output(86,better,53) output(86,better,75) output(94,better,78) output(94,better,53) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(78,better,62) output(78,better,53) output(78,better,25) output(78,better,75) output(99,better,98) output(99,better,71) output(17,worse,94) output(30,worse,60) output(30,worse,94) output(52,worse,94) output(53,worse,76) output(86,worse,94) output(98,worse,71) output(52,eq,17) output(78,eq,76) output(60,eq,94) output(30,eq,17) output(86,eq,78) output(86,eq,76)
Optimization: 13 8
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,75) output(86,better,62) output(86,better,25) output(86,better,75) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(78,better,62) output(78,better,76) output(78,better,25) output(78,better,75) output(98,better,71) output(99,better,98) output(99,better,71) output(62,worse,25) output(86,worse,94) output(86,worse,78) output(86,worse,53) output(94,eq,78) output(78,eq,53) output(94,eq,53) output(86,eq,76)
Optimization: 8 13
Progression : [4;8] (Error: 1)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),8) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,25) output(62,better,75) output(86,better,25) output(86,better,53) output(86,better,75) output(94,better,78) output(94,better,53) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(99,better,98) output(53,worse,76) output(86,worse,94) output(86,worse,78) output(98,worse,71) output(99,worse,71) output(86,eq,62) output(86,eq,76)
Optimization: 7 12
Progression : [5;7] (Error: 0.4)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,25) output(62,better,75) output(86,better,62) output(86,better,25) output(86,better,75) output(94,better,53) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(99,better,98) output(99,better,71) output(86,worse,94) output(86,worse,78) output(86,worse,53) output(98,worse,71) output(94,eq,78) output(86,eq,76)
Optimization: 6 12
Progression : [6;6] (Error: 0)
Progression : 6 [ 1;12] (Error: 11)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(17,better,86) output(17,better,94) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(53,better,76) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,25) output(62,better,75) output(86,better,62) output(86,better,25) output(86,better,75) output(94,better,53) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(99,better,98) output(99,better,71) output(86,worse,94) output(86,worse,78) output(86,worse,53) output(98,worse,71) output(94,eq,78) output(86,eq,76)
Optimization: 6 11
Progression : 6 [ 2;11] (Error: 4.5)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(17,better,86) output(17,better,78) output(17,better,62) output(17,better,25) output(17,better,53) output(17,better,76) output(17,better,75) output(25,better,75) output(30,better,60) output(30,better,17) output(30,better,86) output(30,better,78) output(30,better,94) output(30,better,76) output(30,better,53) output(30,better,75) output(30,better,25) output(30,better,62) output(52,better,17) output(52,better,94) output(52,better,86) output(52,better,78) output(52,better,62) output(52,better,53) output(52,better,76) output(52,better,75) output(52,better,25) output(60,better,17) output(60,better,94) output(60,better,86) output(60,better,78) output(60,better,62) output(60,better,53) output(60,better,76) output(60,better,75) output(60,better,25) output(62,better,25) output(62,better,75) output(86,better,62) output(86,better,25) output(86,better,53) output(86,better,75) output(94,better,78) output(94,better,53) output(94,better,62) output(94,better,25) output(94,better,75) output(94,better,76) output(78,better,62) output(78,better,53) output(78,better,76) output(78,better,25) output(78,better,75) output(99,better,98) output(99,better,71) output(53,worse,76) output(86,worse,94) output(86,worse,78) output(98,worse,71) output(17,eq,94) output(86,eq,76)
Optimization: 6 10
Progression : 6 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.100 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 6 10
Bounds       : 6 [3;10]
Calls        : 1
Time         : 297.328s (Solving: 295.54s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.297s
Threads      : 4        (Winner: 4)

Choices      : 9291351  (Domain: 630073)
Conflicts    : 7303689  (Analyzed: 7303681)
Restarts     : 6825     (Average: 1070.14 Last: 476853)
Model-Level  : 34.6    
Problems     : 15       (Average Length: 0.27 Splits: 0)
Lemmas       : 7526838  (Deleted: 7218451)
  Binary     : 792      (Ratio:   0.01%)
  Ternary    : 14844    (Ratio:   0.20%)
  Conflict   : 7303680  (Average Length:  149.9 Ratio:  97.04%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 223158   (Average Length:   35.0 Ratio:   2.96%) 
  Distributed: 74694    (Ratio:   1.02% Average LBD: 3.69) 
  Integrated : 224082   (Ratio: 300.00% Unit: 455 Average Jumps: 6.01)
Backjumps    : 7303681  (Average:  1.23 Max: 493 Sum: 9008277)
  Executed   : 7303670  (Average:  1.23 Max: 493 Sum: 9008143 Ratio: 100.00%)
  Bounded    : 11       (Average: 12.18 Max:  37 Sum:    134 Ratio:   0.00%)

Rules        : 138540  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 11582   
Bodies       : 5887    
  Sum        : 97      
  Count      : 14      
Equivalences : 7313     (Atom=Atom: 681 Body=Body: 319 Other: 6313)
Tight        : Yes
Variables    : 4855     (Eliminated:    0 Frozen: 3385)
Constraints  : 135027   (Binary:  97.6% Ternary:   1.1% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) 
}.
