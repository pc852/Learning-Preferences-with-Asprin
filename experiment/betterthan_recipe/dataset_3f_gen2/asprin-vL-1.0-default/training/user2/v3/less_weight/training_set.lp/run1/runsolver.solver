asprin_vL version 1.0
Reading from stdin
-:1249:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1259:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1274:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1355:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1616:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1629:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1806:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1935:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2007:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2011:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2011:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2017:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2116:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2142:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2262:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2296:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2318:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1166:1-16: info: no atoms over signature occur in program:
  output/3

-:1158:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1159:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,18) output(23,eq,64) output(64,eq,47) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(25,eq,69) output(69,eq,24) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(23,eq,72) output(52,eq,72) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(47,eq,67) output(69,eq,67) output(25,eq,24) output(24,eq,70) output(47,eq,49) output(69,eq,49) output(64,eq,24) output(23,eq,47) output(42,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(23,eq,24) output(42,eq,24) output(52,eq,24) output(25,eq,49) output(64,eq,49) output(23,eq,49) output(42,eq,49) output(47,eq,70) output(69,eq,70) output(25,eq,70) output(64,eq,70) output(25,eq,67) output(64,eq,67) output(23,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,67) output(23,eq,70) output(42,eq,70) output(52,eq,70) output(52,eq,49)
Optimization: 54 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(24,better,49) output(24,better,67) output(24,better,70) output(25,worse,24) output(52,worse,24) output(64,worse,24) output(69,worse,24) output(23,worse,24) output(42,worse,24) output(47,worse,24) output(50,eq,18) output(23,eq,64) output(64,eq,47) output(49,eq,70) output(25,eq,69) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(23,eq,72) output(52,eq,72) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(47,eq,67) output(69,eq,67) output(47,eq,49) output(69,eq,49) output(23,eq,47) output(42,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(25,eq,49) output(64,eq,49) output(23,eq,49) output(42,eq,49) output(47,eq,70) output(69,eq,70) output(25,eq,70) output(64,eq,70) output(25,eq,67) output(64,eq,67) output(23,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,67) output(23,eq,70) output(42,eq,70) output(52,eq,70) output(52,eq,49)
Optimization: 51 4
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(25,better,69) output(23,better,64) output(23,better,52) output(52,worse,23) output(52,worse,72) output(52,worse,47) output(52,worse,24) output(52,worse,67) output(52,worse,70) output(52,worse,49) output(64,worse,47) output(64,worse,23) output(64,worse,24) output(64,worse,49) output(64,worse,70) output(64,worse,67) output(64,worse,72) output(69,worse,24) output(69,worse,67) output(69,worse,49) output(69,worse,70) output(42,worse,47) output(42,worse,24) output(42,worse,49) output(42,worse,67) output(42,worse,23) output(42,worse,72) output(42,worse,70) output(50,eq,18) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(23,eq,72) output(42,eq,52) output(47,eq,67) output(25,eq,24) output(24,eq,70) output(47,eq,49) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(25,eq,49) output(23,eq,49) output(47,eq,70) output(25,eq,70) output(25,eq,67) output(23,eq,67) output(52,eq,52) output(23,eq,23) output(23,eq,70)
Optimization: 51 2
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),5) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(25,better,24) output(52,better,23) output(52,better,47) output(52,better,24) output(64,better,47) output(64,better,23) output(64,better,24) output(69,better,24) output(42,better,47) output(42,better,24) output(42,better,23) output(47,better,24) output(25,worse,70) output(50,worse,18) output(52,worse,70) output(64,worse,70) output(69,worse,70) output(23,worse,64) output(23,worse,72) output(23,worse,52) output(23,worse,47) output(23,worse,49) output(23,worse,67) output(23,worse,70) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(42,worse,70) output(47,worse,67) output(47,worse,49) output(47,worse,70) output(49,worse,70) output(25,eq,69) output(42,eq,64) output(64,eq,52) output(52,eq,72) output(42,eq,52) output(69,eq,67) output(69,eq,49) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(25,eq,49) output(64,eq,49) output(42,eq,49) output(25,eq,67) output(64,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,67) output(52,eq,49)
Optimization: 42 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(1))),5) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(3))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(52,better,23) output(52,better,47) output(52,better,24) output(64,better,47) output(64,better,23) output(64,better,24) output(69,better,24) output(42,better,47) output(42,better,24) output(42,better,23) output(47,better,24) output(25,worse,70) output(50,worse,18) output(52,worse,70) output(64,worse,70) output(69,worse,67) output(69,worse,49) output(69,worse,70) output(23,worse,64) output(23,worse,72) output(23,worse,52) output(23,worse,47) output(23,worse,49) output(23,worse,67) output(23,worse,70) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(42,worse,70) output(47,worse,67) output(47,worse,49) output(47,worse,70) output(49,worse,70) output(42,eq,64) output(64,eq,52) output(52,eq,72) output(42,eq,52) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(25,eq,49) output(64,eq,49) output(42,eq,49) output(25,eq,67) output(64,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,67) output(52,eq,49)
Optimization: 41 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(25,better,69) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,67) output(52,better,70) output(64,better,70) output(64,better,67) output(69,better,67) output(69,better,70) output(23,better,67) output(23,better,70) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,67) output(47,better,70) output(49,better,70) output(52,worse,72) output(52,worse,24) output(52,worse,49) output(64,worse,24) output(64,worse,49) output(64,worse,72) output(69,worse,24) output(69,worse,49) output(23,worse,72) output(23,worse,24) output(23,worse,49) output(47,worse,24) output(47,worse,49) output(23,eq,64) output(64,eq,47) output(24,eq,49) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(25,eq,24) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(25,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 28 13
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,72) output(52,better,67) output(52,better,70) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,67) output(69,better,70) output(23,better,72) output(23,better,67) output(23,better,70) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,67) output(47,better,70) output(49,better,70) output(52,worse,49) output(64,worse,49) output(69,worse,24) output(69,worse,49) output(23,worse,49) output(24,worse,49) output(47,worse,49) output(23,eq,64) output(64,eq,47) output(47,eq,24) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(64,eq,24) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(23,eq,24) output(52,eq,24) output(25,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 24 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(3))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,9),1,for(atom(hasPrep(4))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(50,better,18) output(52,better,47) output(52,better,24) output(52,better,70) output(64,better,47) output(64,better,52) output(64,better,24) output(64,better,49) output(64,better,70) output(69,better,24) output(69,better,70) output(23,better,64) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,70) output(47,better,24) output(49,better,70) output(52,worse,23) output(52,worse,72) output(52,worse,64) output(52,worse,67) output(64,worse,23) output(69,worse,67) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(42,worse,23) output(47,worse,67) output(47,worse,49) output(42,eq,64) output(69,eq,49) output(64,eq,64) output(47,eq,70) output(25,eq,67) output(64,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,49)
Optimization: 24 13
Progression : [ 4;24] (Error: 5)
Answer: 9
preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,23) output(52,better,64) output(52,better,47) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,70) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,64) output(23,better,47) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,70) output(47,better,70) output(49,better,70) output(25,worse,24) output(52,worse,72) output(52,worse,24) output(64,worse,47) output(64,worse,52) output(64,worse,23) output(64,worse,24) output(64,worse,49) output(64,worse,67) output(64,worse,72) output(69,worse,24) output(23,worse,72) output(23,worse,52) output(23,worse,24) output(42,worse,24) output(42,worse,72) output(47,worse,24) output(25,eq,69) output(47,eq,67) output(47,eq,49) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 23 8
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,23) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,70) output(64,better,67) output(69,better,24) output(69,better,67) output(69,better,70) output(23,better,47) output(23,better,67) output(23,better,70) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,67) output(42,better,23) output(42,better,70) output(49,better,70) output(52,worse,72) output(52,worse,49) output(64,worse,49) output(64,worse,72) output(69,worse,49) output(23,worse,64) output(23,worse,72) output(23,worse,52) output(23,worse,49) output(24,worse,49) output(47,worse,24) output(47,worse,67) output(47,worse,49) output(47,worse,70) output(64,eq,52) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(42,eq,49) output(52,eq,52) output(23,eq,23) output(42,eq,72)
Optimization: 22 11
Answer: 11
preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(25,better,24) output(25,better,49) output(25,better,70) output(50,better,18) output(52,better,23) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(69,better,24) output(69,better,49) output(69,better,70) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,70) output(24,better,49) output(24,better,70) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,23) output(42,better,70) output(47,better,24) output(47,better,49) output(47,better,70) output(49,better,70) output(25,worse,69) output(25,worse,67) output(52,worse,72) output(52,worse,67) output(64,worse,52) output(64,worse,67) output(64,worse,72) output(69,worse,67) output(23,worse,64) output(23,worse,72) output(23,worse,52) output(23,worse,67) output(24,worse,67) output(42,worse,52) output(42,worse,67) output(42,worse,72) output(47,worse,67) output(42,eq,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 21 10
Answer: 12
preference(1,(1,2),1,for(atom(hasPrep(7))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,4),1,for(atom(hasPrep(6))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,49) output(25,worse,69) output(25,worse,24) output(25,worse,49) output(25,worse,70) output(25,worse,67) output(50,worse,18) output(47,worse,24) output(47,worse,67) output(49,worse,70) output(23,eq,64) output(24,eq,67) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(52,eq,64) output(64,eq,64) output(47,eq,70) output(52,eq,52) output(23,eq,23)
Optimization: 20 12
Answer: 13
preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(25,better,24) output(25,better,70) output(25,better,67) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,67) output(23,better,70) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(25,worse,69) output(25,worse,49) output(50,worse,18) output(24,worse,49) output(47,worse,49) output(23,eq,64) output(24,eq,67) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(69,eq,49) output(52,eq,64) output(64,eq,64) output(64,eq,49) output(23,eq,49) output(52,eq,52) output(23,eq,23) output(52,eq,49)
Optimization: 19 11
Answer: 14
preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(64,better,47) output(64,better,52) output(64,better,24) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,70) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,67) output(23,better,70) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(25,worse,49) output(52,worse,23) output(52,worse,64) output(52,worse,49) output(64,worse,49) output(69,worse,49) output(23,worse,49) output(24,worse,49) output(47,worse,49) output(23,eq,64) output(64,eq,23) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 14 5
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,23) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(25,worse,69) output(23,worse,64) output(23,worse,52) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(64,eq,52) output(23,eq,72) output(47,eq,49) output(52,eq,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 13 8
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(50,worse,18) output(23,eq,64) output(49,eq,70) output(24,eq,67) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(52,eq,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 12 13
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,52) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(52,worse,23) output(52,worse,64) output(52,worse,47) output(23,eq,64) output(49,eq,70) output(24,eq,67) output(52,eq,72) output(64,eq,23) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 11 11
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(64,worse,52) output(23,worse,64) output(23,worse,52) output(47,eq,24) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 7 14
Progression : [5;7] (Error: 0.4)
Progression : [6;7] (Error: 0.166667)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(0))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(3))),3) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,52) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,worse,23) output(52,worse,64) output(23,worse,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 11
Progression : 6 [ 1;11] (Error: 10)
Progression : 6 [ 2;11] (Error: 4.5)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,64) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,worse,23) output(64,worse,52) output(64,worse,23) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 10
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrep(3))),2) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,52) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,worse,23) output(52,worse,64) output(23,worse,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 8
Progression : 6 [3;8] (Error: 1.66667)
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(50,better,18) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,better,47) output(64,better,52) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,64) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(24,better,49) output(24,better,67) output(24,better,70) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,worse,23) output(52,worse,64) output(64,worse,23) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.075 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 6 7
Bounds       : 6 [3;7]
Calls        : 1
Time         : 297.536s (Solving: 295.74s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.269s
Threads      : 4        (Winner: 4)

Choices      : 9010326  (Domain: 804213)
Conflicts    : 7234859  (Analyzed: 7234853)
Restarts     : 6180     (Average: 1170.69 Last: 42890)
Model-Level  : 53.0    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7338563  (Deleted: 7064252)
  Binary     : 818      (Ratio:   0.01%)
  Ternary    : 9307     (Ratio:   0.13%)
  Conflict   : 7234849  (Average Length:  212.0 Ratio:  98.59%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 103714   (Average Length:   33.3 Ratio:   1.41%) 
  Distributed: 34697    (Ratio:   0.48% Average LBD: 3.67) 
  Integrated : 104091   (Ratio: 300.00% Unit: 184 Average Jumps: 4.68)
Backjumps    : 7234853  (Average:  1.21 Max: 468 Sum: 8745699)
  Executed   : 7234847  (Average:  1.21 Max: 468 Sum: 8745577 Ratio: 100.00%)
  Bounded    : 6        (Average: 20.33 Max:  39 Sum:    122 Ratio:   0.00%)

Rules        : 127677  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10896   
Bodies       : 5832    
  Sum        : 105     
  Count      : 14      
Equivalences : 7037     (Atom=Atom: 547 Body=Body: 233 Other: 6257)
Tight        : Yes
Variables    : 4859     (Eliminated:    0 Frozen: 3389)
Constraints  : 124857   (Binary:  97.4% Ternary:   1.2% Other:   1.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(3)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) 
}.
