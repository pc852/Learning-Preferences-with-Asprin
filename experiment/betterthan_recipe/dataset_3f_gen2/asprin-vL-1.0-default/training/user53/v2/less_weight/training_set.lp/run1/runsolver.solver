asprin_vL version 1.0
Reading from stdin
-:1219:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1229:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1244:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1325:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1586:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1599:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1776:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1905:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1977:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1981:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1981:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1987:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2086:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2112:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2232:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2266:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2288:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1136:1-16: info: no atoms over signature occur in program:
  output/3

-:1128:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1129:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(65,eq,10) output(10,eq,16) output(22,eq,84) output(84,eq,79) output(58,eq,92) output(92,eq,77) output(100,eq,24) output(24,eq,92) output(92,eq,38) output(51,eq,64) output(75,eq,52) output(52,eq,84) output(75,eq,84) output(58,eq,38) output(24,eq,38) output(100,eq,92) output(58,eq,77) output(24,eq,77) output(22,eq,79) output(52,eq,79) output(65,eq,16) output(75,eq,79) output(100,eq,77) output(100,eq,38)
Optimization: 24 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(22,better,84) output(52,better,84) output(10,worse,16) output(51,worse,64) output(84,worse,79) output(24,worse,92) output(24,worse,38) output(24,worse,77) output(65,worse,16) output(75,worse,52) output(75,worse,79) output(100,worse,24) output(100,worse,92) output(100,worse,77) output(100,worse,38) output(65,eq,10) output(58,eq,92) output(92,eq,77) output(92,eq,38) output(75,eq,84) output(58,eq,38) output(58,eq,77) output(22,eq,79) output(52,eq,79)
Optimization: 22 7
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(22,better,84) output(22,better,79) output(24,better,92) output(51,worse,64) output(58,worse,38) output(58,worse,77) output(92,worse,77) output(92,worse,38) output(100,worse,24) output(100,worse,77) output(100,worse,38) output(65,eq,10) output(10,eq,16) output(84,eq,79) output(58,eq,92) output(75,eq,52) output(52,eq,84) output(75,eq,84) output(24,eq,38) output(100,eq,92) output(24,eq,77) output(52,eq,79) output(65,eq,16) output(75,eq,79)
Optimization: 21 10
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,9),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(24,better,92) output(24,better,38) output(24,better,77) output(100,worse,24) output(65,eq,10) output(10,eq,16) output(22,eq,84) output(84,eq,79) output(58,eq,92) output(92,eq,77) output(92,eq,38) output(51,eq,64) output(75,eq,52) output(52,eq,84) output(75,eq,84) output(58,eq,38) output(100,eq,92) output(58,eq,77) output(22,eq,79) output(52,eq,79) output(65,eq,16) output(75,eq,79) output(100,eq,77) output(100,eq,38)
Optimization: 21 9
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,16) output(52,better,84) output(65,better,10) output(65,better,16) output(75,better,84) output(100,better,24) output(22,worse,79) output(51,worse,64) output(84,worse,79) output(24,worse,92) output(24,worse,38) output(24,worse,77) output(22,eq,84) output(58,eq,92) output(92,eq,77) output(92,eq,38) output(75,eq,52) output(58,eq,38) output(100,eq,92) output(58,eq,77) output(52,eq,79) output(75,eq,79) output(100,eq,77) output(100,eq,38)
Optimization: 18 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,16) output(51,worse,64) output(100,worse,24) output(65,eq,10) output(84,eq,79) output(58,eq,92) output(92,eq,77) output(92,eq,38) output(75,eq,52) output(52,eq,84) output(75,eq,84) output(58,eq,38) output(100,eq,92) output(58,eq,77) output(52,eq,79) output(75,eq,79) output(100,eq,77) output(100,eq,38)
Optimization: 17 12
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasPrep(3))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(22,better,84) output(52,better,84) output(58,better,38) output(58,better,77) output(92,better,77) output(92,better,38) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,84) output(10,worse,16) output(51,worse,64) output(84,worse,79) output(100,worse,24) output(100,worse,92) output(100,worse,77) output(100,worse,38) output(58,eq,92) output(24,eq,92) output(75,eq,52) output(22,eq,79) output(52,eq,79) output(75,eq,79)
Optimization: 13 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,4),1,for(atom(hasPrep(4))),2) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(58,better,38) output(58,better,77) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,16) output(100,better,77) output(100,better,38) output(51,worse,64) output(100,worse,24) output(100,worse,92) output(65,eq,10) output(84,eq,79) output(58,eq,92) output(75,eq,52) output(52,eq,84) output(75,eq,84) output(52,eq,79) output(75,eq,79)
Optimization: 11 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrep(3))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(22,better,84) output(52,better,84) output(58,better,38) output(58,better,77) output(92,better,77) output(92,better,38) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,84) output(100,better,24) output(100,better,77) output(100,better,38) output(10,worse,16) output(22,worse,79) output(51,worse,64) output(84,worse,79) output(24,worse,92) output(58,eq,92) output(75,eq,52) output(100,eq,92) output(52,eq,79) output(75,eq,79)
Optimization: 10 14
Answer: 10
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(10,better,16) output(22,better,79) output(51,better,64) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(52,worse,84) output(92,worse,77) output(92,worse,38) output(100,worse,24) output(100,worse,77) output(100,worse,38) output(22,eq,84) output(100,eq,92)
Optimization: 8 7
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(10,better,16) output(22,better,79) output(51,better,64) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,92) output(100,better,77) output(100,better,38) output(100,worse,24) output(22,eq,84) output(52,eq,84)
Optimization: 3 11
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(10,better,16) output(22,better,79) output(51,better,64) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38) output(52,worse,84) output(22,eq,84)
Optimization: 2 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,92) output(100,better,77) output(100,better,38) output(84,worse,79) output(100,worse,24)
Optimization: 2 9
Answer: 14
preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38) output(92,eq,77)
Optimization: 1 8
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 14
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(1))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 13
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 9
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 8
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 7
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 6
Answer: 22
preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(10,better,16) output(22,better,84) output(22,better,79) output(51,better,64) output(52,better,84) output(52,better,79) output(58,better,92) output(58,better,38) output(58,better,77) output(84,better,79) output(92,better,77) output(92,better,38) output(24,better,92) output(24,better,38) output(24,better,77) output(65,better,10) output(65,better,16) output(75,better,52) output(75,better,84) output(75,better,79) output(100,better,24) output(100,better,92) output(100,better,77) output(100,better,38)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Progression : 0 [3;5] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.060 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 297.259s (Solving: 295.83s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.266s
Threads      : 4        (Winner: 4)

Choices      : 7036564  (Domain: 397704)
Conflicts    : 6733012  (Analyzed: 6733009)
Restarts     : 4589     (Average: 1467.21 Last: 528186)
Model-Level  : 29.3    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 6856662  (Deleted: 6522541)
  Binary     : 408      (Ratio:   0.01%)
  Ternary    : 1222     (Ratio:   0.02%)
  Conflict   : 6733009  (Average Length:  290.4 Ratio:  98.20%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 123653   (Average Length:  271.9 Ratio:   1.80%) 
  Distributed: 41480    (Ratio:   0.62% Average LBD: 3.86) 
  Integrated : 124440   (Ratio: 300.00% Unit: 57 Average Jumps: 5.00)
Backjumps    : 6733009  (Average:  1.04 Max:  41 Sum: 6995732)
  Executed   : 6733008  (Average:  1.04 Max:  41 Sum: 6995721 Ratio: 100.00%)
  Bounded    : 1        (Average: 11.00 Max:  11 Sum:     11 Ratio:   0.00%)

Rules        : 82356   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 7972    
Bodies       : 5505    
  Sum        : 48      
  Count      : 14      
Equivalences : 3258     (Atom=Atom: 253 Body=Body: 110 Other: 2895)
Tight        : Yes
Variables    : 4761     (Eliminated:    0 Frozen: 3291)
Constraints  : 82288    (Binary:  96.2% Ternary:   1.8% Other:   1.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) 
}.
