asprin_vL version 1.0
Reading from stdin
-:1216:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1226:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1241:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1322:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1583:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1596:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1773:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1902:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1974:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1978:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1978:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2083:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2109:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2229:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2263:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2285:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1133:1-16: info: no atoms over signature occur in program:
  output/3

-:1125:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1126:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(71,eq,76) output(76,eq,8) output(91,eq,51) output(51,eq,67) output(67,eq,57) output(57,eq,99) output(76,eq,53) output(53,eq,60) output(94,eq,98) output(17,eq,99) output(78,eq,30) output(76,eq,60) output(71,eq,53) output(67,eq,99) output(51,eq,57) output(91,eq,67) output(71,eq,8) output(91,eq,57) output(51,eq,99) output(91,eq,99) output(71,eq,60)
Optimization: 21 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(17,better,99) output(67,better,57) output(67,better,99) output(94,better,98) output(51,worse,67) output(51,worse,57) output(51,worse,99) output(71,worse,76) output(71,worse,53) output(71,worse,8) output(71,worse,60) output(91,worse,51) output(91,worse,67) output(91,worse,57) output(91,worse,99) output(76,eq,8) output(57,eq,99) output(76,eq,53) output(53,eq,60) output(78,eq,30) output(76,eq,60)
Optimization: 17 10
Answer: 3
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(17,better,99) output(51,better,57) output(51,better,99) output(67,better,57) output(67,better,99) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(91,worse,51) output(91,worse,67) output(71,eq,76) output(51,eq,67) output(57,eq,99) output(53,eq,60) output(94,eq,98) output(78,eq,30) output(91,eq,57) output(91,eq,99)
Optimization: 10 1
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(17,better,99) output(51,better,57) output(53,better,60) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,8) output(71,better,60) output(76,better,60) output(91,better,51) output(91,better,57) output(91,better,99) output(51,worse,67) output(51,worse,99) output(57,worse,99) output(71,worse,53) output(76,worse,53) output(94,worse,98) output(78,worse,30) output(76,eq,8) output(91,eq,67)
Optimization: 9 12
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(3))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(17,better,99) output(51,better,57) output(51,better,99) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(53,worse,60) output(78,worse,30) output(91,worse,51) output(91,worse,67) output(91,worse,57) output(51,eq,67) output(91,eq,99)
Optimization: 7 13
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(17,better,99) output(51,better,67) output(51,better,57) output(51,better,99) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(53,worse,60) output(78,worse,30) output(91,worse,51) output(91,worse,67) output(91,worse,57) output(91,eq,99)
Optimization: 6 11
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasPrep(6))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(17,better,99) output(51,better,57) output(53,better,60) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(91,better,51) output(91,better,57) output(91,better,99) output(51,worse,67) output(51,worse,99) output(57,worse,99) output(94,worse,98) output(78,worse,30) output(91,eq,67)
Optimization: 6 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(17,better,99) output(51,better,67) output(51,better,57) output(51,better,99) output(53,better,60) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(78,better,30) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(17,better,99) output(51,better,67) output(51,better,57) output(51,better,99) output(53,better,60) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(78,better,30) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99)
Optimization: 0 11
Answer: 10
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasPrep(3))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(17,better,99) output(51,better,67) output(51,better,57) output(51,better,99) output(53,better,60) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(78,better,30) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99)
Optimization: 0 9
Answer: 11
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrep(3))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(17,better,99) output(51,better,67) output(51,better,57) output(51,better,99) output(53,better,60) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(78,better,30) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99)
Optimization: 0 8
Answer: 12
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrep(3))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(17,better,99) output(51,better,67) output(51,better,57) output(51,better,99) output(53,better,60) output(57,better,99) output(67,better,57) output(67,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(76,better,8) output(76,better,53) output(76,better,60) output(94,better,98) output(78,better,30) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99)
Optimization: 0 7
Progression : 0 [2;7] (Error: 2.5)
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.039 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 298.103s (Solving: 296.59s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.661s
Threads      : 4        (Winner: 4)

Choices      : 7869262  (Domain: 751396)
Conflicts    : 7266618  (Analyzed: 7266615)
Restarts     : 5808     (Average: 1251.14 Last: 583129)
Model-Level  : 34.8    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7489169  (Deleted: 7160091)
  Binary     : 757      (Ratio:   0.01%)
  Ternary    : 7862     (Ratio:   0.10%)
  Conflict   : 7266615  (Average Length:  245.6 Ratio:  97.03%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 222554   (Average Length:  230.0 Ratio:   2.97%) 
  Distributed: 74277    (Ratio:   1.02% Average LBD: 3.84) 
  Integrated : 222831   (Ratio: 300.00% Unit: 59 Average Jumps: 7.10)
Backjumps    : 7266615  (Average:  1.07 Max:  56 Sum: 7810189)
  Executed   : 7266614  (Average:  1.07 Max:  56 Sum: 7810171 Ratio: 100.00%)
  Bounded    : 1        (Average: 18.00 Max:  18 Sum:     18 Ratio:   0.00%)

Rules        : 76759   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 7670    
Bodies       : 5470    
  Sum        : 40      
  Count      : 14      
Equivalences : 3157     (Atom=Atom: 228 Body=Body: 103 Other: 2826)
Tight        : Yes
Variables    : 4738     (Eliminated:    0 Frozen: 3268)
Constraints  : 76951    (Binary:  96.0% Ternary:   1.9% Other:   2.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) 
}.
