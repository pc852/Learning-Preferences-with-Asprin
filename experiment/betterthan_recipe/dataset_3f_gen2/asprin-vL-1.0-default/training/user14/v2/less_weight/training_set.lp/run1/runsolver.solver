asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1247:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1604:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1923:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(67,eq,50) output(50,eq,39) output(21,eq,66) output(66,eq,58) output(58,eq,62) output(62,eq,10) output(10,eq,32) output(8,eq,67) output(67,eq,21) output(61,eq,47) output(7,eq,42) output(18,eq,89) output(89,eq,62) output(18,eq,62) output(8,eq,21) output(62,eq,32) output(58,eq,10) output(89,eq,10) output(66,eq,62) output(21,eq,58) output(67,eq,66) output(67,eq,39) output(8,eq,50) output(8,eq,39) output(8,eq,66) output(67,eq,58) output(8,eq,58) output(21,eq,62) output(67,eq,62) output(18,eq,10) output(66,eq,10) output(21,eq,10) output(58,eq,32) output(89,eq,32) output(18,eq,32) output(66,eq,32) output(21,eq,32) output(67,eq,32) output(8,eq,32) output(67,eq,10) output(8,eq,10) output(8,eq,62)
Optimization: 42 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(8,better,50) output(8,better,10) output(21,better,10) output(58,better,10) output(62,better,10) output(66,better,10) output(67,better,50) output(67,better,10) output(89,better,10) output(18,better,10) output(10,worse,32) output(50,worse,39) output(7,worse,42) output(21,eq,66) output(66,eq,58) output(58,eq,62) output(8,eq,67) output(67,eq,21) output(61,eq,47) output(18,eq,89) output(89,eq,62) output(18,eq,62) output(8,eq,21) output(62,eq,32) output(66,eq,62) output(21,eq,58) output(67,eq,66) output(67,eq,39) output(8,eq,39) output(8,eq,66) output(67,eq,58) output(8,eq,58) output(21,eq,62) output(67,eq,62) output(58,eq,32) output(89,eq,32) output(18,eq,32) output(66,eq,32) output(21,eq,32) output(67,eq,32) output(8,eq,32) output(8,eq,62)
Optimization: 32 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(21,better,66) output(62,better,10) output(62,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,10) output(10,worse,32) output(21,worse,62) output(21,worse,32) output(58,worse,62) output(58,worse,32) output(61,worse,47) output(66,worse,58) output(66,worse,62) output(66,worse,10) output(66,worse,32) output(67,worse,62) output(89,worse,62) output(89,worse,32) output(7,worse,42) output(18,worse,62) output(18,worse,32) output(50,eq,39) output(18,eq,89) output(58,eq,10) output(89,eq,10) output(21,eq,58) output(18,eq,10) output(21,eq,10) output(67,eq,32) output(8,eq,62)
Optimization: 25 9
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),2) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,10) output(8,better,62) output(50,better,39) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,10) output(7,better,42) output(18,better,89) output(10,worse,32) output(21,worse,66) output(21,worse,58) output(21,worse,62) output(21,worse,10) output(21,worse,32) output(58,worse,32) output(62,worse,32) output(66,worse,32) output(89,worse,62) output(89,worse,10) output(89,worse,32) output(18,worse,32) output(66,eq,58) output(58,eq,62) output(62,eq,10) output(8,eq,67) output(61,eq,47) output(18,eq,62) output(58,eq,10) output(66,eq,62) output(18,eq,10) output(66,eq,10) output(67,eq,32) output(8,eq,32)
Optimization: 25 8
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrep(4))),4) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,58) output(21,better,10) output(62,better,10) output(66,better,58) output(66,better,10) output(67,better,58) output(67,better,10) output(89,better,10) output(18,better,10) output(10,worse,32) output(58,worse,62) output(58,worse,32) output(67,eq,50) output(50,eq,39) output(21,eq,66) output(67,eq,21) output(61,eq,47) output(7,eq,42) output(18,eq,89) output(89,eq,62) output(18,eq,62) output(62,eq,32) output(58,eq,10) output(66,eq,62) output(67,eq,66) output(67,eq,39) output(21,eq,62) output(67,eq,62) output(89,eq,32) output(18,eq,32) output(66,eq,32) output(21,eq,32) output(67,eq,32)
Optimization: 24 11
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(8,better,67) output(8,better,50) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,10) output(21,better,32) output(58,better,32) output(62,better,10) output(62,better,32) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,10) output(18,better,32) output(50,worse,39) output(58,worse,62) output(66,worse,58) output(66,worse,62) output(66,worse,10) output(67,worse,50) output(67,worse,21) output(67,worse,39) output(67,worse,58) output(67,worse,62) output(67,worse,10) output(61,eq,47) output(18,eq,89) output(89,eq,62) output(18,eq,62) output(8,eq,21) output(58,eq,10) output(67,eq,66) output(8,eq,39) output(21,eq,62) output(66,eq,32) output(67,eq,32) output(8,eq,62)
Optimization: 23 14
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(4))),4) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,58) output(21,better,10) output(21,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,10) output(66,better,32) output(67,better,58) output(67,better,32) output(67,better,10) output(89,better,10) output(89,better,32) output(58,worse,62) output(18,worse,89) output(18,worse,62) output(67,eq,50) output(50,eq,39) output(21,eq,66) output(10,eq,32) output(67,eq,21) output(7,eq,42) output(89,eq,62) output(58,eq,10) output(66,eq,62) output(67,eq,66) output(67,eq,39) output(21,eq,62) output(67,eq,62) output(18,eq,10) output(58,eq,32) output(18,eq,32)
Optimization: 19 12
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,10) output(58,better,10) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,58) output(67,better,32) output(67,better,10) output(89,better,10) output(18,better,10) output(10,worse,32) output(21,worse,66) output(21,worse,62) output(50,worse,39) output(58,worse,62) output(89,worse,62) output(7,worse,42) output(18,worse,62) output(18,eq,89) output(66,eq,62) output(21,eq,58) output(67,eq,66) output(67,eq,39) output(67,eq,62) output(58,eq,32) output(89,eq,32) output(18,eq,32) output(21,eq,32)
Optimization: 18 12
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,58) output(21,better,10) output(21,better,32) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,10) output(66,better,32) output(67,better,58) output(67,better,32) output(67,better,10) output(89,better,10) output(89,better,32) output(58,worse,62) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(18,worse,10) output(67,eq,50) output(50,eq,39) output(21,eq,66) output(67,eq,21) output(89,eq,62) output(58,eq,10) output(66,eq,62) output(67,eq,66) output(67,eq,39) output(21,eq,62) output(67,eq,62) output(18,eq,32)
Optimization: 17 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(1))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,32) output(8,better,10) output(10,better,32) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(18,better,10) output(18,better,32) output(8,worse,21) output(8,worse,50) output(8,worse,66) output(8,worse,58) output(67,worse,50) output(67,worse,21) output(67,worse,66) output(67,worse,58) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(21,eq,66) output(8,eq,67) output(67,eq,39) output(8,eq,39) output(67,eq,62) output(8,eq,62)
Optimization: 17 11
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,58) output(21,better,10) output(21,better,32) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,58) output(67,better,32) output(67,better,10) output(89,better,10) output(89,better,32) output(18,better,10) output(10,worse,32) output(50,worse,39) output(58,worse,62) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(21,eq,66) output(67,eq,21) output(89,eq,62) output(66,eq,62) output(67,eq,66) output(67,eq,39) output(21,eq,62) output(67,eq,62) output(18,eq,32)
Optimization: 15 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasCost(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(50,better,39) output(61,better,47) output(62,better,10) output(66,better,58) output(66,better,62) output(66,better,10) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(18,better,62) output(18,better,10) output(8,worse,67) output(8,worse,50) output(8,worse,32) output(10,worse,32) output(21,worse,32) output(58,worse,62) output(58,worse,10) output(58,worse,32) output(62,worse,32) output(66,worse,32) output(67,worse,50) output(7,worse,42) output(18,worse,89) output(18,worse,32) output(8,eq,21)
Optimization: 15 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,10) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,62) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,62) output(18,better,10) output(18,better,32) output(8,worse,58) output(10,worse,32) output(21,worse,58) output(21,worse,32) output(62,worse,32) output(66,worse,58) output(66,worse,62) output(66,worse,10) output(66,worse,32) output(67,worse,50) output(67,worse,58) output(18,eq,89) output(21,eq,62) output(67,eq,32)
Optimization: 14 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrep(3))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(8,better,67) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(67,better,66) output(67,better,39) output(67,better,62) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,89) output(18,better,62) output(18,better,10) output(18,better,32) output(8,worse,21) output(8,worse,58) output(10,worse,32) output(21,worse,58) output(62,worse,32) output(66,worse,58) output(66,worse,62) output(66,worse,10) output(66,worse,32) output(67,worse,50) output(67,worse,21) output(67,worse,58) output(67,eq,32)
Optimization: 13 14
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrep(3))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(8,better,58) output(8,better,10) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,10) output(61,better,47) output(62,better,10) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,62) output(18,better,10) output(18,better,32) output(8,worse,67) output(8,worse,21) output(8,worse,50) output(8,worse,39) output(8,worse,66) output(8,worse,32) output(10,worse,32) output(58,worse,62) output(58,worse,32) output(62,worse,32) output(67,worse,50) output(18,worse,89) output(8,eq,62)
Optimization: 13 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(8,better,50) output(8,better,32) output(8,better,10) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,10) output(18,better,32) output(8,worse,67) output(8,worse,21) output(8,worse,66) output(50,worse,39) output(67,worse,21) output(18,worse,89) output(58,eq,62) output(18,eq,62) output(67,eq,66) output(8,eq,39) output(8,eq,58) output(8,eq,62)
Optimization: 12 12
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(8,better,66) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(8,worse,67) output(8,worse,21) output(8,worse,50) output(8,worse,39) output(8,worse,58) output(66,worse,58) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(18,worse,10) output(18,worse,32)
Optimization: 11 11
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(8,worse,67) output(8,worse,21) output(8,worse,50) output(8,worse,39) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(18,worse,10) output(18,worse,32) output(58,eq,62)
Optimization: 10 11
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),3) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(8,worse,67) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(18,worse,10) output(18,worse,32) output(21,eq,66) output(58,eq,62)
Optimization: 8 12
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(18,better,10) output(8,worse,67) output(10,worse,32) output(66,worse,58) output(7,worse,42) output(18,worse,89) output(18,worse,62) output(18,worse,32)
Optimization: 7 10
Answer: 21
preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(50,better,39) output(58,better,62) output(58,better,10) output(61,better,47) output(62,better,10) output(66,better,58) output(66,better,62) output(66,better,10) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(18,better,62) output(18,better,10) output(18,better,32) output(10,worse,32) output(58,worse,32) output(62,worse,32) output(66,worse,32) output(7,worse,42) output(18,worse,89) output(21,eq,32)
Optimization: 7 9
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,62) output(18,better,10) output(18,better,32) output(8,worse,67) output(8,worse,21) output(10,worse,32) output(62,worse,32) output(66,worse,58) output(18,worse,89)
Optimization: 6 9
Answer: 23
preference(1,(1,1),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasCost(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,62) output(18,better,10) output(18,better,32) output(8,worse,67) output(10,worse,32) output(62,worse,32) output(66,worse,58) output(18,worse,89)
Optimization: 5 11
Answer: 24
preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(18,better,62) output(18,better,10) output(18,better,32) output(62,worse,10) output(7,worse,42) output(18,worse,89) output(21,eq,66)
Optimization: 4 8
Answer: 25
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,89) output(18,better,62) output(18,better,10) output(18,better,32) output(8,worse,67) output(58,eq,62) output(10,eq,32)
Optimization: 3 12
Answer: 26
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(3))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,89) output(18,better,62) output(18,better,10) output(18,better,32) output(58,worse,62) output(66,eq,62)
Optimization: 2 11
Answer: 27
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(3))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,62) output(18,better,10) output(18,better,32) output(18,eq,89)
Optimization: 1 10
Answer: 28
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),8) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,89) output(18,better,62) output(18,better,10) output(18,better,32)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 29
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),1) preference(1,(1,3),1,for(atom(hasPrep(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,89) output(18,better,62) output(18,better,10) output(18,better,32)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 30
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasPrep(3))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(8,better,67) output(8,better,21) output(8,better,50) output(8,better,39) output(8,better,66) output(8,better,58) output(8,better,32) output(8,better,10) output(8,better,62) output(10,better,32) output(21,better,66) output(21,better,58) output(21,better,62) output(21,better,10) output(21,better,32) output(50,better,39) output(58,better,62) output(58,better,10) output(58,better,32) output(61,better,47) output(62,better,10) output(62,better,32) output(66,better,58) output(66,better,62) output(66,better,10) output(66,better,32) output(67,better,50) output(67,better,21) output(67,better,66) output(67,better,39) output(67,better,58) output(67,better,62) output(67,better,32) output(67,better,10) output(89,better,62) output(89,better,10) output(89,better,32) output(7,better,42) output(18,better,89) output(18,better,62) output(18,better,10) output(18,better,32)
Optimization: 0 11
Progression : 0 [ 3;11] (Error: 2.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.053 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 298.109s (Solving: 296.33s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.766s
Threads      : 4        (Winner: 4)

Choices      : 7575050  (Domain: 575953)
Conflicts    : 6911159  (Analyzed: 6911156)
Restarts     : 5864     (Average: 1178.57 Last: 390698)
Model-Level  : 36.6    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 7102540  (Deleted: 6842554)
  Binary     : 376      (Ratio:   0.01%)
  Ternary    : 8095     (Ratio:   0.11%)
  Conflict   : 6911156  (Average Length:  231.6 Ratio:  97.31%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 191384   (Average Length:  132.2 Ratio:   2.69%) 
  Distributed: 63970    (Ratio:   0.93% Average LBD: 3.76) 
  Integrated : 191888   (Ratio: 299.97% Unit: 326 Average Jumps: 5.82)
Backjumps    : 6911156  (Average:  1.09 Max:  57 Sum: 7511893)
  Executed   : 6911154  (Average:  1.09 Max:  57 Sum: 7511840 Ratio: 100.00%)
  Bounded    : 2        (Average: 26.50 Max:  40 Sum:     53 Ratio:   0.00%)

Rules        : 111570  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9744    
Bodies       : 5703    
  Sum        : 84      
  Count      : 14      
Equivalences : 3888     (Atom=Atom: 433 Body=Body: 182 Other: 3273)
Tight        : Yes
Variables    : 4841     (Eliminated:    0 Frozen: 3371)
Constraints  : 109872   (Binary:  97.1% Ternary:   1.4% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) 
}.
