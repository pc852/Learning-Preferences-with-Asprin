asprin_vL version 1.0
Reading from stdin
-:1231:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1241:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1256:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1337:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1598:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1611:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1788:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1917:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1989:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1993:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1993:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2098:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2124:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2244:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2278:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2300:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1148:1-16: info: no atoms over signature occur in program:
  output/3

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1141:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(72,eq,52) output(52,eq,69) output(69,eq,25) output(25,eq,42) output(42,eq,24) output(67,eq,65) output(13,eq,14) output(70,eq,25) output(25,eq,48) output(48,eq,51) output(51,eq,42) output(18,eq,65) output(48,eq,42) output(25,eq,51) output(69,eq,48) output(70,eq,48) output(25,eq,24) output(51,eq,24) output(69,eq,42) output(70,eq,42) output(52,eq,25) output(72,eq,69) output(72,eq,25) output(52,eq,42) output(72,eq,42) output(48,eq,24) output(69,eq,24) output(70,eq,24) output(52,eq,24) output(52,eq,48) output(72,eq,48) output(69,eq,51) output(70,eq,51) output(52,eq,51) output(72,eq,51) output(72,eq,24)
Optimization: 36 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrep(4))),8) preference(1,less(weight)) output(52,better,69) output(72,better,69) output(69,worse,25) output(69,worse,48) output(69,worse,42) output(69,worse,24) output(69,worse,51) output(72,eq,52) output(25,eq,42) output(42,eq,24) output(67,eq,65) output(13,eq,14) output(70,eq,25) output(25,eq,48) output(48,eq,51) output(51,eq,42) output(18,eq,65) output(48,eq,42) output(25,eq,51) output(70,eq,48) output(25,eq,24) output(51,eq,24) output(70,eq,42) output(52,eq,25) output(72,eq,25) output(52,eq,42) output(72,eq,42) output(48,eq,24) output(70,eq,24) output(52,eq,24) output(52,eq,48) output(72,eq,48) output(70,eq,51) output(52,eq,51) output(72,eq,51) output(72,eq,24)
Optimization: 34 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrep(4))),1) preference(1,(1,3),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(67,better,65) output(72,better,52) output(72,better,69) output(13,worse,14) output(52,worse,25) output(52,worse,42) output(52,worse,24) output(52,worse,48) output(52,worse,51) output(69,worse,25) output(69,worse,48) output(69,worse,42) output(69,worse,24) output(69,worse,51) output(70,worse,25) output(70,worse,48) output(70,worse,42) output(70,worse,24) output(70,worse,51) output(52,eq,69) output(25,eq,42) output(42,eq,24) output(25,eq,48) output(48,eq,51) output(51,eq,42) output(18,eq,65) output(48,eq,42) output(25,eq,51) output(25,eq,24) output(51,eq,24) output(72,eq,25) output(72,eq,42) output(48,eq,24) output(72,eq,48) output(72,eq,51) output(72,eq,24)
Optimization: 33 3
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(4))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,24) output(70,better,25) output(70,better,24) output(42,better,24) output(48,better,24) output(72,better,69) output(72,better,25) output(72,better,24) output(25,worse,42) output(25,worse,48) output(25,worse,51) output(51,worse,42) output(52,worse,42) output(52,worse,51) output(69,worse,48) output(69,worse,42) output(69,worse,51) output(70,worse,42) output(70,worse,51) output(48,worse,51) output(48,worse,42) output(72,worse,42) output(72,worse,51) output(72,eq,52) output(69,eq,25) output(67,eq,65) output(13,eq,14) output(18,eq,65) output(70,eq,48) output(25,eq,24) output(69,eq,24) output(52,eq,48) output(72,eq,48)
Optimization: 25 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,24) output(69,better,25) output(69,better,24) output(70,better,25) output(70,better,24) output(42,better,24) output(48,better,24) output(72,better,69) output(72,better,25) output(72,better,24) output(25,worse,42) output(25,worse,48) output(25,worse,51) output(51,worse,42) output(52,worse,42) output(52,worse,51) output(69,worse,48) output(69,worse,42) output(69,worse,51) output(70,worse,42) output(70,worse,51) output(48,worse,51) output(48,worse,42) output(72,worse,42) output(72,worse,51) output(72,eq,52) output(67,eq,65) output(13,eq,14) output(18,eq,65) output(70,eq,48) output(25,eq,24) output(52,eq,48) output(72,eq,48)
Optimization: 23 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(25,better,24) output(51,better,24) output(52,better,25) output(52,better,24) output(52,better,51) output(69,better,25) output(69,better,24) output(69,better,51) output(70,better,25) output(70,better,24) output(70,better,51) output(42,better,24) output(48,better,51) output(48,better,24) output(72,better,25) output(72,better,51) output(72,better,24) output(25,worse,42) output(25,worse,48) output(25,worse,51) output(51,worse,42) output(52,worse,42) output(69,worse,42) output(70,worse,42) output(48,worse,42) output(72,worse,42) output(72,eq,52) output(52,eq,69) output(67,eq,65) output(13,eq,14) output(18,eq,65) output(69,eq,48) output(70,eq,48) output(72,eq,69) output(52,eq,48) output(72,eq,48)
Optimization: 19 12
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(4))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(25,better,24) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,24) output(52,better,51) output(69,better,25) output(69,better,24) output(70,better,25) output(70,better,24) output(70,better,51) output(42,better,24) output(48,better,51) output(48,better,24) output(72,better,69) output(72,better,25) output(72,better,51) output(72,better,24) output(25,worse,42) output(25,worse,48) output(25,worse,51) output(51,worse,42) output(52,worse,42) output(69,worse,48) output(69,worse,42) output(69,worse,51) output(70,worse,42) output(48,worse,42) output(72,worse,42) output(72,eq,52) output(67,eq,65) output(13,eq,14) output(18,eq,65) output(70,eq,48) output(52,eq,48) output(72,eq,48)
Optimization: 18 13
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrep(2))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(13,better,14) output(25,better,42) output(25,better,48) output(25,better,51) output(25,better,24) output(51,better,42) output(51,better,24) output(52,better,42) output(52,better,24) output(52,better,48) output(52,better,51) output(69,better,48) output(69,better,42) output(69,better,24) output(69,better,51) output(42,better,24) output(48,better,51) output(48,better,42) output(48,better,24) output(72,better,24) output(67,worse,65) output(70,worse,25) output(70,worse,48) output(70,worse,42) output(70,worse,24) output(70,worse,51) output(18,worse,65) output(72,worse,52) output(72,worse,69) output(72,worse,25) output(72,worse,42) output(72,worse,48) output(72,worse,51) output(52,eq,69) output(69,eq,25) output(52,eq,25)
Optimization: 16 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(7))),3) preference(1,(1,2),1,for(atom(hasPrep(3))),5) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,10),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrep(4))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(13,better,14) output(25,better,42) output(25,better,48) output(25,better,51) output(25,better,24) output(51,better,42) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,42) output(52,better,24) output(52,better,48) output(52,better,51) output(67,better,65) output(69,better,25) output(69,better,48) output(69,better,42) output(69,better,24) output(69,better,51) output(70,better,25) output(70,better,48) output(70,better,42) output(70,better,24) output(70,better,51) output(18,better,65) output(42,better,24) output(48,better,51) output(48,better,42) output(48,better,24) output(72,better,52) output(72,better,69) output(72,better,25) output(72,better,42) output(72,better,48) output(72,better,51) output(72,better,24)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(4))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(13,better,14) output(25,better,42) output(25,better,48) output(25,better,51) output(25,better,24) output(51,better,42) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,42) output(52,better,24) output(52,better,48) output(52,better,51) output(67,better,65) output(69,better,25) output(69,better,48) output(69,better,42) output(69,better,24) output(69,better,51) output(70,better,25) output(70,better,48) output(70,better,42) output(70,better,24) output(70,better,51) output(18,better,65) output(42,better,24) output(48,better,51) output(48,better,42) output(48,better,24) output(72,better,52) output(72,better,69) output(72,better,25) output(72,better,42) output(72,better,48) output(72,better,51) output(72,better,24)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),2) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(13,better,14) output(25,better,42) output(25,better,48) output(25,better,51) output(25,better,24) output(51,better,42) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,42) output(52,better,24) output(52,better,48) output(52,better,51) output(67,better,65) output(69,better,25) output(69,better,48) output(69,better,42) output(69,better,24) output(69,better,51) output(70,better,25) output(70,better,48) output(70,better,42) output(70,better,24) output(70,better,51) output(18,better,65) output(42,better,24) output(48,better,51) output(48,better,42) output(48,better,24) output(72,better,52) output(72,better,69) output(72,better,25) output(72,better,42) output(72,better,48) output(72,better,51) output(72,better,24)
Optimization: 0 8
Progression : 0 [3;8] (Error: 1.66667)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(13,better,14) output(25,better,42) output(25,better,48) output(25,better,51) output(25,better,24) output(51,better,42) output(51,better,24) output(52,better,69) output(52,better,25) output(52,better,42) output(52,better,24) output(52,better,48) output(52,better,51) output(67,better,65) output(69,better,25) output(69,better,48) output(69,better,42) output(69,better,24) output(69,better,51) output(70,better,25) output(70,better,48) output(70,better,42) output(70,better,24) output(70,better,51) output(18,better,65) output(42,better,24) output(48,better,51) output(48,better,42) output(48,better,24) output(72,better,52) output(72,better,69) output(72,better,25) output(72,better,42) output(72,better,48) output(72,better,51) output(72,better,24)
Optimization: 0 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.071 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 298.474s (Solving: 296.84s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1188.663s
Threads      : 4        (Winner: 4)

Choices      : 9169621  (Domain: 671564)
Conflicts    : 7043149  (Analyzed: 7043146)
Restarts     : 6353     (Average: 1108.63 Last: 481868)
Model-Level  : 46.3    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7069365  (Deleted: 6817666)
  Binary     : 1209     (Ratio:   0.02%)
  Ternary    : 2696     (Ratio:   0.04%)
  Conflict   : 7043146  (Average Length:  311.9 Ratio:  99.63%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 26219    (Average Length:   31.1 Ratio:   0.37%) 
  Distributed: 8761     (Ratio:   0.12% Average LBD: 3.63) 
  Integrated : 26283    (Ratio: 300.00% Unit: 24 Average Jumps: 18.50)
Backjumps    : 7043146  (Average:  1.24 Max: 425 Sum: 8718441)
  Executed   : 7043145  (Average:  1.24 Max: 425 Sum: 8718414 Ratio: 100.00%)
  Bounded    : 1        (Average: 27.00 Max:  27 Sum:     27 Ratio:   0.00%)

Rules        : 100264  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9140    
Bodies       : 5637    
  Sum        : 72      
  Count      : 14      
Equivalences : 3678     (Atom=Atom: 373 Body=Body: 158 Other: 3147)
Tight        : Yes
Variables    : 4801     (Eliminated:    0 Frozen: 3331)
Constraints  : 99096    (Binary:  96.8% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(4)) 
}.
