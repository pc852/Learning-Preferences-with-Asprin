asprin_vL version 1.0
Reading from stdin
-:1231:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1241:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1256:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1337:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1598:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1611:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1788:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1917:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1989:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1993:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1993:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2098:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2124:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2244:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2278:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2300:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1148:1-16: info: no atoms over signature occur in program:
  output/3

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1141:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(69,eq,67) output(67,eq,42) output(42,eq,24) output(65,eq,23) output(72,eq,25) output(25,eq,52) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(42,eq,65) output(18,eq,13) output(13,eq,25) output(18,eq,25) output(67,eq,65) output(48,eq,65) output(51,eq,42) output(70,eq,48) output(72,eq,52) output(13,eq,52) output(42,eq,23) output(67,eq,24) output(48,eq,24) output(69,eq,42) output(51,eq,24) output(70,eq,24) output(69,eq,24) output(67,eq,23) output(48,eq,23) output(51,eq,23) output(69,eq,23) output(18,eq,52) output(70,eq,42) output(51,eq,65) output(70,eq,65) output(69,eq,65) output(70,eq,23)
Optimization: 36 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(51,better,24) output(69,better,67) output(69,better,24) output(70,better,24) output(18,better,13) output(42,better,24) output(48,better,24) output(13,worse,25) output(13,worse,52) output(67,worse,42) output(67,worse,65) output(67,worse,23) output(72,worse,25) output(72,worse,52) output(65,eq,23) output(25,eq,52) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(42,eq,65) output(18,eq,25) output(48,eq,65) output(51,eq,42) output(70,eq,48) output(42,eq,23) output(67,eq,24) output(69,eq,42) output(48,eq,23) output(51,eq,23) output(69,eq,23) output(18,eq,52) output(70,eq,42) output(51,eq,65) output(70,eq,65) output(69,eq,65) output(70,eq,23)
Optimization: 29 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(70,better,51) output(70,better,48) output(70,better,42) output(18,better,13) output(18,better,25) output(18,better,52) output(72,better,25) output(25,worse,52) output(51,worse,24) output(51,worse,23) output(51,worse,65) output(67,worse,65) output(67,worse,24) output(67,worse,23) output(69,worse,24) output(69,worse,23) output(69,worse,65) output(70,worse,24) output(70,worse,23) output(42,worse,24) output(42,worse,65) output(42,worse,23) output(48,worse,65) output(48,worse,24) output(48,worse,23) output(65,worse,23) output(69,eq,67) output(67,eq,42) output(48,eq,42) output(72,eq,52) output(13,eq,52) output(69,eq,42) output(70,eq,65)
Optimization: 26 9
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(51,better,48) output(51,better,42) output(67,better,42) output(70,better,51) output(70,better,48) output(70,better,42) output(18,better,13) output(18,better,25) output(18,better,52) output(65,better,23) output(72,better,25) output(72,better,52) output(13,worse,25) output(13,worse,52) output(25,worse,52) output(51,worse,24) output(51,worse,23) output(51,worse,65) output(67,worse,65) output(67,worse,24) output(67,worse,23) output(69,worse,67) output(69,worse,42) output(69,worse,24) output(69,worse,23) output(69,worse,65) output(70,worse,24) output(70,worse,65) output(70,worse,23) output(42,worse,24) output(42,worse,65) output(42,worse,23) output(48,worse,65) output(48,worse,24) output(48,worse,23) output(48,eq,42)
Optimization: 24 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(25,better,52) output(51,better,48) output(51,better,42) output(67,better,42) output(70,better,51) output(70,better,48) output(70,better,42) output(18,better,13) output(18,better,25) output(18,better,52) output(65,better,23) output(72,better,25) output(72,better,52) output(13,worse,25) output(13,worse,52) output(51,worse,24) output(51,worse,23) output(51,worse,65) output(67,worse,65) output(67,worse,24) output(67,worse,23) output(69,worse,67) output(69,worse,42) output(69,worse,24) output(69,worse,23) output(69,worse,65) output(70,worse,24) output(70,worse,65) output(70,worse,23) output(42,worse,24) output(42,worse,65) output(42,worse,23) output(48,worse,65) output(48,worse,24) output(48,worse,23) output(48,eq,42)
Optimization: 23 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(3))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(51,better,24) output(51,better,23) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(42,better,24) output(42,better,23) output(48,better,24) output(48,better,23) output(65,better,23) output(13,worse,25) output(13,worse,52) output(25,worse,52) output(51,worse,48) output(51,worse,42) output(51,worse,65) output(18,worse,13) output(18,worse,25) output(18,worse,52) output(72,worse,25) output(72,worse,52) output(48,eq,42) output(42,eq,65) output(48,eq,65)
Optimization: 14 14
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(42,better,24) output(42,better,23) output(48,better,24) output(48,better,23) output(65,better,23) output(13,worse,52) output(25,worse,52) output(18,worse,13) output(18,worse,25) output(18,worse,52) output(72,worse,25) output(72,worse,52) output(48,eq,42) output(42,eq,65) output(48,eq,65)
Optimization: 10 14
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(18,better,25) output(42,better,24) output(42,better,23) output(48,better,24) output(48,better,23) output(65,better,23) output(13,worse,52) output(25,worse,52) output(18,worse,13) output(18,worse,52) output(72,worse,25) output(72,worse,52) output(48,eq,42) output(42,eq,65) output(48,eq,65)
Optimization: 9 14
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,65) output(70,better,23) output(18,better,13) output(18,better,25) output(42,better,24) output(42,better,65) output(42,better,23) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23) output(72,better,25) output(13,worse,52) output(25,worse,52) output(51,worse,42) output(67,worse,42) output(69,worse,42) output(70,worse,42) output(18,worse,52) output(48,worse,42) output(72,worse,52)
Optimization: 9 12
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrep(4))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(18,better,25) output(42,better,24) output(42,better,65) output(42,better,23) output(48,better,24) output(48,better,23) output(65,better,23) output(13,worse,52) output(25,worse,52) output(18,worse,13) output(18,worse,52) output(48,worse,42) output(72,worse,25) output(72,worse,52) output(48,eq,65)
Optimization: 8 14
Progression : [1;8] (Error: 7)
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrep(3))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(18,better,13) output(18,better,25) output(18,better,52) output(42,better,24) output(42,better,65) output(42,better,23) output(48,better,42) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23) output(72,better,25) output(72,better,52) output(69,eq,67) output(25,eq,52) output(13,eq,25) output(13,eq,52)
Optimization: 4 14
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(18,better,13) output(18,better,25) output(18,better,52) output(42,better,24) output(42,better,65) output(42,better,23) output(48,better,42) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23) output(72,better,25) output(72,better,52) output(13,worse,52) output(25,worse,52)
Optimization: 2 10
Progression : [2;2] (Error: 0)
Progression : 2 [ 1;10] (Error: 9)
Progression : 2 [ 2;10] (Error: 4)
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(18,better,13) output(18,better,25) output(18,better,52) output(42,better,24) output(42,better,65) output(42,better,23) output(48,better,42) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23) output(72,better,25) output(72,better,52) output(13,worse,52) output(25,worse,52)
Optimization: 2 9
Progression : 2 [3;9] (Error: 2)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(13,better,25) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(18,better,13) output(18,better,25) output(18,better,52) output(42,better,24) output(42,better,65) output(42,better,23) output(48,better,42) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23) output(72,better,25) output(72,better,52) output(13,worse,52) output(25,worse,52)
Optimization: 2 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.035 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 2 8
Bounds       : 2 [3;8]
Calls        : 1
Time         : 298.329s (Solving: 296.69s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1188.232s
Threads      : 4        (Winner: 4)

Choices      : 8732184  (Domain: 929535)
Conflicts    : 8038596  (Analyzed: 8038589)
Restarts     : 6943     (Average: 1157.80 Last: 179794)
Model-Level  : 43.3    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 8243675  (Deleted: 7934027)
  Binary     : 737      (Ratio:   0.01%)
  Ternary    : 7197     (Ratio:   0.09%)
  Conflict   : 8038589  (Average Length:  215.2 Ratio:  97.51%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 205086   (Average Length:  169.2 Ratio:   2.49%) 
  Distributed: 68472    (Ratio:   0.85% Average LBD: 3.82) 
  Integrated : 205416   (Ratio: 300.00% Unit: 273 Average Jumps: 4.85)
Backjumps    : 8038589  (Average:  1.08 Max:  61 Sum: 8647276)
  Executed   : 8038583  (Average:  1.08 Max:  61 Sum: 8647225 Ratio: 100.00%)
  Bounded    : 6        (Average:  8.50 Max:  21 Sum:     51 Ratio:   0.00%)

Rules        : 100152  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9140    
Bodies       : 5637    
  Sum        : 72      
  Count      : 14      
Equivalences : 3678     (Atom=Atom: 373 Body=Body: 158 Other: 3147)
Tight        : Yes
Variables    : 4801     (Eliminated:    0 Frozen: 3331)
Constraints  : 98984    (Binary:  96.8% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) 
}.
