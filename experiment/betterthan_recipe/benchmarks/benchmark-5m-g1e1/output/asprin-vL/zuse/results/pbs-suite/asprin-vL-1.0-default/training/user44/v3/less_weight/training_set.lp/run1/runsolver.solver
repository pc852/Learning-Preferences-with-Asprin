asprin_vL version 1.0
Reading from stdin
-:1300:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1310:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1325:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1406:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1667:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1680:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1857:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1986:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2058:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2062:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2062:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2068:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2167:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2193:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2313:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2347:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2369:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1217:1-16: info: no atoms over signature occur in program:
  output/3

-:1209:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1210:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(16,eq,65) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(79,eq,90) output(65,eq,90) output(67,eq,90) output(44,eq,79) output(16,eq,67) output(10,eq,44) output(51,eq,44) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(79,eq,22) output(16,eq,79) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(77,eq,79) output(65,eq,22) output(67,eq,22) output(44,eq,22) output(16,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(10,eq,67) output(51,eq,67) output(75,eq,67) output(77,eq,67) output(44,eq,90) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(58,eq,67) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,67) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(9,eq,16) output(10,eq,22) output(51,eq,22) output(75,eq,22) output(77,eq,22) output(58,eq,22) output(92,eq,22) output(33,eq,22) output(100,eq,22) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(9,eq,22) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(67,eq,84) output(44,eq,84) output(16,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84) output(77,eq,84)
Optimization: 105 0
Progression : [  4;105] (Error: 25.25)
Answer: 2
preference(1,(1,11),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(9,better,100) output(100,worse,33) output(100,worse,16) output(100,worse,90) output(100,worse,67) output(100,worse,44) output(100,worse,22) output(100,worse,79) output(100,worse,65) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(16,eq,65) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(51,eq,16) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(79,eq,90) output(65,eq,90) output(67,eq,90) output(44,eq,79) output(16,eq,67) output(10,eq,44) output(51,eq,44) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(79,eq,22) output(16,eq,79) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(77,eq,79) output(65,eq,22) output(67,eq,22) output(44,eq,22) output(16,eq,22) output(33,eq,16) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(10,eq,67) output(51,eq,67) output(75,eq,67) output(77,eq,67) output(44,eq,90) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(58,eq,67) output(92,eq,67) output(33,eq,67) output(9,eq,67) output(92,eq,44) output(9,eq,44) output(9,eq,16) output(10,eq,22) output(51,eq,22) output(75,eq,22) output(77,eq,22) output(58,eq,22) output(92,eq,22) output(33,eq,22) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(9,eq,79) output(92,eq,65) output(9,eq,65) output(9,eq,22) output(79,eq,84) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(67,eq,84) output(44,eq,84) output(16,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84) output(77,eq,84)
Optimization: 104 1
Progression : [  5;104] (Error: 19.8)
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,22) output(51,better,16) output(51,better,67) output(51,better,22) output(58,better,16) output(58,better,67) output(58,better,22) output(77,better,16) output(77,better,67) output(77,better,22) output(79,better,22) output(84,better,22) output(92,better,16) output(92,better,67) output(92,better,22) output(9,better,67) output(9,better,16) output(9,better,22) output(33,better,16) output(33,better,67) output(33,better,22) output(44,better,67) output(44,better,22) output(65,better,22) output(75,better,16) output(75,better,67) output(75,better,22) output(100,better,16) output(100,better,67) output(100,better,22) output(16,worse,65) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(16,worse,22) output(16,worse,90) output(16,worse,84) output(22,worse,90) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(58,eq,77) output(77,eq,10) output(65,eq,79) output(100,eq,33) output(79,eq,90) output(65,eq,90) output(44,eq,79) output(10,eq,44) output(51,eq,44) output(9,eq,33) output(84,eq,90) output(10,eq,65) output(51,eq,65) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(77,eq,79) output(67,eq,22) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(44,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(44,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84) output(77,eq,84)
Optimization: 73 14
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,22) output(16,better,67) output(16,better,22) output(51,better,16) output(51,better,67) output(51,better,22) output(58,better,16) output(58,better,67) output(58,better,22) output(77,better,16) output(77,better,67) output(77,better,22) output(79,better,22) output(84,better,22) output(92,better,16) output(92,better,67) output(92,better,22) output(9,better,67) output(9,better,16) output(9,better,22) output(33,better,16) output(33,better,67) output(33,better,22) output(44,better,67) output(44,better,22) output(65,better,22) output(75,better,16) output(75,better,67) output(75,better,22) output(100,better,16) output(100,better,67) output(100,better,22) output(16,worse,65) output(16,worse,44) output(16,worse,79) output(16,worse,90) output(16,worse,84) output(22,worse,90) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(58,eq,77) output(77,eq,10) output(65,eq,79) output(100,eq,33) output(79,eq,90) output(65,eq,90) output(44,eq,79) output(10,eq,44) output(51,eq,44) output(9,eq,33) output(84,eq,90) output(10,eq,65) output(51,eq,65) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(77,eq,79) output(67,eq,22) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(44,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(44,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84) output(77,eq,84)
Optimization: 71 14
Progression : [ 6;71] (Error: 10.8333)
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,22) output(16,better,67) output(16,better,22) output(51,better,16) output(51,better,67) output(51,better,22) output(58,better,77) output(58,better,16) output(58,better,67) output(58,better,22) output(77,better,67) output(77,better,22) output(79,better,22) output(84,better,22) output(92,better,77) output(92,better,16) output(92,better,67) output(92,better,22) output(9,better,67) output(9,better,16) output(9,better,22) output(33,better,16) output(33,better,67) output(33,better,22) output(44,better,67) output(44,better,22) output(65,better,22) output(75,better,16) output(75,better,67) output(75,better,22) output(100,better,16) output(100,better,67) output(100,better,22) output(16,worse,65) output(16,worse,44) output(16,worse,79) output(16,worse,90) output(16,worse,84) output(22,worse,90) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(77,worse,10) output(77,worse,65) output(77,worse,79) output(77,worse,44) output(77,worse,90) output(77,worse,84) output(65,eq,79) output(100,eq,33) output(79,eq,90) output(65,eq,90) output(44,eq,79) output(10,eq,44) output(51,eq,44) output(9,eq,33) output(84,eq,90) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(58,eq,10) output(92,eq,10) output(75,eq,65) output(33,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(67,eq,22) output(75,eq,44) output(33,eq,44) output(58,eq,44) output(44,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(58,eq,90) output(92,eq,90) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(44,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84)
Optimization: 70 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(10,better,16) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,16) output(58,better,67) output(58,better,22) output(77,better,16) output(77,better,67) output(77,better,22) output(79,better,22) output(84,better,22) output(92,better,77) output(92,better,16) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,22) output(9,better,100) output(9,better,84) output(33,better,16) output(33,better,67) output(33,better,22) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,67) output(100,better,22) output(10,worse,44) output(10,worse,65) output(16,worse,65) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(16,worse,22) output(16,worse,90) output(16,worse,84) output(22,worse,90) output(51,worse,44) output(51,worse,65) output(58,worse,10) output(58,worse,65) output(58,worse,44) output(58,worse,90) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(77,worse,10) output(77,worse,65) output(77,worse,79) output(77,worse,44) output(77,worse,90) output(77,worse,84) output(79,worse,90) output(79,worse,84) output(92,worse,10) output(92,worse,90) output(92,worse,44) output(92,worse,65) output(9,worse,44) output(9,worse,65) output(9,worse,75) output(33,worse,65) output(33,worse,44) output(33,worse,90) output(33,worse,75) output(33,worse,51) output(33,worse,84) output(75,worse,44) output(100,worse,90) output(100,worse,44) output(100,worse,65) output(100,eq,33) output(84,eq,90) output(75,eq,65) output(67,eq,22) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,51)
Optimization: 53 12
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,65) output(77,better,10) output(77,better,65) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,10) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(75,better,65) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,65) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(10,worse,67) output(10,worse,90) output(10,worse,22) output(10,worse,84) output(22,worse,90) output(51,worse,16) output(51,worse,44) output(51,worse,79) output(51,worse,90) output(58,worse,77) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(58,worse,90) output(58,worse,67) output(58,worse,22) output(58,worse,79) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(44,worse,79) output(65,worse,79) output(65,worse,90) output(65,worse,22) output(65,worse,84) output(75,worse,16) output(75,worse,79) output(75,worse,44) output(75,worse,67) output(75,worse,90) output(75,worse,22) output(100,eq,33) output(84,eq,90) output(16,eq,79) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,16) output(77,eq,79) output(67,eq,22) output(33,eq,16) output(100,eq,16) output(51,eq,67) output(51,eq,22) output(92,eq,79) output(33,eq,79) output(100,eq,79)
Optimization: 51 9
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,90) output(58,better,67) output(58,better,22) output(77,better,16) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,77) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,22) output(9,better,51) output(9,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(16,worse,65) output(16,worse,44) output(16,worse,79) output(51,worse,44) output(51,worse,65) output(51,worse,79) output(67,worse,79) output(77,worse,65) output(77,worse,79) output(77,worse,44) output(77,eq,10) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(67,eq,90) output(44,eq,79) output(9,eq,33) output(84,eq,90) output(75,eq,65) output(33,eq,65) output(58,eq,65) output(75,eq,79) output(67,eq,22) output(75,eq,44) output(33,eq,44) output(58,eq,44) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(9,eq,100) output(33,eq,75) output(67,eq,84) output(9,eq,75)
Optimization: 45 13
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,90) output(58,better,67) output(58,better,22) output(67,better,90) output(67,better,84) output(77,better,16) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,77) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,22) output(9,better,51) output(9,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(16,worse,65) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(16,worse,22) output(51,worse,44) output(51,worse,65) output(51,worse,79) output(67,worse,79) output(77,worse,65) output(77,worse,79) output(77,worse,44) output(84,worse,22) output(77,eq,10) output(65,eq,79) output(100,eq,33) output(44,eq,79) output(9,eq,33) output(84,eq,90) output(75,eq,65) output(33,eq,65) output(58,eq,65) output(75,eq,79) output(67,eq,22) output(75,eq,44) output(33,eq,44) output(58,eq,44) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(9,eq,100) output(33,eq,75) output(9,eq,75)
Optimization: 44 13
Answer: 10
preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(10,better,16) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,90) output(77,better,84) output(79,better,90) output(79,better,84) output(92,better,77) output(92,better,16) output(92,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,16) output(33,better,90) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,90) output(10,worse,44) output(16,worse,65) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(16,worse,22) output(51,worse,44) output(77,worse,10) output(77,worse,65) output(77,worse,79) output(77,worse,44) output(77,worse,67) output(77,worse,22) output(84,worse,22) output(92,worse,10) output(92,worse,44) output(92,worse,65) output(33,worse,65) output(33,worse,44) output(33,worse,67) output(33,worse,22) output(33,worse,79) output(33,worse,75) output(33,worse,51) output(75,worse,44) output(100,worse,33) output(100,worse,67) output(100,worse,44) output(100,worse,22) output(100,worse,79) output(100,worse,65) output(67,eq,79) output(84,eq,90) output(79,eq,22) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(75,eq,65) output(67,eq,22) output(100,eq,16) output(92,eq,67) output(9,eq,44) output(92,eq,22) output(92,eq,79)
Optimization: 44 10
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(10,better,16) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,67) output(16,better,22) output(51,better,16) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,67) output(58,better,22) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,22) output(84,better,22) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(10,worse,44) output(10,worse,65) output(16,worse,65) output(16,worse,44) output(22,worse,90) output(51,worse,44) output(51,worse,65) output(58,worse,77) output(58,worse,10) output(58,worse,65) output(58,worse,44) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,44) output(92,worse,65) output(33,worse,44) output(75,worse,44) output(100,worse,44) output(100,eq,33) output(79,eq,90) output(84,eq,90) output(16,eq,79) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(67,eq,22) output(16,eq,90) output(58,eq,90) output(92,eq,90) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(100,eq,65) output(79,eq,84) output(33,eq,75) output(16,eq,84)
Optimization: 40 10
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,67) output(58,better,22) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,22) output(84,better,22) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(10,worse,44) output(10,worse,65) output(16,worse,65) output(16,worse,44) output(22,worse,90) output(51,worse,44) output(51,worse,65) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,44) output(75,worse,44) output(100,worse,44) output(10,eq,16) output(100,eq,33) output(51,eq,16) output(79,eq,90) output(84,eq,90) output(75,eq,65) output(33,eq,65) output(67,eq,22) output(58,eq,90) output(92,eq,90) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(100,eq,65) output(79,eq,84) output(33,eq,75)
Optimization: 39 10
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(10,better,16) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,67) output(58,better,22) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,22) output(84,better,22) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(10,worse,44) output(10,worse,65) output(16,worse,65) output(16,worse,44) output(22,worse,90) output(51,worse,44) output(51,worse,65) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,44) output(75,worse,44) output(100,worse,44) output(100,eq,33) output(79,eq,90) output(84,eq,90) output(75,eq,65) output(33,eq,65) output(67,eq,22) output(58,eq,90) output(92,eq,90) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(100,eq,65) output(79,eq,84) output(33,eq,75)
Optimization: 37 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasPrep(3))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,44) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,67) output(58,better,22) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,90) output(100,better,67) output(100,better,22) output(10,worse,16) output(10,worse,65) output(22,worse,90) output(51,worse,16) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(58,worse,79) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,65) output(33,worse,16) output(33,worse,44) output(33,worse,75) output(33,worse,51) output(100,worse,16) output(100,worse,44) output(100,worse,65) output(100,eq,33) output(10,eq,44) output(75,eq,16) output(84,eq,90) output(51,eq,65) output(67,eq,22) output(58,eq,90) output(92,eq,79) output(33,eq,79) output(100,eq,79)
Optimization: 36 12
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,67) output(58,better,22) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,22) output(84,better,22) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,22) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,44) output(16,worse,44) output(22,worse,90) output(51,worse,44) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,44) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(33,worse,44) output(75,worse,44) output(100,worse,44) output(65,eq,79) output(100,eq,33) output(79,eq,90) output(65,eq,90) output(84,eq,90) output(58,eq,65) output(67,eq,22) output(58,eq,90) output(92,eq,90) output(9,eq,44) output(58,eq,79) output(92,eq,79) output(92,eq,65) output(79,eq,84) output(33,eq,75) output(65,eq,84)
Optimization: 34 10
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,10) output(58,better,90) output(58,better,67) output(58,better,22) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,65) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,65) output(9,better,22) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(10,worse,67) output(10,worse,22) output(58,worse,77) output(58,worse,16) output(58,worse,79) output(67,worse,79) output(84,worse,22) output(9,worse,33) output(9,worse,100) output(9,worse,75) output(9,worse,51) output(44,worse,79) output(65,worse,79) output(100,eq,33) output(84,eq,90) output(16,eq,79) output(77,eq,16) output(92,eq,77) output(92,eq,16) output(58,eq,65) output(77,eq,79) output(67,eq,22) output(58,eq,44) output(10,eq,90) output(9,eq,16) output(92,eq,79) output(9,eq,79) output(10,eq,84)
Optimization: 32 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,79) output(67,better,90) output(67,better,84) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,84) output(33,better,65) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,84) output(75,better,79) output(75,better,90) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(58,worse,10) output(77,worse,10) output(79,worse,22) output(84,worse,22) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,67) output(92,worse,44) output(92,worse,22) output(92,worse,65) output(9,worse,51) output(33,worse,16) output(33,worse,51) output(75,worse,16) output(75,worse,44) output(100,worse,33) output(100,worse,16) output(79,eq,90) output(84,eq,90) output(77,eq,16) output(75,eq,65) output(65,eq,22) output(67,eq,22) output(75,eq,67) output(92,eq,90) output(9,eq,16) output(75,eq,22) output(92,eq,79) output(79,eq,84)
Optimization: 30 7
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),4) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(10,better,65) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(75,better,16) output(75,better,65) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,65) output(10,worse,44) output(10,worse,79) output(16,worse,44) output(16,worse,79) output(67,worse,79) output(92,worse,77) output(33,worse,44) output(33,worse,79) output(33,worse,75) output(33,worse,51) output(44,worse,79) output(65,worse,79) output(75,worse,79) output(100,worse,44) output(100,worse,79) output(58,eq,77) output(10,eq,16) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(65,eq,90) output(67,eq,90) output(84,eq,90) output(65,eq,22) output(67,eq,22) output(75,eq,44) output(92,eq,79) output(65,eq,84) output(67,eq,84)
Optimization: 29 9
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,79) output(67,better,90) output(67,better,84) output(77,better,65) output(77,better,79) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,84) output(75,better,79) output(75,better,90) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(58,worse,10) output(77,worse,10) output(79,worse,22) output(84,worse,22) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,67) output(92,worse,44) output(92,worse,22) output(92,worse,65) output(75,worse,16) output(75,worse,44) output(100,worse,33) output(16,eq,44) output(79,eq,90) output(84,eq,90) output(77,eq,16) output(75,eq,65) output(65,eq,22) output(67,eq,22) output(77,eq,44) output(75,eq,67) output(92,eq,90) output(75,eq,22) output(92,eq,79) output(79,eq,84) output(33,eq,51)
Optimization: 28 7
Answer: 20
preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(77,better,65) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,77) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,65) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,worse,79) output(22,worse,90) output(58,worse,10) output(58,worse,79) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(77,worse,10) output(77,worse,79) output(92,worse,10) output(9,worse,51) output(33,worse,51) output(44,worse,79) output(65,worse,79) output(75,worse,79) output(100,eq,33) output(16,eq,44) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(77,eq,16) output(67,eq,22) output(75,eq,44) output(77,eq,44) output(92,eq,79) output(9,eq,100)
Optimization: 26 10
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(77,better,65) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,77) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,65) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,worse,79) output(22,worse,90) output(58,worse,10) output(58,worse,79) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(77,worse,10) output(77,worse,79) output(92,worse,10) output(9,worse,33) output(9,worse,100) output(9,worse,51) output(44,worse,79) output(65,worse,79) output(75,worse,79) output(100,eq,33) output(75,eq,16) output(84,eq,90) output(77,eq,16) output(67,eq,22) output(92,eq,79) output(9,eq,79) output(33,eq,51)
Optimization: 24 11
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,10) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,84) output(92,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,16) output(58,worse,77) output(84,worse,22) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,51) output(75,worse,16) output(100,eq,33) output(67,eq,79) output(84,eq,90) output(79,eq,22) output(58,eq,16) output(75,eq,65) output(67,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(92,eq,67) output(92,eq,22) output(92,eq,79)
Optimization: 23 11
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,10) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,16) output(22,worse,90) output(58,worse,77) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,51) output(75,worse,16) output(100,eq,33) output(84,eq,90) output(58,eq,16) output(75,eq,65) output(67,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(92,eq,79)
Optimization: 22 9
Answer: 24
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(67,worse,79) output(84,worse,22) output(92,worse,77) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,51) output(75,worse,16) output(100,eq,33) output(84,eq,90) output(77,eq,16) output(75,eq,65) output(67,eq,22) output(75,eq,44) output(92,eq,79)
Optimization: 19 9
Answer: 25
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrep(3))),2) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(22,worse,90) output(58,worse,77) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(9,worse,75) output(33,worse,75) output(16,eq,65) output(100,eq,33) output(16,eq,44) output(84,eq,90) output(67,eq,22) output(92,eq,79)
Optimization: 18 11
Answer: 26
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(84,better,22) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(22,worse,90) output(58,worse,77) output(67,worse,79) output(67,worse,90) output(67,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(100,eq,33) output(84,eq,90) output(58,eq,10) output(67,eq,22) output(92,eq,79) output(33,eq,75) output(33,eq,51)
Optimization: 17 12
Answer: 27
preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(67,worse,79) output(84,worse,22) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(33,worse,51) output(75,worse,16) output(10,eq,16) output(100,eq,33) output(84,eq,90) output(75,eq,65) output(67,eq,22) output(75,eq,44) output(92,eq,79)
Optimization: 16 11
Progression : [ 7;16] (Error: 1.28571)
Progression : [ 8;16] (Error: 1)
Progression : [ 9;16] (Error: 0.777778)
Progression : [10;16] (Error: 0.6)
Answer: 28
preference(1,(1,1),1,for(atom(hasPrep(7))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(4))),2) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(67,worse,79) output(84,worse,22) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(9,worse,33) output(75,worse,16) output(100,worse,33) output(84,eq,90) output(75,eq,65) output(67,eq,22) output(75,eq,44) output(92,eq,79)
Optimization: 15 10
Answer: 29
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(3))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasCost(1))),4) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,90) output(92,better,67) output(92,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(67,worse,79) output(84,worse,22) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,44) output(92,worse,65) output(100,worse,33) output(10,eq,16) output(84,eq,90) output(67,eq,22) output(92,eq,79) output(33,eq,75)
Optimization: 13 12
Progression : [11;13] (Error: 0.181818)
Progression : [12;13] (Error: 0.0833333)
Progression : [13;13] (Error: 0)
Progression : 13 [ 1;12] (Error: 11)
Progression : 13 [ 2;12] (Error: 5)
Answer: 30
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,79) output(16,worse,79) output(67,worse,79) output(84,worse,22) output(92,worse,77) output(44,worse,79) output(65,worse,79) output(10,eq,16) output(100,eq,33) output(84,eq,90) output(75,eq,79) output(67,eq,22) output(92,eq,79)
Optimization: 13 11
Progression : 13 [ 3;11] (Error: 2.66667)
Answer: 31
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(67,better,90) output(67,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,65) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(10,worse,79) output(16,worse,79) output(67,worse,79) output(84,worse,22) output(92,worse,77) output(44,worse,79) output(65,worse,79) output(10,eq,16) output(100,eq,33) output(84,eq,90) output(75,eq,79) output(67,eq,22) output(92,eq,79)
Optimization: 13 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.068 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 31+
  Optimum    : unknown
Optimization : 13 9
Bounds       : 13 [3;9]
Calls        : 1
Time         : 297.591s (Solving: 295.85s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.745s
Threads      : 4        (Winner: 4)

Choices      : 8291531  (Domain: 807058)
Conflicts    : 6843899  (Analyzed: 6843886)
Restarts     : 6995     (Average: 978.40 Last: 556006)
Model-Level  : 41.1    
Problems     : 21       (Average Length: 0.19 Splits: 0)
Lemmas       : 6935967  (Deleted: 6672881)
  Binary     : 608      (Ratio:   0.01%)
  Ternary    : 3441     (Ratio:   0.05%)
  Conflict   : 6843886  (Average Length:  174.6 Ratio:  98.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 92081    (Average Length:   30.9 Ratio:   1.33%) 
  Distributed: 30878    (Ratio:   0.45% Average LBD: 3.70) 
  Integrated : 92634    (Ratio: 300.00% Unit: 179 Average Jumps: 7.50)
Backjumps    : 6843886  (Average:  1.18 Max: 371 Sum: 8081165)
  Executed   : 6843872  (Average:  1.18 Max: 371 Sum: 8080885 Ratio: 100.00%)
  Bounded    : 14       (Average: 20.00 Max:  57 Sum:    280 Ratio:   0.00%)

Rules        : 199134  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15448   
Bodies       : 5925    
  Sum        : 161     
  Count      : 14      
Equivalences : 8266     (Atom=Atom: 1172 Body=Body: 552 Other: 6542)
Tight        : Yes
Variables    : 4550     (Eliminated:    0 Frozen: 3080)
Constraints  : 191536   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) 
}.
