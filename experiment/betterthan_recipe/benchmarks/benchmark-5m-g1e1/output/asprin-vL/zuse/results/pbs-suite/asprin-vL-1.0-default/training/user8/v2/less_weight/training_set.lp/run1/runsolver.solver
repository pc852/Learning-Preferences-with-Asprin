asprin_vL version 1.0
Reading from stdin
-:1300:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1310:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1325:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1406:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1667:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1680:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1857:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1986:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2058:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2062:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2062:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2068:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2167:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2193:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2313:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2347:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2369:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1217:1-16: info: no atoms over signature occur in program:
  output/3

-:1209:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1210:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,23) output(23,eq,72) output(72,eq,42) output(42,eq,90) output(90,eq,18) output(18,eq,51) output(79,eq,31) output(41,eq,92) output(32,eq,76) output(4,eq,72) output(42,eq,18) output(18,eq,37) output(90,eq,37) output(42,eq,37) output(72,eq,18) output(76,eq,72) output(92,eq,76) output(51,eq,31) output(90,eq,51) output(42,eq,51) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(7,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,42) output(32,eq,42) output(7,eq,42) output(78,eq,42) output(23,eq,90) output(4,eq,90) output(76,eq,90) output(7,eq,90) output(72,eq,51) output(23,eq,51) output(4,eq,51) output(18,eq,31) output(90,eq,31) output(42,eq,31) output(41,eq,76) output(32,eq,72) output(92,eq,72) output(23,eq,18) output(4,eq,18) output(76,eq,18) output(7,eq,18) output(72,eq,37) output(23,eq,37) output(4,eq,37) output(76,eq,37) output(32,eq,37) output(92,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,37) output(78,eq,18) output(32,eq,18) output(92,eq,18) output(41,eq,18) output(41,eq,72) output(72,eq,31) output(23,eq,31) output(4,eq,31) output(76,eq,31) output(32,eq,31) output(7,eq,31) output(78,eq,31) output(76,eq,51) output(32,eq,51) output(92,eq,51) output(41,eq,51) output(7,eq,51) output(78,eq,51) output(78,eq,90) output(32,eq,90) output(92,eq,90) output(41,eq,90) output(92,eq,42) output(41,eq,42) output(92,eq,31) output(41,eq,31) output(51,eq,79) output(92,eq,32) output(76,eq,4) output(37,eq,60) output(18,eq,60) output(41,eq,32) output(18,eq,79) output(90,eq,79) output(42,eq,79) output(72,eq,79) output(92,eq,4) output(41,eq,4) output(90,eq,60) output(42,eq,60) output(72,eq,60) output(23,eq,60) output(76,eq,60) output(92,eq,60) output(23,eq,79) output(76,eq,79) output(92,eq,79) output(41,eq,79) output(41,eq,60)
Optimization: 105 0
Answer: 2
preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(4,better,31) output(51,better,31) output(76,better,31) output(79,better,31) output(90,better,31) output(92,better,31) output(7,better,31) output(18,better,31) output(23,better,31) output(32,better,31) output(41,better,31) output(42,better,31) output(72,better,31) output(78,better,31) output(7,eq,23) output(23,eq,72) output(72,eq,42) output(42,eq,90) output(90,eq,18) output(18,eq,51) output(41,eq,92) output(32,eq,76) output(4,eq,72) output(42,eq,18) output(18,eq,37) output(90,eq,37) output(42,eq,37) output(72,eq,18) output(76,eq,72) output(92,eq,76) output(90,eq,51) output(42,eq,51) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(7,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,42) output(32,eq,42) output(7,eq,42) output(78,eq,42) output(23,eq,90) output(4,eq,90) output(76,eq,90) output(7,eq,90) output(72,eq,51) output(23,eq,51) output(4,eq,51) output(41,eq,76) output(32,eq,72) output(92,eq,72) output(23,eq,18) output(4,eq,18) output(76,eq,18) output(7,eq,18) output(72,eq,37) output(23,eq,37) output(4,eq,37) output(76,eq,37) output(32,eq,37) output(92,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,37) output(78,eq,18) output(32,eq,18) output(92,eq,18) output(41,eq,18) output(41,eq,72) output(76,eq,51) output(32,eq,51) output(92,eq,51) output(41,eq,51) output(7,eq,51) output(78,eq,51) output(78,eq,90) output(32,eq,90) output(92,eq,90) output(41,eq,90) output(92,eq,42) output(41,eq,42) output(51,eq,79) output(92,eq,32) output(76,eq,4) output(37,eq,60) output(18,eq,60) output(41,eq,32) output(18,eq,79) output(90,eq,79) output(42,eq,79) output(72,eq,79) output(92,eq,4) output(41,eq,4) output(90,eq,60) output(42,eq,60) output(72,eq,60) output(23,eq,60) output(76,eq,60) output(92,eq,60) output(23,eq,79) output(76,eq,79) output(92,eq,79) output(41,eq,79) output(41,eq,60)
Optimization: 91 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(3))),6) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(4,better,37) output(4,better,31) output(51,better,31) output(51,better,79) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,4) output(76,better,79) output(79,better,31) output(90,better,18) output(90,better,37) output(90,better,31) output(90,better,79) output(92,better,37) output(92,better,31) output(18,better,37) output(18,better,31) output(23,better,37) output(23,better,31) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(42,better,37) output(42,better,31) output(72,better,42) output(72,better,18) output(72,better,37) output(72,better,31) output(72,better,79) output(78,better,23) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(4,worse,72) output(4,worse,90) output(4,worse,51) output(37,worse,60) output(76,worse,51) output(90,worse,51) output(92,worse,76) output(92,worse,72) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(92,worse,60) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,37) output(7,worse,51) output(18,worse,51) output(18,worse,60) output(23,worse,72) output(23,worse,90) output(23,worse,51) output(23,worse,60) output(32,worse,51) output(41,worse,51) output(42,worse,90) output(42,worse,51) output(42,worse,60) output(72,worse,51) output(78,worse,72) output(78,worse,51) output(78,worse,90) output(32,eq,76) output(42,eq,18) output(76,eq,72) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(76,eq,90) output(41,eq,76) output(32,eq,72) output(23,eq,18) output(4,eq,18) output(92,eq,18) output(41,eq,72) output(7,eq,31) output(32,eq,90) output(41,eq,90) output(92,eq,42) output(41,eq,32) output(18,eq,79) output(42,eq,79) output(92,eq,4) output(90,eq,60) output(72,eq,60) output(76,eq,60) output(23,eq,79) output(92,eq,79) output(41,eq,60)
Optimization: 61 13
Progression : [ 5;61] (Error: 11.2)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(4))),5) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(4,better,72) output(4,better,42) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(76,better,51) output(76,better,60) output(79,better,31) output(90,better,51) output(90,better,60) output(92,better,76) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,32) output(92,better,60) output(18,better,51) output(18,better,37) output(18,better,60) output(23,better,51) output(23,better,60) output(32,better,76) output(32,better,51) output(32,better,90) output(41,better,76) output(41,better,51) output(41,better,90) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(72,better,90) output(72,better,51) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,37) output(78,better,51) output(78,better,90) output(51,worse,31) output(51,worse,79) output(76,worse,72) output(76,worse,42) output(76,worse,90) output(76,worse,18) output(76,worse,37) output(76,worse,31) output(76,worse,4) output(76,worse,79) output(90,worse,18) output(90,worse,37) output(90,worse,31) output(90,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,37) output(7,worse,31) output(7,worse,51) output(18,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,18) output(23,worse,37) output(23,worse,31) output(23,worse,79) output(32,worse,42) output(32,worse,18) output(32,worse,31) output(41,worse,92) output(41,worse,18) output(41,worse,42) output(41,worse,31) output(41,worse,4) output(41,worse,79) output(42,worse,79) output(72,worse,42) output(72,worse,18) output(72,worse,31) output(72,worse,79) output(78,worse,42) output(23,eq,90) output(18,eq,31) output(32,eq,72) output(72,eq,37) output(32,eq,37) output(41,eq,37) output(78,eq,18) output(41,eq,72) output(78,eq,31) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 56 9
Progression : [ 6;56] (Error: 8.33333)
Answer: 5
preference(1,(1,3),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(4,better,72) output(4,better,42) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(76,better,51) output(76,better,60) output(79,better,31) output(90,better,51) output(90,better,60) output(92,better,76) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,32) output(92,better,60) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,51) output(23,better,60) output(32,better,76) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,76) output(41,better,51) output(41,better,90) output(41,better,31) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,37) output(78,better,31) output(78,better,51) output(78,better,90) output(51,worse,31) output(51,worse,79) output(76,worse,72) output(76,worse,42) output(76,worse,90) output(76,worse,18) output(76,worse,37) output(76,worse,31) output(76,worse,4) output(76,worse,79) output(90,worse,18) output(90,worse,37) output(90,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,37) output(7,worse,31) output(7,worse,51) output(18,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,18) output(23,worse,37) output(23,worse,79) output(32,worse,42) output(32,worse,18) output(41,worse,92) output(41,worse,18) output(41,worse,42) output(41,worse,4) output(41,worse,79) output(42,worse,79) output(72,worse,42) output(72,worse,18) output(72,worse,79) output(78,worse,42) output(23,eq,90) output(90,eq,31) output(32,eq,72) output(72,eq,37) output(32,eq,37) output(41,eq,37) output(78,eq,18) output(41,eq,72) output(23,eq,31) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 51 6
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(4,better,31) output(51,better,31) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(92,better,37) output(92,better,51) output(92,better,31) output(92,better,60) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,18) output(37,worse,60) output(51,worse,79) output(76,worse,72) output(90,worse,18) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,90) output(92,worse,42) output(92,worse,32) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(23,worse,72) output(78,worse,72) output(42,eq,18) output(78,eq,23) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 28 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(51,better,31) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,4) output(92,better,60) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(37,worse,60) output(51,worse,79) output(76,worse,72) output(76,worse,42) output(92,worse,76) output(92,worse,72) output(92,worse,42) output(92,worse,32) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(18,worse,79) output(23,worse,72) output(78,worse,72) output(23,eq,42) output(7,eq,90) output(32,eq,72) output(41,eq,72) output(92,eq,90) output(41,eq,32) output(90,eq,79) output(92,eq,79)
Optimization: 25 14
Answer: 8
preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(4,better,31) output(51,better,31) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(92,better,37) output(92,better,51) output(92,better,31) output(92,better,60) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(51,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,90) output(92,worse,42) output(92,worse,32) output(32,worse,76) output(41,worse,76) output(7,eq,23) output(72,eq,42) output(32,eq,42) output(32,eq,72) output(4,eq,18) output(92,eq,18) output(41,eq,72) output(41,eq,42) output(37,eq,60) output(41,eq,32) output(18,eq,79) output(92,eq,4) output(92,eq,79)
Optimization: 24 12
Progression : [ 7;24] (Error: 2.42857)
Progression : [ 8;24] (Error: 2)
Progression : [ 9;24] (Error: 1.66667)
Progression : [10;24] (Error: 1.4)
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(4,better,37) output(4,better,31) output(51,better,31) output(51,better,79) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,31) output(90,better,79) output(90,better,60) output(92,better,37) output(92,better,31) output(92,better,4) output(92,better,60) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,37) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(37,worse,60) output(76,worse,72) output(90,worse,18) output(90,worse,51) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,51) output(92,worse,90) output(92,worse,42) output(92,worse,32) output(18,worse,51) output(42,worse,18) output(42,worse,51) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,79)
Optimization: 23 10
Progression : [11;23] (Error: 1.09091)
Progression : [12;23] (Error: 0.916667)
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasCost(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,37) output(4,better,31) output(51,better,31) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,51) output(92,better,90) output(92,better,31) output(92,better,4) output(92,better,60) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(4,worse,18) output(51,worse,79) output(90,worse,18) output(90,worse,51) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,42) output(92,worse,32) output(32,worse,76) output(41,worse,76) output(7,eq,23) output(42,eq,18) output(78,eq,23) output(32,eq,72) output(41,eq,72) output(37,eq,60) output(41,eq,32) output(92,eq,79)
Optimization: 22 12
Progression : [13;22] (Error: 0.692308)
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(4,better,37) output(4,better,31) output(51,better,31) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,31) output(92,better,4) output(92,better,60) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(37,worse,60) output(51,worse,79) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,42) output(92,worse,32) output(18,worse,79) output(32,worse,76) output(41,worse,76) output(23,eq,72) output(90,eq,18) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,79)
Optimization: 21 13
Progression : [14;21] (Error: 0.5)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(4,better,72) output(4,better,42) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(51,better,31) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,32) output(92,better,60) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,60) output(42,better,90) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(51,worse,79) output(90,worse,18) output(90,worse,79) output(92,worse,76) output(7,worse,23) output(18,worse,79) output(32,worse,76) output(41,worse,92) output(41,worse,76) output(41,worse,4) output(41,worse,79) output(42,worse,79) output(72,worse,79) output(42,eq,18) output(90,eq,37) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 20 11
Progression : [15;20] (Error: 0.333333)
Answer: 13
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),3) preference(1,(1,5),1,for(atom(hasCost(2))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(4,better,42) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(51,better,31) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,60) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(51,worse,79) output(90,worse,18) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,32) output(7,worse,23) output(18,worse,79) output(32,worse,76) output(41,worse,76) output(42,worse,79) output(42,eq,18) output(7,eq,72) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 19 10
Progression : [16;19] (Error: 0.1875)
Progression : [17;19] (Error: 0.117647)
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(4,better,42) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(51,better,31) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,60) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(51,worse,79) output(76,worse,72) output(90,worse,18) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,32) output(7,worse,23) output(7,worse,72) output(18,worse,79) output(42,worse,79) output(42,eq,18) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 18 13
Progression : [18;18] (Error: 0)
Progression : 18 [ 1;13] (Error: 12)
Progression : 18 [ 2;13] (Error: 5.5)
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(51,better,31) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,31) output(92,better,60) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(51,worse,79) output(76,worse,72) output(90,worse,18) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,42) output(92,worse,32) output(18,worse,79) output(23,eq,72) output(76,eq,42) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 18 12
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(51,better,31) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,31) output(92,better,60) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(51,worse,79) output(76,worse,72) output(90,worse,18) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,42) output(92,worse,32) output(18,worse,79) output(23,eq,72) output(76,eq,42) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 18 11
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(51,better,31) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(79,better,31) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,31) output(92,better,60) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(4,worse,72) output(4,worse,42) output(51,worse,79) output(76,worse,72) output(90,worse,18) output(90,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,42) output(92,worse,32) output(18,worse,79) output(23,eq,72) output(76,eq,42) output(32,eq,72) output(41,eq,72) output(41,eq,32) output(92,eq,4) output(92,eq,79)
Optimization: 18 10
Progression : 18 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.046 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 18 10
Bounds       : 18 [3;10]
Calls        : 1
Time         : 297.643s (Solving: 295.88s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.098s
Threads      : 4        (Winner: 4)

Choices      : 9378944  (Domain: 1128129)
Conflicts    : 8294067  (Analyzed: 8294050)
Restarts     : 7528     (Average: 1101.76 Last: 273689)
Model-Level  : 55.3    
Problems     : 24       (Average Length: 0.17 Splits: 0)
Lemmas       : 8461967  (Deleted: 8148054)
  Binary     : 210      (Ratio:   0.00%)
  Ternary    : 3837     (Ratio:   0.05%)
  Conflict   : 8294049  (Average Length:  127.7 Ratio:  98.02%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 167918   (Average Length:   46.9 Ratio:   1.98%) 
  Distributed: 57699    (Ratio:   0.70% Average LBD: 3.73) 
  Integrated : 173097   (Ratio: 300.00% Unit: 173 Average Jumps: 5.87)
Backjumps    : 8294050  (Average:  1.12 Max:  69 Sum: 9308439)
  Executed   : 8294039  (Average:  1.12 Max:  69 Sum: 9308321 Ratio: 100.00%)
  Bounded    : 11       (Average: 10.73 Max:  42 Sum:    118 Ratio:   0.00%)

Rules        : 199047  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15448   
Bodies       : 5932    
  Sum        : 168     
  Count      : 14      
Equivalences : 8266     (Atom=Atom: 1149 Body=Body: 532 Other: 6585)
Tight        : Yes
Variables    : 4561     (Eliminated:    0 Frozen: 3091)
Constraints  : 191472   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) 
}.
