asprin_vL version 1.0
Reading from stdin
-:1310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1227:1-16: info: no atoms over signature occur in program:
  output/3

-:1219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(39,eq,67) output(67,eq,50) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(47,eq,67) output(18,eq,47) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(62,eq,67) output(10,eq,58) output(58,eq,67) output(8,eq,67) output(21,eq,67) output(47,eq,50) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(67,eq,66) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(89,eq,47) output(62,eq,47) output(42,eq,67) output(18,eq,67) output(89,eq,67) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(21,eq,42) output(10,eq,42) output(47,eq,66) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(18,eq,50) output(89,eq,50) output(10,eq,67) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(89,eq,18) output(47,eq,61) output(67,eq,7) output(42,eq,61) output(62,eq,18) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(62,eq,84) output(50,eq,32) output(67,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(47,eq,7) output(42,eq,7) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(47,eq,32) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32) output(10,eq,32)
Optimization: 115 0
Answer: 2
preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(8,worse,7) output(21,worse,7) output(58,worse,7) output(62,worse,7) output(67,worse,7) output(89,worse,7) output(42,worse,7) output(47,worse,7) output(21,eq,58) output(58,eq,62) output(39,eq,67) output(67,eq,50) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(47,eq,67) output(18,eq,47) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(62,eq,67) output(58,eq,67) output(8,eq,67) output(21,eq,67) output(47,eq,50) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(67,eq,66) output(39,eq,66) output(61,eq,66) output(21,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(89,eq,47) output(62,eq,47) output(42,eq,67) output(18,eq,67) output(89,eq,67) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(21,eq,42) output(47,eq,66) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(21,eq,50) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(89,eq,18) output(47,eq,61) output(42,eq,61) output(62,eq,18) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(47,eq,84) output(62,eq,84) output(50,eq,32) output(67,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(10,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(47,eq,32) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32)
Optimization: 100 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(8,better,42) output(8,better,66) output(8,better,18) output(8,better,7) output(10,better,21) output(10,better,42) output(10,better,66) output(10,better,7) output(10,better,18) output(21,better,42) output(21,better,66) output(39,better,66) output(50,better,66) output(50,better,32) output(58,better,62) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(61,better,66) output(62,better,42) output(62,better,66) output(62,better,18) output(62,better,7) output(67,better,66) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,66) output(89,better,18) output(89,better,7) output(18,better,42) output(18,better,66) output(47,better,66) output(47,better,7) output(8,worse,89) output(8,worse,67) output(8,worse,50) output(8,worse,47) output(8,worse,39) output(8,worse,61) output(8,worse,32) output(8,worse,84) output(10,worse,58) output(10,worse,89) output(10,worse,47) output(10,worse,50) output(10,worse,67) output(10,worse,39) output(10,worse,61) output(10,worse,84) output(10,worse,32) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,89) output(21,worse,47) output(21,worse,50) output(21,worse,39) output(21,worse,61) output(21,worse,32) output(21,worse,84) output(39,worse,67) output(39,worse,50) output(58,worse,67) output(58,worse,50) output(58,worse,32) output(58,worse,84) output(61,worse,67) output(61,worse,50) output(62,worse,89) output(62,worse,67) output(62,worse,50) output(62,worse,47) output(62,worse,39) output(62,worse,84) output(62,worse,61) output(62,worse,32) output(66,worse,32) output(89,worse,67) output(89,worse,50) output(89,worse,84) output(89,worse,32) output(18,worse,47) output(18,worse,67) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,7) output(42,worse,32) output(42,worse,84) output(47,worse,67) output(47,worse,50) output(47,worse,61) output(47,worse,84) output(47,worse,32) output(67,eq,50) output(8,eq,62) output(58,eq,89) output(10,eq,8) output(10,eq,62) output(50,eq,84) output(67,eq,84) output(58,eq,39) output(21,eq,18) output(89,eq,61) output(21,eq,7) output(58,eq,61)
Optimization: 77 11
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrep(4))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,42) output(8,better,66) output(8,better,39) output(8,better,7) output(8,better,61) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(21,better,66) output(21,better,61) output(39,better,66) output(50,better,66) output(50,better,84) output(58,better,66) output(58,better,61) output(62,better,89) output(62,better,67) output(62,better,42) output(62,better,66) output(62,better,39) output(62,better,84) output(62,better,7) output(62,better,61) output(67,better,66) output(84,better,66) output(89,better,66) output(89,better,61) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,66) output(42,better,61) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(8,worse,32) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,47) output(21,worse,42) output(21,worse,50) output(21,worse,18) output(21,worse,7) output(21,worse,32) output(21,worse,84) output(39,worse,67) output(39,worse,50) output(50,worse,32) output(58,worse,62) output(58,worse,67) output(58,worse,50) output(58,worse,42) output(58,worse,47) output(58,worse,18) output(58,worse,7) output(58,worse,32) output(58,worse,84) output(61,worse,67) output(61,worse,50) output(62,worse,32) output(66,worse,32) output(67,worse,50) output(67,worse,32) output(89,worse,42) output(89,worse,47) output(89,worse,67) output(89,worse,50) output(89,worse,18) output(89,worse,7) output(89,worse,84) output(89,worse,32) output(42,worse,47) output(42,worse,50) output(42,worse,32) output(47,worse,32) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(47,eq,50) output(62,eq,50) output(8,eq,50) output(61,eq,66) output(21,eq,89) output(62,eq,47) output(42,eq,67) output(8,eq,47) output(18,eq,50) output(67,eq,7) output(62,eq,18) output(67,eq,84) output(58,eq,39) output(21,eq,39) output(8,eq,18) output(42,eq,7) output(42,eq,84) output(10,eq,32)
Optimization: 63 10
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,66) output(8,better,39) output(8,better,7) output(8,better,61) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,66) output(21,better,39) output(21,better,7) output(21,better,61) output(50,better,66) output(50,better,84) output(58,better,67) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(62,better,89) output(62,better,67) output(62,better,66) output(62,better,39) output(62,better,7) output(62,better,61) output(67,better,66) output(84,better,66) output(89,better,67) output(89,better,66) output(89,better,61) output(89,better,7) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(8,worse,50) output(8,worse,42) output(8,worse,47) output(8,worse,18) output(8,worse,32) output(8,worse,84) output(21,worse,8) output(21,worse,62) output(21,worse,47) output(21,worse,42) output(21,worse,50) output(21,worse,18) output(21,worse,32) output(21,worse,84) output(39,worse,67) output(39,worse,50) output(39,worse,66) output(50,worse,32) output(58,worse,62) output(58,worse,50) output(58,worse,42) output(58,worse,47) output(58,worse,18) output(58,worse,32) output(58,worse,84) output(61,worse,67) output(61,worse,50) output(62,worse,50) output(62,worse,42) output(62,worse,47) output(62,worse,18) output(62,worse,84) output(62,worse,32) output(66,worse,32) output(67,worse,50) output(67,worse,84) output(67,worse,32) output(89,worse,42) output(89,worse,47) output(89,worse,50) output(89,worse,18) output(89,worse,84) output(89,worse,32) output(42,worse,47) output(42,worse,50) output(42,worse,32) output(47,worse,32) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(47,eq,50) output(61,eq,66) output(21,eq,89) output(18,eq,50) output(67,eq,7) output(42,eq,84)
Optimization: 57 10
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(8,better,62) output(8,better,42) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(50,better,66) output(50,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(61,better,66) output(66,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,7) output(89,better,32) output(18,better,42) output(8,worse,89) output(8,worse,67) output(8,worse,50) output(8,worse,47) output(8,worse,66) output(8,worse,39) output(8,worse,7) output(8,worse,61) output(8,worse,32) output(8,worse,84) output(39,worse,67) output(39,worse,50) output(39,worse,66) output(62,worse,89) output(62,worse,67) output(62,worse,50) output(62,worse,47) output(62,worse,66) output(62,worse,39) output(62,worse,18) output(62,worse,84) output(62,worse,7) output(62,worse,61) output(62,worse,32) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(18,worse,47) output(18,worse,67) output(18,worse,66) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,7) output(42,worse,32) output(42,worse,84) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(47,worse,7) output(21,eq,58) output(47,eq,67) output(61,eq,50) output(62,eq,42) output(89,eq,50) output(50,eq,84) output(67,eq,32) output(8,eq,18) output(89,eq,61) output(47,eq,32) output(89,eq,84)
Optimization: 56 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,50) output(10,better,18) output(10,better,32) output(21,better,47) output(21,better,42) output(21,better,50) output(21,better,32) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,50) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,50) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,50) output(89,better,32) output(18,better,42) output(18,better,47) output(18,better,50) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,39) output(10,worse,7) output(10,worse,84) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,66) output(21,worse,39) output(21,worse,7) output(21,worse,61) output(21,worse,84) output(50,worse,66) output(50,worse,84) output(67,worse,7) output(67,worse,84) output(89,worse,67) output(89,worse,66) output(89,worse,61) output(89,worse,7) output(89,worse,84) output(18,worse,67) output(18,worse,66) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,7) output(42,worse,84) output(47,worse,67) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(47,worse,7) output(58,eq,62) output(8,eq,62) output(42,eq,47) output(61,eq,67) output(67,eq,66) output(61,eq,66) output(21,eq,89) output(10,eq,66) output(10,eq,67) output(62,eq,39) output(89,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,18) output(10,eq,61) output(47,eq,32) output(42,eq,32)
Optimization: 55 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,50) output(10,better,7) output(10,better,18) output(10,better,32) output(21,better,42) output(21,better,50) output(21,better,7) output(21,better,32) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,50) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,50) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,50) output(89,better,7) output(89,better,32) output(18,better,42) output(18,better,50) output(47,better,50) output(47,better,7) output(47,better,32) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,39) output(10,worse,84) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,66) output(21,worse,39) output(21,worse,61) output(21,worse,84) output(50,worse,66) output(50,worse,84) output(67,worse,84) output(89,worse,67) output(89,worse,66) output(89,worse,61) output(89,worse,84) output(18,worse,67) output(18,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(47,worse,67) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(58,eq,62) output(8,eq,62) output(61,eq,67) output(18,eq,47) output(67,eq,66) output(61,eq,66) output(21,eq,89) output(89,eq,47) output(21,eq,47) output(10,eq,66) output(10,eq,67) output(62,eq,39) output(89,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,18) output(42,eq,7) output(10,eq,61) output(42,eq,32)
Optimization: 51 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,50) output(10,better,7) output(10,better,18) output(10,better,32) output(21,better,42) output(21,better,50) output(21,better,7) output(21,better,32) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,50) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,50) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,50) output(89,better,7) output(89,better,32) output(18,better,42) output(18,better,50) output(42,better,7) output(47,better,50) output(47,better,7) output(47,better,32) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,66) output(10,worse,67) output(10,worse,39) output(10,worse,61) output(10,worse,84) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,66) output(21,worse,39) output(21,worse,61) output(21,worse,84) output(50,worse,66) output(50,worse,84) output(67,worse,84) output(89,worse,67) output(89,worse,66) output(89,worse,61) output(89,worse,84) output(18,worse,67) output(18,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(47,worse,67) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(58,eq,62) output(8,eq,62) output(61,eq,67) output(18,eq,47) output(67,eq,66) output(61,eq,66) output(21,eq,89) output(89,eq,47) output(21,eq,47) output(62,eq,39) output(89,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,18) output(42,eq,32)
Optimization: 50 11
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrep(3))),2) preference(1,(1,10),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(8,better,67) output(8,better,42) output(8,better,66) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,61) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,66) output(62,better,84) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,67) output(42,better,32) output(42,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(8,worse,89) output(8,worse,47) output(8,worse,18) output(10,worse,21) output(10,worse,58) output(10,worse,89) output(10,worse,47) output(10,worse,18) output(61,worse,50) output(62,worse,89) output(62,worse,47) output(62,worse,18) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(84,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,7) output(21,eq,58) output(8,eq,62) output(58,eq,89) output(10,eq,8) output(39,eq,50) output(62,eq,50) output(8,eq,50) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(42,eq,66) output(10,eq,50) output(62,eq,39) output(89,eq,18) output(42,eq,61) output(67,eq,84) output(8,eq,39) output(10,eq,39) output(67,eq,32) output(58,eq,18) output(21,eq,18) output(62,eq,7) output(8,eq,7) output(10,eq,7)
Optimization: 43 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(3))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,32) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,50) output(21,better,18) output(21,better,7) output(21,better,32) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,50) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,7) output(89,better,32) output(18,better,42) output(18,better,47) output(42,better,7) output(47,better,7) output(47,better,32) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,39) output(10,worse,84) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,39) output(21,worse,84) output(50,worse,66) output(50,worse,84) output(61,worse,67) output(67,worse,84) output(89,worse,67) output(89,worse,66) output(89,worse,61) output(89,worse,84) output(18,worse,67) output(18,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(47,worse,67) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(8,eq,62) output(61,eq,66) output(21,eq,66) output(18,eq,50) output(89,eq,50) output(10,eq,67) output(89,eq,18) output(21,eq,61) output(42,eq,32)
Optimization: 41 11
Answer: 12
preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,42) output(21,better,66) output(21,better,61) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,66) output(84,better,66) output(89,better,42) output(89,better,67) output(89,better,66) output(89,better,61) output(89,better,84) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,66) output(42,better,61) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,50) output(21,worse,39) output(21,worse,7) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(67,worse,50) output(67,worse,7) output(67,worse,32) output(89,worse,50) output(89,worse,7) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,7) output(42,worse,32) output(42,worse,84) output(47,worse,50) output(47,worse,7) output(58,eq,62) output(8,eq,62) output(18,eq,47) output(61,eq,66) output(21,eq,89) output(89,eq,47) output(21,eq,47) output(62,eq,39) output(89,eq,18) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,18) output(47,eq,32) output(21,eq,32) output(89,eq,32)
Optimization: 39 8
Answer: 13
preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,66) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,42) output(21,better,66) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,66) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,66) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,66) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,67) output(89,better,66) output(89,better,61) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,66) output(42,better,61) output(42,better,32) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(8,worse,47) output(8,worse,18) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,47) output(21,worse,50) output(21,worse,39) output(21,worse,18) output(21,worse,7) output(58,worse,47) output(58,worse,18) output(61,worse,67) output(61,worse,50) output(62,worse,47) output(62,worse,18) output(67,worse,50) output(67,worse,7) output(89,worse,47) output(89,worse,50) output(89,worse,18) output(89,worse,7) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,7) output(42,worse,84) output(58,eq,62) output(8,eq,62) output(18,eq,47) output(61,eq,66) output(21,eq,89) output(10,eq,47) output(62,eq,39) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(10,eq,18)
Optimization: 38 8
Progression : [ 1;38] (Error: 37)
Answer: 14
preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,66) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,66) output(67,better,7) output(84,better,66) output(89,better,67) output(89,better,66) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,47) output(21,worse,42) output(21,worse,50) output(21,worse,39) output(21,worse,18) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(67,worse,50) output(89,worse,42) output(89,worse,47) output(89,worse,50) output(89,worse,18) output(18,worse,50) output(42,worse,50) output(47,worse,50) output(58,eq,62) output(8,eq,62) output(18,eq,42) output(42,eq,47) output(18,eq,47) output(61,eq,66) output(21,eq,89) output(62,eq,39) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(67,eq,32)
Optimization: 31 8
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(0))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(61,better,50) output(61,better,66) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,7) output(67,better,84) output(67,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,39) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,89) output(21,worse,39) output(84,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,7) output(42,worse,84) output(58,eq,62) output(67,eq,50) output(8,eq,62) output(18,eq,47) output(50,eq,66) output(67,eq,66) output(10,eq,89) output(21,eq,47) output(62,eq,39) output(58,eq,39) output(8,eq,39) output(21,eq,18) output(42,eq,32)
Optimization: 30 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(0))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(61,better,50) output(61,better,66) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,7) output(67,better,84) output(67,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,84) output(47,better,7) output(47,better,32) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,39) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,89) output(21,worse,39) output(84,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,7) output(42,worse,84) output(58,eq,62) output(67,eq,50) output(8,eq,62) output(18,eq,47) output(50,eq,66) output(67,eq,66) output(10,eq,89) output(62,eq,39) output(47,eq,61) output(58,eq,39) output(8,eq,39) output(42,eq,32)
Optimization: 29 12
Answer: 17
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(61,better,66) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,7) output(42,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(8,worse,89) output(8,worse,50) output(21,worse,50) output(39,worse,50) output(58,worse,50) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(67,worse,50) output(67,worse,84) output(89,worse,50) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,84) output(47,worse,50) output(47,worse,84) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(67,eq,66) output(21,eq,89) output(10,eq,50) output(42,eq,61) output(62,eq,84) output(8,eq,84)
Optimization: 27 10
Answer: 18
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(8,worse,89) output(8,worse,50) output(21,worse,50) output(39,worse,50) output(58,worse,50) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(89,worse,50) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,84) output(47,worse,50) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(39,eq,66) output(61,eq,66) output(21,eq,89) output(10,eq,50) output(47,eq,84)
Optimization: 26 10
Answer: 19
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(8,worse,89) output(8,worse,50) output(39,worse,50) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,84) output(47,worse,50) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(58,eq,50) output(61,eq,66) output(21,eq,89) output(21,eq,50) output(89,eq,50) output(67,eq,7) output(47,eq,84)
Optimization: 25 10
Answer: 20
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasPrep(3))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(8,worse,89) output(8,worse,50) output(39,worse,50) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,84) output(47,worse,50) output(47,worse,84) output(21,eq,58) output(8,eq,62) output(58,eq,89) output(58,eq,50) output(61,eq,66) output(21,eq,89) output(21,eq,50) output(89,eq,50) output(67,eq,7)
Optimization: 24 10
Answer: 21
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(8,worse,89) output(39,worse,50) output(61,worse,50) output(62,worse,89) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,84) output(47,worse,50) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(62,eq,50) output(8,eq,50) output(61,eq,66) output(21,eq,89)
Optimization: 20 10
Progression : [ 2;20] (Error: 9)
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(3))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,66) output(67,better,7) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(21,worse,8) output(21,worse,62) output(39,worse,50) output(58,worse,62) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(67,worse,50) output(67,worse,84) output(21,eq,58) output(8,eq,62) output(58,eq,89) output(47,eq,50) output(61,eq,66) output(21,eq,89) output(89,eq,18) output(67,eq,32) output(58,eq,18) output(21,eq,18)
Optimization: 19 9
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,58) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(10,worse,8) output(10,worse,62) output(21,worse,8) output(21,worse,62) output(58,worse,62) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(42,worse,47) output(21,eq,58) output(67,eq,50) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(61,eq,66) output(21,eq,89)
Optimization: 16 9
Progression : [ 3;16] (Error: 4.33333)
Progression : [ 4;16] (Error: 3)
Answer: 24
preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,62) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(61,better,67) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(67,better,7) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(8,worse,89) output(39,worse,50) output(61,worse,50) output(62,worse,89) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(42,worse,47) output(42,worse,50) output(21,eq,58) output(8,eq,62) output(18,eq,47) output(58,eq,89) output(61,eq,66) output(21,eq,89)
Optimization: 15 7
Answer: 25
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(21,worse,8) output(21,worse,62) output(58,worse,62) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(42,worse,47) output(21,eq,58) output(67,eq,50) output(8,eq,62) output(18,eq,47) output(61,eq,66) output(89,eq,47) output(89,eq,18)
Optimization: 14 9
Answer: 26
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(3))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(21,worse,8) output(21,worse,62) output(58,worse,62) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(21,eq,58) output(67,eq,50) output(8,eq,62) output(47,eq,67) output(47,eq,50) output(61,eq,66) output(89,eq,18)
Optimization: 13 10
Progression : [ 5;13] (Error: 1.6)
Progression : [ 6;13] (Error: 1.16667)
Answer: 27
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(50,better,66) output(50,better,84) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(84,better,66) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(18,better,50) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(21,worse,8) output(21,worse,62) output(58,worse,62) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(21,eq,58) output(8,eq,62) output(47,eq,67) output(61,eq,66) output(89,eq,18) output(50,eq,32)
Optimization: 12 10
Progression : [ 7;12] (Error: 0.714286)
Progression : [ 8;12] (Error: 0.5)
Progression : [ 9;12] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.034 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 27+
  Optimum    : unknown
Optimization : 12 10
Bounds       : [9;12] [0;10]
Calls        : 1
Time         : 297.704s (Solving: 295.83s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.804s
Threads      : 4        (Winner: 4)

Choices      : 9251380  (Domain: 1063971)
Conflicts    : 7770241  (Analyzed: 7770232)
Restarts     : 5428     (Average: 1431.51 Last: 741353)
Model-Level  : 34.0    
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 8012844  (Deleted: 7756381)
  Binary     : 96       (Ratio:   0.00%)
  Ternary    : 8074     (Ratio:   0.10%)
  Conflict   : 7770232  (Average Length:   74.4 Ratio:  96.97%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 242612   (Average Length:   28.3 Ratio:   3.03%) 
  Distributed: 81126    (Ratio:   1.04% Average LBD: 3.69) 
  Integrated : 243378   (Ratio: 300.00% Unit: 225 Average Jumps: 3.60)
Backjumps    : 7770232  (Average:  1.18 Max: 115 Sum: 9178230)
  Executed   : 7770229  (Average:  1.18 Max: 115 Sum: 9178078 Ratio: 100.00%)
  Bounded    : 3        (Average: 50.67 Max: 114 Sum:    152 Ratio:   0.00%)

Rules        : 216325  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16446   
Bodies       : 6084    
  Sum        : 230     
  Count      : 14      
Equivalences : 6021     (Atom=Atom: 1163 Body=Body: 474 Other: 4384)
Tight        : Yes
Variables    : 4683     (Eliminated:    0 Frozen: 3213)
Constraints  : 207956   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.
