asprin_vL version 1.0
Reading from stdin
-:1302:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1312:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1327:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1408:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1669:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1682:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1859:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1988:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2060:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2064:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2064:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2070:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2169:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2195:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2315:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2349:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2371:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1219:1-16: info: no atoms over signature occur in program:
  output/3

-:1211:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1212:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(8,eq,99) output(52,eq,67) output(67,eq,76) output(76,eq,91) output(91,eq,51) output(51,eq,71) output(71,eq,57) output(53,eq,99) output(99,eq,30) output(30,eq,60) output(60,eq,76) output(94,eq,98) output(98,eq,71) output(94,eq,71) output(78,eq,98) output(30,eq,76) output(99,eq,60) output(8,eq,30) output(53,eq,30) output(51,eq,57) output(98,eq,57) output(91,eq,71) output(76,eq,51) output(67,eq,91) output(60,eq,91) output(52,eq,76) output(55,eq,67) output(99,eq,67) output(8,eq,67) output(53,eq,67) output(55,eq,76) output(99,eq,76) output(30,eq,91) output(99,eq,91) output(52,eq,91) output(55,eq,91) output(67,eq,51) output(60,eq,51) output(30,eq,51) output(52,eq,51) output(76,eq,71) output(67,eq,71) output(60,eq,71) output(94,eq,57) output(78,eq,57) output(91,eq,57) output(76,eq,57) output(8,eq,60) output(53,eq,60) output(8,eq,76) output(53,eq,76) output(76,eq,98) output(67,eq,98) output(60,eq,98) output(78,eq,71) output(30,eq,71) output(99,eq,71) output(52,eq,71) output(55,eq,71) output(30,eq,98) output(99,eq,98) output(8,eq,98) output(53,eq,98) output(52,eq,98) output(55,eq,98) output(67,eq,57) output(60,eq,57) output(30,eq,57) output(52,eq,57) output(55,eq,57) output(99,eq,57) output(8,eq,57) output(53,eq,57) output(8,eq,71) output(53,eq,71) output(55,eq,51) output(99,eq,51) output(8,eq,51) output(53,eq,51) output(8,eq,91) output(53,eq,91) output(99,eq,55) output(76,eq,78) output(71,eq,17) output(51,eq,17) output(98,eq,17) output(76,eq,94) output(67,eq,78) output(60,eq,78) output(99,eq,52) output(53,eq,55) output(53,eq,52) output(30,eq,78) output(99,eq,78) output(67,eq,94) output(60,eq,94) output(30,eq,94) output(91,eq,17) output(76,eq,17) output(67,eq,17) output(60,eq,17) output(30,eq,17) output(99,eq,17) output(53,eq,17) output(99,eq,94) output(53,eq,94) output(53,eq,78)
Optimization: 107 0
Progression : [  2;107] (Error: 52.5)
Answer: 2
preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(51,better,71) output(51,better,57) output(51,better,17) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(91,better,57) output(91,better,17) output(99,better,30) output(99,better,60) output(99,better,67) output(99,better,76) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,51) output(8,worse,91) output(30,worse,91) output(30,worse,51) output(30,worse,78) output(52,worse,91) output(52,worse,51) output(53,worse,99) output(53,worse,51) output(53,worse,91) output(53,worse,78) output(55,worse,91) output(55,worse,51) output(60,worse,91) output(60,worse,51) output(60,worse,78) output(67,worse,91) output(67,worse,51) output(67,worse,78) output(76,worse,91) output(76,worse,51) output(76,worse,78) output(52,eq,67) output(67,eq,76) output(91,eq,51) output(71,eq,57) output(30,eq,60) output(60,eq,76) output(94,eq,98) output(98,eq,71) output(94,eq,71) output(30,eq,76) output(8,eq,30) output(53,eq,30) output(98,eq,57) output(52,eq,76) output(55,eq,67) output(8,eq,67) output(53,eq,67) output(55,eq,76) output(99,eq,91) output(76,eq,71) output(67,eq,71) output(60,eq,71) output(94,eq,57) output(76,eq,57) output(8,eq,60) output(53,eq,60) output(8,eq,76) output(53,eq,76) output(76,eq,98) output(67,eq,98) output(60,eq,98) output(30,eq,71) output(52,eq,71) output(55,eq,71) output(30,eq,98) output(8,eq,98) output(53,eq,98) output(52,eq,98) output(55,eq,98) output(67,eq,57) output(60,eq,57) output(30,eq,57) output(52,eq,57) output(55,eq,57) output(8,eq,57) output(53,eq,57) output(8,eq,71) output(53,eq,71) output(99,eq,51) output(71,eq,17) output(98,eq,17) output(76,eq,94) output(53,eq,55) output(53,eq,52) output(99,eq,78) output(67,eq,94) output(60,eq,94) output(30,eq,94) output(76,eq,17) output(67,eq,17) output(60,eq,17) output(30,eq,17) output(53,eq,17) output(53,eq,94)
Optimization: 87 1
Progression : [ 3;87] (Error: 28)
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,78) output(30,better,94) output(52,better,76) output(52,better,91) output(52,better,51) output(53,better,99) output(53,better,60) output(53,better,76) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,94) output(53,better,78) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,78) output(67,better,94) output(8,worse,30) output(8,worse,67) output(8,worse,98) output(8,worse,57) output(8,worse,71) output(51,worse,71) output(51,worse,57) output(51,worse,17) output(55,worse,67) output(55,worse,71) output(55,worse,98) output(55,worse,57) output(60,worse,71) output(60,worse,98) output(60,worse,57) output(60,worse,17) output(76,worse,71) output(76,worse,57) output(76,worse,98) output(76,worse,17) output(94,worse,98) output(94,worse,71) output(94,worse,57) output(78,worse,98) output(78,worse,57) output(78,worse,71) output(91,worse,71) output(91,worse,57) output(91,worse,17) output(99,worse,30) output(99,worse,67) output(99,worse,71) output(99,worse,98) output(99,worse,57) output(99,worse,52) output(99,worse,17) output(8,eq,99) output(52,eq,67) output(76,eq,91) output(91,eq,51) output(71,eq,57) output(60,eq,76) output(98,eq,71) output(99,eq,60) output(53,eq,30) output(98,eq,57) output(76,eq,51) output(60,eq,91) output(53,eq,67) output(55,eq,76) output(99,eq,76) output(99,eq,91) output(55,eq,91) output(60,eq,51) output(67,eq,71) output(8,eq,60) output(8,eq,76) output(67,eq,98) output(30,eq,71) output(52,eq,71) output(30,eq,98) output(53,eq,98) output(52,eq,98) output(67,eq,57) output(30,eq,57) output(52,eq,57) output(53,eq,57) output(53,eq,71) output(55,eq,51) output(99,eq,51) output(8,eq,51) output(8,eq,91) output(99,eq,55) output(76,eq,78) output(71,eq,17) output(98,eq,17) output(76,eq,94) output(60,eq,78) output(53,eq,52) output(99,eq,78) output(60,eq,94) output(67,eq,17) output(30,eq,17) output(53,eq,17) output(99,eq,94)
Optimization: 85 4
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),2) preference(1,(1,14),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,91) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,78) output(60,better,94) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,60) output(30,worse,76) output(30,worse,51) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(52,worse,51) output(53,worse,67) output(53,worse,76) output(53,worse,55) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(60,worse,76) output(60,worse,17) output(71,worse,57) output(71,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,60) output(99,worse,67) output(99,worse,76) output(99,worse,51) output(99,worse,55) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(98,eq,57) output(94,eq,57) output(91,eq,57) output(8,eq,60) output(53,eq,60) output(76,eq,17) output(67,eq,17)
Optimization: 42 13
Progression : [ 4;42] (Error: 9.5)
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,60) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,91) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,60) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,91) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,94) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,76) output(30,worse,51) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(52,worse,51) output(53,worse,67) output(53,worse,76) output(53,worse,55) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(60,worse,76) output(60,worse,51) output(60,worse,78) output(60,worse,17) output(71,worse,57) output(71,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,67) output(99,worse,76) output(99,worse,51) output(99,worse,55) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(99,eq,60) output(98,eq,57) output(94,eq,57) output(91,eq,57) output(76,eq,17) output(67,eq,17)
Optimization: 41 14
Progression : [ 5;41] (Error: 7.2)
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,60) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,91) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,60) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,94) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,55) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,60) output(30,worse,76) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(55,worse,51) output(60,worse,76) output(60,worse,78) output(60,worse,17) output(71,worse,57) output(71,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,60) output(99,worse,67) output(99,worse,76) output(99,worse,51) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(98,eq,57) output(30,eq,51) output(52,eq,51) output(94,eq,57) output(91,eq,57) output(76,eq,17) output(67,eq,17)
Optimization: 40 13
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,78) output(60,better,94) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(98,better,71) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,55) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,60) output(30,worse,76) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(55,worse,51) output(60,worse,76) output(60,worse,17) output(71,worse,57) output(71,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,60) output(99,worse,67) output(99,worse,76) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(98,eq,57) output(94,eq,57) output(91,eq,57) output(8,eq,60) output(53,eq,60) output(99,eq,51) output(76,eq,17) output(67,eq,17)
Optimization: 39 13
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,78) output(60,better,94) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,55) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,60) output(30,worse,76) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(55,worse,51) output(60,worse,76) output(60,worse,17) output(71,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,60) output(99,worse,67) output(99,worse,76) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(8,eq,60) output(53,eq,60) output(99,eq,51) output(76,eq,17) output(67,eq,17)
Optimization: 35 14
Progression : [ 6;35] (Error: 4.83333)
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,60) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,60) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,60) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,76) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(60,worse,76) output(60,worse,78) output(60,worse,17) output(71,worse,57) output(71,worse,17) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,67) output(99,worse,76) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(51,eq,57) output(60,eq,91) output(60,eq,98) output(60,eq,94) output(76,eq,17) output(67,eq,17)
Optimization: 34 14
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),3) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),6) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,60) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,60) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,60) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,76) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(60,worse,76) output(60,worse,78) output(60,worse,17) output(71,worse,17) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,67) output(99,worse,76) output(99,worse,55) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(60,eq,91) output(60,eq,98) output(60,eq,94) output(76,eq,17) output(67,eq,17)
Optimization: 33 14
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),6) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,60) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,60) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,60) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,76) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(60,worse,76) output(60,worse,78) output(60,worse,17) output(71,worse,17) output(91,worse,17) output(98,worse,17) output(99,worse,30) output(99,worse,67) output(99,worse,76) output(99,worse,52) output(99,worse,78) output(99,worse,17) output(67,eq,76) output(94,eq,98) output(60,eq,91) output(60,eq,98) output(60,eq,94) output(76,eq,17) output(67,eq,17)
Optimization: 32 14
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(8,better,99) output(8,better,30) output(8,better,60) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,60) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,94) output(53,better,78) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,78) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,78) output(76,better,94) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,60) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,94) output(8,worse,67) output(8,worse,76) output(30,worse,76) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(52,worse,76) output(53,worse,67) output(53,worse,76) output(53,worse,17) output(55,worse,67) output(55,worse,76) output(60,worse,76) output(60,worse,78) output(60,worse,94) output(60,worse,17) output(71,worse,17) output(76,worse,17) output(91,worse,17) output(98,worse,17) output(99,worse,67) output(99,worse,76) output(99,worse,17) output(71,eq,57) output(99,eq,30) output(60,eq,91) output(60,eq,98) output(99,eq,52) output(30,eq,78) output(99,eq,78) output(67,eq,17)
Optimization: 31 13
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrep(4))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(51,better,71) output(51,better,57) output(52,better,76) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,67) output(53,better,60) output(53,better,76) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,17) output(53,better,94) output(53,better,78) output(55,better,76) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,94) output(60,better,17) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,94) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,94) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,67) output(99,better,76) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,30) output(8,worse,67) output(8,worse,60) output(30,worse,60) output(30,worse,78) output(30,worse,17) output(51,worse,17) output(52,worse,67) output(67,worse,78) output(71,worse,17) output(76,worse,78) output(76,worse,17) output(91,worse,17) output(98,worse,17) output(71,eq,57) output(99,eq,60) output(55,eq,67) output(8,eq,76) output(60,eq,78) output(99,eq,78) output(67,eq,17)
Optimization: 22 13
Progression : [ 7;22] (Error: 2.14286)
Progression : [ 8;22] (Error: 1.75)
Progression : [ 9;22] (Error: 1.44444)
Progression : [10;22] (Error: 1.2)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),3) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(30,better,17) output(51,better,71) output(51,better,57) output(52,better,67) output(52,better,76) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,67) output(53,better,60) output(53,better,76) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,17) output(53,better,94) output(53,better,78) output(55,better,67) output(55,better,76) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,17) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,67) output(99,better,76) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,30) output(8,worse,67) output(8,worse,60) output(30,worse,78) output(51,worse,17) output(60,worse,78) output(67,worse,78) output(67,worse,94) output(71,worse,17) output(76,worse,78) output(76,worse,94) output(76,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(71,eq,57) output(8,eq,76) output(99,eq,78) output(60,eq,94) output(67,eq,17)
Optimization: 21 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(3))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(30,better,17) output(51,better,71) output(51,better,57) output(52,better,67) output(52,better,76) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,67) output(53,better,60) output(53,better,76) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,17) output(53,better,94) output(53,better,78) output(55,better,67) output(55,better,76) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,17) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,67) output(99,better,76) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,30) output(8,worse,67) output(8,worse,60) output(30,worse,78) output(51,worse,17) output(60,worse,78) output(67,worse,78) output(67,worse,94) output(71,worse,17) output(76,worse,78) output(76,worse,94) output(76,worse,17) output(91,worse,51) output(91,worse,17) output(98,worse,17) output(8,eq,76) output(99,eq,78) output(60,eq,94) output(67,eq,17)
Optimization: 20 12
Progression : [11;20] (Error: 0.818182)
Progression : [12;20] (Error: 0.666667)
Progression : [13;20] (Error: 0.538462)
Progression : [14;20] (Error: 0.428571)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),6) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(30,better,17) output(51,better,71) output(51,better,57) output(52,better,67) output(52,better,76) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,67) output(53,better,60) output(53,better,76) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,17) output(53,better,94) output(53,better,78) output(55,better,76) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,94) output(60,better,17) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(67,better,94) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,67) output(99,better,76) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,30) output(8,worse,67) output(8,worse,60) output(30,worse,78) output(51,worse,17) output(55,worse,67) output(60,worse,78) output(67,worse,78) output(71,worse,17) output(76,worse,78) output(76,worse,94) output(76,worse,17) output(91,worse,17) output(98,worse,17) output(30,eq,60) output(8,eq,76) output(99,eq,78) output(67,eq,17)
Optimization: 19 12
Progression : [15;19] (Error: 0.266667)
Progression : [16;19] (Error: 0.1875)
Progression : [17;19] (Error: 0.117647)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(3))),6) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(8,better,67) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(30,better,17) output(51,better,71) output(51,better,57) output(52,better,67) output(52,better,76) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,67) output(53,better,60) output(53,better,76) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,17) output(53,better,94) output(53,better,78) output(55,better,67) output(55,better,76) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,94) output(60,better,17) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,94) output(76,better,17) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,67) output(99,better,76) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,30) output(30,worse,78) output(51,worse,17) output(60,worse,78) output(67,worse,76) output(67,worse,78) output(71,worse,17) output(76,worse,78) output(91,worse,17) output(98,worse,17) output(60,eq,76) output(8,eq,60) output(8,eq,76) output(99,eq,78) output(67,eq,94) output(67,eq,17)
Optimization: 17 13
Progression : 17 [ 1;13] (Error: 12)
Progression : 17 [ 2;13] (Error: 5.5)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasPrep(3))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(8,better,67) output(8,better,98) output(8,better,57) output(8,better,71) output(8,better,51) output(8,better,91) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,71) output(30,better,98) output(30,better,57) output(30,better,94) output(30,better,17) output(51,better,71) output(51,better,57) output(52,better,67) output(52,better,76) output(52,better,91) output(52,better,51) output(52,better,71) output(52,better,98) output(52,better,57) output(53,better,99) output(53,better,30) output(53,better,67) output(53,better,60) output(53,better,76) output(53,better,98) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(53,better,55) output(53,better,52) output(53,better,17) output(53,better,94) output(53,better,78) output(55,better,67) output(55,better,76) output(55,better,91) output(55,better,71) output(55,better,98) output(55,better,57) output(55,better,51) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,98) output(60,better,57) output(60,better,94) output(60,better,17) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,98) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(76,better,98) output(76,better,94) output(76,better,17) output(94,better,98) output(94,better,71) output(94,better,57) output(78,better,98) output(78,better,57) output(78,better,71) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,67) output(99,better,76) output(99,better,91) output(99,better,71) output(99,better,98) output(99,better,57) output(99,better,51) output(99,better,55) output(99,better,52) output(99,better,17) output(99,better,94) output(8,worse,99) output(8,worse,30) output(30,worse,78) output(51,worse,17) output(60,worse,78) output(67,worse,76) output(67,worse,78) output(71,worse,17) output(76,worse,78) output(91,worse,17) output(98,worse,17) output(60,eq,76) output(8,eq,60) output(8,eq,76) output(99,eq,78) output(67,eq,94) output(67,eq,17)
Optimization: 17 12
Progression : 17 [ 3;12] (Error: 3)
Progression : 17 [ 4;12] (Error: 2)
Progression : 17 [ 5;12] (Error: 1.4)
Progression : 17 [ 6;12] (Error: 1)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.025 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 17 12
Bounds       : 17 [6;12]
Calls        : 1
Time         : 297.695s (Solving: 295.94s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.299s
Threads      : 4        (Winner: 4)

Choices      : 9264181  (Domain: 860287)
Conflicts    : 7816791  (Analyzed: 7816769)
Restarts     : 7152     (Average: 1092.95 Last: 491000)
Model-Level  : 40.2    
Problems     : 27       (Average Length: 0.15 Splits: 0)
Lemmas       : 7914122  (Deleted: 7719162)
  Binary     : 503      (Ratio:   0.01%)
  Ternary    : 4508     (Ratio:   0.06%)
  Conflict   : 7816767  (Average Length:  170.7 Ratio:  98.77%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 97355    (Average Length:   23.8 Ratio:   1.23%) 
  Distributed: 35934    (Ratio:   0.46% Average LBD: 3.69) 
  Integrated : 107802   (Ratio: 300.00% Unit: 239 Average Jumps: 5.77)
Backjumps    : 7816769  (Average:  1.16 Max: 351 Sum: 9103873)
  Executed   : 7816728  (Average:  1.16 Max: 351 Sum: 9103542 Ratio: 100.00%)
  Bounded    : 41       (Average:  8.07 Max:  87 Sum:    331 Ratio:   0.00%)

Rules        : 202442  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15650   
Bodies       : 5973    
  Sum        : 191     
  Count      : 14      
Equivalences : 8404     (Atom=Atom: 1136 Body=Body: 498 Other: 6770)
Tight        : Yes
Variables    : 4604     (Eliminated:    0 Frozen: 3134)
Constraints  : 194732   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) 
}.
