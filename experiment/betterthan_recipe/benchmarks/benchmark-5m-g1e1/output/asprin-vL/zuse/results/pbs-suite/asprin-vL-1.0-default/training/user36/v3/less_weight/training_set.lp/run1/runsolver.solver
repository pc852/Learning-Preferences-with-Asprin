asprin_vL version 1.0
Reading from stdin
-:1283:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1293:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1308:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1389:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1650:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1663:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1840:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1969:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2041:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2045:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2045:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2051:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2150:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2176:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2296:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2352:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1200:1-16: info: no atoms over signature occur in program:
  output/3

-:1192:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1193:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Progression : [1;inf]
Answer: 1
preference(1,less(weight)) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(52,eq,51) output(51,eq,67) output(99,eq,91) output(8,eq,55) output(17,eq,86) output(78,eq,62) output(62,eq,25) output(25,eq,75) output(62,eq,75) output(78,eq,25) output(94,eq,62) output(52,eq,86) output(76,eq,91) output(52,eq,67) output(55,eq,51) output(57,eq,52) output(8,eq,52) output(57,eq,51) output(8,eq,51) output(55,eq,67) output(57,eq,67) output(8,eq,67) output(67,eq,91) output(51,eq,91) output(55,eq,86) output(57,eq,86) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(94,eq,25) output(86,eq,25) output(78,eq,75) output(94,eq,75) output(86,eq,75) output(17,eq,75) output(52,eq,75) output(55,eq,75) output(17,eq,25) output(52,eq,25) output(55,eq,25) output(57,eq,25) output(8,eq,25) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(52,eq,91) output(55,eq,91) output(57,eq,91) output(8,eq,91) output(57,eq,75) output(8,eq,75) output(67,eq,76) output(91,eq,71) output(52,eq,17) output(86,eq,94) output(86,eq,78) output(55,eq,17) output(67,eq,99) output(51,eq,76) output(52,eq,76) output(55,eq,76) output(51,eq,99) output(52,eq,99) output(67,eq,71) output(57,eq,17) output(8,eq,17) output(52,eq,94) output(55,eq,94) output(52,eq,78) output(55,eq,78) output(57,eq,78) output(8,eq,78) output(57,eq,94) output(8,eq,94) output(51,eq,71) output(52,eq,71) output(55,eq,71) output(57,eq,71) output(8,eq,71) output(55,eq,99) output(57,eq,99) output(8,eq,99) output(57,eq,76) output(8,eq,76)
Optimization: 88 0
Answer: 2
preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(25,better,75) output(51,better,67) output(51,better,91) output(51,better,76) output(51,better,71) output(78,better,62) output(99,better,91) output(8,worse,51) output(8,worse,25) output(8,worse,75) output(8,worse,78) output(8,worse,71) output(8,worse,99) output(17,worse,75) output(17,worse,25) output(52,worse,51) output(52,worse,75) output(52,worse,25) output(52,worse,99) output(52,worse,78) output(52,worse,71) output(55,worse,51) output(55,worse,75) output(55,worse,25) output(55,worse,78) output(55,worse,71) output(55,worse,99) output(57,worse,51) output(57,worse,25) output(57,worse,75) output(57,worse,78) output(57,worse,71) output(57,worse,99) output(62,worse,25) output(62,worse,75) output(67,worse,99) output(67,worse,71) output(86,worse,25) output(86,worse,75) output(86,worse,78) output(94,worse,25) output(94,worse,75) output(78,worse,25) output(91,worse,71) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(8,eq,55) output(17,eq,86) output(94,eq,62) output(52,eq,86) output(76,eq,91) output(52,eq,67) output(57,eq,52) output(8,eq,52) output(55,eq,67) output(57,eq,67) output(8,eq,67) output(67,eq,91) output(55,eq,86) output(57,eq,86) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(78,eq,75) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(52,eq,91) output(55,eq,91) output(57,eq,91) output(8,eq,91) output(67,eq,76) output(52,eq,17) output(86,eq,94) output(55,eq,17) output(52,eq,76) output(55,eq,76) output(51,eq,99) output(57,eq,17) output(8,eq,17) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(8,eq,94) output(57,eq,76) output(8,eq,76)
Optimization: 81 4
Answer: 3
preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(51,better,67) output(51,better,76) output(51,better,71) output(52,better,86) output(52,better,67) output(52,better,62) output(52,better,17) output(52,better,76) output(55,better,67) output(55,better,86) output(55,better,62) output(55,better,17) output(55,better,76) output(57,better,67) output(57,better,86) output(57,better,62) output(57,better,17) output(57,better,76) output(94,better,62) output(78,better,62) output(78,better,25) output(78,better,75) output(91,better,71) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,51) output(8,worse,25) output(8,worse,91) output(8,worse,75) output(8,worse,78) output(8,worse,94) output(8,worse,71) output(8,worse,99) output(17,worse,75) output(17,worse,25) output(52,worse,51) output(52,worse,91) output(52,worse,99) output(52,worse,78) output(55,worse,51) output(55,worse,91) output(55,worse,78) output(55,worse,99) output(57,worse,51) output(57,worse,91) output(57,worse,78) output(57,worse,99) output(62,worse,25) output(62,worse,75) output(67,worse,91) output(67,worse,99) output(67,worse,71) output(76,worse,91) output(86,worse,25) output(86,worse,75) output(86,worse,94) output(86,worse,78) output(57,eq,55) output(55,eq,52) output(99,eq,91) output(17,eq,86) output(25,eq,75) output(57,eq,52) output(8,eq,67) output(51,eq,91) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(94,eq,25) output(94,eq,75) output(52,eq,75) output(55,eq,75) output(52,eq,25) output(55,eq,25) output(57,eq,25) output(8,eq,62) output(57,eq,75) output(67,eq,76) output(51,eq,99) output(8,eq,17) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(52,eq,71) output(55,eq,71) output(57,eq,71) output(8,eq,76)
Optimization: 65 2
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,99) output(17,better,62) output(17,better,75) output(25,better,75) output(51,better,91) output(51,better,99) output(51,better,71) output(52,better,75) output(52,better,91) output(52,better,99) output(52,better,78) output(55,better,75) output(55,better,91) output(55,better,78) output(55,better,99) output(57,better,91) output(57,better,75) output(57,better,78) output(57,better,99) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,75) output(8,worse,51) output(8,worse,67) output(8,worse,86) output(8,worse,25) output(8,worse,17) output(8,worse,76) output(52,worse,51) output(52,worse,86) output(52,worse,67) output(52,worse,25) output(52,worse,17) output(52,worse,76) output(55,worse,51) output(55,worse,67) output(55,worse,86) output(55,worse,25) output(55,worse,17) output(55,worse,76) output(57,worse,51) output(57,worse,67) output(57,worse,86) output(57,worse,25) output(57,worse,17) output(57,worse,76) output(62,worse,25) output(94,worse,25) output(78,worse,62) output(78,worse,25) output(91,worse,71) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(51,eq,67) output(99,eq,91) output(8,eq,55) output(17,eq,86) output(94,eq,62) output(57,eq,52) output(8,eq,52) output(86,eq,25) output(78,eq,75) output(17,eq,25) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(67,eq,76) output(51,eq,76) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(8,eq,94) output(52,eq,71) output(55,eq,71) output(57,eq,71) output(8,eq,71)
Optimization: 56 9
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,99) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,99) output(52,better,75) output(52,better,91) output(52,better,99) output(52,better,78) output(55,better,75) output(55,better,91) output(55,better,78) output(55,better,99) output(57,better,91) output(57,better,75) output(57,better,78) output(57,better,99) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,75) output(8,worse,67) output(8,worse,86) output(8,worse,17) output(8,worse,76) output(51,worse,67) output(51,worse,76) output(52,worse,86) output(52,worse,67) output(52,worse,17) output(52,worse,76) output(55,worse,67) output(55,worse,86) output(55,worse,17) output(55,worse,76) output(57,worse,67) output(57,worse,86) output(57,worse,17) output(57,worse,76) output(78,worse,62) output(78,worse,25) output(91,worse,71) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(52,eq,51) output(99,eq,91) output(8,eq,55) output(17,eq,86) output(62,eq,25) output(94,eq,62) output(55,eq,51) output(57,eq,52) output(8,eq,52) output(57,eq,51) output(8,eq,51) output(94,eq,25) output(78,eq,75) output(52,eq,25) output(55,eq,25) output(57,eq,25) output(8,eq,25) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(67,eq,76) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(8,eq,94) output(51,eq,71) output(52,eq,71) output(55,eq,71) output(57,eq,71) output(8,eq,71)
Optimization: 55 10
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(4))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(8,better,51) output(8,better,25) output(8,better,91) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,25) output(52,better,51) output(52,better,25) output(52,better,91) output(52,better,99) output(52,better,78) output(52,better,71) output(55,better,51) output(55,better,25) output(55,better,91) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,25) output(57,better,91) output(57,better,78) output(57,better,71) output(57,better,99) output(62,better,25) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,25) output(86,better,78) output(94,better,25) output(78,better,25) output(25,worse,75) output(51,worse,67) output(51,worse,76) output(51,worse,71) output(78,worse,62) output(78,worse,75) output(91,worse,71) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(99,eq,91) output(8,eq,55) output(17,eq,86) output(62,eq,75) output(94,eq,62) output(52,eq,86) output(52,eq,67) output(57,eq,52) output(8,eq,52) output(55,eq,67) output(57,eq,67) output(8,eq,67) output(51,eq,91) output(55,eq,86) output(57,eq,86) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(94,eq,75) output(86,eq,75) output(17,eq,75) output(52,eq,75) output(55,eq,75) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(57,eq,75) output(8,eq,75) output(67,eq,76) output(52,eq,17) output(86,eq,94) output(55,eq,17) output(52,eq,76) output(55,eq,76) output(51,eq,99) output(57,eq,17) output(8,eq,17) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(8,eq,94) output(57,eq,76) output(8,eq,76)
Optimization: 54 13
Progression : [ 2;54] (Error: 26)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(8,better,25) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,62) output(17,better,75) output(17,better,25) output(51,better,91) output(51,better,99) output(51,better,71) output(52,better,75) output(52,better,25) output(52,better,91) output(52,better,99) output(52,better,78) output(52,better,71) output(55,better,75) output(55,better,25) output(55,better,91) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,25) output(57,better,91) output(57,better,75) output(57,better,78) output(57,better,71) output(57,better,99) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,25) output(94,better,75) output(8,worse,51) output(8,worse,67) output(8,worse,86) output(8,worse,17) output(8,worse,76) output(52,worse,51) output(52,worse,86) output(52,worse,67) output(52,worse,17) output(52,worse,76) output(55,worse,51) output(55,worse,67) output(55,worse,86) output(55,worse,17) output(55,worse,76) output(57,worse,51) output(57,worse,67) output(57,worse,86) output(57,worse,17) output(57,worse,76) output(78,worse,62) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(51,eq,67) output(99,eq,91) output(8,eq,55) output(17,eq,86) output(25,eq,75) output(78,eq,25) output(94,eq,62) output(57,eq,52) output(8,eq,52) output(78,eq,75) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(67,eq,76) output(91,eq,71) output(51,eq,76) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(8,eq,94)
Optimization: 45 10
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(8,better,51) output(8,better,25) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,99) output(52,better,51) output(52,better,75) output(52,better,25) output(52,better,91) output(52,better,99) output(52,better,78) output(52,better,71) output(55,better,51) output(55,better,75) output(55,better,25) output(55,better,91) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,25) output(57,better,91) output(57,better,75) output(57,better,78) output(57,better,71) output(57,better,99) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,25) output(86,better,75) output(86,better,78) output(94,better,25) output(94,better,75) output(51,worse,67) output(51,worse,76) output(51,worse,71) output(78,worse,62) output(78,worse,25) output(78,worse,75) output(91,worse,71) output(8,eq,57) output(57,eq,55) output(55,eq,52) output(99,eq,91) output(8,eq,55) output(17,eq,86) output(94,eq,62) output(52,eq,86) output(52,eq,67) output(57,eq,52) output(8,eq,52) output(55,eq,67) output(57,eq,67) output(8,eq,67) output(55,eq,86) output(57,eq,86) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(52,eq,62) output(55,eq,62) output(57,eq,62) output(8,eq,62) output(67,eq,76) output(52,eq,17) output(86,eq,94) output(55,eq,17) output(52,eq,76) output(55,eq,76) output(57,eq,17) output(8,eq,17) output(52,eq,94) output(55,eq,94) output(57,eq,94) output(8,eq,94) output(57,eq,76) output(8,eq,76)
Optimization: 44 12
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(8,better,55) output(8,better,51) output(8,better,25) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,99) output(52,better,51) output(52,better,75) output(52,better,25) output(52,better,91) output(52,better,99) output(52,better,78) output(52,better,71) output(55,better,51) output(55,better,75) output(55,better,25) output(55,better,91) output(55,better,78) output(55,better,99) output(57,better,55) output(57,better,51) output(57,better,25) output(57,better,91) output(57,better,75) output(57,better,78) output(57,better,71) output(57,better,99) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,25) output(86,better,75) output(86,better,78) output(94,better,25) output(94,better,75) output(51,worse,67) output(51,worse,76) output(51,worse,71) output(55,worse,52) output(55,worse,67) output(55,worse,86) output(55,worse,62) output(55,worse,17) output(55,worse,76) output(55,worse,94) output(78,worse,62) output(78,worse,25) output(78,worse,75) output(91,worse,71) output(8,eq,57) output(99,eq,91) output(17,eq,86) output(94,eq,62) output(52,eq,86) output(52,eq,67) output(57,eq,52) output(8,eq,52) output(57,eq,67) output(8,eq,67) output(57,eq,86) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(52,eq,62) output(57,eq,62) output(8,eq,62) output(67,eq,76) output(52,eq,17) output(86,eq,94) output(52,eq,76) output(57,eq,17) output(8,eq,17) output(52,eq,94) output(57,eq,94) output(8,eq,94) output(55,eq,71) output(57,eq,76) output(8,eq,76)
Optimization: 43 13
Progression : [ 3;43] (Error: 13.3333)
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(8,better,51) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,99) output(17,better,75) output(25,better,75) output(51,better,91) output(51,better,99) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,78) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,99) output(57,better,76) output(62,better,75) output(67,better,91) output(67,better,99) output(76,better,91) output(86,better,75) output(86,better,78) output(94,better,62) output(94,better,75) output(99,better,91) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,25) output(8,worse,94) output(8,worse,71) output(17,worse,25) output(51,worse,67) output(51,worse,76) output(51,worse,71) output(57,worse,55) output(62,worse,25) output(67,worse,71) output(86,worse,25) output(86,worse,94) output(78,worse,62) output(78,worse,25) output(78,worse,75) output(91,worse,71) output(17,eq,86) output(57,eq,52) output(8,eq,67) output(8,eq,86) output(86,eq,62) output(17,eq,62) output(94,eq,25) output(52,eq,25) output(57,eq,25) output(8,eq,62) output(67,eq,76) output(8,eq,17) output(52,eq,94) output(57,eq,94) output(52,eq,71) output(57,eq,71) output(8,eq,76)
Optimization: 36 10
Answer: 11
preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(8,better,51) output(8,better,62) output(8,better,75) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,86) output(17,better,62) output(17,better,75) output(25,better,75) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,51) output(55,better,86) output(55,better,75) output(55,better,62) output(55,better,76) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,55) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(57,better,76) output(67,better,91) output(67,better,76) output(67,better,99) output(67,better,71) output(86,better,62) output(86,better,75) output(86,better,78) output(94,better,62) output(94,better,75) output(78,better,62) output(91,better,71) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,67) output(8,worse,25) output(8,worse,91) output(8,worse,17) output(8,worse,94) output(51,worse,67) output(51,worse,91) output(51,worse,76) output(51,worse,99) output(51,worse,71) output(55,worse,52) output(55,worse,67) output(55,worse,25) output(55,worse,91) output(55,worse,17) output(62,worse,25) output(62,worse,75) output(76,worse,91) output(86,worse,25) output(86,worse,94) output(94,worse,25) output(78,worse,25) output(99,worse,91) output(57,eq,52) output(8,eq,86) output(78,eq,75) output(17,eq,25) output(55,eq,94) output(8,eq,76)
Optimization: 32 8
Answer: 12
preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(8,better,57) output(8,better,52) output(8,better,51) output(8,better,67) output(8,better,25) output(8,better,91) output(8,better,75) output(8,better,17) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,99) output(17,better,75) output(17,better,25) output(51,better,91) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,75) output(52,better,25) output(52,better,91) output(52,better,99) output(52,better,78) output(52,better,71) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,75) output(55,better,25) output(55,better,91) output(55,better,17) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,25) output(57,better,91) output(57,better,75) output(57,better,78) output(57,better,71) output(57,better,99) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,25) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,25) output(94,better,75) output(78,better,25) output(78,better,75) output(91,better,71) output(99,better,91) output(17,worse,86) output(17,worse,62) output(25,worse,75) output(51,worse,67) output(51,worse,76) output(52,worse,86) output(52,worse,62) output(52,worse,76) output(57,worse,55) output(57,worse,86) output(57,worse,62) output(57,worse,76) output(67,worse,76) output(94,worse,62) output(78,worse,62) output(8,eq,55) output(52,eq,67) output(57,eq,52) output(57,eq,67) output(55,eq,86) output(8,eq,86) output(86,eq,62) output(55,eq,62) output(8,eq,62) output(52,eq,17) output(55,eq,76) output(57,eq,17) output(52,eq,94) output(57,eq,94) output(8,eq,76)
Optimization: 30 9
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(8,better,51) output(8,better,67) output(8,better,25) output(8,better,62) output(8,better,91) output(8,better,75) output(8,better,17) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,99) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,67) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,62) output(94,better,25) output(94,better,75) output(78,better,62) output(78,better,25) output(78,better,75) output(99,better,91) output(8,worse,55) output(17,worse,86) output(51,worse,76) output(57,worse,55) output(67,worse,76) output(8,eq,57) output(51,eq,67) output(52,eq,86) output(57,eq,52) output(8,eq,52) output(57,eq,86) output(8,eq,86) output(91,eq,71) output(52,eq,76) output(57,eq,76) output(8,eq,76)
Optimization: 16 11
Progression : [ 5;16] (Error: 2.2)
Progression : [ 6;16] (Error: 1.66667)
Progression : [ 7;16] (Error: 1.28571)
Progression : [ 8;16] (Error: 1)
Progression : [ 9;16] (Error: 0.777778)
Progression : [10;16] (Error: 0.6)
Progression : [11;16] (Error: 0.454545)
Answer: 14
preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(8,better,51) output(8,better,67) output(8,better,25) output(8,better,62) output(8,better,91) output(8,better,75) output(8,better,17) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,67) output(51,better,91) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,55) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(57,better,76) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,78) output(94,better,62) output(94,better,25) output(94,better,75) output(78,better,62) output(78,better,25) output(78,better,75) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,94) output(17,worse,86) output(51,worse,76) output(55,worse,52) output(67,worse,76) output(86,worse,94) output(91,worse,71) output(99,worse,91) output(57,eq,52) output(8,eq,86) output(55,eq,94) output(8,eq,76)
Optimization: 15 12
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(8,better,25) output(8,better,62) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,86) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,76) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(57,better,76) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,76) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,78) output(94,better,62) output(94,better,25) output(94,better,75) output(78,better,25) output(78,better,75) output(91,better,71) output(99,better,91) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,51) output(8,worse,67) output(8,worse,17) output(51,worse,67) output(57,worse,55) output(78,eq,62) output(57,eq,52) output(8,eq,86) output(86,eq,94) output(8,eq,94) output(8,eq,76)
Optimization: 14 11
Progression : [12;14] (Error: 0.166667)
Answer: 16
preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(8,better,25) output(8,better,62) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,71) output(8,better,99) output(17,better,86) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,67) output(51,better,91) output(51,better,76) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(57,better,76) output(62,better,25) output(62,better,75) output(67,better,91) output(67,better,76) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,78) output(94,better,62) output(94,better,25) output(94,better,75) output(78,better,25) output(78,better,75) output(91,better,71) output(99,better,91) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,51) output(8,worse,67) output(8,worse,17) output(8,worse,94) output(57,worse,55) output(86,worse,94) output(78,eq,62) output(57,eq,52) output(8,eq,86) output(8,eq,76)
Optimization: 13 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(4))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(8,better,25) output(8,better,62) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,99) output(17,better,86) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,76) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(57,better,76) output(62,better,75) output(67,better,91) output(67,better,76) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,62) output(94,better,25) output(94,better,75) output(78,better,62) output(78,better,25) output(78,better,75) output(91,better,71) output(99,better,91) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,51) output(8,worse,67) output(8,worse,17) output(57,worse,55) output(51,eq,67) output(62,eq,25) output(57,eq,52) output(8,eq,86) output(8,eq,76)
Optimization: 12 12
Progression : 12 [ 1;12] (Error: 11)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(8,better,25) output(8,better,62) output(8,better,91) output(8,better,75) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,99) output(17,better,86) output(17,better,62) output(17,better,75) output(17,better,25) output(25,better,75) output(51,better,91) output(51,better,76) output(51,better,99) output(51,better,71) output(52,better,51) output(52,better,86) output(52,better,67) output(52,better,75) output(52,better,25) output(52,better,62) output(52,better,91) output(52,better,17) output(52,better,76) output(52,better,99) output(52,better,94) output(52,better,78) output(52,better,71) output(55,better,52) output(55,better,51) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,91) output(55,better,17) output(55,better,76) output(55,better,94) output(55,better,78) output(55,better,71) output(55,better,99) output(57,better,51) output(57,better,67) output(57,better,86) output(57,better,25) output(57,better,62) output(57,better,91) output(57,better,75) output(57,better,17) output(57,better,78) output(57,better,94) output(57,better,71) output(57,better,99) output(57,better,76) output(62,better,75) output(67,better,91) output(67,better,76) output(67,better,99) output(67,better,71) output(76,better,91) output(86,better,62) output(86,better,25) output(86,better,75) output(86,better,94) output(86,better,78) output(94,better,62) output(94,better,25) output(94,better,75) output(78,better,62) output(78,better,25) output(78,better,75) output(91,better,71) output(99,better,91) output(8,worse,57) output(8,worse,55) output(8,worse,52) output(8,worse,51) output(8,worse,67) output(8,worse,17) output(57,worse,55) output(51,eq,67) output(62,eq,25) output(57,eq,52) output(8,eq,86) output(8,eq,76)
Optimization: 12 11
Progression : 12 [ 2;11] (Error: 4.5)
Progression : 12 [ 3;11] (Error: 2.66667)
Progression : 12 [ 4;11] (Error: 1.75)
Progression : 12 [ 5;11] (Error: 1.2)
Progression : 12 [ 6;11] (Error: 0.833333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.045 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 12 11
Bounds       : 12 [6;11]
Calls        : 1
Time         : 297.741s (Solving: 296.06s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.689s
Threads      : 4        (Winner: 4)

Choices      : 8345556  (Domain: 589713)
Conflicts    : 7455571  (Analyzed: 7455554)
Restarts     : 7811     (Average: 954.49 Last: 154410)
Model-Level  : 51.4    
Problems     : 22       (Average Length: 0.18 Splits: 0)
Lemmas       : 7496285  (Deleted: 7293887)
  Binary     : 311      (Ratio:   0.00%)
  Ternary    : 2912     (Ratio:   0.04%)
  Conflict   : 7455554  (Average Length:  172.1 Ratio:  99.46%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 40731    (Average Length:   29.9 Ratio:   0.54%) 
  Distributed: 15436    (Ratio:   0.21% Average LBD: 3.61) 
  Integrated : 46308    (Ratio: 300.00% Unit: 249 Average Jumps: 6.73)
Backjumps    : 7455554  (Average:  1.10 Max: 284 Sum: 8226710)
  Executed   : 7455500  (Average:  1.10 Max: 284 Sum: 8226281 Ratio:  99.99%)
  Bounded    : 54       (Average:  7.94 Max:  69 Sum:    429 Ratio:   0.01%)

Rules        : 172672  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13788   
Bodies       : 5769    
  Sum        : 158     
  Count      : 14      
Equivalences : 5112     (Atom=Atom: 938 Body=Body: 411 Other: 3763)
Tight        : Yes
Variables    : 4536     (Eliminated:    0 Frozen: 3066)
Constraints  : 166703   (Binary:  98.0% Ternary:   0.9% Other:   1.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) 
}.
