asprin_vL version 1.0
Reading from stdin
-:1230:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1240:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1255:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1336:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1597:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1610:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1787:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1916:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1988:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1992:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1992:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1998:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2097:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2123:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2243:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2277:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2299:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1147:1-16: info: no atoms over signature occur in program:
  output/3

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(92,eq,58) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(92,eq,64) output(100,eq,58) output(51,eq,38) output(38,eq,52) output(52,eq,84) output(84,eq,24) output(52,eq,24) output(38,eq,84) output(51,eq,52) output(84,eq,90) output(52,eq,22) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(100,eq,77) output(92,eq,10) output(100,eq,10) output(58,eq,16) output(92,eq,16) output(100,eq,16) output(38,eq,22) output(51,eq,22) output(52,eq,90) output(38,eq,90) output(51,eq,84) output(38,eq,24) output(51,eq,24) output(51,eq,90)
Optimization: 35 0
Answer: 2
preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(10,better,16) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,90) output(38,worse,24) output(52,worse,24) output(58,worse,10) output(77,worse,10) output(84,worse,24) output(92,worse,10) output(100,worse,10) output(92,eq,58) output(58,eq,77) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(92,eq,64) output(100,eq,58) output(38,eq,52) output(52,eq,84) output(38,eq,84) output(84,eq,90) output(52,eq,22) output(77,eq,16) output(92,eq,77) output(100,eq,77) output(58,eq,16) output(92,eq,16) output(100,eq,16) output(38,eq,22) output(52,eq,90) output(38,eq,90) output(51,eq,24)
Optimization: 29 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(38,better,52) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,10) output(77,better,10) output(92,better,10) output(100,better,10) output(10,worse,16) output(51,worse,38) output(51,worse,52) output(84,worse,24) output(92,worse,58) output(92,worse,77) output(92,worse,16) output(100,worse,58) output(100,worse,77) output(100,worse,16) output(58,eq,77) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(92,eq,64) output(84,eq,90) output(77,eq,16) output(58,eq,16)
Optimization: 18 6
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,22) output(51,better,24) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,10) output(77,better,10) output(84,better,22) output(84,better,24) output(92,better,58) output(92,better,10) output(100,better,58) output(100,better,10) output(10,worse,16) output(22,worse,90) output(51,worse,38) output(51,worse,52) output(58,worse,77) output(58,worse,16) output(65,worse,79) output(92,eq,64) output(38,eq,52) output(84,eq,90) output(77,eq,16) output(92,eq,77) output(100,eq,77) output(92,eq,16) output(100,eq,16) output(51,eq,84) output(51,eq,90)
Optimization: 17 9
Progression : [ 2;17] (Error: 7.5)
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(10,better,16) output(22,better,90) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,24) output(58,better,16) output(77,better,16) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(65,better,79) output(100,better,16) output(38,worse,52) output(38,worse,84) output(38,worse,22) output(38,worse,90) output(38,worse,24) output(52,worse,84) output(52,worse,22) output(52,worse,90) output(58,worse,10) output(77,worse,10) output(84,worse,22) output(100,worse,58) output(100,worse,77) output(100,worse,10) output(58,eq,77) output(84,eq,90)
Optimization: 16 11
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasPrep(3))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,16) output(38,better,22) output(38,better,24) output(51,better,38) output(51,better,22) output(51,better,24) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,22) output(84,better,24) output(92,better,58) output(92,better,77) output(92,better,10) output(92,better,16) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(22,worse,90) output(38,worse,52) output(38,worse,84) output(38,worse,90) output(51,worse,52) output(65,worse,79) output(58,eq,77) output(92,eq,64) output(84,eq,90) output(51,eq,84) output(51,eq,90)
Optimization: 11 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(3))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,16) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,22) output(51,better,24) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,22) output(84,better,24) output(92,better,58) output(92,better,77) output(92,better,10) output(92,better,16) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(22,worse,90) output(38,worse,52) output(51,worse,38) output(51,worse,52) output(51,worse,84) output(51,worse,90) output(65,worse,79) output(58,eq,77) output(92,eq,64) output(84,eq,90)
Optimization: 10 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(3))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,16) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,22) output(51,better,24) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,22) output(84,better,24) output(92,better,58) output(92,better,77) output(92,better,10) output(92,better,16) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(22,worse,90) output(38,worse,52) output(51,worse,38) output(51,worse,52) output(65,worse,79) output(92,eq,64) output(84,eq,90) output(51,eq,84) output(51,eq,90)
Optimization: 9 12
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(7))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(3))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(22,better,90) output(38,better,84) output(38,better,90) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(65,better,79) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(10,worse,16) output(38,worse,52) output(38,worse,22) output(38,worse,24) output(52,worse,22) output(84,worse,22) output(84,worse,24) output(84,eq,90)
Optimization: 8 13
Answer: 10
preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,38) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(10,worse,16) output(38,worse,52) output(51,worse,52) output(65,worse,79) output(84,eq,22) output(22,eq,90) output(84,eq,90)
Optimization: 7 10
Answer: 11
preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(10,worse,16) output(38,worse,52) output(65,worse,79) output(84,eq,22) output(22,eq,90) output(84,eq,90)
Optimization: 6 10
Answer: 12
preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(10,better,16) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(38,worse,52) output(65,worse,79) output(84,eq,22) output(22,eq,90) output(84,eq,90)
Optimization: 5 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(10,better,16) output(38,better,52) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,22) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,10) output(92,better,16) output(65,better,79) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(22,worse,90) output(58,worse,77) output(92,worse,77) output(84,eq,90)
Optimization: 4 10
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(3))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(10,better,16) output(22,better,90) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(65,better,79) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(38,worse,52) output(84,worse,22) output(84,eq,90)
Optimization: 3 12
Answer: 15
preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasPrep(3))),7) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,16) output(38,better,52) output(38,better,84) output(38,better,22) output(38,better,90) output(38,better,24) output(51,better,38) output(51,better,52) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(52,better,84) output(52,better,24) output(52,better,22) output(52,better,90) output(58,better,77) output(58,better,10) output(58,better,16) output(77,better,10) output(77,better,16) output(84,better,22) output(84,better,24) output(92,better,58) output(92,better,64) output(92,better,77) output(92,better,10) output(92,better,16) output(65,better,79) output(100,better,58) output(100,better,77) output(100,better,10) output(100,better,16) output(22,worse,90) output(84,eq,90)
Optimization: 2 11
Progression : 2 [ 1;11] (Error: 10)
Progression : 2 [ 2;11] (Error: 4.5)
Progression : 2 [ 3;11] (Error: 2.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.048 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 2 11
Bounds       : 2 [3;11]
Calls        : 1
Time         : 298.006s (Solving: 296.35s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.881s
Threads      : 4        (Winner: 4)

Choices      : 5169214  (Domain: 412181)
Conflicts    : 4778588  (Analyzed: 4778584)
Restarts     : 4132     (Average: 1156.48 Last: 316365)
Model-Level  : 32.1    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 4923193  (Deleted: 4690584)
  Binary     : 660      (Ratio:   0.01%)
  Ternary    : 7822     (Ratio:   0.16%)
  Conflict   : 4778584  (Average Length:  294.6 Ratio:  97.06%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 144609   (Average Length:  158.0 Ratio:   2.94%) 
  Distributed: 48560    (Ratio:   1.02% Average LBD: 3.75) 
  Integrated : 145680   (Ratio: 300.00% Unit: 397 Average Jumps: 5.80)
Backjumps    : 4778584  (Average:  1.07 Max:  80 Sum: 5121640)
  Executed   : 4778574  (Average:  1.07 Max:  80 Sum: 5121488 Ratio: 100.00%)
  Bounded    : 10       (Average: 15.20 Max:  16 Sum:    152 Ratio:   0.00%)

Rules        : 99142   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9042    
Bodies       : 5619    
  Sum        : 63      
  Count      : 14      
Equivalences : 6248     (Atom=Atom: 376 Body=Body: 170 Other: 5702)
Tight        : Yes
Variables    : 4786     (Eliminated:    0 Frozen: 3316)
Constraints  : 98048    (Binary:  96.8% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) 
}.
