asprin_vL version 1.0
Reading from stdin
-:1235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1152:1-16: info: no atoms over signature occur in program:
  output/3

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(18,eq,23) output(23,eq,78) output(31,eq,72) output(72,eq,42) output(42,eq,51) output(51,eq,90) output(90,eq,7) output(18,eq,41) output(32,eq,72) output(4,eq,42) output(42,eq,92) output(92,eq,76) output(60,eq,37) output(42,eq,76) output(72,eq,92) output(4,eq,92) output(51,eq,7) output(42,eq,90) output(72,eq,51) output(4,eq,51) output(31,eq,42) output(32,eq,42) output(18,eq,78) output(31,eq,51) output(32,eq,51) output(72,eq,90) output(4,eq,90) output(31,eq,90) output(32,eq,90) output(42,eq,7) output(72,eq,7) output(4,eq,7) output(31,eq,92) output(32,eq,92) output(72,eq,76) output(4,eq,76) output(31,eq,76) output(32,eq,76) output(31,eq,7) output(32,eq,7)
Optimization: 40 0
Progression : [ 2;40] (Error: 19)
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(90,better,7) output(32,better,42) output(32,better,51) output(32,better,92) output(32,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,7) output(4,worse,90) output(4,worse,76) output(31,worse,72) output(31,worse,90) output(31,worse,76) output(51,worse,90) output(92,worse,76) output(18,worse,41) output(42,worse,76) output(42,worse,90) output(18,eq,23) output(23,eq,78) output(42,eq,51) output(32,eq,72) output(4,eq,42) output(42,eq,92) output(60,eq,37) output(4,eq,92) output(51,eq,7) output(4,eq,51) output(31,eq,42) output(18,eq,78) output(31,eq,51) output(72,eq,90) output(32,eq,90) output(42,eq,7) output(4,eq,7) output(31,eq,92) output(72,eq,76) output(32,eq,76) output(31,eq,7)
Optimization: 31 2
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(31,better,72) output(31,better,42) output(31,better,90) output(31,better,92) output(51,better,90) output(51,better,7) output(60,better,37) output(18,better,41) output(32,better,42) output(72,better,42) output(4,worse,92) output(4,worse,51) output(4,worse,90) output(4,worse,7) output(4,worse,76) output(31,worse,51) output(31,worse,76) output(90,worse,7) output(92,worse,76) output(32,worse,51) output(32,worse,76) output(32,worse,7) output(42,worse,51) output(42,worse,92) output(42,worse,76) output(42,worse,90) output(42,worse,7) output(72,worse,51) output(72,worse,7) output(72,worse,76) output(18,eq,23) output(23,eq,78) output(32,eq,72) output(4,eq,42) output(72,eq,92) output(18,eq,78) output(72,eq,90) output(32,eq,90) output(32,eq,92) output(31,eq,7)
Optimization: 30 8
Progression : [ 3;30] (Error: 9)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(7))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,7),1,for(atom(hasPrep(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(18,better,41) output(32,better,51) output(32,better,90) output(32,better,7) output(42,better,51) output(42,better,90) output(42,better,7) output(72,better,51) output(72,better,90) output(72,better,7) output(60,worse,37) output(18,eq,23) output(23,eq,78) output(72,eq,42) output(90,eq,7) output(32,eq,72) output(4,eq,42) output(42,eq,92) output(92,eq,76) output(42,eq,76) output(72,eq,92) output(4,eq,92) output(32,eq,42) output(18,eq,78) output(32,eq,92) output(72,eq,76) output(4,eq,76) output(32,eq,76)
Optimization: 18 14
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),4) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(4,better,42) output(4,better,90) output(4,better,7) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(90,better,7) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(18,worse,23) output(18,worse,41) output(18,worse,78) output(42,worse,51) output(42,worse,92) output(42,worse,76) output(42,worse,90) output(23,eq,78) output(31,eq,72) output(32,eq,72) output(92,eq,76) output(60,eq,37) output(4,eq,92) output(4,eq,51) output(4,eq,76)
Optimization: 15 10
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(31,better,51) output(31,better,90) output(31,better,7) output(51,better,7) output(90,better,7) output(18,better,23) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(4,worse,76) output(31,worse,72) output(31,worse,42) output(31,worse,76) output(60,worse,37) output(92,worse,76) output(18,worse,41) output(23,eq,78) output(51,eq,90) output(32,eq,72) output(4,eq,92) output(31,eq,92)
Optimization: 13 9
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasPrep(4))),8) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,41) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(23,worse,78) output(32,eq,72) output(4,eq,42) output(42,eq,92) output(4,eq,92)
Optimization: 5 13
Progression : [4;5] (Error: 0.25)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(7))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(18,worse,41) output(23,eq,78) output(32,eq,72) output(4,eq,92)
Optimization: 5 11
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,41) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(23,eq,78) output(32,eq,72) output(4,eq,92)
Optimization: 4 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,41) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(23,worse,78) output(32,eq,72) output(4,eq,92)
Optimization: 4 10
Progression : 4 [ 1;10] (Error: 9)
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,41) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(23,eq,78) output(32,eq,72) output(4,eq,92)
Optimization: 4 9
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,41) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(4,worse,92) output(23,eq,78) output(32,eq,72)
Optimization: 4 8
Progression : 4 [2;8] (Error: 3)
Progression : 4 [3;8] (Error: 1.66667)
Answer: 13
preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(4,better,51) output(4,better,90) output(4,better,7) output(4,better,76) output(31,better,72) output(31,better,42) output(31,better,51) output(31,better,90) output(31,better,92) output(31,better,76) output(31,better,7) output(51,better,90) output(51,better,7) output(60,better,37) output(90,better,7) output(92,better,76) output(18,better,23) output(18,better,41) output(18,better,78) output(32,better,42) output(32,better,51) output(32,better,90) output(32,better,92) output(32,better,76) output(32,better,7) output(42,better,51) output(42,better,92) output(42,better,76) output(42,better,90) output(42,better,7) output(72,better,42) output(72,better,92) output(72,better,51) output(72,better,90) output(72,better,7) output(72,better,76) output(4,worse,42) output(4,worse,92) output(23,eq,78) output(32,eq,72)
Optimization: 4 7
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.090 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 4 7
Bounds       : 4 [3;7]
Calls        : 1
Time         : 297.410s (Solving: 295.73s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.281s
Threads      : 4        (Winner: 4)

Choices      : 7308773  (Domain: 638769)
Conflicts    : 5991427  (Analyzed: 5991421)
Restarts     : 5188     (Average: 1154.86 Last: 399267)
Model-Level  : 46.5    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 6052718  (Deleted: 5845703)
  Binary     : 980      (Ratio:   0.02%)
  Ternary    : 3512     (Ratio:   0.06%)
  Conflict   : 5991421  (Average Length:  218.3 Ratio:  98.99%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 61297    (Average Length:   37.0 Ratio:   1.01%) 
  Distributed: 20480    (Ratio:   0.34% Average LBD: 3.72) 
  Integrated : 61440    (Ratio: 300.00% Unit: 92 Average Jumps: 11.72)
Backjumps    : 5991421  (Average:  1.18 Max: 401 Sum: 7064641)
  Executed   : 5991411  (Average:  1.18 Max: 401 Sum: 7064511 Ratio: 100.00%)
  Bounded    : 10       (Average: 13.00 Max:  33 Sum:    130 Ratio:   0.00%)

Rules        : 106753  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9532    
Bodies       : 5668    
  Sum        : 67      
  Count      : 14      
Equivalences : 6449     (Atom=Atom: 441 Body=Body: 205 Other: 5803)
Tight        : Yes
Variables    : 4797     (Eliminated:    0 Frozen: 3327)
Constraints  : 105189   (Binary:  97.0% Ternary:   1.4% Other:   1.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(4)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) 
}.
