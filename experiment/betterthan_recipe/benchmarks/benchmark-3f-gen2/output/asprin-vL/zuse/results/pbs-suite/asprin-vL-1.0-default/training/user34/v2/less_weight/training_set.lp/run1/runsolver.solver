asprin_vL version 1.0
Reading from stdin
-:1258:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1268:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1283:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1364:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1625:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1638:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1815:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1944:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2016:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2020:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2020:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2026:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2125:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2151:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2271:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2305:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2327:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1175:1-16: info: no atoms over signature occur in program:
  output/3

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1168:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(57,eq,99) output(99,eq,51) output(51,eq,71) output(71,eq,76) output(76,eq,67) output(67,eq,52) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(30,eq,71) output(71,eq,98) output(98,eq,53) output(53,eq,60) output(98,eq,60) output(71,eq,53) output(51,eq,98) output(30,eq,98) output(94,eq,71) output(76,eq,52) output(71,eq,67) output(17,eq,67) output(51,eq,76) output(30,eq,76) output(99,eq,71) output(57,eq,51) output(78,eq,51) output(57,eq,71) output(78,eq,71) output(94,eq,76) output(99,eq,76) output(57,eq,76) output(78,eq,76) output(51,eq,67) output(30,eq,67) output(94,eq,67) output(99,eq,67) output(71,eq,52) output(17,eq,52) output(51,eq,52) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(51,eq,53) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(71,eq,60) output(51,eq,60) output(30,eq,60) output(94,eq,60) output(99,eq,60) output(57,eq,60) output(78,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52) output(57,eq,67) output(78,eq,67)
Optimization: 63 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(17,better,52) output(51,better,71) output(51,better,98) output(51,better,52) output(67,better,52) output(76,better,52) output(78,better,71) output(78,better,98) output(78,better,52) output(99,better,71) output(99,better,98) output(99,better,52) output(30,worse,76) output(30,worse,67) output(30,worse,53) output(30,worse,60) output(57,worse,99) output(57,worse,51) output(57,worse,76) output(57,worse,60) output(57,worse,53) output(57,worse,67) output(71,worse,76) output(71,worse,53) output(71,worse,67) output(71,worse,60) output(94,worse,76) output(94,worse,67) output(94,worse,53) output(94,worse,60) output(98,worse,53) output(98,worse,60) output(99,eq,51) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(30,eq,71) output(71,eq,98) output(53,eq,60) output(30,eq,98) output(94,eq,71) output(17,eq,67) output(51,eq,76) output(78,eq,51) output(57,eq,71) output(99,eq,76) output(78,eq,76) output(51,eq,67) output(99,eq,67) output(71,eq,52) output(30,eq,52) output(94,eq,98) output(57,eq,98) output(51,eq,53) output(99,eq,53) output(51,eq,60) output(99,eq,60) output(78,eq,60) output(78,eq,53) output(94,eq,52) output(57,eq,52) output(78,eq,67)
Optimization: 51 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(30,better,76) output(30,better,67) output(51,better,76) output(51,better,67) output(57,better,76) output(57,better,67) output(71,better,76) output(71,better,67) output(94,better,76) output(94,better,67) output(78,better,76) output(78,better,67) output(99,better,76) output(99,better,67) output(17,worse,52) output(67,worse,52) output(76,worse,52) output(57,eq,99) output(99,eq,51) output(51,eq,71) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(30,eq,71) output(71,eq,98) output(98,eq,53) output(53,eq,60) output(98,eq,60) output(71,eq,53) output(51,eq,98) output(30,eq,98) output(94,eq,71) output(17,eq,67) output(99,eq,71) output(57,eq,51) output(78,eq,51) output(57,eq,71) output(78,eq,71) output(71,eq,52) output(51,eq,52) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(51,eq,53) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(71,eq,60) output(51,eq,60) output(30,eq,60) output(94,eq,60) output(99,eq,60) output(57,eq,60) output(78,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 49 8
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(30,better,71) output(30,better,76) output(30,better,67) output(51,better,71) output(51,better,76) output(51,better,67) output(57,better,71) output(57,better,76) output(57,better,67) output(71,better,76) output(71,better,67) output(94,better,71) output(94,better,76) output(94,better,67) output(78,better,71) output(78,better,76) output(78,better,67) output(99,better,71) output(99,better,76) output(99,better,67) output(17,worse,52) output(67,worse,52) output(71,worse,98) output(71,worse,53) output(71,worse,52) output(71,worse,60) output(76,worse,52) output(57,eq,99) output(99,eq,51) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(98,eq,53) output(53,eq,60) output(98,eq,60) output(51,eq,98) output(30,eq,98) output(17,eq,67) output(57,eq,51) output(78,eq,51) output(51,eq,52) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(51,eq,53) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(51,eq,60) output(30,eq,60) output(94,eq,60) output(99,eq,60) output(57,eq,60) output(78,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 43 13
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,less(weight)) output(30,better,76) output(30,better,67) output(30,better,60) output(53,better,60) output(57,better,51) output(57,better,76) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,67) output(71,better,60) output(94,better,76) output(94,better,67) output(94,better,60) output(78,better,51) output(78,better,76) output(78,better,60) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,76) output(99,better,67) output(99,better,60) output(17,worse,52) output(51,worse,71) output(51,worse,98) output(51,worse,52) output(51,worse,53) output(67,worse,52) output(76,worse,52) output(57,eq,99) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(30,eq,71) output(71,eq,98) output(98,eq,53) output(71,eq,53) output(30,eq,98) output(94,eq,71) output(17,eq,67) output(51,eq,76) output(99,eq,71) output(57,eq,71) output(78,eq,71) output(51,eq,67) output(71,eq,52) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(51,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 40 9
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(30,better,71) output(30,better,76) output(30,better,67) output(30,better,60) output(53,better,60) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,60) output(57,better,67) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,60) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,60) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,60) output(17,worse,52) output(51,worse,98) output(51,worse,52) output(51,worse,53) output(67,worse,52) output(71,worse,98) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(57,eq,99) output(51,eq,71) output(71,eq,76) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(98,eq,53) output(30,eq,98) output(71,eq,67) output(17,eq,67) output(51,eq,76) output(51,eq,67) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(71,eq,60) output(51,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 38 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(30,better,71) output(30,better,76) output(30,better,67) output(30,better,60) output(53,better,60) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,60) output(57,better,67) output(71,better,60) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,60) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,60) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,60) output(17,worse,52) output(51,worse,71) output(51,worse,98) output(51,worse,76) output(51,worse,67) output(51,worse,52) output(51,worse,53) output(67,worse,52) output(71,worse,76) output(71,worse,98) output(71,worse,53) output(71,worse,67) output(71,worse,52) output(76,worse,52) output(57,eq,99) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(98,eq,53) output(30,eq,98) output(17,eq,67) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(51,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 37 13
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(30,better,71) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,76) output(51,better,67) output(53,better,60) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,60) output(57,better,67) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,60) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,60) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,60) output(17,worse,52) output(51,worse,98) output(51,worse,52) output(51,worse,53) output(67,worse,52) output(71,worse,98) output(71,worse,53) output(71,worse,52) output(71,worse,60) output(76,worse,52) output(57,eq,99) output(71,eq,76) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(98,eq,53) output(30,eq,98) output(71,eq,67) output(17,eq,67) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(51,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 35 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(30,better,71) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,76) output(51,better,67) output(53,better,60) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,67) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,60) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,60) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,60) output(17,worse,52) output(51,worse,98) output(51,worse,52) output(51,worse,53) output(67,worse,52) output(71,worse,98) output(71,worse,53) output(71,worse,52) output(71,worse,60) output(76,worse,52) output(57,eq,99) output(76,eq,67) output(78,eq,99) output(17,eq,76) output(94,eq,30) output(98,eq,53) output(30,eq,98) output(17,eq,67) output(30,eq,52) output(94,eq,98) output(99,eq,98) output(57,eq,98) output(78,eq,98) output(30,eq,53) output(94,eq,53) output(99,eq,53) output(51,eq,60) output(57,eq,53) output(78,eq,53) output(94,eq,52) output(99,eq,52) output(57,eq,52) output(78,eq,52)
Optimization: 33 12
Answer: 10
preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(4))),1) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(30,better,98) output(30,better,67) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,52) output(51,better,53) output(57,better,98) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,53) output(71,better,67) output(71,better,52) output(76,better,67) output(76,better,52) output(94,better,30) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,52) output(78,better,99) output(78,better,98) output(78,better,53) output(78,better,52) output(78,better,67) output(99,better,67) output(99,better,98) output(99,better,52) output(17,worse,76) output(17,worse,52) output(30,worse,71) output(30,worse,76) output(30,worse,53) output(30,worse,60) output(53,worse,60) output(57,worse,99) output(57,worse,51) output(57,worse,71) output(57,worse,76) output(57,worse,60) output(57,worse,53) output(67,worse,52) output(71,worse,60) output(94,worse,60) output(78,worse,51) output(78,worse,71) output(78,worse,76) output(78,worse,60) output(98,worse,53) output(98,worse,60) output(99,worse,51) output(99,worse,71) output(99,worse,76) output(99,worse,53) output(99,worse,60) output(94,eq,71) output(17,eq,67) output(30,eq,52) output(51,eq,60) output(57,eq,52)
Optimization: 32 13
Progression : [ 3;32] (Error: 9.66667)
Progression : [ 4;32] (Error: 7)
Answer: 11
preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(30,better,76) output(30,better,67) output(30,better,53) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,52) output(51,better,53) output(51,better,60) output(71,better,76) output(71,better,98) output(71,better,53) output(71,better,67) output(71,better,52) output(71,better,60) output(76,better,67) output(94,better,67) output(94,better,53) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,53) output(98,better,60) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(30,worse,71) output(53,worse,60) output(57,worse,99) output(57,worse,51) output(57,worse,71) output(57,worse,76) output(57,worse,98) output(57,worse,60) output(57,worse,52) output(67,worse,52) output(76,worse,52) output(94,worse,30) output(94,worse,71) output(94,worse,98) output(94,worse,52) output(99,eq,51) output(30,eq,98) output(17,eq,67) output(94,eq,76) output(30,eq,52) output(94,eq,60) output(57,eq,53) output(57,eq,67)
Optimization: 25 7
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,3),1,for(atom(hasPrep(5))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),6) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(17,better,52) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,52) output(51,better,53) output(51,better,60) output(67,better,52) output(71,better,76) output(71,better,98) output(71,better,53) output(71,better,67) output(71,better,52) output(76,better,67) output(76,better,52) output(94,better,30) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,52) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,53) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(30,worse,71) output(30,worse,98) output(30,worse,76) output(30,worse,67) output(30,worse,60) output(53,worse,60) output(57,worse,99) output(57,worse,51) output(57,worse,71) output(57,worse,76) output(57,worse,98) output(57,worse,60) output(57,worse,67) output(98,worse,60) output(78,eq,99) output(94,eq,71) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(71,eq,60) output(94,eq,60) output(57,eq,53) output(57,eq,52)
Optimization: 24 10
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(0))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,98) output(51,better,76) output(51,better,67) output(53,better,60) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(51,worse,52) output(51,worse,53) output(57,worse,99) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(98,worse,60) output(51,eq,71) output(78,eq,99) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(71,eq,60) output(51,eq,60) output(57,eq,53) output(57,eq,52)
Optimization: 20 11
Progression : [ 5;20] (Error: 3)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,67) output(51,better,52) output(51,better,53) output(51,better,60) output(53,better,60) output(57,better,71) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,98) output(71,better,60) output(76,better,67) output(76,better,52) output(94,better,30) output(94,better,71) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(30,worse,76) output(51,worse,76) output(57,worse,99) output(57,worse,51) output(57,worse,76) output(67,worse,52) output(71,worse,76) output(71,worse,53) output(71,worse,52) output(94,worse,76) output(98,worse,53) output(71,eq,67) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(57,eq,53) output(57,eq,52)
Optimization: 19 12
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,60) output(53,better,60) output(57,better,99) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(71,better,60) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,60) output(17,worse,76) output(17,worse,52) output(30,worse,53) output(51,worse,52) output(51,worse,53) output(57,worse,53) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(98,worse,60) output(99,worse,53) output(99,worse,52) output(17,eq,67) output(30,eq,52) output(57,eq,52)
Optimization: 17 11
Progression : [ 6;17] (Error: 1.83333)
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,60) output(53,better,60) output(57,better,99) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(71,better,60) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,60) output(17,worse,76) output(17,worse,52) output(51,worse,52) output(51,worse,53) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(99,worse,53) output(99,worse,52) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(57,eq,53) output(57,eq,52)
Optimization: 16 10
Progression : [ 7;16] (Error: 1.28571)
Progression : [ 8;16] (Error: 1)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,60) output(53,better,60) output(57,better,51) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(71,better,60) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(51,worse,52) output(51,worse,53) output(57,worse,99) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(98,eq,60) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(57,eq,53) output(57,eq,52)
Optimization: 16 8
Progression : [ 9;16] (Error: 0.777778)
Progression : [10;16] (Error: 0.6)
Progression : [11;16] (Error: 0.454545)
Progression : [12;16] (Error: 0.333333)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,52) output(51,better,53) output(51,better,60) output(53,better,60) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(71,better,60) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(57,worse,99) output(57,worse,51) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(78,eq,99) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(57,eq,53) output(57,eq,52)
Optimization: 15 12
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,52) output(51,better,53) output(51,better,60) output(53,better,60) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(71,better,60) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(57,worse,99) output(57,worse,51) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(17,eq,67) output(30,eq,52) output(30,eq,53) output(57,eq,53) output(57,eq,52)
Optimization: 14 12
Progression : [13;14] (Error: 0.0769231)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(30,better,71) output(30,better,98) output(30,better,76) output(30,better,67) output(30,better,53) output(30,better,60) output(51,better,71) output(51,better,98) output(51,better,76) output(51,better,67) output(51,better,52) output(51,better,53) output(51,better,60) output(53,better,60) output(57,better,71) output(57,better,76) output(57,better,98) output(57,better,60) output(57,better,67) output(71,better,76) output(71,better,98) output(71,better,67) output(71,better,60) output(76,better,67) output(94,better,30) output(94,better,71) output(94,better,76) output(94,better,67) output(94,better,98) output(94,better,53) output(94,better,60) output(94,better,52) output(78,better,99) output(78,better,51) output(78,better,71) output(78,better,76) output(78,better,98) output(78,better,60) output(78,better,53) output(78,better,52) output(78,better,67) output(98,better,60) output(99,better,51) output(99,better,71) output(99,better,76) output(99,better,67) output(99,better,98) output(99,better,53) output(99,better,60) output(99,better,52) output(17,worse,76) output(17,worse,52) output(57,worse,99) output(57,worse,51) output(57,worse,52) output(67,worse,52) output(71,worse,53) output(71,worse,52) output(76,worse,52) output(98,worse,53) output(17,eq,67) output(30,eq,52) output(57,eq,53)
Optimization: 13 7
Progression : 13 [1;7] (Error: 6)
Progression : 13 [2;7] (Error: 2.5)
Progression : 13 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.055 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 13 7
Bounds       : 13 [3;7]
Calls        : 1
Time         : 298.231s (Solving: 296.40s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.215s
Threads      : 4        (Winner: 4)

Choices      : 6205129  (Domain: 601035)
Conflicts    : 5606807  (Analyzed: 5606793)
Restarts     : 4252     (Average: 1318.62 Last: 407501)
Model-Level  : 43.7    
Problems     : 21       (Average Length: 0.19 Splits: 0)
Lemmas       : 5816673  (Deleted: 5503986)
  Binary     : 434      (Ratio:   0.01%)
  Ternary    : 7283     (Ratio:   0.13%)
  Conflict   : 5606793  (Average Length:  217.0 Ratio:  96.39%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 209880   (Average Length:  168.9 Ratio:   3.61%) 
  Distributed: 70380    (Ratio:   1.26% Average LBD: 3.79) 
  Integrated : 211140   (Ratio: 300.00% Unit: 282 Average Jumps: 5.71)
Backjumps    : 5606793  (Average:  1.10 Max:  67 Sum: 6158391)
  Executed   : 5606776  (Average:  1.10 Max:  67 Sum: 6158238 Ratio: 100.00%)
  Bounded    : 17       (Average:  9.00 Max:  41 Sum:    153 Ratio:   0.00%)

Rules        : 141335  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 11770   
Bodies       : 5928    
  Sum        : 120     
  Count      : 14      
Equivalences : 7418     (Atom=Atom: 649 Body=Body: 278 Other: 6491)
Tight        : Yes
Variables    : 4883     (Eliminated:    0 Frozen: 3413)
Constraints  : 137680   (Binary:  97.7% Ternary:   1.1% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) 
}.
