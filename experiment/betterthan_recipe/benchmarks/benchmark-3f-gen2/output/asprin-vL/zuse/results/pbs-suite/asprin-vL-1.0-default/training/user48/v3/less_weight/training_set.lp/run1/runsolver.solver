asprin_vL version 1.0
Reading from stdin
-:1222:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1232:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1247:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1328:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1589:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1602:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1779:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1908:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1980:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1984:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2089:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2115:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2235:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2269:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1139:1-16: info: no atoms over signature occur in program:
  output/3

-:1131:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,10) output(24,eq,23) output(23,eq,49) output(49,eq,70) output(29,eq,64) output(64,eq,47) output(47,eq,18) output(69,eq,72) output(72,eq,52) output(65,eq,24) output(42,eq,67) output(67,eq,64) output(42,eq,64) output(69,eq,52) output(64,eq,18) output(29,eq,47) output(67,eq,47) output(23,eq,70) output(24,eq,49) output(65,eq,23) output(65,eq,49) output(24,eq,70) output(65,eq,70) output(42,eq,47) output(29,eq,18) output(67,eq,18) output(42,eq,18)
Optimization: 27 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(49,better,70) output(72,better,52) output(69,worse,72) output(23,worse,49) output(24,worse,49) output(65,worse,49) output(50,eq,10) output(24,eq,23) output(29,eq,64) output(64,eq,47) output(47,eq,18) output(65,eq,24) output(42,eq,67) output(67,eq,64) output(42,eq,64) output(69,eq,52) output(64,eq,18) output(29,eq,47) output(67,eq,47) output(23,eq,70) output(65,eq,23) output(24,eq,70) output(65,eq,70) output(42,eq,47) output(29,eq,18) output(67,eq,18) output(42,eq,18)
Optimization: 25 3
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),2) preference(1,less(weight)) output(29,better,47) output(64,better,47) output(67,better,47) output(42,better,47) output(49,better,70) output(72,better,52) output(50,worse,10) output(69,worse,72) output(23,worse,49) output(24,worse,49) output(47,worse,18) output(65,worse,49) output(24,eq,23) output(29,eq,64) output(65,eq,24) output(42,eq,67) output(67,eq,64) output(42,eq,64) output(69,eq,52) output(64,eq,18) output(23,eq,70) output(65,eq,23) output(24,eq,70) output(65,eq,70) output(29,eq,18) output(67,eq,18) output(42,eq,18)
Optimization: 21 8
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(1))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(29,better,47) output(64,better,47) output(67,better,47) output(69,better,72) output(23,better,49) output(42,better,67) output(42,better,47) output(65,better,24) output(65,better,49) output(67,worse,64) output(67,worse,18) output(24,worse,23) output(24,worse,49) output(24,worse,70) output(47,worse,18) output(49,worse,70) output(72,worse,52) output(50,eq,10) output(29,eq,64) output(42,eq,64) output(69,eq,52) output(64,eq,18) output(23,eq,70) output(65,eq,23) output(65,eq,70) output(29,eq,18) output(42,eq,18)
Optimization: 18 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,47) output(67,better,18) output(24,better,23) output(24,better,70) output(42,better,67) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,23) output(65,better,70) output(72,better,52) output(29,worse,64) output(29,worse,47) output(67,worse,64) output(69,worse,72) output(23,worse,49) output(23,worse,70) output(24,worse,49) output(65,worse,24) output(65,worse,49) output(42,eq,64) output(69,eq,52)
Optimization: 11 12
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(7))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,(1,11),1,for(atom(hasPrep(3))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(64,better,47) output(64,better,18) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,49) output(65,better,70) output(72,better,52) output(29,worse,64) output(29,worse,47) output(50,worse,10) output(67,worse,64) output(69,worse,72) output(65,worse,24) output(42,eq,64) output(69,eq,52) output(65,eq,23) output(29,eq,18)
Optimization: 10 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(1))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(72,better,52) output(69,worse,72) output(23,worse,49) output(23,worse,70) output(65,worse,24) output(65,worse,23) output(65,worse,49) output(65,worse,70) output(49,eq,70) output(69,eq,52)
Optimization: 9 11
Progression : [1;9] (Error: 8)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,23) output(72,better,52) output(69,worse,72) output(23,worse,49) output(23,worse,70) output(65,worse,24) output(65,worse,49) output(64,eq,47) output(69,eq,52) output(65,eq,70)
Optimization: 8 10
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasCost(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(65,better,49) output(72,better,52) output(69,worse,72) output(49,worse,70) output(65,worse,24) output(69,eq,52) output(23,eq,70) output(65,eq,23) output(65,eq,70)
Optimization: 7 10
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(65,better,49) output(65,better,70) output(72,better,52) output(69,worse,72) output(65,worse,24) output(49,eq,70) output(64,eq,47) output(69,eq,52) output(65,eq,23)
Optimization: 6 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,49) output(65,better,70) output(72,better,52) output(69,worse,72) output(65,worse,24) output(64,eq,47) output(69,eq,52) output(65,eq,23)
Optimization: 5 10
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,23) output(65,better,49) output(65,better,70) output(72,better,52) output(69,worse,72) output(65,worse,24) output(64,eq,47) output(69,eq,52)
Optimization: 4 9
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(4))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(3))),5) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(69,better,72) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,24) output(65,better,23) output(65,better,49) output(65,better,70) output(72,worse,52) output(69,eq,52)
Optimization: 2 12
Progression : [2;2] (Error: 0)
Progression : 2 [ 1;12] (Error: 11)
Progression : 2 [ 2;12] (Error: 5)
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasPrep(3))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,24) output(65,better,23) output(65,better,49) output(65,better,70) output(72,better,52) output(69,worse,72) output(69,eq,52)
Optimization: 2 11
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(69,better,72) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,24) output(65,better,23) output(65,better,49) output(65,better,70) output(72,worse,52) output(69,eq,52)
Optimization: 2 10
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrep(3))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,24) output(65,better,23) output(65,better,49) output(65,better,70) output(72,better,52) output(69,worse,72) output(69,eq,52)
Optimization: 2 8
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(29,better,64) output(29,better,47) output(29,better,18) output(50,better,10) output(64,better,47) output(64,better,18) output(67,better,64) output(67,better,47) output(67,better,18) output(23,better,49) output(23,better,70) output(24,better,23) output(24,better,49) output(24,better,70) output(42,better,67) output(42,better,64) output(42,better,47) output(42,better,18) output(47,better,18) output(49,better,70) output(65,better,24) output(65,better,23) output(65,better,49) output(65,better,70) output(72,better,52) output(69,worse,72) output(69,eq,52)
Optimization: 2 7
Progression : 2 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.048 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 2 7
Bounds       : 2 [3;7]
Calls        : 1
Time         : 298.349s (Solving: 296.80s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1188.264s
Threads      : 4        (Winner: 4)

Choices      : 7967800  (Domain: 807179)
Conflicts    : 7310669  (Analyzed: 7310662)
Restarts     : 5798     (Average: 1260.89 Last: 557519)
Model-Level  : 41.7    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 7453494  (Deleted: 7141678)
  Binary     : 1044     (Ratio:   0.01%)
  Ternary    : 4762     (Ratio:   0.06%)
  Conflict   : 7310658  (Average Length:  258.5 Ratio:  98.08%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 142836   (Average Length:  194.1 Ratio:   1.92%) 
  Distributed: 47690    (Ratio:   0.65% Average LBD: 3.85) 
  Integrated : 143070   (Ratio: 300.00% Unit: 132 Average Jumps: 4.39)
Backjumps    : 7310662  (Average:  1.08 Max:  39 Sum: 7898113)
  Executed   : 7310656  (Average:  1.08 Max:  39 Sum: 7898060 Ratio: 100.00%)
  Bounded    : 6        (Average:  8.83 Max:  26 Sum:     53 Ratio:   0.00%)

Rules        : 86721   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8266    
Bodies       : 5538    
  Sum        : 54      
  Count      : 14      
Equivalences : 3363     (Atom=Atom: 283 Body=Body: 122 Other: 2958)
Tight        : Yes
Variables    : 4773     (Eliminated:    0 Frozen: 3303)
Constraints  : 86380    (Binary:  96.4% Ternary:   1.7% Other:   1.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) 
}.
