asprin_vL version 1.0
Reading from stdin
-:1217:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1227:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1242:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1323:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1584:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1597:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1774:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1903:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1975:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1979:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1979:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1985:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2084:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2110:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2230:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2264:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2286:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1134:1-16: info: no atoms over signature occur in program:
  output/3

-:1126:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1127:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(79,eq,7) output(7,eq,46) output(46,eq,60) output(33,eq,32) output(39,eq,4) output(78,eq,52) output(31,eq,79) output(7,eq,51) output(42,eq,23) output(18,eq,90) output(90,eq,78) output(18,eq,78) output(79,eq,51) output(90,eq,52) output(7,eq,60) output(79,eq,46) output(31,eq,7) output(31,eq,46) output(79,eq,60) output(31,eq,60) output(18,eq,52) output(31,eq,51)
Optimization: 22 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(31,better,7) output(39,better,4) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,60) output(18,better,90) output(33,better,32) output(31,worse,79) output(31,worse,46) output(31,worse,60) output(31,worse,51) output(79,worse,46) output(90,worse,78) output(90,worse,52) output(7,worse,46) output(7,worse,51) output(7,worse,60) output(18,worse,78) output(18,worse,52) output(42,worse,23) output(78,worse,52)
Optimization: 14 11
Answer: 3
preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(31,better,7) output(31,better,46) output(31,better,60) output(31,better,51) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(18,better,90) output(90,worse,78) output(90,worse,52) output(7,eq,46) output(46,eq,60) output(33,eq,32) output(39,eq,4) output(78,eq,52) output(31,eq,79) output(7,eq,51) output(42,eq,23) output(18,eq,78) output(7,eq,60) output(18,eq,52)
Optimization: 13 1
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(31,better,7) output(31,better,60) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(90,better,78) output(33,better,32) output(42,better,23) output(31,worse,79) output(31,worse,46) output(31,worse,51) output(39,worse,4) output(90,worse,52) output(7,worse,46) output(7,worse,51) output(7,worse,60) output(18,worse,90) output(18,worse,78) output(18,worse,52) output(78,worse,52)
Optimization: 12 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(31,better,7) output(31,better,60) output(31,better,51) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(90,better,78) output(33,better,32) output(42,better,23) output(31,worse,79) output(31,worse,46) output(39,worse,4) output(90,worse,52) output(7,worse,46) output(7,worse,51) output(7,worse,60) output(18,worse,90) output(18,worse,78) output(18,worse,52) output(78,worse,52)
Optimization: 11 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(31,better,7) output(31,better,60) output(31,better,51) output(39,better,4) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,60) output(90,better,78) output(18,better,78) output(42,better,23) output(31,worse,46) output(79,worse,46) output(90,worse,52) output(7,worse,46) output(7,worse,51) output(7,worse,60) output(18,worse,90) output(18,worse,52) output(78,worse,52) output(33,eq,32) output(31,eq,79)
Optimization: 11 12
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(31,better,79) output(31,better,7) output(31,better,46) output(31,better,60) output(31,better,51) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(7,better,51) output(7,better,60) output(18,better,90) output(18,better,52) output(78,better,52) output(39,worse,4) output(90,worse,78) output(90,worse,52) output(7,worse,46) output(33,worse,32) output(42,worse,23) output(18,eq,78)
Optimization: 7 14
Answer: 8
preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(31,better,79) output(31,better,46) output(31,better,60) output(31,better,51) output(39,better,4) output(79,better,51) output(79,better,46) output(79,better,60) output(7,better,46) output(7,better,51) output(7,better,60) output(18,better,90) output(18,better,52) output(33,better,32) output(42,better,23) output(78,better,52) output(31,worse,7) output(46,worse,60) output(79,worse,7) output(90,worse,78) output(90,worse,52) output(18,worse,78)
Optimization: 6 10
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(4))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(31,better,79) output(31,better,7) output(31,better,46) output(31,better,60) output(31,better,51) output(39,better,4) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(90,better,78) output(90,better,52) output(7,better,46) output(7,better,51) output(7,better,60) output(18,better,90) output(18,better,78) output(18,better,52) output(33,better,32) output(42,better,23) output(78,better,52)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(31,better,79) output(31,better,7) output(31,better,46) output(31,better,60) output(31,better,51) output(39,better,4) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(90,better,78) output(90,better,52) output(7,better,46) output(7,better,51) output(7,better,60) output(18,better,90) output(18,better,78) output(18,better,52) output(33,better,32) output(42,better,23) output(78,better,52)
Optimization: 0 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(31,better,79) output(31,better,7) output(31,better,46) output(31,better,60) output(31,better,51) output(39,better,4) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(90,better,78) output(90,better,52) output(7,better,46) output(7,better,51) output(7,better,60) output(18,better,90) output(18,better,78) output(18,better,52) output(33,better,32) output(42,better,23) output(78,better,52)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Answer: 12
preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),6) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(31,better,79) output(31,better,7) output(31,better,46) output(31,better,60) output(31,better,51) output(39,better,4) output(46,better,60) output(79,better,7) output(79,better,51) output(79,better,46) output(79,better,60) output(90,better,78) output(90,better,52) output(7,better,46) output(7,better,51) output(7,better,60) output(18,better,90) output(18,better,78) output(18,better,52) output(33,better,32) output(42,better,23) output(78,better,52)
Optimization: 0 8
Progression : 0 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.039 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 298.161s (Solving: 296.53s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.506s
Threads      : 4        (Winner: 4)

Choices      : 6977450  (Domain: 726677)
Conflicts    : 6433446  (Analyzed: 6433443)
Restarts     : 4634     (Average: 1388.31 Last: 383969)
Model-Level  : 44.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6664290  (Deleted: 6364992)
  Binary     : 256      (Ratio:   0.00%)
  Ternary    : 6436     (Ratio:   0.10%)
  Conflict   : 6433443  (Average Length:  207.0 Ratio:  96.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 230847   (Average Length:  152.6 Ratio:   3.46%) 
  Distributed: 77405    (Ratio:   1.20% Average LBD: 3.82) 
  Integrated : 232215   (Ratio: 300.00% Unit: 285 Average Jumps: 4.81)
Backjumps    : 6433443  (Average:  1.08 Max:  33 Sum: 6926734)
  Executed   : 6433442  (Average:  1.08 Max:  33 Sum: 6926717 Ratio: 100.00%)
  Bounded    : 1        (Average: 17.00 Max:  17 Sum:     17 Ratio:   0.00%)

Rules        : 79670   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 7784    
Bodies       : 5483    
  Sum        : 44      
  Count      : 14      
Equivalences : 3188     (Atom=Atom: 233 Body=Body: 102 Other: 2853)
Tight        : Yes
Variables    : 4761     (Eliminated:    0 Frozen: 3291)
Constraints  : 79792    (Binary:  96.1% Ternary:   1.9% Other:   2.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(3)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) 
}.
