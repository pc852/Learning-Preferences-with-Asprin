asprin_vL version 1.0
Reading from stdin
-:1233:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1243:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1258:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1339:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1600:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1613:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1790:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1919:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1991:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1995:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2100:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2126:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2246:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2280:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1150:1-16: info: no atoms over signature occur in program:
  output/3

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(31,eq,79) output(51,eq,42) output(42,eq,23) output(23,eq,72) output(72,eq,18) output(18,eq,90) output(90,eq,78) output(92,eq,37) output(60,eq,42) output(42,eq,72) output(72,eq,41) output(32,eq,76) output(4,eq,18) output(23,eq,41) output(42,eq,41) output(51,eq,72) output(60,eq,72) output(18,eq,78) output(72,eq,90) output(4,eq,90) output(23,eq,18) output(42,eq,18) output(51,eq,23) output(60,eq,23) output(51,eq,18) output(60,eq,18) output(23,eq,90) output(42,eq,90) output(51,eq,90) output(60,eq,90) output(72,eq,78) output(4,eq,78) output(23,eq,78) output(42,eq,78) output(51,eq,41) output(60,eq,41) output(51,eq,78) output(60,eq,78)
Optimization: 38 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(23,better,72) output(23,better,41) output(23,better,18) output(23,better,90) output(4,worse,78) output(51,worse,23) output(51,worse,78) output(60,worse,23) output(60,worse,78) output(90,worse,78) output(18,worse,78) output(42,worse,23) output(42,worse,78) output(72,worse,78) output(31,eq,79) output(51,eq,42) output(72,eq,18) output(18,eq,90) output(92,eq,37) output(60,eq,42) output(42,eq,72) output(72,eq,41) output(32,eq,76) output(4,eq,18) output(42,eq,41) output(51,eq,72) output(60,eq,72) output(72,eq,90) output(4,eq,90) output(42,eq,18) output(51,eq,18) output(60,eq,18) output(42,eq,90) output(51,eq,90) output(60,eq,90) output(23,eq,78) output(51,eq,41) output(60,eq,41)
Optimization: 34 4
Answer: 3
preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(4,better,18) output(4,better,78) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,78) output(60,better,23) output(60,better,18) output(60,better,78) output(90,better,78) output(92,better,37) output(32,better,76) output(42,better,23) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(72,better,78) output(60,worse,42) output(60,worse,72) output(60,worse,41) output(18,worse,90) output(23,worse,72) output(23,worse,41) output(23,worse,18) output(23,worse,90) output(23,worse,78) output(31,eq,79) output(51,eq,42) output(42,eq,72) output(72,eq,41) output(42,eq,41) output(51,eq,72) output(18,eq,78) output(4,eq,90) output(60,eq,90) output(51,eq,41)
Optimization: 19 10
Answer: 4
preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(4,better,18) output(4,better,78) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,41) output(60,better,78) output(90,better,78) output(92,better,37) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,78) output(60,worse,42) output(18,worse,90) output(23,worse,72) output(23,worse,41) output(23,worse,18) output(23,worse,90) output(23,worse,78) output(72,worse,90) output(31,eq,79) output(51,eq,42) output(72,eq,41) output(18,eq,78) output(4,eq,90) output(60,eq,90)
Optimization: 14 11
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(4,better,18) output(4,better,78) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,41) output(60,better,78) output(90,better,78) output(92,better,37) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,78) output(72,better,18) output(72,better,78) output(4,worse,90) output(31,worse,79) output(18,worse,90) output(23,worse,72) output(23,worse,41) output(23,worse,18) output(23,worse,90) output(23,worse,78) output(42,worse,90) output(72,worse,90) output(72,eq,41) output(18,eq,78) output(60,eq,90)
Optimization: 13 13
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),1) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(4,better,18) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(90,better,78) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,78) output(72,better,18) output(72,better,78) output(4,worse,90) output(92,worse,37) output(18,worse,90) output(23,worse,72) output(23,worse,41) output(23,worse,90) output(32,worse,76) output(42,worse,90) output(72,worse,90) output(72,eq,41) output(18,eq,78) output(23,eq,18) output(23,eq,78)
Optimization: 13 10
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,11),1,for(atom(hasCost(1))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,78) output(90,better,78) output(92,better,37) output(18,better,78) output(32,better,76) output(42,better,23) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(72,better,78) output(60,worse,42) output(60,worse,72) output(60,worse,41) output(18,worse,90) output(23,worse,72) output(23,worse,41) output(23,worse,18) output(23,worse,90) output(23,worse,78) output(42,eq,72) output(72,eq,41) output(42,eq,41)
Optimization: 12 11
Progression : [ 2;12] (Error: 5)
Progression : [ 3;12] (Error: 3)
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(4,better,18) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,41) output(60,better,78) output(90,better,78) output(92,better,37) output(23,better,72) output(23,better,41) output(23,better,18) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,78) output(72,better,18) output(4,worse,90) output(4,worse,78) output(31,worse,79) output(60,worse,90) output(18,worse,90) output(18,worse,78) output(23,worse,90) output(42,worse,90) output(72,worse,90) output(72,worse,78) output(72,eq,41) output(23,eq,78)
Optimization: 12 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasPrep(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(92,better,37) output(18,better,90) output(23,better,90) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(72,better,78) output(90,worse,78) output(23,worse,72) output(23,worse,41) output(72,eq,41) output(18,eq,78) output(23,eq,18) output(23,eq,78)
Optimization: 7 10
Progression : [4;7] (Error: 0.75)
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(92,better,37) output(23,better,72) output(23,better,41) output(23,better,18) output(23,better,90) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(90,worse,78) output(18,worse,90) output(18,worse,78) output(72,worse,78) output(72,eq,41) output(23,eq,78)
Optimization: 6 11
Progression : [5;6] (Error: 0.2)
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),5) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(92,better,37) output(18,better,90) output(23,better,72) output(23,better,41) output(23,better,18) output(23,better,90) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(90,worse,78) output(18,worse,78) output(72,worse,78) output(72,eq,41) output(23,eq,78)
Optimization: 5 10
Progression : 5 [ 1;10] (Error: 9)
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(92,better,37) output(18,better,90) output(23,better,72) output(23,better,41) output(23,better,18) output(23,better,90) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(90,worse,78) output(18,worse,78) output(72,worse,78) output(72,eq,41) output(23,eq,78)
Optimization: 5 9
Progression : 5 [2;9] (Error: 3.5)
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(92,better,37) output(18,better,90) output(23,better,72) output(23,better,41) output(23,better,18) output(23,better,90) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(90,worse,78) output(18,worse,78) output(72,worse,78) output(72,eq,41) output(23,eq,78)
Optimization: 5 8
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),8) preference(1,less(weight)) output(4,better,18) output(4,better,90) output(4,better,78) output(31,better,79) output(51,better,42) output(51,better,72) output(51,better,23) output(51,better,18) output(51,better,90) output(51,better,41) output(51,better,78) output(60,better,42) output(60,better,72) output(60,better,23) output(60,better,18) output(60,better,90) output(60,better,41) output(60,better,78) output(92,better,37) output(18,better,90) output(23,better,72) output(23,better,41) output(23,better,18) output(23,better,90) output(32,better,76) output(42,better,23) output(42,better,72) output(42,better,41) output(42,better,18) output(42,better,90) output(42,better,78) output(72,better,18) output(72,better,90) output(90,worse,78) output(18,worse,78) output(72,worse,78) output(72,eq,41) output(23,eq,78)
Optimization: 5 7
Progression : 5 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.050 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 5 7
Bounds       : 5 [3;7]
Calls        : 1
Time         : 298.148s (Solving: 296.54s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.322s
Threads      : 4        (Winner: 4)

Choices      : 8442074  (Domain: 891321)
Conflicts    : 7775658  (Analyzed: 7775651)
Restarts     : 7066     (Average: 1100.43 Last: 324548)
Model-Level  : 36.2    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 8044772  (Deleted: 7758028)
  Binary     : 339      (Ratio:   0.00%)
  Ternary    : 7378     (Ratio:   0.09%)
  Conflict   : 7775643  (Average Length:  158.7 Ratio:  96.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 269129   (Average Length:  116.3 Ratio:   3.35%) 
  Distributed: 90091    (Ratio:   1.16% Average LBD: 3.74) 
  Integrated : 270273   (Ratio: 300.00% Unit: 401 Average Jumps: 4.52)
Backjumps    : 7775651  (Average:  1.08 Max:  29 Sum: 8367840)
  Executed   : 7775632  (Average:  1.08 Max:  29 Sum: 8367760 Ratio: 100.00%)
  Bounded    : 19       (Average:  4.21 Max:  28 Sum:     80 Ratio:   0.00%)

Rules        : 102723  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9328    
Bodies       : 5650    
  Sum        : 67      
  Count      : 14      
Equivalences : 6371     (Atom=Atom: 411 Body=Body: 187 Other: 5773)
Tight        : Yes
Variables    : 4787     (Eliminated:    0 Frozen: 3317)
Constraints  : 101343   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(3)) 
}.
