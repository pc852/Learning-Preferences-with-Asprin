asprin_vL version 1.0
Reading from stdin
-:1232:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1242:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1257:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1338:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1599:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1612:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1789:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1918:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1990:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1994:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1994:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2000:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2099:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2125:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2245:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2279:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2301:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1149:1-16: info: no atoms over signature occur in program:
  output/3

-:1141:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,90) output(65,eq,79) output(22,eq,84) output(84,eq,92) output(92,eq,77) output(77,eq,10) output(100,eq,52) output(51,eq,58) output(75,eq,64) output(64,eq,38) output(38,eq,24) output(24,eq,84) output(38,eq,84) output(64,eq,24) output(75,eq,38) output(92,eq,10) output(84,eq,77) output(22,eq,92) output(24,eq,92) output(51,eq,90) output(38,eq,92) output(64,eq,92) output(22,eq,77) output(24,eq,77) output(38,eq,77) output(84,eq,10) output(22,eq,10) output(24,eq,10) output(75,eq,24) output(64,eq,84) output(75,eq,84) output(38,eq,10) output(64,eq,10) output(75,eq,10) output(64,eq,77) output(75,eq,77) output(75,eq,92)
Optimization: 37 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(38,better,24) output(38,better,84) output(38,better,10) output(58,better,90) output(64,better,24) output(64,better,84) output(64,better,10) output(77,better,10) output(92,better,10) output(75,better,24) output(75,better,84) output(75,better,10) output(22,worse,84) output(22,worse,92) output(22,worse,77) output(22,worse,10) output(51,worse,58) output(84,worse,92) output(84,worse,77) output(24,worse,84) output(24,worse,92) output(24,worse,77) output(24,worse,10) output(65,eq,79) output(92,eq,77) output(100,eq,52) output(75,eq,64) output(64,eq,38) output(75,eq,38) output(51,eq,90) output(38,eq,92) output(64,eq,92) output(38,eq,77) output(84,eq,10) output(64,eq,77) output(75,eq,77) output(75,eq,92)
Optimization: 25 2
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(22,better,92) output(22,better,77) output(22,better,10) output(84,better,92) output(84,better,77) output(84,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,10) output(75,better,77) output(75,better,92) output(38,worse,24) output(38,worse,84) output(64,worse,24) output(64,worse,84) output(75,worse,24) output(100,worse,52) output(58,eq,90) output(22,eq,84) output(92,eq,77) output(77,eq,10) output(51,eq,58) output(64,eq,38) output(92,eq,10) output(51,eq,90) output(38,eq,92) output(64,eq,92) output(38,eq,77) output(75,eq,84) output(38,eq,10) output(64,eq,10) output(64,eq,77)
Optimization: 21 5
Answer: 4
preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(22,better,92) output(22,better,77) output(22,better,10) output(51,better,58) output(51,better,90) output(84,better,92) output(84,better,77) output(84,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,10) output(75,better,77) output(75,better,92) output(38,worse,24) output(38,worse,84) output(38,worse,10) output(64,worse,24) output(64,worse,84) output(64,worse,10) output(77,worse,10) output(92,worse,10) output(75,worse,24) output(100,worse,52) output(58,eq,90) output(22,eq,84) output(92,eq,77) output(64,eq,38) output(38,eq,92) output(64,eq,92) output(38,eq,77) output(75,eq,84) output(64,eq,77)
Optimization: 19 2
Answer: 5
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(22,better,10) output(38,better,10) output(51,better,58) output(64,better,10) output(77,better,10) output(84,better,10) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(58,worse,90) output(64,worse,24) output(22,eq,84) output(84,eq,92) output(92,eq,77) output(64,eq,38) output(38,eq,84) output(84,eq,77) output(22,eq,92) output(51,eq,90) output(38,eq,92) output(64,eq,92) output(22,eq,77) output(38,eq,77) output(64,eq,84) output(64,eq,77)
Optimization: 17 2
Answer: 6
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(22,better,84) output(22,better,10) output(38,better,84) output(38,better,10) output(58,better,90) output(64,better,84) output(64,better,10) output(77,better,10) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(51,worse,58) output(64,worse,24) output(84,worse,92) output(84,worse,77) output(92,eq,77) output(64,eq,38) output(22,eq,92) output(51,eq,90) output(38,eq,92) output(64,eq,92) output(22,eq,77) output(38,eq,77) output(84,eq,10) output(75,eq,24) output(64,eq,77)
Optimization: 16 2
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(22,better,84) output(22,better,77) output(22,better,10) output(38,better,84) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,10) output(92,better,77) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(38,worse,92) output(64,worse,24) output(84,worse,92) output(84,worse,77) output(75,worse,24) output(22,eq,92) output(64,eq,92) output(38,eq,77)
Optimization: 9 12
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,10) output(38,better,24) output(38,better,84) output(38,better,92) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(77,better,10) output(84,better,92) output(84,better,10) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(22,worse,77) output(64,worse,38) output(64,worse,77) output(84,worse,77) output(92,worse,77) output(24,worse,77) output(100,eq,52) output(38,eq,77)
Optimization: 8 12
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,10) output(51,better,58) output(51,better,90) output(64,better,38) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,77) output(84,better,10) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(38,worse,84) output(58,worse,90) output(22,eq,84) output(92,eq,77) output(38,eq,92) output(38,eq,77)
Optimization: 7 11
Progression : [1;7] (Error: 6)
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,10) output(51,better,58) output(51,better,90) output(64,better,38) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,77) output(84,better,10) output(92,better,77) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(38,worse,84) output(38,worse,92) output(64,worse,24) output(58,eq,90) output(84,eq,92) output(38,eq,77)
Optimization: 7 9
Progression : [2;7] (Error: 2.5)
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,77) output(84,better,10) output(92,better,77) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(38,worse,24) output(38,worse,84) output(38,worse,92) output(64,worse,24) output(100,worse,52) output(38,eq,77)
Optimization: 6 11
Answer: 12
preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,24) output(38,better,84) output(38,better,92) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,10) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(84,worse,77) output(92,worse,77) output(24,worse,77) output(38,eq,77)
Optimization: 4 11
Progression : [3;4] (Error: 0.333333)
Progression : [4;4] (Error: 0)
Progression : 4 [ 1;11] (Error: 10)
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,77) output(84,better,10) output(92,better,77) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(38,worse,84) output(38,worse,92) output(38,eq,77)
Optimization: 4 10
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,77) output(84,better,10) output(92,better,77) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(38,worse,84) output(38,worse,92) output(38,eq,77)
Optimization: 4 9
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,77) output(84,better,10) output(92,better,77) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,77) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(38,worse,24) output(38,worse,84) output(38,worse,92) output(38,eq,77)
Optimization: 4 8
Progression : 4 [2;8] (Error: 3)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(7))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),6) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(22,better,84) output(22,better,92) output(22,better,77) output(22,better,10) output(38,better,24) output(38,better,84) output(38,better,92) output(38,better,10) output(51,better,58) output(51,better,90) output(58,better,90) output(64,better,38) output(64,better,24) output(64,better,92) output(64,better,84) output(64,better,10) output(64,better,77) output(77,better,10) output(84,better,92) output(84,better,10) output(92,better,10) output(24,better,84) output(24,better,92) output(24,better,10) output(65,better,79) output(75,better,64) output(75,better,38) output(75,better,24) output(75,better,84) output(75,better,10) output(75,better,77) output(75,better,92) output(100,better,52) output(84,worse,77) output(92,worse,77) output(24,worse,77) output(38,eq,77)
Optimization: 4 7
Progression : 4 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.045 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 4 7
Bounds       : 4 [3;7]
Calls        : 1
Time         : 297.101s (Solving: 295.45s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1181.267s
Threads      : 4        (Winner: 4)

Choices      : 7569499  (Domain: 775702)
Conflicts    : 6946549  (Analyzed: 6946541)
Restarts     : 5682     (Average: 1222.55 Last: 414511)
Model-Level  : 37.0    
Problems     : 15       (Average Length: 0.27 Splits: 0)
Lemmas       : 7087282  (Deleted: 6812618)
  Binary     : 587      (Ratio:   0.01%)
  Ternary    : 4734     (Ratio:   0.07%)
  Conflict   : 6946538  (Average Length:  242.1 Ratio:  98.01%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 140744   (Average Length:  229.8 Ratio:   1.99%) 
  Distributed: 47037    (Ratio:   0.68% Average LBD: 3.82) 
  Integrated : 141111   (Ratio: 300.00% Unit: 155 Average Jumps: 4.78)
Backjumps    : 6946541  (Average:  1.08 Max:  55 Sum: 7494045)
  Executed   : 6946528  (Average:  1.08 Max:  55 Sum: 7493918 Ratio: 100.00%)
  Bounded    : 13       (Average:  9.77 Max:  25 Sum:    127 Ratio:   0.00%)

Rules        : 101943  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9238    
Bodies       : 5648    
  Sum        : 74      
  Count      : 14      
Equivalences : 3713     (Atom=Atom: 383 Body=Body: 162 Other: 3168)
Tight        : Yes
Variables    : 4805     (Eliminated:    0 Frozen: 3335)
Constraints  : 100684   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) 
}.
