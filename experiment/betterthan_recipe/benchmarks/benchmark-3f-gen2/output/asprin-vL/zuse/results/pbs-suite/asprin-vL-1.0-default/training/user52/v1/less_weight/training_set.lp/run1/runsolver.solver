asprin_vL version 1.0
Reading from stdin
-:1295:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1305:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1320:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1401:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1662:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1675:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1852:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1981:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2053:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2057:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2057:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2063:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2162:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2188:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2308:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2342:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2364:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1212:1-16: info: no atoms over signature occur in program:
  output/3

-:1204:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1205:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(71,eq,7) output(7,eq,39) output(18,eq,84) output(30,eq,32) output(17,eq,69) output(69,eq,61) output(39,eq,18) output(84,eq,30) output(32,eq,17) output(8,eq,21) output(18,eq,47) output(47,eq,7) output(7,eq,42) output(42,eq,62) output(89,eq,61) output(67,eq,18) output(62,eq,89) output(42,eq,89) output(62,eq,61) output(7,eq,62) output(71,eq,42) output(47,eq,42) output(18,eq,7) output(39,eq,47) output(67,eq,47) output(30,eq,17) output(18,eq,30) output(7,eq,18) output(17,eq,61) output(32,eq,69) output(84,eq,32) output(39,eq,84) output(67,eq,84) output(71,eq,39) output(47,eq,39) output(18,eq,39) output(39,eq,39) output(67,eq,39) output(7,eq,84) output(71,eq,84) output(47,eq,84) output(18,eq,32) output(39,eq,32) output(67,eq,32) output(30,eq,69) output(84,eq,69) output(32,eq,61) output(30,eq,61) output(71,eq,18) output(47,eq,18) output(18,eq,18) output(39,eq,30) output(67,eq,30) output(7,eq,30) output(84,eq,17) output(18,eq,17) output(7,eq,47) output(71,eq,47) output(47,eq,47) output(39,eq,7) output(67,eq,7) output(7,eq,7) output(18,eq,42) output(39,eq,42) output(67,eq,42) output(71,eq,62) output(47,eq,62) output(18,eq,62) output(42,eq,61) output(7,eq,61) output(7,eq,89) output(71,eq,89) output(47,eq,89) output(18,eq,89) output(39,eq,89) output(67,eq,89) output(71,eq,61) output(47,eq,61) output(18,eq,61) output(39,eq,61) output(67,eq,61) output(39,eq,62) output(67,eq,62) output(39,eq,17) output(67,eq,17) output(7,eq,17) output(71,eq,17) output(47,eq,17) output(71,eq,30) output(47,eq,30) output(84,eq,61) output(18,eq,69) output(39,eq,69) output(67,eq,69) output(7,eq,69) output(71,eq,69) output(47,eq,69) output(7,eq,32) output(71,eq,32) output(47,eq,32)
Optimization: 100 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,(1,11),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(17,better,69) output(30,better,32) output(30,better,69) output(39,better,18) output(39,better,47) output(39,better,7) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,7) output(67,better,42) output(67,better,62) output(67,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,69) output(71,better,32) output(18,better,7) output(42,better,62) output(47,better,7) output(8,worse,21) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,42) output(39,worse,89) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(62,worse,89) output(62,worse,61) output(69,worse,61) output(84,worse,30) output(84,worse,32) output(84,worse,69) output(84,worse,17) output(84,worse,61) output(7,worse,39) output(7,worse,42) output(7,worse,62) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,47) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(7,worse,32) output(18,worse,84) output(18,worse,30) output(18,worse,39) output(18,worse,32) output(18,worse,17) output(18,worse,42) output(18,worse,62) output(18,worse,89) output(18,worse,61) output(18,worse,69) output(32,worse,17) output(32,worse,61) output(42,worse,89) output(42,worse,61) output(47,worse,42) output(47,worse,39) output(47,worse,84) output(47,worse,62) output(47,worse,89) output(47,worse,61) output(47,worse,17) output(47,worse,30) output(47,worse,69) output(47,worse,32) output(18,eq,47) output(89,eq,61) output(30,eq,17) output(17,eq,61) output(32,eq,69) output(39,eq,39) output(30,eq,61) output(47,eq,18) output(18,eq,18) output(67,eq,30) output(47,eq,47) output(7,eq,7) output(71,eq,89) output(67,eq,89) output(71,eq,61) output(67,eq,61) output(39,eq,62) output(67,eq,17) output(71,eq,17) output(71,eq,30)
Optimization: 73 9
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(4))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasPrep(3))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(39,better,47) output(39,better,32) output(39,better,7) output(67,better,18) output(67,better,47) output(67,better,39) output(67,better,32) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,62) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,32) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(18,better,47) output(18,better,7) output(18,better,39) output(18,better,32) output(18,better,62) output(18,better,89) output(42,better,62) output(42,better,89) output(47,better,7) output(8,worse,21) output(17,worse,69) output(17,worse,61) output(39,worse,18) output(39,worse,84) output(39,worse,30) output(39,worse,42) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(62,worse,61) output(67,worse,84) output(67,worse,30) output(67,worse,61) output(67,worse,69) output(69,worse,61) output(71,worse,84) output(71,worse,61) output(71,worse,30) output(71,worse,69) output(84,worse,30) output(89,worse,61) output(7,worse,39) output(7,worse,42) output(7,worse,62) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,47) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(7,worse,32) output(18,worse,84) output(18,worse,30) output(18,worse,17) output(18,worse,61) output(18,worse,69) output(32,worse,17) output(32,worse,69) output(32,worse,61) output(42,worse,61) output(47,worse,42) output(47,worse,39) output(47,worse,84) output(47,worse,18) output(47,worse,62) output(47,worse,89) output(47,worse,61) output(47,worse,17) output(47,worse,30) output(47,worse,69) output(47,worse,32) output(62,eq,89) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(18,eq,42) output(39,eq,89) output(39,eq,62) output(67,eq,17) output(71,eq,17)
Optimization: 64 13
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(4))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(30,better,32) output(30,better,17) output(30,better,61) output(39,better,47) output(39,better,32) output(39,better,7) output(39,better,89) output(39,better,62) output(39,better,17) output(67,better,47) output(67,better,32) output(67,better,7) output(67,better,89) output(67,better,62) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,32) output(84,better,32) output(84,better,17) output(7,better,47) output(7,better,32) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,39) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(42,better,62) output(42,better,89) output(8,worse,21) output(17,worse,69) output(17,worse,61) output(39,worse,18) output(39,worse,30) output(39,worse,69) output(62,worse,89) output(62,worse,61) output(67,worse,18) output(67,worse,84) output(67,worse,39) output(67,worse,30) output(67,worse,42) output(67,worse,61) output(67,worse,69) output(71,worse,30) output(71,worse,69) output(84,worse,30) output(84,worse,69) output(89,worse,61) output(7,worse,39) output(7,worse,42) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(18,worse,30) output(18,worse,69) output(32,worse,17) output(32,worse,69) output(32,worse,61) output(47,worse,7) output(47,worse,42) output(47,worse,39) output(47,worse,84) output(47,worse,18) output(47,worse,62) output(47,worse,89) output(47,worse,61) output(47,worse,17) output(47,worse,30) output(47,worse,69) output(7,eq,62) output(39,eq,84) output(39,eq,39) output(30,eq,69) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(39,eq,42) output(42,eq,61) output(39,eq,61) output(67,eq,17) output(84,eq,61) output(47,eq,32)
Optimization: 58 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(30,better,32) output(30,better,17) output(30,better,61) output(67,better,39) output(67,better,62) output(69,better,61) output(71,better,39) output(71,better,62) output(71,better,89) output(71,better,17) output(71,better,32) output(84,better,32) output(84,better,17) output(84,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,47) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,39) output(18,better,32) output(18,better,17) output(18,better,62) output(18,better,89) output(18,better,61) output(32,better,17) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,39) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,32) output(17,worse,69) output(17,worse,61) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,7) output(39,worse,42) output(39,worse,89) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(62,worse,89) output(62,worse,61) output(67,worse,18) output(67,worse,47) output(67,worse,84) output(67,worse,32) output(67,worse,30) output(67,worse,7) output(67,worse,42) output(67,worse,89) output(67,worse,61) output(67,worse,69) output(71,worse,7) output(71,worse,42) output(71,worse,84) output(71,worse,18) output(71,worse,47) output(71,worse,61) output(71,worse,30) output(71,worse,69) output(89,worse,61) output(18,worse,7) output(32,worse,69) output(32,worse,61) output(47,worse,7) output(18,eq,84) output(84,eq,30) output(8,eq,21) output(18,eq,47) output(47,eq,42) output(18,eq,30) output(39,eq,39) output(47,eq,84) output(30,eq,69) output(84,eq,69) output(47,eq,18) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(18,eq,42) output(39,eq,62) output(67,eq,17) output(47,eq,30) output(18,eq,69) output(47,eq,69)
Optimization: 58 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(4))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(67,better,47) output(67,better,32) output(67,better,7) output(67,better,62) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,32) output(84,better,17) output(89,better,61) output(7,better,47) output(7,better,32) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,39) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(42,better,62) output(47,better,32) output(8,worse,21) output(17,worse,69) output(17,worse,61) output(39,worse,18) output(39,worse,30) output(62,worse,89) output(62,worse,61) output(67,worse,18) output(67,worse,84) output(67,worse,39) output(67,worse,30) output(67,worse,42) output(67,worse,89) output(67,worse,61) output(67,worse,69) output(84,worse,30) output(84,worse,69) output(7,worse,39) output(7,worse,42) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(18,worse,30) output(32,worse,17) output(32,worse,69) output(32,worse,61) output(42,worse,89) output(47,worse,7) output(47,worse,42) output(47,worse,39) output(47,worse,84) output(47,worse,18) output(47,worse,62) output(47,worse,89) output(47,worse,61) output(47,worse,17) output(47,worse,30) output(47,worse,69) output(7,eq,62) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(42,eq,61) output(67,eq,17) output(84,eq,61)
Optimization: 50 14
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrep(4))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(8,better,21) output(17,better,69) output(17,better,61) output(30,better,69) output(30,better,61) output(39,better,89) output(39,better,61) output(39,better,69) output(62,better,89) output(62,better,61) output(67,better,18) output(67,better,39) output(67,better,30) output(67,better,7) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,89) output(71,better,61) output(71,better,69) output(84,better,30) output(84,better,69) output(84,better,61) output(89,better,61) output(7,better,39) output(7,better,62) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,69) output(18,better,30) output(18,better,39) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,17) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,7) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(30,worse,32) output(30,worse,17) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,7) output(39,worse,42) output(39,worse,62) output(39,worse,17) output(67,worse,47) output(67,worse,32) output(67,worse,42) output(71,worse,7) output(71,worse,42) output(71,worse,84) output(71,worse,18) output(71,worse,47) output(71,worse,62) output(71,worse,17) output(71,worse,32) output(84,worse,32) output(7,worse,42) output(7,worse,84) output(7,worse,47) output(7,worse,17) output(7,worse,32) output(18,worse,84) output(18,worse,47) output(18,worse,32) output(18,worse,17) output(18,worse,42) output(47,worse,42) output(47,worse,32) output(18,eq,7) output(7,eq,18) output(67,eq,84) output(71,eq,39) output(39,eq,39) output(18,eq,18) output(39,eq,30) output(84,eq,17) output(47,eq,47) output(7,eq,7) output(67,eq,17) output(71,eq,30)
Optimization: 46 9
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrep(4))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(8,better,21) output(17,better,69) output(17,better,61) output(30,better,69) output(30,better,61) output(39,better,89) output(39,better,61) output(39,better,69) output(62,better,89) output(62,better,61) output(67,better,18) output(67,better,84) output(67,better,39) output(67,better,30) output(67,better,7) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,89) output(71,better,61) output(71,better,69) output(84,better,30) output(84,better,69) output(84,better,61) output(89,better,61) output(7,better,39) output(7,better,62) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,69) output(18,better,84) output(18,better,30) output(18,better,39) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,17) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,7) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(30,worse,32) output(30,worse,17) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,7) output(39,worse,42) output(39,worse,62) output(39,worse,17) output(67,worse,47) output(67,worse,32) output(67,worse,42) output(71,worse,7) output(71,worse,42) output(71,worse,84) output(71,worse,18) output(71,worse,47) output(71,worse,62) output(71,worse,17) output(71,worse,32) output(84,worse,32) output(84,worse,17) output(7,worse,42) output(7,worse,47) output(7,worse,17) output(7,worse,32) output(18,worse,47) output(18,worse,32) output(18,worse,17) output(18,worse,42) output(47,worse,42) output(47,worse,32) output(18,eq,7) output(7,eq,18) output(71,eq,39) output(39,eq,39) output(18,eq,18) output(39,eq,30) output(47,eq,47) output(7,eq,7) output(67,eq,17) output(71,eq,30)
Optimization: 43 10
Progression : [ 6;43] (Error: 6.16667)
Answer: 9
preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(39,better,18) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,42) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,32) output(67,better,30) output(67,better,42) output(67,better,61) output(67,better,62) output(67,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,62) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(30,worse,32) output(30,worse,17) output(30,worse,61) output(39,worse,47) output(39,worse,89) output(62,worse,89) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,7) output(67,worse,89) output(69,worse,61) output(71,worse,47) output(71,worse,89) output(7,worse,47) output(7,worse,89) output(18,worse,84) output(18,worse,47) output(18,worse,7) output(18,worse,39) output(18,worse,89) output(32,worse,17) output(42,worse,62) output(42,worse,89) output(42,worse,61) output(7,eq,39) output(8,eq,21) output(67,eq,18) output(39,eq,39) output(30,eq,69) output(18,eq,18) output(18,eq,17) output(47,eq,47) output(39,eq,7) output(7,eq,7) output(67,eq,17)
Optimization: 36 8
Answer: 10
preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,69) output(39,better,18) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,42) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,32) output(67,better,30) output(67,better,42) output(67,better,61) output(67,better,62) output(67,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,62) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(30,worse,32) output(30,worse,17) output(30,worse,61) output(39,worse,47) output(39,worse,89) output(62,worse,89) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,7) output(67,worse,89) output(69,worse,61) output(71,worse,47) output(71,worse,89) output(7,worse,47) output(7,worse,89) output(18,worse,84) output(18,worse,47) output(18,worse,7) output(18,worse,39) output(18,worse,89) output(32,worse,17) output(42,worse,62) output(42,worse,89) output(42,worse,61) output(7,eq,39) output(8,eq,21) output(67,eq,18) output(39,eq,39) output(18,eq,18) output(18,eq,17) output(47,eq,47) output(39,eq,7) output(7,eq,7) output(67,eq,17)
Optimization: 35 9
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(39,better,61) output(39,better,69) output(62,better,61) output(67,better,61) output(67,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,39) output(7,better,62) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,30) output(18,better,39) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,17) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,7) output(39,worse,42) output(39,worse,89) output(39,worse,62) output(62,worse,89) output(67,worse,18) output(67,worse,47) output(67,worse,84) output(67,worse,32) output(67,worse,30) output(67,worse,7) output(67,worse,42) output(67,worse,89) output(67,worse,62) output(69,worse,61) output(71,worse,18) output(71,worse,47) output(7,worse,42) output(7,worse,18) output(7,worse,47) output(47,worse,18) output(39,eq,39) output(67,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(39,eq,17) output(67,eq,17)
Optimization: 34 13
Answer: 12
preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,61) output(39,better,18) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,32) output(67,better,30) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(30,worse,32) output(30,worse,17) output(39,worse,47) output(62,worse,89) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,7) output(71,worse,47) output(7,worse,47) output(18,worse,84) output(18,worse,47) output(18,worse,7) output(18,worse,39) output(32,worse,17) output(42,worse,62) output(42,worse,89) output(7,eq,39) output(8,eq,21) output(67,eq,18) output(39,eq,39) output(30,eq,69) output(18,eq,18) output(18,eq,17) output(47,eq,47) output(39,eq,7) output(7,eq,7) output(67,eq,17)
Optimization: 28 9
Progression : [ 7;28] (Error: 3)
Progression : [ 8;28] (Error: 2.5)
Answer: 13
preference(1,(1,2),1,for(atom(hasPrep(4))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(8,better,21) output(17,better,69) output(17,better,61) output(30,better,69) output(30,better,61) output(39,better,18) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,89) output(62,better,61) output(67,better,18) output(67,better,84) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,84) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,7) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(30,worse,32) output(30,worse,17) output(39,worse,47) output(67,worse,47) output(67,worse,39) output(71,worse,39) output(71,worse,18) output(71,worse,47) output(71,worse,17) output(84,worse,17) output(7,worse,39) output(7,worse,18) output(7,worse,47) output(7,worse,17) output(18,worse,47) output(18,worse,39) output(18,worse,17) output(32,worse,17) output(42,worse,62) output(42,worse,89) output(42,worse,61) output(7,eq,62) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(67,eq,17)
Optimization: 27 12
Answer: 14
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasPrep(4))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,69) output(30,better,61) output(39,better,18) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,89) output(62,better,61) output(67,better,84) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,7) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,61) output(47,better,7) output(47,better,42) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(30,worse,17) output(67,worse,39) output(71,worse,39) output(84,worse,17) output(7,worse,39) output(7,worse,18) output(7,worse,47) output(7,worse,17) output(18,worse,39) output(32,worse,17) output(42,worse,62) output(42,worse,89) output(47,worse,39) output(18,eq,47) output(67,eq,18) output(7,eq,62) output(67,eq,47) output(39,eq,39) output(47,eq,18) output(18,eq,18) output(18,eq,17) output(47,eq,47) output(7,eq,7) output(67,eq,17) output(47,eq,17)
Optimization: 26 12
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrep(4))),4) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,69) output(30,better,61) output(39,better,18) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,18) output(67,better,47) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,30) output(7,better,47) output(7,better,61) output(7,better,89) output(7,better,69) output(7,better,32) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,42) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(30,worse,17) output(67,worse,39) output(7,worse,39) output(7,worse,84) output(7,worse,17) output(18,worse,84) output(18,worse,7) output(18,worse,39) output(18,worse,17) output(32,worse,17) output(47,worse,7) output(47,worse,39) output(47,worse,84) output(47,worse,17) output(18,eq,47) output(62,eq,89) output(67,eq,84) output(71,eq,39) output(39,eq,39) output(47,eq,18) output(18,eq,18) output(84,eq,17) output(47,eq,47) output(7,eq,7) output(67,eq,17)
Optimization: 26 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasPrep(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,69) output(30,better,61) output(39,better,18) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,89) output(62,better,61) output(67,better,32) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,42) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,47) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,30) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,42) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(67,worse,18) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,7) output(71,worse,7) output(71,worse,39) output(18,worse,47) output(18,worse,7) output(18,worse,39) output(32,worse,17) output(47,worse,7) output(47,worse,39) output(7,eq,39) output(18,eq,84) output(30,eq,17) output(39,eq,39) output(18,eq,18) output(67,eq,30) output(47,eq,47) output(39,eq,7) output(7,eq,7) output(67,eq,42) output(67,eq,17)
Optimization: 25 12
Progression : [ 9;25] (Error: 1.77778)
Progression : [10;25] (Error: 1.5)
Progression : [11;25] (Error: 1.27273)
Progression : [12;25] (Error: 1.08333)
Progression : [13;25] (Error: 0.923077)
Progression : [14;25] (Error: 0.785714)
Progression : [15;25] (Error: 0.666667)
Answer: 17
preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(4))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,32) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,30) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,42) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(62,worse,89) output(67,worse,18) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,30) output(67,worse,7) output(7,worse,39) output(7,worse,18) output(32,worse,17) output(47,worse,39) output(47,worse,18) output(39,eq,18) output(84,eq,30) output(47,eq,7) output(18,eq,39) output(39,eq,39) output(18,eq,18) output(7,eq,47) output(47,eq,47) output(7,eq,7) output(67,eq,42) output(67,eq,17)
Optimization: 24 8
Answer: 18
preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,32) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,84) output(7,better,30) output(7,better,47) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,30) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,42) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(62,worse,89) output(67,worse,18) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,30) output(67,worse,7) output(7,worse,39) output(7,worse,18) output(32,worse,17) output(47,worse,7) output(47,worse,39) output(47,worse,18) output(39,eq,18) output(84,eq,30) output(18,eq,39) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(67,eq,42) output(67,eq,17)
Optimization: 23 8
Answer: 19
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,69) output(30,better,61) output(39,better,18) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,32) output(84,better,69) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,47) output(7,better,61) output(7,better,89) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,30) output(18,better,32) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,42) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(30,worse,17) output(62,worse,89) output(67,worse,39) output(84,worse,17) output(7,worse,39) output(7,worse,17) output(18,worse,7) output(18,worse,39) output(18,worse,17) output(32,worse,17) output(47,worse,7) output(47,worse,39) output(47,worse,17) output(84,eq,30) output(18,eq,47) output(39,eq,39) output(47,eq,18) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(67,eq,17)
Optimization: 22 10
Progression : [16;22] (Error: 0.375)
Answer: 20
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(17,better,69) output(17,better,61) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(39,better,18) output(39,better,47) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(62,better,61) output(67,better,32) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(69,better,61) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,84) output(7,better,30) output(7,better,47) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,30) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(32,better,69) output(32,better,61) output(42,better,62) output(42,better,89) output(42,better,61) output(47,better,42) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(8,worse,21) output(62,worse,89) output(67,worse,18) output(67,worse,47) output(67,worse,84) output(67,worse,39) output(67,worse,30) output(67,worse,7) output(7,worse,39) output(7,worse,18) output(18,worse,39) output(32,worse,17) output(47,worse,7) output(47,worse,39) output(47,worse,18) output(84,eq,30) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(67,eq,17)
Optimization: 21 7
Progression : [17;21] (Error: 0.235294)
Progression : [18;21] (Error: 0.166667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.033 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 21 7
Bounds       : [18;21] [0;7]
Calls        : 1
Time         : 298.178s (Solving: 296.21s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.648s
Threads      : 4        (Winner: 4)

Choices      : 10659594 (Domain: 1048833)
Conflicts    : 8425839  (Analyzed: 8425826)
Restarts     : 7320     (Average: 1151.07 Last: 576410)
Model-Level  : 46.8    
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 8628688  (Deleted: 8332899)
  Binary     : 531      (Ratio:   0.01%)
  Ternary    : 13994    (Ratio:   0.16%)
  Conflict   : 8425826  (Average Length:  107.9 Ratio:  97.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 202862   (Average Length:   30.0 Ratio:   2.35%) 
  Distributed: 67706    (Ratio:   0.80% Average LBD: 3.67) 
  Integrated : 203118   (Ratio: 300.00% Unit: 285 Average Jumps: 4.71)
Backjumps    : 8425826  (Average:  1.25 Max:  96 Sum: 10507679)
  Executed   : 8425811  (Average:  1.25 Max:  96 Sum: 10507378 Ratio: 100.00%)
  Bounded    : 15       (Average: 20.07 Max:  68 Sum:    301 Ratio:   0.00%)

Rules        : 201545  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15420   
Bodies       : 6332    
  Sum        : 191     
  Count      : 14      
Equivalences : 8945     (Atom=Atom: 1013 Body=Body: 429 Other: 7503)
Tight        : Yes
Variables    : 5049     (Eliminated:    0 Frozen: 3579)
Constraints  : 194541   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) 
}.
