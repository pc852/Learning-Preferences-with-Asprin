asprin_vL version 1.0
Reading from stdin
-:1281:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1291:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1306:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1387:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1648:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1661:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1838:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1967:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2039:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2043:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2043:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2049:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2148:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2174:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2294:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2328:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2350:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1198:1-16: info: no atoms over signature occur in program:
  output/3

-:1190:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1191:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(53,eq,84) output(84,eq,22) output(46,eq,83) output(83,eq,33) output(52,eq,71) output(71,eq,49) output(80,eq,46) output(33,eq,52) output(55,eq,74) output(60,eq,46) output(46,eq,39) output(83,eq,66) output(66,eq,52) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(39,eq,83) output(55,eq,60) output(52,eq,68) output(33,eq,47) output(66,eq,47) output(83,eq,52) output(46,eq,66) output(39,eq,66) output(80,eq,39) output(60,eq,39) output(74,eq,46) output(52,eq,49) output(33,eq,71) output(66,eq,71) output(46,eq,33) output(39,eq,33) output(80,eq,83) output(60,eq,83) output(53,eq,22) output(74,eq,83) output(55,eq,83) output(80,eq,33) output(60,eq,33) output(74,eq,33) output(83,eq,71) output(46,eq,71) output(39,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,46) output(74,eq,39) output(55,eq,39) output(80,eq,66) output(60,eq,66) output(74,eq,66) output(46,eq,52) output(39,eq,52) output(80,eq,52) output(60,eq,52) output(83,eq,47) output(46,eq,47) output(39,eq,47) output(33,eq,68) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(39,eq,68) output(80,eq,68) output(60,eq,68) output(74,eq,68) output(55,eq,68) output(80,eq,47) output(60,eq,47) output(74,eq,47) output(55,eq,47) output(74,eq,52) output(55,eq,52) output(55,eq,66) output(46,eq,49) output(39,eq,49) output(80,eq,49) output(60,eq,49) output(74,eq,49) output(55,eq,49) output(80,eq,71) output(60,eq,71) output(74,eq,71) output(55,eq,71) output(55,eq,33)
Optimization: 86 0
Progression : [ 1;86] (Error: 85)
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(53,better,84) output(55,better,74) output(55,better,60) output(55,better,46) output(80,better,46) output(46,worse,83) output(46,worse,39) output(46,worse,66) output(46,worse,33) output(46,worse,71) output(46,worse,52) output(46,worse,47) output(46,worse,68) output(46,worse,49) output(60,worse,39) output(60,worse,83) output(60,worse,33) output(60,worse,66) output(60,worse,52) output(60,worse,68) output(60,worse,47) output(60,worse,49) output(60,worse,71) output(74,worse,83) output(74,worse,33) output(74,worse,39) output(74,worse,66) output(74,worse,68) output(74,worse,47) output(74,worse,52) output(74,worse,49) output(74,worse,71) output(84,worse,22) output(83,eq,33) output(52,eq,71) output(71,eq,49) output(33,eq,52) output(60,eq,46) output(83,eq,66) output(66,eq,52) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(39,eq,83) output(52,eq,68) output(33,eq,47) output(66,eq,47) output(83,eq,52) output(39,eq,66) output(80,eq,39) output(74,eq,46) output(52,eq,49) output(33,eq,71) output(66,eq,71) output(39,eq,33) output(80,eq,83) output(53,eq,22) output(55,eq,83) output(80,eq,33) output(83,eq,71) output(39,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,39) output(80,eq,66) output(39,eq,52) output(80,eq,52) output(83,eq,47) output(39,eq,47) output(33,eq,68) output(66,eq,68) output(83,eq,68) output(39,eq,68) output(80,eq,68) output(55,eq,68) output(80,eq,47) output(55,eq,47) output(55,eq,52) output(55,eq,66) output(39,eq,49) output(80,eq,49) output(55,eq,49) output(80,eq,71) output(55,eq,71) output(55,eq,33)
Optimization: 81 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(47,better,68) output(39,worse,71) output(39,worse,47) output(39,worse,49) output(46,worse,71) output(46,worse,47) output(46,worse,49) output(52,worse,71) output(52,worse,47) output(52,worse,49) output(66,worse,47) output(66,worse,71) output(66,worse,49) output(83,worse,71) output(83,worse,49) output(83,worse,47) output(33,worse,47) output(33,worse,71) output(33,worse,49) output(53,eq,84) output(84,eq,22) output(46,eq,83) output(83,eq,33) output(71,eq,49) output(33,eq,52) output(46,eq,39) output(83,eq,66) output(66,eq,52) output(74,eq,60) output(39,eq,83) output(52,eq,68) output(83,eq,52) output(46,eq,66) output(39,eq,66) output(46,eq,33) output(39,eq,33) output(53,eq,22) output(46,eq,52) output(39,eq,52) output(33,eq,68) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(39,eq,68) output(80,eq,47) output(80,eq,49) output(80,eq,71)
Optimization: 46 5
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,66) output(46,better,33) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(55,better,83) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,33) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(71,better,49) output(74,better,83) output(74,better,33) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(52,worse,71) output(66,worse,71) output(83,worse,71) output(33,worse,71) output(53,eq,84) output(84,eq,22) output(83,eq,33) output(80,eq,46) output(33,eq,52) output(55,eq,74) output(60,eq,46) output(46,eq,39) output(83,eq,66) output(66,eq,52) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(55,eq,60) output(52,eq,68) output(33,eq,47) output(66,eq,47) output(83,eq,52) output(80,eq,39) output(60,eq,39) output(74,eq,46) output(52,eq,49) output(53,eq,22) output(46,eq,71) output(39,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,46) output(74,eq,39) output(55,eq,39) output(83,eq,47) output(33,eq,68) output(66,eq,68) output(83,eq,68) output(80,eq,71) output(60,eq,71) output(74,eq,71) output(55,eq,71)
Optimization: 43 10
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(39,better,33) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,47) output(52,better,68) output(52,better,49) output(55,better,83) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,49) output(83,better,47) output(83,better,68) output(80,worse,46) output(33,worse,52) output(33,worse,71) output(33,worse,68) output(47,worse,68) output(53,eq,84) output(84,eq,22) output(52,eq,71) output(55,eq,74) output(60,eq,46) output(83,eq,66) output(66,eq,52) output(74,eq,60) output(39,eq,83) output(55,eq,60) output(33,eq,47) output(83,eq,52) output(39,eq,66) output(80,eq,39) output(74,eq,46) output(66,eq,71) output(80,eq,83) output(53,eq,22) output(83,eq,71) output(39,eq,71) output(33,eq,49) output(55,eq,46) output(80,eq,66) output(39,eq,52) output(80,eq,52) output(80,eq,71)
Optimization: 31 2
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,66) output(46,better,33) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,47) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(66,better,47) output(66,better,49) output(71,better,49) output(74,better,83) output(74,better,33) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(80,better,46) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,49) output(83,better,47) output(84,better,22) output(46,worse,39) output(46,worse,71) output(52,worse,71) output(60,worse,39) output(60,worse,71) output(66,worse,71) output(74,worse,39) output(74,worse,71) output(83,worse,71) output(33,worse,52) output(33,worse,47) output(33,worse,71) output(33,worse,49) output(33,worse,68) output(47,worse,68) output(60,eq,46) output(83,eq,66) output(66,eq,52) output(74,eq,60) output(52,eq,68) output(83,eq,52) output(80,eq,39) output(74,eq,46) output(39,eq,71) output(66,eq,68) output(83,eq,68) output(80,eq,71)
Optimization: 27 10
Progression : [ 2;27] (Error: 12.5)
Progression : [ 3;27] (Error: 8)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(3))),6) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,47) output(52,better,68) output(52,better,49) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,47) output(83,better,33) output(83,better,66) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(53,worse,84) output(53,worse,22) output(60,worse,46) output(66,worse,52) output(66,worse,71) output(66,worse,68) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,52) output(80,worse,68) output(80,worse,71) output(83,worse,52) output(83,worse,71) output(33,worse,52) output(33,worse,71) output(33,worse,68) output(47,worse,68) output(52,eq,71) output(55,eq,74) output(60,eq,39) output(80,eq,33) output(33,eq,49) output(66,eq,49) output(80,eq,66) output(80,eq,49)
Optimization: 26 9
Progression : [ 4;26] (Error: 5.5)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasCost(1))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(66,better,47) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,49) output(33,better,68) output(47,better,68) output(39,worse,71) output(46,worse,71) output(52,worse,71) output(66,worse,71) output(83,worse,33) output(83,worse,66) output(83,worse,52) output(83,worse,71) output(33,worse,71) output(84,eq,22) output(66,eq,52) output(74,eq,60) output(39,eq,33) output(80,eq,71) output(60,eq,71) output(74,eq,71)
Optimization: 16 12
Progression : [ 5;16] (Error: 2.2)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrep(6))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),2) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(47,better,68) output(46,worse,39) output(52,worse,71) output(66,worse,71) output(80,worse,46) output(80,worse,39) output(83,worse,71) output(33,worse,52) output(33,worse,47) output(33,worse,71) output(33,worse,49) output(33,worse,68) output(83,eq,66) output(66,eq,52) output(74,eq,60) output(83,eq,52) output(80,eq,71)
Optimization: 16 9
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,22) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,33) output(80,worse,66) output(80,worse,52) output(33,worse,52) output(53,eq,84) output(55,eq,74) output(83,eq,66) output(66,eq,52) output(74,eq,60) output(55,eq,60) output(83,eq,52) output(80,eq,71)
Optimization: 15 7
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(80,worse,52) output(80,worse,71) output(33,worse,52) output(33,worse,71) output(33,worse,49) output(33,worse,68) output(47,worse,68) output(83,eq,66) output(66,eq,52) output(83,eq,52)
Optimization: 14 12
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrep(3))),5) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasCost(1))),2) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,68) output(80,better,49) output(83,better,33) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,33) output(80,worse,66) output(80,worse,52) output(33,worse,52) output(83,eq,66) output(66,eq,52) output(74,eq,60) output(83,eq,52) output(80,eq,47) output(80,eq,71)
Optimization: 13 9
Progression : [ 6;13] (Error: 1.16667)
Progression : [ 7;13] (Error: 0.857143)
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,66) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,49) output(33,better,68) output(47,better,68) output(66,worse,52) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(80,worse,52) output(80,worse,71) output(33,worse,52) output(33,worse,71) output(39,eq,83) output(83,eq,52) output(80,eq,33) output(39,eq,52)
Optimization: 13 8
Progression : [ 8;13] (Error: 0.625)
Progression : [ 9;13] (Error: 0.444444)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(3))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,49) output(33,better,68) output(47,better,68) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(80,worse,52) output(80,worse,71) output(33,worse,52) output(33,worse,71) output(46,eq,39) output(83,eq,66) output(66,eq,52) output(83,eq,52)
Optimization: 12 12
Progression : [10;12] (Error: 0.2)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,49) output(33,better,68) output(47,better,68) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(80,worse,52) output(80,worse,71) output(33,worse,52) output(33,worse,71) output(83,eq,66) output(66,eq,52) output(83,eq,52)
Optimization: 11 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,66) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,49) output(33,better,68) output(47,better,68) output(66,worse,52) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(80,worse,52) output(80,worse,71) output(33,worse,52) output(33,worse,71) output(83,eq,52)
Optimization: 10 9
Progression : 10 [1;9] (Error: 8)
Progression : 10 [2;9] (Error: 3.5)
Answer: 17
preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(83,better,33) output(83,better,66) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(84,better,22) output(33,better,47) output(33,better,49) output(33,better,68) output(47,better,68) output(66,worse,52) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(80,worse,52) output(80,worse,71) output(33,worse,52) output(33,worse,71) output(83,eq,52)
Optimization: 10 8
Progression : 10 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.036 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 10 8
Bounds       : 10 [3;8]
Calls        : 1
Time         : 297.356s (Solving: 295.28s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.016s
Threads      : 4        (Winner: 4)

Choices      : 7051810  (Domain: 628131)
Conflicts    : 5450471  (Analyzed: 5450458)
Restarts     : 5356     (Average: 1017.64 Last: 248644)
Model-Level  : 41.0    
Problems     : 20       (Average Length: 0.20 Splits: 0)
Lemmas       : 5579631  (Deleted: 5359706)
  Binary     : 1066     (Ratio:   0.02%)
  Ternary    : 10594    (Ratio:   0.19%)
  Conflict   : 5450457  (Average Length:  189.8 Ratio:  97.68%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 129174   (Average Length:   31.5 Ratio:   2.32%) 
  Distributed: 43266    (Ratio:   0.79% Average LBD: 3.64) 
  Integrated : 129798   (Ratio: 300.00% Unit: 402 Average Jumps: 6.38)
Backjumps    : 5450458  (Average:  1.25 Max: 434 Sum: 6811041)
  Executed   : 5450435  (Average:  1.25 Max: 434 Sum: 6810466 Ratio:  99.99%)
  Bounded    : 23       (Average: 25.00 Max:  82 Sum:    575 Ratio:   0.01%)

Rules        : 180182  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14064   
Bodies       : 6187    
  Sum        : 172     
  Count      : 14      
Equivalences : 5428     (Atom=Atom: 873 Body=Body: 358 Other: 4197)
Tight        : Yes
Variables    : 5025     (Eliminated:    0 Frozen: 3555)
Constraints  : 174488   (Binary:  98.1% Ternary:   0.9% Other:   1.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(3)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) 
}.
