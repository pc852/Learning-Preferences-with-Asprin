asprin_vL version 1.0
Reading from stdin
-:1281:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1291:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1306:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1387:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1648:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1661:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1838:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1967:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2039:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2043:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2043:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2049:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2148:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2174:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2294:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2328:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2350:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1198:1-16: info: no atoms over signature occur in program:
  output/3

-:1190:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1191:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,10) output(10,eq,24) output(49,eq,70) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(14,eq,10) output(10,eq,65) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(18,eq,51) output(65,eq,70) output(25,eq,18) output(10,eq,70) output(47,eq,51) output(25,eq,51) output(48,eq,42) output(70,eq,13) output(49,eq,48) output(65,eq,48) output(50,eq,65) output(14,eq,65) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(49,eq,29) output(65,eq,29) output(23,eq,70) output(50,eq,24) output(14,eq,24) output(10,eq,29) output(50,eq,29) output(14,eq,29) output(23,eq,29) output(49,eq,64) output(65,eq,64) output(10,eq,64) output(23,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(49,eq,47) output(65,eq,47) output(10,eq,48) output(50,eq,48) output(14,eq,48) output(23,eq,48) output(49,eq,13) output(65,eq,13) output(10,eq,13) output(23,eq,13) output(70,eq,42) output(49,eq,42) output(65,eq,42) output(64,eq,51) output(29,eq,51) output(50,eq,70) output(14,eq,70) output(70,eq,51) output(49,eq,51) output(65,eq,51) output(10,eq,51) output(50,eq,51) output(14,eq,51) output(23,eq,51) output(10,eq,42) output(50,eq,42) output(14,eq,42) output(23,eq,42) output(50,eq,13) output(14,eq,13) output(10,eq,47) output(50,eq,47) output(14,eq,47) output(23,eq,47) output(49,eq,18) output(65,eq,18) output(10,eq,18) output(23,eq,18) output(50,eq,18) output(14,eq,18) output(50,eq,64) output(14,eq,64)
Optimization: 86 0
Progression : [ 1;86] (Error: 85)
Answer: 2
preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(25,better,51) output(29,better,51) output(50,better,10) output(50,better,24) output(50,better,51) output(64,better,51) output(70,better,51) output(14,better,10) output(14,better,24) output(14,better,51) output(18,better,51) output(47,better,51) output(49,better,51) output(65,better,51) output(10,worse,65) output(10,worse,70) output(10,worse,29) output(10,worse,64) output(10,worse,48) output(10,worse,13) output(10,worse,42) output(10,worse,47) output(10,worse,18) output(23,worse,49) output(23,worse,70) output(23,worse,29) output(23,worse,64) output(23,worse,48) output(23,worse,13) output(23,worse,42) output(23,worse,47) output(23,worse,18) output(10,eq,24) output(49,eq,70) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(64,eq,47) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(65,eq,70) output(25,eq,18) output(48,eq,42) output(70,eq,13) output(49,eq,48) output(65,eq,48) output(50,eq,65) output(14,eq,65) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(49,eq,29) output(65,eq,29) output(50,eq,29) output(14,eq,29) output(49,eq,64) output(65,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(49,eq,47) output(65,eq,47) output(50,eq,48) output(14,eq,48) output(49,eq,13) output(65,eq,13) output(70,eq,42) output(49,eq,42) output(65,eq,42) output(50,eq,70) output(14,eq,70) output(10,eq,51) output(23,eq,51) output(50,eq,42) output(14,eq,42) output(50,eq,13) output(14,eq,13) output(50,eq,47) output(14,eq,47) output(49,eq,18) output(65,eq,18) output(50,eq,18) output(14,eq,18) output(50,eq,64) output(14,eq,64)
Optimization: 72 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(29,better,64) output(29,better,18) output(23,better,70) output(23,better,64) output(23,better,18) output(47,better,18) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,64) output(65,better,18) output(10,worse,24) output(10,worse,65) output(10,worse,29) output(10,worse,48) output(10,worse,13) output(10,worse,51) output(10,worse,42) output(10,worse,47) output(13,worse,42) output(25,worse,18) output(25,worse,51) output(29,worse,51) output(50,worse,10) output(50,worse,65) output(50,worse,24) output(50,worse,29) output(50,worse,48) output(50,worse,70) output(50,worse,51) output(50,worse,42) output(50,worse,13) output(50,worse,47) output(50,worse,18) output(50,worse,64) output(64,worse,47) output(64,worse,51) output(70,worse,29) output(70,worse,48) output(70,worse,13) output(70,worse,47) output(70,worse,42) output(70,worse,51) output(14,worse,65) output(14,worse,24) output(14,worse,29) output(14,worse,48) output(14,worse,51) output(14,worse,42) output(14,worse,13) output(14,worse,47) output(18,worse,51) output(23,worse,49) output(23,worse,51) output(23,worse,42) output(47,worse,51) output(48,worse,42) output(49,worse,42) output(65,worse,42) output(65,worse,51) output(14,eq,10) output(48,eq,13) output(10,eq,70) output(65,eq,48) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(65,eq,29) output(23,eq,29) output(10,eq,64) output(70,eq,18) output(65,eq,47) output(23,eq,48) output(65,eq,13) output(23,eq,13) output(14,eq,70) output(23,eq,47) output(10,eq,18) output(14,eq,18) output(14,eq,64)
Optimization: 69 10
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,13) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(50,better,10) output(50,better,65) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,13) output(50,better,47) output(50,better,18) output(64,better,47) output(64,better,18) output(64,better,51) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,13) output(48,better,13) output(49,better,70) output(49,better,29) output(49,better,13) output(65,better,70) output(65,better,29) output(65,better,13) output(10,worse,24) output(10,worse,64) output(10,worse,48) output(10,worse,42) output(13,worse,42) output(29,worse,64) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(50,worse,24) output(50,worse,48) output(50,worse,42) output(70,worse,48) output(70,worse,64) output(70,worse,18) output(70,worse,47) output(70,worse,42) output(70,worse,51) output(18,worse,51) output(23,worse,64) output(23,worse,48) output(23,worse,51) output(23,worse,42) output(47,worse,51) output(49,worse,48) output(49,worse,64) output(49,worse,42) output(49,worse,51) output(65,worse,48) output(65,worse,64) output(65,worse,42) output(65,worse,51) output(70,eq,29) output(47,eq,18) output(23,eq,49) output(48,eq,42) output(70,eq,13) output(14,eq,24) output(49,eq,47) output(65,eq,47) output(14,eq,48) output(10,eq,51) output(14,eq,42) output(23,eq,47) output(49,eq,18) output(65,eq,18) output(23,eq,18) output(50,eq,64)
Optimization: 48 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,13) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,13) output(50,better,47) output(50,better,18) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,47) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,13) output(23,better,47) output(48,better,13) output(49,better,70) output(49,better,29) output(49,better,47) output(49,better,13) output(65,better,70) output(65,better,29) output(65,better,47) output(65,better,13) output(10,worse,24) output(10,worse,64) output(10,worse,48) output(10,worse,42) output(13,worse,42) output(29,worse,64) output(29,worse,18) output(29,worse,51) output(50,worse,24) output(50,worse,48) output(50,worse,42) output(70,worse,48) output(70,worse,64) output(70,worse,18) output(70,worse,42) output(70,worse,51) output(18,worse,51) output(23,worse,64) output(23,worse,48) output(23,worse,51) output(23,worse,42) output(47,worse,18) output(47,worse,51) output(49,worse,48) output(49,worse,64) output(49,worse,42) output(49,worse,51) output(65,worse,48) output(65,worse,64) output(65,worse,42) output(65,worse,51) output(70,eq,29) output(23,eq,49) output(48,eq,42) output(70,eq,13) output(14,eq,24) output(14,eq,48) output(10,eq,51) output(14,eq,42) output(49,eq,18) output(65,eq,18) output(23,eq,18) output(50,eq,64)
Optimization: 43 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,13) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,13) output(50,better,47) output(50,better,18) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,13) output(70,better,47) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,13) output(14,better,47) output(14,better,18) output(23,better,70) output(23,better,29) output(23,better,13) output(23,better,47) output(48,better,13) output(49,better,70) output(49,better,29) output(49,better,47) output(49,better,13) output(65,better,70) output(65,better,29) output(65,better,47) output(65,better,13) output(10,worse,24) output(10,worse,64) output(10,worse,48) output(10,worse,42) output(13,worse,42) output(29,worse,64) output(29,worse,18) output(29,worse,51) output(50,worse,48) output(50,worse,42) output(70,worse,48) output(70,worse,64) output(70,worse,18) output(70,worse,42) output(70,worse,51) output(14,worse,48) output(14,worse,42) output(14,worse,64) output(18,worse,51) output(23,worse,64) output(23,worse,48) output(23,worse,51) output(23,worse,42) output(47,worse,18) output(47,worse,51) output(49,worse,48) output(49,worse,64) output(49,worse,42) output(49,worse,51) output(65,worse,48) output(65,worse,64) output(65,worse,42) output(65,worse,51) output(70,eq,29) output(23,eq,49) output(48,eq,42) output(14,eq,24) output(10,eq,51) output(49,eq,18) output(65,eq,18) output(23,eq,18) output(50,eq,64)
Optimization: 42 13
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,64) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,42) output(23,better,47) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,70) output(10,worse,51) output(10,worse,18) output(13,worse,42) output(25,worse,51) output(29,worse,18) output(29,worse,51) output(50,worse,51) output(64,worse,18) output(64,worse,51) output(70,worse,51) output(14,worse,70) output(14,worse,51) output(14,worse,18) output(18,worse,51) output(23,worse,49) output(23,worse,70) output(23,worse,51) output(23,worse,18) output(47,worse,18) output(47,worse,51) output(49,worse,51) output(65,worse,70) output(65,worse,51) output(65,worse,18) output(49,eq,70) output(29,eq,64) output(64,eq,47) output(25,eq,18) output(65,eq,48) output(29,eq,47) output(70,eq,18) output(50,eq,70) output(49,eq,18) output(50,eq,18)
Optimization: 35 6
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),6) preference(1,less(weight)) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,42) output(10,better,47) output(25,better,51) output(50,better,10) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(18,better,51) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(10,worse,24) output(10,worse,65) output(10,worse,48) output(10,worse,18) output(13,worse,42) output(29,worse,64) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(50,worse,24) output(50,worse,48) output(64,worse,18) output(64,worse,51) output(70,worse,48) output(70,worse,18) output(23,worse,48) output(47,worse,18) output(47,worse,51) output(49,worse,48) output(65,worse,48) output(23,eq,49) output(25,eq,18) output(10,eq,70) output(50,eq,65) output(14,eq,24) output(14,eq,48) output(70,eq,51) output(10,eq,51) output(49,eq,18) output(65,eq,18) output(23,eq,18) output(50,eq,18)
Optimization: 32 12
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(50,better,10) output(50,better,65) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,42) output(23,better,47) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,24) output(10,worse,48) output(13,worse,42) output(29,worse,64) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(50,worse,24) output(50,worse,48) output(64,worse,18) output(64,worse,51) output(70,worse,48) output(70,worse,18) output(70,worse,51) output(18,worse,51) output(23,worse,48) output(23,worse,51) output(47,worse,18) output(47,worse,51) output(49,worse,48) output(49,worse,51) output(65,worse,48) output(65,worse,51) output(23,eq,49) output(14,eq,24) output(14,eq,48) output(10,eq,51) output(49,eq,18) output(65,eq,18) output(23,eq,18)
Optimization: 30 11
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,42) output(23,better,47) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,24) output(10,worse,48) output(13,worse,42) output(29,worse,64) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(50,worse,48) output(64,worse,18) output(64,worse,51) output(70,worse,48) output(70,worse,18) output(70,worse,51) output(14,worse,48) output(18,worse,51) output(23,worse,48) output(23,worse,51) output(47,worse,18) output(47,worse,51) output(49,worse,48) output(49,worse,51) output(65,worse,48) output(65,worse,51) output(23,eq,49) output(14,eq,24) output(10,eq,51) output(49,eq,18) output(65,eq,18) output(23,eq,18)
Optimization: 29 12
Progression : [ 2;29] (Error: 13.5)
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(3))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,18) output(13,better,42) output(25,better,18) output(50,better,10) output(50,better,65) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,42) output(14,better,29) output(14,better,42) output(14,better,13) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(10,worse,24) output(10,worse,65) output(10,worse,51) output(10,worse,47) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(50,worse,24) output(64,worse,47) output(64,worse,18) output(64,worse,51) output(70,worse,47) output(70,worse,51) output(14,worse,10) output(14,worse,65) output(14,worse,24) output(14,worse,70) output(14,worse,51) output(14,worse,47) output(18,worse,51) output(47,worse,51) output(65,worse,51) output(29,eq,64) output(10,eq,70) output(25,eq,51) output(14,eq,48) output(50,eq,51) output(14,eq,18)
Optimization: 28 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,18) output(13,better,42) output(25,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,42) output(14,better,29) output(14,better,42) output(14,better,13) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(10,worse,24) output(10,worse,65) output(10,worse,51) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(64,worse,47) output(64,worse,18) output(64,worse,51) output(70,worse,51) output(14,worse,10) output(14,worse,65) output(14,worse,24) output(14,worse,70) output(14,worse,51) output(14,worse,47) output(18,worse,51) output(47,worse,51) output(65,worse,51) output(29,eq,64) output(10,eq,70) output(25,eq,51) output(70,eq,47) output(14,eq,48) output(50,eq,51) output(10,eq,47) output(14,eq,18)
Optimization: 27 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(10,better,24) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,18) output(25,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,42) output(23,better,18) output(47,better,18) output(48,better,13) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,13) output(65,better,42) output(65,better,18) output(10,worse,65) output(10,worse,51) output(10,worse,42) output(10,worse,47) output(13,worse,42) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(64,worse,47) output(64,worse,18) output(64,worse,51) output(70,worse,47) output(70,worse,42) output(70,worse,51) output(18,worse,51) output(23,worse,49) output(23,worse,51) output(47,worse,51) output(48,worse,42) output(65,worse,51) output(29,eq,64) output(10,eq,70) output(25,eq,51) output(65,eq,47) output(50,eq,51) output(23,eq,47)
Optimization: 26 11
Progression : [ 3;26] (Error: 7.66667)
Progression : [ 4;26] (Error: 5.5)
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,24) output(14,better,29) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,70) output(29,worse,18) output(29,worse,51) output(64,worse,18) output(64,worse,51) output(14,worse,10) output(14,worse,70) output(14,worse,51) output(18,worse,51) output(23,worse,70) output(47,worse,18) output(47,worse,51) output(49,worse,70) output(49,worse,51) output(65,worse,70) output(65,worse,51) output(29,eq,64) output(49,eq,48) output(65,eq,48) output(14,eq,65) output(14,eq,48) output(10,eq,51) output(49,eq,18) output(65,eq,18) output(14,eq,18)
Optimization: 25 11
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasPrep(3))),7) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,70) output(29,worse,18) output(29,worse,51) output(50,worse,70) output(64,worse,18) output(64,worse,51) output(14,worse,10) output(14,worse,70) output(14,worse,51) output(18,worse,51) output(23,worse,70) output(47,worse,18) output(47,worse,51) output(49,worse,70) output(49,worse,51) output(65,worse,70) output(65,worse,51) output(65,worse,18) output(29,eq,64) output(65,eq,48) output(10,eq,51) output(49,eq,18) output(14,eq,18)
Optimization: 23 13
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,70) output(29,worse,18) output(29,worse,51) output(64,worse,18) output(64,worse,51) output(14,worse,10) output(14,worse,70) output(14,worse,51) output(18,worse,51) output(23,worse,70) output(47,worse,18) output(47,worse,51) output(49,worse,70) output(49,worse,51) output(65,worse,70) output(65,worse,51) output(65,worse,18) output(29,eq,64) output(65,eq,48) output(10,eq,51) output(49,eq,18) output(14,eq,18)
Optimization: 22 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrep(3))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(50,better,10) output(50,better,65) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(64,better,18) output(70,better,29) output(70,better,13) output(70,better,18) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,70) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(10,worse,24) output(10,worse,48) output(10,worse,51) output(13,worse,42) output(29,worse,64) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(50,worse,24) output(64,worse,51) output(70,worse,48) output(70,worse,64) output(70,worse,51) output(14,worse,24) output(14,worse,48) output(14,worse,51) output(18,worse,51) output(47,worse,51) output(65,worse,48) output(65,worse,51) output(70,eq,47) output(70,eq,42)
Optimization: 22 11
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(18,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,70) output(10,worse,18) output(29,worse,64) output(29,worse,18) output(29,worse,51) output(64,worse,18) output(64,worse,51) output(47,worse,18) output(47,worse,51) output(65,worse,70) output(65,worse,51) output(65,worse,18) output(49,eq,70) output(13,eq,42) output(65,eq,48) output(70,eq,18) output(14,eq,70) output(10,eq,51) output(49,eq,18) output(14,eq,18)
Optimization: 20 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(18,better,51) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,70) output(10,worse,18) output(29,worse,18) output(29,worse,51) output(64,worse,18) output(64,worse,51) output(14,worse,70) output(47,worse,18) output(47,worse,51) output(49,worse,70) output(65,worse,70) output(65,worse,51) output(65,worse,18) output(29,eq,64) output(65,eq,48) output(23,eq,70) output(10,eq,51) output(49,eq,18) output(14,eq,18)
Optimization: 19 13
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrep(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasCost(1))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(10,better,64) output(10,better,42) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,64) output(29,better,47) output(29,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(18,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(10,worse,24) output(10,worse,65) output(10,worse,70) output(10,worse,29) output(10,worse,48) output(10,worse,13) output(10,worse,51) output(10,worse,47) output(10,worse,18) output(29,worse,18) output(64,worse,47) output(64,worse,18) output(64,worse,51) output(70,worse,48) output(70,worse,18) output(47,worse,18) output(65,eq,48) output(65,eq,18)
Optimization: 18 13
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,24) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(18,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(10,worse,18) output(29,worse,18) output(29,worse,51) output(64,worse,18) output(64,worse,51) output(70,worse,18) output(70,worse,51) output(14,worse,18) output(47,worse,18) output(47,worse,51) output(65,worse,18) output(29,eq,64) output(10,eq,65) output(70,eq,48) output(65,eq,51) output(10,eq,51) output(49,eq,18)
Optimization: 17 13
Answer: 22
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(29,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(64,better,18) output(70,better,48) output(70,better,18) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(29,worse,51) output(64,worse,51) output(70,worse,51) output(18,worse,51) output(47,worse,51) output(48,worse,13) output(49,worse,51) output(65,worse,51) output(70,eq,29) output(29,eq,64) output(48,eq,42) output(70,eq,13) output(70,eq,64) output(10,eq,51)
Optimization: 14 12
Answer: 23
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(29,better,47) output(29,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(64,better,18) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,18) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(29,worse,51) output(64,worse,51) output(70,worse,48) output(70,worse,51) output(18,worse,51) output(47,worse,18) output(47,worse,51) output(65,worse,51) output(29,eq,64) output(13,eq,42) output(65,eq,48) output(49,eq,51) output(10,eq,51)
Optimization: 13 13
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(3))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(29,better,47) output(29,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(64,better,18) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(10,worse,70) output(29,worse,51) output(64,worse,51) output(18,worse,51) output(47,worse,51) output(65,worse,70) output(65,worse,51) output(49,eq,70) output(29,eq,64) output(13,eq,42) output(65,eq,48) output(10,eq,51)
Optimization: 12 14
Answer: 25
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,6),1,for(atom(hasPrep(3))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(25,better,18) output(25,better,51) output(29,better,47) output(29,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(64,better,18) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,18) output(29,worse,51) output(64,worse,51) output(70,worse,51) output(18,worse,51) output(47,worse,51) output(65,worse,70) output(65,worse,51) output(29,eq,64) output(13,eq,42) output(65,eq,48) output(10,eq,51)
Optimization: 11 13
Answer: 26
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrep(3))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(10,better,24) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,42) output(10,better,47) output(10,better,18) output(13,better,42) output(25,better,18) output(25,better,51) output(29,better,47) output(29,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(64,better,47) output(64,better,18) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(47,better,18) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(10,worse,65) output(29,worse,51) output(64,worse,51) output(70,worse,48) output(70,worse,51) output(18,worse,51) output(47,worse,51) output(29,eq,64) output(10,eq,48) output(10,eq,51)
Optimization: 10 12
Progression : [ 5;10] (Error: 1)
Progression : [ 6;10] (Error: 0.666667)
Progression : [ 7;10] (Error: 0.428571)
Progression : [ 8;10] (Error: 0.25)
Progression : [ 9;10] (Error: 0.111111)
Progression : [10;10] (Error: 0)
Progression : 10 [ 1;12] (Error: 11)
Progression : 10 [ 2;12] (Error: 5)
Progression : 10 [ 3;12] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.053 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 26+
  Optimum    : unknown
Optimization : 10 12
Bounds       : 10 [3;12]
Calls        : 1
Time         : 298.070s (Solving: 296.06s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.040s
Threads      : 4        (Winner: 4)

Choices      : 11502684 (Domain: 787242)
Conflicts    : 8972924  (Analyzed: 8972911)
Restarts     : 8829     (Average: 1016.30 Last: 306546)
Model-Level  : 33.2    
Problems     : 21       (Average Length: 0.19 Splits: 0)
Lemmas       : 9153976  (Deleted: 8803109)
  Binary     : 328      (Ratio:   0.00%)
  Ternary    : 15406    (Ratio:   0.17%)
  Conflict   : 8972911  (Average Length:   87.7 Ratio:  98.02%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 181065   (Average Length:   31.3 Ratio:   1.98%) 
  Distributed: 60477    (Ratio:   0.67% Average LBD: 3.63) 
  Integrated : 181431   (Ratio: 300.00% Unit: 320 Average Jumps: 6.81)
Backjumps    : 8972911  (Average:  1.25 Max: 429 Sum: 11223060)
  Executed   : 8972887  (Average:  1.25 Max: 429 Sum: 11222234 Ratio:  99.99%)
  Bounded    : 24       (Average: 34.42 Max:  81 Sum:    826 Ratio:   0.01%)

Rules        : 179958  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14056   
Bodies       : 6183    
  Sum        : 168     
  Count      : 14      
Equivalences : 5436     (Atom=Atom: 883 Body=Body: 368 Other: 4185)
Tight        : Yes
Variables    : 5011     (Eliminated:    0 Frozen: 3541)
Constraints  : 174246   (Binary:  98.1% Ternary:   0.9% Other:   1.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) 
}.
