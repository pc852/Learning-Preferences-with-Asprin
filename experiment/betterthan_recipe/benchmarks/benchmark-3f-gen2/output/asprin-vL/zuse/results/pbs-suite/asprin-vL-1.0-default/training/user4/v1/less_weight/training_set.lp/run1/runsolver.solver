asprin_vL version 1.0
Reading from stdin
-:1298:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1308:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1323:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1404:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1665:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1678:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1855:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1984:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2056:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2060:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2060:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2066:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2165:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2191:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2311:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2345:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2367:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1215:1-16: info: no atoms over signature occur in program:
  output/3

-:1207:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1208:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(52,eq,78) output(60,eq,79) output(4,eq,46) output(46,eq,39) output(39,eq,7) output(32,eq,33) output(78,eq,60) output(79,eq,4) output(7,eq,32) output(41,eq,4) output(4,eq,72) output(60,eq,76) output(76,eq,37) output(37,eq,42) output(92,eq,32) output(72,eq,60) output(18,eq,92) output(4,eq,60) output(18,eq,32) output(76,eq,42) output(60,eq,37) output(78,eq,76) output(72,eq,76) output(79,eq,72) output(41,eq,72) output(39,eq,32) output(60,eq,4) output(52,eq,60) output(7,eq,33) output(92,eq,33) output(46,eq,7) output(4,eq,39) output(79,eq,46) output(41,eq,46) output(78,eq,79) output(72,eq,79) output(4,eq,79) output(79,eq,79) output(41,eq,79) output(52,eq,79) output(60,eq,46) output(78,eq,46) output(72,eq,46) output(79,eq,39) output(41,eq,39) output(60,eq,39) output(4,eq,7) output(79,eq,7) output(41,eq,7) output(18,eq,33) output(39,eq,33) output(46,eq,33) output(78,eq,4) output(72,eq,4) output(4,eq,4) output(52,eq,4) output(46,eq,32) output(4,eq,32) output(60,eq,72) output(78,eq,72) output(72,eq,72) output(4,eq,76) output(79,eq,76) output(41,eq,76) output(52,eq,76) output(78,eq,37) output(72,eq,37) output(4,eq,37) output(52,eq,37) output(60,eq,42) output(78,eq,42) output(72,eq,42) output(79,eq,60) output(41,eq,60) output(60,eq,60) output(4,eq,42) output(79,eq,42) output(41,eq,42) output(52,eq,42) output(79,eq,37) output(41,eq,37) output(52,eq,72) output(79,eq,32) output(41,eq,32) output(60,eq,32) output(78,eq,32) output(72,eq,32) output(52,eq,32) output(4,eq,33) output(79,eq,33) output(41,eq,33) output(60,eq,33) output(78,eq,33) output(72,eq,33) output(60,eq,7) output(78,eq,7) output(72,eq,7) output(52,eq,7) output(78,eq,39) output(72,eq,39) output(52,eq,39) output(52,eq,46) output(52,eq,33)
Optimization: 103 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(46,better,39) output(46,better,7) output(46,better,32) output(52,better,76) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(60,better,76) output(60,better,39) output(60,better,72) output(60,better,32) output(60,better,7) output(79,better,72) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,32) output(92,better,32) output(18,better,32) output(78,better,76) output(78,better,72) output(78,better,32) output(78,better,7) output(78,better,39) output(39,worse,33) output(76,worse,37) output(76,worse,42) output(7,worse,33) output(32,worse,33) output(41,worse,4) output(41,worse,46) output(41,worse,79) output(41,worse,60) output(41,worse,42) output(41,worse,37) output(41,worse,33) output(72,worse,60) output(72,worse,79) output(72,worse,46) output(72,worse,4) output(72,worse,37) output(72,worse,42) output(72,worse,33) output(52,eq,78) output(60,eq,79) output(4,eq,46) output(39,eq,7) output(78,eq,60) output(79,eq,4) output(7,eq,32) output(37,eq,42) output(18,eq,92) output(4,eq,60) output(60,eq,37) output(72,eq,76) output(41,eq,72) output(39,eq,32) output(60,eq,4) output(52,eq,60) output(92,eq,33) output(79,eq,46) output(78,eq,79) output(4,eq,79) output(79,eq,79) output(52,eq,79) output(60,eq,46) output(78,eq,46) output(41,eq,39) output(41,eq,7) output(18,eq,33) output(46,eq,33) output(78,eq,4) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(41,eq,76) output(78,eq,37) output(4,eq,37) output(52,eq,37) output(60,eq,42) output(78,eq,42) output(79,eq,60) output(60,eq,60) output(4,eq,42) output(79,eq,42) output(52,eq,42) output(79,eq,37) output(41,eq,32) output(72,eq,32) output(4,eq,33) output(79,eq,33) output(60,eq,33) output(78,eq,33) output(72,eq,7) output(72,eq,39) output(52,eq,46) output(52,eq,33)
Optimization: 73 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(4,better,39) output(4,better,7) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,7) output(52,better,39) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,33) output(60,better,7) output(76,better,37) output(79,better,4) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,37) output(79,better,33) output(92,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,37) output(41,better,33) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,4) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,37) output(4,worse,42) output(37,worse,42) output(39,worse,32) output(39,worse,33) output(46,worse,32) output(52,worse,78) output(52,worse,60) output(52,worse,79) output(52,worse,76) output(52,worse,37) output(52,worse,42) output(52,worse,72) output(52,worse,32) output(52,worse,46) output(60,worse,42) output(76,worse,42) output(79,worse,42) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(41,worse,42) output(72,worse,42) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(78,worse,46) output(78,worse,72) output(78,worse,37) output(78,worse,42) output(78,worse,32) output(60,eq,79) output(39,eq,7) output(60,eq,76) output(92,eq,32) output(72,eq,60) output(72,eq,76) output(79,eq,72) output(41,eq,72) output(72,eq,79) output(79,eq,79) output(41,eq,79) output(18,eq,33) output(4,eq,4) output(52,eq,4) output(60,eq,72) output(72,eq,72) output(79,eq,76) output(41,eq,76) output(79,eq,60) output(41,eq,60) output(60,eq,60) output(79,eq,32) output(41,eq,32) output(60,eq,32) output(72,eq,32) output(4,eq,33) output(52,eq,33)
Optimization: 65 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasCost(1))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrep(4))),6) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(4,better,39) output(4,better,7) output(4,better,37) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,37) output(52,better,7) output(52,better,39) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,33) output(60,better,7) output(76,better,37) output(79,better,4) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,37) output(79,better,33) output(92,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,37) output(41,better,33) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,4) output(78,better,37) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,42) output(37,worse,42) output(39,worse,32) output(39,worse,33) output(46,worse,32) output(52,worse,78) output(52,worse,60) output(52,worse,79) output(52,worse,76) output(52,worse,42) output(52,worse,72) output(52,worse,32) output(52,worse,46) output(60,worse,42) output(76,worse,42) output(79,worse,42) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(41,worse,42) output(72,worse,42) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(78,worse,46) output(78,worse,72) output(78,worse,42) output(78,worse,32) output(60,eq,79) output(39,eq,7) output(60,eq,76) output(92,eq,32) output(72,eq,60) output(72,eq,76) output(79,eq,72) output(41,eq,72) output(72,eq,79) output(79,eq,79) output(41,eq,79) output(18,eq,33) output(4,eq,4) output(52,eq,4) output(60,eq,72) output(72,eq,72) output(79,eq,76) output(41,eq,76) output(79,eq,60) output(41,eq,60) output(60,eq,60) output(79,eq,32) output(41,eq,32) output(60,eq,32) output(72,eq,32) output(4,eq,33) output(52,eq,33)
Optimization: 62 14
Progression : [ 8;62] (Error: 6.75)
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(4,better,7) output(39,better,7) output(46,better,39) output(46,better,7) output(46,better,32) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(60,better,4) output(60,better,39) output(60,better,7) output(76,better,37) output(79,better,4) output(79,better,39) output(79,better,7) output(18,better,92) output(18,better,32) output(41,better,4) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,60) output(41,better,37) output(72,better,60) output(72,better,79) output(72,better,4) output(72,better,37) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,39) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,37) output(4,worse,42) output(4,worse,33) output(37,worse,42) output(39,worse,32) output(39,worse,33) output(46,worse,33) output(52,worse,78) output(52,worse,46) output(52,worse,33) output(60,worse,76) output(60,worse,46) output(60,worse,72) output(60,worse,42) output(60,worse,32) output(60,worse,33) output(76,worse,42) output(79,worse,72) output(79,worse,46) output(79,worse,76) output(79,worse,42) output(79,worse,32) output(79,worse,33) output(92,worse,32) output(92,worse,33) output(7,worse,32) output(7,worse,33) output(18,worse,33) output(32,worse,33) output(41,worse,46) output(41,worse,42) output(41,worse,33) output(72,worse,46) output(72,worse,42) output(72,worse,33) output(78,worse,46) output(78,worse,33) output(60,eq,79) output(60,eq,37) output(72,eq,76) output(41,eq,72) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(41,eq,76) output(79,eq,60) output(60,eq,60) output(79,eq,37) output(41,eq,32) output(72,eq,32)
Optimization: 57 11
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(4,better,72) output(4,better,60) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(52,better,78) output(52,better,60) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,33) output(60,better,39) output(60,better,7) output(76,better,42) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,32) output(18,better,33) output(41,better,39) output(41,better,7) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,79) output(4,worse,76) output(4,worse,37) output(39,worse,32) output(39,worse,33) output(52,worse,79) output(52,worse,76) output(52,worse,37) output(52,worse,46) output(60,worse,79) output(60,worse,76) output(60,worse,37) output(60,worse,4) output(60,worse,46) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(41,worse,4) output(41,worse,46) output(41,worse,79) output(41,worse,76) output(41,worse,37) output(72,worse,76) output(72,worse,79) output(72,worse,46) output(72,worse,4) output(72,worse,37) output(78,worse,76) output(78,worse,79) output(78,worse,46) output(78,worse,4) output(78,worse,37) output(32,eq,33) output(76,eq,37) output(72,eq,60) output(41,eq,72) output(79,eq,79) output(4,eq,4) output(52,eq,4) output(60,eq,72) output(72,eq,72) output(60,eq,42) output(72,eq,42) output(41,eq,60) output(60,eq,60) output(41,eq,42) output(41,eq,32) output(60,eq,32) output(72,eq,32) output(41,eq,33) output(60,eq,33) output(72,eq,33)
Optimization: 53 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrep(4))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),1) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(4,better,7) output(4,better,37) output(4,better,42) output(37,better,42) output(39,better,7) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(52,better,60) output(52,better,4) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,33) output(60,better,37) output(60,better,4) output(60,better,39) output(60,better,42) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(32,better,33) output(41,better,4) output(41,better,39) output(41,better,7) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,60) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,33) output(39,worse,32) output(39,worse,33) output(52,worse,79) output(52,worse,76) output(60,worse,79) output(60,worse,76) output(60,worse,46) output(60,worse,72) output(60,worse,32) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(18,worse,33) output(41,worse,46) output(41,worse,79) output(41,worse,76) output(72,worse,76) output(72,worse,79) output(72,worse,46) output(78,worse,76) output(78,worse,79) output(52,eq,78) output(41,eq,72) output(4,eq,39) output(79,eq,79) output(78,eq,46) output(4,eq,4) output(72,eq,72) output(79,eq,76) output(60,eq,60) output(41,eq,32) output(72,eq,32) output(52,eq,46)
Optimization: 41 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(7))),3) preference(1,(1,2),1,for(atom(hasPrep(3))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(4,better,7) output(4,better,37) output(4,better,42) output(37,better,42) output(39,better,7) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,60) output(52,better,4) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,42) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,60) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,33) output(39,worse,32) output(39,worse,33) output(46,worse,32) output(52,worse,79) output(52,worse,76) output(60,worse,79) output(60,worse,76) output(60,worse,72) output(60,worse,32) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(18,worse,33) output(41,worse,79) output(41,worse,76) output(72,worse,76) output(72,worse,79) output(78,worse,76) output(78,worse,79) output(52,eq,78) output(41,eq,72) output(4,eq,39) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(79,eq,76) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 37 14
Progression : [ 9;37] (Error: 3.11111)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(4,better,39) output(4,better,7) output(4,better,37) output(4,better,42) output(37,better,42) output(39,better,7) output(46,better,39) output(46,better,7) output(52,better,78) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,46) output(78,better,4) output(78,better,37) output(78,better,42) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,33) output(39,worse,32) output(39,worse,33) output(46,worse,33) output(46,worse,32) output(52,worse,60) output(52,worse,79) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(78,worse,72) output(78,worse,32) output(60,eq,79) output(4,eq,46) output(41,eq,72) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(79,eq,60) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 35 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(4,better,39) output(4,better,7) output(4,better,42) output(37,better,42) output(39,better,7) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,78) output(52,better,60) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,42) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,60) output(72,better,76) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,4) output(78,better,37) output(78,better,42) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,33) output(39,worse,32) output(39,worse,33) output(46,worse,32) output(52,worse,79) output(60,worse,79) output(60,worse,72) output(60,worse,32) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(41,worse,79) output(72,worse,79) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(78,worse,46) output(78,worse,72) output(78,worse,32) output(41,eq,72) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(4,eq,37) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 34 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(4,better,39) output(4,better,7) output(4,better,37) output(4,better,42) output(37,better,42) output(39,better,7) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,78) output(52,better,60) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,42) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,60) output(72,better,76) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,4) output(78,better,37) output(78,better,42) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,33) output(39,worse,32) output(39,worse,33) output(46,worse,32) output(52,worse,79) output(60,worse,79) output(60,worse,72) output(60,worse,32) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(18,worse,32) output(41,worse,79) output(72,worse,79) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(78,worse,46) output(78,worse,72) output(78,worse,32) output(41,eq,72) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 33 12
Progression : [10;33] (Error: 2.3)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),7) preference(1,(1,8),1,for(atom(hasPrep(7))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,79) output(52,better,4) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,33) output(18,better,33) output(32,better,33) output(41,better,39) output(41,better,7) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(4,worse,76) output(39,worse,7) output(39,worse,32) output(52,worse,78) output(52,worse,60) output(79,worse,76) output(79,worse,60) output(7,worse,32) output(18,worse,92) output(41,worse,4) output(41,worse,79) output(41,worse,76) output(41,worse,60) output(72,worse,60) output(72,worse,76) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(18,eq,32) output(41,eq,72) output(41,eq,46) output(4,eq,79) output(79,eq,79) output(72,eq,46) output(4,eq,4) output(46,eq,32) output(72,eq,72) output(52,eq,76) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 32 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,79) output(52,better,4) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,33) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(4,worse,76) output(39,worse,7) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(52,worse,60) output(79,worse,76) output(79,worse,60) output(7,worse,32) output(18,worse,92) output(41,worse,4) output(41,worse,79) output(41,worse,76) output(41,worse,60) output(72,worse,60) output(72,worse,76) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(18,eq,32) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(52,eq,76) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 30 13
Progression : [11;30] (Error: 1.72727)
Progression : [12;30] (Error: 1.5)
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,39) output(4,better,7) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,60) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,76) output(60,better,37) output(60,better,46) output(60,better,39) output(60,better,42) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,33) output(92,better,33) output(18,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,60) output(72,better,76) output(72,better,79) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,72) output(4,worse,32) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(52,worse,72) output(52,worse,32) output(60,worse,79) output(60,worse,4) output(60,worse,72) output(60,worse,32) output(79,worse,72) output(79,worse,32) output(92,worse,32) output(7,worse,32) output(18,worse,92) output(18,worse,32) output(79,eq,4) output(41,eq,72) output(7,eq,33) output(4,eq,79) output(79,eq,79) output(52,eq,79) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 29 12
Progression : [13;29] (Error: 1.23077)
Progression : [14;29] (Error: 1.07143)
Progression : [15;29] (Error: 0.933333)
Progression : [16;29] (Error: 0.8125)
Progression : [17;29] (Error: 0.705882)
Progression : [18;29] (Error: 0.611111)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,32) output(39,better,33) output(46,better,7) output(46,better,33) output(46,better,32) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,7) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(46,worse,39) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(41,worse,4) output(41,worse,46) output(41,worse,79) output(41,worse,39) output(41,worse,76) output(41,worse,60) output(72,worse,60) output(72,worse,76) output(72,worse,79) output(72,worse,46) output(72,worse,4) output(72,worse,39) output(78,eq,60) output(79,eq,4) output(18,eq,92) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 28 11
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,32) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,7) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(18,worse,92) output(41,worse,4) output(41,worse,46) output(41,worse,79) output(41,worse,39) output(41,worse,76) output(41,worse,60) output(72,worse,60) output(72,worse,76) output(72,worse,79) output(72,worse,46) output(72,worse,4) output(72,worse,39) output(78,eq,60) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 27 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(52,worse,60) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(37,eq,42) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(52,eq,79) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 26 10
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(52,worse,60) output(79,worse,60) output(7,worse,32) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(76,eq,37) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(52,eq,79) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 25 11
Answer: 19
preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(52,worse,60) output(79,worse,60) output(7,worse,32) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(52,eq,79) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 24 11
Answer: 20
preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 22 11
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 21 12
Progression : [19;21] (Error: 0.105263)
Progression : [20;21] (Error: 0.05)
Progression : [21;21] (Error: 0)
Progression : 21 [ 1;12] (Error: 11)
Progression : 21 [ 2;12] (Error: 5)
Answer: 22
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 21 11
Answer: 23
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,76) output(60,better,37) output(60,better,46) output(60,better,39) output(60,better,42) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,60) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(39,worse,32) output(46,worse,32) output(52,worse,78) output(60,worse,79) output(60,worse,4) output(60,worse,72) output(60,worse,32) output(7,worse,32) output(41,worse,4) output(41,worse,79) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 21 10
Answer: 24
preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(76,better,37) output(76,better,42) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(18,better,92) output(18,better,32) output(18,better,33) output(32,better,33) output(41,better,46) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(4,worse,60) output(39,worse,32) output(46,worse,32) output(79,worse,60) output(7,worse,32) output(7,worse,33) output(41,worse,4) output(41,worse,79) output(41,worse,60) output(72,worse,60) output(72,worse,79) output(72,worse,4) output(79,eq,4) output(41,eq,72) output(4,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60) output(41,eq,32) output(72,eq,32)
Optimization: 21 9
Progression : 21 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.037 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 21 9
Bounds       : 21 [3;9]
Calls        : 1
Time         : 298.269s (Solving: 296.12s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.328s
Threads      : 4        (Winner: 4)

Choices      : 9375024  (Domain: 806340)
Conflicts    : 7386474  (Analyzed: 7386457)
Restarts     : 6904     (Average: 1069.88 Last: 396052)
Model-Level  : 41.3    
Problems     : 25       (Average Length: 0.16 Splits: 0)
Lemmas       : 7562425  (Deleted: 7270975)
  Binary     : 490      (Ratio:   0.01%)
  Ternary    : 10413    (Ratio:   0.14%)
  Conflict   : 7386457  (Average Length:  152.6 Ratio:  97.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 175968   (Average Length:   33.5 Ratio:   2.33%) 
  Distributed: 58828    (Ratio:   0.80% Average LBD: 3.66) 
  Integrated : 176478   (Ratio: 299.99% Unit: 312 Average Jumps: 4.95)
Backjumps    : 7386457  (Average:  1.24 Max: 387 Sum: 9163088)
  Executed   : 7386435  (Average:  1.24 Max: 387 Sum: 9162607 Ratio:  99.99%)
  Bounded    : 22       (Average: 21.86 Max:  65 Sum:    481 Ratio:   0.01%)

Rules        : 205568  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15706   
Bodies       : 6328    
  Sum        : 160     
  Count      : 14      
Equivalences : 8996     (Atom=Atom: 1125 Body=Body: 529 Other: 7342)
Tight        : Yes
Variables    : 4998     (Eliminated:    0 Frozen: 3528)
Constraints  : 198199   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) 
}.
