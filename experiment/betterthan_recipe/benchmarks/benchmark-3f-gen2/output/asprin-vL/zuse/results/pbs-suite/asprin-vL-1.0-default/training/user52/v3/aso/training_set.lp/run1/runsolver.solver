asprin_vL version 1.0
Reading from stdin
-:1251:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1276:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1357:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1631:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1808:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2009:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2013:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2118:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2144:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2264:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1168:1-16: info: no atoms over signature occur in program:
  output/3

-:1160:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1161:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1162:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1163:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1193:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasPrep(7))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(71,better,7) output(39,eq,18) output(84,eq,30) output(30,eq,32) output(32,eq,17) output(17,eq,69) output(69,eq,61) output(21,eq,50) output(67,eq,84) output(84,eq,66) output(66,eq,32) output(84,eq,32) output(67,eq,66) output(17,eq,61) output(32,eq,69) output(30,eq,17) output(66,eq,17) output(67,eq,30) output(84,eq,17) output(67,eq,17) output(30,eq,69) output(66,eq,69) output(84,eq,69) output(32,eq,61) output(30,eq,61) output(66,eq,61) output(67,eq,32) output(84,eq,61) output(67,eq,61) output(67,eq,69)
Optimization: 33 6
Answer: 2
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasPrep(2))),()) preference(1,(1,5),3,for(atom(hasPrep(2))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(32,better,17) output(32,better,69) output(32,better,61) output(71,worse,7) output(39,worse,18) output(30,worse,32) output(66,worse,32) output(84,worse,32) output(10,worse,18) output(67,worse,32) output(84,eq,30) output(17,eq,69) output(69,eq,61) output(10,eq,39) output(21,eq,50) output(50,eq,58) output(67,eq,84) output(84,eq,66) output(67,eq,66) output(21,eq,58) output(17,eq,61) output(30,eq,17) output(66,eq,17) output(67,eq,30) output(84,eq,17) output(67,eq,17) output(30,eq,69) output(66,eq,69) output(84,eq,69) output(30,eq,61) output(66,eq,61) output(84,eq,61) output(67,eq,61) output(67,eq,69)
Optimization: 31 6
Answer: 3
preference(1,(1,2),0,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(39,better,18) output(30,better,32) output(69,better,61) output(66,better,32) output(84,better,32) output(10,better,18) output(67,better,32) output(32,worse,17) output(17,worse,69) output(32,worse,69) output(30,worse,69) output(66,worse,69) output(84,worse,69) output(32,worse,61) output(67,worse,69) output(84,eq,30) output(10,eq,39) output(21,eq,50) output(50,eq,58) output(67,eq,84) output(84,eq,66) output(67,eq,66) output(21,eq,58) output(17,eq,61) output(30,eq,17) output(66,eq,17) output(67,eq,30) output(84,eq,17) output(67,eq,17) output(30,eq,61) output(66,eq,61) output(84,eq,61) output(67,eq,61)
Optimization: 27 5
Progression : [ 1;27] (Error: 26)
Answer: 4
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasPrep(2))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,1),3,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(84,better,30) output(32,better,17) output(17,better,69) output(10,better,39) output(50,better,58) output(84,better,66) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(67,better,30) output(10,better,18) output(84,better,17) output(84,better,69) output(32,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(30,worse,32) output(21,worse,50) output(67,worse,84) output(66,worse,32) output(30,worse,17) output(66,worse,17) output(67,worse,32) output(69,eq,61) output(84,eq,32) output(67,eq,17) output(30,eq,69) output(66,eq,69) output(30,eq,61) output(66,eq,61)
Optimization: 16 6
Answer: 5
preference(1,(1,2),0,for(atom(hasPrep(2))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(39,better,18) output(84,better,30) output(17,better,69) output(10,better,39) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(67,better,30) output(10,better,18) output(84,better,17) output(84,better,69) output(32,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(30,worse,32) output(21,worse,50) output(67,worse,84) output(66,worse,32) output(30,worse,17) output(66,worse,17) output(32,eq,17) output(69,eq,61) output(67,eq,17) output(30,eq,69) output(66,eq,69) output(30,eq,61) output(66,eq,61) output(67,eq,32)
Optimization: 15 6
Progression : [ 2;15] (Error: 6.5)
Answer: 6
preference(1,(1,1),0,for(atom(hasPrep(2))),()) preference(1,(1,2),0,for(atom(hasPrepTime(1))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,2),3,for(atom(hasPrep(4))),()) preference(1,aso) output(39,better,18) output(84,better,30) output(17,better,69) output(69,better,61) output(10,better,39) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(17,better,61) output(32,better,69) output(67,better,30) output(10,better,18) output(84,better,17) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(30,worse,32) output(21,worse,50) output(67,worse,84) output(66,worse,32) output(21,worse,58) output(30,worse,17) output(66,worse,17) output(32,eq,17) output(67,eq,17) output(30,eq,69) output(66,eq,69) output(67,eq,32)
Optimization: 13 5
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(atom(hasPrepTime(1))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(atom(hasPrep(3))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,2),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(39,better,18) output(84,better,30) output(17,better,69) output(69,better,61) output(10,better,39) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(67,better,30) output(10,better,18) output(84,better,17) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(30,worse,32) output(21,worse,50) output(67,worse,84) output(66,worse,32) output(30,worse,17) output(66,worse,17) output(32,eq,17) output(67,eq,17) output(30,eq,69) output(66,eq,69) output(67,eq,32)
Optimization: 12 5
Progression : [ 3;12] (Error: 3)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,(1,5),3,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(84,better,30) output(17,better,69) output(69,better,61) output(10,better,39) output(21,better,50) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(67,better,30) output(10,better,18) output(84,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(30,worse,32) output(32,worse,17) output(67,worse,84) output(66,worse,32) output(30,worse,17) output(66,worse,17) output(67,eq,17)
Optimization: 7 6
Progression : [4;7] (Error: 0.75)
Progression : [5;7] (Error: 0.4)
Progression : [6;7] (Error: 0.166667)
Answer: 9
preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,3),0,for(atom(hasPrep(6))),()) preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(84,better,30) output(30,better,32) output(32,better,17) output(17,better,69) output(10,better,39) output(21,better,50) output(50,better,58) output(84,better,66) output(66,better,32) output(84,better,32) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(10,better,18) output(84,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(67,worse,84) output(67,worse,66) output(67,worse,30) output(67,worse,32) output(67,eq,17)
Optimization: 6 6
Progression : 6 [1;6] (Error: 5)
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(atom(hasPrep(0))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,1),3,for(atom(hasPrep(4))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(84,better,30) output(30,better,32) output(32,better,17) output(17,better,69) output(10,better,39) output(21,better,50) output(50,better,58) output(84,better,66) output(66,better,32) output(84,better,32) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(10,better,18) output(84,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(67,worse,84) output(67,worse,66) output(67,worse,30) output(67,worse,32) output(67,eq,17)
Optimization: 6 5
Progression : 6 [2;5] (Error: 1.5)
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,3),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(84,better,30) output(30,better,32) output(32,better,17) output(17,better,69) output(10,better,39) output(21,better,50) output(50,better,58) output(84,better,66) output(66,better,32) output(84,better,32) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(10,better,18) output(84,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(84,better,61) output(67,better,61) output(67,better,69) output(67,worse,84) output(67,worse,66) output(67,worse,30) output(67,worse,32) output(67,eq,17)
Optimization: 6 4
Progression : 6 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 11
  Optimum    : yes
Optimization : 6 4
Calls        : 1
Time         : 4.539s (Solving: 1.77s 1st Model: 0.06s Unsat: 0.48s)
CPU Time     : 9.513s
Threads      : 4        (Winner: 3)

Choices      : 112829   (Domain: 1618)
Conflicts    : 19108    (Analyzed: 19098)
Restarts     : 43       (Average: 444.14 Last: 3234)
Model-Level  : 226.3   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 36272    (Deleted: 3500)
  Binary     : 2142     (Ratio:   5.91%)
  Ternary    : 5324     (Ratio:  14.68%)
  Conflict   : 19093    (Average Length:   46.1 Ratio:  52.64%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 17179    (Average Length:   20.1 Ratio:  47.36%) 
  Distributed: 5742     (Ratio:  30.07% Average LBD: 3.01) 
  Integrated : 17223    (Ratio: 299.95% Unit: 188 Average Jumps: 66.87)
Backjumps    : 19098    (Average:  5.07 Max: 439 Sum:  96764)
  Executed   : 19063    (Average:  5.04 Max: 439 Sum:  96286 Ratio:  99.51%)
  Bounded    : 35       (Average: 13.66 Max:  33 Sum:    478 Ratio:   0.49%)

Rules        : 790618  
  Choice     : 25      
  Minimize   : 2       
Atoms        : 226074  
Bodies       : 254612  
  Count      : 1248    
Equivalences : 662568   (Atom=Atom: 194326 Body=Body: 209505 Other: 258737)
Tight        : Yes
Variables    : 29901    (Eliminated:    0 Frozen: 19053)
Constraints  : 603854   (Binary:  95.2% Ternary:   3.8% Other:   1.1%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(7)) >> not atom(hasDifficulty(1))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(7))  >> not atom(hasPrep(0))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(7)) >> not atom(hasPrepTime(2))  ; 
  atom(hasPrep(3)) >> not atom(hasDifficulty(1))  >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(3)) >> not atom(hasDifficulty(1))  >> atom(hasPrep(7)) ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(2))  >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrep(0)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrep(1)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrep(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrep(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrep(2)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(2))  >> atom(hasPrep(6)) >> atom(hasPrep(5)) || atom(hasPrep(2)) ; 
  atom(hasPrep(3)) >> atom(hasCost(1)) >> not atom(hasPrep(2))  ; 
  not atom(hasCost(2))  >> not atom(hasPrep(6))  >> atom(hasPrepTime(2)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrep(3))  >> atom(hasPrep(3)) || atom(hasCost(1)) ; 
  not atom(hasCost(2))  >> atom(hasPrep(6)) >> atom(hasPrep(5)) || atom(hasPrep(2)) ; 
  not atom(hasCost(2))  >> not atom(hasPrep(6))  >> not atom(hasPrep(7))  || atom(hasCost(1)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(1))  || not atom(hasCost(2))  ; 
  atom(hasPrep(5)) >> not atom(hasPrep(7))  >> atom(hasPrepTime(3)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(2))  >> atom(hasPrep(6)) >> atom(hasPrep(5)) || atom(hasPrep(2)) ; 
  not atom(hasCost(2))  >> not atom(hasPrep(6))  >> atom(hasPrep(0)) || atom(hasCost(1)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(1))  || not atom(hasCost(2))  ; 
  atom(hasPrep(5)) >> not atom(hasPrep(7))  >> atom(hasCost(1)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(3))  >> atom(hasPrep(6)) ; 
  atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasPrep(0)) || atom(hasPrep(2)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(5))  >> atom(hasPrep(4)) || atom(hasPrepTime(1)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(3))  >> not atom(hasCost(1))  || not atom(hasPrep(2))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(1)) >> not atom(hasDifficulty(2))  || atom(hasPrep(6)) ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  >> not atom(hasPrep(1))  || atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(6))  >> not atom(hasPrep(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(2)) >> atom(hasCost(2)) >> atom(hasPrep(4)) || atom(hasPrepTime(1)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(3))  >> not atom(hasCost(1))  || not atom(hasPrep(2))  ; 
  not atom(hasPrep(0))  >> not atom(hasPrep(1))  || atom(hasPrep(6)) ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  >> atom(hasPrep(2)) || atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> atom(hasCost(2)) >> not atom(hasPrep(5))  || not atom(hasPrep(2))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(1)) >> atom(hasPrep(6)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(2)) >> not atom(hasPrepTime(1))  || not atom(hasDifficulty(2))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(4)) >> not atom(hasPrep(1))  || atom(hasPrepTime(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(3)) >> atom(hasPrep(7)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(6)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(2)) >> atom(hasDifficulty(1)) || atom(hasPrepTime(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(1))  || atom(hasPrep(6)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(1))  >> atom(hasPrep(4)) || atom(hasPrepTime(2)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(2)) >> atom(hasCost(2)) || atom(hasPrep(6)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(1))  >> atom(hasPrep(4)) || not atom(hasCost(2))  ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(2)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrep(1))  >> atom(hasPrep(4)) || not atom(hasPrep(2))  ; 
  not atom(hasPrep(0))  >> not atom(hasPrep(1))  || atom(hasPrep(0)) ; 
  not atom(hasCost(1))  >> not atom(hasPrep(1))  >> atom(hasPrep(4)) || not atom(hasPrep(2))  ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrep(2))  || not atom(hasCost(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(2)) >> not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> not atom(hasCost(1))  >> atom(hasPrep(0)) || not atom(hasCost(2))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(1))  >> atom(hasPrep(4)) || atom(hasCost(1)) ; 
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> atom(hasPrep(4)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(2)) >> not atom(hasPrepTime(1))  
}.
