asprin_vL version 1.0
Reading from stdin
-:1275:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1285:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1300:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1381:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1642:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1655:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1832:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1961:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2033:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2037:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2037:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2043:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2142:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2168:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2288:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2322:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2344:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1192:1-16: info: no atoms over signature occur in program:
  output/3

-:1184:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1185:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,47) output(47,eq,70) output(70,eq,10) output(10,eq,49) output(49,eq,29) output(29,eq,24) output(64,eq,50) output(23,eq,18) output(14,eq,70) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(18,eq,13) output(13,eq,25) output(65,eq,18) output(25,eq,10) output(13,eq,10) output(18,eq,25) output(23,eq,13) output(65,eq,13) output(51,eq,42) output(70,eq,48) output(47,eq,51) output(14,eq,51) output(49,eq,24) output(10,eq,29) output(70,eq,49) output(25,eq,49) output(47,eq,10) output(14,eq,10) output(50,eq,70) output(64,eq,47) output(64,eq,70) output(50,eq,10) output(64,eq,10) output(13,eq,49) output(18,eq,49) output(47,eq,49) output(14,eq,49) output(50,eq,49) output(70,eq,29) output(25,eq,29) output(13,eq,29) output(47,eq,29) output(14,eq,29) output(10,eq,24) output(70,eq,24) output(25,eq,24) output(50,eq,51) output(64,eq,51) output(47,eq,48) output(14,eq,48) output(50,eq,48) output(70,eq,42) output(47,eq,42) output(14,eq,42) output(23,eq,25) output(65,eq,25) output(18,eq,10) output(23,eq,10) output(65,eq,10) output(50,eq,42) output(64,eq,42) output(64,eq,48) output(13,eq,24) output(18,eq,24) output(23,eq,24) output(65,eq,24) output(47,eq,24) output(14,eq,24) output(50,eq,24) output(64,eq,24) output(50,eq,29) output(64,eq,29) output(18,eq,29) output(23,eq,29) output(65,eq,29) output(64,eq,49) output(23,eq,49) output(65,eq,49)
Optimization: 80 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(13,better,10) output(25,better,10) output(50,better,70) output(50,better,10) output(50,better,42) output(51,better,42) output(23,better,18) output(23,better,10) output(47,better,70) output(47,better,10) output(47,better,42) output(48,better,42) output(65,better,18) output(65,better,10) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(64,worse,50) output(64,worse,47) output(64,worse,51) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,51) output(70,worse,48) output(70,worse,49) output(70,worse,29) output(70,worse,24) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,24) output(18,worse,29) output(50,eq,47) output(70,eq,10) output(49,eq,29) output(29,eq,24) output(14,eq,70) output(51,eq,48) output(13,eq,25) output(23,eq,13) output(65,eq,13) output(47,eq,51) output(49,eq,24) output(25,eq,49) output(14,eq,10) output(64,eq,70) output(64,eq,10) output(13,eq,49) output(47,eq,49) output(50,eq,49) output(25,eq,29) output(13,eq,29) output(47,eq,29) output(25,eq,24) output(50,eq,51) output(47,eq,48) output(50,eq,48) output(70,eq,42) output(14,eq,42) output(23,eq,25) output(65,eq,25) output(18,eq,10) output(64,eq,42) output(13,eq,24) output(23,eq,24) output(65,eq,24) output(47,eq,24) output(50,eq,24) output(50,eq,29) output(23,eq,29) output(65,eq,29) output(23,eq,49) output(65,eq,49)
Optimization: 66 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(3))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(13,better,25) output(13,better,10) output(64,better,50) output(64,better,47) output(64,better,10) output(64,better,51) output(70,better,10) output(70,better,51) output(14,better,51) output(14,better,10) output(18,better,25) output(18,better,10) output(23,better,25) output(23,better,10) output(65,better,25) output(65,better,10) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(25,worse,49) output(25,worse,29) output(25,worse,24) output(50,worse,70) output(50,worse,49) output(50,worse,48) output(50,worse,42) output(50,worse,24) output(50,worse,29) output(51,worse,48) output(51,worse,42) output(47,worse,70) output(47,worse,49) output(47,worse,29) output(47,worse,48) output(47,worse,42) output(47,worse,24) output(50,eq,47) output(49,eq,29) output(29,eq,24) output(23,eq,18) output(14,eq,70) output(48,eq,42) output(18,eq,13) output(65,eq,18) output(25,eq,10) output(23,eq,13) output(65,eq,13) output(70,eq,48) output(47,eq,51) output(49,eq,24) output(70,eq,49) output(47,eq,10) output(64,eq,70) output(50,eq,10) output(13,eq,49) output(18,eq,49) output(14,eq,49) output(70,eq,29) output(13,eq,29) output(14,eq,29) output(70,eq,24) output(50,eq,51) output(14,eq,48) output(70,eq,42) output(14,eq,42) output(64,eq,42) output(64,eq,48) output(13,eq,24) output(18,eq,24) output(23,eq,24) output(65,eq,24) output(14,eq,24) output(64,eq,24) output(64,eq,29) output(18,eq,29) output(23,eq,29) output(65,eq,29) output(64,eq,49) output(23,eq,49) output(65,eq,49)
Optimization: 64 3
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),8) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(3))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(13,better,25) output(13,better,10) output(25,better,10) output(50,better,70) output(50,better,10) output(50,better,42) output(51,better,42) output(64,better,50) output(64,better,70) output(64,better,10) output(64,better,42) output(70,better,10) output(14,better,10) output(18,better,10) output(23,better,18) output(23,better,25) output(23,better,10) output(47,better,70) output(47,better,10) output(47,better,42) output(48,better,42) output(65,better,18) output(65,better,25) output(65,better,10) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(25,worse,49) output(25,worse,29) output(25,worse,24) output(50,worse,47) output(50,worse,49) output(50,worse,51) output(50,worse,48) output(50,worse,24) output(50,worse,29) output(51,worse,48) output(64,worse,51) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,51) output(70,worse,48) output(70,worse,49) output(70,worse,29) output(70,worse,24) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,24) output(18,worse,29) output(47,worse,51) output(47,worse,49) output(47,worse,29) output(47,worse,48) output(47,worse,24) output(49,eq,29) output(29,eq,24) output(14,eq,70) output(23,eq,13) output(65,eq,13) output(49,eq,24) output(64,eq,47) output(13,eq,49) output(13,eq,29) output(70,eq,42) output(14,eq,42) output(13,eq,24) output(23,eq,24) output(65,eq,24) output(23,eq,29) output(65,eq,29) output(23,eq,49) output(65,eq,49)
Optimization: 56 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrep(3))),1) preference(1,(1,7),1,for(atom(hasPrep(1))),8) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(13,better,25) output(13,better,10) output(25,better,10) output(50,better,70) output(50,better,10) output(50,better,42) output(51,better,42) output(64,better,50) output(64,better,70) output(64,better,10) output(64,better,42) output(70,better,10) output(14,better,10) output(18,better,10) output(23,better,18) output(23,better,25) output(23,better,10) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,42) output(48,better,42) output(65,better,18) output(65,better,25) output(65,better,10) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(25,worse,49) output(25,worse,29) output(25,worse,24) output(50,worse,47) output(50,worse,49) output(50,worse,51) output(50,worse,48) output(50,worse,24) output(50,worse,29) output(51,worse,48) output(64,worse,47) output(64,worse,51) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,51) output(70,worse,48) output(70,worse,49) output(70,worse,29) output(70,worse,24) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,24) output(18,worse,29) output(47,worse,49) output(47,worse,29) output(47,worse,48) output(47,worse,24) output(49,eq,29) output(29,eq,24) output(14,eq,70) output(23,eq,13) output(65,eq,13) output(49,eq,24) output(13,eq,49) output(13,eq,29) output(70,eq,42) output(14,eq,42) output(13,eq,24) output(23,eq,24) output(65,eq,24) output(23,eq,29) output(65,eq,29) output(23,eq,49) output(65,eq,49)
Optimization: 55 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),8) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(3))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(13,better,25) output(13,better,10) output(25,better,10) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,42) output(51,better,42) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,42) output(70,better,10) output(14,better,10) output(18,better,10) output(23,better,18) output(23,better,25) output(23,better,10) output(47,better,70) output(47,better,10) output(47,better,42) output(48,better,42) output(65,better,18) output(65,better,25) output(65,better,10) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(25,worse,49) output(25,worse,29) output(25,worse,24) output(50,worse,49) output(50,worse,51) output(50,worse,48) output(50,worse,24) output(50,worse,29) output(51,worse,48) output(64,worse,51) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,51) output(70,worse,48) output(70,worse,49) output(70,worse,29) output(70,worse,24) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,24) output(18,worse,29) output(47,worse,51) output(47,worse,49) output(47,worse,29) output(47,worse,48) output(47,worse,24) output(49,eq,29) output(29,eq,24) output(14,eq,70) output(23,eq,13) output(65,eq,13) output(49,eq,24) output(13,eq,49) output(13,eq,29) output(70,eq,42) output(14,eq,42) output(13,eq,24) output(23,eq,24) output(65,eq,24) output(23,eq,29) output(65,eq,29) output(23,eq,49) output(65,eq,49)
Optimization: 54 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(13,better,10) output(25,better,10) output(25,better,29) output(25,better,24) output(50,better,10) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,10) output(14,better,42) output(18,better,13) output(18,better,25) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(13,worse,25) output(13,worse,49) output(13,worse,24) output(25,worse,49) output(29,worse,24) output(50,worse,47) output(50,worse,70) output(50,worse,49) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,10) output(64,worse,51) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,49) output(14,worse,70) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(18,worse,49) output(23,worse,49) output(47,worse,49) output(65,worse,49) output(13,eq,29) output(50,eq,51) output(64,eq,42)
Optimization: 34 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(7))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(13,better,10) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,24) output(50,better,29) output(64,better,70) output(64,better,10) output(64,better,24) output(64,better,29) output(70,better,10) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,29) output(14,better,24) output(18,better,13) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,24) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(13,worse,25) output(13,worse,49) output(51,worse,48) output(51,worse,42) output(64,worse,50) output(64,worse,47) output(64,worse,42) output(64,worse,48) output(64,worse,49) output(70,worse,51) output(70,worse,48) output(70,worse,49) output(70,worse,29) output(70,worse,24) output(70,worse,42) output(14,worse,48) output(14,worse,42) output(18,worse,25) output(18,worse,49) output(23,worse,25) output(23,worse,49) output(47,worse,48) output(47,worse,42) output(48,worse,42) output(65,worse,25) output(65,worse,49) output(14,eq,49) output(13,eq,29) output(64,eq,51) output(50,eq,42)
Optimization: 33 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(13,better,10) output(25,better,10) output(25,better,29) output(25,better,24) output(50,better,10) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,10) output(14,better,42) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(13,worse,25) output(13,worse,49) output(13,worse,24) output(29,worse,24) output(50,worse,47) output(50,worse,70) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,10) output(64,worse,51) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(14,worse,70) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(25,eq,49) output(50,eq,49) output(13,eq,29) output(50,eq,51) output(64,eq,42)
Optimization: 29 14
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,48) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,29) output(65,better,18) output(65,better,13) output(65,better,10) output(65,better,29) output(65,better,49) output(10,worse,24) output(13,worse,25) output(13,worse,10) output(13,worse,49) output(13,worse,24) output(29,worse,24) output(51,worse,42) output(64,worse,50) output(64,worse,47) output(70,worse,24) output(70,worse,42) output(14,worse,42) output(14,worse,24) output(18,worse,25) output(18,worse,24) output(23,worse,25) output(48,worse,42) output(49,worse,24) output(65,worse,25) output(50,eq,47) output(14,eq,70) output(51,eq,48) output(13,eq,29) output(64,eq,42) output(23,eq,24) output(65,eq,24) output(64,eq,24)
Optimization: 27 13
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,24) output(50,better,29) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,29) output(65,better,18) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(13,worse,10) output(13,worse,49) output(13,worse,24) output(29,worse,24) output(50,worse,47) output(51,worse,42) output(64,worse,47) output(70,worse,42) output(14,worse,42) output(18,worse,25) output(48,worse,42) output(49,worse,24) output(64,eq,50) output(14,eq,70) output(51,eq,48) output(13,eq,29) output(10,eq,24) output(23,eq,25) output(65,eq,25) output(50,eq,42) output(64,eq,42)
Optimization: 22 14
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,29) output(65,better,18) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(13,worse,10) output(13,worse,49) output(13,worse,24) output(29,worse,24) output(51,worse,42) output(64,worse,50) output(64,worse,47) output(70,worse,42) output(14,worse,42) output(18,worse,25) output(23,worse,25) output(48,worse,42) output(49,worse,24) output(65,worse,25) output(50,eq,47) output(14,eq,70) output(51,eq,48) output(13,eq,29) output(10,eq,24) output(64,eq,42)
Optimization: 21 14
Progression : [ 1;21] (Error: 20)
Progression : [ 2;21] (Error: 9.5)
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(1))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(13,better,10) output(13,better,49) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,24) output(29,better,24) output(50,better,10) output(50,better,49) output(50,better,48) output(50,better,42) output(50,better,24) output(51,better,48) output(51,better,42) output(64,better,50) output(64,better,10) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,10) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(50,worse,47) output(50,worse,70) output(50,worse,51) output(64,worse,47) output(64,worse,70) output(64,worse,51) output(70,worse,51) output(14,worse,70) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(47,worse,51) output(49,worse,29) output(13,eq,25) output(25,eq,29) output(13,eq,29) output(50,eq,29)
Optimization: 20 13
Answer: 14
preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,24) output(13,better,10) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,42) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,10) output(23,better,24) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(10,worse,49) output(10,worse,29) output(13,worse,25) output(13,worse,49) output(51,worse,48) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(23,worse,18) output(23,worse,25) output(23,worse,49) output(65,worse,18) output(65,worse,25) output(50,eq,47) output(18,eq,25) output(23,eq,13) output(13,eq,29) output(23,eq,29)
Optimization: 18 10
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),3) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(10,better,49) output(10,better,24) output(13,better,49) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(18,worse,25) output(23,worse,25) output(49,worse,29) output(14,eq,70) output(70,eq,51) output(48,eq,42) output(13,eq,10) output(14,eq,51) output(10,eq,29) output(13,eq,29)
Optimization: 11 12
Progression : [ 3;11] (Error: 2.66667)
Progression : [ 4;11] (Error: 1.75)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,47) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,29) output(49,better,24) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(13,worse,10) output(13,worse,49) output(23,worse,18) output(23,worse,25) output(47,worse,70) output(48,worse,42) output(65,eq,18) output(50,eq,70) output(13,eq,29)
Optimization: 10 13
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(13,better,49) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(13,worse,10) output(50,worse,47) output(23,worse,18) output(48,worse,42) output(49,worse,29) output(51,eq,42) output(13,eq,29) output(23,eq,25)
Optimization: 9 13
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),8) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(3))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(13,better,49) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(13,worse,10) output(48,worse,42) output(49,worse,29) output(50,eq,47) output(23,eq,18) output(70,eq,51) output(13,eq,29)
Optimization: 8 13
Progression : [5;8] (Error: 0.6)
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(3))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(13,better,49) output(13,better,24) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(29,better,24) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(13,worse,25) output(13,worse,10) output(23,worse,18) output(48,worse,42) output(49,worse,29) output(50,eq,47) output(13,eq,29)
Optimization: 7 14
Progression : [6;7] (Error: 0.166667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.054 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 7 14
Bounds       : [6;7] [0;14]
Calls        : 1
Time         : 298.392s (Solving: 296.38s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.123s
Threads      : 4        (Winner: 4)

Choices      : 10712465 (Domain: 710220)
Conflicts    : 8376890  (Analyzed: 8376884)
Restarts     : 6785     (Average: 1234.62 Last: 704169)
Model-Level  : 45.4    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 8729402  (Deleted: 8355448)
  Binary     : 335      (Ratio:   0.00%)
  Ternary    : 16377    (Ratio:   0.19%)
  Conflict   : 8376883  (Average Length:   93.9 Ratio:  95.96%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 352519   (Average Length:   39.6 Ratio:   4.04%) 
  Distributed: 117608   (Ratio:   1.40% Average LBD: 3.70) 
  Integrated : 352824   (Ratio: 300.00% Unit: 378 Average Jumps: 3.91)
Backjumps    : 8376884  (Average:  1.26 Max: 159 Sum: 10578949)
  Executed   : 8376876  (Average:  1.26 Max: 159 Sum: 10578796 Ratio: 100.00%)
  Bounded    : 8        (Average: 19.12 Max:  70 Sum:    153 Ratio:   0.00%)

Rules        : 170556  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13468   
Bodies       : 6113    
  Sum        : 152     
  Count      : 14      
Equivalences : 5234     (Atom=Atom: 833 Body=Body: 354 Other: 4047)
Tight        : Yes
Variables    : 4981     (Eliminated:    0 Frozen: 3511)
Constraints  : 165380   (Binary:  98.0% Ternary:   0.9% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) 
}.
