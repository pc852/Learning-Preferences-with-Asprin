asprin_vL version 1.0
Reading from stdin
-:1215:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1225:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1240:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1321:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1582:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1595:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1772:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1901:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1973:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1977:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1977:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1983:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2082:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2108:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2228:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2262:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1132:1-16: info: no atoms over signature occur in program:
  output/3

-:1124:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1125:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(74,eq,82) output(82,eq,65) output(65,eq,22) output(10,eq,68) output(68,eq,39) output(39,eq,88) output(74,eq,47) output(46,eq,55) output(83,eq,66) output(66,eq,60) output(52,eq,68) output(83,eq,60) output(68,eq,88) output(10,eq,39) output(52,eq,39) output(82,eq,22) output(74,eq,65) output(74,eq,22) output(10,eq,88) output(52,eq,88)
Optimization: 20 0
Answer: 2
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(46,better,55) output(74,better,82) output(74,better,22) output(65,better,22) output(52,worse,68) output(52,worse,39) output(52,worse,88) output(66,worse,60) output(82,worse,65) output(83,worse,60) output(10,eq,68) output(68,eq,39) output(39,eq,88) output(74,eq,47) output(83,eq,66) output(68,eq,88) output(10,eq,39) output(82,eq,22) output(74,eq,65) output(10,eq,88)
Optimization: 16 7
Answer: 3
preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,68) output(10,better,88) output(39,better,88) output(52,better,68) output(52,better,88) output(46,worse,55) output(68,worse,39) output(74,eq,82) output(82,eq,65) output(65,eq,22) output(74,eq,47) output(83,eq,66) output(66,eq,60) output(83,eq,60) output(68,eq,88) output(10,eq,39) output(52,eq,39) output(82,eq,22) output(74,eq,65) output(74,eq,22)
Optimization: 15 1
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(39,better,88) output(52,better,68) output(52,better,88) output(74,better,82) output(83,better,66) output(83,better,60) output(10,worse,68) output(10,worse,39) output(10,worse,88) output(46,worse,55) output(82,worse,65) output(82,worse,22) output(68,worse,39) output(65,eq,22) output(74,eq,47) output(66,eq,60) output(68,eq,88) output(52,eq,39) output(74,eq,65) output(74,eq,22)
Optimization: 14 10
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(39,better,88) output(52,better,68) output(52,better,88) output(74,better,82) output(74,better,47) output(74,better,65) output(83,better,66) output(83,better,60) output(10,worse,39) output(46,worse,55) output(82,worse,22) output(65,worse,22) output(68,worse,39) output(82,eq,65) output(10,eq,68) output(66,eq,60) output(68,eq,88) output(52,eq,39) output(74,eq,22) output(10,eq,88)
Optimization: 12 11
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,68) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,88) output(74,better,47) output(74,better,65) output(82,better,65) output(10,worse,39) output(65,worse,22) output(68,worse,39) output(74,eq,82) output(83,eq,66) output(66,eq,60) output(83,eq,60) output(68,eq,88) output(52,eq,39) output(82,eq,22) output(74,eq,22)
Optimization: 11 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(4))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,68) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,88) output(66,better,60) output(74,better,47) output(74,better,65) output(82,better,65) output(83,better,60) output(10,worse,39) output(74,worse,82) output(74,worse,22) output(65,worse,22) output(68,worse,39) output(83,eq,66) output(68,eq,88) output(52,eq,39) output(82,eq,22)
Optimization: 9 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(65,better,22) output(68,better,39) output(39,worse,88) output(83,worse,66) output(83,worse,60) output(74,eq,82) output(66,eq,60) output(68,eq,88)
Optimization: 6 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(65,better,22) output(68,better,39) output(39,worse,88) output(74,worse,82) output(83,worse,66) output(83,worse,60) output(68,eq,88)
Optimization: 5 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,65) output(74,better,22) output(82,better,65) output(83,better,66) output(83,better,60) output(82,worse,22) output(65,worse,22) output(68,worse,39) output(74,eq,47) output(68,eq,88)
Optimization: 5 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(65,better,22) output(68,better,39) output(39,worse,88) output(66,worse,60) output(83,worse,66) output(83,worse,60) output(68,eq,88)
Optimization: 5 9
Answer: 12
preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(68,better,39) output(39,worse,88) output(74,worse,82) output(83,eq,66) output(68,eq,88)
Optimization: 4 10
Answer: 13
preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(65,better,22) output(68,better,39) output(39,worse,88) output(83,worse,66) output(83,worse,60) output(68,eq,88)
Optimization: 4 9
Progression : [2;4] (Error: 1)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),1) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(68,better,39) output(39,worse,88) output(83,worse,66) output(68,eq,88)
Optimization: 3 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(68,better,39) output(39,worse,88) output(83,worse,66) output(68,eq,88)
Optimization: 3 11
Progression : [3;3] (Error: 0)
Answer: 16
preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(83,worse,66) output(68,worse,39) output(68,eq,88)
Optimization: 3 9
Progression : 3 [1;9] (Error: 8)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(83,worse,66) output(68,worse,39) output(68,eq,88)
Optimization: 3 8
Progression : 3 [2;8] (Error: 3)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(83,worse,66) output(68,worse,39) output(68,eq,88)
Optimization: 3 6
Answer: 19
preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(39,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(83,worse,66) output(68,worse,39) output(68,eq,88)
Optimization: 3 5
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(10,better,68) output(10,better,39) output(10,better,88) output(46,better,55) output(52,better,68) output(52,better,39) output(52,better,88) output(66,better,60) output(74,better,82) output(74,better,47) output(74,better,65) output(74,better,22) output(82,better,65) output(82,better,22) output(83,better,60) output(65,better,22) output(68,better,39) output(39,worse,88) output(83,worse,66) output(68,eq,88)
Optimization: 3 4
Progression : 3 [3;4] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.065 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 3 4
Bounds       : 3 [3;4]
Calls        : 1
Time         : 297.235s (Solving: 295.82s 1st Model: 0.00s Unsat: 0.00s)
CPU Time     : 1184.192s
Threads      : 4        (Winner: 4)

Choices      : 9889409  (Domain: 755885)
Conflicts    : 7461952  (Analyzed: 7461946)
Restarts     : 6038     (Average: 1235.83 Last: 538855)
Model-Level  : 34.0    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 7539253  (Deleted: 7256054)
  Binary     : 1139     (Ratio:   0.02%)
  Ternary    : 4720     (Ratio:   0.06%)
  Conflict   : 7461946  (Average Length:  210.1 Ratio:  98.97%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 77307    (Average Length:   62.1 Ratio:   1.03%) 
  Distributed: 25853    (Ratio:   0.35% Average LBD: 3.72) 
  Integrated : 77556    (Ratio: 299.99% Unit: 146 Average Jumps: 8.75)
Backjumps    : 7461946  (Average:  1.26 Max: 464 Sum: 9401151)
  Executed   : 7461939  (Average:  1.26 Max: 464 Sum: 9401140 Ratio: 100.00%)
  Bounded    : 7        (Average:  1.57 Max:   5 Sum:     11 Ratio:   0.00%)

Rules        : 75525   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 7572    
Bodies       : 5456    
  Sum        : 35      
  Count      : 14      
Equivalences : 5621     (Atom=Atom: 221 Body=Body: 105 Other: 5295)
Tight        : Yes
Variables    : 4729     (Eliminated:    0 Frozen: 3259)
Constraints  : 75801    (Binary:  96.0% Ternary:   2.0% Other:   2.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) 
}.
