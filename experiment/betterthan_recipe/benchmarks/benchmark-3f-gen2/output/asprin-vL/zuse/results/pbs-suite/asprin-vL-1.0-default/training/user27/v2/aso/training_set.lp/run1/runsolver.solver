asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1148:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1149:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1179:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,4),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasPrep(2))),()) preference(1,aso) output(10,better,68) output(10,better,39) output(52,better,39) output(82,better,22) output(10,better,88) output(74,worse,82) output(74,worse,47) output(83,eq,66) output(68,eq,88)
Optimization: 15 6
Answer: 2
preference(1,(1,4),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasPrep(2))),()) preference(1,aso) output(82,better,65) output(10,better,68) output(10,better,39) output(52,better,39) output(82,better,22) output(10,better,88) output(74,worse,82) output(65,worse,22) output(83,eq,66) output(68,eq,88)
Optimization: 14 6
Answer: 3
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,4),3,for(atom(hasPrep(3))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(74,better,82) output(65,better,22) output(68,better,39) output(46,better,55) output(83,better,66) output(10,better,39) output(74,better,22) output(82,worse,65) output(10,worse,68) output(39,worse,88) output(74,worse,47) output(66,worse,60) output(52,worse,68) output(83,worse,60) output(52,worse,39) output(82,worse,22) output(74,worse,65) output(10,worse,88) output(52,worse,88) output(68,eq,88)
Optimization: 13 6
Answer: 4
preference(1,(1,2),0,for(atom(hasDifficulty(2))),()) preference(1,(1,1),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,aso) output(65,better,22) output(39,better,88) output(66,better,60) output(52,better,68) output(52,better,39) output(82,better,22) output(74,better,22) output(52,better,88) output(74,worse,82) output(68,worse,39) output(74,worse,47) output(83,worse,66) output(68,eq,88)
Optimization: 12 6
Progression : [ 1;12] (Error: 11)
Answer: 5
preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,aso) output(82,better,65) output(65,better,22) output(10,better,68) output(39,better,88) output(10,better,39) output(82,better,22) output(74,better,22) output(10,better,88) output(74,worse,82) output(68,worse,39) output(46,worse,55) output(83,worse,66) output(83,worse,60) output(52,worse,39) output(74,eq,47) output(66,eq,60) output(52,eq,68) output(68,eq,88) output(74,eq,65) output(52,eq,88)
Optimization: 12 3
Answer: 6
preference(1,(1,1),0,for(atom(hasPrepTime(1))),()) preference(1,(1,5),0,for(atom(hasPrepTime(3))),()) preference(1,(1,6),0,for(atom(hasPrep(3))),()) preference(1,(1,1),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,aso) output(82,better,65) output(10,better,68) output(46,better,55) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(10,better,88) output(52,better,88) output(74,worse,82) output(65,worse,22) output(74,worse,47) output(74,worse,65) output(74,worse,22) output(83,eq,66) output(68,eq,88) output(82,eq,22)
Optimization: 10 3
Progression : [ 2;10] (Error: 4)
Answer: 7
preference(1,(1,4),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(atom(hasPrepTime(3))),()) preference(1,(1,6),0,for(atom(hasPrep(3))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,aso) output(82,better,65) output(10,better,68) output(46,better,55) output(83,better,66) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(10,better,88) output(52,better,88) output(65,worse,22) output(82,worse,22) output(74,worse,22) output(68,eq,88)
Optimization: 9 4
Answer: 8
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,(1,3),3,for(atom(hasPrep(5))),()) preference(1,aso) output(74,better,82) output(82,better,65) output(65,better,22) output(10,better,68) output(74,better,47) output(46,better,55) output(83,better,66) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(82,better,22) output(74,better,65) output(74,better,22) output(10,better,88) output(52,better,88) output(68,eq,39) output(39,eq,88) output(68,eq,88)
Optimization: 3 6
Answer: 9
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,(1,3),3,for(atom(hasPrep(5))),()) preference(1,aso) output(74,better,82) output(82,better,65) output(65,better,22) output(10,better,68) output(39,better,88) output(74,better,47) output(46,better,55) output(83,better,66) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(82,better,22) output(74,better,65) output(74,better,22) output(10,better,88) output(52,better,88) output(68,worse,39) output(68,eq,88)
Optimization: 2 6
Progression : 2 [1;6] (Error: 5)
Answer: 10
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,(1,3),3,for(atom(hasPrep(5))),()) preference(1,aso) output(74,better,82) output(82,better,65) output(65,better,22) output(10,better,68) output(39,better,88) output(74,better,47) output(46,better,55) output(83,better,66) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(82,better,22) output(74,better,65) output(74,better,22) output(10,better,88) output(52,better,88) output(68,worse,39) output(68,eq,88)
Optimization: 2 5
Progression : 2 [2;5] (Error: 1.5)
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasPrepTime(3))),()) preference(1,(1,4),3,for(atom(hasPrep(6))),()) preference(1,aso) output(74,better,82) output(82,better,65) output(65,better,22) output(10,better,68) output(68,better,39) output(74,better,47) output(46,better,55) output(83,better,66) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(82,better,22) output(74,better,65) output(74,better,22) output(10,better,88) output(52,better,88) output(39,worse,88) output(68,eq,88)
Optimization: 2 4
Answer: 12
preference(1,(1,2),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,5),3,for(atom(hasPrep(6))),()) preference(1,aso) output(74,better,82) output(82,better,65) output(65,better,22) output(10,better,68) output(68,better,39) output(74,better,47) output(46,better,55) output(83,better,66) output(66,better,60) output(52,better,68) output(83,better,60) output(10,better,39) output(52,better,39) output(82,better,22) output(74,better,65) output(74,better,22) output(10,better,88) output(52,better,88) output(39,worse,88) output(68,eq,88)
Optimization: 2 3
OPTIMUM FOUND

Models       : 12
  Optimum    : yes
Optimization : 2 3
Calls        : 1
Time         : 2.869s (Solving: 0.86s 1st Model: 0.06s Unsat: 0.55s)
CPU Time     : 5.315s
Threads      : 4        (Winner: 1)

Choices      : 44387    (Domain: 492)
Conflicts    : 6508     (Analyzed: 6502)
Restarts     : 22       (Average: 295.55 Last: 1209)
Model-Level  : 254.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 13668    (Deleted: 0)
  Binary     : 923      (Ratio:   6.75%)
  Ternary    : 2542     (Ratio:  18.60%)
  Conflict   : 6500     (Average Length:   44.3 Ratio:  47.56%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 7168     (Average Length:   20.8 Ratio:  52.44%) 
  Distributed: 2468     (Ratio:  37.97% Average LBD: 2.96) 
  Integrated : 7401     (Ratio: 299.88% Unit: 111 Average Jumps: 42.45)
Backjumps    : 6502     (Average:  5.66 Max: 506 Sum:  36828)
  Executed   : 6486     (Average:  5.64 Max: 506 Sum:  36640 Ratio:  99.49%)
  Bounded    : 16       (Average: 11.75 Max:  22 Sum:    188 Ratio:   0.51%)

Rules        : 474884  
  Choice     : 25      
  Minimize   : 2       
Atoms        : 137686  
Bodies       : 157071  
  Count      : 744     
Equivalences : 398613   (Atom=Atom: 115739 Body=Body: 123181 Other: 159693)
Tight        : Yes
Variables    : 23123    (Eliminated:    0 Frozen: 12443)
Constraints  : 376360   (Binary:  94.0% Ternary:   4.9% Other:   1.1%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(6))  >> not atom(hasPrep(4))  || not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(7))  >> not atom(hasPrep(0))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrepTime(2))  ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(4)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(1)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(6))  >> not atom(hasPrep(4))  || not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(7))  >> not atom(hasPrep(0))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrep(1))  ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> not atom(hasPrepTime(2))  ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(4)) >> atom(hasPrep(2)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(1)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> not atom(hasCost(2))  || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrep(5)) >> not atom(hasPrep(2))  || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasCost(2))  >> atom(hasPrep(3)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasPrep(4))  >> atom(hasPrep(1)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> not atom(hasPrep(3))  >> atom(hasPrep(2)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasPrep(5))  >> not atom(hasPrep(4))  || atom(hasDifficulty(2)) ; 
  not atom(hasDifficulty(2))  >> atom(hasCost(1)) >> not atom(hasPrep(0))  ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(2)) >> not atom(hasPrep(0))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) >> not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(2)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(3)) >> not atom(hasPrep(4))  || not atom(hasPrep(0))  ; 
  not atom(hasDifficulty(1))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(2))  >> not atom(hasPrepTime(1))  >> not atom(hasPrepTime(2))  || atom(hasPrepTime(1)) ; 
  not atom(hasPrepTime(3))  >> not atom(hasPrep(2))  >> not atom(hasDifficulty(2))  || atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> not atom(hasPrep(4))  || atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) >> atom(hasCost(2)) || atom(hasDifficulty(1)) ; 
  not atom(hasPrepTime(3))  >> not atom(hasPrep(2))  >> not atom(hasDifficulty(2))  || atom(hasPrepTime(3)) ; 
  atom(hasDifficulty(1)) >> not atom(hasPrep(4))  || atom(hasPrep(3)) ; 
  not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(2))  >> atom(hasPrep(0)) || atom(hasDifficulty(1)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(4)) >> atom(hasPrep(6)) || not atom(hasPrep(6))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(1))  >> atom(hasPrep(5)) || not atom(hasPrepTime(2))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(7)) >> not atom(hasPrep(1))  || atom(hasDifficulty(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(2))  >> atom(hasPrep(0)) || atom(hasDifficulty(1)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(4)) >> atom(hasPrep(6)) || not atom(hasPrep(6))  ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) >> atom(hasPrep(5)) || not atom(hasPrepTime(2))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(7)) >> not atom(hasPrep(1))  || atom(hasDifficulty(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(2))  >> atom(hasPrep(0)) || atom(hasDifficulty(1)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(4)) >> atom(hasPrep(6)) || not atom(hasPrep(6))  ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) >> atom(hasPrep(5)) || not atom(hasPrepTime(2))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(7)) >> not atom(hasPrep(1))  || atom(hasDifficulty(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> atom(hasPrepTime(3)) || not atom(hasPrep(2))  ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(4)) >> atom(hasPrep(6)) || atom(hasCost(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(4)) >> not atom(hasPrep(1))  || not atom(hasCost(2))  ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> atom(hasPrep(7)) >> not atom(hasPrep(1))  || atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) >> atom(hasCost(2)) >> atom(hasPrep(6)) || not atom(hasPrepTime(2))  ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasPrepTime(1))  
}.
