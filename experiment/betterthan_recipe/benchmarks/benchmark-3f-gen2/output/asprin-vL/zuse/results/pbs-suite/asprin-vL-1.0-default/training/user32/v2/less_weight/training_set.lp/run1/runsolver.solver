asprin_vL version 1.0
Reading from stdin
-:1243:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1253:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1268:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1349:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1610:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1623:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1800:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1929:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2001:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2005:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2011:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2110:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2136:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2256:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2290:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2312:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1160:1-16: info: no atoms over signature occur in program:
  output/3

-:1152:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1153:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(99,eq,55) output(67,eq,76) output(76,eq,91) output(91,eq,51) output(51,eq,71) output(71,eq,57) output(53,eq,99) output(99,eq,30) output(30,eq,60) output(60,eq,76) output(94,eq,98) output(98,eq,71) output(94,eq,71) output(30,eq,76) output(99,eq,60) output(53,eq,30) output(51,eq,57) output(98,eq,57) output(91,eq,71) output(76,eq,51) output(67,eq,91) output(60,eq,91) output(53,eq,55) output(30,eq,91) output(99,eq,91) output(67,eq,51) output(60,eq,51) output(30,eq,51) output(76,eq,71) output(67,eq,71) output(60,eq,71) output(94,eq,57) output(91,eq,57) output(76,eq,57) output(53,eq,60) output(99,eq,76) output(53,eq,76) output(67,eq,57) output(60,eq,57) output(30,eq,57) output(99,eq,57) output(53,eq,57) output(30,eq,71) output(99,eq,71) output(53,eq,71) output(99,eq,51) output(53,eq,51) output(53,eq,91)
Optimization: 48 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,57) output(71,better,57) output(51,worse,71) output(53,worse,30) output(53,worse,71) output(60,worse,71) output(76,worse,71) output(94,worse,71) output(91,worse,71) output(98,worse,71) output(99,worse,30) output(99,worse,71) output(99,eq,55) output(76,eq,91) output(91,eq,51) output(53,eq,99) output(60,eq,76) output(94,eq,98) output(99,eq,60) output(51,eq,57) output(98,eq,57) output(76,eq,51) output(60,eq,91) output(53,eq,55) output(99,eq,91) output(60,eq,51) output(67,eq,71) output(94,eq,57) output(91,eq,57) output(76,eq,57) output(53,eq,60) output(99,eq,76) output(53,eq,76) output(60,eq,57) output(99,eq,57) output(53,eq,57) output(30,eq,71) output(99,eq,51) output(53,eq,51) output(53,eq,91)
Optimization: 38 2
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(30,better,76) output(30,better,91) output(53,better,99) output(53,better,55) output(53,better,76) output(53,better,91) output(60,better,76) output(60,better,91) output(67,better,91) output(76,better,91) output(94,better,98) output(67,worse,51) output(67,worse,71) output(67,worse,57) output(76,worse,51) output(76,worse,71) output(76,worse,57) output(91,worse,51) output(91,worse,71) output(91,worse,57) output(98,worse,71) output(98,worse,57) output(99,worse,30) output(99,worse,60) output(99,worse,76) output(99,worse,57) output(99,worse,71) output(99,worse,51) output(99,eq,55) output(67,eq,76) output(51,eq,71) output(71,eq,57) output(30,eq,60) output(94,eq,71) output(53,eq,30) output(51,eq,57) output(99,eq,91) output(60,eq,51) output(30,eq,51) output(60,eq,71) output(94,eq,57) output(53,eq,60) output(60,eq,57) output(30,eq,57) output(53,eq,57) output(30,eq,71) output(53,eq,71) output(53,eq,51)
Optimization: 37 3
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(3))),6) preference(1,(1,5),1,for(atom(hasPrep(4))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,51) output(30,better,57) output(30,better,71) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,60) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(60,worse,91) output(67,worse,91) output(76,worse,91) output(99,eq,55) output(67,eq,76) output(51,eq,71) output(71,eq,57) output(53,eq,99) output(99,eq,30) output(60,eq,76) output(94,eq,98) output(53,eq,30) output(51,eq,57) output(76,eq,51) output(53,eq,55) output(30,eq,91) output(99,eq,91) output(67,eq,51) output(60,eq,51) output(76,eq,71) output(67,eq,71) output(60,eq,71) output(76,eq,57) output(67,eq,57) output(60,eq,57) output(53,eq,91)
Optimization: 26 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasPrep(3))),6) preference(1,less(weight)) output(30,better,91) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,55) output(53,better,57) output(53,better,71) output(53,better,91) output(60,better,91) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,71) output(76,better,57) output(94,better,71) output(94,better,57) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,57) output(99,better,71) output(30,worse,51) output(53,worse,51) output(60,worse,51) output(67,worse,51) output(76,worse,51) output(94,worse,98) output(91,worse,51) output(99,worse,30) output(99,worse,60) output(99,worse,76) output(99,worse,51) output(67,eq,76) output(30,eq,60) output(60,eq,76) output(30,eq,76) output(53,eq,30) output(99,eq,91) output(53,eq,60) output(53,eq,76)
Optimization: 19 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(60,better,71) output(60,better,57) output(67,better,71) output(67,better,57) output(76,better,71) output(76,better,57) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,60) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(60,worse,91) output(67,worse,91) output(76,worse,91) output(67,eq,76) output(71,eq,57) output(53,eq,99) output(99,eq,30) output(60,eq,76) output(94,eq,98) output(53,eq,30) output(76,eq,51) output(30,eq,91) output(99,eq,91) output(67,eq,51) output(60,eq,51) output(53,eq,91)
Optimization: 16 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(60,better,71) output(60,better,57) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,71) output(76,better,57) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,60) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(60,worse,91) output(67,worse,91) output(76,worse,91) output(67,eq,76) output(53,eq,99) output(99,eq,30) output(60,eq,76) output(94,eq,98) output(53,eq,30) output(76,eq,51) output(30,eq,91) output(99,eq,91) output(67,eq,51) output(60,eq,51) output(53,eq,91)
Optimization: 15 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,60) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,60) output(53,better,57) output(53,better,71) output(53,better,51) output(60,better,71) output(60,better,57) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(53,worse,99) output(53,worse,55) output(60,worse,76) output(60,worse,91) output(99,eq,55) output(67,eq,76) output(76,eq,91) output(30,eq,76) output(53,eq,30) output(67,eq,91) output(30,eq,91) output(60,eq,51) output(53,eq,76) output(53,eq,91)
Optimization: 14 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,60) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,55) output(53,better,60) output(53,better,57) output(53,better,71) output(53,better,51) output(60,better,71) output(60,better,57) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(53,worse,99) output(60,worse,76) output(60,worse,91) output(67,eq,76) output(76,eq,91) output(30,eq,76) output(53,eq,30) output(67,eq,91) output(30,eq,91) output(60,eq,51) output(53,eq,76) output(53,eq,91)
Optimization: 12 11
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(7))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(60,better,71) output(60,better,57) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(53,worse,99) output(60,worse,76) output(60,worse,91) output(67,worse,76) output(67,worse,91) output(67,worse,51) output(76,worse,91) output(53,eq,30) output(30,eq,91) output(60,eq,51) output(53,eq,91)
Optimization: 11 11
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,55) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,71) output(76,better,57) output(94,better,71) output(94,better,57) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(53,worse,99) output(53,worse,30) output(76,worse,51) output(91,worse,51) output(76,eq,91) output(99,eq,30) output(94,eq,98) output(60,eq,51) output(53,eq,60) output(53,eq,51)
Optimization: 10 11
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(30,better,76) output(30,better,91) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,30) output(53,better,55) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,71) output(76,better,57) output(94,better,71) output(94,better,57) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(30,worse,60) output(30,worse,51) output(53,worse,99) output(76,worse,51) output(91,worse,51) output(94,eq,98) output(60,eq,51) output(53,eq,60) output(53,eq,51)
Optimization: 9 10
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasPrep(3))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,55) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(53,worse,30) output(76,worse,91) output(76,worse,51) output(76,worse,71) output(99,worse,30) output(99,worse,60) output(99,eq,91) output(53,eq,60)
Optimization: 8 11
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(3))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,55) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,57) output(99,better,71) output(99,better,51) output(53,worse,30) output(99,worse,30) output(99,worse,60) output(76,eq,91) output(99,eq,91) output(53,eq,60) output(99,eq,76)
Optimization: 7 11
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,57) output(99,better,71) output(99,better,51) output(30,worse,76) output(60,worse,76) output(67,worse,76) output(99,eq,55) output(51,eq,71) output(99,eq,76)
Optimization: 6 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,57) output(99,better,71) output(99,better,51) output(30,worse,76) output(60,worse,76) output(67,worse,76) output(99,eq,55) output(99,eq,76)
Optimization: 5 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,57) output(99,better,71) output(99,better,51) output(30,worse,76) output(60,worse,76) output(67,worse,76) output(99,eq,76)
Optimization: 4 13
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(30,better,60) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,57) output(99,better,71) output(99,better,51) output(30,worse,76) output(60,worse,76) output(99,eq,76)
Optimization: 3 13
Answer: 19
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(67,eq,76) output(60,eq,76)
Optimization: 2 10
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(7))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51) output(67,eq,76)
Optimization: 1 14
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51)
Optimization: 0 13
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasPrep(3))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 23
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasPrep(3))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(3))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51)
Optimization: 0 9
Answer: 25
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(30,better,60) output(30,better,76) output(30,better,91) output(30,better,51) output(30,better,57) output(30,better,71) output(51,better,71) output(51,better,57) output(53,better,99) output(53,better,30) output(53,better,55) output(53,better,60) output(53,better,76) output(53,better,57) output(53,better,71) output(53,better,51) output(53,better,91) output(60,better,76) output(60,better,91) output(60,better,51) output(60,better,71) output(60,better,57) output(67,better,76) output(67,better,91) output(67,better,51) output(67,better,71) output(67,better,57) output(71,better,57) output(76,better,91) output(76,better,51) output(76,better,71) output(76,better,57) output(94,better,98) output(94,better,71) output(94,better,57) output(91,better,51) output(91,better,71) output(91,better,57) output(98,better,71) output(98,better,57) output(99,better,55) output(99,better,30) output(99,better,60) output(99,better,91) output(99,better,76) output(99,better,57) output(99,better,71) output(99,better,51)
Optimization: 0 8
Progression : 0 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.037 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 298.230s (Solving: 296.49s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.756s
Threads      : 4        (Winner: 4)

Choices      : 8525267  (Domain: 863284)
Conflicts    : 7851599  (Analyzed: 7851596)
Restarts     : 6184     (Average: 1269.66 Last: 596860)
Model-Level  : 36.7    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 8048533  (Deleted: 7709017)
  Binary     : 739      (Ratio:   0.01%)
  Ternary    : 4969     (Ratio:   0.06%)
  Conflict   : 7851596  (Average Length:  243.4 Ratio:  97.55%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 196937   (Average Length:  220.6 Ratio:   2.45%) 
  Distributed: 65716    (Ratio:   0.84% Average LBD: 3.83) 
  Integrated : 197148   (Ratio: 300.00% Unit: 151 Average Jumps: 5.59)
Backjumps    : 7851596  (Average:  1.08 Max:  45 Sum: 8450060)
  Executed   : 7851595  (Average:  1.08 Max:  45 Sum: 8450042 Ratio: 100.00%)
  Bounded    : 1        (Average: 18.00 Max:  18 Sum:     18 Ratio:   0.00%)

Rules        : 118620  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10308   
Bodies       : 5769    
  Sum        : 96      
  Count      : 14      
Equivalences : 4098     (Atom=Atom: 493 Body=Body: 206 Other: 3399)
Tight        : Yes
Variables    : 4841     (Eliminated:    0 Frozen: 3371)
Constraints  : 116352   (Binary:  97.3% Ternary:   1.3% Other:   1.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(2)) 
}.
