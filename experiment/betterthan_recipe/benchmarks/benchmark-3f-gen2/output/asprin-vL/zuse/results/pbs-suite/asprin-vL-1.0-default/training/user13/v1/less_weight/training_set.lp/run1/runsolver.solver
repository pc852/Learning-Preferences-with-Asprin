asprin_vL version 1.0
Reading from stdin
-:1276:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1286:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1301:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1382:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1643:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1656:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1833:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1962:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2034:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2038:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2038:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2044:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2143:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2169:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2289:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2323:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2345:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1193:1-16: info: no atoms over signature occur in program:
  output/3

-:1185:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1186:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,32) output(32,eq,23) output(23,eq,98) output(60,eq,79) output(79,eq,46) output(31,eq,48) output(41,eq,60) output(46,eq,31) output(7,eq,2) output(2,eq,3) output(3,eq,74) output(86,eq,28) output(76,eq,79) output(79,eq,20) output(74,eq,86) output(28,eq,76) output(20,eq,48) output(79,eq,48) output(86,eq,76) output(3,eq,86) output(60,eq,20) output(76,eq,20) output(28,eq,79) output(74,eq,28) output(2,eq,74) output(7,eq,3) output(79,eq,31) output(46,eq,48) output(60,eq,46) output(76,eq,46) output(41,eq,79) output(32,eq,98) output(7,eq,23) output(7,eq,98) output(28,eq,46) output(86,eq,46) output(41,eq,46) output(60,eq,48) output(76,eq,48) output(60,eq,31) output(76,eq,31) output(28,eq,31) output(41,eq,31) output(7,eq,74) output(3,eq,28) output(2,eq,28) output(86,eq,79) output(74,eq,79) output(28,eq,20) output(86,eq,20) output(41,eq,20) output(2,eq,86) output(7,eq,86) output(74,eq,76) output(3,eq,76) output(28,eq,48) output(41,eq,48) output(86,eq,48) output(74,eq,48) output(3,eq,48) output(2,eq,48) output(2,eq,76) output(7,eq,76) output(74,eq,20) output(3,eq,20) output(2,eq,20) output(7,eq,20) output(3,eq,79) output(2,eq,79) output(7,eq,79) output(7,eq,28) output(86,eq,31) output(74,eq,31) output(3,eq,31) output(2,eq,31) output(74,eq,46) output(3,eq,46) output(2,eq,46) output(7,eq,46) output(7,eq,31) output(7,eq,48)
Optimization: 81 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(3,better,79) output(60,better,79) output(74,better,79) output(76,better,79) output(86,better,79) output(7,better,32) output(7,better,2) output(7,better,98) output(7,better,79) output(23,better,98) output(28,better,79) output(79,worse,46) output(79,worse,20) output(79,worse,48) output(79,worse,31) output(2,worse,3) output(2,worse,74) output(2,worse,28) output(2,worse,86) output(2,worse,48) output(2,worse,76) output(2,worse,20) output(2,worse,31) output(2,worse,46) output(32,worse,23) output(41,worse,60) output(41,worse,46) output(41,worse,31) output(41,worse,20) output(41,worse,48) output(31,eq,48) output(46,eq,31) output(3,eq,74) output(86,eq,28) output(74,eq,86) output(28,eq,76) output(20,eq,48) output(86,eq,76) output(3,eq,86) output(60,eq,20) output(76,eq,20) output(74,eq,28) output(7,eq,3) output(46,eq,48) output(60,eq,46) output(76,eq,46) output(41,eq,79) output(32,eq,98) output(7,eq,23) output(28,eq,46) output(86,eq,46) output(60,eq,48) output(76,eq,48) output(60,eq,31) output(76,eq,31) output(28,eq,31) output(7,eq,74) output(3,eq,28) output(28,eq,20) output(86,eq,20) output(7,eq,86) output(74,eq,76) output(3,eq,76) output(28,eq,48) output(86,eq,48) output(74,eq,48) output(3,eq,48) output(7,eq,76) output(74,eq,20) output(3,eq,20) output(7,eq,20) output(2,eq,79) output(7,eq,28) output(86,eq,31) output(74,eq,31) output(3,eq,31) output(74,eq,46) output(3,eq,46) output(7,eq,46) output(7,eq,31) output(7,eq,48)
Optimization: 70 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(3,better,79) output(3,better,31) output(46,better,31) output(60,better,79) output(60,better,31) output(74,better,86) output(74,better,79) output(74,better,76) output(74,better,20) output(74,better,31) output(76,better,79) output(76,better,31) output(86,better,79) output(86,better,31) output(2,better,79) output(2,better,31) output(7,better,79) output(23,better,98) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,31) output(3,worse,74) output(3,worse,86) output(3,worse,28) output(3,worse,76) output(3,worse,48) output(3,worse,20) output(3,worse,46) output(31,worse,48) output(46,worse,48) output(60,worse,20) output(60,worse,46) output(60,worse,48) output(74,worse,28) output(74,worse,48) output(76,worse,20) output(76,worse,46) output(76,worse,48) output(79,worse,46) output(79,worse,20) output(79,worse,48) output(79,worse,31) output(86,worse,28) output(86,worse,46) output(86,worse,20) output(86,worse,48) output(2,worse,3) output(2,worse,74) output(2,worse,28) output(2,worse,86) output(2,worse,48) output(2,worse,76) output(2,worse,20) output(2,worse,46) output(7,worse,32) output(7,worse,2) output(7,worse,3) output(7,worse,23) output(7,worse,98) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(7,worse,20) output(7,worse,28) output(7,worse,46) output(7,worse,31) output(7,worse,48) output(20,worse,48) output(32,worse,23) output(41,worse,46) output(41,worse,20) output(41,worse,48) output(86,eq,76) output(28,eq,48) output(74,eq,46)
Optimization: 54 8
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasPrep(3))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(3,better,28) output(3,better,31) output(46,better,31) output(60,better,46) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,76) output(74,better,31) output(74,better,46) output(76,better,46) output(76,better,31) output(79,better,46) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,31) output(2,better,46) output(20,better,48) output(32,better,23) output(41,better,46) output(41,better,31) output(3,worse,74) output(3,worse,86) output(3,worse,76) output(3,worse,48) output(3,worse,20) output(3,worse,79) output(31,worse,48) output(46,worse,48) output(60,worse,79) output(60,worse,20) output(74,worse,79) output(74,worse,20) output(76,worse,79) output(76,worse,20) output(76,worse,48) output(79,worse,20) output(86,worse,79) output(86,worse,20) output(86,worse,48) output(2,worse,20) output(7,worse,32) output(7,worse,2) output(7,worse,3) output(7,worse,23) output(7,worse,98) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(7,worse,20) output(7,worse,79) output(7,worse,28) output(7,worse,46) output(7,worse,31) output(7,worse,48) output(23,worse,98) output(28,worse,76) output(28,worse,79) output(28,worse,46) output(28,worse,31) output(28,worse,20) output(28,worse,48) output(32,worse,98) output(41,worse,60) output(41,worse,79) output(41,worse,20) output(41,worse,48) output(86,eq,76) output(60,eq,48) output(74,eq,48) output(2,eq,79) output(3,eq,46)
Optimization: 51 13
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasPrep(4))),8) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,76) output(3,better,48) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,48) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,48) output(74,better,31) output(74,better,46) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,48) output(79,better,31) output(86,better,46) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,3) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,28) output(3,worse,20) output(60,worse,20) output(74,worse,28) output(74,worse,20) output(76,worse,20) output(79,worse,20) output(86,worse,28) output(86,worse,20) output(2,worse,28) output(7,worse,32) output(7,worse,2) output(7,worse,23) output(7,worse,20) output(7,worse,28) output(60,eq,79) output(46,eq,31) output(76,eq,79) output(74,eq,86) output(86,eq,76) output(86,eq,79) output(74,eq,79) output(74,eq,76) output(2,eq,20)
Optimization: 24 11
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(3,better,48) output(3,better,46) output(31,better,48) output(46,better,48) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,46) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,74) output(3,worse,86) output(3,worse,28) output(3,worse,76) output(3,worse,20) output(3,worse,79) output(46,worse,31) output(60,worse,79) output(74,worse,28) output(76,worse,79) output(76,worse,20) output(86,worse,28) output(86,worse,79) output(86,worse,20) output(7,worse,32) output(23,worse,98) output(7,eq,2) output(86,eq,76) output(74,eq,79) output(3,eq,31)
Optimization: 20 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(3,better,86) output(3,better,76) output(3,better,48) output(3,better,79) output(3,better,31) output(3,better,46) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,48) output(76,better,31) output(79,better,31) output(86,better,79) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,98) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,74) output(3,worse,28) output(31,worse,48) output(60,worse,20) output(76,worse,20) output(79,worse,46) output(79,worse,20) output(79,worse,48) output(86,worse,28) output(86,worse,20) output(2,worse,74) output(32,worse,23) output(86,eq,76) output(60,eq,46) output(76,eq,46) output(7,eq,23) output(86,eq,46) output(7,eq,74) output(3,eq,20)
Optimization: 19 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(1))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrep(4))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),8) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,48) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,74) output(46,worse,31) output(86,worse,28) output(2,worse,3) output(2,worse,74) output(2,worse,28) output(7,worse,74) output(32,worse,23) output(41,eq,60) output(86,eq,76) output(79,eq,31) output(32,eq,98) output(2,eq,86) output(2,eq,76)
Optimization: 14 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),8) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,79) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,48) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,74) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(46,worse,31) output(74,worse,28) output(86,worse,28) output(2,worse,3) output(7,worse,23) output(32,worse,23) output(79,eq,20) output(74,eq,86) output(86,eq,76) output(79,eq,31) output(32,eq,98) output(2,eq,28) output(74,eq,76)
Optimization: 13 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(4))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(3,better,48) output(3,better,31) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,48) output(79,better,31) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,74) output(3,worse,86) output(3,worse,28) output(3,worse,76) output(3,worse,20) output(3,worse,79) output(86,worse,28) output(23,eq,98) output(79,eq,20) output(86,eq,76) output(74,eq,28) output(3,eq,46)
Optimization: 12 14
Progression : [ 2;12] (Error: 5)
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,79) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,86) output(3,worse,76) output(74,worse,86) output(74,worse,76) output(23,worse,98) output(28,worse,76) output(79,eq,46) output(3,eq,74) output(86,eq,76) output(74,eq,28) output(32,eq,98) output(3,eq,28)
Optimization: 12 9
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrep(4))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,23) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(74,worse,28) output(86,worse,28) output(7,worse,32) output(7,worse,2) output(7,worse,3) output(7,worse,98) output(7,worse,28) output(23,worse,98) output(86,eq,76) output(32,eq,98) output(7,eq,74)
Optimization: 11 11
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(4))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,23) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(7,worse,32) output(7,worse,2) output(7,worse,3) output(7,worse,98) output(23,worse,98) output(28,worse,76) output(86,eq,76) output(28,eq,79) output(32,eq,98) output(7,eq,74)
Optimization: 10 11
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasCost(1))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasPrep(4))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,46) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,76) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(3,worse,28) output(74,worse,28) output(86,worse,28) output(32,worse,23) output(32,worse,98) output(76,eq,79) output(86,eq,76) output(2,eq,28) output(86,eq,79)
Optimization: 9 11
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),6) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,79) output(28,better,31) output(28,better,48) output(32,better,23) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(79,worse,46) output(79,worse,20) output(23,worse,98) output(28,worse,76) output(28,worse,46) output(28,worse,20) output(86,eq,76) output(32,eq,98)
Optimization: 8 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(7))),7) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasPrep(4))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,28) output(74,better,79) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(79,worse,46) output(79,worse,20) output(23,worse,98) output(28,worse,76) output(74,eq,86) output(86,eq,76) output(74,eq,76)
Optimization: 7 11
Progression : [3;7] (Error: 1.33333)
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,28) output(74,better,79) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(28,worse,76) output(28,worse,79) output(2,eq,3) output(74,eq,86) output(86,eq,76) output(74,eq,76)
Optimization: 6 10
Progression : [4;6] (Error: 0.5)
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(4))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(23,better,98) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(32,better,98) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(28,worse,76) output(46,eq,31) output(2,eq,3) output(86,eq,76) output(28,eq,79)
Optimization: 5 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(4))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,48) output(3,better,20) output(3,better,79) output(3,better,31) output(3,better,46) output(31,better,48) output(46,better,31) output(46,better,48) output(60,better,79) output(60,better,20) output(60,better,46) output(60,better,48) output(60,better,31) output(74,better,86) output(74,better,28) output(74,better,79) output(74,better,76) output(74,better,48) output(74,better,20) output(74,better,31) output(74,better,46) output(76,better,79) output(76,better,20) output(76,better,46) output(76,better,48) output(76,better,31) output(79,better,46) output(79,better,20) output(79,better,48) output(79,better,31) output(86,better,28) output(86,better,46) output(86,better,79) output(86,better,20) output(86,better,48) output(86,better,31) output(2,better,3) output(2,better,74) output(2,better,28) output(2,better,86) output(2,better,48) output(2,better,76) output(2,better,20) output(2,better,79) output(2,better,31) output(2,better,46) output(7,better,32) output(7,better,2) output(7,better,3) output(7,better,23) output(7,better,98) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,20) output(7,better,79) output(7,better,28) output(7,better,46) output(7,better,31) output(7,better,48) output(20,better,48) output(28,better,79) output(28,better,46) output(28,better,31) output(28,better,20) output(28,better,48) output(32,better,23) output(41,better,60) output(41,better,79) output(41,better,46) output(41,better,31) output(41,better,20) output(41,better,48) output(23,worse,98) output(28,worse,76) output(86,eq,76) output(32,eq,98)
Optimization: 4 12
Progression : 4 [ 1;12] (Error: 11)
Progression : 4 [ 2;12] (Error: 5)
Progression : 4 [ 3;12] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.064 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 4 12
Bounds       : 4 [3;12]
Calls        : 1
Time         : 298.297s (Solving: 296.36s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.162s
Threads      : 4        (Winner: 4)

Choices      : 7619692  (Domain: 261149)
Conflicts    : 6050899  (Analyzed: 6050893)
Restarts     : 5600     (Average: 1080.52 Last: 397504)
Model-Level  : 45.3    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 6184335  (Deleted: 5971594)
  Binary     : 586      (Ratio:   0.01%)
  Ternary    : 10613    (Ratio:   0.17%)
  Conflict   : 6050892  (Average Length:  178.3 Ratio:  97.84%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 133443   (Average Length:   35.3 Ratio:   2.16%) 
  Distributed: 45231    (Ratio:   0.75% Average LBD: 3.66) 
  Integrated : 135693   (Ratio: 300.00% Unit: 254 Average Jumps: 5.55)
Backjumps    : 6050893  (Average:  1.22 Max: 372 Sum: 7398098)
  Executed   : 6050892  (Average:  1.22 Max: 372 Sum: 7398060 Ratio: 100.00%)
  Bounded    : 1        (Average: 38.00 Max:  38 Sum:     38 Ratio:   0.00%)

Rules        : 171560  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13558   
Bodies       : 6113    
  Sum        : 143     
  Count      : 14      
Equivalences : 8162     (Atom=Atom: 866 Body=Body: 384 Other: 6912)
Tight        : Yes
Variables    : 4960     (Eliminated:    0 Frozen: 3490)
Constraints  : 166258   (Binary:  98.0% Ternary:   0.9% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) 
}.
