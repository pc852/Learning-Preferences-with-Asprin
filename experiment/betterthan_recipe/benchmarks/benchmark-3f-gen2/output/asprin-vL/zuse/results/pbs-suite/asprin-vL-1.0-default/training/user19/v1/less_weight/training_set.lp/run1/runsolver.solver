asprin_vL version 1.0
Reading from stdin
-:1298:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1308:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1323:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1404:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1665:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1678:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1855:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1984:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2056:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2060:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2060:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2066:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2165:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2191:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2311:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2345:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2367:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1215:1-16: info: no atoms over signature occur in program:
  output/3

-:1207:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1208:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(32,eq,60) output(60,eq,48) output(48,eq,55) output(55,eq,26) output(5,eq,20) output(20,eq,38) output(75,eq,32) output(26,eq,5) output(38,eq,22) output(32,eq,23) output(23,eq,25) output(36,eq,42) output(42,eq,5) output(5,eq,22) output(22,eq,51) output(11,eq,32) output(25,eq,36) output(23,eq,36) output(38,eq,51) output(5,eq,51) output(26,eq,22) output(42,eq,22) output(36,eq,5) output(25,eq,42) output(32,eq,25) output(75,eq,23) output(11,eq,23) output(20,eq,22) output(55,eq,5) output(5,eq,38) output(26,eq,20) output(42,eq,20) output(48,eq,26) output(60,eq,55) output(32,eq,48) output(75,eq,60) output(11,eq,60) output(75,eq,48) output(11,eq,48) output(32,eq,55) output(75,eq,55) output(11,eq,55) output(60,eq,26) output(32,eq,26) output(36,eq,20) output(25,eq,20) output(55,eq,20) output(48,eq,20) output(26,eq,38) output(42,eq,38) output(36,eq,38) output(55,eq,38) output(48,eq,5) output(60,eq,5) output(75,eq,25) output(11,eq,25) output(23,eq,42) output(32,eq,42) output(25,eq,5) output(23,eq,5) output(36,eq,22) output(25,eq,22) output(55,eq,22) output(48,eq,22) output(26,eq,51) output(42,eq,51) output(36,eq,51) output(55,eq,51) output(20,eq,51) output(32,eq,36) output(75,eq,36) output(11,eq,36) output(25,eq,51) output(48,eq,51) output(60,eq,51) output(32,eq,51) output(75,eq,51) output(11,eq,51) output(23,eq,51) output(60,eq,22) output(32,eq,22) output(75,eq,22) output(11,eq,22) output(23,eq,22) output(32,eq,5) output(75,eq,5) output(11,eq,5) output(75,eq,42) output(11,eq,42) output(48,eq,38) output(60,eq,38) output(32,eq,38) output(75,eq,38) output(11,eq,38) output(25,eq,38) output(23,eq,38) output(60,eq,20) output(32,eq,20) output(75,eq,20) output(11,eq,20) output(23,eq,20) output(75,eq,26) output(11,eq,26)
Optimization: 103 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(11,better,60) output(11,better,25) output(11,better,51) output(11,better,5) output(11,better,38) output(11,better,26) output(22,better,51) output(25,better,5) output(25,better,38) output(26,better,5) output(26,better,38) output(36,better,42) output(36,better,5) output(36,better,38) output(36,better,51) output(55,better,26) output(55,better,5) output(55,better,38) output(55,better,51) output(60,better,26) output(60,better,5) output(60,better,38) output(20,better,38) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,25) output(32,better,26) output(32,better,51) output(32,better,5) output(32,better,38) output(42,better,5) output(42,better,38) output(42,better,51) output(48,better,26) output(48,better,5) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,51) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,26) output(5,worse,20) output(5,worse,22) output(5,worse,51) output(11,worse,23) output(11,worse,36) output(11,worse,22) output(11,worse,20) output(25,worse,36) output(25,worse,42) output(25,worse,20) output(25,worse,22) output(25,worse,51) output(26,worse,22) output(26,worse,20) output(26,worse,51) output(36,worse,22) output(38,worse,22) output(38,worse,51) output(55,worse,20) output(55,worse,22) output(60,worse,48) output(60,worse,55) output(60,worse,22) output(60,worse,20) output(20,worse,22) output(32,worse,23) output(32,worse,36) output(32,worse,22) output(32,worse,20) output(42,worse,22) output(42,worse,20) output(48,worse,20) output(48,worse,22) output(75,worse,23) output(75,worse,22) output(48,eq,55) output(11,eq,32) output(5,eq,38) output(32,eq,48) output(11,eq,48) output(32,eq,55) output(11,eq,55) output(36,eq,20) output(32,eq,42) output(75,eq,36) output(60,eq,51) output(11,eq,42) output(75,eq,20)
Optimization: 48 10
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(11,better,60) output(11,better,48) output(11,better,36) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,51) output(25,better,38) output(26,better,5) output(26,better,20) output(26,better,38) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(60,better,48) output(60,better,26) output(60,better,5) output(60,better,38) output(60,better,20) output(20,better,38) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,38) output(48,better,5) output(48,better,38) output(75,better,32) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,36) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,22) output(5,worse,51) output(11,worse,32) output(11,worse,23) output(11,worse,25) output(11,worse,51) output(11,worse,22) output(26,worse,22) output(26,worse,51) output(36,worse,22) output(36,worse,51) output(38,worse,22) output(38,worse,51) output(55,worse,22) output(55,worse,51) output(60,worse,55) output(60,worse,51) output(60,worse,22) output(20,worse,22) output(20,worse,51) output(32,worse,23) output(32,worse,25) output(32,worse,51) output(32,worse,22) output(42,worse,22) output(42,worse,20) output(42,worse,51) output(48,worse,55) output(48,worse,26) output(48,worse,20) output(48,worse,22) output(48,worse,51) output(75,worse,23) output(75,worse,25) output(75,worse,51) output(75,worse,22) output(5,eq,38) output(11,eq,55) output(25,eq,22)
Optimization: 40 11
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(11,better,60) output(11,better,48) output(11,better,36) output(11,better,51) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,51) output(25,better,38) output(26,better,5) output(26,better,20) output(26,better,38) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,51) output(60,better,48) output(60,better,26) output(60,better,5) output(60,better,38) output(60,better,20) output(20,better,38) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,38) output(48,better,5) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,36) output(75,better,51) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,22) output(5,worse,51) output(11,worse,32) output(11,worse,23) output(11,worse,25) output(11,worse,22) output(26,worse,22) output(26,worse,51) output(36,worse,22) output(38,worse,22) output(38,worse,51) output(55,worse,22) output(60,worse,55) output(60,worse,22) output(20,worse,22) output(20,worse,51) output(23,worse,25) output(23,worse,22) output(32,worse,25) output(32,worse,22) output(42,worse,22) output(42,worse,20) output(42,worse,51) output(48,worse,55) output(48,worse,26) output(48,worse,20) output(48,worse,22) output(48,worse,51) output(75,worse,25) output(75,worse,22) output(32,eq,23) output(5,eq,38) output(11,eq,55) output(25,eq,22) output(36,eq,51) output(60,eq,51)
Optimization: 37 11
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(11,better,60) output(11,better,48) output(11,better,36) output(11,better,51) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,51) output(25,better,38) output(26,better,5) output(26,better,20) output(26,better,38) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(36,better,51) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,51) output(60,better,48) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,38) output(60,better,20) output(20,better,38) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,38) output(48,better,5) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,36) output(75,better,51) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,22) output(5,worse,51) output(11,worse,32) output(11,worse,23) output(11,worse,25) output(11,worse,22) output(26,worse,22) output(36,worse,22) output(38,worse,22) output(38,worse,51) output(55,worse,22) output(60,worse,55) output(60,worse,22) output(20,worse,22) output(20,worse,51) output(23,worse,25) output(23,worse,22) output(32,worse,25) output(32,worse,22) output(42,worse,22) output(42,worse,20) output(42,worse,51) output(48,worse,55) output(48,worse,26) output(48,worse,20) output(48,worse,22) output(48,worse,51) output(75,worse,25) output(75,worse,22) output(5,eq,38) output(11,eq,55) output(25,eq,22) output(26,eq,51)
Optimization: 34 11
Answer: 6
preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(11,better,32) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(36,better,22) output(36,better,51) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,26) output(60,better,5) output(60,better,22) output(60,better,38) output(20,better,38) output(20,better,22) output(23,better,25) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,38) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,22) output(5,worse,51) output(22,worse,51) output(25,worse,36) output(25,worse,42) output(25,worse,20) output(25,worse,5) output(25,worse,22) output(25,worse,51) output(25,worse,38) output(26,worse,22) output(26,worse,20) output(26,worse,51) output(38,worse,22) output(38,worse,51) output(60,worse,48) output(60,worse,55) output(32,worse,55) output(42,worse,20) output(42,worse,51) output(48,worse,55) output(26,eq,5) output(23,eq,36) output(42,eq,22) output(5,eq,38) output(11,eq,55) output(26,eq,38) output(20,eq,51) output(60,eq,51) output(60,eq,20)
Optimization: 31 12
Progression : [ 2;31] (Error: 14.5)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(11,better,32) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,42) output(25,better,5) output(25,better,51) output(25,better,38) output(26,better,5) output(26,better,38) output(26,better,51) output(36,better,5) output(36,better,38) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,38) output(60,better,20) output(20,better,38) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,38) output(23,better,20) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,5) output(32,better,38) output(42,better,5) output(42,better,38) output(42,better,51) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,22) output(5,worse,51) output(25,worse,22) output(26,worse,22) output(26,worse,20) output(36,worse,42) output(36,worse,20) output(36,worse,22) output(36,worse,51) output(38,worse,22) output(38,worse,51) output(60,worse,48) output(60,worse,55) output(20,worse,22) output(32,worse,60) output(32,worse,23) output(32,worse,48) output(32,worse,55) output(32,worse,22) output(42,worse,22) output(42,worse,20) output(48,worse,55) output(32,eq,25) output(5,eq,38) output(11,eq,55) output(25,eq,20) output(60,eq,22) output(23,eq,22) output(32,eq,20)
Optimization: 30 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),1) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(5,better,22) output(11,better,32) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(25,better,36) output(25,better,42) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,5) output(26,better,22) output(26,better,20) output(26,better,38) output(26,better,51) output(36,better,42) output(38,better,22) output(55,better,5) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,5) output(60,better,22) output(60,better,38) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,51) output(22,worse,51) output(25,worse,20) output(36,worse,5) output(36,worse,20) output(36,worse,38) output(36,worse,22) output(36,worse,51) output(38,worse,51) output(55,worse,26) output(55,worse,20) output(60,worse,48) output(60,worse,55) output(60,worse,26) output(60,worse,20) output(42,worse,5) output(42,worse,22) output(42,worse,20) output(42,worse,38) output(42,worse,51) output(48,worse,26) output(48,worse,20) output(48,eq,55) output(5,eq,38) output(60,eq,51) output(23,eq,20)
Optimization: 27 12
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,10),1,for(atom(hasPrep(3))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(5,better,51) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,51) output(36,better,51) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,51) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,22) output(42,better,38) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(11,worse,32) output(26,worse,20) output(36,worse,42) output(36,worse,5) output(36,worse,20) output(36,worse,38) output(36,worse,22) output(60,worse,48) output(60,worse,55) output(60,worse,20) output(75,worse,32) output(26,eq,5) output(38,eq,22) output(5,eq,22) output(26,eq,22) output(5,eq,38) output(42,eq,20) output(60,eq,26) output(55,eq,20) output(26,eq,38) output(60,eq,5) output(60,eq,22) output(60,eq,38)
Optimization: 24 12
Answer: 10
preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(5,better,22) output(5,better,51) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,38) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,42) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,22) output(26,better,51) output(36,better,42) output(36,better,5) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(42,better,5) output(42,better,22) output(42,better,38) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(11,worse,32) output(11,worse,23) output(11,worse,60) output(11,worse,48) output(11,worse,25) output(11,worse,36) output(11,worse,20) output(25,worse,20) output(26,worse,20) output(36,worse,20) output(55,worse,20) output(60,worse,20) output(32,worse,23) output(32,worse,20) output(42,worse,20) output(48,worse,20) output(26,eq,5) output(75,eq,23) output(5,eq,38) output(11,eq,55) output(26,eq,38) output(11,eq,42)
Optimization: 23 9
Answer: 11
preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(5,better,22) output(5,better,51) output(11,better,32) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(26,better,22) output(26,better,51) output(36,better,5) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,22) output(55,better,51) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(60,better,20) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,22) output(42,better,38) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(25,worse,36) output(25,worse,42) output(25,worse,20) output(25,worse,5) output(25,worse,22) output(25,worse,51) output(25,worse,38) output(26,worse,5) output(26,worse,20) output(26,worse,38) output(55,worse,20) output(23,worse,36) output(23,worse,42) output(23,worse,20) output(48,worse,20) output(36,eq,42) output(55,eq,5) output(5,eq,38) output(42,eq,20) output(36,eq,20) output(55,eq,38)
Optimization: 22 9
Answer: 12
preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(5,better,22) output(5,better,51) output(11,better,32) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,22) output(25,better,51) output(26,better,22) output(26,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,22) output(42,better,38) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(25,worse,42) output(25,worse,20) output(26,worse,20) output(36,worse,42) output(36,worse,5) output(36,worse,20) output(36,worse,38) output(36,worse,22) output(36,worse,51) output(55,worse,20) output(60,worse,20) output(23,worse,42) output(23,worse,20) output(48,worse,20) output(26,eq,5) output(5,eq,38) output(42,eq,20) output(26,eq,38) output(25,eq,5) output(25,eq,38)
Optimization: 21 9
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(5,better,22) output(5,better,51) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,36) output(25,better,22) output(25,better,51) output(26,better,22) output(26,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(60,better,20) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,22) output(42,better,38) output(42,better,51) output(48,better,26) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(11,worse,32) output(25,worse,42) output(25,worse,20) output(25,worse,5) output(25,worse,38) output(26,worse,5) output(26,worse,20) output(26,worse,38) output(36,worse,42) output(36,worse,5) output(36,worse,20) output(36,worse,38) output(36,worse,22) output(36,worse,51) output(48,eq,55) output(5,eq,38) output(42,eq,20) output(55,eq,20) output(48,eq,20)
Optimization: 20 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(5,better,22) output(5,better,51) output(11,better,32) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(25,better,36) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(36,better,5) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,22) output(42,better,38) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(11,worse,23) output(25,worse,42) output(25,worse,20) output(26,worse,5) output(26,worse,22) output(26,worse,20) output(26,worse,38) output(26,worse,51) output(36,worse,42) output(36,worse,20) output(55,worse,20) output(60,worse,48) output(60,worse,55) output(60,worse,20) output(32,worse,23) output(22,eq,51) output(5,eq,38) output(42,eq,20)
Optimization: 19 12
Progression : [ 3;19] (Error: 5.33333)
Answer: 15
preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(5,better,51) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(22,better,51) output(25,better,42) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,51) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(60,better,20) output(20,better,38) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,5) output(42,better,38) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(5,worse,20) output(5,worse,22) output(11,worse,32) output(11,worse,23) output(11,worse,48) output(25,worse,36) output(26,worse,22) output(26,worse,20) output(38,worse,22) output(60,worse,48) output(32,worse,48) output(42,worse,20) output(26,eq,5) output(42,eq,22) output(5,eq,38) output(11,eq,60) output(25,eq,20) output(26,eq,38)
Optimization: 18 12
Answer: 16
preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(5,better,20) output(5,better,22) output(5,better,51) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,22) output(26,better,20) output(26,better,51) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(60,better,20) output(20,better,22) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,25) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,22) output(42,better,20) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(11,worse,32) output(11,worse,23) output(11,worse,60) output(11,worse,48) output(22,worse,51) output(60,worse,48) output(20,worse,38) output(26,eq,5) output(32,eq,23) output(42,eq,5) output(25,eq,36) output(5,eq,38) output(32,eq,48) output(11,eq,55) output(26,eq,38) output(42,eq,38) output(20,eq,51)
Optimization: 17 11
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(5,better,20) output(5,better,22) output(5,better,51) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,22) output(26,better,51) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,20) output(55,better,22) output(55,better,51) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(60,better,20) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,22) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(11,worse,32) output(26,worse,5) output(26,worse,38) output(20,worse,38) output(42,worse,5) output(42,worse,38) output(60,eq,48) output(22,eq,51) output(25,eq,36) output(55,eq,5) output(5,eq,38) output(26,eq,20) output(42,eq,20) output(55,eq,38)
Optimization: 14 11
Progression : [ 4;14] (Error: 2.5)
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(5,better,20) output(5,better,22) output(5,better,51) output(11,better,23) output(11,better,60) output(11,better,48) output(11,better,55) output(11,better,25) output(11,better,36) output(11,better,51) output(11,better,22) output(11,better,5) output(11,better,42) output(11,better,38) output(11,better,20) output(11,better,26) output(25,better,42) output(25,better,20) output(25,better,5) output(25,better,22) output(25,better,51) output(25,better,38) output(26,better,5) output(26,better,22) output(26,better,20) output(26,better,38) output(26,better,51) output(36,better,42) output(36,better,5) output(36,better,20) output(36,better,38) output(36,better,22) output(36,better,51) output(38,better,22) output(38,better,51) output(55,better,26) output(55,better,5) output(55,better,20) output(55,better,38) output(55,better,22) output(55,better,51) output(60,better,48) output(60,better,55) output(60,better,26) output(60,better,5) output(60,better,51) output(60,better,22) output(60,better,38) output(60,better,20) output(20,better,22) output(20,better,51) output(23,better,25) output(23,better,36) output(23,better,42) output(23,better,5) output(23,better,51) output(23,better,22) output(23,better,38) output(23,better,20) output(32,better,60) output(32,better,23) output(32,better,25) output(32,better,48) output(32,better,55) output(32,better,26) output(32,better,42) output(32,better,36) output(32,better,51) output(32,better,22) output(32,better,5) output(32,better,38) output(32,better,20) output(42,better,22) output(42,better,51) output(48,better,55) output(48,better,26) output(48,better,20) output(48,better,5) output(48,better,22) output(48,better,51) output(48,better,38) output(75,better,32) output(75,better,23) output(75,better,60) output(75,better,48) output(75,better,55) output(75,better,25) output(75,better,36) output(75,better,51) output(75,better,22) output(75,better,5) output(75,better,42) output(75,better,38) output(75,better,20) output(75,better,26) output(20,worse,38) output(42,worse,5) output(42,worse,38) output(22,eq,51) output(11,eq,32) output(25,eq,36) output(5,eq,38) output(42,eq,20)
Optimization: 8 11
Progression : [5;8] (Error: 0.6)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.059 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 8 11
Bounds       : [5;8] [0;11]
Calls        : 1
Time         : 297.831s (Solving: 295.72s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.208s
Threads      : 4        (Winner: 4)

Choices      : 12888566 (Domain: 961106)
Conflicts    : 9937882  (Analyzed: 9937878)
Restarts     : 9119     (Average: 1089.80 Last: 138678)
Model-Level  : 45.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 10094892 (Deleted: 9775619)
  Binary     : 333      (Ratio:   0.00%)
  Ternary    : 14030    (Ratio:   0.14%)
  Conflict   : 9937878  (Average Length:  103.2 Ratio:  98.44%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 157014   (Average Length:   28.9 Ratio:   1.56%) 
  Distributed: 52385    (Ratio:   0.53% Average LBD: 3.71) 
  Integrated : 157155   (Ratio: 300.00% Unit: 248 Average Jumps: 5.52)
Backjumps    : 9937878  (Average:  1.27 Max: 176 Sum: 12666504)
  Executed   : 9937877  (Average:  1.27 Max: 176 Sum: 12666451 Ratio: 100.00%)
  Bounded    : 1        (Average: 53.00 Max:  53 Sum:     53 Ratio:   0.00%)

Rules        : 205250  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15714   
Bodies       : 6347    
  Sum        : 179     
  Count      : 14      
Equivalences : 9074     (Atom=Atom: 1106 Body=Body: 492 Other: 7476)
Tight        : Yes
Variables    : 5036     (Eliminated:    0 Frozen: 3566)
Constraints  : 197926   (Binary:  98.3% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) 
}.
