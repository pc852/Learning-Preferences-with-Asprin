asprin_vL version 1.0
Reading from stdin
-:1307:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1317:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1332:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1413:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1674:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1687:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1864:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1993:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2065:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2069:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2069:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2075:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2174:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2200:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2320:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2354:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2376:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1224:1-16: info: no atoms over signature occur in program:
  output/3

-:1216:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1217:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(88,eq,22) output(28,eq,100) output(100,eq,19) output(19,eq,73) output(86,eq,68) output(68,eq,50) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(63,eq,73) output(28,eq,63) output(68,eq,46) output(98,eq,46) output(86,eq,50) output(73,eq,68) output(100,eq,73) output(28,eq,19) output(22,eq,100) output(88,eq,100) output(22,eq,19) output(88,eq,19) output(28,eq,73) output(22,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(73,eq,50) output(19,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(22,eq,63) output(88,eq,63) output(63,eq,52) output(100,eq,52) output(28,eq,52) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(68,eq,67) output(98,eq,67) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(19,eq,67) output(65,eq,67) output(63,eq,67) output(100,eq,67) output(28,eq,67) output(52,eq,67) output(63,eq,50) output(100,eq,50) output(28,eq,50) output(28,eq,54) output(22,eq,54) output(88,eq,54) output(22,eq,52) output(88,eq,52) output(19,eq,46) output(65,eq,46) output(63,eq,46) output(100,eq,46) output(28,eq,46) output(22,eq,46) output(22,eq,50) output(88,eq,50) output(28,eq,68) output(22,eq,68) output(88,eq,68) output(88,eq,73) output(88,eq,46) output(22,eq,67) output(88,eq,67) output(22,eq,28) output(73,eq,86) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(68,eq,25) output(52,eq,98) output(100,eq,65) output(19,eq,86) output(63,eq,86) output(100,eq,86) output(22,eq,65) output(73,eq,98) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(22,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,98) output(22,eq,86)
Optimization: 112 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(22,better,19) output(22,better,46) output(22,better,50) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,50) output(86,better,46) output(28,better,19) output(28,better,50) output(28,better,46) output(63,better,50) output(63,better,46) output(63,better,25) output(65,better,50) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,50) output(73,better,46) output(73,better,25) output(88,better,19) output(88,better,50) output(88,better,46) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,50) output(100,better,46) output(100,better,25) output(25,worse,67) output(50,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,54) output(19,worse,67) output(19,worse,86) output(19,worse,98) output(88,eq,22) output(28,eq,100) output(86,eq,68) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(65,eq,52) output(63,eq,73) output(28,eq,63) output(73,eq,68) output(100,eq,73) output(22,eq,100) output(88,eq,100) output(28,eq,73) output(22,eq,73) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(19,eq,50) output(22,eq,63) output(88,eq,63) output(63,eq,52) output(100,eq,52) output(28,eq,52) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(68,eq,67) output(98,eq,67) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(65,eq,67) output(63,eq,67) output(100,eq,67) output(28,eq,67) output(52,eq,67) output(28,eq,54) output(22,eq,54) output(88,eq,54) output(22,eq,52) output(88,eq,52) output(19,eq,46) output(28,eq,68) output(22,eq,68) output(88,eq,68) output(88,eq,73) output(22,eq,67) output(88,eq,67) output(22,eq,28) output(73,eq,86) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(52,eq,98) output(100,eq,65) output(63,eq,86) output(100,eq,86) output(22,eq,65) output(73,eq,98) output(19,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,98) output(22,eq,86)
Optimization: 77 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),2) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(52,better,46) output(52,better,50) output(52,better,98) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,98) output(54,better,25) output(86,better,50) output(86,better,46) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,25) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,50) output(73,better,46) output(73,better,86) output(73,better,98) output(73,better,25) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,50) output(88,better,46) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,25) output(22,worse,28) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(54,worse,67) output(86,worse,68) output(86,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,50) output(19,worse,54) output(19,worse,67) output(19,worse,46) output(19,worse,86) output(19,worse,98) output(19,worse,25) output(63,worse,73) output(63,worse,68) output(63,worse,52) output(63,worse,54) output(63,worse,67) output(65,worse,73) output(65,worse,52) output(65,worse,68) output(65,worse,54) output(65,worse,67) output(68,worse,67) output(73,worse,67) output(88,worse,22) output(88,worse,67) output(98,worse,67) output(100,worse,73) output(100,worse,68) output(100,worse,52) output(100,worse,54) output(100,worse,67) output(50,eq,46) output(100,eq,63) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(73,eq,68) output(65,eq,50) output(88,eq,54) output(88,eq,52) output(65,eq,46) output(88,eq,68) output(88,eq,73) output(22,eq,67) output(50,eq,25) output(63,eq,86) output(100,eq,86) output(63,eq,98) output(100,eq,98)
Optimization: 55 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),2) preference(1,less(weight)) output(22,better,19) output(22,better,73) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,28) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(63,better,98) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,63) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,50) output(19,worse,54) output(19,worse,67) output(19,worse,46) output(19,worse,86) output(19,worse,98) output(19,worse,25) output(28,worse,100) output(28,worse,63) output(28,worse,19) output(28,worse,73) output(28,worse,52) output(28,worse,67) output(28,worse,50) output(28,worse,54) output(28,worse,46) output(28,worse,68) output(63,worse,65) output(68,worse,67) output(73,worse,52) output(73,worse,54) output(73,worse,68) output(73,worse,67) output(73,worse,86) output(73,worse,98) output(88,worse,22) output(88,worse,100) output(88,worse,63) output(88,worse,67) output(100,worse,63) output(100,worse,65) output(50,eq,46) output(52,eq,54) output(73,eq,50) output(73,eq,46) output(86,eq,67) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(73,eq,25) output(100,eq,98) output(22,eq,86)
Optimization: 55 12
Progression : [ 5;55] (Error: 10)
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(22,better,100) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,25) output(22,better,86) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,52) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,98) output(73,better,25) output(88,better,100) output(88,better,50) output(88,better,46) output(98,better,50) output(98,better,46) output(98,better,67) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(86,worse,67) output(19,worse,73) output(28,worse,63) output(28,worse,19) output(28,worse,73) output(63,worse,73) output(63,worse,65) output(68,worse,67) output(88,worse,22) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(88,worse,67) output(100,worse,19) output(100,worse,63) output(100,worse,73) output(100,worse,68) output(100,worse,52) output(100,worse,54) output(100,worse,67) output(100,worse,50) output(100,worse,46) output(100,worse,65) output(100,worse,86) output(100,worse,25) output(100,worse,98) output(86,eq,68) output(50,eq,46) output(65,eq,73) output(52,eq,54) output(28,eq,67) output(88,eq,54) output(88,eq,52) output(88,eq,68) output(22,eq,67) output(22,eq,28) output(50,eq,25) output(19,eq,98) output(63,eq,98)
Optimization: 50 12
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(22,better,100) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,25) output(22,better,86) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,52) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,98) output(73,better,25) output(88,better,100) output(88,better,50) output(88,better,46) output(98,better,50) output(98,better,46) output(98,better,67) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(86,worse,67) output(19,worse,73) output(28,worse,63) output(28,worse,19) output(28,worse,73) output(63,worse,73) output(65,worse,73) output(68,worse,67) output(88,worse,22) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(88,worse,67) output(100,worse,19) output(100,worse,63) output(100,worse,73) output(100,worse,68) output(100,worse,52) output(100,worse,54) output(100,worse,67) output(100,worse,50) output(100,worse,46) output(100,worse,65) output(100,worse,86) output(100,worse,25) output(100,worse,98) output(50,eq,46) output(52,eq,54) output(28,eq,67) output(88,eq,54) output(88,eq,52) output(88,eq,68) output(22,eq,67) output(22,eq,28) output(63,eq,65) output(50,eq,25) output(19,eq,98) output(63,eq,98)
Optimization: 49 12
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(22,better,86) output(25,better,67) output(50,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,50) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,19) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,46) output(22,worse,50) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(86,worse,50) output(86,worse,46) output(86,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,54) output(19,worse,98) output(28,worse,63) output(88,worse,100) output(88,worse,63) output(88,worse,54) output(88,worse,52) output(88,worse,73) output(100,worse,63) output(28,eq,100) output(50,eq,46) output(65,eq,73) output(52,eq,54) output(100,eq,73) output(88,eq,19) output(28,eq,73) output(19,eq,68) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(100,eq,65) output(73,eq,98) output(100,eq,98)
Optimization: 44 8
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(22,better,86) output(25,better,67) output(50,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,50) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,19) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,46) output(22,worse,50) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(86,worse,50) output(86,worse,46) output(86,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,54) output(19,worse,98) output(28,worse,63) output(65,worse,73) output(88,worse,100) output(88,worse,63) output(88,worse,54) output(88,worse,52) output(88,worse,73) output(100,worse,63) output(28,eq,100) output(50,eq,46) output(52,eq,54) output(100,eq,73) output(88,eq,19) output(28,eq,73) output(19,eq,68) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(73,eq,98) output(100,eq,98)
Optimization: 43 8
Progression : [ 6;43] (Error: 6.16667)
Progression : [ 7;43] (Error: 5.14286)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(22,better,86) output(25,better,67) output(50,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,68) output(19,better,50) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,98) output(73,better,25) output(88,better,22) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,46) output(22,worse,50) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(86,worse,50) output(86,worse,46) output(86,worse,67) output(19,worse,73) output(19,worse,52) output(19,worse,54) output(19,worse,98) output(63,worse,73) output(65,worse,73) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,54) output(88,worse,52) output(88,worse,73) output(100,worse,73) output(50,eq,46) output(100,eq,63) output(52,eq,54) output(28,eq,73) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 41 8
Progression : [ 8;41] (Error: 4.125)
Progression : [ 9;41] (Error: 3.55556)
Progression : [10;41] (Error: 3.1)
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasCost(2))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(22,better,46) output(22,better,50) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(19,worse,98) output(28,worse,100) output(28,worse,63) output(73,worse,98) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,54) output(88,worse,52) output(88,worse,73) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(52,eq,54) output(28,eq,19) output(28,eq,73) output(86,eq,67) output(88,eq,68) output(22,eq,67) output(63,eq,65) output(50,eq,25) output(100,eq,65) output(63,eq,98) output(100,eq,98) output(22,eq,86)
Optimization: 40 9
Progression : [11;40] (Error: 2.63636)
Progression : [12;40] (Error: 2.33333)
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(22,better,46) output(22,better,50) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,54) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(19,worse,68) output(19,worse,98) output(28,worse,100) output(28,worse,63) output(63,worse,98) output(73,worse,68) output(73,worse,98) output(88,worse,100) output(88,worse,63) output(100,worse,98) output(50,eq,46) output(100,eq,63) output(73,eq,54) output(86,eq,67) output(28,eq,68) output(88,eq,68) output(22,eq,67) output(63,eq,65) output(50,eq,25) output(100,eq,65) output(22,eq,86)
Optimization: 37 10
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(22,better,46) output(22,better,50) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,54) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(19,worse,68) output(19,worse,98) output(28,worse,100) output(28,worse,63) output(63,worse,98) output(73,worse,68) output(73,worse,98) output(88,worse,100) output(88,worse,63) output(100,worse,98) output(50,eq,46) output(100,eq,63) output(73,eq,54) output(86,eq,67) output(28,eq,68) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(22,eq,86)
Optimization: 35 11
Progression : [13;35] (Error: 1.69231)
Progression : [14;35] (Error: 1.5)
Progression : [15;35] (Error: 1.33333)
Progression : [16;35] (Error: 1.1875)
Progression : [17;35] (Error: 1.05882)
Progression : [18;35] (Error: 0.944444)
Progression : [19;35] (Error: 0.842105)
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(86,better,67) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,46) output(22,worse,50) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(22,worse,86) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(86,worse,50) output(86,worse,46) output(19,worse,98) output(73,worse,98) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(50,eq,46) output(100,eq,63) output(52,eq,54) output(88,eq,54) output(88,eq,52) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 35 8
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,25) output(22,better,86) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,50) output(73,better,46) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,54) output(52,worse,67) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(86,worse,67) output(19,worse,98) output(63,worse,98) output(73,worse,68) output(73,worse,98) output(88,worse,100) output(88,worse,63) output(100,worse,98) output(50,eq,46) output(100,eq,63) output(73,eq,54) output(88,eq,19) output(22,eq,73) output(19,eq,68) output(54,eq,67) output(73,eq,67) output(22,eq,54) output(88,eq,68) output(22,eq,67) output(50,eq,25)
Optimization: 34 12
Progression : [20;34] (Error: 0.7)
Progression : [21;34] (Error: 0.619048)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),7) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(22,better,19) output(22,better,73) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,65) output(22,better,25) output(22,better,86) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,86) output(73,better,25) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,46) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,63) output(22,worse,28) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(86,worse,68) output(86,worse,67) output(19,worse,67) output(19,worse,98) output(65,worse,67) output(68,worse,67) output(73,worse,67) output(73,worse,98) output(88,worse,22) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(88,worse,67) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(52,eq,54) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 33 10
Answer: 16
preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(86,better,67) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,46) output(22,worse,50) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(22,worse,86) output(52,worse,54) output(52,worse,98) output(54,worse,98) output(19,worse,98) output(63,worse,98) output(73,worse,98) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(100,worse,98) output(50,eq,46) output(100,eq,63) output(88,eq,68) output(22,eq,67) output(63,eq,65) output(50,eq,25) output(100,eq,65)
Optimization: 32 8
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(25,better,67) output(50,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(86,better,50) output(86,better,46) output(86,better,67) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,54) output(22,worse,52) output(22,worse,46) output(22,worse,50) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(22,worse,86) output(52,worse,98) output(54,worse,98) output(86,worse,68) output(19,worse,98) output(73,worse,68) output(73,worse,98) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(50,eq,46) output(100,eq,63) output(52,eq,54) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 31 9
Progression : [22;31] (Error: 0.409091)
Progression : [23;31] (Error: 0.347826)
Progression : [24;31] (Error: 0.291667)
Progression : [25;31] (Error: 0.24)
Progression : [26;31] (Error: 0.192308)
Answer: 18
preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,25) output(22,better,86) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,50) output(86,better,46) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(86,worse,68) output(86,worse,67) output(19,worse,68) output(19,worse,98) output(73,worse,68) output(73,worse,98) output(88,worse,100) output(88,worse,63) output(100,worse,63) output(19,eq,73) output(50,eq,46) output(52,eq,54) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(100,eq,98)
Optimization: 30 6
Answer: 19
preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(86,better,67) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(22,worse,86) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(19,worse,98) output(73,worse,98) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(100,worse,63) output(19,eq,73) output(50,eq,46) output(52,eq,54) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(100,eq,98)
Optimization: 29 8
Answer: 20
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,25) output(52,better,46) output(52,better,50) output(52,better,25) output(54,better,50) output(54,better,46) output(54,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(86,better,67) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,46) output(88,better,67) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(22,worse,86) output(25,worse,67) output(50,worse,67) output(52,worse,67) output(52,worse,98) output(54,worse,67) output(54,worse,98) output(19,worse,98) output(73,worse,98) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,73) output(100,worse,63) output(50,eq,46) output(52,eq,54) output(88,eq,68) output(22,eq,67) output(50,eq,25) output(100,eq,98)
Optimization: 28 8
Progression : [27;28] (Error: 0.037037)
Progression : [28;28] (Error: 0)
Progression : 28 [1;8] (Error: 7)
Progression : 28 [2;8] (Error: 3)
Progression : 28 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.053 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 28 8
Bounds       : 28 [3;8]
Calls        : 1
Time         : 297.668s (Solving: 295.68s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.303s
Threads      : 4        (Winner: 4)

Choices      : 12586356 (Domain: 1928430)
Conflicts    : 10396711 (Analyzed: 10396684)
Restarts     : 9391     (Average: 1107.09 Last: 420649)
Model-Level  : 42.1    
Problems     : 35       (Average Length: 0.11 Splits: 0)
Lemmas       : 10582908 (Deleted: 10168243)
  Binary     : 699      (Ratio:   0.01%)
  Ternary    : 11316    (Ratio:   0.11%)
  Conflict   : 10396683 (Average Length:   74.2 Ratio:  98.24%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 186225   (Average Length:   27.6 Ratio:   1.76%) 
  Distributed: 62187    (Ratio:   0.60% Average LBD: 3.69) 
  Integrated : 186561   (Ratio: 300.00% Unit: 231 Average Jumps: 6.07)
Backjumps    : 10396684 (Average:  1.19 Max:  70 Sum: 12412633)
  Executed   : 10396653 (Average:  1.19 Max:  70 Sum: 12412177 Ratio: 100.00%)
  Bounded    : 31       (Average: 14.71 Max:  53 Sum:    456 Ratio:   0.00%)

Rules        : 218672  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16580   
Bodies       : 6418    
  Sum        : 169     
  Count      : 14      
Equivalences : 9386     (Atom=Atom: 1252 Body=Body: 593 Other: 7541)
Tight        : Yes
Variables    : 5013     (Eliminated:    0 Frozen: 3543)
Constraints  : 210447   (Binary:  98.4% Ternary:   0.7% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(3)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) 
}.
