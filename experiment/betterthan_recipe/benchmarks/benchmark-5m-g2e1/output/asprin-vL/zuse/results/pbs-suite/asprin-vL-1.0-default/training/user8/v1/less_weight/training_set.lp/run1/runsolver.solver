asprin_vL version 1.0
Reading from stdin
-:1304:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1314:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1329:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1410:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1671:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1684:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1861:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1990:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2062:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2066:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2066:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2072:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2171:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2197:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2317:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2351:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2373:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1221:1-16: info: no atoms over signature occur in program:
  output/3

-:1213:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1214:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,33) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(39,eq,4) output(4,eq,46) output(46,eq,60) output(41,eq,92) output(92,eq,32) output(32,eq,76) output(76,eq,4) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(42,eq,37) output(32,eq,4) output(33,eq,76) output(92,eq,76) output(41,eq,32) output(4,eq,60) output(39,eq,46) output(76,eq,46) output(52,eq,4) output(32,eq,39) output(33,eq,52) output(92,eq,52) output(7,eq,32) output(78,eq,33) output(78,eq,32) output(41,eq,52) output(7,eq,52) output(78,eq,52) output(33,eq,39) output(92,eq,39) output(41,eq,39) output(7,eq,39) output(33,eq,4) output(92,eq,4) output(32,eq,46) output(33,eq,46) output(92,eq,46) output(52,eq,46) output(39,eq,60) output(76,eq,60) output(32,eq,60) output(52,eq,60) output(41,eq,76) output(7,eq,76) output(78,eq,76) output(41,eq,4) output(7,eq,4) output(72,eq,37) output(4,eq,37) output(42,eq,60) output(72,eq,60) output(33,eq,60) output(92,eq,60) output(39,eq,37) output(76,eq,37) output(32,eq,37) output(52,eq,37) output(33,eq,37) output(92,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,4) output(41,eq,60) output(7,eq,60) output(78,eq,60) output(41,eq,46) output(7,eq,46) output(78,eq,46) output(78,eq,39) output(78,eq,37) output(60,eq,79) output(4,eq,72) output(4,eq,42) output(39,eq,72) output(76,eq,72) output(46,eq,79) output(37,eq,79) output(4,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,72) output(92,eq,72) output(52,eq,72) output(39,eq,42) output(76,eq,42) output(32,eq,42) output(52,eq,42) output(4,eq,18) output(39,eq,18) output(76,eq,18) output(32,eq,18) output(33,eq,18) output(92,eq,18) output(41,eq,18) output(52,eq,18) output(33,eq,42) output(92,eq,42) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(33,eq,79) output(92,eq,79) output(41,eq,79) output(52,eq,79)
Optimization: 109 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(39,eq,4) output(4,eq,46) output(46,eq,60) output(41,eq,92) output(92,eq,32) output(32,eq,76) output(76,eq,4) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(42,eq,37) output(32,eq,4) output(33,eq,76) output(92,eq,76) output(41,eq,32) output(4,eq,60) output(39,eq,46) output(76,eq,46) output(52,eq,4) output(32,eq,39) output(33,eq,52) output(92,eq,52) output(41,eq,52) output(33,eq,39) output(92,eq,39) output(41,eq,39) output(33,eq,4) output(92,eq,4) output(32,eq,46) output(33,eq,46) output(92,eq,46) output(52,eq,46) output(39,eq,60) output(76,eq,60) output(32,eq,60) output(52,eq,60) output(41,eq,76) output(41,eq,4) output(72,eq,37) output(4,eq,37) output(42,eq,60) output(72,eq,60) output(33,eq,60) output(92,eq,60) output(39,eq,37) output(76,eq,37) output(32,eq,37) output(52,eq,37) output(33,eq,37) output(92,eq,37) output(41,eq,37) output(41,eq,60) output(41,eq,46) output(60,eq,79) output(4,eq,72) output(4,eq,42) output(39,eq,72) output(76,eq,72) output(46,eq,79) output(37,eq,79) output(4,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,72) output(92,eq,72) output(52,eq,72) output(39,eq,42) output(76,eq,42) output(32,eq,42) output(52,eq,42) output(4,eq,18) output(39,eq,18) output(76,eq,18) output(32,eq,18) output(33,eq,18) output(92,eq,18) output(41,eq,18) output(52,eq,18) output(33,eq,42) output(92,eq,42) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(33,eq,79) output(92,eq,79) output(41,eq,79) output(52,eq,79)
Optimization: 91 2
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasPrep(3))),1) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(4,better,72) output(4,better,42) output(4,better,18) output(39,better,72) output(39,better,42) output(39,better,18) output(52,better,39) output(52,better,72) output(52,better,42) output(52,better,18) output(76,better,72) output(76,better,42) output(76,better,18) output(92,better,32) output(92,better,76) output(92,better,39) output(92,better,72) output(92,better,18) output(92,better,42) output(33,better,32) output(33,better,72) output(78,better,32) output(39,worse,4) output(39,worse,46) output(39,worse,60) output(39,worse,37) output(39,worse,79) output(76,worse,4) output(76,worse,46) output(76,worse,60) output(76,worse,37) output(76,worse,79) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,37) output(7,worse,60) output(7,worse,46) output(18,worse,37) output(18,worse,60) output(32,worse,52) output(32,worse,76) output(32,worse,4) output(32,worse,39) output(32,worse,46) output(32,worse,60) output(32,worse,37) output(32,worse,42) output(32,worse,18) output(32,worse,79) output(33,worse,76) output(33,worse,52) output(33,worse,39) output(33,worse,4) output(33,worse,46) output(33,worse,60) output(33,worse,37) output(33,worse,79) output(41,worse,92) output(41,worse,52) output(41,worse,39) output(41,worse,76) output(41,worse,4) output(41,worse,37) output(41,worse,60) output(41,worse,46) output(41,worse,18) output(41,worse,42) output(41,worse,79) output(42,worse,37) output(42,worse,60) output(72,worse,37) output(72,worse,60) output(78,worse,33) output(78,worse,52) output(78,worse,76) output(78,worse,4) output(78,worse,60) output(78,worse,46) output(78,worse,39) output(78,worse,37) output(4,eq,46) output(46,eq,60) output(37,eq,60) output(41,eq,32) output(4,eq,60) output(52,eq,4) output(92,eq,52) output(92,eq,4) output(92,eq,46) output(52,eq,46) output(52,eq,60) output(4,eq,37) output(92,eq,60) output(52,eq,37) output(92,eq,37) output(60,eq,79) output(46,eq,79) output(37,eq,79) output(4,eq,79) output(32,eq,72) output(33,eq,18) output(33,eq,42) output(41,eq,72) output(92,eq,79) output(52,eq,79)
Optimization: 87 5
Progression : [ 5;87] (Error: 16.4)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasPrep(4))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasCost(1))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(18,better,37) output(18,better,60) output(32,better,4) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,37) output(4,worse,72) output(37,worse,79) output(46,worse,79) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,37) output(7,worse,60) output(7,worse,46) output(78,worse,33) output(78,worse,32) output(78,worse,52) output(78,worse,76) output(78,worse,39) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(46,eq,60) output(32,eq,76) output(33,eq,76) output(41,eq,32) output(32,eq,39) output(33,eq,52) output(41,eq,52) output(33,eq,39) output(41,eq,39) output(92,eq,4) output(41,eq,76) output(4,eq,42) output(39,eq,72) output(76,eq,72) output(4,eq,79) output(32,eq,72) output(33,eq,72) output(52,eq,72) output(4,eq,18) output(92,eq,18) output(92,eq,42) output(41,eq,72) output(92,eq,79)
Optimization: 49 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrep(3))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasCost(1))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(18,better,37) output(18,better,60) output(32,better,4) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,37) output(4,worse,72) output(37,worse,79) output(46,worse,79) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,37) output(7,worse,60) output(7,worse,46) output(78,worse,33) output(78,worse,32) output(78,worse,52) output(78,worse,76) output(78,worse,39) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(32,eq,76) output(33,eq,76) output(41,eq,32) output(32,eq,39) output(33,eq,52) output(41,eq,52) output(33,eq,39) output(41,eq,39) output(92,eq,4) output(41,eq,76) output(4,eq,42) output(39,eq,72) output(76,eq,72) output(4,eq,79) output(32,eq,72) output(33,eq,72) output(52,eq,72) output(4,eq,18) output(92,eq,18) output(92,eq,42) output(41,eq,72) output(92,eq,79)
Optimization: 48 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,18) output(37,better,60) output(39,better,46) output(39,better,60) output(39,better,37) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,18) output(52,better,79) output(76,better,46) output(76,better,60) output(76,better,37) output(92,better,76) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(7,better,39) output(7,better,76) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,18) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,39) output(41,better,76) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,42) output(37,worse,79) output(39,worse,4) output(39,worse,72) output(39,worse,79) output(39,worse,42) output(39,worse,18) output(46,worse,79) output(52,worse,42) output(60,worse,79) output(76,worse,4) output(76,worse,72) output(76,worse,79) output(76,worse,42) output(76,worse,18) output(92,worse,52) output(92,worse,42) output(7,worse,33) output(7,worse,52) output(32,worse,52) output(32,worse,42) output(41,worse,52) output(41,worse,42) output(78,worse,33) output(41,eq,92) output(92,eq,32) output(32,eq,4) output(41,eq,32) output(7,eq,32) output(92,eq,4) output(41,eq,4) output(7,eq,4) output(4,eq,72) output(4,eq,79) output(32,eq,72) output(92,eq,72) output(41,eq,72) output(32,eq,79) output(92,eq,79) output(41,eq,79)
Optimization: 40 14
Progression : [ 6;40] (Error: 5.66667)
Progression : [ 7;40] (Error: 4.71429)
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,18) output(39,better,46) output(39,better,37) output(39,better,18) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,18) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(7,better,39) output(7,better,37) output(7,better,46) output(18,better,37) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,39) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,32) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(4,worse,42) output(37,worse,60) output(37,worse,79) output(39,worse,4) output(39,worse,60) output(39,worse,72) output(39,worse,79) output(39,worse,42) output(46,worse,60) output(46,worse,79) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,72) output(92,worse,42) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,76) output(7,worse,4) output(18,worse,60) output(32,worse,52) output(32,worse,76) output(32,worse,42) output(41,worse,52) output(41,worse,76) output(41,worse,42) output(78,worse,33) output(78,worse,52) output(41,eq,32) output(92,eq,4) output(78,eq,76) output(7,eq,60) output(4,eq,79) output(32,eq,72) output(76,eq,42) output(41,eq,72) output(92,eq,79)
Optimization: 40 11
Progression : [ 8;40] (Error: 4)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasDifficulty(1))),3) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,18) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,42) output(39,better,18) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,46) output(33,better,37) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(37,worse,60) output(37,worse,79) output(39,worse,72) output(46,worse,60) output(46,worse,79) output(52,worse,72) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,72) output(33,worse,32) output(33,worse,76) output(33,worse,52) output(33,worse,39) output(33,worse,4) output(33,worse,72) output(33,worse,79) output(52,eq,39) output(39,eq,4) output(76,eq,4) output(18,eq,60) output(92,eq,76) output(41,eq,32) output(52,eq,4) output(92,eq,52) output(92,eq,39) output(92,eq,4) output(42,eq,60) output(33,eq,60) output(4,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,18) output(33,eq,42) output(41,eq,72) output(92,eq,79) output(52,eq,79)
Optimization: 39 11
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(46,better,79) output(52,better,4) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(18,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,46) output(4,worse,37) output(4,worse,72) output(4,worse,42) output(4,worse,18) output(39,worse,46) output(39,worse,72) output(52,worse,46) output(52,worse,72) output(76,worse,46) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,46) output(92,worse,37) output(92,worse,72) output(92,worse,18) output(92,worse,42) output(7,worse,33) output(7,worse,32) output(18,worse,37) output(33,worse,32) output(33,worse,72) output(42,worse,37) output(52,eq,39) output(41,eq,32) output(4,eq,60) output(92,eq,4) output(92,eq,60) output(7,eq,46) output(60,eq,79) output(4,eq,79) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 37 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(4,better,37) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,4) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,46) output(4,worse,72) output(4,worse,42) output(4,worse,79) output(4,worse,18) output(37,worse,60) output(37,worse,79) output(39,worse,72) output(52,worse,72) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,32) output(33,worse,32) output(33,worse,72) output(52,eq,39) output(41,eq,32) output(4,eq,60) output(92,eq,46) output(46,eq,79) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 27 12
Progression : [ 9;27] (Error: 2)
Progression : [10;27] (Error: 1.7)
Progression : [11;27] (Error: 1.45455)
Progression : [12;27] (Error: 1.25)
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,18) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,39) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(37,worse,60) output(37,worse,79) output(39,worse,72) output(46,worse,79) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(32,worse,52) output(33,worse,32) output(33,worse,52) output(33,worse,72) output(41,worse,52) output(41,eq,32) output(92,eq,4) output(7,eq,76) output(4,eq,79) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 27 10
Progression : [13;27] (Error: 1.07692)
Answer: 12
preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,18) output(37,better,60) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,42) output(76,better,18) output(92,better,32) output(92,better,76) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,32) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,60) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(33,better,32) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,39) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(4,worse,79) output(37,worse,79) output(39,worse,72) output(39,worse,79) output(46,worse,79) output(60,worse,79) output(76,worse,79) output(92,worse,52) output(32,worse,52) output(32,worse,79) output(33,worse,52) output(41,worse,92) output(41,worse,52) output(41,worse,79) output(39,eq,4) output(32,eq,76) output(18,eq,37) output(41,eq,32) output(7,eq,52) output(41,eq,76) output(76,eq,72) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 25 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,42) output(76,better,18) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(4,worse,79) output(4,worse,18) output(37,worse,79) output(39,worse,72) output(39,worse,79) output(46,worse,79) output(52,worse,72) output(52,worse,79) output(60,worse,79) output(76,worse,72) output(76,worse,79) output(92,worse,32) output(92,worse,72) output(7,worse,32) output(33,worse,32) output(33,worse,72) output(33,worse,79) output(41,eq,32) output(33,eq,52) output(4,eq,42) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 24 10
Progression : [14;24] (Error: 0.714286)
Progression : [15;24] (Error: 0.6)
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,18) output(37,worse,79) output(39,worse,72) output(46,worse,79) output(52,worse,72) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(92,worse,18) output(92,worse,42) output(7,eq,33) output(41,eq,32) output(92,eq,4) output(4,eq,79) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 23 9
Progression : [16;23] (Error: 0.4375)
Progression : [17;23] (Error: 0.352941)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,3),1,for(atom(hasCost(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,18) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(37,worse,79) output(39,worse,72) output(46,worse,79) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(32,worse,52) output(33,worse,52) output(41,worse,52) output(33,eq,32) output(41,eq,32) output(92,eq,4) output(4,eq,79) output(32,eq,72) output(33,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 22 8
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,42) output(76,better,18) output(92,better,76) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(4,worse,79) output(37,worse,79) output(39,worse,72) output(39,worse,79) output(46,worse,79) output(60,worse,79) output(76,worse,72) output(76,worse,79) output(92,worse,32) output(92,worse,52) output(92,worse,72) output(32,worse,52) output(41,worse,52) output(41,eq,32) output(33,eq,52) output(4,eq,42) output(32,eq,72) output(4,eq,18) output(41,eq,72) output(92,eq,79)
Optimization: 21 11
Progression : [18;21] (Error: 0.166667)
Progression : [19;21] (Error: 0.105263)
Progression : [20;21] (Error: 0.05)
Answer: 17
preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,18) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(37,worse,79) output(39,worse,72) output(46,worse,79) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(32,worse,52) output(33,worse,52) output(41,worse,52) output(41,eq,32) output(92,eq,4) output(4,eq,79) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 20 9
Progression : 20 [1;9] (Error: 8)
Answer: 18
preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,18) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,42) output(39,better,18) output(46,better,60) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(18,better,37) output(18,better,60) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(42,better,37) output(42,better,60) output(72,better,37) output(72,better,60) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(4,worse,72) output(37,worse,79) output(39,worse,72) output(46,worse,79) output(60,worse,79) output(76,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(32,worse,52) output(33,worse,52) output(41,worse,52) output(41,eq,32) output(92,eq,4) output(4,eq,79) output(32,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 20 8
Progression : 20 [2;8] (Error: 3)
Progression : 20 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.080 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 20 8
Bounds       : 20 [3;8]
Calls        : 1
Time         : 297.813s (Solving: 295.84s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.005s
Threads      : 4        (Winner: 4)

Choices      : 10767995 (Domain: 975696)
Conflicts    : 8573262  (Analyzed: 8573243)
Restarts     : 7650     (Average: 1120.69 Last: 674266)
Model-Level  : 43.6    
Problems     : 25       (Average Length: 0.16 Splits: 0)
Lemmas       : 8756669  (Deleted: 8431765)
  Binary     : 394      (Ratio:   0.00%)
  Ternary    : 11712    (Ratio:   0.13%)
  Conflict   : 8573243  (Average Length:   82.2 Ratio:  97.91%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 183426   (Average Length:   29.6 Ratio:   2.09%) 
  Distributed: 61242    (Ratio:   0.71% Average LBD: 3.66) 
  Integrated : 183726   (Ratio: 300.00% Unit: 278 Average Jumps: 3.81)
Backjumps    : 8573243  (Average:  1.23 Max: 410 Sum: 10510186)
  Executed   : 8573225  (Average:  1.23 Max: 410 Sum: 10509814 Ratio: 100.00%)
  Bounded    : 18       (Average: 20.67 Max:  47 Sum:    372 Ratio:   0.00%)

Rules        : 214979  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16294   
Bodies       : 6404    
  Sum        : 182     
  Count      : 14      
Equivalences : 9287     (Atom=Atom: 1174 Body=Body: 533 Other: 7580)
Tight        : Yes
Variables    : 5038     (Eliminated:    0 Frozen: 3568)
Constraints  : 207085   (Binary:  98.4% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) 
}.
