asprin_vL version 1.0
Reading from stdin
-:1303:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1313:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1328:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1409:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1670:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1683:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1860:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1989:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2061:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2065:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2065:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2071:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2170:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2196:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2316:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2350:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2372:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1220:1-16: info: no atoms over signature occur in program:
  output/3

-:1212:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1213:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(21,eq,58) output(62,eq,39) output(67,eq,50) output(50,eq,84) output(84,eq,66) output(66,eq,32) output(61,eq,39) output(39,eq,69) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(32,eq,71) output(66,eq,71) output(84,eq,71) output(50,eq,32) output(17,eq,32) output(7,eq,84) output(69,eq,17) output(62,eq,69) output(61,eq,69) output(18,eq,39) output(50,eq,66) output(17,eq,66) output(67,eq,84) output(39,eq,50) output(58,eq,39) output(10,eq,58) output(21,eq,39) output(10,eq,39) output(62,eq,50) output(61,eq,50) output(18,eq,50) output(58,eq,50) output(39,eq,84) output(62,eq,84) output(61,eq,84) output(7,eq,66) output(69,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(18,eq,69) output(30,eq,69) output(58,eq,69) output(21,eq,69) output(39,eq,17) output(62,eq,17) output(61,eq,17) output(69,eq,84) output(7,eq,32) output(69,eq,32) output(67,eq,32) output(39,eq,32) output(50,eq,71) output(17,eq,71) output(7,eq,71) output(67,eq,71) output(39,eq,71) output(62,eq,71) output(61,eq,71) output(18,eq,71) output(30,eq,71) output(58,eq,71) output(21,eq,71) output(69,eq,71) output(62,eq,32) output(61,eq,32) output(18,eq,32) output(58,eq,32) output(21,eq,32) output(10,eq,32) output(30,eq,32) output(18,eq,84) output(30,eq,84) output(58,eq,84) output(21,eq,84) output(18,eq,17) output(30,eq,17) output(58,eq,17) output(21,eq,17) output(10,eq,17) output(10,eq,69) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(21,eq,66) output(10,eq,66) output(30,eq,66) output(10,eq,84) output(21,eq,50) output(10,eq,50) output(30,eq,50) output(10,eq,71) output(10,eq,21) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(69,eq,7) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(58,eq,7) output(10,eq,7) output(30,eq,7) output(10,eq,67)
Optimization: 108 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,67) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(39,better,69) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(50,better,84) output(50,better,32) output(50,better,66) output(58,better,69) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,67) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(17,worse,71) output(30,worse,39) output(30,worse,71) output(30,worse,50) output(30,worse,18) output(30,worse,7) output(61,worse,39) output(61,worse,50) output(61,worse,71) output(66,worse,71) output(67,worse,50) output(67,worse,71) output(69,worse,71) output(69,worse,7) output(84,worse,71) output(32,worse,71) output(21,eq,58) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(17,eq,84) output(84,eq,32) output(17,eq,32) output(69,eq,17) output(61,eq,69) output(18,eq,39) output(17,eq,66) output(67,eq,84) output(39,eq,50) output(58,eq,39) output(10,eq,58) output(21,eq,39) output(10,eq,39) output(62,eq,50) output(18,eq,50) output(58,eq,50) output(61,eq,84) output(69,eq,66) output(67,eq,66) output(30,eq,69) output(61,eq,17) output(69,eq,84) output(69,eq,32) output(67,eq,32) output(50,eq,71) output(7,eq,71) output(39,eq,71) output(62,eq,71) output(18,eq,71) output(58,eq,71) output(21,eq,71) output(61,eq,32) output(30,eq,32) output(30,eq,84) output(30,eq,17) output(61,eq,66) output(30,eq,66) output(21,eq,50) output(10,eq,50) output(10,eq,71) output(10,eq,21) output(58,eq,62) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,7) output(10,eq,7)
Optimization: 68 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrep(4))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,39) output(10,better,69) output(10,better,66) output(10,better,62) output(10,better,7) output(17,better,32) output(17,better,66) output(17,better,71) output(21,better,39) output(21,better,69) output(21,better,66) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,66) output(30,better,18) output(30,better,61) output(30,better,7) output(39,better,69) output(39,better,66) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(58,better,39) output(58,better,69) output(58,better,66) output(58,better,62) output(58,better,7) output(62,better,69) output(62,better,66) output(67,better,66) output(67,better,32) output(67,better,71) output(69,better,7) output(84,better,66) output(84,better,32) output(84,better,71) output(18,better,69) output(18,better,66) output(10,worse,58) output(10,worse,32) output(10,worse,17) output(10,worse,84) output(10,worse,50) output(10,worse,71) output(10,worse,21) output(10,worse,67) output(17,worse,84) output(21,worse,84) output(21,worse,17) output(21,worse,50) output(30,worse,84) output(30,worse,17) output(30,worse,50) output(30,worse,67) output(39,worse,50) output(39,worse,84) output(39,worse,17) output(39,worse,32) output(39,worse,71) output(39,worse,67) output(58,worse,50) output(58,worse,84) output(58,worse,17) output(58,worse,67) output(61,worse,39) output(61,worse,50) output(61,worse,84) output(61,worse,17) output(61,worse,71) output(61,worse,32) output(62,worse,39) output(62,worse,50) output(62,worse,84) output(62,worse,17) output(62,worse,71) output(62,worse,32) output(66,worse,32) output(66,worse,71) output(67,worse,50) output(67,worse,84) output(69,worse,17) output(69,worse,84) output(69,worse,32) output(69,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(18,worse,50) output(18,worse,71) output(18,worse,32) output(18,worse,84) output(18,worse,17) output(21,eq,58) output(32,eq,71) output(61,eq,69) output(18,eq,39) output(69,eq,66) output(58,eq,71) output(21,eq,71) output(58,eq,32) output(21,eq,32) output(61,eq,66)
Optimization: 66 12
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,9),1,for(atom(hasPrep(4))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(17,better,66) output(17,better,71) output(21,better,39) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,7) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(58,better,39) output(58,better,7) output(61,better,39) output(61,better,69) output(61,better,71) output(61,better,32) output(62,better,39) output(62,better,69) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(67,better,66) output(67,better,32) output(67,better,71) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,66) output(84,better,32) output(84,better,71) output(18,better,39) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,17) output(18,better,66) output(10,worse,84) output(10,worse,50) output(17,worse,84) output(21,worse,69) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(21,worse,50) output(30,worse,84) output(30,worse,17) output(30,worse,50) output(30,worse,18) output(30,worse,67) output(39,worse,69) output(39,worse,50) output(39,worse,84) output(39,worse,66) output(39,worse,17) output(39,worse,32) output(39,worse,71) output(39,worse,67) output(58,worse,50) output(58,worse,69) output(58,worse,84) output(58,worse,17) output(58,worse,66) output(58,worse,62) output(58,worse,67) output(61,worse,50) output(61,worse,84) output(61,worse,17) output(62,worse,50) output(62,worse,84) output(67,worse,50) output(67,worse,84) output(69,worse,17) output(69,worse,66) output(69,worse,84) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(18,worse,50) output(18,worse,84) output(21,eq,58) output(32,eq,71) output(62,eq,17) output(58,eq,71) output(21,eq,71) output(58,eq,32) output(21,eq,32) output(61,eq,66) output(30,eq,66) output(30,eq,61)
Optimization: 55 11
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(4))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(17,better,66) output(17,better,71) output(21,better,39) output(21,better,69) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,66) output(30,better,61) output(30,better,7) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(58,better,39) output(58,better,69) output(58,better,7) output(61,better,39) output(61,better,69) output(61,better,71) output(61,better,32) output(62,better,39) output(62,better,69) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(67,better,66) output(67,better,32) output(67,better,71) output(69,better,7) output(84,better,66) output(84,better,32) output(84,better,71) output(18,better,39) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,66) output(10,worse,84) output(10,worse,50) output(17,worse,84) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(21,worse,50) output(30,worse,84) output(30,worse,17) output(30,worse,50) output(30,worse,18) output(30,worse,67) output(39,worse,69) output(39,worse,50) output(39,worse,84) output(39,worse,66) output(39,worse,17) output(39,worse,32) output(39,worse,71) output(39,worse,67) output(58,worse,50) output(58,worse,84) output(58,worse,17) output(58,worse,66) output(58,worse,62) output(58,worse,67) output(61,worse,50) output(61,worse,84) output(61,worse,17) output(62,worse,50) output(62,worse,84) output(62,worse,17) output(67,worse,50) output(67,worse,84) output(69,worse,17) output(69,worse,66) output(69,worse,84) output(69,worse,32) output(69,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(18,worse,50) output(18,worse,84) output(21,eq,58) output(32,eq,71) output(58,eq,71) output(21,eq,71) output(58,eq,32) output(21,eq,32) output(18,eq,17) output(61,eq,66)
Optimization: 54 12
Progression : [ 2;54] (Error: 26)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,7) output(10,better,67) output(17,better,84) output(21,better,39) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,50) output(39,better,84) output(39,better,7) output(58,better,39) output(58,better,50) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,67) output(58,better,7) output(61,better,39) output(61,better,50) output(61,better,84) output(61,better,17) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(67,better,50) output(67,better,84) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,7) output(7,better,84) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(32,better,71) output(17,worse,32) output(17,worse,66) output(17,worse,71) output(21,worse,32) output(30,worse,32) output(30,worse,18) output(39,worse,69) output(39,worse,66) output(39,worse,32) output(39,worse,71) output(50,worse,32) output(50,worse,66) output(50,worse,71) output(58,worse,32) output(58,worse,62) output(61,worse,69) output(61,worse,71) output(61,worse,32) output(66,worse,32) output(66,worse,71) output(67,worse,66) output(67,worse,32) output(67,worse,71) output(69,worse,32) output(84,worse,66) output(84,worse,32) output(84,worse,71) output(7,worse,17) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(21,eq,58) output(50,eq,84) output(30,eq,69) output(58,eq,69) output(21,eq,69) output(39,eq,17) output(30,eq,71) output(58,eq,71) output(21,eq,71) output(69,eq,71) output(61,eq,66) output(39,eq,67) output(10,eq,62)
Optimization: 44 10
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,84) output(10,better,50) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,18) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,84) output(67,better,32) output(69,better,32) output(69,better,7) output(84,better,32) output(18,better,50) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(10,worse,58) output(10,worse,39) output(10,worse,66) output(10,worse,71) output(10,worse,21) output(10,worse,62) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(30,worse,39) output(30,worse,71) output(39,worse,71) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(61,worse,71) output(62,worse,71) output(66,worse,71) output(67,worse,66) output(67,worse,71) output(69,worse,17) output(69,worse,66) output(69,worse,71) output(84,worse,66) output(84,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(18,worse,39) output(18,worse,71) output(18,worse,66) output(32,worse,71) output(62,eq,39) output(67,eq,50) output(69,eq,84) output(21,eq,71) output(61,eq,66) output(30,eq,66) output(30,eq,61)
Optimization: 41 12
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrep(4))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,84) output(10,better,50) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,18) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,84) output(67,better,32) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,7) output(84,better,32) output(18,better,50) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(10,worse,58) output(10,worse,39) output(10,worse,66) output(10,worse,71) output(10,worse,21) output(10,worse,62) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(30,worse,39) output(30,worse,71) output(39,worse,71) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(61,worse,71) output(62,worse,71) output(66,worse,71) output(67,worse,66) output(67,worse,71) output(69,worse,66) output(69,worse,71) output(84,worse,66) output(84,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(18,worse,39) output(18,worse,71) output(18,worse,66) output(32,worse,71) output(62,eq,39) output(67,eq,50) output(21,eq,71) output(10,eq,69) output(61,eq,66) output(30,eq,66) output(30,eq,61)
Optimization: 40 12
Progression : [ 3;40] (Error: 12.3333)
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(10,better,32) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,7) output(17,better,84) output(17,better,32) output(17,better,66) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,50) output(61,better,84) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,32) output(18,better,50) output(18,better,32) output(18,better,84) output(10,worse,58) output(10,worse,39) output(10,worse,69) output(10,worse,71) output(10,worse,21) output(10,worse,62) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(30,worse,39) output(50,worse,84) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,17) output(61,worse,71) output(66,worse,71) output(67,worse,71) output(84,worse,66) output(84,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(18,worse,39) output(18,worse,69) output(18,worse,71) output(18,worse,17) output(18,worse,66) output(32,worse,71) output(62,eq,39) output(30,eq,69) output(21,eq,71) output(10,eq,17) output(61,eq,66) output(10,eq,67)
Optimization: 39 13
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(10,better,32) output(10,better,84) output(10,better,50) output(10,better,7) output(17,better,84) output(17,better,32) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,50) output(67,better,84) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(7,better,84) output(7,better,32) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(10,worse,39) output(10,worse,69) output(10,worse,66) output(10,worse,71) output(10,worse,21) output(10,worse,62) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(30,worse,39) output(30,worse,18) output(50,worse,84) output(50,worse,32) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(62,worse,39) output(67,worse,66) output(67,worse,71) output(84,worse,66) output(84,worse,71) output(7,worse,17) output(7,worse,66) output(7,worse,71) output(32,worse,71) output(84,eq,32) output(66,eq,71) output(30,eq,69) output(61,eq,71) output(21,eq,71) output(10,eq,17) output(61,eq,66) output(21,eq,66) output(10,eq,67)
Optimization: 38 12
Progression : [ 4;38] (Error: 8.5)
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,32) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,62) output(10,better,7) output(17,better,84) output(17,better,32) output(17,better,66) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,50) output(61,better,32) output(62,better,50) output(62,better,84) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,32) output(7,better,84) output(7,better,66) output(7,better,32) output(18,better,50) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(10,worse,39) output(10,worse,69) output(10,worse,71) output(10,worse,21) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(30,worse,39) output(50,worse,84) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,17) output(61,worse,71) output(62,worse,39) output(62,worse,69) output(62,worse,17) output(62,worse,71) output(66,worse,71) output(67,worse,71) output(84,worse,71) output(7,worse,17) output(7,worse,71) output(18,worse,39) output(18,worse,69) output(32,worse,71) output(84,eq,66) output(61,eq,84) output(30,eq,69) output(18,eq,71) output(21,eq,71) output(10,eq,17) output(61,eq,66) output(10,eq,67)
Optimization: 37 12
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(4))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,67) output(17,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(58,better,50) output(58,better,69) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,32) output(69,better,17) output(69,better,84) output(69,better,32) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(18,better,50) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(10,worse,39) output(10,worse,71) output(10,worse,21) output(10,worse,7) output(17,worse,66) output(17,worse,71) output(30,worse,39) output(30,worse,71) output(39,worse,71) output(50,worse,71) output(58,worse,71) output(61,worse,39) output(61,worse,71) output(62,worse,39) output(62,worse,71) output(66,worse,71) output(67,worse,50) output(67,worse,66) output(67,worse,71) output(69,worse,66) output(69,worse,71) output(69,worse,7) output(84,worse,66) output(84,worse,71) output(7,worse,71) output(18,worse,39) output(18,worse,71) output(32,worse,71) output(17,eq,84) output(50,eq,66) output(67,eq,84) output(58,eq,39) output(21,eq,71) output(10,eq,62) output(30,eq,7)
Optimization: 36 12
Answer: 13
preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,7) output(10,better,67) output(17,better,32) output(17,better,66) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,66) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(84,better,66) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(18,better,50) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(10,worse,71) output(10,worse,21) output(17,worse,71) output(21,worse,58) output(30,worse,39) output(30,worse,71) output(39,worse,71) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,50) output(61,worse,71) output(62,worse,71) output(66,worse,71) output(67,worse,50) output(67,worse,71) output(69,worse,71) output(69,worse,7) output(84,worse,71) output(7,worse,71) output(18,worse,39) output(18,worse,71) output(32,worse,71) output(62,eq,39) output(17,eq,84) output(67,eq,84) output(10,eq,39) output(61,eq,84) output(61,eq,17) output(21,eq,71) output(10,eq,62) output(30,eq,7)
Optimization: 33 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),7) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,7) output(10,better,67) output(17,better,32) output(17,better,66) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(30,better,69) output(30,better,32) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,67) output(58,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,66) output(67,better,32) output(84,better,66) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,50) output(30,worse,39) output(30,worse,71) output(30,worse,84) output(30,worse,17) output(30,worse,50) output(30,worse,18) output(30,worse,61) output(30,worse,67) output(30,worse,7) output(58,worse,62) output(61,worse,39) output(66,worse,71) output(67,worse,50) output(67,worse,71) output(69,worse,17) output(69,worse,66) output(69,worse,84) output(69,worse,32) output(69,worse,71) output(69,worse,7) output(84,worse,71) output(32,worse,71) output(17,eq,84) output(67,eq,84) output(58,eq,39) output(21,eq,71) output(30,eq,66) output(10,eq,62)
Optimization: 32 10
Answer: 15
preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(21,better,32) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,67) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(67,better,50) output(67,better,32) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,71) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(17,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,66) output(30,worse,39) output(30,worse,18) output(30,worse,7) output(50,worse,84) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(67,worse,66) output(69,worse,7) output(84,worse,66) output(18,worse,39) output(32,worse,71) output(62,eq,39) output(17,eq,84) output(84,eq,71) output(61,eq,69) output(67,eq,84) output(69,eq,66) output(30,eq,69) output(17,eq,71) output(67,eq,71) output(21,eq,71) output(21,eq,84) output(21,eq,17) output(61,eq,66) output(30,eq,66) output(30,eq,61)
Optimization: 32 7
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasPrep(4))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,17) output(61,better,32) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,7) output(84,better,66) output(84,better,32) output(7,better,17) output(7,better,66) output(7,better,32) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(17,worse,84) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(30,worse,39) output(30,worse,71) output(30,worse,18) output(39,worse,71) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,50) output(61,worse,84) output(61,worse,71) output(62,worse,39) output(62,worse,69) output(62,worse,50) output(62,worse,71) output(66,worse,71) output(67,worse,50) output(67,worse,84) output(67,worse,66) output(67,worse,71) output(69,worse,71) output(84,worse,71) output(7,worse,71) output(32,worse,71) output(7,eq,84) output(21,eq,71) output(61,eq,66)
Optimization: 31 13
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasPrep(4))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,17) output(61,better,32) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,7) output(84,better,66) output(84,better,32) output(7,better,17) output(7,better,66) output(7,better,32) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(17,worse,84) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(30,worse,39) output(30,worse,71) output(30,worse,18) output(39,worse,71) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,50) output(61,worse,84) output(61,worse,71) output(62,worse,39) output(62,worse,69) output(62,worse,50) output(62,worse,71) output(66,worse,71) output(67,worse,50) output(67,worse,84) output(67,worse,66) output(67,worse,71) output(69,worse,71) output(84,worse,71) output(7,worse,71) output(32,worse,71) output(7,eq,84) output(21,eq,71) output(61,eq,66)
Optimization: 30 13
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(17,better,71) output(21,better,50) output(30,better,39) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,67) output(30,better,7) output(39,better,50) output(39,better,84) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(66,better,32) output(66,better,71) output(67,better,50) output(67,better,84) output(67,better,32) output(67,better,71) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,71) output(7,better,84) output(7,better,32) output(7,better,71) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(32,better,71) output(10,worse,58) output(17,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,32) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(30,worse,18) output(30,worse,61) output(39,worse,69) output(39,worse,66) output(50,worse,84) output(50,worse,32) output(50,worse,66) output(50,worse,71) output(62,worse,69) output(62,worse,66) output(67,worse,66) output(84,worse,66) output(84,worse,32) output(7,worse,66) output(62,eq,39) output(7,eq,17) output(69,eq,66) output(30,eq,69) output(21,eq,71) output(30,eq,66)
Optimization: 29 9
Progression : [ 5;29] (Error: 4.8)
Progression : [ 6;29] (Error: 3.83333)
Progression : [ 7;29] (Error: 3.14286)
Progression : [ 8;29] (Error: 2.625)
Progression : [ 9;29] (Error: 2.22222)
Answer: 19
preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,11),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,18) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(66,better,32) output(66,better,71) output(67,better,84) output(67,better,32) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,7) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,32) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(10,worse,58) output(10,worse,66) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,66) output(39,worse,66) output(50,worse,66) output(62,worse,66) output(67,worse,50) output(67,worse,66) output(67,worse,71) output(69,worse,66) output(69,worse,71) output(84,worse,66) output(84,worse,71) output(7,worse,66) output(7,worse,71) output(18,worse,66) output(32,worse,71) output(62,eq,39) output(50,eq,71) output(21,eq,71) output(61,eq,66) output(30,eq,66) output(21,eq,50) output(30,eq,61)
Optimization: 28 9
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,67) output(17,better,84) output(17,better,32) output(17,better,66) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(50,better,84) output(50,better,32) output(50,better,66) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,84) output(61,better,32) output(61,better,66) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(84,better,66) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(18,better,50) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(10,worse,7) output(17,worse,71) output(21,worse,58) output(30,worse,39) output(30,worse,71) output(30,worse,7) output(39,worse,7) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,17) output(61,worse,71) output(66,worse,71) output(67,worse,71) output(69,worse,71) output(69,worse,7) output(84,worse,71) output(18,worse,39) output(18,worse,69) output(18,worse,71) output(32,worse,71) output(21,eq,39) output(61,eq,50) output(30,eq,69) output(39,eq,71) output(21,eq,71)
Optimization: 27 10
Answer: 21
preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(17,better,66) output(21,better,39) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(50,better,32) output(50,better,66) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,50) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,50) output(67,better,66) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,7) output(84,better,66) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(18,better,50) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(17,worse,71) output(21,worse,58) output(39,worse,71) output(50,worse,84) output(50,worse,71) output(61,worse,39) output(61,worse,69) output(61,worse,71) output(62,worse,71) output(66,worse,71) output(67,worse,71) output(69,worse,71) output(84,worse,71) output(7,worse,71) output(18,worse,39) output(18,worse,71) output(32,worse,71) output(62,eq,39) output(17,eq,84) output(67,eq,84) output(61,eq,84) output(61,eq,17) output(21,eq,71) output(10,eq,71) output(10,eq,21)
Optimization: 26 12
Progression : [10;26] (Error: 1.6)
Answer: 22
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasCost(1))),4) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,32) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(67,better,50) output(67,better,32) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,32) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(30,worse,39) output(30,worse,18) output(30,worse,61) output(50,worse,84) output(50,worse,66) output(50,worse,71) output(67,worse,66) output(67,worse,71) output(84,worse,66) output(84,worse,71) output(32,worse,71) output(62,eq,39) output(17,eq,84) output(66,eq,71) output(67,eq,84) output(7,eq,66) output(30,eq,69) output(7,eq,71) output(21,eq,71) output(21,eq,66)
Optimization: 26 11
Answer: 23
preference(1,(1,2),1,for(atom(hasPrep(4))),1) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,50) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(67,better,50) output(67,better,84) output(67,better,32) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,32) output(7,better,17) output(7,better,84) output(7,better,32) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(17,worse,66) output(17,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,66) output(30,worse,18) output(50,worse,84) output(50,worse,32) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(67,worse,66) output(67,worse,71) output(84,worse,66) output(84,worse,71) output(7,worse,66) output(7,worse,71) output(32,worse,71) output(62,eq,39) output(61,eq,69) output(69,eq,66) output(30,eq,39) output(21,eq,71) output(61,eq,66)
Optimization: 25 11
Progression : [11;25] (Error: 1.27273)
Answer: 24
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(17,better,71) output(21,better,32) output(21,better,84) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,67) output(30,better,7) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(67,better,84) output(67,better,32) output(67,better,71) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,32) output(7,better,84) output(7,better,32) output(7,better,71) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(10,worse,58) output(17,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,17) output(21,worse,66) output(21,worse,50) output(30,worse,39) output(30,worse,50) output(30,worse,18) output(30,worse,61) output(67,worse,50) output(67,worse,66) output(84,worse,66) output(84,worse,71) output(7,worse,66) output(32,worse,71) output(61,eq,39) output(7,eq,17) output(69,eq,66) output(30,eq,69) output(21,eq,71) output(30,eq,66)
Optimization: 24 10
Answer: 25
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(17,better,66) output(17,better,71) output(21,better,32) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,66) output(30,better,50) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(50,better,32) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(84,better,32) output(84,better,71) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(30,worse,39) output(30,worse,17) output(30,worse,18) output(30,worse,61) output(30,worse,67) output(30,worse,7) output(39,worse,7) output(50,worse,84) output(50,worse,66) output(50,worse,71) output(69,worse,17) output(69,worse,7) output(32,worse,71) output(62,eq,39) output(84,eq,66) output(30,eq,69) output(21,eq,71)
Optimization: 23 9
Answer: 26
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(17,better,84) output(17,better,32) output(17,better,66) output(17,better,71) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(39,better,84) output(39,better,66) output(39,better,32) output(39,better,71) output(39,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(84,better,66) output(84,better,32) output(84,better,71) output(7,better,66) output(7,better,32) output(7,better,71) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(32,better,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,32) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(21,worse,50) output(39,worse,17) output(39,worse,67) output(61,worse,39) output(61,worse,69) output(61,worse,50) output(61,worse,17) output(69,worse,17) output(7,worse,17) output(66,eq,32) output(39,eq,69) output(7,eq,84) output(39,eq,50) output(61,eq,84) output(21,eq,71)
Optimization: 22 11
Progression : [12;22] (Error: 0.833333)
Progression : [13;22] (Error: 0.692308)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.045 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 26+
  Optimum    : unknown
Optimization : 22 11
Bounds       : [13;22] [0;11]
Calls        : 1
Time         : 297.465s (Solving: 295.40s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1183.245s
Threads      : 4        (Winner: 4)

Choices      : 10838196 (Domain: 1284158)
Conflicts    : 8637906  (Analyzed: 8637894)
Restarts     : 6933     (Average: 1245.91 Last: 678751)
Model-Level  : 42.0    
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 8871457  (Deleted: 8563988)
  Binary     : 503      (Ratio:   0.01%)
  Ternary    : 14960    (Ratio:   0.17%)
  Conflict   : 8637894  (Average Length:   91.2 Ratio:  97.37%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 233563   (Average Length:   29.0 Ratio:   2.63%) 
  Distributed: 77962    (Ratio:   0.90% Average LBD: 3.68) 
  Integrated : 233885   (Ratio: 300.00% Unit: 440 Average Jumps: 4.95)
Backjumps    : 8637894  (Average:  1.24 Max:  70 Sum: 10704609)
  Executed   : 8637886  (Average:  1.24 Max:  70 Sum: 10704337 Ratio: 100.00%)
  Bounded    : 8        (Average: 34.00 Max:  68 Sum:    272 Ratio:   0.00%)

Rules        : 214429  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16204   
Bodies       : 6410    
  Sum        : 197     
  Count      : 14      
Equivalences : 9296     (Atom=Atom: 1136 Body=Body: 492 Other: 7668)
Tight        : Yes
Variables    : 5068     (Eliminated:    0 Frozen: 3598)
Constraints  : 206670   (Binary:  98.4% Ternary:   0.8% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) 
}.
