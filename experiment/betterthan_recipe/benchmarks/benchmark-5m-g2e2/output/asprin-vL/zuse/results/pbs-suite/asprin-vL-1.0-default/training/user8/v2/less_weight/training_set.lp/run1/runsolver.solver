asprin_vL version 1.0
Reading from stdin
-:1302:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1312:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1327:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1408:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1669:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1682:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1859:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1988:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2060:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2064:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2064:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2070:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2169:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2195:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2315:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2349:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2371:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1219:1-16: info: no atoms over signature occur in program:
  output/3

-:1211:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1212:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,23) output(23,eq,72) output(72,eq,42) output(42,eq,90) output(90,eq,18) output(18,eq,51) output(79,eq,31) output(41,eq,92) output(32,eq,76) output(4,eq,72) output(42,eq,18) output(18,eq,37) output(90,eq,37) output(42,eq,37) output(72,eq,18) output(76,eq,72) output(92,eq,76) output(51,eq,31) output(90,eq,51) output(42,eq,51) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(7,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,42) output(32,eq,42) output(7,eq,42) output(78,eq,42) output(23,eq,90) output(4,eq,90) output(76,eq,90) output(7,eq,90) output(72,eq,51) output(23,eq,51) output(4,eq,51) output(18,eq,31) output(90,eq,31) output(42,eq,31) output(41,eq,76) output(32,eq,72) output(92,eq,72) output(23,eq,18) output(4,eq,18) output(76,eq,18) output(7,eq,18) output(72,eq,37) output(23,eq,37) output(4,eq,37) output(76,eq,37) output(32,eq,37) output(92,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,37) output(78,eq,18) output(32,eq,18) output(92,eq,18) output(41,eq,18) output(41,eq,72) output(72,eq,31) output(23,eq,31) output(4,eq,31) output(76,eq,31) output(32,eq,31) output(7,eq,31) output(78,eq,31) output(76,eq,51) output(32,eq,51) output(92,eq,51) output(41,eq,51) output(7,eq,51) output(78,eq,51) output(78,eq,90) output(32,eq,90) output(92,eq,90) output(41,eq,90) output(92,eq,42) output(41,eq,42) output(92,eq,31) output(41,eq,31) output(51,eq,79) output(92,eq,32) output(76,eq,4) output(37,eq,60) output(18,eq,60) output(41,eq,32) output(18,eq,79) output(90,eq,79) output(42,eq,79) output(72,eq,79) output(92,eq,4) output(41,eq,4) output(90,eq,60) output(42,eq,60) output(72,eq,60) output(23,eq,60) output(76,eq,60) output(92,eq,60) output(23,eq,79) output(76,eq,79) output(92,eq,79) output(41,eq,79) output(41,eq,60)
Optimization: 105 0
Answer: 2
preference(1,(1,1),1,for(atom(hasIngredient(7))),1) preference(1,(1,2),1,for(atom(hasCost(3))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(4))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasIngredient(9))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasIngredient(12))),1) preference(1,(1,14),1,for(atom(hasCategory(1))),1) preference(1,less(weight)) output(51,better,31) output(51,better,79) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,31) output(90,better,79) output(90,better,60) output(18,worse,51) output(72,worse,90) output(72,worse,51) output(4,worse,90) output(4,worse,51) output(42,worse,90) output(42,worse,51) output(92,worse,51) output(92,worse,90) output(32,worse,51) output(32,worse,90) output(41,worse,51) output(41,worse,90) output(90,worse,51) output(76,worse,90) output(76,worse,51) output(7,eq,23) output(72,eq,42) output(79,eq,31) output(41,eq,92) output(32,eq,76) output(4,eq,72) output(42,eq,18) output(18,eq,37) output(42,eq,37) output(72,eq,18) output(76,eq,72) output(92,eq,76) output(4,eq,42) output(78,eq,23) output(76,eq,42) output(32,eq,42) output(23,eq,51) output(18,eq,31) output(42,eq,31) output(41,eq,76) output(32,eq,72) output(92,eq,72) output(4,eq,18) output(76,eq,18) output(72,eq,37) output(4,eq,37) output(76,eq,37) output(32,eq,37) output(92,eq,37) output(41,eq,37) output(32,eq,18) output(92,eq,18) output(41,eq,18) output(41,eq,72) output(72,eq,31) output(4,eq,31) output(76,eq,31) output(32,eq,31) output(7,eq,51) output(78,eq,51) output(92,eq,42) output(41,eq,42) output(92,eq,31) output(41,eq,31) output(92,eq,32) output(76,eq,4) output(37,eq,60) output(18,eq,60) output(41,eq,32) output(18,eq,79) output(42,eq,79) output(72,eq,79) output(92,eq,4) output(41,eq,4) output(42,eq,60) output(72,eq,60) output(76,eq,60) output(92,eq,60) output(76,eq,79) output(92,eq,79) output(41,eq,79) output(41,eq,60)
Optimization: 78 14
Answer: 3
preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasIngredient(9))),3) preference(1,less(weight)) output(72,better,42) output(72,better,18) output(72,better,37) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,18) output(23,better,37) output(23,better,60) output(32,better,42) output(32,better,37) output(32,better,18) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,42) output(41,better,4) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,90) output(90,better,18) output(90,better,37) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,4) output(18,worse,51) output(18,worse,31) output(18,worse,60) output(18,worse,79) output(72,worse,51) output(72,worse,31) output(72,worse,79) output(4,worse,72) output(4,worse,90) output(4,worse,51) output(4,worse,31) output(37,worse,60) output(42,worse,90) output(42,worse,51) output(42,worse,31) output(42,worse,79) output(42,worse,60) output(92,worse,76) output(92,worse,72) output(92,worse,51) output(92,worse,90) output(92,worse,31) output(92,worse,32) output(92,worse,60) output(92,worse,79) output(7,worse,31) output(7,worse,51) output(23,worse,51) output(23,worse,31) output(23,worse,79) output(32,worse,31) output(32,worse,51) output(41,worse,51) output(41,worse,31) output(41,worse,79) output(90,worse,51) output(90,worse,31) output(90,worse,79) output(76,worse,31) output(76,worse,51) output(76,worse,79) output(7,eq,23) output(79,eq,31) output(32,eq,76) output(42,eq,18) output(18,eq,37) output(42,eq,37) output(76,eq,72) output(51,eq,31) output(72,eq,90) output(4,eq,42) output(76,eq,90) output(41,eq,76) output(32,eq,72) output(4,eq,18) output(4,eq,37) output(92,eq,37) output(92,eq,18) output(41,eq,72) output(78,eq,31) output(78,eq,51) output(32,eq,90) output(41,eq,90) output(92,eq,42) output(51,eq,79) output(41,eq,32) output(92,eq,4) output(90,eq,60) output(72,eq,60) output(76,eq,60) output(41,eq,60)
Optimization: 71 2
Answer: 4
preference(1,(1,13),1,for(atom(hasIngredient(7))),8) preference(1,(1,14),1,for(atom(hasIngredient(9))),3) preference(1,less(weight)) output(51,better,31) output(51,better,79) output(72,better,42) output(72,better,18) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,18) output(4,better,37) output(4,better,31) output(42,better,18) output(42,better,37) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,76) output(92,better,37) output(92,better,18) output(92,better,31) output(92,better,32) output(92,better,60) output(92,better,79) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,37) output(32,better,18) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,37) output(78,better,18) output(90,better,18) output(90,better,37) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,18) output(76,better,37) output(18,worse,51) output(18,worse,31) output(18,worse,60) output(18,worse,79) output(4,worse,72) output(4,worse,90) output(4,worse,51) output(37,worse,60) output(42,worse,90) output(42,worse,51) output(92,worse,72) output(92,worse,51) output(92,worse,90) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,31) output(7,worse,51) output(23,worse,72) output(23,worse,90) output(23,worse,51) output(32,worse,42) output(32,worse,72) output(32,worse,51) output(32,worse,90) output(78,worse,23) output(78,worse,72) output(78,worse,42) output(78,worse,51) output(78,worse,90) output(76,worse,72) output(76,worse,42) output(76,worse,90) output(76,worse,51) output(76,worse,4) output(79,eq,31) output(32,eq,76) output(18,eq,37) output(90,eq,51) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(72,eq,51) output(7,eq,18) output(7,eq,37) output(41,eq,72) output(76,eq,31) output(32,eq,31) output(78,eq,31) output(41,eq,51) output(41,eq,90) output(92,eq,42) output(92,eq,4) output(76,eq,60) output(76,eq,79)
Optimization: 56 2
Answer: 5
preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(9))),3) preference(1,less(weight)) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,42) output(72,better,18) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,37) output(4,better,31) output(42,better,37) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,37) output(92,better,31) output(92,better,60) output(92,better,79) output(7,better,37) output(7,better,31) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(41,better,92) output(41,better,37) output(41,better,18) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,23) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(90,better,18) output(90,better,37) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,4) output(76,better,60) output(76,better,79) output(18,worse,51) output(4,worse,72) output(4,worse,90) output(4,worse,51) output(37,worse,60) output(42,worse,90) output(42,worse,51) output(92,worse,76) output(92,worse,72) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(7,worse,72) output(7,worse,90) output(7,worse,51) output(23,worse,72) output(23,worse,90) output(23,worse,51) output(7,eq,23) output(79,eq,31) output(32,eq,76) output(42,eq,18) output(76,eq,72) output(90,eq,51) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(78,eq,72) output(7,eq,42) output(76,eq,90) output(72,eq,51) output(41,eq,76) output(32,eq,72) output(23,eq,18) output(4,eq,18) output(7,eq,18) output(92,eq,18) output(41,eq,72) output(76,eq,51) output(32,eq,51) output(41,eq,51) output(78,eq,51) output(78,eq,90) output(32,eq,90) output(41,eq,90) output(92,eq,42) output(41,eq,32) output(92,eq,4)
Optimization: 48 2
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasCategory(3))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),7) preference(1,(1,8),1,for(atom(hasCategory(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasCost(3))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasIngredient(9))),7) preference(1,less(weight)) output(51,better,31) output(72,better,18) output(72,better,37) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(79,better,31) output(92,better,76) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,60) output(23,better,72) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,37) output(78,better,18) output(78,better,31) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,60) output(18,worse,51) output(18,worse,31) output(18,worse,79) output(51,worse,79) output(72,worse,42) output(72,worse,90) output(72,worse,51) output(72,worse,31) output(72,worse,79) output(4,worse,90) output(42,worse,90) output(92,worse,90) output(92,worse,32) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,31) output(7,worse,51) output(23,worse,42) output(23,worse,90) output(23,worse,79) output(78,worse,42) output(78,worse,90) output(76,worse,42) output(76,worse,90) output(76,worse,4) output(76,worse,79) output(18,eq,37) output(4,eq,42) output(78,eq,23) output(23,eq,51) output(7,eq,18) output(7,eq,37) output(76,eq,51) output(78,eq,51) output(32,eq,90) output(41,eq,90) output(92,eq,42) output(37,eq,60) output(18,eq,60) output(41,eq,32) output(42,eq,79) output(92,eq,4) output(92,eq,79)
Optimization: 45 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasCategory(1))),4) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasIngredient(7))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,10),1,for(atom(hasIngredient(9))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,18) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,18) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,76) output(92,better,18) output(92,better,31) output(92,better,32) output(92,better,60) output(92,better,79) output(7,better,18) output(7,better,31) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,31) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,90) output(90,better,18) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,18) output(76,better,31) output(76,better,60) output(76,better,79) output(18,worse,51) output(18,worse,37) output(72,worse,42) output(72,worse,90) output(72,worse,51) output(72,worse,37) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,37) output(79,worse,31) output(92,worse,37) output(92,worse,51) output(92,worse,90) output(92,worse,42) output(7,worse,23) output(7,worse,42) output(7,worse,90) output(7,worse,37) output(7,worse,51) output(32,worse,76) output(32,worse,42) output(32,worse,72) output(32,worse,37) output(32,worse,51) output(32,worse,90) output(78,worse,23) output(90,worse,51) output(76,worse,72) output(76,worse,42) output(76,worse,90) output(76,worse,37) output(76,worse,51) output(76,worse,4) output(4,eq,72) output(90,eq,37) output(42,eq,51) output(7,eq,72) output(78,eq,42) output(92,eq,72) output(32,eq,18) output(78,eq,51) output(92,eq,4)
Optimization: 43 14
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(12))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(4))),2) preference(1,(1,9),1,for(atom(hasIngredient(9))),4) preference(1,(1,10),1,for(atom(hasCost(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(3))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(51,better,31) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,37) output(42,better,37) output(79,better,31) output(92,better,37) output(92,better,42) output(92,better,31) output(92,better,4) output(7,better,37) output(23,better,42) output(23,better,51) output(23,better,37) output(23,better,31) output(23,better,60) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,23) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(18,worse,79) output(51,worse,79) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,31) output(37,worse,60) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,31) output(42,worse,79) output(42,worse,60) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(92,worse,60) output(92,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,31) output(7,worse,51) output(23,worse,72) output(23,worse,90) output(23,worse,79) output(90,worse,79) output(76,worse,72) output(76,worse,79) output(78,eq,72) output(76,eq,90) output(32,eq,72) output(23,eq,18)
Optimization: 40 14
Answer: 9
preference(1,(1,1),1,for(atom(hasIngredient(12))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(4))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(51,better,31) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(42,better,37) output(42,better,31) output(79,better,31) output(92,better,37) output(92,better,42) output(92,better,31) output(92,better,4) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(51,worse,79) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,37) output(4,worse,31) output(37,worse,60) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,79) output(42,worse,60) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(92,worse,60) output(92,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,51) output(76,worse,72) output(23,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,90) output(32,eq,72) output(7,eq,37) output(7,eq,31) output(18,eq,60) output(18,eq,79)
Optimization: 38 14
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(12))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(4))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,79) output(51,better,31) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(42,better,37) output(79,better,31) output(92,better,37) output(92,better,42) output(92,better,4) output(7,better,42) output(7,better,37) output(7,better,31) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(51,worse,79) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,37) output(4,worse,31) output(37,worse,60) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,31) output(42,worse,79) output(42,worse,60) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(92,worse,60) output(92,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,90) output(7,worse,18) output(7,worse,51) output(76,worse,72) output(23,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,90) output(32,eq,72) output(92,eq,31) output(18,eq,60)
Optimization: 36 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(12))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(4))),2) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,37) output(42,better,37) output(42,better,31) output(79,better,31) output(92,better,37) output(92,better,42) output(92,better,31) output(92,better,4) output(92,better,60) output(7,better,37) output(7,better,31) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(51,worse,79) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,31) output(37,worse,60) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(92,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,51) output(76,worse,72) output(23,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,90) output(32,eq,72) output(42,eq,60)
Optimization: 32 14
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(12))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(4))),2) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,37) output(42,better,37) output(42,better,31) output(42,better,60) output(79,better,31) output(92,better,37) output(92,better,42) output(92,better,31) output(92,better,4) output(92,better,60) output(7,better,37) output(7,better,31) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,31) output(37,worse,60) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,79) output(92,worse,76) output(92,worse,72) output(92,worse,18) output(92,worse,51) output(92,worse,90) output(92,worse,32) output(92,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,51) output(76,worse,72) output(23,eq,72) output(78,eq,23) output(78,eq,72) output(76,eq,90) output(32,eq,72) output(51,eq,79)
Optimization: 31 14
Answer: 13
preference(1,(1,1),1,for(atom(hasCategory(1))),5) preference(1,(1,2),1,for(atom(hasIngredient(9))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasCategory(3))),1) preference(1,(1,5),1,for(atom(hasCost(3))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasIngredient(7))),2) preference(1,(1,11),1,for(atom(hasIngredient(12))),6) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,60) output(4,better,51) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,60) output(79,better,31) output(92,better,76) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,32) output(92,better,4) output(92,better,60) output(92,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(18,worse,79) output(51,worse,31) output(51,worse,79) output(72,worse,18) output(72,worse,90) output(72,worse,79) output(4,worse,90) output(4,worse,18) output(42,worse,90) output(42,worse,18) output(42,worse,79) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(7,worse,90) output(7,worse,18) output(7,worse,37) output(7,worse,31) output(7,worse,51) output(41,worse,92) output(41,worse,79) output(78,worse,23) output(90,worse,18) output(90,worse,79) output(76,worse,79) output(72,eq,42) output(32,eq,76) output(4,eq,72) output(4,eq,42)
Optimization: 29 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(9))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasCategory(4))),5) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(4,worse,42) output(92,worse,42) output(92,worse,32) output(76,worse,42) output(7,eq,23) output(79,eq,31) output(72,eq,18) output(92,eq,76) output(51,eq,31) output(23,eq,42) output(78,eq,23) output(32,eq,42) output(7,eq,42) output(78,eq,42) output(4,eq,90) output(76,eq,90) output(92,eq,90) output(41,eq,42) output(51,eq,79) output(76,eq,4) output(41,eq,32) output(92,eq,4)
Optimization: 24 14
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(9))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasCategory(4))),5) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(4,worse,42) output(92,worse,42) output(92,worse,32) output(76,worse,42) output(7,eq,23) output(79,eq,31) output(72,eq,18) output(92,eq,76) output(23,eq,42) output(78,eq,23) output(32,eq,42) output(7,eq,42) output(78,eq,42) output(4,eq,90) output(76,eq,90) output(92,eq,90) output(41,eq,42) output(76,eq,4) output(41,eq,32) output(92,eq,4)
Optimization: 22 14
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(9))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasCategory(4))),5) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(92,worse,32) output(7,eq,23) output(42,eq,90) output(79,eq,31) output(72,eq,18) output(92,eq,76) output(4,eq,42) output(78,eq,23) output(76,eq,42) output(4,eq,90) output(76,eq,90) output(92,eq,90) output(92,eq,42) output(76,eq,4) output(41,eq,32) output(92,eq,4)
Optimization: 18 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(9))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasCategory(4))),5) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasCategory(3))),1) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(4,worse,42) output(4,worse,90) output(92,worse,76) output(92,worse,90) output(92,worse,42) output(92,worse,32) output(76,worse,42) output(7,eq,23) output(79,eq,31) output(72,eq,18) output(78,eq,23) output(76,eq,90) output(41,eq,32) output(92,eq,4)
Optimization: 16 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasCategory(4))),3) preference(1,(1,5),1,for(atom(hasCategory(3))),3) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasCost(3))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(7,worse,23) output(7,worse,42) output(7,worse,90) output(41,eq,92) output(32,eq,76) output(72,eq,18) output(92,eq,76) output(4,eq,42) output(78,eq,23) output(41,eq,76) output(51,eq,79) output(92,eq,32) output(41,eq,32)
Optimization: 15 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasCategory(4))),3) preference(1,(1,5),1,for(atom(hasCategory(3))),3) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasCost(3))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),2) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(7,worse,23) output(7,worse,42) output(7,worse,90) output(41,eq,92) output(32,eq,76) output(72,eq,18) output(92,eq,76) output(4,eq,42) output(78,eq,23) output(41,eq,76) output(92,eq,32) output(41,eq,32)
Optimization: 14 14
Answer: 20
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasCategory(1))),8) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),7) preference(1,(1,10),1,for(atom(hasCost(3))),4) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasDifficulty(4))),7) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,31) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(51,worse,31) output(51,worse,79) output(72,worse,42) output(92,worse,76) output(92,worse,32) output(7,worse,23) output(90,worse,18) output(79,eq,31) output(72,eq,18) output(4,eq,42) output(92,eq,42) output(41,eq,32) output(92,eq,4)
Optimization: 13 14
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasIngredient(7))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasIngredient(12))),1) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(51,better,31) output(51,better,79) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(18,worse,51) output(18,worse,79) output(92,worse,76) output(92,worse,32) output(7,worse,23) output(7,worse,72) output(7,worse,42) output(72,eq,42) output(32,eq,76) output(4,eq,72) output(90,eq,51) output(4,eq,42) output(18,eq,31)
Optimization: 13 13
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(3))),3) preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasIngredient(9))),3) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasIngredient(3))),1) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasCategory(3))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,18) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,76) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,42) output(92,better,31) output(92,better,32) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,42) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(4,worse,90) output(42,worse,90) output(92,worse,90) output(7,worse,23) output(7,worse,90) output(32,worse,90) output(76,worse,90) output(32,eq,76) output(4,eq,42) output(23,eq,90)
Optimization: 12 14
Answer: 23
preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasCost(4))),1) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasCategory(1))),8) preference(1,(1,10),1,for(atom(hasCategory(3))),4) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,18) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,31) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(72,worse,42) output(72,worse,90) output(4,worse,42) output(4,worse,90) output(42,worse,90) output(92,worse,76) output(92,worse,90) output(92,worse,42) output(92,worse,32) output(78,eq,23) output(76,eq,90)
Optimization: 11 11
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasCategory(1))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasCategory(5))),2) preference(1,(1,7),1,for(atom(hasCategory(3))),2) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasIngredient(4))),2) preference(1,(1,13),1,for(atom(hasCategory(4))),1) preference(1,(1,14),1,for(atom(hasDifficulty(3))),1) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,72) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79) output(72,worse,42) output(92,worse,32) output(7,worse,23) output(7,worse,42) output(90,worse,18) output(72,eq,18) output(92,eq,76) output(4,eq,42) output(78,eq,23) output(41,eq,32)
Optimization: 10 12
Answer: 25
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasCost(4))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(3))),1) preference(1,(1,7),1,for(atom(hasIngredient(12))),3) preference(1,(1,8),1,for(atom(hasCategory(1))),7) preference(1,(1,9),1,for(atom(hasCost(3))),5) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasCategory(5))),2) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),1) preference(1,less(weight)) output(18,better,51) output(18,better,37) output(18,better,31) output(18,better,60) output(18,better,79) output(51,better,31) output(51,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,37) output(72,better,31) output(72,better,79) output(72,better,60) output(4,better,72) output(4,better,42) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(4,better,31) output(37,better,60) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,31) output(42,better,79) output(42,better,60) output(79,better,31) output(92,better,76) output(92,better,72) output(92,better,37) output(92,better,18) output(92,better,51) output(92,better,90) output(92,better,42) output(92,better,31) output(92,better,32) output(92,better,4) output(92,better,60) output(92,better,79) output(7,better,23) output(7,better,72) output(7,better,42) output(7,better,90) output(7,better,18) output(7,better,37) output(7,better,31) output(7,better,51) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,31) output(23,better,60) output(23,better,79) output(32,better,76) output(32,better,42) output(32,better,72) output(32,better,37) output(32,better,18) output(32,better,31) output(32,better,51) output(32,better,90) output(41,better,92) output(41,better,76) output(41,better,37) output(41,better,18) output(41,better,72) output(41,better,51) output(41,better,90) output(41,better,42) output(41,better,31) output(41,better,32) output(41,better,4) output(41,better,79) output(41,better,60) output(78,better,23) output(78,better,72) output(78,better,42) output(78,better,37) output(78,better,18) output(78,better,31) output(78,better,51) output(78,better,90) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,31) output(90,better,79) output(90,better,60) output(76,better,72) output(76,better,42) output(76,better,90) output(76,better,18) output(76,better,37) output(76,better,31) output(76,better,51) output(76,better,4) output(76,better,60) output(76,better,79)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.072 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 0 14
Calls        : 1
Time         : 297.947s (Solving: 293.88s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1179.288s
Threads      : 4        (Winner: 4)

Choices      : 5780282  (Domain: 209553)
Conflicts    : 4445342  (Analyzed: 4445340)
Restarts     : 3869     (Average: 1148.96 Last: 152474)
Model-Level  : 33.0    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 4506566  (Deleted: 4237967)
  Binary     : 475      (Ratio:   0.01%)
  Ternary    : 3032     (Ratio:   0.07%)
  Conflict   : 4445340  (Average Length:  402.9 Ratio:  98.64%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 61226    (Average Length:   44.3 Ratio:   1.36%) 
  Distributed: 20458    (Ratio:   0.46% Average LBD: 3.71) 
  Integrated : 61374    (Ratio: 300.00% Unit: 125 Average Jumps: 5.78)
Backjumps    : 4445340  (Average:  1.25 Max: 1034 Sum: 5569592)
  Executed   : 4445337  (Average:  1.25 Max: 1034 Sum: 5569493 Ratio: 100.00%)
  Bounded    : 3        (Average: 33.00 Max:  95 Sum:     99 Ratio:   0.00%)

Rules        : 1089347 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 20908   
Bodies       : 19684   
  Sum        : 210     
  Count      : 14      
Equivalences : 9525     (Atom=Atom: 1063 Body=Body: 434 Other: 8028)
Tight        : Yes
Variables    : 17355    (Eliminated:    0 Frozen: 8031)
Constraints  : 1104838  (Binary:  98.8% Ternary:   0.9% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCost(3)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCategory(5)) ; 
  2 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCost(3)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCategory(5)) ; 
  8 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) 
}.
