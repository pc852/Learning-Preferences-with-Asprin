asprin_vL version 1.0
Reading from stdin
-:1314:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1339:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1420:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1694:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1871:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2072:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2076:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2076:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2082:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2181:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2207:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2327:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2361:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2383:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1231:1-16: info: no atoms over signature occur in program:
  output/3

-:1223:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1224:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1225:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1226:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1256:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,5),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasCategory(3))),()) preference(1,(1,2),4,for(atom(hasCategory(1))),()) preference(1,(1,3),4,for(atom(hasCost(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasCost(1))),()) preference(1,aso) output(52,better,67) output(76,better,51) output(8,better,67) output(52,better,51) output(8,better,51) output(51,worse,57) output(67,worse,57) output(67,worse,76) output(51,worse,71) output(67,worse,71) output(99,eq,55) output(71,eq,57) output(78,eq,86) output(86,eq,75) output(75,eq,25) output(78,eq,75) output(52,eq,86) output(8,eq,52) output(55,eq,91) output(67,eq,51) output(76,eq,57) output(8,eq,86) output(52,eq,75) output(86,eq,25) output(78,eq,25) output(52,eq,25) output(8,eq,25) output(55,eq,62) output(99,eq,62) output(8,eq,75) output(52,eq,57) output(8,eq,57) output(99,eq,91) output(52,eq,78) output(25,eq,17) output(62,eq,94) output(52,eq,76) output(8,eq,76) output(8,eq,78) output(75,eq,17) output(86,eq,17) output(52,eq,17) output(55,eq,94) output(52,eq,71) output(8,eq,71) output(8,eq,17)
Optimization: 80 6
Answer: 2
preference(1,(1,5),4,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasPrep(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasCategory(3))),()) preference(1,(1,2),4,for(atom(hasCategory(1))),()) preference(1,(1,3),4,for(atom(hasCost(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasCost(1))),()) preference(1,aso) output(52,better,67) output(76,better,91) output(8,better,55) output(75,better,62) output(86,better,62) output(76,better,51) output(8,better,67) output(52,better,91) output(52,better,51) output(78,better,62) output(52,better,62) output(8,better,62) output(8,better,51) output(8,better,91) output(8,better,99) output(25,better,94) output(25,better,17) output(52,better,76) output(75,better,94) output(86,better,94) output(75,better,17) output(86,better,17) output(52,better,17) output(52,better,94) output(8,better,94) output(55,worse,52) output(62,worse,25) output(51,worse,57) output(99,worse,52) output(8,worse,52) output(91,worse,57) output(76,worse,57) output(55,worse,86) output(99,worse,86) output(8,worse,86) output(55,worse,75) output(55,worse,25) output(99,worse,25) output(8,worse,25) output(99,worse,75) output(8,worse,75) output(67,worse,57) output(55,worse,57) output(99,worse,57) output(8,worse,57) output(67,worse,76) output(51,worse,71) output(55,worse,78) output(91,worse,71) output(55,worse,76) output(67,worse,71) output(8,worse,78) output(62,worse,17) output(55,worse,17) output(55,worse,71) output(8,worse,71) output(99,eq,55) output(71,eq,57) output(78,eq,86) output(86,eq,75) output(75,eq,25) output(78,eq,75) output(52,eq,86) output(55,eq,91) output(67,eq,51) output(52,eq,75) output(86,eq,25) output(78,eq,25) output(52,eq,25) output(55,eq,62) output(99,eq,62) output(52,eq,57) output(99,eq,91) output(52,eq,78) output(62,eq,94) output(8,eq,76) output(55,eq,94) output(52,eq,71) output(8,eq,17)
Optimization: 60 6
Answer: 3
preference(1,(1,5),4,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasPrep(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasCategory(3))),()) preference(1,(1,2),4,for(atom(hasCategory(1))),()) preference(1,(1,3),4,for(atom(hasCost(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasCost(1))),()) preference(1,aso) output(52,better,67) output(76,better,91) output(8,better,55) output(75,better,62) output(75,better,25) output(86,better,62) output(76,better,51) output(8,better,52) output(8,better,67) output(52,better,91) output(55,better,91) output(76,better,57) output(78,better,62) output(86,better,25) output(78,better,25) output(8,better,25) output(8,better,62) output(8,better,57) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(75,better,94) output(86,better,94) output(75,better,17) output(86,better,17) output(8,better,94) output(8,better,71) output(8,better,17) output(52,worse,86) output(67,worse,51) output(91,worse,57) output(55,worse,86) output(99,worse,86) output(52,worse,75) output(55,worse,75) output(99,worse,75) output(67,worse,57) output(67,worse,76) output(52,worse,78) output(55,worse,78) output(91,worse,71) output(52,worse,76) output(55,worse,76) output(67,worse,71) output(99,eq,55) output(71,eq,57) output(78,eq,86) output(86,eq,75) output(78,eq,75) output(8,eq,86) output(52,eq,25) output(55,eq,62) output(99,eq,62) output(8,eq,75) output(52,eq,57) output(25,eq,17) output(62,eq,94) output(8,eq,76) output(8,eq,78) output(52,eq,17) output(55,eq,94) output(52,eq,71)
Optimization: 56 6
Answer: 4
preference(1,(1,6),4,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasCategory(3))),()) preference(1,(1,2),4,for(atom(hasCategory(1))),()) preference(1,(1,3),4,for(atom(hasCost(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,aso) output(52,better,67) output(76,better,91) output(8,better,55) output(86,better,75) output(86,better,62) output(76,better,51) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(52,better,75) output(52,better,62) output(8,better,62) output(8,better,75) output(8,better,51) output(8,better,91) output(8,better,99) output(52,better,78) output(25,better,94) output(25,better,17) output(8,better,78) output(86,better,94) output(86,better,17) output(52,better,17) output(52,better,94) output(8,better,94) output(52,better,71) output(8,better,71) output(8,better,17) output(99,worse,55) output(55,worse,52) output(71,worse,57) output(78,worse,86) output(62,worse,25) output(75,worse,25) output(51,worse,57) output(99,worse,52) output(91,worse,57) output(55,worse,86) output(99,worse,86) output(78,worse,25) output(55,worse,25) output(99,worse,25) output(99,worse,62) output(99,worse,75) output(67,worse,57) output(55,worse,57) output(99,worse,57) output(67,worse,76) output(51,worse,71) output(91,worse,71) output(55,worse,76) output(78,eq,75) output(52,eq,86) output(8,eq,52) output(76,eq,57) output(8,eq,86) output(86,eq,25) output(52,eq,25) output(8,eq,25) output(55,eq,62) output(52,eq,57) output(8,eq,57) output(99,eq,91) output(62,eq,94) output(52,eq,76) output(8,eq,76) output(75,eq,17) output(55,eq,94)
Optimization: 55 6
Answer: 5
preference(1,(1,5),4,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasIngredient(6))),()) preference(1,(1,2),4,for(atom(hasCost(5))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasPrep(2))),()) preference(1,aso) output(76,better,91) output(71,better,57) output(78,better,86) output(75,better,62) output(62,better,25) output(75,better,25) output(76,better,51) output(67,better,91) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(76,better,57) output(78,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(75,better,94) output(75,better,17) output(86,worse,75) output(52,worse,75) output(55,worse,75) output(99,worse,75) output(8,worse,75) output(51,worse,71) output(52,worse,78) output(25,worse,94) output(25,worse,17) output(55,worse,78) output(91,worse,71) output(8,worse,78) output(99,eq,55) output(55,eq,52) output(52,eq,67) output(8,eq,55) output(86,eq,62) output(78,eq,75) output(52,eq,86) output(55,eq,67) output(99,eq,52) output(8,eq,52) output(99,eq,67) output(8,eq,67) output(55,eq,86) output(99,eq,86) output(8,eq,86) output(52,eq,62) output(55,eq,62) output(99,eq,62) output(8,eq,62) output(8,eq,99) output(67,eq,76) output(62,eq,94) output(52,eq,76) output(55,eq,76) output(8,eq,76) output(67,eq,71) output(86,eq,94) output(62,eq,17) output(86,eq,17) output(52,eq,17) output(55,eq,17) output(52,eq,94) output(55,eq,94) output(8,eq,94) output(52,eq,71) output(55,eq,71) output(8,eq,71) output(8,eq,17)
Optimization: 53 6
Answer: 6
preference(1,(1,5),4,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(5))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasCategory(3))),()) preference(1,(1,2),4,for(atom(hasCategory(1))),()) preference(1,(1,3),4,for(atom(hasCost(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(8,better,55) output(75,better,62) output(75,better,25) output(52,better,86) output(8,better,67) output(52,better,91) output(52,better,51) output(8,better,86) output(52,better,62) output(52,better,25) output(8,better,25) output(52,better,57) output(8,better,57) output(99,better,91) output(8,better,91) output(52,better,78) output(25,better,94) output(62,better,94) output(52,better,76) output(8,better,76) output(8,better,78) output(75,better,94) output(86,better,94) output(75,better,17) output(52,better,17) output(52,better,94) output(8,better,94) output(52,better,71) output(8,better,71) output(8,better,17) output(55,worse,52) output(86,worse,75) output(78,worse,75) output(99,worse,52) output(67,worse,51) output(91,worse,57) output(55,worse,86) output(55,worse,75) output(55,worse,25) output(55,worse,62) output(99,worse,75) output(67,worse,57) output(55,worse,57) output(67,worse,76) output(55,worse,78) output(91,worse,71) output(55,worse,76) output(67,worse,71) output(55,worse,17) output(55,worse,71) output(71,eq,57) output(78,eq,86) output(55,eq,91) output(76,eq,57) output(52,eq,75) output(86,eq,25) output(78,eq,25) output(99,eq,62) output(25,eq,17) output(86,eq,17) output(55,eq,94)
Optimization: 52 6
Answer: 7
preference(1,(1,5),4,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasIngredient(6))),()) preference(1,(1,2),4,for(atom(hasCost(5))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasPrep(1))),()) preference(1,aso) output(99,better,55) output(76,better,91) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(75,better,25) output(86,better,62) output(51,better,57) output(67,better,91) output(99,better,52) output(8,better,52) output(52,better,91) output(55,better,91) output(76,better,57) output(78,better,62) output(78,better,25) output(99,better,62) output(8,better,62) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(99,better,91) output(8,better,91) output(51,better,71) output(25,better,94) output(67,better,71) output(75,better,94) output(86,better,94) output(75,better,17) output(8,better,94) output(8,better,71) output(52,worse,67) output(91,worse,51) output(86,worse,75) output(62,worse,25) output(52,worse,86) output(55,worse,67) output(52,worse,51) output(55,worse,86) output(52,worse,75) output(55,worse,75) output(52,worse,25) output(55,worse,25) output(99,worse,75) output(8,worse,75) output(55,worse,51) output(52,worse,78) output(55,worse,78) output(91,worse,71) output(52,worse,76) output(55,worse,76) output(8,worse,78) output(62,worse,17) output(52,worse,17) output(55,worse,17) output(55,eq,52) output(78,eq,75) output(76,eq,51) output(99,eq,67) output(8,eq,67) output(67,eq,51) output(99,eq,86) output(8,eq,86) output(52,eq,62) output(86,eq,25) output(99,eq,25) output(8,eq,25) output(55,eq,62) output(99,eq,51) output(8,eq,51) output(8,eq,99) output(67,eq,76) output(25,eq,17) output(62,eq,94) output(8,eq,76) output(86,eq,17) output(52,eq,94) output(55,eq,94) output(52,eq,71) output(55,eq,71) output(8,eq,17)
Optimization: 51 6
Answer: 8
preference(1,(1,5),4,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,1),3,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasIngredient(6))),()) preference(1,(1,2),4,for(atom(hasCost(5))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasIngredient(9))),()) preference(1,aso) output(99,better,55) output(76,better,91) output(8,better,55) output(78,better,86) output(75,better,62) output(86,better,62) output(78,better,75) output(51,better,57) output(67,better,91) output(52,better,91) output(55,better,91) output(76,better,57) output(78,better,62) output(52,better,62) output(78,better,25) output(99,better,62) output(8,better,62) output(67,better,57) output(52,better,57) output(99,better,57) output(8,better,57) output(99,better,91) output(8,better,91) output(51,better,71) output(25,better,94) output(25,better,17) output(67,better,71) output(75,better,94) output(86,better,94) output(75,better,17) output(86,better,17) output(52,better,17) output(52,better,94) output(8,better,94) output(52,better,71) output(8,better,71) output(8,better,17) output(55,worse,52) output(91,worse,51) output(62,worse,25) output(55,worse,67) output(55,worse,86) output(55,worse,75) output(55,worse,25) output(55,worse,51) output(52,worse,78) output(55,worse,78) output(91,worse,71) output(55,worse,76) output(8,worse,78) output(52,eq,67) output(52,eq,86) output(76,eq,51) output(99,eq,52) output(8,eq,52) output(99,eq,67) output(8,eq,67) output(67,eq,51) output(52,eq,51) output(99,eq,86) output(8,eq,86) output(86,eq,25) output(52,eq,25) output(99,eq,25) output(8,eq,25) output(55,eq,62) output(99,eq,51) output(8,eq,51) output(8,eq,99) output(67,eq,76) output(62,eq,94) output(52,eq,76) output(8,eq,76) output(62,eq,17) output(55,eq,17) output(55,eq,94) output(55,eq,71)
Optimization: 48 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,1),4,for(atom(hasCategory(4))),()) preference(1,aso) output(55,better,52) output(91,better,51) output(71,better,57) output(62,better,25) output(51,better,57) output(99,better,52) output(8,better,52) output(67,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(55,better,75) output(55,better,25) output(99,better,25) output(8,better,25) output(99,better,75) output(8,better,75) output(67,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(67,better,76) output(25,better,17) output(55,better,78) output(91,better,71) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(62,better,17) output(75,better,17) output(86,better,17) output(55,better,17) output(55,better,71) output(8,better,71) output(8,better,17) output(52,worse,67) output(76,worse,91) output(75,worse,62) output(86,worse,62) output(52,worse,86) output(52,worse,91) output(52,worse,51) output(52,worse,75) output(78,worse,62) output(52,worse,62) output(52,worse,25) output(52,worse,78) output(25,worse,94) output(52,worse,76) output(75,worse,94) output(86,worse,94) output(52,worse,17) output(52,worse,94) output(52,worse,71) output(99,eq,55) output(8,eq,55) output(78,eq,86) output(86,eq,75) output(75,eq,25) output(78,eq,75) output(76,eq,51) output(67,eq,91) output(55,eq,67) output(99,eq,67) output(8,eq,67) output(55,eq,91) output(86,eq,25) output(78,eq,25) output(55,eq,62) output(99,eq,62) output(8,eq,62) output(52,eq,57) output(99,eq,91) output(8,eq,91) output(8,eq,99) output(51,eq,71) output(62,eq,94) output(55,eq,94) output(8,eq,94)
Optimization: 44 1
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(1))),()) preference(1,(1,3),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasDifficulty(2))),()) preference(1,(1,1),3,for(atom(hasDifficulty(2))),()) preference(1,(1,3),3,for(atom(hasCategory(4))),()) preference(1,aso) output(52,better,67) output(76,better,91) output(8,better,55) output(78,better,86) output(86,better,75) output(86,better,62) output(78,better,75) output(76,better,51) output(67,better,91) output(55,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(52,better,75) output(78,better,62) output(52,better,62) output(78,better,25) output(55,better,62) output(8,better,62) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(25,better,94) output(25,better,17) output(52,better,76) output(55,better,76) output(8,better,76) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(8,better,17) output(99,worse,55) output(71,worse,57) output(62,worse,25) output(75,worse,25) output(51,worse,57) output(99,worse,52) output(99,worse,67) output(91,worse,57) output(76,worse,57) output(99,worse,86) output(99,worse,25) output(99,worse,62) output(67,worse,57) output(99,worse,57) output(51,worse,71) output(52,worse,78) output(55,worse,78) output(91,worse,71) output(8,worse,78) output(52,eq,86) output(86,eq,25) output(52,eq,25) output(52,eq,57) output(67,eq,76) output(62,eq,94)
Optimization: 42 6
Answer: 11
preference(1,(1,1),0,for(atom(hasCategory(4))),()) preference(1,(1,4),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,4),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(55,better,52) output(75,better,62) output(86,better,62) output(51,better,57) output(99,better,52) output(8,better,52) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(55,better,75) output(78,better,62) output(52,better,62) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(51,better,71) output(25,better,94) output(25,better,17) output(55,better,78) output(91,better,71) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(55,better,71) output(8,better,71) output(8,better,17) output(52,worse,67) output(62,worse,25) output(52,worse,91) output(52,worse,51) output(52,worse,76) output(99,eq,55) output(76,eq,91) output(91,eq,51) output(71,eq,57) output(8,eq,55) output(78,eq,86) output(86,eq,75) output(75,eq,25) output(78,eq,75) output(52,eq,86) output(76,eq,51) output(67,eq,91) output(55,eq,67) output(99,eq,67) output(8,eq,67) output(55,eq,91) output(67,eq,51) output(52,eq,75) output(86,eq,25) output(78,eq,25) output(52,eq,25) output(52,eq,57) output(55,eq,51) output(99,eq,51) output(8,eq,51) output(99,eq,91) output(8,eq,91) output(8,eq,99) output(67,eq,76) output(52,eq,78) output(62,eq,94) output(55,eq,76) output(8,eq,76) output(62,eq,17) output(52,eq,71)
Optimization: 40 2
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(atom(hasIngredient(9))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,(1,2),4,for(atom(hasIngredient(6))),()) preference(1,(1,3),4,for(atom(hasIngredient(7))),()) preference(1,(1,5),4,for(atom(hasIngredient(8))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(71,better,57) output(8,better,55) output(62,better,25) output(75,better,25) output(52,better,86) output(51,better,57) output(67,better,91) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(91,better,57) output(76,better,57) output(99,better,86) output(8,better,86) output(52,better,25) output(99,better,25) output(8,better,25) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(99,better,91) output(8,better,91) output(51,better,71) output(52,better,78) output(25,better,94) output(62,better,94) output(55,better,78) output(52,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(52,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(55,worse,52) output(91,worse,51) output(78,worse,86) output(86,worse,75) output(86,worse,62) output(78,worse,75) output(76,worse,51) output(67,worse,51) output(55,worse,75) output(78,worse,62) output(78,worse,25) output(55,worse,62) output(55,worse,51) output(75,eq,62) output(55,eq,67) output(99,eq,52) output(8,eq,52) output(52,eq,51) output(55,eq,86) output(52,eq,75) output(52,eq,62) output(86,eq,25) output(55,eq,25) output(99,eq,62) output(8,eq,62) output(99,eq,75) output(8,eq,75) output(99,eq,51) output(8,eq,51) output(8,eq,99) output(67,eq,76) output(25,eq,17) output(91,eq,71) output(55,eq,76) output(86,eq,17) output(55,eq,17)
Optimization: 36 3
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(atom(hasCategory(3))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),4,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,4),3,for(atom(hasCategory(4))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(8,better,55) output(62,better,25) output(78,better,75) output(52,better,86) output(76,better,51) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,75) output(55,better,75) output(52,better,62) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(52,better,78) output(25,better,94) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(62,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(71,worse,57) output(75,worse,62) output(86,worse,62) output(78,worse,62) output(67,worse,76) output(75,worse,17) output(8,eq,99)
Optimization: 23 6
Progression : [ 1;23] (Error: 22)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(6))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(7))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasCost(1))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(10))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,(1,1),4,for(atom(hasDifficulty(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(8))),()) preference(1,(1,5),4,for(atom(hasIngredient(9))),()) preference(1,aso) output(55,better,52) output(52,better,67) output(76,better,91) output(8,better,55) output(86,better,75) output(75,better,62) output(62,better,25) output(75,better,25) output(86,better,62) output(76,better,51) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(55,better,91) output(52,better,51) output(76,better,57) output(8,better,86) output(55,better,75) output(78,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(51,better,71) output(25,better,94) output(62,better,94) output(55,better,78) output(91,better,71) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(78,worse,86) output(52,worse,86) output(67,worse,76) output(52,worse,76) output(99,eq,55) output(78,eq,75) output(67,eq,51) output(55,eq,86) output(99,eq,86) output(55,eq,76)
Optimization: 22 6
Progression : [ 2;22] (Error: 10)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),4,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(10))),()) preference(1,(1,2),3,for(atom(hasCost(4))),()) preference(1,(1,4),3,for(atom(hasPrep(6))),()) preference(1,(1,5),3,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,(1,1),4,for(atom(hasPrep(0))),()) preference(1,(1,5),4,for(atom(hasDifficulty(1))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(8,better,55) output(78,better,86) output(86,better,75) output(75,better,62) output(62,better,25) output(75,better,25) output(86,better,62) output(78,better,75) output(52,better,86) output(76,better,51) output(67,better,91) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(99,better,86) output(8,better,86) output(52,better,75) output(78,better,62) output(52,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(99,better,25) output(8,better,25) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(62,better,94) output(52,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(52,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(8,better,71) output(8,better,17)
Optimization: 21 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,4),4,for(atom(hasCost(2))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(91,better,51) output(8,better,55) output(78,better,86) output(75,better,62) output(75,better,25) output(78,better,75) output(52,better,86) output(51,better,57) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,75) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(51,better,71) output(25,better,94) output(62,better,94) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(75,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(76,worse,91) output(86,worse,75) output(67,worse,91) output(52,worse,91) output(55,worse,78) output(71,eq,57) output(62,eq,25) output(86,eq,62) output(76,eq,51) output(67,eq,51) output(86,eq,25) output(8,eq,99) output(67,eq,76) output(25,eq,17) output(62,eq,17) output(86,eq,17)
Optimization: 20 3
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),4,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),4,for(atom(hasCost(2))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(91,better,51) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(75,better,25) output(86,better,62) output(78,better,75) output(52,better,86) output(51,better,57) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,75) output(55,better,75) output(78,better,62) output(52,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(51,better,71) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(8,better,78) output(75,better,94) output(86,better,94) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(76,worse,91) output(67,worse,91) output(52,worse,91) output(67,worse,51) output(67,worse,76) output(86,eq,75) output(76,eq,51) output(8,eq,99) output(52,eq,78) output(25,eq,17) output(62,eq,94) output(67,eq,71)
Optimization: 18 3
Progression : [ 3;18] (Error: 5)
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasDifficulty(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasCost(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasIngredient(12))),()) preference(1,(1,3),3,for(atom(hasCategory(1))),()) preference(1,(1,1),4,for(atom(hasDifficulty(1))),()) preference(1,(1,3),4,for(atom(hasIngredient(9))),()) preference(1,(1,5),4,for(atom(hasIngredient(9))),()) preference(1,aso) output(99,better,55) output(55,better,52) output(52,better,67) output(78,better,86) output(86,better,75) output(62,better,25) output(86,better,62) output(78,better,75) output(52,better,86) output(76,better,51) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(55,better,91) output(67,better,51) output(52,better,51) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,75) output(55,better,75) output(78,better,62) output(52,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(51,better,71) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(86,better,94) output(62,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(71,worse,57) output(75,worse,62) output(8,worse,99) output(67,worse,76) output(8,eq,55)
Optimization: 17 6
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),4,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),4,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(10))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasDifficulty(1))),()) preference(1,(1,6),3,for(atom(hasCategory(5))),()) preference(1,(1,1),4,for(atom(hasPrep(0))),()) preference(1,(1,2),4,for(atom(hasPrep(1))),()) preference(1,(1,4),4,for(atom(hasCategory(3))),()) preference(1,(1,5),4,for(atom(hasPrep(3))),()) preference(1,aso) output(99,better,55) output(55,better,52) output(52,better,67) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(62,better,25) output(75,better,25) output(86,better,62) output(76,better,51) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(55,better,91) output(67,better,51) output(52,better,51) output(55,better,86) output(99,better,86) output(8,better,86) output(78,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(67,better,76) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(86,worse,75) output(78,worse,75) output(52,worse,86) output(52,worse,75) output(52,worse,78)
Optimization: 16 6
Answer: 20
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasCost(4))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,(1,5),3,for(atom(hasCategory(3))),()) preference(1,(1,1),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasIngredient(9))),()) preference(1,aso) output(99,better,55) output(55,better,52) output(52,better,67) output(76,better,91) output(71,better,57) output(78,better,86) output(86,better,62) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(55,better,75) output(78,better,62) output(52,better,62) output(86,better,25) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(86,better,94) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(91,worse,51) output(91,worse,71)
Optimization: 15 6
Answer: 21
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,1),3,for(atom(hasCategory(4))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,1),4,for(atom(hasIngredient(9))),()) preference(1,(1,2),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasDifficulty(2))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(71,better,57) output(78,better,86) output(75,better,62) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(99,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(91,worse,51) output(86,worse,75) output(78,worse,75) output(8,worse,99) output(55,eq,52) output(8,eq,55) output(8,eq,52) output(86,eq,25)
Optimization: 14 6
Answer: 22
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,1),4,for(atom(hasPrepTime(2))),()) preference(1,(1,2),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasPrep(7))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(71,better,57) output(78,better,86) output(75,better,62) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(99,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(91,worse,51) output(86,worse,75) output(78,worse,75) output(8,worse,99) output(55,eq,52) output(8,eq,55) output(62,eq,25) output(86,eq,62) output(8,eq,52) output(86,eq,25)
Optimization: 13 6
Answer: 23
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),4,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasCategory(2))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(6))),()) preference(1,(1,2),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasCategory(4))),()) preference(1,(1,5),4,for(atom(hasCategory(5))),()) preference(1,aso) output(52,better,67) output(76,better,91) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(62,better,25) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,75) output(55,better,75) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(67,better,76) output(51,better,71) output(52,better,78) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(62,better,17) output(75,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(86,worse,75) output(86,worse,62) output(99,eq,55) output(55,eq,52) output(78,eq,75) output(99,eq,52) output(86,eq,25)
Optimization: 12 6
Answer: 24
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasPrepTime(2))),()) preference(1,(1,2),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasCategory(4))),()) preference(1,(1,5),4,for(atom(hasCategory(5))),()) preference(1,aso) output(55,better,52) output(52,better,67) output(76,better,91) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(62,better,25) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(52,better,75) output(55,better,75) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(67,better,76) output(51,better,71) output(52,better,78) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(62,better,17) output(75,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(99,worse,55) output(86,worse,75) output(86,worse,62) output(78,eq,75) output(99,eq,52) output(86,eq,25)
Optimization: 11 6
Answer: 25
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasPrepTime(2))),()) preference(1,(1,2),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasIngredient(2))),()) preference(1,(1,5),4,for(atom(hasCategory(5))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(86,worse,75) output(78,worse,75) output(55,eq,52) output(62,eq,25) output(86,eq,62) output(86,eq,25) output(8,eq,99)
Optimization: 10 6
Answer: 26
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasPrepTime(2))),()) preference(1,(1,2),4,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasIngredient(5))),()) preference(1,(1,5),4,for(atom(hasCategory(5))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(86,worse,75) output(78,worse,75) output(55,eq,52) output(62,eq,25) output(86,eq,62) output(86,eq,25)
Optimization: 9 6
Answer: 27
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,5),3,for(atom(hasPrep(6))),()) preference(1,(1,1),4,for(atom(hasPrepTime(2))),()) preference(1,(1,2),4,for(atom(hasPrep(6))),()) preference(1,(1,4),4,for(atom(hasPrep(3))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,aso) output(99,better,55) output(52,better,67) output(76,better,91) output(71,better,57) output(8,better,55) output(78,better,86) output(75,better,62) output(62,better,25) output(75,better,25) output(52,better,86) output(51,better,57) output(76,better,51) output(67,better,91) output(55,better,67) output(99,better,52) output(8,better,52) output(99,better,67) output(8,better,67) output(52,better,91) output(55,better,91) output(67,better,51) output(52,better,51) output(91,better,57) output(76,better,57) output(55,better,86) output(99,better,86) output(8,better,86) output(78,better,62) output(52,better,62) output(78,better,25) output(52,better,25) output(55,better,25) output(99,better,25) output(8,better,25) output(55,better,62) output(99,better,62) output(8,better,62) output(99,better,75) output(8,better,75) output(67,better,57) output(52,better,57) output(55,better,57) output(99,better,57) output(8,better,57) output(55,better,51) output(99,better,51) output(8,better,51) output(99,better,91) output(8,better,91) output(8,better,99) output(67,better,76) output(51,better,71) output(52,better,78) output(25,better,94) output(25,better,17) output(62,better,94) output(55,better,78) output(91,better,71) output(52,better,76) output(55,better,76) output(8,better,76) output(67,better,71) output(8,better,78) output(75,better,94) output(86,better,94) output(62,better,17) output(75,better,17) output(86,better,17) output(52,better,17) output(55,better,17) output(52,better,94) output(55,better,94) output(8,better,94) output(52,better,71) output(55,better,71) output(8,better,71) output(8,better,17) output(91,worse,51) output(86,worse,75) output(86,worse,62) output(78,worse,75) output(55,eq,52) output(86,eq,25)
Optimization: 8 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.030 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 27+
  Optimum    : unknown
Optimization : 8 6
Bounds       : [3;8] [0;6]
Calls        : 1
Time         : 298.016s (Solving: 272.94s 1st Model: 1.26s Unsat: 0.00s)
CPU Time     : 1114.749s
Threads      : 4        (Winner: 4)

Choices      : 5926047  (Domain: 151386)
Conflicts    : 790689   (Analyzed: 790686)
Restarts     : 860      (Average: 919.40 Last: 78330)
Model-Level  : 951.7   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1177672  (Deleted: 967320)
  Binary     : 14264    (Ratio:   1.21%)
  Ternary    : 58841    (Ratio:   5.00%)
  Conflict   : 790686   (Average Length:  622.7 Ratio:  67.14%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 386986   (Average Length:   69.9 Ratio:  32.86%) 
  Distributed: 129004   (Ratio:  16.32% Average LBD: 3.34) 
  Integrated : 387009   (Ratio: 300.00% Unit: 1524 Average Jumps: 122.87)
Backjumps    : 790686   (Average:  6.91 Max: 2704 Sum: 5465888)
  Executed   : 790635   (Average:  6.91 Max: 2704 Sum: 5463844 Ratio:  99.96%)
  Bounded    : 51       (Average: 40.08 Max:  84 Sum:   2044 Ratio:   0.04%)

Rules        : 11328064
  Choice     : 31      
  Minimize   : 2       
Atoms        : 2241214 
Bodies       : 2663714 
  Count      : 3090    
Equivalences : 6948788  (Atom=Atom: 2007874 Body=Body: 2191574 Other: 2749340)
Tight        : Yes
Variables    : 236287   (Eliminated:    0 Frozen: 154237)
Constraints  : 9315515  (Binary:  97.5% Ternary:   2.3% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCategory(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) >> not atom(hasCategory(3))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasIngredient(1)) >> atom(hasCategory(3)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCategory(1)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(2)) >> atom(hasCost(1)) >> not atom(hasCategory(4))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasIngredient(1)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCategory(1)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasPrepTime(3))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasIngredient(1)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(5)) >> atom(hasCost(1)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasIngredient(5)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasDifficulty(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> atom(hasPrep(4)) >> atom(hasIngredient(6)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasCost(5)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasPrep(4)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(2)) >> atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(1)) >> atom(hasPrep(4)) >> atom(hasCost(1)) >> not atom(hasCategory(2))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> atom(hasPrep(4)) >> atom(hasIngredient(6)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasCost(5)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(5)) >> atom(hasCost(1)) >> atom(hasPrep(4)) >> not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> atom(hasPrep(4)) >> atom(hasIngredient(6)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasCost(5)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(5)) >> atom(hasCost(1)) >> atom(hasPrep(4)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(2)) >> atom(hasPrep(4)) >> atom(hasIngredient(1)) >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> not atom(hasPrepTime(2))  >> not atom(hasDifficulty(2))  >> atom(hasCategory(4)) || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(7)) >> atom(hasDifficulty(2)) >> not atom(hasCost(1))  || not atom(hasCategory(2))  ; 
  not atom(hasIngredient(7))  >> not atom(hasDifficulty(2))  || atom(hasDifficulty(1)) ; 
  not atom(hasIngredient(9))  >> not atom(hasCategory(5))  >> atom(hasCategory(4)) >> not atom(hasPrep(1))  || atom(hasPrepTime(2)) ; 
  atom(hasCategory(4)) >> not atom(hasIngredient(5))  >> not atom(hasPrep(3))  || not atom(hasCategory(4))  ; 
  not atom(hasPrep(2))  >> atom(hasDifficulty(2)) >> not atom(hasIngredient(9))  || atom(hasCategory(1)) ; 
  not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasCategory(3))  >> atom(hasPrepTime(3)) || atom(hasCategory(4)) ; 
  atom(hasPrep(7)) >> atom(hasCategory(4)) >> atom(hasIngredient(9)) || not atom(hasCost(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(6))  >> atom(hasIngredient(6)) || not atom(hasCategory(2))  ; 
  not atom(hasCategory(1))  >> not atom(hasCategory(3))  >> not atom(hasCategory(2))  >> atom(hasIngredient(7)) || atom(hasIngredient(9)) ; 
  not atom(hasIngredient(1))  >> not atom(hasCategory(3))  >> atom(hasCost(2)) >> atom(hasIngredient(8)) || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(7)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(2)) >> not atom(hasCategory(3))  || not atom(hasCategory(2))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasCost(1))  >> not atom(hasCategory(2))  >> not atom(hasCategory(1))  || atom(hasCategory(3)) ; 
  not atom(hasIngredient(7))  >> atom(hasPrep(6)) >> atom(hasCategory(4)) || not atom(hasDifficulty(3))  ; 
  not atom(hasCategory(3))  >> not atom(hasIngredient(6))  >> not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasCost(1)) ; 
  not atom(hasCategory(1))  >> not atom(hasPrep(2))  >> atom(hasPrep(7)) >> not atom(hasIngredient(11))  || atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> atom(hasCost(5)) >> not atom(hasPrep(0))  >> atom(hasDifficulty(2)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(10)) >> not atom(hasPrep(6))  >> atom(hasDifficulty(1)) || not atom(hasIngredient(7))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(0)) >> atom(hasCost(5)) >> atom(hasIngredient(8)) || atom(hasIngredient(6)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(5)) >> not atom(hasCost(1))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasIngredient(10)) >> atom(hasIngredient(9)) || not atom(hasCategory(2))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(1)) >> atom(hasCategory(2)) >> not atom(hasCost(1))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(10)) >> atom(hasPrep(0)) || not atom(hasCategory(2))  ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(2)) >> atom(hasCost(4)) >> not atom(hasDifficulty(3))  || not atom(hasCategory(2))  ; 
  atom(hasIngredient(2)) >> not atom(hasIngredient(6))  >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasIngredient(3)) >> atom(hasPrepTime(1)) >> atom(hasPrep(6)) || not atom(hasCost(4))  ; 
  atom(hasCost(3)) >> not atom(hasCategory(4))  >> atom(hasPrep(3)) >> atom(hasDifficulty(1)) || not atom(hasIngredient(10))  ; 
  not atom(hasPrep(1))  >> atom(hasIngredient(5)) >> atom(hasDifficulty(1)) >> not atom(hasIngredient(3))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCost(5))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasCategory(1))  >> atom(hasCost(2)) || atom(hasCategory(2)) ; 
  atom(hasPrep(7)) >> atom(hasCost(5)) >> not atom(hasDifficulty(3))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasCost(5)) >> not atom(hasPrep(0))  >> not atom(hasDifficulty(3))  || not atom(hasPrep(7))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasCategory(1))  >> atom(hasCost(2)) || atom(hasCategory(2)) ; 
  atom(hasDifficulty(3)) >> atom(hasPrepTime(3)) >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(10)) >> atom(hasPrep(0)) >> atom(hasDifficulty(1)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(2)) >> not atom(hasCost(3))  >> atom(hasIngredient(12)) || not atom(hasIngredient(11))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(10)) >> atom(hasCategory(1)) >> atom(hasIngredient(9)) || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(2)) >> not atom(hasIngredient(7))  || not atom(hasDifficulty(3))  ; 
  atom(hasCategory(2)) >> atom(hasCost(4)) >> not atom(hasPrep(6))  >> atom(hasIngredient(9)) || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(11)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(10)) >> atom(hasDifficulty(1)) >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(12)) >> not atom(hasDifficulty(3))  >> atom(hasPrep(1)) || not atom(hasPrep(7))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> not atom(hasCost(1))  >> not atom(hasCost(4))  || not atom(hasIngredient(11))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(7)) >> not atom(hasCost(5))  >> atom(hasCategory(3)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(4)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(3))  ; 
  atom(hasCost(5)) >> not atom(hasPrepTime(3))  >> atom(hasCategory(5)) >> not atom(hasIngredient(7))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasCategory(1)) >> not atom(hasIngredient(7))  >> atom(hasDifficulty(1)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(1)) >> not atom(hasCost(5))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(5)) >> not atom(hasCost(3))  >> atom(hasIngredient(9)) || not atom(hasCategory(2))  ; 
  atom(hasPrep(7)) >> not atom(hasCategory(3))  >> atom(hasCategory(3)) || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> atom(hasCost(4)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasCost(5)) >> atom(hasCategory(4)) >> atom(hasIngredient(9)) || not atom(hasIngredient(3))  ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  not atom(hasIngredient(9))  >> atom(hasIngredient(10)) >> atom(hasCategory(5)) >> atom(hasDifficulty(2)) || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(8)) >> atom(hasPrep(0)) >> atom(hasIngredient(5)) || not atom(hasIngredient(10))  ; 
  atom(hasCost(3)) >> not atom(hasPrep(4))  >> not atom(hasDifficulty(1))  || not atom(hasIngredient(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasIngredient(1)) >> atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) || atom(hasIngredient(7)) ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  not atom(hasIngredient(9))  >> atom(hasIngredient(1)) >> atom(hasCategory(5)) >> atom(hasPrep(7)) || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(8)) >> atom(hasPrep(0)) >> atom(hasIngredient(5)) || not atom(hasIngredient(10))  ; 
  atom(hasCost(3)) >> not atom(hasPrep(4))  >> not atom(hasDifficulty(1))  || not atom(hasIngredient(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasDifficulty(1)) >> not atom(hasCost(2))  >> not atom(hasPrepTime(3))  || atom(hasIngredient(7)) ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasCategory(4)) || not atom(hasCategory(5))  ; 
  not atom(hasCost(2))  >> not atom(hasDifficulty(2))  >> atom(hasIngredient(6)) >> atom(hasCategory(5)) || not atom(hasCategory(5))  ; 
  atom(hasIngredient(1)) >> atom(hasCategory(2)) >> not atom(hasPrep(4))  || not atom(hasIngredient(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasDifficulty(1)) >> atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) || atom(hasIngredient(7)) ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(1)) >> atom(hasCategory(5)) >> atom(hasCategory(4)) || not atom(hasCategory(5))  ; 
  not atom(hasCost(2))  >> not atom(hasDifficulty(2))  >> atom(hasIngredient(6)) >> atom(hasCategory(5)) || not atom(hasCategory(5))  ; 
  atom(hasIngredient(1)) >> atom(hasPrep(7)) >> not atom(hasPrep(4))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasDifficulty(3)) >> atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) || atom(hasIngredient(7)) ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(1)) >> atom(hasCategory(5)) >> atom(hasIngredient(2)) || not atom(hasCategory(5))  ; 
  not atom(hasCost(2))  >> not atom(hasDifficulty(2))  >> atom(hasIngredient(6)) >> atom(hasCategory(5)) || not atom(hasCategory(5))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(5)) >> not atom(hasCategory(2))  || not atom(hasIngredient(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasDifficulty(3)) >> atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) || atom(hasIngredient(7)) ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(1)) >> atom(hasCategory(5)) >> atom(hasIngredient(5)) || not atom(hasCategory(5))  ; 
  not atom(hasCost(2))  >> not atom(hasDifficulty(2))  >> atom(hasIngredient(6)) >> atom(hasCategory(5)) || not atom(hasCategory(5))  ; 
  atom(hasCategory(2)) >> atom(hasCost(3)) >> not atom(hasPrep(4))  || not atom(hasIngredient(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasCost(3)) >> atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) || atom(hasIngredient(7)) ; 
  atom(hasIngredient(3)) >> atom(hasCategory(4)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(6)) || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasIngredient(12))  ; 
  not atom(hasDifficulty(2))  >> atom(hasIngredient(1)) >> atom(hasPrep(6)) >> atom(hasIngredient(5)) || not atom(hasPrepTime(2))  ; 
  atom(hasCost(1)) >> atom(hasCost(3)) >> not atom(hasPrep(4))  || not atom(hasCategory(2))  
}.
