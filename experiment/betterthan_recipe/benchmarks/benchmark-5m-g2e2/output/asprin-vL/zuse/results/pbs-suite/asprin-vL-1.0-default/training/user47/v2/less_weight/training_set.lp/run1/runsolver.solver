asprin_vL version 1.0
Reading from stdin
-:1309:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1319:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1334:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1415:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1676:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1689:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1866:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1995:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2067:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2071:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2071:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2077:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2176:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2202:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2322:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2356:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2378:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1226:1-16: info: no atoms over signature occur in program:
  output/3

-:1218:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1219:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(88,eq,22) output(28,eq,100) output(100,eq,19) output(19,eq,73) output(86,eq,68) output(68,eq,50) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(63,eq,73) output(28,eq,63) output(68,eq,46) output(98,eq,46) output(86,eq,50) output(73,eq,68) output(100,eq,73) output(28,eq,19) output(22,eq,100) output(88,eq,100) output(22,eq,19) output(88,eq,19) output(28,eq,73) output(22,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(73,eq,50) output(19,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(22,eq,63) output(88,eq,63) output(63,eq,52) output(100,eq,52) output(28,eq,52) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(68,eq,67) output(98,eq,67) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(19,eq,67) output(65,eq,67) output(63,eq,67) output(100,eq,67) output(28,eq,67) output(52,eq,67) output(63,eq,50) output(100,eq,50) output(28,eq,50) output(28,eq,54) output(22,eq,54) output(88,eq,54) output(22,eq,52) output(88,eq,52) output(19,eq,46) output(65,eq,46) output(63,eq,46) output(100,eq,46) output(28,eq,46) output(22,eq,46) output(22,eq,50) output(88,eq,50) output(28,eq,68) output(22,eq,68) output(88,eq,68) output(88,eq,73) output(88,eq,46) output(22,eq,67) output(88,eq,67) output(22,eq,28) output(73,eq,86) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(68,eq,25) output(52,eq,98) output(100,eq,65) output(19,eq,86) output(63,eq,86) output(100,eq,86) output(22,eq,65) output(73,eq,98) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(22,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,98) output(22,eq,86)
Optimization: 112 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(3))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(22,worse,68) output(19,worse,68) output(28,worse,68) output(63,worse,68) output(100,worse,68) output(65,worse,68) output(73,worse,68) output(86,worse,68) output(28,eq,100) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(63,eq,73) output(28,eq,63) output(98,eq,46) output(86,eq,50) output(100,eq,73) output(28,eq,19) output(22,eq,100) output(22,eq,19) output(28,eq,73) output(22,eq,73) output(73,eq,50) output(19,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(22,eq,63) output(63,eq,52) output(100,eq,52) output(28,eq,52) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(98,eq,67) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(19,eq,67) output(65,eq,67) output(63,eq,67) output(100,eq,67) output(28,eq,67) output(52,eq,67) output(63,eq,50) output(100,eq,50) output(28,eq,50) output(28,eq,54) output(22,eq,54) output(22,eq,52) output(19,eq,46) output(65,eq,46) output(63,eq,46) output(100,eq,46) output(28,eq,46) output(22,eq,46) output(22,eq,50) output(88,eq,68) output(22,eq,67) output(22,eq,28) output(73,eq,86) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(52,eq,98) output(100,eq,65) output(19,eq,86) output(63,eq,86) output(100,eq,86) output(22,eq,65) output(73,eq,98) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(22,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,98) output(22,eq,86)
Optimization: 98 5
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(22,worse,68) output(22,worse,28) output(19,worse,68) output(63,worse,68) output(100,worse,68) output(65,worse,68) output(73,worse,68) output(86,worse,68) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(63,eq,73) output(98,eq,46) output(86,eq,50) output(100,eq,73) output(22,eq,100) output(22,eq,19) output(22,eq,73) output(73,eq,50) output(19,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(22,eq,63) output(63,eq,52) output(100,eq,52) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(98,eq,67) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(19,eq,67) output(65,eq,67) output(63,eq,67) output(100,eq,67) output(52,eq,67) output(63,eq,50) output(100,eq,50) output(22,eq,54) output(22,eq,52) output(19,eq,46) output(65,eq,46) output(63,eq,46) output(100,eq,46) output(22,eq,46) output(22,eq,50) output(28,eq,68) output(88,eq,68) output(22,eq,67) output(73,eq,86) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(52,eq,98) output(100,eq,65) output(19,eq,86) output(63,eq,86) output(100,eq,86) output(22,eq,65) output(73,eq,98) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(22,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,98) output(22,eq,86)
Optimization: 89 3
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),6) preference(1,(1,2),1,for(atom(hasIngredient(3))),6) preference(1,(1,3),1,for(atom(hasIngredient(9))),2) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasCost(3))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasDifficulty(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(12))),5) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(50,better,67) output(88,better,100) output(88,better,19) output(88,better,63) output(54,better,98) output(28,better,100) output(28,better,63) output(28,better,19) output(25,better,67) output(52,better,98) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,67) output(73,better,86) output(73,better,98) output(88,worse,22) output(88,worse,50) output(88,worse,73) output(88,worse,46) output(54,worse,50) output(54,worse,46) output(54,worse,25) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,50) output(19,worse,54) output(19,worse,67) output(19,worse,46) output(19,worse,86) output(19,worse,25) output(28,worse,73) output(28,worse,52) output(28,worse,67) output(28,worse,50) output(28,worse,54) output(28,worse,46) output(28,worse,68) output(63,worse,73) output(63,worse,68) output(63,worse,52) output(63,worse,54) output(63,worse,67) output(63,worse,50) output(63,worse,46) output(63,worse,86) output(63,worse,25) output(98,worse,50) output(98,worse,46) output(98,worse,67) output(100,worse,73) output(100,worse,68) output(100,worse,52) output(100,worse,54) output(100,worse,67) output(100,worse,50) output(100,worse,46) output(100,worse,86) output(100,worse,25) output(52,worse,46) output(52,worse,50) output(52,worse,25) output(65,worse,73) output(65,worse,52) output(65,worse,68) output(65,worse,50) output(65,worse,54) output(65,worse,67) output(65,worse,46) output(68,worse,50) output(68,worse,46) output(68,worse,25) output(86,worse,50) output(86,worse,46) output(100,eq,19) output(86,eq,68) output(50,eq,46) output(100,eq,63) output(52,eq,54) output(73,eq,50) output(73,eq,46) output(68,eq,67) output(54,eq,67) output(86,eq,67) output(52,eq,67) output(88,eq,54) output(88,eq,52) output(88,eq,68) output(88,eq,67) output(63,eq,65) output(50,eq,25) output(100,eq,65) output(19,eq,98) output(73,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 81 14
Answer: 5
preference(1,(1,1),1,for(atom(hasIngredient(3))),8) preference(1,(1,9),1,for(atom(hasIngredient(4))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(25,better,67) output(68,better,50) output(68,better,46) output(68,better,67) output(22,worse,100) output(22,worse,19) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,25) output(22,worse,98) output(50,worse,25) output(54,worse,98) output(54,worse,25) output(52,worse,98) output(52,worse,25) output(65,worse,68) output(73,worse,68) output(73,worse,98) output(73,worse,25) output(86,worse,68) output(28,eq,100) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(65,eq,52) output(28,eq,63) output(86,eq,50) output(28,eq,19) output(88,eq,100) output(88,eq,19) output(22,eq,73) output(19,eq,68) output(63,eq,68) output(100,eq,68) output(73,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(88,eq,63) output(65,eq,54) output(52,eq,50) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(65,eq,67) output(52,eq,67) output(22,eq,54) output(22,eq,52) output(65,eq,46) output(22,eq,46) output(22,eq,50) output(28,eq,68) output(88,eq,68) output(22,eq,67) output(73,eq,86) output(68,eq,25) output(22,eq,65) output(19,eq,98) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,86)
Optimization: 69 4
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(3))),8) preference(1,(1,9),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(25,better,67) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(86,better,50) output(86,better,46) output(86,better,67) output(22,worse,100) output(22,worse,19) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,25) output(22,worse,98) output(22,worse,86) output(50,worse,25) output(54,worse,98) output(54,worse,25) output(52,worse,98) output(52,worse,25) output(73,worse,68) output(73,worse,86) output(73,worse,98) output(73,worse,25) output(28,eq,100) output(100,eq,19) output(86,eq,68) output(50,eq,46) output(100,eq,63) output(73,eq,52) output(52,eq,54) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(28,eq,63) output(28,eq,19) output(88,eq,100) output(88,eq,19) output(22,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(73,eq,50) output(54,eq,46) output(52,eq,46) output(73,eq,46) output(88,eq,63) output(52,eq,50) output(54,eq,67) output(73,eq,67) output(52,eq,67) output(22,eq,54) output(22,eq,52) output(22,eq,46) output(22,eq,50) output(28,eq,68) output(88,eq,68) output(22,eq,67) output(63,eq,65) output(68,eq,25) output(100,eq,65) output(19,eq,86) output(63,eq,86) output(100,eq,86) output(19,eq,98) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 65 3
Answer: 7
preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(54,worse,98) output(52,worse,98) output(73,worse,68) output(73,worse,98) output(86,worse,68) output(28,eq,100) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(73,eq,52) output(52,eq,54) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(28,eq,63) output(86,eq,50) output(28,eq,19) output(88,eq,100) output(88,eq,19) output(22,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(73,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(88,eq,63) output(52,eq,50) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(52,eq,67) output(22,eq,54) output(22,eq,52) output(22,eq,46) output(22,eq,50) output(28,eq,68) output(88,eq,68) output(22,eq,67) output(73,eq,86) output(63,eq,65) output(50,eq,25) output(100,eq,65) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(22,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,86)
Optimization: 62 3
Answer: 8
preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(88,better,22) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,46) output(88,better,67) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(22,worse,100) output(22,worse,19) output(22,worse,73) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(22,worse,65) output(22,worse,98) output(54,worse,98) output(52,worse,98) output(86,worse,68) output(28,eq,100) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(52,eq,54) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(63,eq,73) output(28,eq,63) output(86,eq,50) output(73,eq,68) output(100,eq,73) output(28,eq,19) output(88,eq,100) output(88,eq,19) output(28,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(88,eq,63) output(52,eq,50) output(54,eq,67) output(86,eq,67) output(52,eq,67) output(22,eq,54) output(22,eq,52) output(22,eq,46) output(22,eq,50) output(28,eq,68) output(88,eq,68) output(88,eq,73) output(22,eq,67) output(63,eq,65) output(50,eq,25) output(100,eq,65) output(73,eq,98) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(22,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,86)
Optimization: 61 2
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(1))),5) preference(1,(1,2),1,for(atom(hasCost(3))),5) preference(1,(1,3),1,for(atom(hasCategory(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(12))),7) preference(1,(1,9),1,for(atom(hasIngredient(7))),7) preference(1,(1,10),1,for(atom(hasCategory(4))),7) preference(1,(1,11),1,for(atom(hasIngredient(9))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,25) output(19,better,52) output(19,better,50) output(19,better,46) output(19,better,25) output(28,better,52) output(28,better,50) output(28,better,46) output(63,better,52) output(63,better,50) output(63,better,46) output(63,better,25) output(98,better,50) output(98,better,46) output(100,better,52) output(100,better,50) output(100,better,46) output(100,better,25) output(65,better,52) output(65,better,50) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,52) output(73,better,50) output(73,better,46) output(73,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(50,worse,67) output(54,worse,67) output(19,worse,67) output(19,worse,86) output(28,worse,67) output(63,worse,67) output(63,worse,86) output(98,worse,67) output(100,worse,67) output(100,worse,86) output(25,worse,67) output(52,worse,54) output(52,worse,67) output(52,worse,98) output(65,worse,67) output(68,worse,67) output(73,worse,67) output(73,worse,86) output(28,eq,100) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,54) output(63,eq,73) output(28,eq,63) output(73,eq,68) output(100,eq,73) output(28,eq,19) output(28,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(52,eq,46) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(86,eq,67) output(28,eq,54) output(28,eq,68) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(100,eq,65) output(73,eq,98) output(19,eq,98) output(52,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 53 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(6))),6) preference(1,(1,2),1,for(atom(hasIngredient(3))),6) preference(1,(1,3),1,for(atom(hasCost(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasCost(3))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasDifficulty(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(12))),5) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(50,better,67) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,52) output(88,better,50) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,98) output(54,better,25) output(19,better,52) output(19,better,50) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,46) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(25,better,67) output(65,better,52) output(65,better,50) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,98) output(73,better,25) output(88,worse,22) output(88,worse,73) output(19,worse,73) output(19,worse,68) output(19,worse,54) output(28,worse,73) output(28,worse,54) output(28,worse,68) output(63,worse,73) output(63,worse,68) output(63,worse,54) output(63,worse,65) output(100,worse,73) output(100,worse,68) output(100,worse,54) output(100,worse,65) output(52,worse,54) output(52,worse,46) output(52,worse,50) output(52,worse,98) output(52,worse,25) output(65,worse,73) output(65,worse,68) output(65,worse,54) output(86,worse,68) output(86,worse,50) output(86,worse,46) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(86,eq,67) output(52,eq,67) output(88,eq,54) output(88,eq,68) output(50,eq,25) output(19,eq,98) output(63,eq,98) output(100,eq,98)
Optimization: 38 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasIngredient(10))),1) preference(1,(1,12),1,for(atom(hasIngredient(3))),8) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,67) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(52,better,46) output(52,better,50) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,50) output(73,better,46) output(86,better,50) output(86,better,46) output(22,worse,68) output(22,worse,28) output(50,worse,67) output(50,worse,25) output(88,worse,22) output(88,worse,68) output(54,worse,67) output(54,worse,98) output(54,worse,25) output(19,worse,68) output(19,worse,98) output(63,worse,68) output(100,worse,68) output(25,worse,67) output(52,worse,54) output(52,worse,67) output(52,worse,98) output(52,worse,25) output(65,worse,68) output(73,worse,54) output(73,worse,68) output(73,worse,67) output(73,worse,86) output(73,worse,98) output(73,worse,25) output(86,worse,68) output(50,eq,46) output(100,eq,63) output(88,eq,100) output(88,eq,63) output(86,eq,67) output(28,eq,68) output(63,eq,65) output(100,eq,65) output(63,eq,98) output(100,eq,98)
Optimization: 36 7
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasCategory(4))),6) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasIngredient(3))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasIngredient(4))),7) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(22,better,19) output(22,better,73) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,65) output(22,better,25) output(22,better,86) output(50,better,46) output(50,better,67) output(50,better,25) output(88,better,19) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,67) output(19,better,46) output(19,better,25) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(65,better,73) output(65,better,68) output(65,better,50) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(86,better,50) output(86,better,46) output(86,better,67) output(22,worse,100) output(22,worse,63) output(22,worse,54) output(22,worse,28) output(22,worse,98) output(88,worse,22) output(88,worse,100) output(88,worse,63) output(88,worse,54) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,50) output(19,worse,54) output(19,worse,86) output(19,worse,98) output(25,worse,67) output(52,worse,54) output(52,worse,98) output(65,worse,54) output(73,worse,52) output(73,worse,54) output(73,worse,98) output(28,eq,100) output(86,eq,68) output(65,eq,52) output(63,eq,54) output(88,eq,52) output(54,eq,98) output(63,eq,98)
Optimization: 30 14
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),2) preference(1,(1,6),1,for(atom(hasIngredient(7))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),7) preference(1,(1,13),1,for(atom(hasIngredient(10))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,98) output(54,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(52,better,46) output(52,better,50) output(52,better,25) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,52) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,86) output(73,better,25) output(86,better,50) output(86,better,46) output(50,worse,46) output(50,worse,67) output(50,worse,25) output(88,worse,22) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,54) output(19,worse,67) output(19,worse,46) output(19,worse,86) output(19,worse,98) output(19,worse,25) output(63,worse,54) output(25,worse,67) output(52,worse,54) output(52,worse,67) output(52,worse,98) output(65,worse,73) output(65,worse,54) output(65,worse,67) output(68,worse,67) output(73,worse,54) output(73,worse,67) output(73,worse,98) output(86,worse,67) output(86,eq,68) output(19,eq,50) output(100,eq,54) output(63,eq,98)
Optimization: 30 13
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasIngredient(9))),4) preference(1,(1,4),1,for(atom(hasIngredient(12))),2) preference(1,(1,5),1,for(atom(hasCategory(4))),1) preference(1,(1,6),1,for(atom(hasIngredient(3))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasIngredient(4))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(7))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,67) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(50,better,67) output(50,better,25) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,67) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(25,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(65,better,50) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,25) output(86,better,50) output(86,better,46) output(86,better,67) output(22,worse,100) output(22,worse,68) output(22,worse,28) output(54,worse,98) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,50) output(19,worse,54) output(19,worse,46) output(19,worse,86) output(19,worse,98) output(63,worse,68) output(100,worse,68) output(52,worse,54) output(52,worse,98) output(65,worse,73) output(65,worse,52) output(65,worse,68) output(65,worse,54) output(73,worse,54) output(73,worse,68) output(73,worse,86) output(73,worse,98) output(86,worse,68) output(50,eq,46) output(73,eq,52) output(19,eq,25) output(63,eq,98)
Optimization: 29 13
Answer: 15
preference(1,(1,1),1,for(atom(hasIngredient(9))),5) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,4),1,for(atom(hasCost(3))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasIngredient(10))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasIngredient(7))),8) preference(1,(1,14),1,for(atom(hasIngredient(4))),7) preference(1,less(weight)) output(22,better,19) output(22,better,73) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,67) output(22,better,65) output(22,better,25) output(50,better,46) output(50,better,67) output(50,better,25) output(88,better,22) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,67) output(19,better,46) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(25,better,67) output(52,better,54) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,25) output(86,better,50) output(86,better,46) output(86,better,67) output(22,worse,100) output(22,worse,63) output(22,worse,68) output(22,worse,28) output(88,worse,100) output(54,worse,98) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,50) output(19,worse,54) output(19,worse,86) output(19,worse,98) output(19,worse,25) output(28,worse,100) output(28,worse,68) output(63,worse,68) output(52,worse,98) output(65,worse,68) output(73,worse,68) output(73,worse,86) output(73,worse,98) output(86,worse,68) output(28,eq,63) output(88,eq,68) output(22,eq,98) output(22,eq,86)
Optimization: 27 14
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(3))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasCost(3))),2) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasCategory(4))),2) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasIngredient(7))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,98) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(63,better,73) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,63) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(25,better,67) output(52,better,46) output(52,better,50) output(52,better,67) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,50) output(73,better,46) output(73,better,67) output(86,better,50) output(86,better,46) output(86,better,67) output(22,worse,68) output(50,worse,25) output(88,worse,68) output(54,worse,98) output(19,worse,68) output(28,worse,68) output(63,worse,68) output(100,worse,68) output(52,worse,98) output(65,worse,68) output(73,worse,68) output(73,worse,98) output(86,worse,68) output(88,eq,22) output(100,eq,19) output(50,eq,46) output(73,eq,52) output(52,eq,54) output(50,eq,67) output(73,eq,54) output(73,eq,86) output(63,eq,65) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(63,eq,98)
Optimization: 26 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(1))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasIngredient(7))),1) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasIngredient(12))),7) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,11),1,for(atom(hasCategory(4))),8) preference(1,(1,12),1,for(atom(hasCategory(1))),3) preference(1,(1,13),1,for(atom(hasIngredient(4))),6) preference(1,(1,14),1,for(atom(hasCost(3))),4) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,46) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(52,better,46) output(52,better,50) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,50) output(73,better,46) output(86,better,68) output(86,better,50) output(86,better,46) output(86,better,67) output(50,worse,46) output(50,worse,67) output(50,worse,25) output(88,worse,22) output(88,worse,100) output(88,worse,63) output(54,worse,98) output(28,worse,100) output(28,worse,63) output(28,worse,19) output(28,worse,54) output(28,worse,68) output(52,worse,54) output(52,worse,67) output(52,worse,98) output(52,worse,25) output(65,worse,68) output(65,worse,54) output(73,worse,54) output(73,worse,68) output(73,worse,86) output(73,worse,98) output(25,eq,67) output(73,eq,67) output(19,eq,98) output(73,eq,25)
Optimization: 26 13
Answer: 18
preference(1,(1,1),1,for(atom(hasIngredient(3))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasIngredient(10))),5) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasCategory(1))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),7) preference(1,(1,8),1,for(atom(hasCategory(4))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasIngredient(12))),1) preference(1,(1,12),1,for(atom(hasIngredient(7))),7) preference(1,(1,13),1,for(atom(hasCost(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(50,better,46) output(50,better,67) output(50,better,25) output(88,better,100) output(88,better,19) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,46) output(54,better,67) output(54,better,98) output(54,better,25) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,67) output(19,better,46) output(19,better,98) output(19,better,25) output(28,better,100) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(25,better,67) output(52,better,46) output(52,better,67) output(52,better,98) output(52,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,67) output(65,better,46) output(68,better,67) output(73,better,68) output(73,better,67) output(73,better,98) output(86,better,68) output(86,better,46) output(86,better,67) output(88,worse,22) output(54,worse,50) output(19,worse,50) output(19,worse,54) output(98,worse,50) output(98,worse,46) output(100,worse,63) output(52,worse,54) output(52,worse,50) output(65,worse,50) output(65,worse,54) output(68,worse,50) output(68,worse,46) output(68,worse,25) output(73,worse,52) output(73,worse,54) output(73,worse,50) output(73,worse,86) output(73,worse,25) output(86,worse,50) output(28,eq,63) output(73,eq,46) output(88,eq,63) output(100,eq,50) output(19,eq,86)
Optimization: 25 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(9))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasCategory(4))),7) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(25,better,67) output(52,better,50) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(86,better,50) output(86,better,46) output(22,worse,28) output(50,worse,46) output(50,worse,67) output(50,worse,25) output(54,worse,98) output(19,worse,73) output(19,worse,68) output(19,worse,98) output(52,worse,54) output(52,worse,46) output(52,worse,67) output(52,worse,98) output(52,worse,25) output(65,worse,73) output(65,worse,68) output(73,worse,98) output(86,worse,68) output(86,worse,67) output(88,eq,22) output(100,eq,63) output(73,eq,68) output(54,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 24 14
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(9))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasCategory(4))),7) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(19,better,73) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(25,better,67) output(52,better,50) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(86,better,50) output(86,better,46) output(50,worse,46) output(50,worse,67) output(50,worse,25) output(88,worse,22) output(54,worse,98) output(19,worse,68) output(19,worse,98) output(52,worse,54) output(52,worse,46) output(52,worse,67) output(52,worse,98) output(52,worse,25) output(65,worse,68) output(73,worse,68) output(73,worse,98) output(86,worse,68) output(86,worse,67) output(100,eq,63) output(54,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 21 14
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasCategory(4))),8) preference(1,(1,4),1,for(atom(hasIngredient(10))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),8) preference(1,(1,6),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasIngredient(12))),2) preference(1,(1,9),1,for(atom(hasIngredient(9))),1) preference(1,(1,10),1,for(atom(hasIngredient(4))),8) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasIngredient(7))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,28) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(50,better,46) output(50,better,67) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,46) output(54,better,67) output(19,better,52) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,25) output(28,better,100) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,65) output(63,better,86) output(63,better,25) output(63,better,98) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,73) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(25,better,67) output(52,better,46) output(65,better,73) output(65,better,52) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(86,better,46) output(86,better,67) output(54,worse,98) output(19,worse,68) output(19,worse,98) output(100,worse,63) output(100,worse,68) output(52,worse,54) output(52,worse,50) output(52,worse,67) output(52,worse,98) output(52,worse,25) output(65,worse,68) output(73,worse,68) output(73,worse,98) output(86,worse,68) output(86,worse,50) output(19,eq,73) output(54,eq,50) output(28,eq,63) output(50,eq,25) output(54,eq,25)
Optimization: 20 14
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,4),1,for(atom(hasIngredient(4))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasIngredient(12))),3) preference(1,(1,7),1,for(atom(hasCategory(2))),3) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasIngredient(7))),6) preference(1,(1,10),1,for(atom(hasCategory(4))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,25) output(19,better,50) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,52) output(63,better,54) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(63,better,98) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,65) output(100,better,86) output(100,better,25) output(100,better,98) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,25) output(73,better,52) output(73,better,54) output(73,better,68) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,98) output(73,better,25) output(86,better,68) output(86,better,50) output(86,better,46) output(86,better,67) output(22,worse,28) output(50,worse,46) output(50,worse,67) output(50,worse,25) output(19,worse,73) output(19,worse,52) output(19,worse,68) output(19,worse,54) output(19,worse,67) output(19,worse,46) output(19,worse,86) output(19,worse,98) output(19,worse,25) output(25,worse,67) output(68,worse,67) output(52,eq,54) output(63,eq,65) output(54,eq,98) output(52,eq,98)
Optimization: 19 14
Answer: 23
preference(1,(1,1),1,for(atom(hasIngredient(12))),4) preference(1,(1,2),1,for(atom(hasCost(3))),4) preference(1,(1,3),1,for(atom(hasIngredient(4))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasIngredient(3))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasCategory(4))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasIngredient(7))),4) preference(1,less(weight)) output(22,better,100) output(22,better,19) output(22,better,73) output(22,better,63) output(22,better,54) output(22,better,52) output(22,better,46) output(22,better,50) output(22,better,68) output(22,better,67) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(88,better,22) output(88,better,100) output(88,better,19) output(88,better,63) output(88,better,54) output(88,better,52) output(88,better,50) output(88,better,68) output(88,better,73) output(88,better,46) output(88,better,67) output(54,better,50) output(54,better,46) output(54,better,67) output(54,better,98) output(54,better,25) output(19,better,73) output(19,better,52) output(19,better,68) output(19,better,50) output(19,better,54) output(19,better,67) output(19,better,46) output(19,better,86) output(19,better,98) output(19,better,25) output(28,better,100) output(28,better,63) output(28,better,19) output(28,better,73) output(28,better,52) output(28,better,67) output(28,better,50) output(28,better,54) output(28,better,46) output(28,better,68) output(63,better,73) output(63,better,68) output(63,better,67) output(63,better,50) output(63,better,46) output(63,better,86) output(63,better,25) output(98,better,50) output(98,better,46) output(98,better,67) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,68) output(100,better,52) output(100,better,54) output(100,better,67) output(100,better,50) output(100,better,46) output(100,better,86) output(100,better,25) output(100,better,98) output(52,better,46) output(52,better,50) output(52,better,67) output(52,better,98) output(52,better,25) output(65,better,73) output(65,better,52) output(65,better,68) output(65,better,50) output(65,better,54) output(65,better,67) output(65,better,46) output(68,better,50) output(68,better,46) output(68,better,67) output(68,better,25) output(73,better,50) output(73,better,46) output(73,better,67) output(73,better,86) output(73,better,25) output(86,better,50) output(86,better,46) output(50,worse,46) output(50,worse,67) output(50,worse,25) output(63,worse,52) output(63,worse,54) output(63,worse,65) output(25,worse,67) output(73,worse,52) output(73,worse,54) output(73,worse,98) output(86,worse,68) output(52,eq,54) output(73,eq,68) output(86,eq,67) output(22,eq,28) output(100,eq,65) output(63,eq,98)
Optimization: 17 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.035 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 23+
  Optimum    : unknown
Optimization : 17 14
Calls        : 1
Time         : 297.967s (Solving: 293.63s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1176.990s
Threads      : 4        (Winner: 4)

Choices      : 5942346  (Domain: 362377)
Conflicts    : 4798201  (Analyzed: 4798201)
Restarts     : 3456     (Average: 1388.37 Last: 164007)
Model-Level  : 64.7    
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 4862118  (Deleted: 4651207)
  Binary     : 584      (Ratio:   0.01%)
  Ternary    : 2114     (Ratio:   0.04%)
  Conflict   : 4798201  (Average Length:  442.9 Ratio:  98.69%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 63917    (Average Length:   45.0 Ratio:   1.31%) 
  Distributed: 21323    (Ratio:   0.44% Average LBD: 3.70) 
  Integrated : 63969    (Ratio: 300.00% Unit: 10 Average Jumps: 13.20)
Backjumps    : 4798201  (Average:  1.22 Max:  93 Sum: 5863721)
  Executed   : 4798199  (Average:  1.22 Max:  93 Sum: 5863628 Ratio: 100.00%)
  Bounded    : 2        (Average: 46.50 Max:  92 Sum:     93 Ratio:   0.00%)

Rules        : 1154510 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 21594   
Bodies       : 19761   
  Sum        : 224     
  Count      : 14      
Equivalences : 9770     (Atom=Atom: 1133 Body=Body: 462 Other: 8175)
Tight        : Yes
Variables    : 17383    (Eliminated:    0 Frozen: 8059)
Constraints  : 1169364  (Binary:  98.9% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasPrep(4)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCost(3)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCost(3)) ; 
  8 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasIngredient(7)) 
}.
