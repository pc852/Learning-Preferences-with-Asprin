asprin_vL version 1.0
Reading from stdin
-:1334:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1359:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1440:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1714:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1891:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2092:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2096:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2096:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2102:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2201:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2227:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2347:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2381:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2403:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1251:1-16: info: no atoms over signature occur in program:
  output/3

-:1243:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1244:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1245:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1246:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1276:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(2))),()) preference(1,(1,1),4,for(atom(hasCategory(2))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(11))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(16,eq,65) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(79,eq,90) output(65,eq,90) output(67,eq,90) output(44,eq,79) output(16,eq,67) output(10,eq,44) output(51,eq,44) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(79,eq,22) output(16,eq,79) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(77,eq,79) output(65,eq,22) output(67,eq,22) output(44,eq,22) output(16,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(10,eq,67) output(51,eq,67) output(75,eq,67) output(77,eq,67) output(44,eq,90) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(58,eq,67) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,67) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(9,eq,16) output(10,eq,22) output(51,eq,22) output(75,eq,22) output(77,eq,22) output(58,eq,22) output(92,eq,22) output(33,eq,22) output(100,eq,22) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(9,eq,22) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(67,eq,84) output(44,eq,84) output(16,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84) output(77,eq,84)
Optimization: 105 6
Answer: 2
preference(1,(1,6),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(5))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(11))),()) preference(1,(1,1),4,for(atom(hasCost(2))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasCategory(2))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(22,better,90) output(44,better,67) output(79,better,90) output(65,better,90) output(75,better,16) output(84,better,90) output(33,better,16) output(100,better,16) output(75,better,67) output(44,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(33,better,67) output(100,better,67) output(9,better,67) output(9,better,16) output(33,better,51) output(9,better,51) output(16,worse,65) output(16,worse,44) output(67,worse,79) output(10,worse,44) output(51,worse,44) output(16,worse,79) output(10,worse,65) output(51,worse,65) output(77,worse,65) output(58,worse,65) output(10,worse,79) output(51,worse,79) output(77,worse,79) output(67,worse,22) output(16,worse,22) output(77,worse,44) output(58,worse,44) output(92,worse,44) output(10,worse,22) output(51,worse,22) output(77,worse,22) output(58,worse,22) output(92,worse,22) output(58,worse,79) output(92,worse,79) output(92,worse,65) output(67,worse,84) output(16,worse,84) output(10,worse,84) output(77,worse,84) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(65,eq,79) output(84,eq,22) output(100,eq,33) output(51,eq,16) output(67,eq,90) output(44,eq,79) output(16,eq,67) output(9,eq,33) output(79,eq,22) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(75,eq,79) output(65,eq,22) output(44,eq,22) output(75,eq,44) output(33,eq,44) output(10,eq,67) output(51,eq,67) output(77,eq,67) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(58,eq,67) output(92,eq,67) output(100,eq,44) output(9,eq,44) output(75,eq,22) output(33,eq,22) output(100,eq,22) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(100,eq,65) output(9,eq,65) output(9,eq,22) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(65,eq,84) output(44,eq,84) output(9,eq,75) output(33,eq,84) output(9,eq,84)
Optimization: 85 6
Answer: 3
preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(11))),()) preference(1,(1,5),3,for(atom(hasIngredient(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasIngredient(10))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(5))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(65,better,79) output(67,better,79) output(44,better,79) output(16,better,79) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(65,better,84) output(67,better,84) output(44,better,84) output(16,better,84) output(10,better,84) output(33,better,84) output(9,better,84) output(77,better,84) output(84,worse,22) output(79,worse,90) output(84,worse,90) output(79,worse,22) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(16,eq,65) output(22,eq,90) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(44,eq,67) output(65,eq,90) output(67,eq,90) output(16,eq,67) output(10,eq,44) output(51,eq,44) output(75,eq,16) output(9,eq,33) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(65,eq,22) output(67,eq,22) output(44,eq,22) output(16,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(10,eq,67) output(51,eq,67) output(75,eq,67) output(77,eq,67) output(44,eq,90) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(58,eq,67) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,67) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(9,eq,16) output(10,eq,22) output(51,eq,22) output(75,eq,22) output(77,eq,22) output(58,eq,22) output(92,eq,22) output(33,eq,22) output(100,eq,22) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(9,eq,22) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(9,eq,75) output(9,eq,51)
Optimization: 84 6
Answer: 4
preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(11))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasIngredient(7))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(5))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,(1,6),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(16,better,65) output(67,better,79) output(44,better,79) output(16,better,79) output(10,better,65) output(51,better,65) output(33,better,65) output(77,better,65) output(10,better,79) output(51,better,79) output(77,better,79) output(67,better,22) output(44,better,22) output(16,better,22) output(10,better,22) output(51,better,22) output(77,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(92,better,65) output(100,better,65) output(9,better,65) output(9,better,22) output(33,better,75) output(67,better,84) output(44,better,84) output(16,better,84) output(10,better,84) output(9,better,75) output(33,better,84) output(9,better,84) output(77,better,84) output(58,worse,77) output(22,worse,90) output(79,worse,90) output(65,worse,90) output(75,worse,16) output(84,worse,90) output(58,worse,10) output(58,worse,16) output(75,worse,44) output(58,worse,44) output(75,worse,67) output(75,worse,90) output(58,worse,90) output(58,worse,67) output(77,eq,10) output(10,eq,16) output(65,eq,79) output(84,eq,22) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(44,eq,67) output(67,eq,90) output(16,eq,67) output(10,eq,44) output(51,eq,44) output(9,eq,33) output(79,eq,22) output(77,eq,16) output(92,eq,77) output(92,eq,10) output(92,eq,16) output(75,eq,65) output(58,eq,65) output(75,eq,79) output(65,eq,22) output(33,eq,16) output(100,eq,16) output(33,eq,44) output(77,eq,44) output(10,eq,67) output(51,eq,67) output(77,eq,67) output(44,eq,90) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(92,eq,90) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,67) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(9,eq,16) output(75,eq,22) output(58,eq,22) output(58,eq,79) output(79,eq,84) output(9,eq,100) output(33,eq,51) output(65,eq,84) output(9,eq,51)
Optimization: 68 6
Answer: 5
preference(1,(1,1),4,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),4,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),4,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasCost(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(11))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(5))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,4),4,for(atom(hasCategory(5))),()) preference(1,aso) output(58,better,77) output(65,better,79) output(16,better,44) output(65,better,90) output(16,better,67) output(79,better,22) output(16,better,79) output(58,better,10) output(92,better,77) output(92,better,10) output(33,better,65) output(65,better,22) output(67,better,22) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(58,better,44) output(16,better,90) output(33,better,90) output(100,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(92,better,44) output(100,better,44) output(9,better,44) output(75,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(100,better,65) output(9,better,22) output(79,better,84) output(33,better,75) output(33,better,51) output(65,better,84) output(67,better,84) output(44,better,84) output(16,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(10,worse,16) output(22,worse,90) output(51,worse,16) output(10,worse,44) output(51,worse,44) output(75,worse,16) output(9,worse,33) output(84,worse,90) output(10,worse,65) output(51,worse,65) output(77,worse,16) output(75,worse,65) output(77,worse,65) output(10,worse,79) output(51,worse,79) output(77,worse,79) output(77,worse,44) output(10,worse,67) output(51,worse,67) output(77,worse,67) output(10,worse,90) output(51,worse,90) output(77,worse,90) output(9,worse,100) output(77,eq,10) output(16,eq,65) output(84,eq,22) output(100,eq,33) output(67,eq,90) output(44,eq,79) output(58,eq,16) output(92,eq,16) output(58,eq,65) output(75,eq,79) output(75,eq,44) output(10,eq,22) output(51,eq,22) output(77,eq,22) output(92,eq,65) output(10,eq,84) output(77,eq,84)
Optimization: 51 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),0,for(atom(hasCost(2))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),0,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),4,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,4),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(65,better,79) output(22,better,90) output(44,better,67) output(67,better,79) output(65,better,90) output(67,better,90) output(44,better,79) output(51,better,44) output(84,better,90) output(58,better,10) output(33,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(65,better,22) output(44,better,22) output(33,better,16) output(75,better,44) output(33,better,44) output(58,better,44) output(10,better,67) output(51,better,67) output(75,better,67) output(44,better,90) output(10,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(9,better,90) output(58,better,90) output(58,better,67) output(33,better,67) output(9,better,67) output(9,better,44) output(9,better,16) output(10,better,22) output(51,better,22) output(75,better,22) output(58,better,22) output(33,better,22) output(58,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(33,better,75) output(33,better,51) output(65,better,84) output(44,better,84) output(10,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(100,worse,33) output(79,worse,22) output(10,worse,65) output(92,worse,10) output(92,worse,67) output(92,worse,44) output(92,worse,22) output(92,worse,65) output(79,worse,84) output(84,eq,22) output(10,eq,44) output(9,eq,33) output(51,eq,65) output(75,eq,65) output(58,eq,65) output(67,eq,22) output(67,eq,84)
Optimization: 49 5
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(58,better,77) output(16,better,65) output(65,better,79) output(51,better,16) output(44,better,67) output(67,better,79) output(44,better,79) output(16,better,67) output(51,better,44) output(16,better,79) output(51,better,65) output(58,better,10) output(75,better,65) output(33,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(51,better,67) output(75,better,67) output(44,better,90) output(16,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(58,better,90) output(58,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(51,better,22) output(75,better,22) output(58,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(100,better,65) output(9,better,65) output(9,better,22) output(33,better,75) output(33,better,51) output(44,better,84) output(16,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,worse,10) output(10,worse,16) output(79,worse,90) output(10,worse,44) output(79,worse,22) output(77,worse,16) output(92,worse,10) output(92,worse,16) output(77,worse,65) output(77,worse,44) output(77,worse,67) output(77,worse,90) output(92,worse,90) output(92,worse,67) output(92,worse,44) output(77,worse,22) output(92,worse,22) output(92,worse,65) output(79,worse,84) output(77,worse,84) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(16,eq,44) output(65,eq,90) output(67,eq,90) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(10,eq,65) output(92,eq,77) output(58,eq,16) output(77,eq,79) output(65,eq,22) output(67,eq,22) output(75,eq,44) output(58,eq,44) output(10,eq,67) output(10,eq,90) output(10,eq,22) output(92,eq,79) output(9,eq,100) output(65,eq,84) output(67,eq,84) output(10,eq,84)
Optimization: 45 3
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(58,better,77) output(16,better,65) output(65,better,79) output(51,better,16) output(44,better,67) output(67,better,79) output(44,better,79) output(16,better,67) output(51,better,44) output(16,better,79) output(51,better,65) output(58,better,10) output(92,better,77) output(75,better,65) output(33,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(51,better,67) output(75,better,67) output(44,better,90) output(16,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(58,better,90) output(58,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(51,better,22) output(75,better,22) output(58,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(100,better,65) output(9,better,65) output(9,better,22) output(33,better,75) output(33,better,51) output(44,better,84) output(16,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,worse,10) output(10,worse,16) output(79,worse,90) output(10,worse,44) output(79,worse,22) output(77,worse,16) output(92,worse,16) output(77,worse,65) output(77,worse,44) output(77,worse,67) output(77,worse,90) output(92,worse,44) output(77,worse,22) output(79,worse,84) output(77,worse,84) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(16,eq,44) output(65,eq,90) output(67,eq,90) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(10,eq,65) output(92,eq,10) output(58,eq,16) output(77,eq,79) output(65,eq,22) output(67,eq,22) output(75,eq,44) output(58,eq,44) output(10,eq,67) output(10,eq,90) output(92,eq,90) output(92,eq,67) output(10,eq,22) output(92,eq,22) output(92,eq,65) output(9,eq,100) output(65,eq,84) output(67,eq,84) output(10,eq,84)
Optimization: 43 3
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),3,for(atom(hasPrep(6))),()) preference(1,aso) output(58,better,77) output(65,better,79) output(51,better,16) output(44,better,67) output(65,better,90) output(44,better,79) output(16,better,67) output(51,better,44) output(16,better,79) output(51,better,65) output(58,better,10) output(92,better,77) output(92,better,10) output(33,better,65) output(51,better,79) output(75,better,79) output(65,better,22) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(51,better,67) output(75,better,67) output(44,better,90) output(16,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(51,better,22) output(75,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(100,better,65) output(9,better,65) output(9,better,22) output(33,better,75) output(33,better,51) output(65,better,84) output(44,better,84) output(16,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,worse,10) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(77,worse,16) output(77,worse,65) output(77,worse,79) output(77,worse,44) output(77,worse,67) output(77,worse,90) output(77,worse,22) output(77,worse,84) output(16,eq,65) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(16,eq,44) output(67,eq,90) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(58,eq,65) output(67,eq,22) output(75,eq,44) output(58,eq,44) output(10,eq,67) output(10,eq,90) output(92,eq,44) output(10,eq,22) output(92,eq,65) output(9,eq,100) output(67,eq,84) output(10,eq,84)
Optimization: 41 3
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),4,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,2),4,for(atom(hasIngredient(7))),()) preference(1,aso) output(58,better,77) output(65,better,79) output(51,better,16) output(44,better,67) output(65,better,90) output(44,better,79) output(75,better,16) output(16,better,79) output(58,better,10) output(92,better,77) output(92,better,10) output(58,better,16) output(92,better,16) output(33,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(44,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(51,better,67) output(75,better,67) output(44,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(92,better,44) output(100,better,44) output(9,better,44) output(9,better,16) output(51,better,22) output(75,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(92,better,65) output(100,better,65) output(9,better,65) output(9,better,22) output(33,better,75) output(33,better,51) output(65,better,84) output(44,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(16,worse,65) output(16,worse,44) output(67,worse,90) output(10,worse,44) output(10,worse,65) output(77,worse,65) output(67,worse,22) output(77,worse,44) output(67,worse,84) output(77,eq,10) output(10,eq,16) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(51,eq,44) output(9,eq,33) output(84,eq,90) output(51,eq,65) output(77,eq,16) output(75,eq,65) output(58,eq,65) output(75,eq,44) output(58,eq,44) output(9,eq,100)
Optimization: 40 3
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),4,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(58,better,77) output(16,better,65) output(65,better,79) output(51,better,16) output(44,better,67) output(67,better,79) output(44,better,79) output(16,better,67) output(51,better,44) output(16,better,79) output(51,better,65) output(58,better,10) output(75,better,65) output(33,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(67,better,22) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(51,better,67) output(75,better,67) output(44,better,90) output(16,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(58,better,90) output(58,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(10,better,22) output(51,better,22) output(75,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(100,better,65) output(9,better,65) output(9,better,22) output(33,better,75) output(33,better,51) output(65,better,84) output(67,better,84) output(44,better,84) output(16,better,84) output(10,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,better,84) output(10,worse,16) output(22,worse,90) output(79,worse,90) output(10,worse,44) output(84,worse,90) output(77,worse,16) output(92,worse,16) output(77,worse,44) output(92,worse,44) output(77,eq,10) output(84,eq,22) output(100,eq,33) output(16,eq,44) output(65,eq,90) output(67,eq,90) output(75,eq,16) output(9,eq,33) output(79,eq,22) output(10,eq,65) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(77,eq,65) output(75,eq,44) output(58,eq,44) output(10,eq,67) output(77,eq,67) output(10,eq,90) output(77,eq,90) output(92,eq,90) output(92,eq,67) output(92,eq,65) output(79,eq,84) output(9,eq,100)
Optimization: 34 3
Progression : [ 1;34] (Error: 33)
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,(1,1),4,for(atom(hasIngredient(10))),()) preference(1,(1,3),4,for(atom(hasDifficulty(4))),()) preference(1,(1,6),4,for(atom(hasPrep(2))),()) preference(1,aso) output(77,better,10) output(22,better,90) output(100,better,33) output(51,better,16) output(44,better,67) output(65,better,90) output(67,better,90) output(51,better,44) output(75,better,16) output(9,better,33) output(84,better,90) output(16,better,79) output(51,better,65) output(77,better,16) output(58,better,10) output(92,better,77) output(92,better,10) output(58,better,16) output(92,better,16) output(75,better,65) output(33,better,65) output(58,better,65) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(75,better,44) output(33,better,44) output(58,better,44) output(51,better,67) output(75,better,67) output(44,better,90) output(16,better,90) output(10,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(92,better,44) output(100,better,44) output(9,better,44) output(9,better,16) output(51,better,22) output(75,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(92,better,65) output(100,better,65) output(9,better,65) output(9,better,22) output(9,better,100) output(33,better,75) output(33,better,51) output(65,better,84) output(44,better,84) output(16,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,better,84) output(10,worse,16) output(84,eq,22)
Optimization: 23 6
Progression : [ 2;23] (Error: 10.5)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),4,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasDifficulty(4))),()) preference(1,(1,4),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasPrep(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(4))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,(1,1),4,for(atom(hasPrep(5))),()) preference(1,aso) output(58,better,77) output(65,better,79) output(100,better,33) output(44,better,67) output(67,better,79) output(79,better,90) output(65,better,90) output(67,better,90) output(44,better,79) output(16,better,67) output(9,better,33) output(84,better,90) output(79,better,22) output(16,better,79) output(10,better,65) output(51,better,65) output(58,better,10) output(92,better,77) output(58,better,16) output(33,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(67,better,22) output(44,better,22) output(16,better,22) output(100,better,16) output(58,better,44) output(10,better,67) output(51,better,67) output(75,better,67) output(77,better,67) output(44,better,90) output(16,better,90) output(10,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(10,better,22) output(51,better,22) output(75,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(100,better,65) output(9,better,65) output(9,better,22) output(79,better,84) output(33,better,75) output(33,better,51) output(65,better,84) output(67,better,84) output(44,better,84) output(16,better,84) output(10,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,better,84) output(77,worse,10) output(77,worse,16) output(92,worse,10) output(77,worse,65) output(92,worse,65) output(9,eq,100)
Optimization: 22 6
Progression : [ 3;22] (Error: 6.33333)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(8))),()) preference(1,(1,4),3,for(atom(hasPrep(2))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,(1,1),4,for(atom(hasCost(3))),()) preference(1,(1,2),4,for(atom(hasIngredient(7))),()) preference(1,(1,3),4,for(atom(hasCost(3))),()) preference(1,(1,6),4,for(atom(hasPrep(5))),()) preference(1,aso) output(58,better,77) output(10,better,16) output(65,better,79) output(84,better,22) output(100,better,33) output(51,better,16) output(67,better,79) output(65,better,90) output(67,better,90) output(10,better,44) output(51,better,44) output(75,better,16) output(9,better,33) output(84,better,90) output(79,better,22) output(10,better,65) output(51,better,65) output(77,better,16) output(92,better,77) output(58,better,16) output(92,better,16) output(75,better,65) output(33,better,65) output(77,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(67,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(58,better,44) output(10,better,67) output(51,better,67) output(75,better,67) output(77,better,67) output(10,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(10,better,22) output(51,better,22) output(75,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(92,better,65) output(100,better,65) output(9,better,65) output(9,better,22) output(9,better,100) output(33,better,75) output(33,better,51) output(65,better,84) output(67,better,84) output(10,better,84) output(9,better,75) output(9,better,51) output(33,better,84) output(9,better,84) output(77,better,84) output(77,worse,10) output(58,worse,10) output(79,worse,84)
Optimization: 21 6
Answer: 15
preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(10,better,16) output(16,better,65) output(22,better,90) output(51,better,16) output(44,better,67) output(79,better,90) output(65,better,90) output(67,better,90) output(44,better,79) output(16,better,67) output(10,better,44) output(51,better,44) output(84,better,90) output(79,better,22) output(16,better,79) output(10,better,65) output(51,better,65) output(77,better,16) output(75,better,65) output(33,better,65) output(77,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(67,better,22) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(33,better,44) output(77,better,44) output(10,better,67) output(51,better,67) output(75,better,67) output(77,better,67) output(44,better,90) output(16,better,90) output(10,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(100,better,44) output(9,better,44) output(9,better,16) output(10,better,22) output(51,better,22) output(75,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(92,better,65) output(100,better,65) output(9,better,65) output(9,better,22) output(79,better,84) output(33,better,75) output(65,better,84) output(67,better,84) output(44,better,84) output(16,better,84) output(10,better,84) output(9,better,75) output(33,better,84) output(9,better,84) output(77,better,84) output(58,worse,77) output(58,worse,10) output(92,worse,77) output(92,worse,10) output(77,eq,10) output(65,eq,79) output(84,eq,22) output(100,eq,33) output(16,eq,44) output(75,eq,16) output(9,eq,33) output(58,eq,16) output(92,eq,16) output(75,eq,44) output(58,eq,44) output(92,eq,44) output(9,eq,100) output(33,eq,51) output(9,eq,51)
Optimization: 20 2
Answer: 16
preference(1,(1,2),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(7))),()) preference(1,(1,4),4,for(atom(hasPrep(6))),()) preference(1,(1,6),4,for(atom(hasCategory(4))),()) preference(1,aso) output(58,better,77) output(10,better,16) output(65,better,79) output(84,better,22) output(44,better,67) output(67,better,79) output(79,better,90) output(65,better,90) output(67,better,90) output(44,better,79) output(16,better,67) output(10,better,44) output(75,better,16) output(79,better,22) output(16,better,79) output(10,better,65) output(92,better,77) output(58,better,16) output(92,better,16) output(75,better,65) output(33,better,65) output(58,better,65) output(10,better,79) output(51,better,79) output(75,better,79) output(77,better,79) output(65,better,22) output(67,better,22) output(44,better,22) output(16,better,22) output(33,better,16) output(100,better,16) output(75,better,44) output(33,better,44) output(58,better,44) output(10,better,67) output(51,better,67) output(75,better,67) output(77,better,67) output(44,better,90) output(16,better,90) output(10,better,90) output(51,better,90) output(75,better,90) output(33,better,90) output(100,better,90) output(9,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,67) output(92,better,67) output(33,better,67) output(100,better,67) output(9,better,67) output(92,better,44) output(100,better,44) output(9,better,44) output(9,better,16) output(10,better,22) output(51,better,22) output(75,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(33,better,22) output(100,better,22) output(58,better,79) output(92,better,79) output(33,better,79) output(100,better,79) output(9,better,79) output(92,better,65) output(100,better,65) output(9,better,65) output(9,better,22) output(79,better,84) output(33,better,51) output(65,better,84) output(67,better,84) output(44,better,84) output(16,better,84) output(10,better,84) output(9,better,51) output(33,better,84) output(9,better,84) output(77,better,84) output(77,worse,10) output(51,worse,16) output(51,worse,44) output(77,worse,16) output(77,worse,44) output(100,eq,33) output(16,eq,44) output(9,eq,33) output(58,eq,10) output(92,eq,10) output(9,eq,100) output(33,eq,75) output(9,eq,75)
Optimization: 18 4
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.036 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 18 4
Bounds       : [3;18] [0;4]
Calls        : 1
Time         : 298.018s (Solving: 266.94s 1st Model: 1.75s Unsat: 0.00s)
CPU Time     : 1097.883s
Threads      : 4        (Winner: 4)

Choices      : 5935959  (Domain: 207528)
Conflicts    : 817516   (Analyzed: 817513)
Restarts     : 862      (Average: 948.39 Last: 286727)
Model-Level  : 875.6   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1185592  (Deleted: 966583)
  Binary     : 14061    (Ratio:   1.19%)
  Ternary    : 56752    (Ratio:   4.79%)
  Conflict   : 817513   (Average Length:  884.6 Ratio:  68.95%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 368079   (Average Length:   60.5 Ratio:  31.05%) 
  Distributed: 122724   (Ratio:  15.01% Average LBD: 3.33) 
  Integrated : 368172   (Ratio: 300.00% Unit: 1335 Average Jumps: 133.23)
Backjumps    : 817513   (Average:  6.70 Max: 1922 Sum: 5476373)
  Executed   : 817447   (Average:  6.69 Max: 1922 Sum: 5472891 Ratio:  99.94%)
  Bounded    : 66       (Average: 52.76 Max: 104 Sum:   3482 Ratio:   0.06%)

Rules        : 13969320
  Choice     : 31      
  Minimize   : 2       
Atoms        : 2757372 
Bodies       : 3266577 
  Count      : 3810    
Equivalences : 8556859  (Atom=Atom: 2470093 Body=Body: 2700862 Other: 3385904)
Tight        : Yes
Variables    : 274823   (Eliminated:    0 Frozen: 192533)
Constraints  : 11447589 (Binary:  97.6% Ternary:   2.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasCost(2)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(1)) >> atom(hasCategory(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) >> atom(hasIngredient(10)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasCost(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(11)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(7)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(11)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> atom(hasCost(5)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasCost(4))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasIngredient(5)) >> not atom(hasDifficulty(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasCategory(3))  >> atom(hasPrep(6)) || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(0)) || atom(hasCost(2)) ; 
  atom(hasDifficulty(4)) >> atom(hasDifficulty(3)) >> not atom(hasCategory(4))  >> not atom(hasPrepTime(3))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(0))  >> not atom(hasIngredient(11))  >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(9))  >> not atom(hasIngredient(11))  >> not atom(hasPrep(5))  || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> not atom(hasCost(4))  || not atom(hasPrepTime(3))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(5))  >> not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  >> not atom(hasPrep(2))  || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> atom(hasDifficulty(1)) || not atom(hasPrepTime(3))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(5))  >> not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  >> not atom(hasPrep(2))  || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> not atom(hasDifficulty(2))  || not atom(hasCost(4))  ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(5))  >> not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  >> not atom(hasPrep(2))  || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasPrep(0))  >> not atom(hasPrepTime(2))  >> atom(hasIngredient(7)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(4))  >> not atom(hasIngredient(6))  >> not atom(hasDifficulty(4))  || atom(hasPrepTime(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  >> not atom(hasPrep(2))  || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  not atom(hasCost(1))  >> not atom(hasIngredient(4))  >> not atom(hasIngredient(6))  >> not atom(hasDifficulty(4))  || atom(hasPrepTime(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  >> not atom(hasPrep(2))  || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasPrep(1))  >> not atom(hasPrep(6))  || not atom(hasIngredient(9))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasDifficulty(4)) || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> not atom(hasCategory(3))  >> not atom(hasCost(2))  || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(3)) >> not atom(hasIngredient(3))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) >> atom(hasCost(1)) >> atom(hasPrep(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(5)) >> atom(hasPrep(4)) >> not atom(hasCategory(3))  >> atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(9))  >> atom(hasPrep(5)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasCost(1)) >> atom(hasPrep(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(11))  ; 
  atom(hasDifficulty(3)) >> atom(hasCost(4)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(1))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(4))  || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(2))  >> atom(hasPrepTime(2)) || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasPrep(4)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) || not atom(hasCategory(5))  ; 
  atom(hasIngredient(3)) >> atom(hasCost(3)) >> atom(hasPrep(2)) >> atom(hasIngredient(7)) || not atom(hasPrep(1))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrep(1))  >> atom(hasIngredient(8)) >> atom(hasCost(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasCost(4)) >> atom(hasCost(1)) >> atom(hasPrep(2)) || not atom(hasPrepTime(3))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(3)) >> atom(hasCategory(5)) >> not atom(hasPrep(6))  || atom(hasPrep(6)) ; 
  atom(hasCost(4)) >> not atom(hasPrepTime(2))  >> not atom(hasIngredient(9))  >> atom(hasPrep(5)) || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasPrep(6)) >> atom(hasPrepTime(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(1)) >> atom(hasIngredient(7)) >> atom(hasCategory(4)) || not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> not atom(hasCost(2))  || not atom(hasCategory(4))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(1)) >> not atom(hasIngredient(9))  >> not atom(hasPrep(6))  || not atom(hasCost(4))  ; 
  not atom(hasCategory(2))  >> not atom(hasCategory(5))  >> not atom(hasCategory(1))  >> atom(hasPrep(6)) || atom(hasPrep(2)) ; 
  atom(hasPrep(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(7)) >> atom(hasCategory(4)) || not atom(hasIngredient(3))  
}.
