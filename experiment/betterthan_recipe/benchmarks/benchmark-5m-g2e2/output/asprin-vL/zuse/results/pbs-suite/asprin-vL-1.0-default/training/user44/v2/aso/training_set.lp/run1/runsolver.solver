asprin_vL version 1.0
Reading from stdin
-:1332:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1357:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1438:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1712:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1889:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2090:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2094:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2094:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2100:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2199:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2225:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2345:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2379:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2401:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1249:1-16: info: no atoms over signature occur in program:
  output/3

-:1241:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1242:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1243:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1244:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1274:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,6),4,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(5))),()) preference(1,(1,4),3,for(atom(hasIngredient(4))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(2))),()) preference(1,(1,1),4,for(atom(hasDifficulty(1))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(4))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(58,better,77) output(92,better,64) output(51,better,38) output(52,better,84) output(52,better,22) output(65,better,84) output(92,better,77) output(100,better,77) output(16,better,84) output(10,better,84) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(51,better,84) output(58,better,84) output(92,better,84) output(100,better,84) output(10,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(65,better,79) output(58,better,75) output(92,better,75) output(10,better,79) output(58,better,79) output(92,better,79) output(77,worse,10) output(38,worse,52) output(84,worse,24) output(79,worse,24) output(64,worse,58) output(64,worse,10) output(77,worse,65) output(75,worse,52) output(38,worse,24) output(77,worse,24) output(75,worse,24) output(64,worse,24) output(64,worse,52) output(64,worse,65) output(22,worse,90) output(64,worse,100) output(84,worse,90) output(77,worse,16) output(38,worse,90) output(64,worse,51) output(77,worse,90) output(64,worse,16) output(64,worse,90) output(92,eq,58) output(16,eq,65) output(79,eq,84) output(84,eq,22) output(100,eq,58) output(52,eq,24) output(38,eq,84) output(51,eq,52) output(75,eq,38) output(79,eq,22) output(10,eq,65) output(58,eq,10) output(64,eq,77) output(92,eq,10) output(100,eq,10) output(58,eq,65) output(38,eq,22) output(58,eq,52) output(75,eq,84) output(51,eq,24) output(65,eq,24) output(16,eq,24) output(10,eq,24) output(58,eq,24) output(92,eq,24) output(100,eq,24) output(64,eq,84) output(92,eq,52) output(100,eq,52) output(64,eq,38) output(77,eq,22) output(75,eq,22) output(64,eq,22) output(77,eq,84) output(92,eq,65) output(100,eq,65) output(10,eq,16) output(58,eq,51) output(92,eq,100) output(58,eq,16) output(92,eq,16) output(77,eq,79) output(52,eq,90) output(65,eq,90) output(64,eq,75) output(92,eq,51) output(10,eq,90) output(58,eq,90) output(92,eq,90) output(64,eq,79)
Optimization: 73 6
Answer: 2
preference(1,(1,6),4,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,6),2,for(atom(hasCategory(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(4))),()) preference(1,(1,4),3,for(atom(hasIngredient(11))),()) preference(1,(1,5),3,for(atom(hasCost(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(11))),()) preference(1,(1,1),4,for(atom(hasDifficulty(1))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(2))),()) preference(1,(1,4),4,for(atom(hasIngredient(4))),()) preference(1,(1,5),4,for(atom(hasCategory(2))),()) preference(1,aso) output(58,better,77) output(92,better,64) output(100,better,58) output(51,better,38) output(52,better,84) output(52,better,22) output(65,better,84) output(92,better,77) output(100,better,77) output(100,better,10) output(16,better,84) output(10,better,84) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(51,better,84) output(100,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(100,better,52) output(10,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(100,better,65) output(65,better,79) output(58,better,75) output(92,better,75) output(10,better,79) output(58,better,79) output(92,better,79) output(77,worse,10) output(38,worse,52) output(84,worse,24) output(79,worse,24) output(64,worse,58) output(64,worse,10) output(77,worse,65) output(75,worse,52) output(38,worse,24) output(77,worse,24) output(75,worse,24) output(64,worse,24) output(64,worse,52) output(64,worse,65) output(22,worse,90) output(64,worse,100) output(92,worse,100) output(84,worse,90) output(77,worse,16) output(38,worse,90) output(64,worse,51) output(77,worse,90) output(64,worse,16) output(64,worse,90) output(92,eq,58) output(16,eq,65) output(79,eq,84) output(84,eq,22) output(52,eq,24) output(38,eq,84) output(51,eq,52) output(75,eq,38) output(79,eq,22) output(10,eq,65) output(58,eq,10) output(64,eq,77) output(92,eq,10) output(58,eq,65) output(38,eq,22) output(58,eq,52) output(75,eq,84) output(51,eq,24) output(65,eq,24) output(16,eq,24) output(10,eq,24) output(58,eq,24) output(92,eq,24) output(64,eq,84) output(92,eq,52) output(64,eq,38) output(77,eq,22) output(75,eq,22) output(64,eq,22) output(77,eq,84) output(92,eq,65) output(10,eq,16) output(58,eq,51) output(58,eq,16) output(92,eq,16) output(77,eq,79) output(52,eq,90) output(65,eq,90) output(64,eq,75) output(92,eq,51) output(10,eq,90) output(58,eq,90) output(92,eq,90) output(64,eq,79)
Optimization: 68 6
Answer: 3
preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasCost(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(11))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(4))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(11))),()) preference(1,(1,1),4,for(atom(hasIngredient(7))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(5))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasCategory(2))),()) preference(1,aso) output(92,better,58) output(16,better,65) output(92,better,64) output(100,better,58) output(52,better,84) output(52,better,24) output(38,better,84) output(52,better,22) output(10,better,65) output(77,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(16,better,22) output(51,better,84) output(38,better,24) output(51,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(92,better,24) output(100,better,24) output(92,better,84) output(100,better,84) output(10,better,22) output(77,better,22) output(92,better,22) output(100,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(92,better,75) output(10,better,79) output(77,better,79) output(92,better,79) output(58,worse,77) output(75,worse,38) output(58,worse,10) output(64,worse,77) output(64,worse,10) output(58,worse,38) output(75,worse,52) output(58,worse,52) output(64,worse,52) output(64,worse,38) output(22,worse,90) output(64,worse,100) output(58,worse,51) output(84,worse,90) output(58,worse,16) output(65,worse,90) output(64,worse,51) output(58,worse,90) output(64,worse,16) output(64,worse,90) output(77,eq,10) output(79,eq,84) output(84,eq,22) output(51,eq,38) output(38,eq,52) output(84,eq,24) output(79,eq,24) output(51,eq,52) output(64,eq,58) output(79,eq,22) output(65,eq,84) output(92,eq,77) output(100,eq,77) output(92,eq,10) output(100,eq,10) output(58,eq,65) output(65,eq,22) output(92,eq,38) output(100,eq,38) output(75,eq,84) output(65,eq,24) output(58,eq,24) output(75,eq,24) output(64,eq,24) output(58,eq,84) output(64,eq,84) output(92,eq,52) output(100,eq,52) output(58,eq,22) output(75,eq,22) output(64,eq,22) output(64,eq,65) output(10,eq,16) output(65,eq,79) output(58,eq,75) output(92,eq,100) output(77,eq,16) output(92,eq,16) output(52,eq,90) output(38,eq,90) output(64,eq,75) output(92,eq,51) output(10,eq,90) output(77,eq,90) output(92,eq,90) output(58,eq,79) output(64,eq,79)
Optimization: 67 6
Answer: 4
preference(1,(1,6),4,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasCategory(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(6))),()) preference(1,(1,6),3,for(atom(hasIngredient(11))),()) preference(1,(1,1),4,for(atom(hasCategory(1))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(11))),()) preference(1,(1,4),4,for(atom(hasIngredient(4))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(58,better,77) output(79,better,84) output(52,better,84) output(38,better,84) output(75,better,38) output(79,better,22) output(52,better,22) output(65,better,84) output(58,better,10) output(64,better,77) output(64,better,10) output(16,better,84) output(10,better,84) output(38,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(75,better,52) output(58,better,52) output(75,better,84) output(65,better,24) output(58,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(65,better,79) output(64,better,100) output(58,better,51) output(58,better,16) output(65,better,90) output(92,better,51) output(64,better,51) output(58,better,90) output(58,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(92,worse,58) output(16,worse,65) output(92,worse,64) output(100,worse,58) output(51,worse,38) output(84,worse,24) output(51,worse,52) output(10,worse,65) output(77,worse,65) output(51,worse,24) output(92,worse,65) output(100,worse,65) output(22,worse,90) output(92,worse,75) output(84,worse,90) output(84,eq,22) output(38,eq,52) output(79,eq,24) output(52,eq,24) output(64,eq,58) output(92,eq,77) output(100,eq,77) output(58,eq,65) output(51,eq,22) output(92,eq,38) output(100,eq,38) output(51,eq,84) output(38,eq,24) output(16,eq,24) output(77,eq,24) output(92,eq,24) output(100,eq,24) output(92,eq,52) output(100,eq,52) output(64,eq,65) output(58,eq,75) output(92,eq,100) output(77,eq,16) output(92,eq,16) output(77,eq,79) output(52,eq,90) output(38,eq,90) output(64,eq,75) output(77,eq,90) output(92,eq,90) output(92,eq,79)
Optimization: 53 6
Answer: 5
preference(1,(1,6),4,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasCost(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasPrep(5))),()) preference(1,(1,2),4,for(atom(hasCategory(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(1))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,aso) output(58,better,77) output(84,better,22) output(84,better,24) output(79,better,24) output(52,better,24) output(75,better,38) output(79,better,22) output(52,better,22) output(65,better,84) output(64,better,77) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(75,better,52) output(58,better,52) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(64,better,84) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(10,better,16) output(65,better,79) output(64,better,100) output(58,better,51) output(58,better,16) output(10,better,79) output(65,better,90) output(64,better,51) output(10,better,90) output(58,better,90) output(58,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(92,worse,58) output(77,worse,10) output(16,worse,65) output(92,worse,64) output(100,worse,58) output(92,worse,10) output(100,worse,10) output(77,worse,65) output(92,worse,65) output(100,worse,65) output(22,worse,90) output(92,worse,75) output(79,eq,84) output(51,eq,38) output(38,eq,52) output(52,eq,84) output(38,eq,84) output(51,eq,52) output(64,eq,58) output(10,eq,65) output(58,eq,10) output(92,eq,77) output(100,eq,77) output(64,eq,10) output(58,eq,65) output(16,eq,84) output(92,eq,38) output(100,eq,38) output(51,eq,84) output(92,eq,84) output(100,eq,84) output(92,eq,52) output(100,eq,52) output(77,eq,84) output(64,eq,65) output(58,eq,75) output(92,eq,100) output(84,eq,90) output(77,eq,16) output(92,eq,16) output(77,eq,79) output(52,eq,90) output(38,eq,90) output(64,eq,75) output(92,eq,51) output(77,eq,90) output(92,eq,90) output(92,eq,79)
Optimization: 48 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasIngredient(9))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),4,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),4,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(16,better,65) output(79,better,84) output(92,better,64) output(51,better,38) output(52,better,84) output(84,better,24) output(79,better,24) output(52,better,24) output(51,better,52) output(79,better,22) output(52,better,22) output(10,better,65) output(92,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(51,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(51,better,84) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(58,better,75) output(92,better,75) output(92,better,100) output(77,better,16) output(92,better,16) output(52,better,90) output(64,better,75) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(64,better,90) output(58,worse,77) output(38,worse,52) output(65,worse,84) output(100,worse,77) output(64,worse,77) output(65,worse,22) output(75,worse,52) output(65,worse,79) output(58,worse,51) output(10,worse,79) output(65,worse,90) output(64,worse,51) output(58,worse,79) output(64,worse,79) output(84,eq,22) output(100,eq,58) output(64,eq,58) output(58,eq,10) output(92,eq,77) output(100,eq,10) output(64,eq,10) output(58,eq,52) output(75,eq,84) output(100,eq,52) output(64,eq,52) output(75,eq,22) output(10,eq,16) output(22,eq,90) output(64,eq,100) output(84,eq,90) output(58,eq,16) output(77,eq,79) output(92,eq,51) output(92,eq,79) output(64,eq,16)
Optimization: 40 4
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasDifficulty(2))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),4,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),4,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(16,better,65) output(79,better,84) output(92,better,64) output(51,better,38) output(52,better,84) output(84,better,24) output(79,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(79,better,22) output(52,better,22) output(10,better,65) output(92,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(16,better,22) output(92,better,38) output(51,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(58,better,75) output(92,better,75) output(92,better,100) output(77,better,16) output(92,better,16) output(52,better,90) output(38,better,90) output(64,better,75) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(64,better,90) output(58,worse,77) output(75,worse,38) output(65,worse,84) output(100,worse,77) output(64,worse,77) output(65,worse,22) output(75,worse,52) output(65,worse,79) output(58,worse,51) output(10,worse,79) output(65,worse,90) output(64,worse,51) output(58,worse,79) output(64,worse,79) output(84,eq,22) output(100,eq,58) output(38,eq,52) output(64,eq,58) output(58,eq,10) output(92,eq,77) output(100,eq,10) output(64,eq,10) output(58,eq,38) output(100,eq,38) output(58,eq,52) output(75,eq,84) output(100,eq,52) output(64,eq,52) output(64,eq,38) output(75,eq,22) output(10,eq,16) output(22,eq,90) output(64,eq,100) output(84,eq,90) output(58,eq,16) output(77,eq,79) output(92,eq,51) output(92,eq,79) output(64,eq,16)
Optimization: 39 4
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasIngredient(4))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),4,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),4,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(58,better,77) output(16,better,65) output(79,better,84) output(100,better,58) output(51,better,38) output(52,better,84) output(84,better,24) output(79,better,24) output(52,better,24) output(51,better,52) output(75,better,38) output(64,better,58) output(79,better,22) output(52,better,22) output(10,better,65) output(92,better,77) output(100,better,77) output(64,better,77) output(58,better,65) output(16,better,84) output(10,better,84) output(51,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(51,better,84) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(92,better,65) output(100,better,65) output(64,better,65) output(10,better,16) output(10,better,79) output(52,better,90) output(64,better,75) output(10,better,90) output(58,better,90) output(92,better,90) output(64,better,79) output(64,better,16) output(64,better,90) output(77,worse,10) output(92,worse,64) output(38,worse,52) output(58,worse,10) output(92,worse,10) output(65,worse,79) output(58,worse,51) output(92,worse,100) output(77,worse,16) output(77,worse,79) output(92,worse,51) output(92,eq,58) output(84,eq,22) output(38,eq,84) output(100,eq,10) output(64,eq,10) output(38,eq,22) output(75,eq,52) output(58,eq,52) output(92,eq,52) output(77,eq,22) output(77,eq,84) output(22,eq,90) output(64,eq,100) output(58,eq,75) output(92,eq,75) output(84,eq,90) output(58,eq,16) output(92,eq,16) output(38,eq,90) output(64,eq,51) output(77,eq,90) output(58,eq,79) output(92,eq,79)
Optimization: 38 4
Answer: 9
preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),4,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasPrep(6))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasCost(3))),()) preference(1,aso) output(16,better,65) output(79,better,84) output(100,better,58) output(38,better,52) output(52,better,84) output(38,better,84) output(64,better,58) output(79,better,22) output(52,better,22) output(10,better,65) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(16,better,22) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(10,better,24) output(77,better,24) output(100,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(10,better,16) output(22,better,90) output(58,better,75) output(58,better,51) output(92,better,75) output(84,better,90) output(77,better,16) output(10,better,79) output(77,better,79) output(52,better,90) output(38,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(64,better,79) output(64,better,16) output(64,better,90) output(58,worse,77) output(92,worse,64) output(51,worse,38) output(75,worse,38) output(58,worse,10) output(92,worse,77) output(92,worse,10) output(58,worse,38) output(92,worse,38) output(65,worse,24) output(65,worse,79) output(92,worse,100) output(92,eq,58) output(77,eq,10) output(84,eq,22) output(100,eq,77) output(64,eq,77) output(100,eq,10) output(64,eq,10) output(100,eq,38) output(64,eq,38) output(64,eq,100) output(58,eq,16) output(92,eq,16) output(58,eq,79) output(92,eq,79)
Optimization: 38 3
Answer: 10
preference(1,(1,1),0,for(atom(hasCategory(1))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),4,for(atom(hasPrepTime(1))),()) preference(1,aso) output(92,better,58) output(58,better,77) output(16,better,65) output(79,better,84) output(100,better,58) output(51,better,38) output(52,better,84) output(79,better,24) output(51,better,52) output(75,better,38) output(64,better,58) output(79,better,22) output(52,better,22) output(65,better,84) output(58,better,10) output(92,better,77) output(100,better,77) output(64,better,77) output(92,better,10) output(100,better,10) output(64,better,10) output(58,better,65) output(16,better,84) output(10,better,84) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(92,better,24) output(100,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(92,better,65) output(100,better,65) output(64,better,65) output(92,better,75) output(92,better,16) output(52,better,90) output(65,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(58,better,90) output(92,better,90) output(64,better,16) output(64,better,90) output(77,worse,10) output(77,worse,65) output(10,worse,16) output(65,worse,79) output(77,worse,16) output(10,worse,79) output(77,worse,79) output(58,worse,79) output(84,eq,22) output(92,eq,64) output(10,eq,65) output(22,eq,90) output(64,eq,100) output(58,eq,75) output(58,eq,51) output(92,eq,100) output(84,eq,90) output(58,eq,16) output(92,eq,79) output(64,eq,79)
Optimization: 37 6
Progression : [ 1;37] (Error: 36)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(atom(hasIngredient(6))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),4,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(16,better,65) output(84,better,22) output(92,better,64) output(100,better,58) output(52,better,84) output(84,better,24) output(79,better,24) output(52,better,24) output(38,better,84) output(79,better,22) output(52,better,22) output(10,better,65) output(92,better,10) output(100,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(65,better,22) output(16,better,22) output(92,better,38) output(100,better,38) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(58,better,75) output(58,better,51) output(92,better,75) output(92,better,100) output(77,better,16) output(92,better,16) output(77,better,79) output(52,better,90) output(38,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(92,better,79) output(64,better,90) output(58,worse,77) output(51,worse,38) output(51,worse,52) output(75,worse,38) output(100,worse,77) output(64,worse,77) output(75,worse,52) output(51,worse,84) output(75,worse,84) output(75,worse,22) output(22,worse,90) output(64,worse,100) output(38,eq,52) output(64,eq,58) output(65,eq,84) output(58,eq,10) output(92,eq,77) output(64,eq,10) output(58,eq,38) output(58,eq,52) output(75,eq,24) output(64,eq,52) output(64,eq,38) output(10,eq,16) output(84,eq,90) output(58,eq,16) output(65,eq,90) output(64,eq,16)
Optimization: 34 5
Answer: 12
preference(1,(1,1),0,for(atom(hasPrep(4))),()) preference(1,(1,4),0,for(atom(hasIngredient(6))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),4,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),4,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(12))),()) preference(1,aso) output(92,better,58) output(58,better,77) output(16,better,65) output(84,better,22) output(92,better,64) output(100,better,58) output(51,better,38) output(84,better,24) output(79,better,24) output(52,better,24) output(51,better,52) output(75,better,38) output(79,better,22) output(52,better,22) output(65,better,84) output(92,better,77) output(100,better,77) output(64,better,77) output(92,better,10) output(100,better,10) output(16,better,84) output(10,better,84) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(92,better,65) output(100,better,65) output(65,better,79) output(92,better,75) output(10,better,79) output(65,better,90) output(10,better,90) output(58,better,90) output(92,better,90) output(58,better,79) output(92,better,79) output(64,better,79) output(64,better,90) output(77,worse,10) output(38,worse,52) output(38,worse,84) output(77,worse,65) output(10,worse,16) output(22,worse,90) output(64,worse,100) output(58,worse,51) output(77,worse,16) output(58,worse,16) output(38,worse,90) output(64,worse,51) output(64,worse,16) output(79,eq,84) output(52,eq,84) output(64,eq,58) output(10,eq,65) output(58,eq,10) output(64,eq,10) output(58,eq,65) output(38,eq,22) output(77,eq,84) output(64,eq,65) output(58,eq,75) output(92,eq,100) output(84,eq,90) output(92,eq,16) output(77,eq,79) output(52,eq,90) output(64,eq,75) output(92,eq,51) output(77,eq,90)
Optimization: 33 4
Progression : [ 2;33] (Error: 15.5)
Answer: 13
preference(1,(1,1),0,for(atom(hasPrep(4))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(79,better,84) output(84,better,22) output(100,better,58) output(38,better,52) output(38,better,84) output(75,better,38) output(64,better,58) output(79,better,22) output(52,better,22) output(65,better,84) output(58,better,10) output(100,better,77) output(92,better,10) output(100,better,10) output(64,better,10) output(77,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(100,better,38) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(65,better,24) output(16,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(58,better,51) output(77,better,16) output(92,better,16) output(77,better,79) output(38,better,90) output(65,better,90) output(92,better,51) output(64,better,51) output(77,better,90) output(58,better,90) output(92,better,90) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(58,worse,77) output(51,worse,38) output(84,worse,24) output(10,worse,65) output(58,worse,38) output(10,worse,16) output(22,worse,90) output(64,worse,100) output(58,worse,75) output(92,worse,75) output(92,worse,100) output(64,worse,75) output(16,eq,65) output(92,eq,64) output(92,eq,77) output(64,eq,77) output(58,eq,65) output(92,eq,38) output(51,eq,24) output(10,eq,24) output(64,eq,38) output(58,eq,16) output(52,eq,90)
Optimization: 32 5
Answer: 14
preference(1,(1,1),0,for(atom(hasPrep(4))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasCategory(4))),()) preference(1,(1,5),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(92,better,58) output(58,better,77) output(77,better,10) output(79,better,84) output(84,better,22) output(100,better,58) output(38,better,84) output(75,better,38) output(64,better,58) output(79,better,22) output(52,better,22) output(65,better,84) output(58,better,10) output(92,better,77) output(100,better,77) output(64,better,77) output(92,better,10) output(100,better,10) output(64,better,10) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(65,better,24) output(16,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(58,better,51) output(92,better,75) output(92,better,16) output(65,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(58,better,90) output(92,better,90) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(51,worse,38) output(84,worse,24) output(10,worse,65) output(77,worse,65) output(10,worse,16) output(22,worse,90) output(77,worse,16) output(16,eq,65) output(92,eq,64) output(58,eq,65) output(51,eq,24) output(10,eq,24) output(64,eq,100) output(58,eq,75) output(92,eq,100) output(58,eq,16) output(52,eq,90)
Optimization: 30 5
Answer: 15
preference(1,(1,1),0,for(atom(hasPrep(4))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(atom(hasDifficulty(4))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,5),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(92,better,58) output(58,better,77) output(77,better,10) output(16,better,65) output(79,better,84) output(84,better,22) output(100,better,58) output(51,better,38) output(38,better,84) output(51,better,52) output(75,better,38) output(64,better,58) output(79,better,22) output(52,better,22) output(65,better,84) output(58,better,10) output(92,better,77) output(100,better,77) output(64,better,77) output(92,better,10) output(100,better,10) output(64,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(92,better,24) output(100,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(92,better,75) output(84,better,90) output(92,better,16) output(52,better,90) output(38,better,90) output(65,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(84,worse,24) output(52,worse,24) output(38,worse,24) output(65,worse,24) output(10,worse,24) output(77,worse,24) output(10,worse,16) output(77,worse,16) output(92,eq,64) output(10,eq,65) output(51,eq,24) output(16,eq,24) output(58,eq,24) output(75,eq,24) output(22,eq,90) output(64,eq,100) output(58,eq,75) output(58,eq,51) output(92,eq,100) output(58,eq,16)
Optimization: 27 5
Answer: 16
preference(1,(1,1),0,for(atom(hasPrep(4))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(atom(hasDifficulty(4))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(2))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),4,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(92,better,58) output(58,better,77) output(79,better,84) output(84,better,22) output(92,better,64) output(100,better,58) output(51,better,38) output(38,better,52) output(79,better,24) output(38,better,84) output(51,better,52) output(75,better,38) output(79,better,22) output(65,better,84) output(92,better,77) output(100,better,77) output(64,better,77) output(92,better,10) output(100,better,10) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(58,better,38) output(92,better,38) output(100,better,38) output(75,better,52) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(10,better,16) output(65,better,79) output(92,better,75) output(84,better,90) output(77,better,16) output(58,better,16) output(92,better,16) output(10,better,79) output(52,better,90) output(38,better,90) output(65,better,90) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,79) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(77,worse,10) output(16,worse,65) output(77,worse,65) output(64,worse,100) output(58,worse,51) output(64,worse,51) output(52,eq,24) output(64,eq,58) output(10,eq,65) output(58,eq,10) output(64,eq,10) output(58,eq,65) output(16,eq,24) output(64,eq,65) output(58,eq,75) output(92,eq,100) output(77,eq,79) output(64,eq,75) output(92,eq,51)
Optimization: 25 5
Answer: 17
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),4,for(atom(hasPrep(2))),()) preference(1,aso) output(92,better,58) output(79,better,84) output(100,better,58) output(52,better,84) output(52,better,24) output(38,better,84) output(64,better,58) output(79,better,22) output(52,better,22) output(65,better,84) output(92,better,77) output(100,better,77) output(64,better,77) output(92,better,10) output(100,better,10) output(64,better,10) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(92,better,38) output(100,better,38) output(51,better,84) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(100,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(10,better,16) output(65,better,79) output(22,better,90) output(92,better,75) output(84,better,90) output(77,better,16) output(58,better,16) output(92,better,16) output(10,better,79) output(77,better,79) output(52,better,90) output(38,better,90) output(65,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,79) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(16,worse,65) output(84,worse,24) output(58,eq,77) output(77,eq,10) output(84,eq,22) output(92,eq,64) output(51,eq,52) output(75,eq,38) output(10,eq,65) output(58,eq,10) output(77,eq,65) output(58,eq,65) output(58,eq,38) output(16,eq,24) output(64,eq,100) output(58,eq,75) output(92,eq,100)
Optimization: 23 3
Progression : [ 3;23] (Error: 6.66667)
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),4,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),4,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,3),3,for(atom(hasPrep(2))),()) preference(1,(1,4),3,for(atom(hasCost(3))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(16,better,65) output(84,better,22) output(38,better,52) output(52,better,84) output(38,better,84) output(51,better,52) output(64,better,58) output(52,better,22) output(65,better,84) output(10,better,65) output(58,better,10) output(92,better,77) output(64,better,77) output(92,better,10) output(64,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(92,better,38) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(64,better,84) output(92,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(64,better,65) output(10,better,16) output(22,better,90) output(64,better,100) output(58,better,75) output(58,better,51) output(92,better,75) output(92,better,100) output(84,better,90) output(77,better,16) output(58,better,16) output(92,better,16) output(77,better,79) output(52,better,90) output(38,better,90) output(65,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,79) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(100,worse,58) output(51,worse,38) output(84,worse,24) output(75,worse,38) output(100,worse,77) output(100,worse,38) output(58,eq,77) output(92,eq,64) output(58,eq,38)
Optimization: 22 6
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),4,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,4),4,for(atom(hasCategory(4))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(16,better,65) output(84,better,22) output(38,better,52) output(52,better,84) output(38,better,84) output(51,better,52) output(64,better,58) output(52,better,22) output(65,better,84) output(10,better,65) output(58,better,10) output(92,better,77) output(64,better,77) output(92,better,10) output(64,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(64,better,84) output(92,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(64,better,65) output(10,better,16) output(22,better,90) output(64,better,100) output(58,better,75) output(58,better,51) output(92,better,75) output(92,better,100) output(84,better,90) output(77,better,16) output(58,better,16) output(92,better,16) output(77,better,79) output(52,better,90) output(38,better,90) output(65,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(58,better,79) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(100,worse,58) output(84,worse,24) output(100,worse,77) output(100,worse,38) output(58,eq,77) output(92,eq,64)
Optimization: 21 6
Progression : [ 4;21] (Error: 4.25)
Answer: 20
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,aso) output(58,better,77) output(77,better,10) output(16,better,65) output(79,better,84) output(84,better,22) output(38,better,52) output(52,better,84) output(79,better,24) output(38,better,84) output(51,better,52) output(79,better,22) output(52,better,22) output(65,better,84) output(10,better,65) output(58,better,10) output(92,better,77) output(64,better,77) output(92,better,10) output(64,better,10) output(77,better,65) output(58,better,65) output(16,better,84) output(10,better,84) output(38,better,22) output(51,better,22) output(65,better,22) output(16,better,22) output(58,better,38) output(92,better,38) output(58,better,52) output(51,better,84) output(75,better,84) output(38,better,24) output(51,better,24) output(65,better,24) output(16,better,24) output(10,better,24) output(77,better,24) output(58,better,24) output(92,better,24) output(100,better,24) output(75,better,24) output(64,better,24) output(58,better,84) output(92,better,84) output(100,better,84) output(64,better,84) output(92,better,52) output(64,better,52) output(64,better,38) output(10,better,22) output(77,better,22) output(58,better,22) output(92,better,22) output(100,better,22) output(75,better,22) output(64,better,22) output(77,better,84) output(92,better,65) output(100,better,65) output(64,better,65) output(10,better,16) output(64,better,100) output(58,better,75) output(58,better,51) output(92,better,75) output(92,better,100) output(77,better,16) output(58,better,16) output(92,better,16) output(52,better,90) output(38,better,90) output(64,better,75) output(92,better,51) output(64,better,51) output(10,better,90) output(77,better,90) output(58,better,90) output(92,better,90) output(92,better,79) output(64,better,79) output(64,better,16) output(64,better,90) output(51,worse,38) output(75,worse,38) output(65,worse,79) output(22,worse,90) output(92,eq,64)
Optimization: 20 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.032 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 20 6
Bounds       : [4;20] [0;6]
Calls        : 1
Time         : 297.947s (Solving: 268.32s 1st Model: 1.80s Unsat: 0.00s)
CPU Time     : 1097.601s
Threads      : 4        (Winner: 4)

Choices      : 5213007  (Domain: 123558)
Conflicts    : 695998   (Analyzed: 695994)
Restarts     : 870      (Average: 799.99 Last: 24203)
Model-Level  : 631.6   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 1079368  (Deleted: 869298)
  Binary     : 14104    (Ratio:   1.31%)
  Ternary    : 49734    (Ratio:   4.61%)
  Conflict   : 695994   (Average Length:  473.4 Ratio:  64.48%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 383374   (Average Length:   67.2 Ratio:  35.52%) 
  Distributed: 127845   (Ratio:  18.37% Average LBD: 3.35) 
  Integrated : 383535   (Ratio: 300.00% Unit: 1571 Average Jumps: 121.86)
Backjumps    : 695994   (Average:  6.85 Max: 4601 Sum: 4764671)
  Executed   : 695933   (Average:  6.84 Max: 4601 Sum: 4761736 Ratio:  99.94%)
  Bounded    : 61       (Average: 48.11 Max: 102 Sum:   2935 Ratio:   0.06%)

Rules        : 13700998
  Choice     : 31      
  Minimize   : 2       
Atoms        : 2703856 
Bodies       : 3203458 
  Count      : 3738    
Equivalences : 8389216  (Atom=Atom: 2421950 Body=Body: 2647226 Other: 3320040)
Tight        : Yes
Variables    : 271231   (Eliminated:    0 Frozen: 188965)
Constraints  : 11235395 (Binary:  97.6% Ternary:   2.2% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(4)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(4)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasCategory(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(2)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(4)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(7)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(5)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasIngredient(5)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCategory(1)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasCategory(2)) >> atom(hasIngredient(4)) ; 
  atom(hasCost(5)) >> atom(hasCategory(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(11)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> atom(hasPrep(5)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(2)) >> atom(hasCost(5)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(4)) >> atom(hasIngredient(6)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(1))  >> not atom(hasCost(4))  || not atom(hasIngredient(9))  ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrepTime(2)) >> not atom(hasCategory(1))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasPrep(6))  || atom(hasIngredient(9)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(1)) >> not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(1))  >> not atom(hasCost(4))  || not atom(hasIngredient(9))  ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrepTime(2)) >> not atom(hasCategory(1))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasPrep(6))  || atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(1)) >> not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(1))  >> not atom(hasCost(4))  || not atom(hasIngredient(9))  ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrepTime(2)) >> not atom(hasCategory(1))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasPrep(6))  || atom(hasIngredient(4)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> not atom(hasIngredient(12))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasPrep(6)) >> atom(hasIngredient(7)) >> not atom(hasCategory(2))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(0)) >> not atom(hasPrep(7))  >> atom(hasCost(3)) || not atom(hasPrep(0))  ; 
  atom(hasCost(4)) >> atom(hasPrep(6)) >> not atom(hasCategory(3))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) || atom(hasCategory(1)) ; 
  not atom(hasCategory(2))  || atom(hasCategory(1)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(3)) >> not atom(hasCategory(3))  >> atom(hasPrepTime(1)) || not atom(hasCost(4))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(0))  || atom(hasPrepTime(2)) ; 
  not atom(hasPrep(1))  || not atom(hasIngredient(6))  ; 
  not atom(hasIngredient(3))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasPrep(0))  || not atom(hasIngredient(6))  ; 
  atom(hasIngredient(12)) || not atom(hasDifficulty(1))  ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(6)) ; 
  atom(hasPrep(1)) >> atom(hasIngredient(3)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(2)) >> not atom(hasCost(2))  || not atom(hasDifficulty(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(6)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(12)) >> not atom(hasIngredient(9))  >> not atom(hasDifficulty(2))  || not atom(hasCost(4))  ; 
  not atom(hasCategory(5))  >> not atom(hasIngredient(5))  >> not atom(hasPrep(5))  >> not atom(hasIngredient(9))  || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasPrep(0))  || atom(hasPrepTime(2)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasPrep(2)) ; 
  atom(hasCost(4)) >> atom(hasCategory(3)) >> atom(hasDifficulty(2)) >> not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasPrep(0))  || atom(hasPrepTime(2)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  atom(hasCost(4)) >> atom(hasCategory(4)) >> atom(hasPrepTime(1)) >> not atom(hasCategory(3))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasPrep(0))  || atom(hasPrepTime(2)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(5))  >> not atom(hasCategory(2))  || atom(hasDifficulty(4)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(3)) >> atom(hasPrepTime(1)) >> not atom(hasCategory(3))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  atom(hasCost(3)) >> atom(hasPrep(2)) >> atom(hasCategory(1)) || atom(hasPrepTime(2)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(5))  >> not atom(hasCategory(2))  || atom(hasDifficulty(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(12)) >> atom(hasDifficulty(1)) >> not atom(hasCategory(3))  || not atom(hasDifficulty(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(1))  >> not atom(hasPrep(0))  || atom(hasCost(1)) ; 
  atom(hasIngredient(12)) >> not atom(hasCategory(3))  || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(2))  >> not atom(hasCost(2))  >> atom(hasPrep(2)) || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasIngredient(11)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(5)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasCost(2))  || not atom(hasIngredient(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasCost(1)) >> atom(hasPrep(2)) || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> atom(hasCost(3)) >> not atom(hasIngredient(12))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(3)) >> not atom(hasPrep(6))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasIngredient(11)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(5)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasCost(2))  || not atom(hasIngredient(1))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(3)) >> not atom(hasCategory(3))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(1)) >> not atom(hasCost(2))  >> atom(hasCategory(4)) || not atom(hasPrep(3))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  || not atom(hasCategory(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(1))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) || not atom(hasPrep(7))  ; 
  not atom(hasIngredient(12))  >> not atom(hasPrep(1))  || atom(hasCategory(2)) ; 
  atom(hasPrep(6)) >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(0))  ; 
  atom(hasCost(4)) >> not atom(hasPrepTime(2))  >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(3)) >> not atom(hasIngredient(7))  >> not atom(hasPrep(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> not atom(hasCost(2))  
}.
