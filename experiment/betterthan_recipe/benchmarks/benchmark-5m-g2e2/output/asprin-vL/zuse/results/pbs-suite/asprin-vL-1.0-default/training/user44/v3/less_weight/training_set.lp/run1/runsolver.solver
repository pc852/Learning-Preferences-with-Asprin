asprin_vL version 1.0
Reading from stdin
-:1302:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1312:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1327:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1408:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1669:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1682:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1859:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1988:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2060:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2064:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2064:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2070:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2169:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2195:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2315:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2349:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2371:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1219:1-16: info: no atoms over signature occur in program:
  output/3

-:1211:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1212:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,77) output(77,eq,10) output(10,eq,16) output(16,eq,65) output(65,eq,79) output(84,eq,22) output(22,eq,90) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(44,eq,67) output(67,eq,79) output(79,eq,90) output(65,eq,90) output(67,eq,90) output(44,eq,79) output(16,eq,67) output(10,eq,44) output(51,eq,44) output(75,eq,16) output(9,eq,33) output(84,eq,90) output(79,eq,22) output(16,eq,79) output(10,eq,65) output(51,eq,65) output(77,eq,16) output(58,eq,10) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(10,eq,79) output(51,eq,79) output(75,eq,79) output(77,eq,79) output(65,eq,22) output(67,eq,22) output(44,eq,22) output(16,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(33,eq,44) output(77,eq,44) output(58,eq,44) output(10,eq,67) output(51,eq,67) output(75,eq,67) output(77,eq,67) output(44,eq,90) output(16,eq,90) output(10,eq,90) output(51,eq,90) output(75,eq,90) output(33,eq,90) output(100,eq,90) output(9,eq,90) output(77,eq,90) output(58,eq,90) output(92,eq,90) output(58,eq,67) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,67) output(92,eq,44) output(100,eq,44) output(9,eq,44) output(9,eq,16) output(10,eq,22) output(51,eq,22) output(75,eq,22) output(77,eq,22) output(58,eq,22) output(92,eq,22) output(33,eq,22) output(100,eq,22) output(58,eq,79) output(92,eq,79) output(33,eq,79) output(100,eq,79) output(9,eq,79) output(92,eq,65) output(100,eq,65) output(9,eq,65) output(9,eq,22) output(79,eq,84) output(9,eq,100) output(33,eq,75) output(33,eq,51) output(65,eq,84) output(67,eq,84) output(44,eq,84) output(16,eq,84) output(10,eq,84) output(9,eq,75) output(9,eq,51) output(33,eq,84) output(9,eq,84) output(77,eq,84)
Optimization: 105 0
Answer: 2
preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,10),1,for(atom(hasDifficulty(3))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,84) output(22,better,90) output(51,better,79) output(67,better,79) output(67,better,90) output(67,better,22) output(67,better,84) output(9,better,90) output(9,better,79) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,79) output(77,better,44) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,44) output(92,better,22) output(92,better,79) output(100,better,90) output(100,better,44) output(100,better,22) output(100,better,79) output(16,better,44) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,44) output(33,better,90) output(33,better,22) output(33,better,79) output(33,better,51) output(33,better,84) output(44,better,79) output(44,better,90) output(44,better,84) output(58,better,10) output(58,better,44) output(58,better,90) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,44) output(75,better,90) output(75,better,22) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(10,worse,67) output(10,worse,90) output(10,worse,22) output(51,worse,16) output(51,worse,44) output(51,worse,65) output(51,worse,67) output(51,worse,22) output(84,worse,22) output(84,worse,90) output(9,worse,33) output(9,worse,67) output(9,worse,16) output(9,worse,65) output(9,worse,100) output(9,worse,75) output(79,worse,90) output(79,worse,22) output(44,worse,67) output(58,eq,77) output(16,eq,65) output(100,eq,33) output(16,eq,67) output(75,eq,16) output(77,eq,16) output(92,eq,77) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(33,eq,65) output(77,eq,65) output(58,eq,65) output(44,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,67) output(77,eq,67) output(51,eq,90) output(58,eq,67) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,44) output(92,eq,65) output(100,eq,65) output(9,eq,22) output(33,eq,75)
Optimization: 51 4
Answer: 3
preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,84) output(22,better,90) output(67,better,79) output(67,better,90) output(67,better,22) output(67,better,84) output(9,better,90) output(9,better,44) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,90) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,44) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,44) output(33,better,90) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,79) output(44,better,90) output(44,better,84) output(58,better,10) output(58,better,90) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,84) output(75,better,79) output(75,better,90) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(10,worse,67) output(10,worse,90) output(10,worse,22) output(51,worse,16) output(51,worse,44) output(51,worse,65) output(51,worse,79) output(51,worse,67) output(51,worse,90) output(51,worse,22) output(84,worse,22) output(84,worse,90) output(79,worse,90) output(79,worse,22) output(44,worse,67) output(58,worse,77) output(58,worse,16) output(58,worse,67) output(75,worse,16) output(75,worse,67) output(100,eq,33) output(16,eq,67) output(9,eq,33) output(77,eq,16) output(92,eq,77) output(92,eq,16) output(75,eq,65) output(58,eq,65) output(65,eq,22) output(44,eq,22) output(33,eq,16) output(100,eq,16) output(75,eq,44) output(58,eq,44) output(77,eq,67) output(92,eq,67) output(33,eq,67) output(100,eq,67) output(9,eq,67) output(9,eq,16) output(75,eq,22) output(58,eq,22) output(9,eq,100)
Optimization: 47 4
Answer: 4
preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,10),1,for(atom(hasIngredient(9))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,84) output(51,better,79) output(51,better,22) output(67,better,79) output(67,better,90) output(67,better,22) output(67,better,84) output(9,better,90) output(9,better,79) output(9,better,22) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,22) output(92,better,79) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,10) output(58,better,90) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,90) output(75,better,22) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(10,worse,67) output(10,worse,90) output(10,worse,22) output(22,worse,90) output(51,worse,16) output(51,worse,44) output(51,worse,65) output(51,worse,67) output(84,worse,22) output(84,worse,90) output(9,worse,33) output(9,worse,67) output(9,worse,44) output(9,worse,100) output(79,worse,90) output(92,worse,77) output(92,worse,67) output(92,worse,44) output(16,worse,44) output(16,worse,67) output(58,worse,77) output(58,worse,44) output(58,worse,67) output(75,worse,44) output(75,worse,67) output(16,eq,65) output(100,eq,33) output(75,eq,16) output(79,eq,22) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(58,eq,65) output(33,eq,44) output(77,eq,44) output(51,eq,90) output(100,eq,44) output(9,eq,16) output(92,eq,65) output(9,eq,65) output(9,eq,75)
Optimization: 45 5
Answer: 5
preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,10),1,for(atom(hasIngredient(9))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,84) output(51,better,79) output(51,better,22) output(67,better,79) output(67,better,22) output(67,better,84) output(9,better,90) output(9,better,67) output(9,better,79) output(9,better,22) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,67) output(92,better,22) output(92,better,79) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,10) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(10,worse,67) output(10,worse,90) output(22,worse,90) output(51,worse,16) output(51,worse,44) output(51,worse,65) output(84,worse,22) output(84,worse,90) output(9,worse,33) output(9,worse,44) output(9,worse,100) output(79,worse,90) output(92,worse,77) output(92,worse,44) output(16,worse,44) output(58,worse,77) output(58,worse,44) output(75,worse,44) output(16,eq,65) output(100,eq,33) output(67,eq,90) output(75,eq,16) output(58,eq,16) output(92,eq,16) output(75,eq,65) output(58,eq,65) output(33,eq,44) output(77,eq,44) output(51,eq,67) output(51,eq,90) output(100,eq,44) output(9,eq,16) output(10,eq,22) output(92,eq,65) output(9,eq,65) output(9,eq,75)
Optimization: 40 5
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasCategory(4))),3) preference(1,(1,3),1,for(atom(hasIngredient(12))),2) preference(1,(1,4),1,for(atom(hasIngredient(9))),3) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasCost(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(7))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,79) output(67,better,90) output(67,better,22) output(67,better,84) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,79) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,90) output(33,better,79) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,90) output(58,better,79) output(65,better,79) output(65,better,90) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,90) output(10,worse,44) output(84,worse,22) output(9,worse,51) output(79,worse,22) output(79,worse,84) output(92,worse,77) output(92,worse,10) output(92,worse,16) output(92,worse,67) output(92,worse,44) output(92,worse,22) output(92,worse,79) output(92,worse,65) output(100,worse,44) output(16,worse,44) output(16,worse,67) output(16,worse,22) output(33,worse,44) output(33,worse,67) output(33,worse,22) output(33,worse,75) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,44) output(58,worse,67) output(58,worse,22) output(65,worse,22) output(65,worse,84) output(75,worse,44) output(75,worse,67) output(58,eq,65) output(33,eq,16) output(92,eq,90) output(100,eq,67) output(75,eq,22)
Optimization: 37 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasIngredient(9))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasIngredient(12))),4) preference(1,(1,7),1,for(atom(hasCategory(4))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasIngredient(7))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,84) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(67,better,84) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(65,better,84) output(10,worse,16) output(10,worse,44) output(10,worse,79) output(10,worse,67) output(67,worse,79) output(84,worse,22) output(84,worse,90) output(92,worse,77) output(33,worse,16) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(58,worse,90) output(58,worse,67) output(58,worse,22) output(58,worse,79) output(65,worse,79) output(75,worse,16) output(75,worse,79) output(75,worse,44) output(75,worse,67) output(22,eq,90) output(51,eq,16) output(65,eq,90) output(10,eq,65) output(75,eq,65) output(65,eq,22) output(33,eq,44) output(10,eq,90) output(75,eq,90) output(10,eq,22) output(75,eq,22) output(9,eq,100)
Optimization: 36 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasIngredient(9))),6) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),4) preference(1,(1,8),1,for(atom(hasCategory(4))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(10,better,16) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(67,better,84) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,90) output(92,better,22) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,16) output(58,better,90) output(58,better,67) output(58,better,22) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(22,worse,90) output(51,worse,44) output(67,worse,79) output(9,worse,44) output(92,worse,77) output(92,worse,10) output(92,worse,44) output(92,worse,79) output(92,worse,65) output(100,worse,44) output(16,worse,65) output(16,worse,44) output(16,worse,79) output(33,worse,44) output(33,worse,79) output(33,worse,75) output(33,worse,51) output(58,worse,77) output(58,worse,65) output(58,worse,44) output(58,worse,79) output(65,worse,79) output(75,worse,44) output(16,eq,67) output(58,eq,10) output(92,eq,16) output(92,eq,67) output(9,eq,75)
Optimization: 31 14
Answer: 9
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,90) output(92,better,67) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,16) output(10,worse,44) output(22,worse,90) output(51,worse,16) output(51,worse,44) output(67,worse,79) output(9,worse,44) output(9,worse,100) output(92,worse,77) output(92,worse,16) output(92,worse,44) output(100,worse,44) output(16,worse,44) output(33,worse,16) output(33,worse,44) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(75,worse,16) output(75,worse,65) output(75,worse,44) output(10,eq,65) output(33,eq,65) output(9,eq,16) output(67,eq,84)
Optimization: 28 14
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,22) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(22,worse,90) output(67,worse,79) output(9,worse,100) output(92,worse,77) output(16,worse,65) output(16,worse,44) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(58,worse,90) output(58,worse,67) output(58,worse,79) output(75,worse,65) output(75,worse,44) output(16,eq,79) output(33,eq,65) output(33,eq,44) output(67,eq,84)
Optimization: 25 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(3))),4) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,90) output(58,better,67) output(58,better,22) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,44) output(22,worse,90) output(67,worse,79) output(9,worse,100) output(92,worse,77) output(92,worse,44) output(16,worse,44) output(33,worse,16) output(33,worse,44) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,16) output(58,worse,65) output(58,worse,44) output(58,worse,79) output(75,worse,16) output(75,worse,65) output(75,worse,79) output(75,worse,44) output(51,eq,44) output(92,eq,10) output(33,eq,65) output(67,eq,84)
Optimization: 24 14
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,16) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,67) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,16) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,44) output(22,worse,90) output(51,worse,44) output(67,worse,79) output(9,worse,44) output(9,worse,100) output(92,worse,77) output(92,worse,44) output(100,worse,44) output(16,worse,65) output(16,worse,44) output(33,worse,44) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,65) output(58,worse,44) output(75,worse,65) output(75,worse,44) output(16,eq,79) output(92,eq,10) output(33,eq,65) output(67,eq,84)
Optimization: 23 14
Answer: 13
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(3))),7) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,16) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(22,worse,90) output(67,worse,79) output(9,worse,100) output(92,worse,77) output(16,worse,65) output(16,worse,44) output(33,worse,44) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,65) output(58,worse,44) output(75,worse,65) output(75,worse,44) output(75,eq,16) output(92,eq,10) output(58,eq,16) output(33,eq,65) output(67,eq,84)
Optimization: 19 14
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasIngredient(3))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasDifficulty(3))),8) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,84) output(44,better,67) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,10) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,16) output(10,worse,44) output(10,worse,65) output(10,worse,79) output(22,worse,90) output(67,worse,79) output(92,worse,77) output(16,worse,65) output(33,worse,75) output(33,worse,51) output(44,worse,79) output(58,worse,77) output(58,worse,65) output(58,eq,16) output(33,eq,65) output(67,eq,84)
Optimization: 16 14
Answer: 15
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasCost(3))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(3))),7) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,90) output(67,better,22) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,65) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,65) output(75,better,67) output(75,better,90) output(75,better,22) output(22,worse,90) output(67,worse,79) output(92,worse,77) output(16,worse,44) output(33,worse,51) output(58,worse,77) output(58,worse,10) output(58,worse,44) output(65,worse,79) output(75,worse,16) output(75,worse,79) output(75,worse,44) output(92,eq,10) output(58,eq,16) output(67,eq,84)
Optimization: 15 14
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasCost(3))),5) preference(1,(1,5),1,for(atom(hasIngredient(4))),4) preference(1,(1,7),1,for(atom(hasDifficulty(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasIngredient(3))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(22,better,90) output(51,better,79) output(51,better,90) output(51,better,22) output(67,better,79) output(67,better,90) output(67,better,22) output(67,better,84) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,84) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22) output(10,worse,16) output(51,worse,16) output(84,worse,22) output(84,worse,90) output(92,worse,77) output(58,worse,77) output(75,worse,16) output(100,eq,33) output(44,eq,67) output(51,eq,44) output(79,eq,22) output(51,eq,65) output(51,eq,67)
Optimization: 13 10
Answer: 17
preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,5),1,for(atom(hasIngredient(4))),8) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasCost(3))),8) preference(1,(1,9),1,for(atom(hasIngredient(10))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,22) output(67,better,84) output(84,better,22) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,22) output(79,better,84) output(92,better,77) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,22) output(65,better,84) output(75,better,65) output(75,better,79) output(75,better,67) output(75,better,90) output(75,better,22) output(22,worse,90) output(67,worse,79) output(67,worse,90) output(84,worse,90) output(75,worse,16) output(77,eq,10) output(65,eq,79) output(100,eq,33) output(79,eq,90) output(65,eq,90) output(75,eq,44)
Optimization: 11 9
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrep(4))),5) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasDifficulty(3))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),3) preference(1,(1,12),1,for(atom(hasCost(3))),5) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(10,better,16) output(10,better,44) output(10,better,65) output(10,better,79) output(10,better,67) output(10,better,90) output(10,better,22) output(10,better,84) output(22,better,90) output(51,better,16) output(51,better,44) output(51,better,65) output(51,better,79) output(51,better,67) output(51,better,90) output(51,better,22) output(67,better,79) output(67,better,90) output(67,better,22) output(67,better,84) output(84,better,22) output(84,better,90) output(9,better,33) output(9,better,90) output(9,better,67) output(9,better,44) output(9,better,16) output(9,better,79) output(9,better,65) output(9,better,22) output(9,better,100) output(9,better,75) output(9,better,51) output(9,better,84) output(77,better,10) output(77,better,16) output(77,better,65) output(77,better,79) output(77,better,44) output(77,better,67) output(77,better,90) output(77,better,22) output(77,better,84) output(79,better,90) output(79,better,22) output(79,better,84) output(92,better,77) output(92,better,10) output(92,better,16) output(92,better,90) output(92,better,67) output(92,better,44) output(92,better,22) output(92,better,79) output(92,better,65) output(100,better,33) output(100,better,16) output(100,better,90) output(100,better,67) output(100,better,44) output(100,better,22) output(100,better,79) output(100,better,65) output(16,better,65) output(16,better,44) output(16,better,67) output(16,better,79) output(16,better,22) output(16,better,90) output(16,better,84) output(33,better,65) output(33,better,16) output(33,better,44) output(33,better,90) output(33,better,67) output(33,better,22) output(33,better,79) output(33,better,75) output(33,better,51) output(33,better,84) output(44,better,67) output(44,better,79) output(44,better,22) output(44,better,90) output(44,better,84) output(58,better,77) output(58,better,10) output(58,better,16) output(58,better,65) output(58,better,44) output(58,better,90) output(58,better,67) output(58,better,22) output(58,better,79) output(65,better,79) output(65,better,90) output(65,better,22) output(65,better,84) output(75,better,16) output(75,better,65) output(75,better,79) output(75,better,44) output(75,better,67) output(75,better,90) output(75,better,22)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Progression : 0 [ 3;14] (Error: 3.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.039 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 0 14
Calls        : 1
Time         : 297.978s (Solving: 293.92s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1176.824s
Threads      : 4        (Winner: 4)

Choices      : 6660896  (Domain: 198432)
Conflicts    : 4968688  (Analyzed: 4968685)
Restarts     : 3820     (Average: 1300.70 Last: 142726)
Model-Level  : 62.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 5049205  (Deleted: 4824096)
  Binary     : 416      (Ratio:   0.01%)
  Ternary    : 1128     (Ratio:   0.02%)
  Conflict   : 4968685  (Average Length:  383.2 Ratio:  98.41%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 80520    (Average Length:   42.7 Ratio:   1.59%) 
  Distributed: 26894    (Ratio:   0.54% Average LBD: 3.74) 
  Integrated : 80682    (Ratio: 300.00% Unit: 129 Average Jumps: 7.46)
Backjumps    : 4968685  (Average:  1.30 Max: 789 Sum: 6479223)
  Executed   : 4968684  (Average:  1.30 Max: 789 Sum: 6479151 Ratio: 100.00%)
  Bounded    : 1        (Average: 72.00 Max:  72 Sum:     72 Ratio:   0.00%)

Rules        : 1090019 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 20908   
Bodies       : 19684   
  Sum        : 210     
  Count      : 14      
Equivalences : 9525     (Atom=Atom: 1063 Body=Body: 434 Other: 8028)
Tight        : Yes
Variables    : 17355    (Eliminated:    0 Frozen: 8031)
Constraints  : 1105510  (Binary:  98.8% Ternary:   0.9% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  7 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrepTime(1)) 
}.
