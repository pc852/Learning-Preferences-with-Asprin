asprin_vL version 1.0
Reading from stdin
-:1305:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1315:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1330:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1411:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1672:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1685:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1862:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1991:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2063:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2067:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2067:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2073:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2172:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2198:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2318:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2352:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2374:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1222:1-16: info: no atoms over signature occur in program:
  output/3

-:1214:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1215:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(21,eq,58) output(62,eq,39) output(67,eq,50) output(50,eq,84) output(84,eq,66) output(66,eq,32) output(61,eq,39) output(39,eq,69) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(32,eq,71) output(66,eq,71) output(84,eq,71) output(50,eq,32) output(17,eq,32) output(7,eq,84) output(69,eq,17) output(62,eq,69) output(61,eq,69) output(18,eq,39) output(50,eq,66) output(17,eq,66) output(67,eq,84) output(39,eq,50) output(58,eq,39) output(10,eq,58) output(21,eq,39) output(10,eq,39) output(62,eq,50) output(61,eq,50) output(18,eq,50) output(58,eq,50) output(39,eq,84) output(62,eq,84) output(61,eq,84) output(7,eq,66) output(69,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(18,eq,69) output(30,eq,69) output(58,eq,69) output(21,eq,69) output(39,eq,17) output(62,eq,17) output(61,eq,17) output(69,eq,84) output(7,eq,32) output(69,eq,32) output(67,eq,32) output(39,eq,32) output(50,eq,71) output(17,eq,71) output(7,eq,71) output(67,eq,71) output(39,eq,71) output(62,eq,71) output(61,eq,71) output(18,eq,71) output(30,eq,71) output(58,eq,71) output(21,eq,71) output(69,eq,71) output(62,eq,32) output(61,eq,32) output(18,eq,32) output(58,eq,32) output(21,eq,32) output(10,eq,32) output(30,eq,32) output(18,eq,84) output(30,eq,84) output(58,eq,84) output(21,eq,84) output(18,eq,17) output(30,eq,17) output(58,eq,17) output(21,eq,17) output(10,eq,17) output(10,eq,69) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(21,eq,66) output(10,eq,66) output(30,eq,66) output(10,eq,84) output(21,eq,50) output(10,eq,50) output(30,eq,50) output(10,eq,71) output(10,eq,21) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(69,eq,7) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(58,eq,7) output(10,eq,7) output(30,eq,7) output(10,eq,67)
Optimization: 108 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,2),1,for(atom(hasIngredient(9))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasIngredient(12))),6) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasIngredient(3))),6) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasCategory(4))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(10,better,84) output(18,better,84) output(50,better,84) output(67,better,84) output(39,better,84) output(61,better,84) output(62,better,84) output(69,better,84) output(7,better,84) output(21,better,84) output(30,better,84) output(58,better,84) output(17,better,84) output(84,worse,66) output(84,worse,32) output(84,worse,71) output(21,eq,58) output(62,eq,39) output(67,eq,50) output(66,eq,32) output(61,eq,39) output(39,eq,69) output(7,eq,17) output(32,eq,71) output(66,eq,71) output(50,eq,32) output(17,eq,32) output(69,eq,17) output(62,eq,69) output(61,eq,69) output(18,eq,39) output(50,eq,66) output(17,eq,66) output(39,eq,50) output(58,eq,39) output(10,eq,58) output(21,eq,39) output(10,eq,39) output(62,eq,50) output(61,eq,50) output(18,eq,50) output(58,eq,50) output(7,eq,66) output(69,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(18,eq,69) output(30,eq,69) output(58,eq,69) output(21,eq,69) output(39,eq,17) output(62,eq,17) output(61,eq,17) output(7,eq,32) output(69,eq,32) output(67,eq,32) output(39,eq,32) output(50,eq,71) output(17,eq,71) output(7,eq,71) output(67,eq,71) output(39,eq,71) output(62,eq,71) output(61,eq,71) output(18,eq,71) output(30,eq,71) output(58,eq,71) output(21,eq,71) output(69,eq,71) output(62,eq,32) output(61,eq,32) output(18,eq,32) output(58,eq,32) output(21,eq,32) output(10,eq,32) output(30,eq,32) output(18,eq,17) output(30,eq,17) output(58,eq,17) output(21,eq,17) output(10,eq,17) output(10,eq,69) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(21,eq,66) output(10,eq,66) output(30,eq,66) output(21,eq,50) output(10,eq,50) output(30,eq,50) output(10,eq,71) output(10,eq,21) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(69,eq,7) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(58,eq,7) output(10,eq,7) output(30,eq,7) output(10,eq,67)
Optimization: 95 14
Answer: 3
preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,50) output(10,better,71) output(10,better,21) output(18,better,50) output(18,better,71) output(67,better,50) output(67,better,71) output(84,better,71) output(39,better,50) output(39,better,71) output(61,better,50) output(61,better,71) output(62,better,50) output(62,better,71) output(66,better,71) output(69,better,71) output(7,better,71) output(30,better,71) output(30,better,50) output(32,better,71) output(58,better,50) output(58,better,71) output(17,better,71) output(50,worse,84) output(50,worse,32) output(50,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,32) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(61,eq,39) output(39,eq,69) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(17,eq,32) output(7,eq,84) output(69,eq,17) output(62,eq,69) output(61,eq,69) output(18,eq,39) output(17,eq,66) output(67,eq,84) output(58,eq,39) output(10,eq,58) output(10,eq,39) output(39,eq,84) output(62,eq,84) output(61,eq,84) output(7,eq,66) output(69,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(18,eq,69) output(30,eq,69) output(58,eq,69) output(39,eq,17) output(62,eq,17) output(61,eq,17) output(69,eq,84) output(7,eq,32) output(69,eq,32) output(67,eq,32) output(39,eq,32) output(50,eq,71) output(21,eq,71) output(62,eq,32) output(61,eq,32) output(18,eq,32) output(58,eq,32) output(10,eq,32) output(30,eq,32) output(18,eq,84) output(30,eq,84) output(58,eq,84) output(18,eq,17) output(30,eq,17) output(58,eq,17) output(10,eq,17) output(10,eq,69) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(10,eq,66) output(30,eq,66) output(10,eq,84) output(21,eq,50) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(69,eq,7) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(58,eq,7) output(10,eq,7) output(30,eq,7) output(10,eq,67)
Optimization: 85 1
Answer: 4
preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(18,better,50) output(18,better,71) output(18,better,84) output(67,better,50) output(67,better,84) output(67,better,71) output(39,better,50) output(39,better,84) output(39,better,71) output(61,better,50) output(61,better,84) output(61,better,71) output(62,better,50) output(62,better,84) output(62,better,71) output(66,better,71) output(69,better,84) output(69,better,71) output(7,better,84) output(7,better,71) output(30,better,71) output(30,better,84) output(30,better,50) output(32,better,71) output(58,better,50) output(58,better,71) output(58,better,84) output(17,better,84) output(17,better,71) output(50,worse,32) output(50,worse,66) output(84,worse,66) output(84,worse,32) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,32) output(21,worse,17) output(21,worse,66) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(61,eq,39) output(39,eq,69) output(7,eq,17) output(84,eq,71) output(17,eq,32) output(69,eq,17) output(62,eq,69) output(61,eq,69) output(18,eq,39) output(17,eq,66) output(58,eq,39) output(10,eq,58) output(10,eq,39) output(7,eq,66) output(69,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(18,eq,69) output(30,eq,69) output(58,eq,69) output(39,eq,17) output(62,eq,17) output(61,eq,17) output(7,eq,32) output(69,eq,32) output(67,eq,32) output(39,eq,32) output(50,eq,71) output(21,eq,71) output(62,eq,32) output(61,eq,32) output(18,eq,32) output(58,eq,32) output(10,eq,32) output(30,eq,32) output(21,eq,84) output(18,eq,17) output(30,eq,17) output(58,eq,17) output(10,eq,17) output(10,eq,69) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(10,eq,66) output(30,eq,66) output(21,eq,50) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(69,eq,7) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(58,eq,7) output(10,eq,7) output(30,eq,7) output(10,eq,67)
Optimization: 75 2
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,2),1,for(atom(hasIngredient(9))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasIngredient(12))),6) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasIngredient(3))),6) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasCategory(4))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,67) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(39,better,69) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(21,better,69) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(58,better,69) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,67) output(67,worse,50) output(67,worse,71) output(84,worse,71) output(61,worse,39) output(61,worse,50) output(61,worse,71) output(66,worse,71) output(69,worse,71) output(69,worse,7) output(30,worse,39) output(30,worse,71) output(30,worse,50) output(30,worse,18) output(30,worse,7) output(32,worse,71) output(17,worse,71) output(21,eq,58) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(17,eq,84) output(84,eq,32) output(17,eq,32) output(69,eq,17) output(61,eq,69) output(18,eq,39) output(17,eq,66) output(67,eq,84) output(39,eq,50) output(58,eq,39) output(10,eq,58) output(21,eq,39) output(10,eq,39) output(62,eq,50) output(18,eq,50) output(58,eq,50) output(61,eq,84) output(69,eq,66) output(67,eq,66) output(30,eq,69) output(61,eq,17) output(69,eq,84) output(69,eq,32) output(67,eq,32) output(50,eq,71) output(7,eq,71) output(39,eq,71) output(62,eq,71) output(18,eq,71) output(58,eq,71) output(21,eq,71) output(61,eq,32) output(30,eq,32) output(30,eq,84) output(30,eq,17) output(61,eq,66) output(30,eq,66) output(21,eq,50) output(10,eq,50) output(10,eq,71) output(10,eq,21) output(58,eq,62) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,7) output(10,eq,7)
Optimization: 68 14
Answer: 6
preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasCategory(5))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,17) output(10,better,69) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,84) output(18,better,17) output(67,better,50) output(67,better,84) output(67,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,17) output(39,better,71) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(66,better,71) output(7,better,17) output(7,better,84) output(7,better,71) output(30,better,69) output(30,better,71) output(30,better,84) output(30,better,17) output(30,better,50) output(32,better,71) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,84) output(58,better,17) output(50,worse,32) output(50,worse,66) output(84,worse,66) output(84,worse,32) output(69,worse,66) output(69,worse,32) output(69,worse,7) output(21,worse,58) output(21,worse,39) output(21,worse,32) output(21,worse,66) output(17,worse,32) output(17,worse,66) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(61,eq,39) output(17,eq,84) output(84,eq,71) output(69,eq,17) output(18,eq,39) output(58,eq,39) output(10,eq,58) output(10,eq,39) output(7,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(21,eq,69) output(69,eq,84) output(7,eq,32) output(67,eq,32) output(39,eq,32) output(50,eq,71) output(17,eq,71) output(21,eq,71) output(69,eq,71) output(62,eq,32) output(61,eq,32) output(18,eq,32) output(58,eq,32) output(10,eq,32) output(30,eq,32) output(21,eq,84) output(21,eq,17) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(10,eq,66) output(30,eq,66) output(21,eq,50) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(39,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(58,eq,7) output(10,eq,7) output(30,eq,7) output(10,eq,67)
Optimization: 64 4
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(9))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasIngredient(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),7) preference(1,(1,9),1,for(atom(hasIngredient(12))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasIngredient(8))),6) preference(1,(1,14),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,66) output(10,better,84) output(10,better,71) output(10,better,62) output(10,better,7) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(61,better,39) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,18) output(30,better,7) output(10,worse,69) output(10,worse,50) output(10,worse,21) output(18,worse,50) output(18,worse,69) output(67,worse,50) output(39,worse,69) output(39,worse,50) output(39,worse,67) output(61,worse,69) output(61,worse,50) output(62,worse,69) output(62,worse,50) output(30,worse,69) output(30,worse,50) output(58,worse,50) output(58,worse,69) output(58,worse,67) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(32,eq,71) output(66,eq,71) output(84,eq,71) output(17,eq,32) output(7,eq,84) output(18,eq,39) output(17,eq,66) output(58,eq,39) output(39,eq,84) output(62,eq,84) output(7,eq,66) output(39,eq,66) output(39,eq,17) output(62,eq,17) output(7,eq,32) output(39,eq,32) output(17,eq,71) output(7,eq,71) output(39,eq,71) output(62,eq,71) output(18,eq,71) output(58,eq,71) output(62,eq,32) output(18,eq,32) output(58,eq,32) output(18,eq,84) output(58,eq,84) output(18,eq,17) output(58,eq,17) output(62,eq,66) output(18,eq,66) output(58,eq,66) output(58,eq,62) output(39,eq,7) output(30,eq,61) output(30,eq,67) output(58,eq,7) output(10,eq,67)
Optimization: 62 14
Answer: 8
preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCategory(5))),8) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,7) output(18,better,50) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(67,better,50) output(67,better,84) output(67,better,32) output(67,better,71) output(39,better,50) output(39,better,84) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(66,better,32) output(66,better,71) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,7) output(58,better,50) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,7) output(50,worse,66) output(84,worse,66) output(7,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,66) output(17,worse,66) output(62,eq,39) output(50,eq,84) output(61,eq,39) output(39,eq,69) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(32,eq,71) output(84,eq,71) output(50,eq,32) output(17,eq,32) output(7,eq,84) output(62,eq,69) output(61,eq,69) output(18,eq,39) output(58,eq,39) output(10,eq,58) output(10,eq,39) output(69,eq,66) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(18,eq,69) output(30,eq,69) output(58,eq,69) output(7,eq,32) output(50,eq,71) output(17,eq,71) output(7,eq,71) output(21,eq,71) output(21,eq,32) output(21,eq,84) output(21,eq,17) output(10,eq,69) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(10,eq,66) output(30,eq,66) output(21,eq,50) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(10,eq,67)
Optimization: 57 4
Answer: 9
preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,9),1,for(atom(hasPrep(4))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCategory(5))),8) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,7) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(67,better,50) output(67,better,84) output(67,better,32) output(67,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(66,better,32) output(66,better,71) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,50) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,7) output(50,worse,66) output(84,worse,66) output(69,worse,66) output(7,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,66) output(17,worse,66) output(62,eq,39) output(50,eq,84) output(61,eq,39) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(32,eq,71) output(84,eq,71) output(50,eq,32) output(17,eq,32) output(7,eq,84) output(69,eq,17) output(18,eq,39) output(58,eq,39) output(10,eq,58) output(10,eq,39) output(67,eq,66) output(39,eq,66) output(30,eq,39) output(21,eq,69) output(69,eq,84) output(7,eq,32) output(69,eq,32) output(50,eq,71) output(17,eq,71) output(7,eq,71) output(21,eq,71) output(69,eq,71) output(21,eq,32) output(21,eq,84) output(21,eq,17) output(62,eq,66) output(61,eq,66) output(18,eq,66) output(58,eq,66) output(10,eq,66) output(30,eq,66) output(21,eq,50) output(58,eq,62) output(39,eq,67) output(30,eq,18) output(69,eq,7) output(30,eq,61) output(10,eq,62) output(30,eq,67) output(58,eq,67) output(10,eq,67)
Optimization: 55 5
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(1))),4) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasIngredient(10))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasIngredient(12))),6) preference(1,(1,12),1,for(atom(hasIngredient(9))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),1) preference(1,less(weight)) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,62) output(10,better,7) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,66) output(67,better,50) output(67,better,84) output(67,better,66) output(84,better,66) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,7) output(61,better,69) output(61,better,66) output(62,better,69) output(62,better,84) output(62,better,66) output(7,better,84) output(7,better,66) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,61) output(30,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,84) output(17,better,66) output(10,worse,58) output(10,worse,39) output(10,worse,32) output(10,worse,17) output(10,worse,71) output(10,worse,21) output(10,worse,67) output(18,worse,71) output(50,worse,32) output(50,worse,71) output(67,worse,32) output(67,worse,71) output(84,worse,32) output(84,worse,71) output(39,worse,32) output(39,worse,71) output(61,worse,39) output(61,worse,50) output(61,worse,84) output(61,worse,17) output(61,worse,71) output(61,worse,32) output(62,worse,39) output(62,worse,50) output(62,worse,17) output(62,worse,71) output(62,worse,32) output(66,worse,32) output(66,worse,71) output(69,worse,17) output(69,worse,84) output(69,worse,32) output(69,worse,71) output(69,worse,7) output(7,worse,17) output(7,worse,32) output(7,worse,71) output(30,worse,71) output(30,worse,32) output(30,worse,18) output(32,worse,71) output(17,worse,32) output(17,worse,71) output(69,eq,66) output(30,eq,39) output(39,eq,67) output(30,eq,67)
Optimization: 47 14
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(1))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasIngredient(12))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(10))),6) preference(1,(1,12),1,for(atom(hasIngredient(3))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,(1,14),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,50) output(10,better,71) output(10,better,21) output(18,better,50) output(18,better,71) output(18,better,32) output(18,better,17) output(67,better,50) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(69,better,17) output(69,better,32) output(69,better,71) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(21,better,71) output(21,better,50) output(30,better,71) output(30,better,32) output(30,better,17) output(30,better,50) output(32,better,71) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,17) output(58,better,66) output(58,better,62) output(17,better,71) output(10,worse,58) output(10,worse,39) output(10,worse,84) output(10,worse,62) output(10,worse,7) output(10,worse,67) output(18,worse,39) output(18,worse,84) output(50,worse,84) output(50,worse,32) output(50,worse,66) output(39,worse,84) output(39,worse,67) output(39,worse,7) output(62,worse,84) output(69,worse,84) output(69,worse,7) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,32) output(21,worse,84) output(21,worse,17) output(21,worse,66) output(30,worse,39) output(30,worse,84) output(30,worse,61) output(30,worse,67) output(30,worse,7) output(58,worse,84) output(58,worse,67) output(58,worse,7) output(17,worse,84) output(17,worse,66) output(62,eq,39) output(17,eq,32) output(67,eq,84) output(69,eq,66) output(18,eq,69) output(30,eq,69) output(50,eq,71) output(10,eq,69) output(18,eq,66) output(10,eq,66) output(30,eq,66) output(30,eq,18)
Optimization: 46 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasIngredient(10))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasIngredient(3))),3) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(12))),6) preference(1,(1,12),1,for(atom(hasIngredient(8))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,71) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(61,better,71) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,66) output(66,better,71) output(69,better,71) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,71) output(32,better,71) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,71) output(10,worse,58) output(10,worse,39) output(10,worse,32) output(10,worse,21) output(10,worse,7) output(10,worse,67) output(18,worse,39) output(50,worse,32) output(84,worse,32) output(61,worse,39) output(61,worse,50) output(61,worse,84) output(61,worse,32) output(62,worse,39) output(62,worse,32) output(66,worse,32) output(69,worse,84) output(69,worse,32) output(69,worse,7) output(30,worse,39) output(30,worse,32) output(30,worse,84) output(30,worse,50) output(30,worse,18) output(30,worse,67) output(30,worse,7) output(17,worse,84) output(17,worse,32) output(21,eq,58) output(69,eq,17) output(61,eq,69) output(17,eq,66) output(58,eq,39) output(21,eq,39) output(62,eq,50) output(69,eq,66) output(30,eq,69) output(61,eq,17) output(30,eq,17) output(61,eq,66) output(30,eq,66) output(10,eq,50) output(30,eq,61) output(10,eq,62)
Optimization: 44 14
Answer: 13
preference(1,(1,1),1,for(atom(hasIngredient(10))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasCategory(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasIngredient(8))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,71) output(18,better,69) output(18,better,71) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(39,better,69) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,71) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,66) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,7) output(32,better,71) output(58,better,69) output(58,better,71) output(58,better,84) output(58,better,17) output(58,better,66) output(10,worse,21) output(10,worse,67) output(84,worse,32) output(84,worse,71) output(39,worse,67) output(66,worse,32) output(66,worse,71) output(69,worse,32) output(69,worse,71) output(69,worse,7) output(30,worse,67) output(58,worse,67) output(17,worse,32) output(17,worse,71) output(62,eq,39) output(84,eq,66) output(17,eq,84) output(50,eq,32) output(69,eq,17) output(18,eq,39) output(17,eq,66) output(39,eq,50) output(58,eq,39) output(10,eq,58) output(10,eq,39) output(62,eq,50) output(18,eq,50) output(58,eq,50) output(69,eq,66) output(69,eq,84) output(7,eq,32) output(39,eq,32) output(62,eq,32) output(18,eq,32) output(58,eq,32) output(10,eq,32) output(10,eq,50) output(58,eq,62) output(39,eq,7) output(10,eq,62) output(58,eq,7) output(10,eq,7)
Optimization: 42 14
Answer: 14
preference(1,(1,1),1,for(atom(hasCategory(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasIngredient(12))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasCost(3))),6) preference(1,(1,11),1,for(atom(hasCost(1))),6) preference(1,(1,12),1,for(atom(hasIngredient(7))),1) preference(1,(1,13),1,for(atom(hasIngredient(10))),1) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,7) output(18,better,50) output(18,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,71) output(69,better,71) output(7,better,71) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,7) output(32,better,71) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,67) output(58,better,7) output(17,better,71) output(10,worse,58) output(10,worse,39) output(10,worse,21) output(10,worse,62) output(18,worse,39) output(50,worse,84) output(50,worse,32) output(50,worse,66) output(50,worse,71) output(61,worse,39) output(21,worse,58) output(21,worse,39) output(30,worse,39) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(17,eq,32) output(7,eq,84) output(69,eq,17) output(17,eq,66) output(58,eq,39) output(7,eq,66) output(69,eq,66) output(18,eq,69) output(69,eq,84) output(7,eq,32) output(69,eq,32) output(18,eq,32) output(18,eq,84) output(18,eq,17) output(18,eq,66) output(58,eq,62) output(69,eq,7) output(30,eq,61) output(30,eq,67) output(10,eq,67)
Optimization: 39 13
Answer: 15
preference(1,(1,1),1,for(atom(hasCategory(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasIngredient(12))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasIngredient(8))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasCost(3))),6) preference(1,(1,11),1,for(atom(hasCost(1))),6) preference(1,(1,12),1,for(atom(hasIngredient(7))),1) preference(1,(1,13),1,for(atom(hasIngredient(10))),1) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,7) output(18,better,71) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,71) output(69,better,71) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,7) output(32,better,71) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,67) output(58,better,7) output(17,better,71) output(10,worse,58) output(10,worse,39) output(10,worse,21) output(10,worse,62) output(18,worse,39) output(61,worse,39) output(30,worse,39) output(62,eq,39) output(50,eq,84) output(84,eq,66) output(66,eq,32) output(7,eq,17) output(17,eq,84) output(84,eq,32) output(50,eq,32) output(17,eq,32) output(7,eq,84) output(69,eq,17) output(50,eq,66) output(17,eq,66) output(58,eq,39) output(18,eq,50) output(7,eq,66) output(69,eq,66) output(18,eq,69) output(69,eq,84) output(7,eq,32) output(69,eq,32) output(18,eq,32) output(18,eq,84) output(18,eq,17) output(18,eq,66) output(58,eq,62) output(69,eq,7) output(30,eq,61) output(30,eq,67) output(10,eq,67)
Optimization: 37 13
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(8))),6) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasCategory(4))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasIngredient(9))),8) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasIngredient(4))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,71) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,32) output(84,better,71) output(39,better,32) output(39,better,71) output(61,better,39) output(61,better,69) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,71) output(62,better,32) output(66,better,32) output(66,better,71) output(69,better,84) output(69,better,32) output(69,better,71) output(7,better,84) output(7,better,32) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,71) output(30,better,32) output(32,better,71) output(58,better,39) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,7) output(17,better,84) output(17,better,32) output(17,better,71) output(10,worse,21) output(67,worse,50) output(84,worse,66) output(39,worse,69) output(39,worse,50) output(39,worse,84) output(39,worse,66) output(39,worse,17) output(39,worse,67) output(39,worse,7) output(61,worse,50) output(62,worse,69) output(62,worse,50) output(62,worse,84) output(62,worse,17) output(62,worse,66) output(30,worse,39) output(30,worse,69) output(30,worse,84) output(30,worse,17) output(30,worse,66) output(30,worse,50) output(30,worse,18) output(30,worse,61) output(30,worse,67) output(30,worse,7) output(58,worse,50) output(62,eq,39) output(7,eq,17) output(69,eq,17) output(17,eq,66) output(7,eq,66) output(69,eq,66) output(10,eq,50) output(69,eq,7) output(58,eq,67)
Optimization: 36 14
Answer: 17
preference(1,(1,1),1,for(atom(hasIngredient(8))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasIngredient(12))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),2) preference(1,(1,10),1,for(atom(hasCategory(4))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,69) output(18,better,71) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,71) output(39,better,69) output(39,better,66) output(39,better,71) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,39) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(32,better,71) output(17,better,66) output(17,better,71) output(18,worse,50) output(18,worse,32) output(67,worse,50) output(84,worse,32) output(39,worse,50) output(39,worse,32) output(39,worse,67) output(39,worse,7) output(66,worse,32) output(69,worse,17) output(69,worse,84) output(69,worse,32) output(69,worse,7) output(58,worse,39) output(58,worse,50) output(58,worse,69) output(58,worse,71) output(58,worse,32) output(58,worse,84) output(58,worse,17) output(58,worse,66) output(58,worse,62) output(58,worse,67) output(58,worse,7) output(17,worse,32) output(17,eq,84) output(66,eq,71) output(18,eq,39) output(62,eq,50) output(39,eq,84) output(69,eq,66) output(39,eq,17) output(7,eq,32) output(69,eq,71) output(18,eq,84) output(18,eq,17)
Optimization: 36 13
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasIngredient(7))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasIngredient(12))),7) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,71) output(39,better,84) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(21,better,71) output(21,better,32) output(21,better,84) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,7) output(32,better,71) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,84) output(17,better,32) output(17,better,66) output(17,better,71) output(10,worse,17) output(18,worse,17) output(84,worse,66) output(39,worse,50) output(39,worse,17) output(39,worse,67) output(61,worse,17) output(62,worse,17) output(69,worse,17) output(7,worse,17) output(7,worse,84) output(7,worse,66) output(7,worse,32) output(7,worse,71) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,17) output(21,worse,66) output(21,worse,50) output(30,worse,17) output(30,worse,50) output(30,worse,18) output(30,worse,61) output(30,worse,67) output(58,worse,17) output(39,eq,69) output(84,eq,32) output(69,eq,66) output(39,eq,66) output(30,eq,39) output(30,eq,69) output(30,eq,66)
Optimization: 33 13
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),1) preference(1,(1,3),1,for(atom(hasIngredient(3))),1) preference(1,(1,4),1,for(atom(hasCost(3))),6) preference(1,(1,5),1,for(atom(hasIngredient(12))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasCategory(4))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasCategory(1))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),3) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,71) output(10,better,7) output(10,better,67) output(18,better,69) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,84) output(67,better,66) output(67,better,32) output(84,better,32) output(39,better,69) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,67) output(39,better,7) output(61,better,84) output(61,better,17) output(61,better,32) output(62,better,39) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(69,better,17) output(69,better,84) output(69,better,32) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,84) output(17,better,32) output(10,worse,58) output(10,worse,50) output(10,worse,21) output(10,worse,62) output(18,worse,39) output(18,worse,50) output(18,worse,71) output(67,worse,50) output(67,worse,71) output(84,worse,66) output(84,worse,71) output(39,worse,50) output(39,worse,71) output(61,worse,39) output(61,worse,50) output(61,worse,71) output(66,worse,71) output(69,worse,71) output(69,worse,7) output(7,worse,71) output(30,worse,50) output(32,worse,71) output(17,worse,66) output(17,worse,71) output(61,eq,69) output(69,eq,66) output(30,eq,71) output(61,eq,66)
Optimization: 28 13
Answer: 20
preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasIngredient(7))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),2) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(50,worse,71) output(84,worse,71) output(39,worse,67) output(66,worse,71) output(69,worse,71) output(69,worse,7) output(32,worse,71) output(58,worse,67) output(17,worse,71) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(17,eq,84) output(84,eq,32) output(17,eq,32) output(69,eq,17) output(18,eq,39) output(17,eq,66) output(58,eq,39) output(69,eq,66) output(69,eq,84) output(69,eq,32) output(58,eq,62) output(39,eq,7) output(30,eq,61) output(30,eq,67) output(58,eq,7)
Optimization: 27 4
Answer: 21
preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasIngredient(7))),7) preference(1,(1,13),1,for(atom(hasIngredient(8))),8) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,71) output(39,better,69) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,71) output(69,better,71) output(7,better,17) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,7) output(32,better,71) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(17,better,71) output(39,worse,67) output(69,worse,7) output(58,worse,67) output(62,eq,39) output(84,eq,66) output(66,eq,32) output(17,eq,84) output(84,eq,32) output(17,eq,32) output(69,eq,17) output(18,eq,39) output(17,eq,66) output(39,eq,50) output(58,eq,39) output(62,eq,50) output(18,eq,50) output(58,eq,50) output(69,eq,66) output(69,eq,84) output(69,eq,32) output(10,eq,21) output(58,eq,62) output(39,eq,7) output(30,eq,61) output(30,eq,67) output(58,eq,7)
Optimization: 26 4
Answer: 22
preference(1,(1,1),1,for(atom(hasIngredient(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasIngredient(7))),4) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),2) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),1) preference(1,(1,14),1,for(atom(hasCategory(3))),3) preference(1,less(weight)) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(7,better,84) output(7,better,32) output(7,better,71) output(21,better,71) output(21,better,32) output(21,better,84) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,66) output(30,better,50) output(30,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,84) output(17,better,32) output(17,better,66) output(17,better,71) output(50,worse,66) output(84,worse,66) output(84,worse,32) output(84,worse,71) output(39,worse,17) output(39,worse,67) output(62,worse,17) output(69,worse,17) output(7,worse,17) output(7,worse,66) output(21,worse,58) output(21,worse,39) output(21,worse,69) output(21,worse,17) output(21,worse,66) output(30,worse,18) output(30,worse,61) output(62,eq,39) output(32,eq,71) output(10,eq,58) output(69,eq,66) output(30,eq,17) output(21,eq,50) output(30,eq,67)
Optimization: 24 14
Answer: 23
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasIngredient(12))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasIngredient(7))),8) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,32) output(50,better,66) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,17) output(62,better,32) output(62,better,66) output(69,better,66) output(69,better,32) output(7,better,17) output(7,better,66) output(7,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,7) output(17,better,32) output(17,better,66) output(50,worse,84) output(50,worse,71) output(84,worse,71) output(39,worse,67) output(62,worse,39) output(62,worse,84) output(62,worse,71) output(66,worse,32) output(66,worse,71) output(69,worse,17) output(69,worse,84) output(69,worse,71) output(69,worse,7) output(7,worse,84) output(7,worse,71) output(32,worse,71) output(58,worse,67) output(17,worse,84) output(17,worse,71) output(58,eq,39) output(39,eq,71) output(58,eq,71)
Optimization: 22 14
Answer: 24
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasIngredient(8))),7) preference(1,(1,6),1,for(atom(hasIngredient(7))),8) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,32) output(50,better,66) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,32) output(62,better,66) output(66,better,32) output(69,better,17) output(69,better,66) output(69,better,32) output(69,better,7) output(7,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,7) output(17,better,32) output(17,better,66) output(50,worse,84) output(50,worse,71) output(84,worse,71) output(39,worse,67) output(66,worse,71) output(69,worse,84) output(69,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,71) output(32,worse,71) output(58,worse,67) output(17,worse,84) output(17,worse,71) output(62,eq,39) output(58,eq,39) output(7,eq,66) output(39,eq,71) output(62,eq,71) output(58,eq,71) output(58,eq,62)
Optimization: 21 14
Answer: 25
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasIngredient(8))),8) preference(1,(1,6),1,for(atom(hasIngredient(7))),8) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,32) output(50,better,66) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(69,better,17) output(69,better,66) output(69,better,32) output(69,better,7) output(7,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,7) output(17,better,32) output(17,better,66) output(50,worse,84) output(50,worse,71) output(39,worse,67) output(66,worse,71) output(69,worse,84) output(69,worse,71) output(7,worse,17) output(7,worse,84) output(7,worse,71) output(32,worse,71) output(58,worse,67) output(17,worse,84) output(17,worse,71) output(62,eq,39) output(84,eq,71) output(58,eq,39) output(7,eq,66) output(58,eq,62)
Optimization: 18 14
Answer: 26
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(7))),8) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasIngredient(8))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,32) output(50,better,66) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(69,better,17) output(69,better,66) output(69,better,32) output(69,better,7) output(7,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,7) output(17,better,32) output(17,better,66) output(50,worse,84) output(50,worse,71) output(39,worse,67) output(66,worse,71) output(69,worse,84) output(7,worse,17) output(7,worse,84) output(7,worse,71) output(32,worse,71) output(58,worse,67) output(17,worse,84) output(17,worse,71) output(62,eq,39) output(58,eq,39) output(7,eq,66) output(69,eq,71) output(58,eq,62)
Optimization: 17 14
Answer: 27
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(7))),8) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasIngredient(8))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(69,better,17) output(69,better,66) output(69,better,32) output(69,better,71) output(69,better,7) output(7,better,32) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,7) output(17,better,32) output(17,better,66) output(50,worse,84) output(39,worse,67) output(66,worse,71) output(69,worse,84) output(7,worse,17) output(7,worse,84) output(7,worse,71) output(32,worse,71) output(58,worse,67) output(17,worse,84) output(17,worse,71) output(62,eq,39) output(58,eq,39) output(7,eq,66) output(58,eq,62)
Optimization: 15 14
Answer: 28
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasIngredient(8))),8) preference(1,(1,6),1,for(atom(hasIngredient(7))),8) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,39) output(18,better,50) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,66) output(84,better,32) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,50) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(69,better,17) output(69,better,66) output(69,better,32) output(69,better,71) output(69,better,7) output(7,better,32) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,7) output(17,better,32) output(17,better,66) output(17,better,71) output(50,worse,84) output(39,worse,67) output(69,worse,84) output(7,worse,17) output(7,worse,84) output(58,worse,67) output(17,worse,84) output(62,eq,39) output(32,eq,71) output(58,eq,39) output(7,eq,66) output(58,eq,62)
Optimization: 12 14
Answer: 29
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(4))),4) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(4))),5) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasIngredient(8))),8) preference(1,(1,11),1,for(atom(hasCategory(1))),4) preference(1,(1,12),1,for(atom(hasCategory(4))),2) preference(1,(1,13),1,for(atom(hasCost(3))),4) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(61,better,39) output(61,better,69) output(61,better,50) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(69,better,17) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(7,better,84) output(7,better,32) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,39) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(32,better,71) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,84) output(17,better,32) output(17,better,71) output(18,worse,39) output(84,worse,66) output(62,worse,39) output(7,worse,66) output(58,worse,39) output(17,worse,66) output(7,eq,17) output(84,eq,32) output(62,eq,50) output(18,eq,50) output(69,eq,66)
Optimization: 11 13
Answer: 30
preference(1,(1,2),1,for(atom(hasPrep(5))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasIngredient(8))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasCost(3))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,58) output(10,better,39) output(10,better,32) output(10,better,17) output(10,better,69) output(10,better,66) output(10,better,84) output(10,better,50) output(10,better,71) output(10,better,21) output(10,better,62) output(10,better,7) output(10,better,67) output(18,better,69) output(18,better,71) output(18,better,32) output(18,better,84) output(18,better,17) output(18,better,66) output(50,better,84) output(50,better,32) output(50,better,66) output(50,better,71) output(67,better,50) output(67,better,84) output(67,better,66) output(67,better,32) output(67,better,71) output(84,better,32) output(84,better,71) output(39,better,69) output(39,better,50) output(39,better,84) output(39,better,66) output(39,better,17) output(39,better,32) output(39,better,71) output(39,better,67) output(39,better,7) output(61,better,69) output(61,better,84) output(61,better,17) output(61,better,71) output(61,better,32) output(61,better,66) output(62,better,69) output(62,better,84) output(62,better,17) output(62,better,71) output(62,better,32) output(62,better,66) output(66,better,32) output(66,better,71) output(69,better,17) output(69,better,66) output(69,better,84) output(69,better,32) output(69,better,71) output(69,better,7) output(7,better,84) output(7,better,66) output(7,better,32) output(7,better,71) output(21,better,58) output(21,better,39) output(21,better,69) output(21,better,71) output(21,better,32) output(21,better,84) output(21,better,17) output(21,better,66) output(21,better,50) output(30,better,69) output(30,better,71) output(30,better,32) output(30,better,84) output(30,better,17) output(30,better,66) output(30,better,50) output(30,better,18) output(30,better,61) output(30,better,67) output(30,better,7) output(58,better,39) output(58,better,50) output(58,better,69) output(58,better,71) output(58,better,32) output(58,better,84) output(58,better,17) output(58,better,66) output(58,better,62) output(58,better,67) output(58,better,7) output(17,better,84) output(17,better,32) output(17,better,66) output(17,better,71) output(18,worse,39) output(61,worse,39) output(61,worse,50) output(62,worse,39) output(62,worse,50) output(7,worse,17) output(30,worse,39) output(32,worse,71) output(84,eq,66) output(18,eq,50)
Optimization: 10 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.053 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 10 10
Calls        : 1
Time         : 298.167s (Solving: 293.89s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1179.347s
Threads      : 4        (Winner: 4)

Choices      : 8233528  (Domain: 147116)
Conflicts    : 4575188  (Analyzed: 4575188)
Restarts     : 4648     (Average: 984.33 Last: 316409)
Model-Level  : 96.1    
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 4604416  (Deleted: 4339735)
  Binary     : 392      (Ratio:   0.01%)
  Ternary    : 2361     (Ratio:   0.05%)
  Conflict   : 4575188  (Average Length:  460.5 Ratio:  99.37%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 29228    (Average Length:   51.1 Ratio:   0.63%) 
  Distributed: 9757     (Ratio:   0.21% Average LBD: 3.67) 
  Integrated : 29271    (Ratio: 300.00% Unit: 22 Average Jumps: 6.00)
Backjumps    : 4575188  (Average:  1.70 Max: 459 Sum: 7796291)
  Executed   : 4575187  (Average:  1.70 Max: 459 Sum: 7796224 Ratio: 100.00%)
  Bounded    : 1        (Average: 67.00 Max:  67 Sum:     67 Ratio:   0.00%)

Rules        : 1119850 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 21202   
Bodies       : 19717   
  Sum        : 216     
  Count      : 14      
Equivalences : 9630     (Atom=Atom: 1093 Body=Body: 446 Other: 8091)
Tight        : Yes
Variables    : 17367    (Eliminated:    0 Frozen: 8043)
Constraints  : 1135068  (Binary:  98.8% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  6 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasCategory(1)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(8)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(4)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(4)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCategory(4)) ; 
  6 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrepTime(2)) 
}.
