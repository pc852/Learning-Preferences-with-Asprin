asprin_vL version 1.0
Reading from stdin
-:1232:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1242:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1257:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1338:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1599:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1612:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1789:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1918:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1990:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1994:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1994:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2000:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2099:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2125:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2245:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2279:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2301:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1149:1-16: info: no atoms over signature occur in program:
  output/3

-:1141:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(100,eq,21) output(21,eq,60) output(60,eq,32) output(32,eq,73) output(73,eq,57) output(56,eq,89) output(51,eq,100) output(82,eq,73) output(73,eq,78) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(88,eq,72) output(20,eq,50) output(32,eq,78) output(82,eq,78) output(32,eq,57) output(82,eq,57) output(60,eq,73) output(21,eq,32) output(100,eq,60) output(51,eq,21) output(51,eq,60) output(100,eq,32) output(51,eq,32) output(21,eq,73) output(100,eq,73) output(60,eq,57) output(21,eq,57) output(60,eq,78) output(21,eq,78) output(20,eq,72) output(100,eq,78) output(51,eq,78) output(100,eq,57) output(51,eq,57) output(51,eq,73)
Optimization: 37 0
Answer: 2
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasCost(1))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,60) output(51,better,32) output(73,better,57) output(73,better,78) output(88,better,72) output(51,worse,21) output(51,worse,78) output(51,worse,73) output(60,worse,73) output(60,worse,57) output(60,worse,78) output(82,worse,73) output(82,worse,78) output(20,worse,88) output(20,worse,50) output(32,worse,73) output(32,worse,78) output(32,worse,57) output(88,worse,50) output(100,worse,21) output(100,worse,60) output(100,worse,32) output(100,worse,73) output(100,worse,78) output(100,worse,57) output(60,eq,32) output(56,eq,89) output(82,eq,57) output(21,eq,73) output(20,eq,72) output(51,eq,57)
Optimization: 26 13
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,78) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,78) output(100,better,78) output(21,worse,60) output(51,worse,21) output(51,worse,60) output(20,worse,50) output(88,worse,50) output(100,worse,21) output(100,worse,60) output(100,worse,32) output(73,eq,57) output(56,eq,89) output(82,eq,73) output(20,eq,88) output(88,eq,72) output(82,eq,57) output(100,eq,73) output(20,eq,72) output(100,eq,57)
Optimization: 17 13
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(3))),6) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,78) output(82,better,57) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(100,better,78) output(100,better,57) output(21,worse,60) output(51,worse,21) output(51,worse,60) output(20,worse,50) output(88,worse,50) output(100,worse,21) output(100,worse,60) output(100,worse,32) output(56,eq,89) output(82,eq,73) output(20,eq,88) output(88,eq,72) output(100,eq,73) output(20,eq,72)
Optimization: 14 13
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,72) output(100,better,78) output(21,worse,60) output(51,worse,21) output(51,worse,60) output(20,worse,50) output(88,worse,50) output(100,worse,21) output(100,worse,60) output(100,worse,32) output(100,worse,73) output(56,eq,89) output(20,eq,88) output(100,eq,57)
Optimization: 12 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),1) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(4))),5) preference(1,less(weight)) output(21,better,32) output(21,better,73) output(21,better,57) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,57) output(73,better,57) output(88,better,72) output(100,better,32) output(100,better,57) output(21,worse,60) output(21,worse,78) output(82,worse,78) output(32,worse,73) output(32,worse,78) output(73,worse,78) output(88,worse,50) output(100,worse,21) output(100,worse,60) output(100,worse,78) output(51,eq,60) output(100,eq,73)
Optimization: 12 9
Answer: 7
preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(1))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(21,better,57) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,57) output(73,better,57) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,73) output(100,better,57) output(21,worse,60) output(21,worse,32) output(21,worse,73) output(21,worse,78) output(32,worse,78) output(73,worse,78) output(100,worse,60) output(100,worse,32) output(100,worse,78) output(20,eq,88)
Optimization: 10 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(21,better,32) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,57) output(60,better,78) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,78) output(100,better,57) output(21,worse,73) output(60,worse,73) output(82,worse,73) output(32,worse,73) output(88,worse,50) output(88,worse,72) output(100,worse,73) output(21,eq,60) output(56,eq,89)
Optimization: 9 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,57) output(60,better,78) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,78) output(100,better,57) output(21,worse,73) output(60,worse,73) output(82,worse,73) output(32,worse,73) output(88,worse,50) output(88,worse,72) output(100,worse,73) output(56,eq,89)
Optimization: 8 13
Answer: 10
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,73) output(60,better,57) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,72) output(32,better,73) output(32,better,57) output(73,better,57) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57) output(56,worse,89) output(60,worse,78) output(32,worse,78) output(73,worse,78) output(88,worse,50) output(20,eq,50) output(21,eq,78)
Optimization: 7 12
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,73) output(60,better,57) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,57) output(73,better,57) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57) output(56,worse,89) output(60,worse,78) output(32,worse,78) output(73,worse,78) output(88,worse,50) output(21,eq,78)
Optimization: 6 13
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(3))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57) output(51,worse,100) output(51,worse,21) output(56,worse,89) output(20,eq,88)
Optimization: 4 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasPrep(3))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57) output(60,worse,32) output(73,worse,78) output(88,worse,50)
Optimization: 3 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57) output(32,worse,73) output(88,worse,50)
Optimization: 2 12
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,5),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57) output(73,eq,78)
Optimization: 1 12
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(0))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(3))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57)
Optimization: 0 12
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 19
preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrep(3))),6) preference(1,less(weight)) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,78) output(50,better,72) output(51,better,100) output(51,better,21) output(51,better,60) output(51,better,32) output(51,better,78) output(51,better,57) output(51,better,73) output(56,better,89) output(60,better,32) output(60,better,73) output(60,better,57) output(60,better,78) output(82,better,73) output(82,better,78) output(82,better,57) output(20,better,88) output(20,better,50) output(20,better,72) output(32,better,73) output(32,better,78) output(32,better,57) output(73,better,57) output(73,better,78) output(88,better,50) output(88,better,72) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,78) output(100,better,57)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.057 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 19+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 297.007s (Solving: 295.45s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1182.918s
Threads      : 4        (Winner: 4)

Choices      : 7846662  (Domain: 807853)
Conflicts    : 7235644  (Analyzed: 7235641)
Restarts     : 5803     (Average: 1246.88 Last: 489311)
Model-Level  : 34.9    
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 7438975  (Deleted: 7149881)
  Binary     : 347      (Ratio:   0.00%)
  Ternary    : 9097     (Ratio:   0.12%)
  Conflict   : 7235641  (Average Length:  226.5 Ratio:  97.27%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 203334   (Average Length:  144.2 Ratio:   2.73%) 
  Distributed: 68116    (Ratio:   0.94% Average LBD: 3.74) 
  Integrated : 204348   (Ratio: 300.00% Unit: 386 Average Jumps: 4.85)
Backjumps    : 7235641  (Average:  1.08 Max:  69 Sum: 7782095)
  Executed   : 7235640  (Average:  1.08 Max:  69 Sum: 7782068 Ratio: 100.00%)
  Bounded    : 1        (Average: 27.00 Max:  27 Sum:     27 Ratio:   0.00%)

Rules        : 101719  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9238    
Bodies       : 5648    
  Sum        : 74      
  Count      : 14      
Equivalences : 3713     (Atom=Atom: 383 Body=Body: 162 Other: 3168)
Tight        : Yes
Variables    : 4805     (Eliminated:    0 Frozen: 3335)
Constraints  : 100460   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(3)) 
}.
