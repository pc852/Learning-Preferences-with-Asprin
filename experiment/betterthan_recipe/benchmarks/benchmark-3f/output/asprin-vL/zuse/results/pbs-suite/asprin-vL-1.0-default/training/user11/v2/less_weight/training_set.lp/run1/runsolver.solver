asprin_vL version 1.0
Reading from stdin
-:1222:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1232:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1247:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1328:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1589:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1602:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1779:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1908:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1980:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1984:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2089:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2115:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2235:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2269:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1139:1-16: info: no atoms over signature occur in program:
  output/3

-:1131:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(96,eq,20) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(26,eq,74) output(74,eq,28) output(2,eq,3) output(3,eq,20) output(7,eq,74) output(74,eq,86) output(86,eq,76) output(79,eq,28) output(74,eq,76) output(26,eq,86) output(7,eq,86) output(2,eq,20) output(26,eq,28) output(7,eq,28) output(20,eq,98) output(96,eq,52) output(3,eq,52) output(2,eq,52) output(96,eq,98) output(3,eq,98) output(2,eq,98) output(26,eq,76) output(7,eq,76)
Optimization: 27 0
Answer: 2
preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(26,better,28) output(74,better,28) output(79,better,28) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(96,eq,20) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(26,eq,74) output(2,eq,3) output(3,eq,20) output(74,eq,86) output(86,eq,76) output(74,eq,76) output(26,eq,86) output(2,eq,20) output(7,eq,28) output(20,eq,98) output(96,eq,52) output(3,eq,52) output(2,eq,52) output(96,eq,98) output(3,eq,98) output(2,eq,98) output(26,eq,76)
Optimization: 24 1
Answer: 3
preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(26,better,28) output(74,better,28) output(79,better,28) output(2,better,3) output(7,better,28) output(3,worse,20) output(3,worse,52) output(3,worse,98) output(96,eq,20) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(26,eq,74) output(7,eq,74) output(74,eq,86) output(86,eq,76) output(74,eq,76) output(26,eq,86) output(7,eq,86) output(2,eq,20) output(20,eq,98) output(96,eq,52) output(2,eq,52) output(96,eq,98) output(2,eq,98) output(26,eq,76) output(7,eq,76)
Optimization: 22 1
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(4))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(26,better,28) output(74,better,28) output(79,better,28) output(96,worse,20) output(96,worse,52) output(96,worse,98) output(2,worse,3) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(26,eq,74) output(74,eq,86) output(86,eq,76) output(74,eq,76) output(26,eq,86) output(2,eq,20) output(7,eq,28) output(20,eq,98) output(2,eq,52) output(2,eq,98) output(26,eq,76)
Optimization: 21 14
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(26,better,28) output(52,better,98) output(74,better,28) output(79,better,28) output(2,better,3) output(7,better,74) output(7,better,28) output(3,worse,20) output(3,worse,52) output(3,worse,98) output(8,worse,41) output(26,worse,86) output(26,worse,76) output(74,worse,86) output(74,worse,76) output(96,worse,20) output(96,worse,52) output(96,worse,98) output(2,worse,52) output(7,worse,86) output(7,worse,76) output(20,worse,52) output(26,eq,74) output(86,eq,76) output(2,eq,20) output(20,eq,98) output(2,eq,98)
Optimization: 20 4
Answer: 6
preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(26,better,28) output(52,better,98) output(74,better,28) output(79,better,28) output(2,better,3) output(7,better,74) output(7,better,28) output(20,better,98) output(3,worse,20) output(3,worse,52) output(3,worse,98) output(8,worse,41) output(26,worse,86) output(26,worse,76) output(74,worse,86) output(74,worse,76) output(96,worse,20) output(96,worse,52) output(2,worse,20) output(2,worse,52) output(7,worse,86) output(7,worse,76) output(20,worse,52) output(26,eq,74) output(86,eq,76) output(96,eq,98) output(2,eq,98)
Optimization: 19 5
Answer: 7
preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(26,better,28) output(74,better,28) output(79,better,28) output(2,better,3) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(3,worse,20) output(3,worse,52) output(3,worse,98) output(96,worse,20) output(2,worse,20) output(52,eq,98) output(8,eq,41) output(26,eq,74) output(74,eq,86) output(86,eq,76) output(74,eq,76) output(26,eq,86) output(96,eq,52) output(2,eq,52) output(96,eq,98) output(2,eq,98) output(26,eq,76)
Optimization: 17 3
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasPrep(4))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(3,better,98) output(8,better,41) output(26,better,74) output(26,better,28) output(52,better,98) output(74,better,28) output(79,better,28) output(96,better,98) output(2,better,3) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,28) output(20,better,52) output(20,better,98) output(3,worse,20) output(3,worse,52) output(26,worse,86) output(26,worse,76) output(74,worse,86) output(74,worse,76) output(96,worse,20) output(96,worse,52) output(2,worse,20) output(7,worse,86) output(7,worse,76) output(86,eq,76)
Optimization: 12 12
Progression : [ 2;12] (Error: 5)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,4),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,74) output(26,better,28) output(74,better,28) output(79,better,28) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,28) output(20,better,52) output(20,better,98) output(3,worse,20) output(26,worse,86) output(26,worse,76) output(74,worse,86) output(74,worse,76) output(2,worse,20) output(7,worse,86) output(7,worse,76) output(96,eq,20) output(52,eq,98) output(86,eq,76)
Optimization: 11 7
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,52) output(2,better,98) output(7,better,28) output(20,better,52) output(20,better,98) output(3,worse,20) output(26,worse,74) output(96,worse,20) output(2,worse,20) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 10 12
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),2) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,13),1,for(atom(hasPrep(4))),3) preference(1,less(weight)) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,52) output(2,better,3) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(3,worse,20) output(26,worse,74) output(52,worse,98) output(96,worse,20) output(96,worse,98) output(2,worse,20) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 9 12
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasPrep(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(26,better,28) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,86) output(7,better,28) output(7,better,76) output(8,worse,41) output(26,worse,74) output(7,worse,74) output(20,eq,52) output(52,eq,98) output(86,eq,76) output(26,eq,86) output(20,eq,98) output(26,eq,76)
Optimization: 9 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(4))),7) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(26,better,28) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(8,worse,41) output(26,worse,74) output(20,eq,52) output(52,eq,98) output(86,eq,76) output(26,eq,86) output(20,eq,98) output(26,eq,76)
Optimization: 8 11
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(5))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasPrep(4))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(2,worse,3) output(52,eq,98) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 6 9
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasPrep(4))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(8,worse,41) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 5 13
Progression : [4;5] (Error: 0.25)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(4))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasPrep(3))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 4 14
Progression : 4 [ 1;14] (Error: 13)
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),2) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 4 13
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrep(4))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 4 12
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(4))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 4 11
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 4 10
Progression : 4 [ 2;10] (Error: 4)
Progression : 4 [ 3;10] (Error: 2.33333)
Answer: 21
preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(3,better,20) output(3,better,52) output(3,better,98) output(8,better,41) output(26,better,28) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(26,worse,74) output(86,eq,76) output(26,eq,86) output(26,eq,76)
Optimization: 4 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.043 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 4 9
Bounds       : 4 [3;9]
Calls        : 1
Time         : 298.085s (Solving: 296.53s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1187.078s
Threads      : 4        (Winner: 4)

Choices      : 8844953  (Domain: 826358)
Conflicts    : 6988393  (Analyzed: 6988388)
Restarts     : 5577     (Average: 1253.07 Last: 204421)
Model-Level  : 158.9   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7189527  (Deleted: 6930309)
  Binary     : 265      (Ratio:   0.00%)
  Ternary    : 9130     (Ratio:   0.13%)
  Conflict   : 6988388  (Average Length:  210.8 Ratio:  97.20%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 201139   (Average Length:  140.1 Ratio:   2.80%) 
  Distributed: 67158    (Ratio:   0.96% Average LBD: 3.79) 
  Integrated : 201474   (Ratio: 300.00% Unit: 371 Average Jumps: 13.83)
Backjumps    : 6988388  (Average:  1.22 Max: 338 Sum: 8510306)
  Executed   : 6988382  (Average:  1.22 Max: 338 Sum: 8510208 Ratio: 100.00%)
  Bounded    : 6        (Average: 16.33 Max:  22 Sum:     98 Ratio:   0.00%)

Rules        : 86494   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8258    
Bodies       : 5531    
  Sum        : 47      
  Count      : 14      
Equivalences : 5912     (Atom=Atom: 296 Body=Body: 138 Other: 5478)
Tight        : Yes
Variables    : 4754     (Eliminated:    0 Frozen: 3284)
Constraints  : 86128    (Binary:  96.4% Ternary:   1.7% Other:   1.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(4)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) 
}.
