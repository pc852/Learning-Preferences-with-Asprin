asprin_vL version 1.0
Reading from stdin
-:1327:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1337:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1352:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1433:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1694:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1707:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1884:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2013:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2085:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2089:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2089:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2095:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2194:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2220:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2340:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2374:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2396:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1244:1-16: info: no atoms over signature occur in program:
  output/3

-:1236:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1237:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(47,eq,70) output(70,eq,18) output(18,eq,10) output(10,eq,29) output(29,eq,49) output(49,eq,24) output(50,eq,23) output(64,eq,47) output(24,eq,50) output(13,eq,14) output(14,eq,70) output(70,eq,25) output(48,eq,51) output(51,eq,42) output(18,eq,65) output(25,eq,48) output(42,eq,18) output(65,eq,10) output(51,eq,18) output(70,eq,48) output(70,eq,65) output(42,eq,65) output(48,eq,42) output(25,eq,51) output(47,eq,25) output(14,eq,25) output(13,eq,70) output(49,eq,50) output(24,eq,23) output(29,eq,24) output(10,eq,49) output(18,eq,29) output(65,eq,29) output(70,eq,10) output(42,eq,10) output(47,eq,18) output(14,eq,18) output(64,eq,70) output(13,eq,18) output(64,eq,18) output(51,eq,10) output(48,eq,10) output(47,eq,10) output(14,eq,10) output(13,eq,10) output(64,eq,10) output(70,eq,29) output(42,eq,29) output(51,eq,29) output(47,eq,29) output(14,eq,29) output(18,eq,49) output(65,eq,49) output(70,eq,49) output(42,eq,49) output(10,eq,24) output(18,eq,24) output(65,eq,24) output(49,eq,23) output(29,eq,23) output(29,eq,50) output(10,eq,50) output(13,eq,25) output(64,eq,25) output(70,eq,51) output(47,eq,51) output(14,eq,51) output(25,eq,42) output(70,eq,42) output(51,eq,65) output(48,eq,65) output(47,eq,65) output(14,eq,65) output(13,eq,65) output(64,eq,65) output(47,eq,48) output(14,eq,48) output(13,eq,48) output(64,eq,48) output(48,eq,18) output(25,eq,18) output(25,eq,65) output(47,eq,42) output(14,eq,42) output(13,eq,42) output(64,eq,42) output(13,eq,51) output(64,eq,51) output(18,eq,50) output(65,eq,50) output(70,eq,50) output(42,eq,50) output(51,eq,50) output(48,eq,50) output(47,eq,50) output(14,eq,50) output(13,eq,50) output(64,eq,50) output(10,eq,23) output(18,eq,23) output(65,eq,23) output(70,eq,23) output(42,eq,23) output(51,eq,23) output(47,eq,23) output(14,eq,23) output(70,eq,24) output(42,eq,24) output(51,eq,24) output(48,eq,24) output(47,eq,24) output(14,eq,24) output(13,eq,24) output(64,eq,24) output(25,eq,24) output(51,eq,49) output(48,eq,49) output(25,eq,49) output(47,eq,49) output(14,eq,49) output(13,eq,49) output(64,eq,49) output(13,eq,29) output(64,eq,29) output(48,eq,29) output(25,eq,29) output(25,eq,10) output(13,eq,23) output(64,eq,23) output(48,eq,23) output(25,eq,23) output(25,eq,50)
Optimization: 132 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,49) output(10,better,50) output(13,better,25) output(13,better,50) output(13,better,49) output(29,better,49) output(29,better,50) output(51,better,50) output(51,better,49) output(64,better,25) output(64,better,50) output(64,better,49) output(70,better,25) output(70,better,49) output(70,better,50) output(14,better,70) output(14,better,25) output(14,better,10) output(14,better,29) output(14,better,51) output(14,better,50) output(14,better,49) output(18,better,10) output(18,better,29) output(18,better,49) output(18,better,50) output(24,better,50) output(42,better,10) output(42,better,29) output(42,better,49) output(42,better,50) output(47,better,70) output(47,better,25) output(47,better,10) output(47,better,29) output(47,better,51) output(47,better,50) output(47,better,49) output(48,better,51) output(48,better,10) output(48,better,50) output(48,better,49) output(48,better,29) output(49,better,50) output(65,better,10) output(65,better,29) output(65,better,49) output(65,better,50) output(10,worse,24) output(10,worse,23) output(13,worse,14) output(13,worse,18) output(13,worse,65) output(13,worse,48) output(13,worse,42) output(13,worse,24) output(13,worse,23) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,24) output(25,worse,49) output(25,worse,29) output(25,worse,10) output(25,worse,23) output(29,worse,24) output(29,worse,23) output(50,worse,23) output(51,worse,42) output(51,worse,18) output(51,worse,65) output(51,worse,23) output(51,worse,24) output(64,worse,47) output(64,worse,18) output(64,worse,65) output(64,worse,48) output(64,worse,42) output(64,worse,24) output(64,worse,23) output(70,worse,18) output(70,worse,48) output(70,worse,65) output(70,worse,42) output(70,worse,23) output(70,worse,24) output(49,worse,24) output(49,worse,23) output(10,eq,29) output(18,eq,65) output(42,eq,18) output(42,eq,65) output(48,eq,42) output(13,eq,70) output(24,eq,23) output(70,eq,10) output(47,eq,18) output(14,eq,18) output(64,eq,70) output(51,eq,10) output(13,eq,10) output(64,eq,10) output(70,eq,29) output(51,eq,29) output(18,eq,24) output(65,eq,24) output(70,eq,51) output(48,eq,65) output(47,eq,65) output(14,eq,65) output(47,eq,48) output(14,eq,48) output(48,eq,18) output(47,eq,42) output(14,eq,42) output(13,eq,51) output(64,eq,51) output(18,eq,23) output(65,eq,23) output(42,eq,23) output(47,eq,23) output(14,eq,23) output(42,eq,24) output(48,eq,24) output(47,eq,24) output(14,eq,24) output(13,eq,29) output(64,eq,29) output(48,eq,23) output(25,eq,50)
Optimization: 84 7
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(13,better,14) output(13,better,10) output(13,better,42) output(25,better,48) output(25,better,42) output(25,better,18) output(25,better,65) output(25,better,24) output(25,better,49) output(25,better,29) output(25,better,10) output(25,better,23) output(29,better,24) output(29,better,23) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,10) output(64,better,48) output(64,better,42) output(64,better,24) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(18,better,10) output(18,better,29) output(18,better,24) output(18,better,23) output(42,better,10) output(47,better,10) output(47,better,42) output(47,better,23) output(47,better,24) output(48,better,42) output(48,better,10) output(48,better,24) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,29) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(10,worse,23) output(13,worse,70) output(13,worse,18) output(13,worse,25) output(13,worse,65) output(13,worse,48) output(13,worse,51) output(13,worse,50) output(13,worse,24) output(13,worse,49) output(13,worse,29) output(13,worse,23) output(29,worse,49) output(29,worse,50) output(64,worse,70) output(64,worse,18) output(64,worse,25) output(64,worse,65) output(64,worse,51) output(64,worse,50) output(64,worse,49) output(14,worse,70) output(14,worse,25) output(14,worse,18) output(14,worse,29) output(14,worse,51) output(14,worse,65) output(14,worse,48) output(14,worse,42) output(14,worse,50) output(14,worse,23) output(14,worse,24) output(14,worse,49) output(18,worse,50) output(24,worse,50) output(42,worse,18) output(42,worse,65) output(42,worse,29) output(42,worse,49) output(42,worse,50) output(42,worse,23) output(42,worse,24) output(47,worse,70) output(47,worse,25) output(47,worse,18) output(47,worse,29) output(47,worse,51) output(47,worse,65) output(47,worse,50) output(47,worse,49) output(48,worse,51) output(48,worse,65) output(48,worse,18) output(48,worse,50) output(48,worse,49) output(48,worse,29) output(49,worse,50) output(65,worse,50) output(18,eq,65) output(25,eq,51) output(24,eq,23) output(14,eq,10) output(18,eq,49) output(65,eq,49) output(47,eq,48) output(51,eq,50) output(64,eq,29) output(25,eq,50)
Optimization: 72 13
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrep(3))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(13,better,14) output(13,better,10) output(13,better,42) output(25,better,48) output(25,better,42) output(25,better,18) output(25,better,65) output(25,better,24) output(25,better,49) output(25,better,29) output(25,better,10) output(25,better,23) output(29,better,24) output(29,better,23) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,10) output(64,better,48) output(64,better,42) output(64,better,24) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(18,better,10) output(18,better,29) output(18,better,24) output(18,better,23) output(42,better,10) output(47,better,10) output(47,better,48) output(47,better,42) output(47,better,23) output(47,better,24) output(48,better,42) output(48,better,10) output(48,better,24) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,29) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(10,worse,23) output(13,worse,70) output(13,worse,18) output(13,worse,25) output(13,worse,65) output(13,worse,48) output(13,worse,51) output(13,worse,50) output(13,worse,24) output(13,worse,49) output(13,worse,29) output(13,worse,23) output(29,worse,49) output(29,worse,50) output(64,worse,70) output(64,worse,18) output(64,worse,25) output(64,worse,65) output(64,worse,51) output(64,worse,50) output(64,worse,49) output(14,worse,70) output(14,worse,25) output(14,worse,18) output(14,worse,29) output(14,worse,51) output(14,worse,65) output(14,worse,48) output(14,worse,42) output(14,worse,50) output(14,worse,23) output(14,worse,24) output(14,worse,49) output(18,worse,50) output(24,worse,50) output(42,worse,18) output(42,worse,65) output(42,worse,29) output(42,worse,49) output(42,worse,50) output(42,worse,23) output(42,worse,24) output(47,worse,70) output(47,worse,25) output(47,worse,18) output(47,worse,29) output(47,worse,51) output(47,worse,65) output(47,worse,50) output(47,worse,49) output(48,worse,51) output(48,worse,65) output(48,worse,18) output(48,worse,50) output(48,worse,49) output(48,worse,29) output(49,worse,50) output(65,worse,50) output(18,eq,65) output(25,eq,51) output(24,eq,23) output(14,eq,10) output(18,eq,49) output(65,eq,49) output(51,eq,50) output(64,eq,29) output(25,eq,50)
Optimization: 71 13
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(13,better,14) output(13,better,10) output(13,better,42) output(25,better,48) output(25,better,42) output(25,better,18) output(25,better,65) output(25,better,24) output(25,better,49) output(25,better,29) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,10) output(64,better,48) output(64,better,42) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(18,better,10) output(18,better,29) output(18,better,49) output(18,better,24) output(18,better,23) output(42,better,10) output(47,better,10) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,42) output(48,better,10) output(48,better,24) output(48,better,49) output(48,better,23) output(65,better,10) output(65,better,29) output(65,better,49) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(10,worse,23) output(13,worse,70) output(13,worse,18) output(13,worse,25) output(13,worse,65) output(13,worse,48) output(13,worse,51) output(13,worse,50) output(13,worse,24) output(13,worse,49) output(13,worse,29) output(13,worse,23) output(29,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,18) output(64,worse,25) output(64,worse,65) output(64,worse,51) output(64,worse,50) output(14,worse,70) output(14,worse,25) output(14,worse,18) output(14,worse,29) output(14,worse,51) output(14,worse,65) output(14,worse,48) output(14,worse,42) output(14,worse,50) output(14,worse,23) output(14,worse,24) output(14,worse,49) output(18,worse,50) output(24,worse,50) output(42,worse,18) output(42,worse,65) output(42,worse,29) output(42,worse,49) output(42,worse,50) output(42,worse,23) output(42,worse,24) output(47,worse,70) output(47,worse,25) output(47,worse,51) output(47,worse,50) output(48,worse,51) output(48,worse,65) output(48,worse,18) output(48,worse,50) output(48,worse,29) output(49,worse,50) output(65,worse,50) output(49,eq,24) output(18,eq,65) output(25,eq,51) output(24,eq,23) output(47,eq,18) output(14,eq,10) output(49,eq,23) output(47,eq,65) output(51,eq,50) output(64,eq,29) output(25,eq,50)
Optimization: 67 13
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(13,better,14) output(13,better,10) output(13,better,42) output(25,better,48) output(25,better,42) output(25,better,24) output(25,better,49) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,10) output(64,better,25) output(64,better,48) output(64,better,42) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(18,better,10) output(18,better,29) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(42,better,10) output(47,better,25) output(47,better,10) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,42) output(48,better,10) output(48,better,24) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,29) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(10,worse,23) output(13,worse,70) output(13,worse,18) output(13,worse,25) output(13,worse,65) output(13,worse,48) output(13,worse,51) output(13,worse,50) output(13,worse,24) output(13,worse,49) output(13,worse,29) output(13,worse,23) output(25,worse,51) output(25,worse,18) output(25,worse,65) output(25,worse,29) output(64,worse,47) output(64,worse,70) output(64,worse,18) output(64,worse,65) output(64,worse,51) output(14,worse,70) output(14,worse,25) output(14,worse,18) output(14,worse,29) output(14,worse,51) output(14,worse,65) output(14,worse,48) output(14,worse,42) output(14,worse,50) output(14,worse,23) output(14,worse,24) output(14,worse,49) output(24,worse,50) output(42,worse,18) output(42,worse,65) output(42,worse,29) output(42,worse,49) output(42,worse,50) output(42,worse,23) output(42,worse,24) output(47,worse,70) output(47,worse,51) output(48,worse,51) output(48,worse,65) output(48,worse,18) output(48,worse,50) output(48,worse,49) output(48,worse,29) output(49,worse,50) output(18,eq,65) output(24,eq,23) output(47,eq,18) output(14,eq,10) output(47,eq,65) output(64,eq,29) output(25,eq,50)
Optimization: 61 13
Progression : [ 2;61] (Error: 29.5)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(13,better,14) output(13,better,10) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,24) output(13,better,23) output(25,better,48) output(25,better,51) output(25,better,42) output(25,better,18) output(25,better,65) output(25,better,24) output(25,better,29) output(25,better,10) output(25,better,23) output(29,better,24) output(29,better,23) output(50,better,23) output(51,better,10) output(51,better,65) output(51,better,23) output(51,better,24) output(64,better,10) output(64,better,65) output(64,better,48) output(64,better,51) output(64,better,24) output(64,better,23) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,51) output(70,better,42) output(70,better,23) output(70,better,24) output(14,better,10) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,23) output(14,better,24) output(18,better,10) output(18,better,65) output(18,better,24) output(18,better,23) output(42,better,65) output(42,better,10) output(42,better,23) output(42,better,24) output(47,better,70) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,29) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,10) output(48,better,24) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(10,worse,23) output(13,worse,25) output(13,worse,50) output(13,worse,49) output(29,worse,49) output(29,worse,50) output(51,worse,42) output(51,worse,18) output(51,worse,29) output(51,worse,50) output(51,worse,49) output(64,worse,47) output(64,worse,70) output(64,worse,18) output(64,worse,25) output(64,worse,50) output(64,worse,49) output(64,worse,29) output(70,worse,25) output(70,worse,49) output(70,worse,50) output(14,worse,70) output(14,worse,25) output(14,worse,18) output(14,worse,29) output(14,worse,42) output(14,worse,50) output(14,worse,49) output(18,worse,49) output(18,worse,50) output(24,worse,50) output(24,worse,23) output(42,worse,18) output(42,worse,29) output(42,worse,49) output(42,worse,50) output(48,worse,51) output(48,worse,42) output(48,worse,65) output(48,worse,18) output(48,worse,50) output(48,worse,49) output(48,worse,29) output(65,worse,29) output(65,worse,49) output(65,worse,50) output(70,eq,18) output(13,eq,70) output(49,eq,50) output(18,eq,29) output(13,eq,18) output(70,eq,29) output(64,eq,42) output(25,eq,49) output(13,eq,29) output(25,eq,50)
Optimization: 60 8
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(10,better,29) output(10,better,24) output(10,better,23) output(13,better,65) output(13,better,23) output(25,better,48) output(25,better,42) output(25,better,18) output(25,better,65) output(25,better,24) output(25,better,29) output(25,better,10) output(25,better,23) output(29,better,23) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,24) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,10) output(14,better,29) output(14,better,65) output(14,better,23) output(14,better,24) output(18,better,10) output(18,better,65) output(18,better,29) output(18,better,24) output(18,better,23) output(24,better,23) output(42,better,65) output(42,better,10) output(42,better,29) output(42,better,23) output(42,better,24) output(47,better,10) output(47,better,29) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,23) output(47,better,24) output(48,better,10) output(48,better,65) output(48,better,24) output(48,better,29) output(48,better,23) output(49,better,24) output(49,better,50) output(49,better,23) output(65,better,23) output(10,worse,49) output(10,worse,50) output(13,worse,14) output(13,worse,70) output(13,worse,18) output(13,worse,10) output(13,worse,25) output(13,worse,48) output(13,worse,42) output(13,worse,51) output(13,worse,50) output(13,worse,24) output(13,worse,49) output(25,worse,51) output(25,worse,49) output(29,worse,49) output(29,worse,24) output(29,worse,50) output(64,worse,70) output(64,worse,51) output(64,worse,49) output(70,worse,51) output(14,worse,70) output(14,worse,25) output(14,worse,18) output(14,worse,51) output(14,worse,50) output(14,worse,49) output(18,worse,49) output(18,worse,50) output(24,worse,50) output(42,worse,18) output(42,worse,49) output(42,worse,50) output(47,worse,70) output(47,worse,25) output(47,worse,51) output(47,worse,50) output(47,worse,49) output(48,worse,51) output(48,worse,18) output(48,worse,50) output(48,worse,49) output(65,worse,10) output(65,worse,29) output(65,worse,49) output(65,worse,24) output(65,worse,50) output(48,eq,42) output(47,eq,18) output(70,eq,49) output(64,eq,25) output(14,eq,48) output(14,eq,42) output(64,eq,50) output(13,eq,29) output(25,eq,50)
Optimization: 57 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(10,better,49) output(10,better,24) output(10,better,50) output(13,better,14) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,24) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(51,better,42) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,25) output(14,better,10) output(14,better,48) output(14,better,50) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,10) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,50) output(48,better,24) output(48,better,49) output(49,better,24) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,50) output(10,worse,29) output(10,worse,23) output(13,worse,70) output(13,worse,29) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,29) output(25,worse,10) output(25,worse,23) output(50,worse,23) output(51,worse,29) output(64,worse,70) output(14,worse,70) output(14,worse,18) output(14,worse,29) output(14,worse,51) output(14,worse,42) output(18,worse,29) output(24,worse,50) output(24,worse,23) output(42,worse,18) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,51) output(48,worse,42) output(48,worse,65) output(48,worse,18) output(48,worse,29) output(48,worse,23) output(49,worse,23) output(65,worse,29) output(51,eq,18) output(49,eq,50) output(47,eq,18) output(48,eq,10) output(47,eq,51) output(14,eq,65) output(65,eq,23) output(14,eq,23) output(25,eq,49) output(64,eq,29) output(25,eq,50)
Optimization: 46 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(10,better,24) output(13,better,14) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,24) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,10) output(51,better,23) output(51,better,24) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,25) output(14,better,10) output(14,better,51) output(14,better,48) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,51) output(48,better,10) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,50) output(10,worse,23) output(13,worse,70) output(13,worse,29) output(25,worse,48) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,29) output(51,worse,42) output(51,worse,18) output(51,worse,29) output(51,worse,65) output(64,worse,70) output(14,worse,70) output(14,worse,18) output(14,worse,29) output(14,worse,42) output(18,worse,29) output(24,worse,50) output(24,worse,23) output(42,worse,18) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,42) output(48,worse,65) output(48,worse,18) output(48,worse,29) output(65,worse,29) output(25,eq,51) output(49,eq,50) output(47,eq,18) output(14,eq,65) output(51,eq,50) output(51,eq,49) output(25,eq,49) output(64,eq,29) output(25,eq,50)
Optimization: 41 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(3))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(10,better,24) output(13,better,14) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,24) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,25) output(14,better,10) output(14,better,48) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,10) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,50) output(10,worse,23) output(13,worse,70) output(13,worse,29) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,29) output(51,worse,42) output(51,worse,18) output(51,worse,29) output(64,worse,70) output(14,worse,70) output(14,worse,18) output(14,worse,29) output(14,worse,51) output(14,worse,42) output(18,worse,29) output(24,worse,50) output(24,worse,23) output(42,worse,18) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,51) output(48,worse,42) output(48,worse,65) output(48,worse,18) output(48,worse,29) output(65,worse,29) output(49,eq,50) output(47,eq,18) output(14,eq,65) output(25,eq,49) output(64,eq,29) output(25,eq,50)
Optimization: 40 13
Progression : [ 3;40] (Error: 12.3333)
Progression : [ 4;40] (Error: 9)
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,23) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,24) output(25,better,49) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,29) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,23) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,51) output(48,better,10) output(48,better,65) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(13,worse,14) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,29) output(51,worse,42) output(51,worse,18) output(51,worse,29) output(18,worse,29) output(24,worse,50) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,42) output(48,worse,18) output(48,worse,29) output(49,worse,50) output(65,worse,29) output(42,eq,18) output(13,eq,70) output(47,eq,18) output(64,eq,70) output(70,eq,29) output(25,eq,65) output(47,eq,42) output(65,eq,50) output(13,eq,29) output(64,eq,29) output(25,eq,50)
Optimization: 34 7
Progression : [ 5;34] (Error: 5.8)
Progression : [ 6;34] (Error: 4.66667)
Progression : [ 7;34] (Error: 3.85714)
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasCost(1))),2) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(10,better,24) output(10,better,23) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,42) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,24) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,65) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,23) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,29) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,50) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(13,worse,70) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,49) output(25,worse,29) output(14,worse,70) output(18,worse,29) output(24,worse,50) output(42,worse,29) output(47,worse,70) output(65,worse,29) output(13,eq,14) output(48,eq,51) output(18,eq,65) output(42,eq,18) output(42,eq,65) output(64,eq,70) output(51,eq,29) output(14,eq,29) output(10,eq,50) output(14,eq,51) output(14,eq,48) output(13,eq,48) output(13,eq,51) output(13,eq,29) output(48,eq,29) output(25,eq,10) output(25,eq,50)
Optimization: 33 12
Progression : [ 8;33] (Error: 3.125)
Progression : [ 9;33] (Error: 2.66667)
Progression : [10;33] (Error: 2.3)
Progression : [11;33] (Error: 2)
Progression : [12;33] (Error: 1.75)
Progression : [13;33] (Error: 1.53846)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,29) output(10,better,49) output(10,better,24) output(10,better,50) output(10,better,23) output(13,better,25) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,29) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,29) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,50) output(24,better,23) output(42,better,18) output(42,better,65) output(42,better,10) output(42,better,29) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,10) output(47,better,29) output(47,better,65) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,51) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,29) output(48,better,23) output(49,better,23) output(65,better,29) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(13,worse,14) output(13,worse,70) output(13,worse,18) output(13,worse,10) output(13,worse,65) output(13,worse,48) output(13,worse,42) output(13,worse,51) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,24) output(25,worse,29) output(25,worse,10) output(51,worse,42) output(64,worse,48) output(70,worse,48) output(47,worse,70) output(47,worse,48) output(47,worse,42) output(49,worse,24) output(65,eq,10) output(51,eq,18) output(49,eq,50) output(47,eq,18) output(47,eq,51) output(70,eq,42) output(25,eq,49) output(13,eq,29) output(25,eq,50)
Optimization: 32 10
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,29) output(10,better,49) output(10,better,24) output(10,better,50) output(10,better,23) output(13,better,25) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,49) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,29) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,42) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,29) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,29) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,29) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,23) output(42,better,65) output(42,better,29) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,10) output(47,better,29) output(47,better,65) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,51) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,29) output(48,better,23) output(49,better,23) output(65,better,29) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(13,worse,14) output(13,worse,70) output(13,worse,18) output(13,worse,10) output(13,worse,65) output(13,worse,48) output(13,worse,42) output(13,worse,51) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,29) output(25,worse,10) output(64,worse,70) output(64,worse,48) output(42,worse,18) output(42,worse,10) output(47,worse,70) output(47,worse,51) output(47,worse,48) output(49,worse,24) output(49,worse,50) output(65,worse,10) output(24,eq,50) output(47,eq,18) output(64,eq,51) output(25,eq,24) output(13,eq,29) output(25,eq,50)
Optimization: 31 10
Progression : [14;31] (Error: 1.21429)
Progression : [15;31] (Error: 1.06667)
Progression : [16;31] (Error: 0.9375)
Progression : [17;31] (Error: 0.823529)
Progression : [18;31] (Error: 0.722222)
Progression : [19;31] (Error: 0.631579)
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(10,better,50) output(10,better,23) output(13,better,70) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,10) output(51,better,50) output(51,better,23) output(51,better,24) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,29) output(64,better,23) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,29) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,50) output(24,better,23) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,70) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,29) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,51) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,50) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(13,worse,14) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,24) output(25,worse,49) output(25,worse,29) output(25,worse,10) output(51,worse,42) output(51,worse,18) output(51,worse,29) output(51,worse,65) output(51,worse,49) output(70,worse,18) output(70,worse,29) output(42,worse,18) output(42,worse,29) output(48,worse,18) output(48,worse,29) output(65,worse,29) output(64,eq,47) output(18,eq,29) output(13,eq,18) output(10,eq,24) output(13,eq,29) output(25,eq,50)
Optimization: 30 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(10,better,23) output(13,better,14) output(13,better,70) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,18) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,50) output(24,better,23) output(42,better,18) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,50) output(49,better,23) output(65,better,10) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,24) output(25,worse,49) output(25,worse,29) output(51,worse,29) output(64,worse,29) output(70,worse,29) output(14,worse,29) output(18,worse,29) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,29) output(65,worse,29) output(65,worse,49) output(65,worse,24) output(48,eq,51) output(51,eq,42) output(48,eq,42) output(13,eq,29) output(25,eq,50)
Optimization: 29 11
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,23) output(13,better,14) output(13,better,70) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,50) output(24,better,23) output(42,better,18) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,50) output(49,better,23) output(65,better,10) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,24) output(25,worse,49) output(25,worse,29) output(51,worse,29) output(64,worse,29) output(70,worse,29) output(14,worse,29) output(18,worse,29) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,29) output(49,worse,24) output(65,worse,29) output(65,worse,24) output(48,eq,51) output(65,eq,49) output(13,eq,29) output(25,eq,50)
Optimization: 28 10
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(10,better,23) output(13,better,14) output(13,better,70) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,50) output(24,better,23) output(42,better,18) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,70) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,29) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,50) output(49,better,23) output(65,better,10) output(65,better,24) output(65,better,50) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,65) output(25,worse,24) output(25,worse,49) output(25,worse,29) output(51,worse,29) output(64,worse,47) output(70,worse,29) output(14,worse,70) output(14,worse,29) output(18,worse,29) output(42,worse,29) output(48,worse,29) output(65,worse,29) output(48,eq,51) output(65,eq,49) output(10,eq,50) output(13,eq,29) output(64,eq,29) output(25,eq,10) output(25,eq,50)
Optimization: 27 11
Progression : [20;27] (Error: 0.35)
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,23) output(13,better,14) output(13,better,70) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,65) output(25,better,24) output(25,better,49) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,18) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,23) output(24,better,23) output(42,better,18) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,51) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,29) output(51,worse,29) output(64,worse,29) output(70,worse,29) output(14,worse,29) output(18,worse,29) output(24,worse,50) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,29) output(49,worse,50) output(65,worse,29) output(65,worse,50) output(51,eq,42) output(25,eq,18) output(18,eq,50) output(13,eq,29) output(25,eq,50)
Optimization: 26 12
Answer: 21
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(10,better,23) output(13,better,14) output(13,better,70) output(13,better,18) output(13,better,10) output(13,better,25) output(13,better,65) output(13,better,48) output(13,better,42) output(13,better,51) output(13,better,50) output(13,better,24) output(13,better,49) output(13,better,23) output(25,better,65) output(25,better,24) output(25,better,49) output(25,better,10) output(25,better,23) output(29,better,49) output(29,better,24) output(29,better,23) output(29,better,50) output(50,better,23) output(51,better,42) output(51,better,18) output(51,better,10) output(51,better,65) output(51,better,50) output(51,better,23) output(51,better,24) output(51,better,49) output(64,better,47) output(64,better,70) output(64,better,18) output(64,better,10) output(64,better,25) output(64,better,65) output(64,better,48) output(64,better,42) output(64,better,51) output(64,better,50) output(64,better,24) output(64,better,49) output(64,better,23) output(70,better,18) output(70,better,25) output(70,better,48) output(70,better,65) output(70,better,10) output(70,better,49) output(70,better,51) output(70,better,42) output(70,better,50) output(70,better,23) output(70,better,24) output(14,better,70) output(14,better,25) output(14,better,18) output(14,better,10) output(14,better,51) output(14,better,65) output(14,better,48) output(14,better,42) output(14,better,50) output(14,better,23) output(14,better,24) output(14,better,49) output(18,better,10) output(18,better,65) output(18,better,49) output(18,better,24) output(18,better,50) output(18,better,23) output(24,better,23) output(42,better,18) output(42,better,65) output(42,better,10) output(42,better,49) output(42,better,50) output(42,better,23) output(42,better,24) output(47,better,25) output(47,better,18) output(47,better,10) output(47,better,51) output(47,better,65) output(47,better,48) output(47,better,42) output(47,better,50) output(47,better,23) output(47,better,24) output(47,better,49) output(48,better,42) output(48,better,10) output(48,better,65) output(48,better,18) output(48,better,50) output(48,better,24) output(48,better,49) output(48,better,23) output(49,better,24) output(49,better,23) output(65,better,10) output(65,better,49) output(65,better,24) output(65,better,23) output(10,worse,29) output(10,worse,49) output(10,worse,24) output(10,worse,50) output(25,worse,48) output(25,worse,51) output(25,worse,42) output(25,worse,18) output(25,worse,29) output(51,worse,29) output(64,worse,29) output(70,worse,29) output(14,worse,29) output(18,worse,29) output(24,worse,50) output(42,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,29) output(49,worse,50) output(65,worse,29) output(65,worse,50) output(48,eq,51) output(13,eq,29) output(25,eq,50)
Optimization: 25 12
Progression : [21;25] (Error: 0.190476)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.042 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 25 12
Bounds       : [21;25] [0;12]
Calls        : 1
Time         : 292.288s (Solving: 290.13s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1162.470s
Threads      : 4        (Winner: 4)

Choices      : 11443330 (Domain: 1551060)
Conflicts    : 8761742  (Analyzed: 8761722)
Restarts     : 7595     (Average: 1153.62 Last: 828103)
Model-Level  : 42.8    
Problems     : 24       (Average Length: 0.17 Splits: 0)
Lemmas       : 8917242  (Deleted: 8547356)
  Binary     : 372      (Ratio:   0.00%)
  Ternary    : 13463    (Ratio:   0.15%)
  Conflict   : 8761722  (Average Length:   95.6 Ratio:  98.26%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 155520   (Average Length:   27.4 Ratio:   1.74%) 
  Distributed: 51848    (Ratio:   0.59% Average LBD: 3.66) 
  Integrated : 155544   (Ratio: 300.00% Unit: 288 Average Jumps: 5.36)
Backjumps    : 8761722  (Average:  1.28 Max: 175 Sum: 11208545)
  Executed   : 8761691  (Average:  1.28 Max: 175 Sum: 11207866 Ratio:  99.99%)
  Bounded    : 31       (Average: 21.90 Max:  97 Sum:    679 Ratio:   0.01%)

Rules        : 252037  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 18564   
Bodies       : 6680    
  Sum        : 251     
  Count      : 14      
Equivalences : 10313    (Atom=Atom: 1361 Body=Body: 573 Other: 8379)
Tight        : Yes
Variables    : 5181     (Eliminated:    0 Frozen: 3711)
Constraints  : 242117   (Binary:  98.5% Ternary:   0.7% Other:   0.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(2)) 
}.
