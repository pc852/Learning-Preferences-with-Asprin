asprin_vL version 1.0
Reading from stdin
-:1238:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1263:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1344:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1618:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1795:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1996:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2000:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2000:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2006:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2105:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2131:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2251:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2285:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2307:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1155:1-16: info: no atoms over signature occur in program:
  output/3

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1148:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1149:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1150:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1180:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,39) output(10,better,62) output(10,better,89) output(66,worse,32) output(21,eq,58) output(58,eq,62) output(62,eq,39) output(67,eq,50) output(50,eq,84) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(18,eq,47) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(67,eq,84) output(61,eq,50) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(61,eq,84) output(21,eq,89)
Optimization: 23 6
Answer: 2
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,aso) output(10,better,21) output(50,better,84) output(10,better,8) output(10,better,58) output(10,better,39) output(10,better,62) output(10,better,89) output(67,worse,50) output(66,worse,32) output(61,worse,50) output(21,eq,58) output(58,eq,62) output(62,eq,39) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(18,eq,47) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(61,eq,84) output(21,eq,89)
Optimization: 22 6
Answer: 3
preference(1,(1,2),0,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasPrepTime(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,aso) output(21,better,58) output(66,better,32) output(21,better,8) output(61,better,67) output(21,better,62) output(10,better,8) output(10,better,58) output(21,better,39) output(10,better,39) output(10,better,62) output(67,worse,50) output(62,worse,89) output(58,worse,89) output(8,worse,89) output(67,worse,84) output(10,eq,21) output(62,eq,39) output(50,eq,84) output(8,eq,62) output(18,eq,42) output(42,eq,47) output(18,eq,47) output(61,eq,50) output(8,eq,39) output(61,eq,84) output(21,eq,89) output(10,eq,89)
Optimization: 19 6
Answer: 4
preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(21,better,8) output(62,better,89) output(61,better,67) output(10,better,8) output(61,better,50) output(10,better,58) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(58,worse,62) output(8,worse,62) output(58,worse,39) output(8,worse,39) output(62,eq,39) output(67,eq,50) output(50,eq,84) output(18,eq,42) output(42,eq,47) output(18,eq,47) output(8,eq,89) output(21,eq,62) output(67,eq,84) output(21,eq,39)
Optimization: 16 6
Answer: 5
preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(21,better,8) output(62,better,89) output(42,better,47) output(61,better,67) output(18,better,47) output(10,better,8) output(61,better,50) output(10,better,58) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(58,worse,62) output(8,worse,62) output(58,worse,39) output(8,worse,39) output(62,eq,39) output(67,eq,50) output(50,eq,84) output(18,eq,42) output(8,eq,89) output(21,eq,62) output(67,eq,84) output(21,eq,39)
Optimization: 14 6
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(66,better,32) output(21,better,8) output(62,better,89) output(42,better,47) output(61,better,67) output(18,better,47) output(10,better,8) output(61,better,50) output(10,better,58) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(58,worse,62) output(8,worse,62) output(58,worse,39) output(8,worse,39) output(62,eq,39) output(67,eq,50) output(50,eq,84) output(18,eq,42) output(8,eq,89) output(21,eq,62) output(67,eq,84) output(21,eq,39)
Optimization: 13 6
Progression : [ 1;13] (Error: 12)
Answer: 7
preference(1,(1,2),0,for(atom(hasPrepTime(1))),()) preference(1,(1,3),0,for(atom(hasPrep(4))),()) preference(1,(1,5),0,for(atom(hasPrep(1))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,aso) output(21,better,58) output(62,better,39) output(50,better,84) output(66,better,32) output(8,better,62) output(42,better,47) output(61,better,67) output(18,better,47) output(8,better,89) output(21,better,62) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(67,worse,50) output(10,eq,21) output(21,eq,8) output(18,eq,42) output(10,eq,8) output(67,eq,84) output(61,eq,50)
Optimization: 10 4
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(62,better,39) output(67,better,50) output(62,better,89) output(18,better,47) output(58,better,89) output(8,better,89) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(21,worse,58) output(50,worse,84) output(66,eq,32) output(21,eq,8) output(8,eq,62) output(61,eq,67) output(21,eq,62)
Optimization: 9 6
Progression : [2;9] (Error: 3.5)
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),0,for(atom(hasPrep(6))),()) preference(1,(1,5),0,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasCost(2))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(3))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,aso) output(10,better,21) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(62,better,89) output(42,better,47) output(18,better,47) output(58,better,89) output(8,better,89) output(10,better,8) output(67,better,84) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(61,worse,67) output(21,eq,58) output(58,eq,62) output(21,eq,8) output(8,eq,62) output(18,eq,42) output(21,eq,62) output(61,eq,50)
Optimization: 8 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(62,better,89) output(42,better,47) output(18,better,47) output(58,better,89) output(8,better,89) output(10,better,8) output(67,better,84) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(21,worse,58) output(18,worse,42) output(21,eq,8) output(8,eq,62) output(21,eq,62)
Optimization: 7 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(62,better,89) output(42,better,47) output(18,better,47) output(58,better,89) output(8,better,89) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(21,worse,58) output(18,worse,42) output(21,eq,8) output(8,eq,62) output(21,eq,62)
Optimization: 6 6
Progression : [3;6] (Error: 1)
Answer: 12
preference(1,(1,2),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(8,better,62) output(42,better,47) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(18,worse,42) output(21,eq,58) output(21,eq,8)
Optimization: 5 6
Progression : [4;5] (Error: 0.25)
Progression : [5;5] (Error: 0)
Progression : 5 [1;6] (Error: 5)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasPrepTime(3))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(62,better,39) output(50,better,84) output(66,better,32) output(8,better,62) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(18,worse,42) output(21,eq,58) output(21,eq,8)
Optimization: 5 5
Progression : 5 [2;5] (Error: 1.5)
Progression : 5 [3;5] (Error: 0.666667)
Progression : 5 [4;5] (Error: 0.25)
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 5 5
Calls        : 1
Time         : 5.816s (Solving: 4.02s 1st Model: 0.03s Unsat: 2.07s)
CPU Time     : 17.808s
Threads      : 4        (Winner: 1)

Choices      : 169897   (Domain: 8292)
Conflicts    : 91122    (Analyzed: 91111)
Restarts     : 149      (Average: 611.48 Last: 2615)
Model-Level  : 262.5   
Problems     : 16       (Average Length: 0.25 Splits: 0)
Lemmas       : 101072   (Deleted: 32158)
  Binary     : 678      (Ratio:   0.67%)
  Ternary    : 830      (Ratio:   0.82%)
  Conflict   : 91111    (Average Length:   43.0 Ratio:  90.14%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 9961     (Average Length:   21.1 Ratio:   9.86%) 
  Distributed: 3340     (Ratio:   3.67% Average LBD: 3.10) 
  Integrated : 10020    (Ratio: 300.00% Unit: 121 Average Jumps: 33.50)
Backjumps    : 91111    (Average:  1.75 Max: 362 Sum: 159620)
  Executed   : 91090    (Average:  1.75 Max: 362 Sum: 159398 Ratio:  99.86%)
  Bounded    : 21       (Average: 10.57 Max:  26 Sum:    222 Ratio:   0.14%)

Rules        : 400264  
  Choice     : 19      
  Minimize   : 2       
Atoms        : 93176   
Bodies       : 100838  
  Count      : 540     
Equivalences : 257290   (Atom=Atom: 78542 Body=Body: 85330 Other: 93418)
Tight        : Yes
Variables    : 14727    (Eliminated:    0 Frozen: 6549)
Constraints  : 331381   (Binary:  95.7% Ternary:   3.5% Other:   0.8%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) ; 
  not atom(hasPrep(6))  >> atom(hasPrep(4)) ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasDifficulty(1)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasPrep(4)) || atom(hasPrepTime(3)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) ; 
  not atom(hasPrep(5))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasPrep(1))  || not atom(hasPrep(0))  ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(7)) ; 
  not atom(hasCost(1))  >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(1)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(1))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) || not atom(hasCost(2))  ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(7)) ; 
  atom(hasPrep(1)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(1))  || not atom(hasPrep(0))  ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(7)) ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(1)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(6))  >> not atom(hasPrep(1))  || atom(hasPrepTime(1)) ; 
  not atom(hasPrep(7))  >> not atom(hasPrep(4))  || atom(hasPrep(4)) ; 
  not atom(hasPrep(5))  >> not atom(hasPrep(4))  || atom(hasPrep(1)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(4))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) || not atom(hasPrepTime(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(6))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) || not atom(hasPrep(7))  ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(6)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(3)) || not atom(hasPrep(0))  ; 
  not atom(hasPrep(4))  >> not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasPrep(1))  || not atom(hasPrep(5))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(3)) || atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(2)) || atom(hasDifficulty(1)) ; 
  not atom(hasPrep(6))  >> atom(hasPrep(5)) ; 
  atom(hasPrep(2)) >> not atom(hasCost(1))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrepTime(2))  || not atom(hasPrep(7))  ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(1))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(1)) >> not atom(hasPrep(5))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(5)) ; 
  atom(hasPrep(1)) >> not atom(hasPrep(0))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrepTime(2))  || not atom(hasPrep(7))  ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(2)) || not atom(hasPrep(5))  ; 
  atom(hasPrep(1)) >> not atom(hasPrep(5))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(5)) ; 
  atom(hasPrep(1)) >> not atom(hasPrep(0))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasPrep(1)) || atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(2)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(1)) >> not atom(hasPrep(5))  ; 
  not atom(hasPrep(6))  >> atom(hasPrep(5)) ; 
  atom(hasPrep(1)) >> not atom(hasPrep(0))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(1))  >> not atom(hasPrep(1))  || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(2))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(1))  || not atom(hasPrep(0))  ; 
  not atom(hasPrep(1))  >> atom(hasPrepTime(3)) || not atom(hasPrep(7))  ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(2)) 
}.
