asprin_vL version 1.0
Reading from stdin
-:1261:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1271:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1286:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1367:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1628:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1641:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1818:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1947:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2019:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2023:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2023:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2029:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2128:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2154:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2274:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1178:1-16: info: no atoms over signature occur in program:
  output/3

-:1170:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1171:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(99,eq,71) output(71,eq,57) output(57,eq,8) output(91,eq,76) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(60,eq,99) output(78,eq,71) output(71,eq,53) output(53,eq,30) output(30,eq,98) output(98,eq,76) output(30,eq,76) output(53,eq,98) output(71,eq,30) output(99,eq,53) output(78,eq,53) output(51,eq,52) output(76,eq,67) output(91,eq,51) output(98,eq,51) output(71,eq,8) output(99,eq,57) output(78,eq,57) output(60,eq,71) output(60,eq,57) output(99,eq,8) output(78,eq,8) output(60,eq,8) output(30,eq,51) output(53,eq,51) output(91,eq,67) output(98,eq,67) output(30,eq,67) output(76,eq,52) output(91,eq,52) output(98,eq,52) output(60,eq,53) output(99,eq,30) output(78,eq,30) output(60,eq,30) output(71,eq,98) output(99,eq,98) output(78,eq,98) output(53,eq,76) output(71,eq,76) output(99,eq,76) output(78,eq,76) output(60,eq,76) output(60,eq,98) output(30,eq,52) output(53,eq,52) output(71,eq,52) output(99,eq,52) output(78,eq,52) output(53,eq,67) output(71,eq,67) output(99,eq,67) output(78,eq,67) output(60,eq,67) output(71,eq,51) output(99,eq,51) output(78,eq,51) output(60,eq,51) output(60,eq,52)
Optimization: 66 0
Answer: 2
preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(60,worse,99) output(71,eq,57) output(57,eq,8) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(71,eq,53) output(53,eq,30) output(30,eq,98) output(98,eq,76) output(30,eq,76) output(53,eq,98) output(71,eq,30) output(51,eq,52) output(76,eq,67) output(98,eq,51) output(71,eq,8) output(60,eq,71) output(60,eq,57) output(60,eq,8) output(30,eq,51) output(53,eq,51) output(98,eq,67) output(30,eq,67) output(76,eq,52) output(98,eq,52) output(60,eq,53) output(60,eq,30) output(71,eq,98) output(53,eq,76) output(71,eq,76) output(60,eq,76) output(60,eq,98) output(30,eq,52) output(53,eq,52) output(71,eq,52) output(53,eq,67) output(71,eq,67) output(60,eq,67) output(71,eq,51) output(60,eq,51) output(60,eq,52)
Optimization: 42 2
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrep(3))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(53,better,30) output(53,better,98) output(53,better,76) output(53,better,52) output(53,better,67) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,52) output(67,better,52) output(71,better,57) output(71,better,30) output(71,better,8) output(71,better,76) output(71,better,52) output(71,better,67) output(76,better,67) output(76,better,52) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,67) output(98,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,98) output(30,worse,76) output(30,worse,51) output(30,worse,67) output(53,worse,51) output(57,worse,8) output(60,worse,99) output(60,worse,51) output(71,worse,53) output(71,worse,98) output(71,worse,51) output(76,worse,51) output(91,worse,51) output(98,worse,51) output(30,eq,52)
Optimization: 15 13
Progression : [ 2;15] (Error: 6.5)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasCost(1))),3) preference(1,less(weight)) output(30,better,98) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,98) output(53,better,67) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(76,better,52) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,76) output(51,worse,52) output(53,worse,30) output(53,worse,51) output(53,worse,76) output(53,worse,52) output(57,worse,8) output(67,worse,52) output(71,worse,76) output(98,worse,76) output(98,worse,51) output(98,worse,52) output(98,eq,67) output(99,eq,76) output(30,eq,52)
Optimization: 15 10
Progression : [ 3;15] (Error: 4)
Answer: 5
preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(30,better,98) output(51,better,67) output(51,better,52) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,52) output(53,better,67) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(67,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(76,better,52) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,76) output(30,worse,51) output(30,worse,67) output(53,worse,76) output(57,worse,8) output(91,worse,76) output(91,worse,51) output(91,worse,67) output(91,worse,52) output(98,worse,76) output(98,worse,51) output(98,worse,67) output(98,worse,52) output(30,eq,52)
Optimization: 14 12
Answer: 6
preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,76) output(53,better,67) output(57,better,8) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,52) output(53,worse,30) output(53,worse,52) output(60,worse,99) output(60,worse,71) output(67,worse,52) output(76,worse,51) output(76,worse,52) output(98,worse,52) output(53,eq,98) output(98,eq,51) output(53,eq,51) output(30,eq,52)
Optimization: 13 8
Answer: 7
preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(53,better,51) output(53,better,76) output(53,better,67) output(57,better,8) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(98,better,76) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,67) output(51,worse,52) output(53,worse,30) output(53,worse,52) output(60,worse,99) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(53,eq,98) output(60,eq,71) output(91,eq,52) output(30,eq,52)
Optimization: 12 9
Answer: 8
preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(53,better,51) output(53,better,76) output(53,better,67) output(57,better,8) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,67) output(51,worse,52) output(53,worse,30) output(53,worse,52) output(60,worse,99) output(60,worse,71) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(53,eq,98) output(30,eq,52)
Optimization: 11 8
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,51) output(53,better,76) output(53,better,67) output(57,better,8) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,52) output(53,worse,30) output(53,worse,52) output(60,worse,99) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(76,eq,51) output(53,eq,98) output(30,eq,52)
Optimization: 10 9
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,51) output(53,better,76) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,52) output(53,worse,30) output(53,worse,52) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(76,eq,51) output(53,eq,98) output(30,eq,52)
Optimization: 9 9
Answer: 11
preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,67) output(51,better,67) output(51,better,52) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,51) output(67,worse,52) output(76,worse,51) output(76,worse,52) output(98,worse,51) output(98,worse,52) output(91,eq,51) output(30,eq,52)
Optimization: 8 8
Progression : [4;8] (Error: 1)
Progression : [5;8] (Error: 0.6)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasDifficulty(1))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(53,eq,30) output(30,eq,52) output(53,eq,52)
Optimization: 7 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,11),1,for(atom(hasCost(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(98,eq,76) output(30,eq,52)
Optimization: 6 12
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,10),1,for(atom(hasPrep(7))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(98,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,98) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(30,eq,52)
Optimization: 5 13
Progression : 5 [ 1;13] (Error: 12)
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(30,better,98) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(98,worse,52) output(30,eq,52)
Optimization: 5 10
Progression : 5 [ 2;10] (Error: 4)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(98,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,98) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(30,eq,52)
Optimization: 5 9
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(98,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,98) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(30,eq,52)
Optimization: 5 8
Answer: 18
preference(1,(1,2),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(30,better,76) output(30,better,51) output(30,better,67) output(51,better,67) output(53,better,30) output(53,better,98) output(53,better,51) output(53,better,76) output(53,better,52) output(53,better,67) output(57,better,8) output(60,better,99) output(60,better,71) output(60,better,57) output(60,better,8) output(60,better,53) output(60,better,30) output(60,better,76) output(60,better,98) output(60,better,67) output(60,better,51) output(60,better,52) output(71,better,57) output(71,better,53) output(71,better,30) output(71,better,8) output(71,better,98) output(71,better,76) output(71,better,52) output(71,better,67) output(71,better,51) output(76,better,51) output(76,better,67) output(78,better,71) output(78,better,53) output(78,better,57) output(78,better,8) output(78,better,30) output(78,better,98) output(78,better,76) output(78,better,52) output(78,better,67) output(78,better,51) output(91,better,76) output(91,better,51) output(91,better,67) output(91,better,52) output(98,better,76) output(98,better,51) output(98,better,67) output(98,better,52) output(99,better,71) output(99,better,53) output(99,better,57) output(99,better,8) output(99,better,30) output(99,better,98) output(99,better,76) output(99,better,52) output(99,better,67) output(99,better,51) output(30,worse,98) output(51,worse,52) output(67,worse,52) output(76,worse,52) output(30,eq,52)
Optimization: 5 7
Progression : 5 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.055 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 5 7
Bounds       : 5 [3;7]
Calls        : 1
Time         : 297.041s (Solving: 295.30s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1182.582s
Threads      : 4        (Winner: 4)

Choices      : 9043617  (Domain: 933123)
Conflicts    : 7539561  (Analyzed: 7539554)
Restarts     : 6163     (Average: 1223.36 Last: 304910)
Model-Level  : 40.9    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 7693771  (Deleted: 7390498)
  Binary     : 686      (Ratio:   0.01%)
  Ternary    : 9477     (Ratio:   0.12%)
  Conflict   : 7539554  (Average Length:  184.2 Ratio:  98.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 154217   (Average Length:   38.8 Ratio:   2.00%) 
  Distributed: 51480    (Ratio:   0.68% Average LBD: 3.67) 
  Integrated : 154440   (Ratio: 300.00% Unit: 329 Average Jumps: 5.53)
Backjumps    : 7539554  (Average:  1.17 Max: 468 Sum: 8840177)
  Executed   : 7539535  (Average:  1.17 Max: 468 Sum: 8840064 Ratio: 100.00%)
  Bounded    : 19       (Average:  5.95 Max:  30 Sum:    113 Ratio:   0.00%)

Rules        : 146599  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 12072   
Bodies       : 5956    
  Sum        : 121     
  Count      : 14      
Equivalences : 7544     (Atom=Atom: 696 Body=Body: 304 Other: 6544)
Tight        : Yes
Variables    : 4896     (Eliminated:    0 Frozen: 3426)
Constraints  : 142666   (Binary:  97.7% Ternary:   1.1% Other:   1.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.
