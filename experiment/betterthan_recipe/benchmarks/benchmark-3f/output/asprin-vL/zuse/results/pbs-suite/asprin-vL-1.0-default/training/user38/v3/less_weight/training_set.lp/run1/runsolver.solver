asprin_vL version 1.0
Reading from stdin
-:1235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1152:1-16: info: no atoms over signature occur in program:
  output/3

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(62,eq,75) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(55,eq,52) output(52,eq,25) output(71,eq,57) output(57,eq,8) output(8,eq,55) output(55,eq,91) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(51,eq,52) output(76,eq,67) output(8,eq,91) output(86,eq,55) output(57,eq,55) output(71,eq,8) output(55,eq,25) output(67,eq,25) output(8,eq,52) output(86,eq,94) output(57,eq,94) output(62,eq,78) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(57,eq,25) output(71,eq,55) output(86,eq,91) output(57,eq,91) output(71,eq,91) output(76,eq,52) output(71,eq,25)
Optimization: 40 0
Answer: 2
preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(8,better,55) output(57,better,55) output(71,better,55) output(86,better,55) output(55,worse,52) output(55,worse,91) output(55,worse,25) output(62,eq,75) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(52,eq,25) output(71,eq,57) output(57,eq,8) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(51,eq,52) output(76,eq,67) output(8,eq,91) output(71,eq,8) output(67,eq,25) output(8,eq,52) output(86,eq,94) output(57,eq,94) output(62,eq,78) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(57,eq,25) output(86,eq,91) output(57,eq,91) output(71,eq,91) output(76,eq,52) output(71,eq,25)
Optimization: 36 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(1))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrep(3))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(8,better,91) output(55,better,91) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,91) output(62,better,75) output(62,better,78) output(71,better,8) output(71,better,94) output(71,better,55) output(71,better,91) output(86,better,91) output(8,worse,52) output(8,worse,25) output(51,worse,67) output(51,worse,52) output(51,worse,25) output(55,worse,52) output(55,worse,25) output(76,worse,67) output(76,worse,25) output(76,worse,52) output(86,worse,52) output(86,worse,25) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(52,eq,25) output(71,eq,57) output(8,eq,55) output(76,eq,51) output(67,eq,52) output(86,eq,55) output(67,eq,25) output(86,eq,94) output(57,eq,52) output(71,eq,52) output(57,eq,25) output(71,eq,25)
Optimization: 27 9
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(3))),2) preference(1,less(weight)) output(8,better,55) output(8,better,91) output(57,better,8) output(57,better,55) output(57,better,91) output(62,better,75) output(62,better,78) output(71,better,57) output(71,better,8) output(71,better,55) output(71,better,91) output(76,better,51) output(86,better,55) output(86,better,91) output(8,worse,94) output(8,worse,52) output(8,worse,25) output(51,worse,67) output(51,worse,52) output(51,worse,25) output(55,worse,52) output(55,worse,25) output(57,worse,94) output(57,worse,52) output(57,worse,25) output(67,worse,52) output(67,worse,25) output(76,worse,25) output(76,worse,52) output(86,worse,94) output(86,worse,52) output(86,worse,25) output(75,eq,78) output(86,eq,8) output(52,eq,25) output(55,eq,91) output(76,eq,67) output(71,eq,94) output(71,eq,52) output(71,eq,25)
Optimization: 26 11
Progression : [ 1;26] (Error: 25)
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),7) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(51,better,25) output(52,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,25) output(57,better,91) output(67,better,52) output(67,better,25) output(76,better,51) output(76,better,25) output(76,better,52) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(8,worse,94) output(8,worse,55) output(8,worse,91) output(8,worse,52) output(8,worse,25) output(51,worse,67) output(55,worse,52) output(55,worse,25) output(62,worse,75) output(62,worse,78) output(71,worse,57) output(71,worse,8) output(71,worse,94) output(71,worse,52) output(71,worse,55) output(71,worse,91) output(71,worse,25) output(76,worse,67) output(75,worse,78) output(55,eq,91) output(51,eq,52) output(57,eq,52)
Optimization: 22 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),7) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(8,better,91) output(52,better,25) output(55,better,91) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,25) output(57,better,91) output(67,better,52) output(67,better,25) output(71,better,91) output(76,better,51) output(76,better,25) output(76,better,52) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(8,worse,94) output(8,worse,55) output(8,worse,52) output(8,worse,25) output(51,worse,67) output(51,worse,52) output(51,worse,25) output(55,worse,52) output(55,worse,25) output(62,worse,75) output(62,worse,78) output(71,worse,57) output(71,worse,8) output(71,worse,94) output(71,worse,52) output(71,worse,55) output(71,worse,25) output(76,worse,67) output(75,worse,78) output(57,eq,52)
Optimization: 20 13
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),6) preference(1,less(weight)) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(51,better,52) output(51,better,25) output(52,better,25) output(55,better,25) output(57,better,55) output(57,better,94) output(57,better,25) output(62,better,75) output(62,better,78) output(67,better,52) output(67,better,25) output(71,better,57) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(76,better,25) output(76,better,52) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(55,worse,52) output(55,worse,91) output(57,worse,8) output(76,worse,51) output(76,worse,67) output(75,eq,78) output(86,eq,8) output(51,eq,67) output(71,eq,8) output(57,eq,52) output(57,eq,91)
Optimization: 11 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(51,better,52) output(51,better,25) output(52,better,25) output(55,better,25) output(57,better,55) output(57,better,94) output(57,better,25) output(67,better,52) output(67,better,25) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(51,worse,67) output(55,worse,52) output(55,worse,91) output(57,worse,8) output(57,worse,91) output(62,worse,75) output(62,worse,78) output(75,worse,78) output(57,eq,52)
Optimization: 9 11
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),3) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(51,better,52) output(51,better,25) output(52,better,25) output(55,better,91) output(57,better,55) output(57,better,25) output(57,better,91) output(62,better,75) output(62,better,78) output(67,better,52) output(67,better,25) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(75,better,78) output(55,worse,52) output(57,worse,8) output(57,worse,94) output(86,eq,8) output(51,eq,67) output(55,eq,25) output(57,eq,52)
Optimization: 7 13
Answer: 10
preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasPrep(4))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),4) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrep(3))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,(1,11),1,for(atom(hasPrep(6))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(51,better,67) output(51,better,52) output(51,better,25) output(52,better,25) output(55,better,91) output(55,better,25) output(57,better,55) output(57,better,94) output(57,better,25) output(57,better,91) output(62,better,75) output(62,better,78) output(67,better,52) output(67,better,25) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(75,better,78) output(55,worse,52) output(57,worse,8) output(57,eq,52)
Optimization: 3 12
Progression : [2;3] (Error: 0.5)
Progression : [3;3] (Error: 0)
Progression : 3 [ 1;12] (Error: 11)
Progression : 3 [ 2;12] (Error: 5)
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(51,better,67) output(51,better,52) output(51,better,25) output(52,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(57,better,94) output(57,better,25) output(57,better,91) output(62,better,75) output(62,better,78) output(67,better,52) output(67,better,25) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(75,better,78) output(57,worse,8) output(57,worse,55) output(57,worse,52)
Optimization: 3 9
Progression : 3 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 3 9
Bounds       : 3 [3;9]
Calls        : 1
Time         : 296.054s (Solving: 294.50s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.349s
Threads      : 4        (Winner: 4)

Choices      : 7360555  (Domain: 720387)
Conflicts    : 6753656  (Analyzed: 6753650)
Restarts     : 6376     (Average: 1059.23 Last: 345179)
Model-Level  : 52.5    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 6860181  (Deleted: 6619602)
  Binary     : 568      (Ratio:   0.01%)
  Ternary    : 5685     (Ratio:   0.08%)
  Conflict   : 6753649  (Average Length:  223.6 Ratio:  98.45%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 106532   (Average Length:   80.8 Ratio:   1.55%) 
  Distributed: 35557    (Ratio:   0.53% Average LBD: 3.72) 
  Integrated : 106671   (Ratio: 300.00% Unit: 234 Average Jumps: 4.59)
Backjumps    : 6753650  (Average:  1.08 Max:  47 Sum: 7278824)
  Executed   : 6753636  (Average:  1.08 Max:  47 Sum: 7278740 Ratio: 100.00%)
  Bounded    : 14       (Average:  6.00 Max:  28 Sum:     84 Ratio:   0.00%)

Rules        : 106532  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9532    
Bodies       : 5677    
  Sum        : 76      
  Count      : 14      
Equivalences : 3826     (Atom=Atom: 423 Body=Body: 184 Other: 3219)
Tight        : Yes
Variables    : 4811     (Eliminated:    0 Frozen: 3341)
Constraints  : 104990   (Binary:  97.0% Ternary:   1.4% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) 
}.
