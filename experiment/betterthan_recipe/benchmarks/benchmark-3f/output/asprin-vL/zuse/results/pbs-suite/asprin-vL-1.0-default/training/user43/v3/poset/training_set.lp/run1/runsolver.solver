asprin_vL version 1.0
Reading from stdin
-:1229:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1239:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1254:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1335:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1609:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1786:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1915:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1987:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1991:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2096:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2122:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2242:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2276:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1146:1-16: info: no atoms over signature occur in program:
  output/3

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1140:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
output(92,eq,79) preference(1,poset) output(16,eq,75) output(90,eq,79) output(79,eq,51) output(44,eq,100) output(9,eq,67) output(67,eq,33) output(16,eq,90) output(58,eq,65) output(65,eq,22) output(92,eq,77) output(77,eq,79) output(79,eq,10) output(90,eq,10) output(77,eq,10) output(58,eq,22) output(9,eq,33) output(90,eq,51) output(77,eq,51) output(16,eq,79) output(92,eq,51) output(16,eq,51) output(92,eq,10) output(16,eq,10)
Optimization: 24 0
Answer: 2
output(92,eq,79) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,poset) output(65,better,22) output(58,better,22) output(44,worse,100) output(79,worse,10) output(90,worse,10) output(77,worse,10) output(92,worse,10) output(16,worse,10) output(16,eq,75) output(90,eq,79) output(79,eq,51) output(9,eq,67) output(67,eq,33) output(16,eq,90) output(58,eq,65) output(92,eq,77) output(77,eq,79) output(9,eq,33) output(90,eq,51) output(77,eq,51) output(16,eq,79) output(92,eq,51) output(16,eq,51)
Optimization: 22 1
Answer: 3
output(92,eq,79) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(16,better,75) output(58,better,65) output(65,better,22) output(16,better,51) output(16,better,90) output(16,better,79) output(58,better,22) output(67,worse,33) output(9,worse,33) output(79,worse,10) output(90,worse,10) output(77,worse,10) output(92,worse,10) output(16,worse,10) output(90,eq,79) output(79,eq,51) output(44,eq,100) output(9,eq,67) output(92,eq,77) output(77,eq,79) output(90,eq,51) output(77,eq,51) output(92,eq,51)
Optimization: 17 1
Answer: 4
output(92,eq,79) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,poset) output(16,better,75) output(65,better,22) output(77,better,51) output(16,better,51) output(16,better,90) output(77,better,79) output(16,better,79) output(58,better,22) output(79,worse,10) output(90,worse,10) output(77,worse,10) output(92,worse,10) output(16,worse,10) output(92,worse,77) output(90,eq,79) output(79,eq,51) output(44,eq,100) output(9,eq,67) output(67,eq,33) output(58,eq,65) output(9,eq,33) output(90,eq,51) output(92,eq,51)
Optimization: 16 1
Answer: 5
output(92,eq,79) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(0))),()) preference(1,poset) output(16,better,75) output(9,better,67) output(65,better,22) output(79,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(9,better,33) output(16,better,90) output(58,better,22) output(44,worse,100) output(79,worse,10) output(90,worse,10) output(77,worse,10) output(92,worse,10) output(16,worse,10) output(90,worse,79) output(67,eq,33) output(58,eq,65) output(92,eq,77) output(77,eq,79) output(90,eq,51) output(16,eq,79)
Optimization: 14 1
Answer: 6
output(92,eq,79) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,poset) output(9,better,67) output(65,better,22) output(79,better,51) output(79,better,10) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(16,better,90) output(92,better,77) output(58,better,22) output(16,worse,75) output(67,worse,33) output(58,worse,65) output(77,worse,79) output(90,worse,79) output(44,eq,100) output(90,eq,10) output(77,eq,10) output(9,eq,33) output(90,eq,51) output(77,eq,51) output(16,eq,79)
Optimization: 13 1
Answer: 7
output(92,eq,79) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(16,better,75) output(58,better,65) output(79,better,51) output(79,better,10) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(44,better,100) output(9,better,33) output(16,better,90) output(92,better,77) output(58,better,22) output(90,worse,10) output(77,worse,10) output(90,worse,51) output(77,worse,51) output(77,worse,79) output(90,worse,79) output(16,eq,79) output(9,unc,67) output(67,unc,33) output(65,unc,22)
Optimization: 11 2
Answer: 8
output(92,eq,79) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasDifficulty(1))),()) preference(1,poset) output(9,better,67) output(65,better,22) output(79,better,51) output(79,better,10) output(90,better,10) output(77,better,10) output(90,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(16,better,90) output(92,better,77) output(58,better,22) output(67,worse,33) output(44,worse,100) output(9,worse,33) output(77,worse,79) output(90,worse,79) output(16,eq,75) output(58,eq,65) output(16,eq,79)
Optimization: 9 1
Answer: 9
output(92,eq,79) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(16,better,75) output(58,better,65) output(9,better,67) output(65,better,22) output(79,better,51) output(79,better,10) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(44,better,100) output(9,better,33) output(16,better,90) output(16,better,79) output(92,better,77) output(58,better,22) output(67,worse,33) output(90,worse,10) output(77,worse,10) output(90,worse,51) output(77,worse,51) output(77,worse,79) output(90,worse,79)
Optimization: 8 2
Answer: 10
output(92,eq,79) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,8),2,for(atom(hasPrep(6))),()) preference(1,poset) output(16,better,75) output(9,better,67) output(65,better,22) output(79,better,51) output(79,better,10) output(90,better,10) output(77,better,10) output(90,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(16,better,90) output(16,better,79) output(92,better,77) output(58,better,22) output(67,worse,33) output(44,worse,100) output(9,worse,33) output(77,worse,79) output(90,worse,79) output(58,eq,65)
Optimization: 7 2
Answer: 11
output(92,eq,79) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(16,better,75) output(58,better,65) output(9,better,67) output(65,better,22) output(79,better,51) output(79,better,10) output(90,better,10) output(77,better,10) output(90,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(16,better,90) output(16,better,79) output(92,better,77) output(58,better,22) output(67,worse,33) output(44,worse,100) output(9,worse,33) output(77,worse,79) output(90,worse,79)
Optimization: 6 2
Answer: 12
output(92,eq,79) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,7),1,for(atom(hasPrep(5))),()) preference(1,(1,8),1,for(atom(hasPrep(0))),()) preference(1,(1,9),1,for(atom(hasPrep(3))),()) preference(1,(1,10),1,for(atom(hasPrepTime(1))),()) preference(1,(1,11),1,for(atom(hasPrep(7))),()) preference(1,(1,12),1,for(atom(hasPrep(4))),()) preference(1,(1,13),1,for(atom(hasPrep(0))),()) preference(1,(1,14),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,3),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(5))),()) preference(1,(1,7),2,for(atom(hasPrepTime(1))),()) preference(1,(1,8),2,for(atom(hasDifficulty(1))),()) preference(1,(1,9),2,for(atom(hasCost(2))),()) preference(1,(1,10),2,for(atom(hasPrep(1))),()) preference(1,(1,11),2,for(atom(hasPrep(5))),()) preference(1,(1,12),2,for(atom(hasCost(2))),()) preference(1,(1,13),2,for(atom(hasPrep(7))),()) preference(1,(1,14),2,for(atom(hasPrep(7))),()) preference(1,poset) output(16,better,75) output(67,better,33) output(58,better,65) output(9,better,67) output(65,better,22) output(79,better,51) output(79,better,10) output(77,better,10) output(90,better,51) output(77,better,51) output(92,better,51) output(16,better,51) output(92,better,10) output(16,better,10) output(9,better,33) output(16,better,90) output(77,better,79) output(16,better,79) output(58,better,22) output(44,worse,100) output(90,worse,10) output(92,worse,77) output(90,worse,79)
Optimization: 5 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.026 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 5 14
Calls        : 1
Time         : 297.024s (Solving: 292.10s 1st Model: 0.71s Unsat: 0.00s)
CPU Time     : 1172.694s
Threads      : 4        (Winner: 4)

Choices      : 2097946  (Domain: 4468)
Conflicts    : 125685   (Analyzed: 125685)
Restarts     : 163      (Average: 771.07 Last: 6937)
Model-Level  : 379.3   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 7192747  (Deleted: 7071162)
  Binary     : 1719     (Ratio:   0.02%)
  Ternary    : 28713    (Ratio:   0.40%)
  Conflict   : 125685   (Average Length: 1496.0 Ratio:   1.75%) 
  Loop       : 7021679  (Average Length:  147.5 Ratio:  97.62%) 
  Other      : 45383    (Average Length:    4.0 Ratio:   0.63%) 
  Distributed: 15139    (Ratio:   0.21% Average LBD: 2.78) 
  Integrated : 45417    (Ratio: 300.00% Unit: 178 Average Jumps: 700.44)
Backjumps    : 125685   (Average: 14.26 Max: 64930 Sum: 1792307)
  Executed   : 125646   (Average: 14.26 Max: 64930 Sum: 1792209 Ratio:  99.99%)
  Bounded    : 39       (Average:  2.51 Max:  25 Sum:     98 Ratio:   0.01%)

Rules        : 894646  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 18503   
Bodies       : 698567  
  Count      : 56      
Equivalences : 22354    (Atom=Atom: 3768 Body=Body: 5500 Other: 13086)
Tight        : No       (SCCs: 25 Non-Hcfs: 0 Nodes: 649740 Gammas: 0)
Variables    : 657165   (Eliminated:    0 Frozen: 651574)
Constraints  : 3939338  (Binary:  82.8% Ternary:   2.0% Other:  15.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(2)) ; 
  atom(hasCost(1)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(0)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(3)) ; 
  atom(hasPrep(7)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(3)) >> atom(hasCost(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(4)) >> atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(7)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(7)) 
}.
