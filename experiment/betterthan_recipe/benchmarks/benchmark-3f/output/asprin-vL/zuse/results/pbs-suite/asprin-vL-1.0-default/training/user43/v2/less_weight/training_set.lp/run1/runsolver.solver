asprin_vL version 1.0
Reading from stdin
-:1243:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1253:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1268:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1349:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1610:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1623:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1800:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1929:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2001:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2005:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2011:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2110:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2136:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2256:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2290:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2312:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1160:1-16: info: no atoms over signature occur in program:
  output/3

-:1152:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1153:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,65) output(65,eq,22) output(22,eq,92) output(92,eq,77) output(77,eq,79) output(10,eq,84) output(75,eq,64) output(100,eq,92) output(92,eq,38) output(38,eq,84) output(84,eq,24) output(24,eq,52) output(84,eq,52) output(10,eq,24) output(38,eq,24) output(92,eq,84) output(22,eq,38) output(100,eq,38) output(92,eq,79) output(22,eq,77) output(100,eq,77) output(65,eq,92) output(58,eq,22) output(58,eq,92) output(65,eq,77) output(58,eq,77) output(22,eq,79) output(100,eq,79) output(65,eq,79) output(65,eq,38) output(58,eq,38) output(22,eq,84) output(100,eq,84) output(65,eq,84) output(92,eq,24) output(22,eq,24) output(100,eq,24) output(10,eq,52) output(38,eq,52) output(92,eq,52) output(22,eq,52) output(100,eq,52) output(65,eq,52) output(58,eq,52) output(65,eq,24) output(58,eq,24) output(58,eq,84) output(58,eq,79)
Optimization: 48 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(24,better,52) output(10,worse,24) output(22,worse,24) output(38,worse,24) output(58,worse,24) output(84,worse,24) output(92,worse,24) output(65,worse,24) output(100,worse,24) output(58,eq,65) output(65,eq,22) output(22,eq,92) output(92,eq,77) output(77,eq,79) output(10,eq,84) output(75,eq,64) output(100,eq,92) output(92,eq,38) output(38,eq,84) output(84,eq,52) output(92,eq,84) output(22,eq,38) output(100,eq,38) output(92,eq,79) output(22,eq,77) output(100,eq,77) output(65,eq,92) output(58,eq,22) output(58,eq,92) output(65,eq,77) output(58,eq,77) output(22,eq,79) output(100,eq,79) output(65,eq,79) output(65,eq,38) output(58,eq,38) output(22,eq,84) output(100,eq,84) output(65,eq,84) output(10,eq,52) output(38,eq,52) output(92,eq,52) output(22,eq,52) output(100,eq,52) output(65,eq,52) output(58,eq,52) output(58,eq,84) output(58,eq,79)
Optimization: 47 4
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasPrep(3))),1) preference(1,(1,3),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(22,better,38) output(22,better,77) output(58,better,77) output(58,better,38) output(92,better,77) output(92,better,38) output(65,better,77) output(65,better,38) output(100,better,38) output(100,better,77) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(77,worse,79) output(100,worse,92) output(100,worse,79) output(100,worse,84) output(100,worse,24) output(100,worse,52) output(58,eq,65) output(65,eq,22) output(22,eq,92) output(10,eq,84) output(75,eq,64) output(84,eq,24) output(24,eq,52) output(84,eq,52) output(10,eq,24) output(92,eq,84) output(92,eq,79) output(65,eq,92) output(58,eq,22) output(58,eq,92) output(22,eq,79) output(65,eq,79) output(22,eq,84) output(65,eq,84) output(92,eq,24) output(22,eq,24) output(10,eq,52) output(92,eq,52) output(22,eq,52) output(65,eq,52) output(58,eq,52) output(65,eq,24) output(58,eq,24) output(58,eq,84) output(58,eq,79)
Optimization: 38 3
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasPrep(4))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,84) output(10,better,52) output(22,better,38) output(22,better,77) output(58,better,77) output(58,better,38) output(92,better,77) output(92,better,38) output(24,better,52) output(65,better,77) output(65,better,38) output(100,better,38) output(100,better,77) output(10,worse,24) output(22,worse,24) output(22,worse,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,52) output(58,worse,24) output(77,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,24) output(92,worse,52) output(65,worse,52) output(65,worse,24) output(100,worse,24) output(100,worse,52) output(58,eq,65) output(65,eq,22) output(22,eq,92) output(75,eq,64) output(100,eq,92) output(92,eq,84) output(92,eq,79) output(65,eq,92) output(58,eq,22) output(58,eq,92) output(22,eq,79) output(100,eq,79) output(65,eq,79) output(22,eq,84) output(100,eq,84) output(65,eq,84) output(58,eq,84) output(58,eq,79)
Optimization: 35 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,38) output(22,better,77) output(58,better,22) output(58,better,77) output(58,better,38) output(92,better,77) output(92,better,38) output(65,better,22) output(65,better,77) output(65,better,38) output(100,better,38) output(100,better,77) output(22,worse,92) output(22,worse,79) output(22,worse,84) output(22,worse,24) output(22,worse,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,52) output(58,worse,24) output(77,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,24) output(92,worse,52) output(65,worse,52) output(65,worse,24) output(100,worse,24) output(100,worse,52) output(58,eq,65) output(75,eq,64) output(100,eq,92) output(24,eq,52) output(92,eq,84) output(92,eq,79) output(65,eq,92) output(58,eq,92) output(100,eq,79) output(65,eq,79) output(100,eq,84) output(65,eq,84) output(58,eq,84) output(58,eq,79)
Optimization: 33 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,38) output(22,better,77) output(58,better,22) output(58,better,77) output(58,better,38) output(92,better,77) output(92,better,38) output(24,better,52) output(65,better,22) output(65,better,77) output(65,better,38) output(100,better,38) output(100,better,77) output(22,worse,92) output(22,worse,79) output(22,worse,84) output(22,worse,24) output(22,worse,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,52) output(58,worse,24) output(77,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,24) output(92,worse,52) output(65,worse,52) output(65,worse,24) output(100,worse,24) output(100,worse,52) output(58,eq,65) output(75,eq,64) output(100,eq,92) output(92,eq,84) output(92,eq,79) output(65,eq,92) output(58,eq,92) output(100,eq,79) output(65,eq,79) output(100,eq,84) output(65,eq,84) output(58,eq,84) output(58,eq,79)
Optimization: 32 13
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasPrep(3))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,84) output(22,better,84) output(38,better,84) output(38,better,52) output(58,better,84) output(77,better,79) output(92,better,84) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(75,better,64) output(100,better,84) output(10,worse,24) output(10,worse,52) output(22,worse,92) output(22,worse,38) output(22,worse,77) output(22,worse,79) output(22,worse,24) output(22,worse,52) output(38,worse,24) output(58,worse,65) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,77) output(92,worse,38) output(92,worse,24) output(65,worse,24) output(100,worse,92) output(100,worse,38) output(100,worse,77) output(100,worse,79) output(100,worse,24) output(100,worse,52) output(92,eq,79) output(58,eq,22) output(92,eq,52)
Optimization: 31 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,84) output(22,better,38) output(22,better,77) output(58,better,22) output(58,better,77) output(58,better,38) output(58,better,84) output(92,better,77) output(92,better,38) output(92,better,84) output(24,better,52) output(65,better,22) output(65,better,77) output(65,better,38) output(65,better,84) output(100,better,38) output(100,better,77) output(100,better,84) output(10,worse,24) output(10,worse,52) output(22,worse,92) output(22,worse,79) output(22,worse,24) output(22,worse,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,52) output(58,worse,24) output(77,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,24) output(92,worse,52) output(65,worse,52) output(65,worse,24) output(100,worse,24) output(100,worse,52) output(58,eq,65) output(75,eq,64) output(100,eq,92) output(92,eq,79) output(65,eq,92) output(58,eq,92) output(100,eq,79) output(65,eq,79) output(22,eq,84) output(58,eq,79)
Optimization: 30 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,84) output(22,better,38) output(22,better,77) output(22,better,84) output(58,better,22) output(58,better,77) output(58,better,38) output(58,better,84) output(92,better,77) output(92,better,38) output(92,better,84) output(24,better,52) output(65,better,22) output(65,better,77) output(65,better,38) output(65,better,84) output(100,better,38) output(100,better,77) output(100,better,84) output(10,worse,24) output(10,worse,52) output(22,worse,92) output(22,worse,79) output(22,worse,24) output(22,worse,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,52) output(58,worse,24) output(77,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,24) output(92,worse,52) output(65,worse,52) output(65,worse,24) output(100,worse,24) output(100,worse,52) output(58,eq,65) output(75,eq,64) output(100,eq,92) output(92,eq,79) output(65,eq,92) output(58,eq,92) output(100,eq,79) output(65,eq,79) output(58,eq,79)
Optimization: 29 13
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasPrep(3))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,24) output(38,better,84) output(38,better,24) output(84,better,24) output(92,better,84) output(92,better,24) output(65,better,22) output(65,better,84) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(22,worse,92) output(22,worse,38) output(22,worse,77) output(22,worse,79) output(22,worse,84) output(22,worse,52) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,84) output(58,worse,79) output(84,worse,52) output(24,worse,52) output(65,worse,92) output(65,worse,77) output(65,worse,79) output(65,worse,38) output(65,worse,52) output(92,eq,77) output(77,eq,79) output(92,eq,38) output(92,eq,79) output(38,eq,52) output(92,eq,52) output(58,eq,24)
Optimization: 28 14
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,24) output(38,better,84) output(38,better,24) output(58,better,24) output(84,better,24) output(92,better,84) output(92,better,24) output(65,better,22) output(65,better,84) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(22,worse,92) output(22,worse,38) output(22,worse,77) output(22,worse,79) output(22,worse,84) output(22,worse,52) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,84) output(58,worse,79) output(84,worse,52) output(24,worse,52) output(65,worse,92) output(65,worse,77) output(65,worse,79) output(65,worse,38) output(65,worse,52) output(92,eq,77) output(77,eq,79) output(92,eq,38) output(92,eq,79) output(38,eq,52) output(92,eq,52)
Optimization: 27 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,52) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,79) output(84,better,52) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(75,better,64) output(10,worse,24) output(22,worse,24) output(38,worse,84) output(38,worse,24) output(58,worse,65) output(58,worse,22) output(58,worse,24) output(58,worse,84) output(84,worse,24) output(92,worse,84) output(92,worse,24) output(65,worse,24) output(100,worse,84) output(100,worse,24) output(92,eq,77) output(77,eq,79) output(10,eq,84) output(100,eq,92) output(92,eq,38) output(100,eq,38) output(92,eq,79) output(100,eq,77) output(100,eq,79) output(22,eq,84) output(38,eq,52) output(92,eq,52) output(100,eq,52)
Optimization: 27 12
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),5) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasPrep(4))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,24) output(38,better,84) output(38,better,24) output(38,better,52) output(58,better,24) output(77,better,79) output(84,better,24) output(84,better,52) output(92,better,24) output(65,better,22) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(22,worse,92) output(22,worse,38) output(22,worse,77) output(22,worse,79) output(22,worse,84) output(22,worse,52) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,84) output(58,worse,79) output(92,worse,77) output(92,worse,38) output(92,worse,84) output(24,worse,52) output(65,worse,92) output(65,worse,77) output(65,worse,79) output(65,worse,38) output(65,worse,84) output(65,worse,52) output(92,eq,79) output(92,eq,52)
Optimization: 26 14
Answer: 14
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,52) output(38,better,84) output(92,better,84) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(10,worse,84) output(10,worse,24) output(10,worse,52) output(22,worse,24) output(38,worse,24) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,24) output(92,eq,77) output(77,eq,79) output(92,eq,38) output(92,eq,79) output(38,eq,52) output(92,eq,52) output(65,eq,24)
Optimization: 24 9
Answer: 15
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,52) output(38,better,84) output(38,better,52) output(77,better,79) output(92,better,84) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(10,worse,84) output(10,worse,24) output(10,worse,52) output(22,worse,24) output(38,worse,24) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,77) output(92,worse,38) output(92,worse,24) output(92,eq,79) output(92,eq,52) output(65,eq,24)
Optimization: 22 10
Answer: 16
preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,52) output(38,better,84) output(38,better,52) output(58,better,84) output(77,better,79) output(92,better,84) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(10,worse,84) output(10,worse,24) output(10,worse,52) output(22,worse,24) output(38,worse,24) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,79) output(84,worse,24) output(84,worse,52) output(92,worse,77) output(92,worse,38) output(92,worse,24) output(92,eq,79) output(92,eq,52) output(65,eq,24)
Optimization: 21 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(22,better,92) output(22,better,79) output(22,better,84) output(22,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(58,better,92) output(58,better,52) output(58,better,84) output(58,better,79) output(77,better,79) output(84,better,52) output(92,better,52) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(10,worse,84) output(10,worse,24) output(10,worse,52) output(22,worse,38) output(22,worse,77) output(58,worse,65) output(58,worse,22) output(58,worse,77) output(58,worse,38) output(58,worse,24) output(84,worse,24) output(92,worse,77) output(92,worse,38) output(92,worse,24) output(92,eq,84) output(92,eq,79) output(22,eq,24)
Optimization: 17 12
Progression : [ 2;17] (Error: 7.5)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,52) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,79) output(77,better,79) output(84,better,24) output(84,better,52) output(24,better,52) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,24) output(100,better,52) output(10,worse,84) output(38,worse,84) output(58,worse,22) output(92,worse,77) output(92,worse,38) output(92,worse,84) output(92,worse,24) output(65,worse,22) output(100,worse,84) output(58,eq,65) output(38,eq,24) output(92,eq,79) output(65,eq,84) output(92,eq,52) output(58,eq,84)
Optimization: 15 13
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,79) output(84,better,24) output(84,better,52) output(92,better,77) output(92,better,38) output(24,better,52) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,24) output(100,better,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,22) output(77,worse,79) output(92,worse,84) output(92,worse,24) output(65,worse,22) output(100,worse,84) output(58,eq,65) output(92,eq,79) output(65,eq,84) output(92,eq,52) output(58,eq,84)
Optimization: 14 12
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,79) output(84,better,24) output(84,better,52) output(92,better,77) output(92,better,38) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,24) output(100,better,52) output(38,worse,84) output(38,worse,24) output(38,worse,52) output(58,worse,65) output(58,worse,22) output(77,worse,79) output(92,worse,84) output(92,worse,24) output(100,worse,84) output(92,eq,79) output(92,eq,52) output(58,eq,84)
Optimization: 12 12
Answer: 21
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(4))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasCost(1))),6) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,38) output(22,better,84) output(22,better,24) output(38,better,84) output(38,better,24) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(77,better,79) output(84,better,24) output(92,better,38) output(92,better,84) output(92,better,24) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(22,worse,77) output(22,worse,52) output(38,worse,52) output(84,worse,52) output(92,worse,77) output(92,worse,52) output(24,worse,52) output(58,eq,65) output(22,eq,92) output(92,eq,79) output(22,eq,79)
Optimization: 11 14
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrep(4))),2) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,38) output(22,better,77) output(22,better,84) output(22,better,24) output(38,better,84) output(38,better,24) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(84,better,24) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,24) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(22,worse,92) output(22,worse,79) output(22,worse,52) output(38,worse,52) output(77,worse,79) output(84,worse,52) output(24,worse,52) output(58,eq,65) output(92,eq,79) output(92,eq,52)
Optimization: 10 14
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasPrep(3))),4) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,24) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(77,better,79) output(84,better,24) output(84,better,52) output(92,better,24) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(38,worse,84) output(38,worse,52) output(92,worse,77) output(92,worse,84) output(92,worse,52) output(24,worse,52) output(58,eq,65) output(92,eq,38) output(92,eq,79)
Optimization: 9 14
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(4))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,24) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(77,better,79) output(84,better,24) output(84,better,52) output(92,better,24) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(38,worse,84) output(38,worse,52) output(92,worse,77) output(92,worse,84) output(92,worse,52) output(24,worse,52) output(92,eq,38) output(92,eq,79)
Optimization: 8 14
Answer: 25
preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,84) output(38,better,24) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(84,better,24) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,24) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(10,worse,52) output(38,worse,52) output(77,worse,79) output(84,worse,52) output(92,worse,52) output(24,worse,52) output(92,eq,79)
Optimization: 7 10
Answer: 26
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(4))),4) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,84) output(38,better,24) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,24) output(92,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(38,worse,52) output(77,worse,79) output(84,worse,24) output(84,worse,52) output(24,worse,52) output(92,eq,79)
Optimization: 6 13
Answer: 27
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(77,better,79) output(84,better,24) output(92,better,84) output(92,better,24) output(92,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(84,worse,52) output(92,worse,77) output(24,worse,52) output(92,eq,38) output(92,eq,79)
Optimization: 5 11
Answer: 28
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,24) output(38,better,52) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(84,better,24) output(84,better,52) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,24) output(92,better,52) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(58,worse,65) output(77,worse,79) output(38,eq,84) output(92,eq,79)
Optimization: 4 12
Answer: 29
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,24) output(38,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(84,better,24) output(84,better,52) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,24) output(92,better,52) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(38,worse,84) output(77,worse,79) output(92,eq,79)
Optimization: 3 13
Progression : [3;3] (Error: 0)
Progression : 3 [ 1;13] (Error: 12)
Answer: 30
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(38,better,24) output(38,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(84,better,24) output(84,better,52) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,24) output(92,better,52) output(24,better,52) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(77,worse,79) output(38,eq,84) output(92,eq,79)
Optimization: 3 12
Progression : 3 [ 2;12] (Error: 5)
Progression : 3 [ 3;12] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.047 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 3 12
Bounds       : 3 [3;12]
Calls        : 1
Time         : 293.169s (Solving: 291.46s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1167.313s
Threads      : 4        (Winner: 4)

Choices      : 9551130  (Domain: 301860)
Conflicts    : 6982227  (Analyzed: 6982222)
Restarts     : 5428     (Average: 1286.33 Last: 569560)
Model-Level  : 120.4   
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 7108602  (Deleted: 6772525)
  Binary     : 361      (Ratio:   0.01%)
  Ternary    : 7163     (Ratio:   0.10%)
  Conflict   : 6982222  (Average Length:  208.4 Ratio:  98.22%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 126380   (Average Length:   58.6 Ratio:   1.78%) 
  Distributed: 42273    (Ratio:   0.61% Average LBD: 3.70) 
  Integrated : 126819   (Ratio: 300.00% Unit: 364 Average Jumps: 7.26)
Backjumps    : 6982222  (Average:  1.33 Max: 336 Sum: 9274773)
  Executed   : 6982220  (Average:  1.33 Max: 336 Sum: 9274753 Ratio: 100.00%)
  Bounded    : 2        (Average: 10.00 Max:  18 Sum:     20 Ratio:   0.00%)

Rules        : 118729  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 10308   
Bodies       : 5760    
  Sum        : 87      
  Count      : 14      
Equivalences : 6791     (Atom=Atom: 511 Body=Body: 227 Other: 6053)
Tight        : Yes
Variables    : 4827     (Eliminated:    0 Frozen: 3357)
Constraints  : 116439   (Binary:  97.3% Ternary:   1.3% Other:   1.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) 
}.
