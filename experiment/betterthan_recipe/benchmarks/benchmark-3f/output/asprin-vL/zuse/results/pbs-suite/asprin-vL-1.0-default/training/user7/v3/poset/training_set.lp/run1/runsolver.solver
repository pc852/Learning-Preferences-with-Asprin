asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1247:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1923:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1148:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(78,eq,52) output(52,eq,39) output(39,eq,32) output(46,eq,33) output(33,eq,7) output(7,eq,60) output(42,eq,78) output(78,eq,51) output(72,eq,31) output(31,eq,23) output(23,eq,79) output(79,eq,7) output(23,eq,7) output(31,eq,79) output(72,eq,23) output(42,eq,51) output(33,eq,60) output(79,eq,60) output(46,eq,7) output(52,eq,32) output(78,eq,39) output(42,eq,52) output(42,eq,39) output(78,eq,32) output(42,eq,32) output(23,eq,60) output(31,eq,60) output(46,eq,60) output(72,eq,79) output(31,eq,7) output(72,eq,7) output(72,eq,60)
Optimization: 32 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,poset) output(23,better,79) output(23,better,60) output(23,better,7) output(31,worse,23) output(72,worse,23) output(78,eq,52) output(52,eq,39) output(39,eq,32) output(46,eq,33) output(33,eq,7) output(7,eq,60) output(42,eq,78) output(78,eq,51) output(72,eq,31) output(79,eq,7) output(31,eq,79) output(42,eq,51) output(33,eq,60) output(79,eq,60) output(46,eq,7) output(52,eq,32) output(78,eq,39) output(42,eq,52) output(42,eq,39) output(78,eq,32) output(42,eq,32) output(31,eq,60) output(46,eq,60) output(72,eq,79) output(31,eq,7) output(72,eq,7) output(72,eq,60)
Optimization: 29 1
Answer: 3
preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,poset) output(39,better,32) output(46,better,33) output(31,better,23) output(79,better,7) output(46,better,7) output(52,better,32) output(31,better,7) output(72,better,23) output(78,worse,52) output(7,worse,60) output(78,worse,51) output(72,worse,31) output(23,worse,79) output(42,worse,51) output(33,worse,60) output(78,worse,39) output(42,worse,52) output(42,worse,39) output(23,worse,60) output(72,worse,79) output(72,worse,60) output(78,worse,32) output(33,worse,7) output(52,worse,39) output(23,worse,7) output(42,worse,32) output(42,eq,78) output(31,eq,79) output(79,eq,60) output(31,eq,60) output(46,eq,60) output(72,eq,7)
Optimization: 24 1
Answer: 4
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(39,better,32) output(52,better,32) output(7,better,60) output(23,better,79) output(42,better,51) output(33,better,60) output(23,better,60) output(42,better,78) output(31,better,79) output(31,better,60) output(42,better,32) output(23,better,7) output(78,worse,52) output(72,worse,31) output(78,worse,39) output(46,worse,33) output(31,worse,23) output(79,worse,7) output(46,worse,7) output(72,worse,23) output(72,worse,7) output(52,eq,39) output(33,eq,7) output(78,eq,51) output(79,eq,60) output(42,eq,52) output(42,eq,39) output(78,eq,32) output(46,eq,60) output(72,eq,79) output(31,eq,7) output(72,eq,60)
Optimization: 20 1
Answer: 5
preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(78,better,52) output(7,better,60) output(78,better,51) output(72,better,31) output(23,better,79) output(33,better,60) output(78,better,39) output(42,better,52) output(42,better,39) output(23,better,60) output(72,better,79) output(72,better,60) output(78,better,32) output(42,worse,51) output(39,worse,32) output(46,worse,33) output(31,worse,23) output(79,worse,7) output(46,worse,7) output(52,worse,32) output(31,worse,7) output(33,worse,7) output(42,worse,78) output(72,worse,23) output(72,worse,7) output(52,eq,39) output(23,eq,7) output(31,eq,79) output(79,eq,60) output(42,eq,32) output(31,eq,60) output(46,eq,60)
Optimization: 19 1
Answer: 6
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrepTime(2))),()) preference(1,poset) output(79,better,7) output(72,better,31) output(23,better,79) output(42,better,51) output(33,better,60) output(42,better,39) output(23,better,60) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,7) output(52,better,39) output(79,better,60) output(23,better,7) output(78,worse,52) output(39,worse,32) output(46,worse,33) output(31,worse,23) output(78,worse,32) output(72,worse,23) output(31,worse,79) output(7,eq,60) output(78,eq,51) output(46,eq,7) output(52,eq,32) output(78,eq,39) output(42,eq,52) output(42,eq,32) output(31,eq,60) output(46,eq,60) output(72,eq,79) output(31,eq,7)
Optimization: 18 1
Answer: 7
preference(1,(1,8),1,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(79,better,7) output(7,better,60) output(78,better,51) output(72,better,31) output(42,better,51) output(33,better,60) output(78,better,39) output(42,better,52) output(42,better,39) output(23,better,60) output(72,better,79) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,23) output(72,better,7) output(52,better,39) output(79,better,60) output(78,worse,52) output(23,worse,79) output(39,worse,32) output(46,worse,33) output(31,worse,23) output(46,worse,7) output(52,worse,32) output(31,worse,7) output(78,worse,32) output(31,worse,79) output(23,eq,7) output(42,eq,32) output(31,eq,60) output(46,eq,60)
Optimization: 14 1
Answer: 8
preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,8),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,8),2,for(atom(hasPrep(6))),()) preference(1,poset) output(31,better,23) output(79,better,7) output(52,better,32) output(31,better,7) output(7,better,60) output(78,better,51) output(72,better,31) output(42,better,51) output(33,better,60) output(42,better,39) output(23,better,60) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,23) output(72,better,7) output(31,better,60) output(52,better,39) output(79,better,60) output(78,worse,52) output(23,worse,79) output(78,worse,39) output(42,worse,52) output(72,worse,79) output(39,worse,32) output(46,worse,33) output(46,worse,7) output(78,worse,32) output(31,worse,79) output(23,eq,7) output(42,eq,32) output(46,eq,60)
Optimization: 13 2
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,7),1,for(atom(hasPrepTime(1))),()) preference(1,(1,8),1,for(atom(hasPrepTime(1))),()) preference(1,(1,9),1,for(atom(hasPrepTime(3))),()) preference(1,(1,10),1,for(atom(hasPrepTime(1))),()) preference(1,(1,11),1,for(atom(hasPrepTime(2))),()) preference(1,(1,12),1,for(atom(hasDifficulty(1))),()) preference(1,(1,13),1,for(atom(hasPrepTime(2))),()) preference(1,(1,14),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,(1,7),2,for(atom(hasPrep(3))),()) preference(1,(1,8),2,for(atom(hasPrepTime(2))),()) preference(1,(1,9),2,for(atom(hasPrep(3))),()) preference(1,(1,10),2,for(atom(hasDifficulty(2))),()) preference(1,(1,11),2,for(atom(hasDifficulty(2))),()) preference(1,(1,12),2,for(atom(hasDifficulty(2))),()) preference(1,(1,13),2,for(atom(hasPrepTime(3))),()) preference(1,(1,14),2,for(atom(hasPrep(5))),()) preference(1,poset) output(46,better,33) output(31,better,23) output(79,better,7) output(46,better,7) output(52,better,32) output(31,better,7) output(42,better,51) output(33,better,60) output(42,better,39) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,23) output(72,better,7) output(31,better,79) output(31,better,60) output(46,better,60) output(52,better,39) output(79,better,60) output(42,better,32) output(23,better,7) output(78,worse,52) output(7,worse,60) output(78,worse,51) output(72,worse,31) output(23,worse,79) output(78,worse,39) output(42,worse,52) output(23,worse,60) output(39,worse,32) output(78,worse,32) output(72,unc,79)
Optimization: 11 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,7),1,for(atom(hasCost(2))),()) preference(1,(1,8),1,for(atom(hasCost(2))),()) preference(1,(1,9),1,for(atom(hasCost(2))),()) preference(1,(1,11),1,for(atom(hasPrep(3))),()) preference(1,(1,13),1,for(atom(hasCost(1))),()) preference(1,(1,14),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,7),2,for(atom(hasPrep(3))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,(1,9),2,for(atom(hasPrepTime(2))),()) preference(1,(1,11),2,for(atom(hasPrepTime(2))),()) preference(1,(1,13),2,for(atom(hasPrepTime(2))),()) preference(1,(1,14),2,for(atom(hasPrep(1))),()) preference(1,poset) output(78,better,52) output(7,better,60) output(78,better,51) output(72,better,31) output(23,better,79) output(42,better,51) output(33,better,60) output(78,better,39) output(42,better,52) output(42,better,39) output(23,better,60) output(72,better,79) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,23) output(31,better,79) output(31,better,60) output(46,better,60) output(52,better,39) output(79,better,60) output(42,better,32) output(39,worse,32) output(46,worse,33) output(31,worse,23) output(79,worse,7) output(46,worse,7) output(52,worse,32) output(31,worse,7) output(78,worse,32) output(23,worse,7) output(72,unc,7)
Optimization: 10 10
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,7),1,for(atom(hasPrepTime(1))),()) preference(1,(1,8),1,for(atom(hasCost(2))),()) preference(1,(1,9),1,for(atom(hasCost(2))),()) preference(1,(1,11),1,for(atom(hasPrep(3))),()) preference(1,(1,13),1,for(atom(hasDifficulty(1))),()) preference(1,(1,14),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,7),2,for(atom(hasPrep(3))),()) preference(1,(1,8),2,for(atom(hasDifficulty(1))),()) preference(1,(1,9),2,for(atom(hasPrepTime(2))),()) preference(1,(1,11),2,for(atom(hasPrepTime(2))),()) preference(1,(1,13),2,for(atom(hasCost(1))),()) preference(1,(1,14),2,for(atom(hasPrep(1))),()) preference(1,poset) output(78,better,52) output(7,better,60) output(78,better,51) output(72,better,31) output(23,better,79) output(42,better,51) output(33,better,60) output(78,better,39) output(42,better,52) output(42,better,39) output(23,better,60) output(72,better,79) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,23) output(72,better,7) output(31,better,79) output(31,better,60) output(46,better,60) output(52,better,39) output(79,better,60) output(42,better,32) output(39,worse,32) output(46,worse,33) output(31,worse,23) output(79,worse,7) output(46,worse,7) output(52,worse,32) output(31,worse,7) output(78,worse,32) output(23,worse,7)
Optimization: 9 10
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(2))),()) preference(1,(1,7),1,for(atom(hasPrepTime(1))),()) preference(1,(1,8),1,for(atom(hasPrep(3))),()) preference(1,(1,9),1,for(atom(hasPrep(3))),()) preference(1,(1,10),1,for(atom(hasPrepTime(1))),()) preference(1,(1,11),1,for(atom(hasPrep(7))),()) preference(1,(1,12),1,for(atom(hasDifficulty(1))),()) preference(1,(1,14),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,7),2,for(atom(hasCost(2))),()) preference(1,(1,8),2,for(atom(hasCost(1))),()) preference(1,(1,9),2,for(atom(hasPrepTime(2))),()) preference(1,(1,10),2,for(atom(hasPrep(5))),()) preference(1,(1,11),2,for(atom(hasPrep(4))),()) preference(1,(1,12),2,for(atom(hasPrep(5))),()) preference(1,(1,14),2,for(atom(hasPrep(3))),()) preference(1,poset) output(46,better,33) output(31,better,23) output(46,better,7) output(31,better,7) output(78,better,52) output(7,better,60) output(78,better,51) output(23,better,79) output(42,better,51) output(33,better,60) output(78,better,39) output(42,better,52) output(42,better,39) output(23,better,60) output(72,better,79) output(72,better,60) output(33,better,7) output(31,better,79) output(31,better,60) output(46,better,60) output(52,better,39) output(79,better,60) output(42,better,32) output(23,better,7) output(72,worse,31) output(39,worse,32) output(79,worse,7) output(52,worse,32) output(72,worse,23) output(42,unc,78) output(78,unc,32) output(72,unc,7)
Optimization: 8 13
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,7),1,for(atom(hasPrep(3))),()) preference(1,(1,8),1,for(atom(hasCost(2))),()) preference(1,(1,9),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasPrepTime(2))),()) preference(1,(1,11),1,for(atom(hasPrep(7))),()) preference(1,(1,12),1,for(atom(hasDifficulty(1))),()) preference(1,(1,14),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,7),2,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrepTime(2))),()) preference(1,(1,9),2,for(atom(hasPrep(0))),()) preference(1,(1,10),2,for(atom(hasPrep(7))),()) preference(1,(1,11),2,for(atom(hasDifficulty(1))),()) preference(1,(1,12),2,for(atom(hasPrep(5))),()) preference(1,(1,14),2,for(atom(hasPrep(3))),()) preference(1,poset) output(46,better,33) output(31,better,23) output(46,better,7) output(31,better,7) output(78,better,52) output(7,better,60) output(78,better,51) output(23,better,79) output(42,better,51) output(33,better,60) output(78,better,39) output(42,better,52) output(42,better,39) output(23,better,60) output(72,better,79) output(72,better,60) output(33,better,7) output(42,better,78) output(72,better,23) output(72,better,7) output(31,better,79) output(31,better,60) output(46,better,60) output(52,better,39) output(79,better,60) output(42,better,32) output(23,better,7) output(72,worse,31) output(39,worse,32) output(79,worse,7) output(52,worse,32) output(78,worse,32)
Optimization: 5 13
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.029 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 5 13
Calls        : 1
Time         : 297.930s (Solving: 292.93s 1st Model: 0.81s Unsat: 0.00s)
CPU Time     : 1173.815s
Threads      : 4        (Winner: 4)

Choices      : 2740781  (Domain: 3644)
Conflicts    : 138513   (Analyzed: 138513)
Restarts     : 186      (Average: 744.69 Last: 8412)
Model-Level  : 3379.8  
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 5206157  (Deleted: 5078836)
  Binary     : 2050     (Ratio:   0.04%)
  Ternary    : 40589    (Ratio:   0.78%)
  Conflict   : 138513   (Average Length:  884.0 Ratio:   2.66%) 
  Loop       : 5009752  (Average Length:  260.9 Ratio:  96.23%) 
  Other      : 57892    (Average Length:    3.8 Ratio:   1.11%) 
  Distributed: 19321    (Ratio:   0.38% Average LBD: 2.81) 
  Integrated : 57963    (Ratio: 300.00% Unit: 139 Average Jumps: 951.04)
Backjumps    : 138513   (Average: 16.70 Max: 70739 Sum: 2313367)
  Executed   : 138485   (Average: 16.70 Max: 70739 Sum: 2313280 Ratio: 100.00%)
  Bounded    : 28       (Average:  3.11 Max:  34 Sum:     87 Ratio:   0.00%)

Rules        : 969027  
  Choice     : 43      
  Minimize   : 2       
Atoms        : 22038   
Bodies       : 722395  
  Count      : 56      
Equivalences : 25112    (Atom=Atom: 4345 Body=Body: 6065 Other: 14702)
Tight        : No       (SCCs: 33 Non-Hcfs: 0 Nodes: 673260 Gammas: 0)
Variables    : 682155   (Eliminated:    0 Frozen: 675657)
Constraints  : 4081569  (Binary:  82.8% Ternary:   2.5% Other:  14.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(1)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasDifficulty(2)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(2)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(6)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(3)) >> atom(hasCost(1)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(3)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(3)) ; 
  atom(hasPrepTime(1)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(1)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(4)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(1)) ; 
  atom(hasCost(2)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) ; 
  atom(hasCost(2)) >> atom(hasPrep(3)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(1)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasCost(1)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(3)) >> atom(hasPrep(4)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(3)) ; 
  atom(hasCost(2)) >> atom(hasDifficulty(1)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasDifficulty(1)) >> atom(hasCost(1)) ; 
  atom(hasCost(2)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(2)) >> atom(hasPrep(4)) ; 
  atom(hasCost(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(3)) >> atom(hasCost(1)) ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(1)) >> atom(hasPrep(4)) ; 
  atom(hasCost(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(2)) ; 
  atom(hasPrep(3)) >> atom(hasCost(1)) ; 
  atom(hasCost(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(3)) 
}.
