asprin_vL version 1.0
Reading from stdin
-:1233:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1243:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1258:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1339:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1600:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1613:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1790:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1919:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1991:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1995:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2100:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2126:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2246:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2280:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1150:1-16: info: no atoms over signature occur in program:
  output/3

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(46,eq,60) output(78,eq,52) output(52,eq,33) output(33,eq,32) output(7,eq,39) output(39,eq,79) output(18,eq,7) output(42,eq,90) output(90,eq,51) output(51,eq,78) output(78,eq,31) output(31,eq,79) output(72,eq,23) output(78,eq,79) output(51,eq,31) output(90,eq,78) output(42,eq,51) output(7,eq,79) output(18,eq,39) output(52,eq,32) output(78,eq,33) output(51,eq,52) output(90,eq,52) output(42,eq,52) output(51,eq,33) output(90,eq,33) output(78,eq,32) output(51,eq,32) output(18,eq,79) output(42,eq,78) output(90,eq,31) output(42,eq,31) output(51,eq,79) output(90,eq,79) output(42,eq,79) output(90,eq,32) output(42,eq,32) output(42,eq,33)
Optimization: 38 0
Answer: 2
preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(42,worse,90) output(42,worse,51) output(46,eq,60) output(78,eq,52) output(52,eq,33) output(33,eq,32) output(7,eq,39) output(39,eq,79) output(18,eq,7) output(90,eq,51) output(78,eq,31) output(31,eq,79) output(72,eq,23) output(78,eq,79) output(7,eq,79) output(18,eq,39) output(52,eq,32) output(78,eq,33) output(42,eq,52) output(78,eq,32) output(18,eq,79) output(42,eq,78) output(42,eq,31) output(42,eq,79) output(42,eq,32) output(42,eq,33)
Optimization: 26 2
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(51,better,78) output(51,better,31) output(51,better,32) output(52,better,32) output(90,better,78) output(90,better,31) output(90,better,32) output(18,better,7) output(18,better,39) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,78) output(42,better,31) output(42,better,32) output(72,better,23) output(31,worse,79) output(39,worse,79) output(51,worse,52) output(51,worse,33) output(51,worse,79) output(90,worse,52) output(90,worse,33) output(90,worse,79) output(7,worse,79) output(18,worse,79) output(78,worse,52) output(78,worse,79) output(78,worse,33) output(78,worse,32) output(46,eq,60) output(52,eq,33) output(7,eq,39) output(90,eq,51) output(78,eq,31) output(42,eq,52) output(42,eq,79) output(42,eq,33)
Optimization: 22 13
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(51,better,78) output(51,better,31) output(51,better,32) output(52,better,32) output(90,better,78) output(90,better,31) output(90,better,32) output(18,better,7) output(18,better,39) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,78) output(42,better,31) output(42,better,32) output(72,better,23) output(78,better,31) output(31,worse,79) output(39,worse,79) output(46,worse,60) output(51,worse,52) output(51,worse,33) output(51,worse,79) output(90,worse,52) output(90,worse,33) output(90,worse,79) output(7,worse,79) output(18,worse,79) output(78,worse,52) output(78,worse,79) output(78,worse,33) output(78,worse,32) output(52,eq,33) output(7,eq,39) output(90,eq,51) output(42,eq,52) output(42,eq,79) output(42,eq,33)
Optimization: 21 13
Answer: 5
preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,33) output(90,better,79) output(90,better,32) output(7,better,79) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,79) output(42,better,32) output(42,better,33) output(78,better,79) output(78,better,33) output(78,better,32) output(51,worse,31) output(51,worse,52) output(90,worse,51) output(90,worse,78) output(90,worse,52) output(90,worse,31) output(7,worse,39) output(18,worse,39) output(42,worse,52) output(42,worse,31) output(72,worse,23) output(78,worse,52) output(78,worse,31) output(18,eq,7) output(51,eq,78) output(42,eq,51) output(42,eq,78)
Optimization: 17 9
Answer: 6
preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(33,better,32) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(39,worse,79) output(7,worse,79) output(18,worse,79) output(78,worse,52) output(78,worse,31) output(78,worse,79) output(78,worse,33) output(78,worse,32) output(52,eq,33) output(7,eq,39) output(18,eq,7) output(42,eq,90) output(31,eq,79) output(18,eq,39)
Optimization: 14 6
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(46,better,60) output(51,better,31) output(51,better,52) output(90,better,51) output(90,better,52) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(31,worse,79) output(39,worse,79) output(51,worse,78) output(51,worse,33) output(51,worse,79) output(52,worse,33) output(52,worse,32) output(90,worse,78) output(90,worse,33) output(7,worse,79) output(42,worse,78) output(72,worse,23) output(51,eq,32)
Optimization: 13 12
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),4) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(90,better,52) output(90,better,79) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(42,better,90) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(52,worse,33) output(52,worse,32) output(90,worse,51) output(90,worse,78) output(90,worse,33) output(90,worse,31) output(90,worse,32) output(42,worse,51) output(78,worse,33) output(78,worse,32) output(33,eq,32) output(7,eq,39)
Optimization: 12 12
Answer: 9
preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),6) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,51) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,31) output(31,worse,79) output(39,worse,79) output(51,worse,52) output(7,worse,79) output(42,worse,90) output(78,worse,52) output(78,worse,33) output(78,eq,79) output(42,eq,52) output(51,eq,33) output(78,eq,32)
Optimization: 11 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(1))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(31,better,79) output(51,better,78) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(39,worse,79) output(7,worse,79) output(78,worse,52) output(78,worse,31) output(78,worse,79) output(78,worse,33) output(46,eq,60) output(42,eq,90) output(51,eq,31) output(78,eq,32)
Optimization: 10 11
Answer: 11
preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasCost(2))),2) preference(1,less(weight)) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,31) output(31,worse,79) output(39,worse,79) output(46,worse,60) output(7,worse,79) output(78,worse,52) output(78,worse,79) output(78,worse,33) output(42,eq,90) output(78,eq,32)
Optimization: 9 11
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,39) output(18,better,79) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(52,worse,32) output(33,worse,32) output(42,worse,90) output(72,worse,23) output(46,eq,60) output(52,eq,33) output(18,eq,7) output(42,eq,51)
Optimization: 8 7
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(42,better,90) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,79) output(78,better,33) output(78,better,32) output(52,worse,32) output(90,worse,51) output(90,worse,31) output(33,worse,32) output(42,worse,51) output(78,worse,31) output(52,eq,33)
Optimization: 7 11
Answer: 14
preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(39,worse,79) output(7,worse,79) output(42,worse,90) output(42,worse,51) output(78,worse,52) output(31,eq,79) output(42,eq,52)
Optimization: 7 10
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(31,better,79) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(39,worse,79) output(90,worse,51) output(90,worse,78) output(72,worse,23) output(46,eq,60) output(90,eq,52)
Optimization: 6 11
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(31,better,79) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(39,worse,79) output(90,worse,51) output(90,worse,78) output(46,eq,60) output(90,eq,52)
Optimization: 5 12
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(31,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(39,worse,79) output(52,worse,33) output(52,worse,32) output(90,eq,51)
Optimization: 4 9
Answer: 18
preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(52,worse,32) output(7,worse,39) output(33,worse,32)
Optimization: 3 10
Answer: 19
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(31,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(39,worse,79) output(42,worse,90)
Optimization: 2 12
Answer: 20
preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,8),1,for(atom(hasCost(1))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(33,eq,32)
Optimization: 1 10
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Progression : 0 [ 2;12] (Error: 5)
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(7))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(31,better,79) output(39,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(52,better,33) output(52,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32) output(7,better,39) output(7,better,79) output(18,better,7) output(18,better,39) output(18,better,79) output(33,better,32) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(72,better,23) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32)
Optimization: 0 11
Progression : 0 [ 3;11] (Error: 2.66667)
Progression : 0 [ 4;11] (Error: 1.75)
Progression : 0 [ 5;11] (Error: 1.2)
Progression : 0 [ 6;11] (Error: 0.833333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.049 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 298.009s (Solving: 296.32s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.725s
Threads      : 4        (Winner: 4)

Choices      : 8085277  (Domain: 622647)
Conflicts    : 7638909  (Analyzed: 7638903)
Restarts     : 6655     (Average: 1147.84 Last: 503409)
Model-Level  : 40.3    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7693185  (Deleted: 7438369)
  Binary     : 96       (Ratio:   0.00%)
  Ternary    : 5243     (Ratio:   0.07%)
  Conflict   : 7638903  (Average Length:  254.5 Ratio:  99.29%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 54282    (Average Length:   38.4 Ratio:   0.71%) 
  Distributed: 18212    (Ratio:   0.24% Average LBD: 3.60) 
  Integrated : 54636    (Ratio: 300.00% Unit: 963 Average Jumps: 6.62)
Backjumps    : 7638903  (Average:  1.05 Max: 176 Sum: 7991345)
  Executed   : 7638889  (Average:  1.05 Max: 176 Sum: 7991305 Ratio: 100.00%)
  Bounded    : 14       (Average:  2.86 Max:  26 Sum:     40 Ratio:   0.00%)

Rules        : 104070  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9344    
Bodies       : 5659    
  Sum        : 76      
  Count      : 14      
Equivalences : 3748     (Atom=Atom: 393 Body=Body: 166 Other: 3189)
Tight        : Yes
Variables    : 4817     (Eliminated:    0 Frozen: 3347)
Constraints  : 102728   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) 
}.
