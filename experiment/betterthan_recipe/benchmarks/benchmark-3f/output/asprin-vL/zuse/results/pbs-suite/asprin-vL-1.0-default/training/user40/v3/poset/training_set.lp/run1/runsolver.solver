asprin_vL version 1.0
Reading from stdin
-:1242:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1252:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1267:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1348:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1622:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1799:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1928:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2000:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2004:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2004:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2010:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2109:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2135:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2255:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2289:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2311:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1159:1-16: info: no atoms over signature occur in program:
  output/3

-:1151:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1152:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1153:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(100,eq,21) output(21,eq,60) output(60,eq,32) output(32,eq,73) output(73,eq,57) output(56,eq,89) output(51,eq,100) output(82,eq,73) output(73,eq,78) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(88,eq,72) output(20,eq,50) output(32,eq,78) output(82,eq,78) output(32,eq,57) output(82,eq,57) output(60,eq,73) output(21,eq,32) output(100,eq,60) output(51,eq,21) output(51,eq,60) output(100,eq,32) output(51,eq,32) output(21,eq,73) output(100,eq,73) output(60,eq,57) output(21,eq,57) output(60,eq,78) output(21,eq,78) output(20,eq,72) output(100,eq,78) output(51,eq,78) output(100,eq,57) output(51,eq,57) output(51,eq,73)
Optimization: 37 0
Answer: 2
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(82,better,78) output(21,better,32) output(21,better,78) output(100,better,60) output(73,better,78) output(100,better,78) output(21,better,60) output(100,better,32) output(56,better,89) output(32,worse,57) output(51,worse,100) output(60,worse,73) output(51,worse,73) output(51,worse,21) output(51,worse,57) output(32,worse,73) output(60,worse,57) output(100,eq,21) output(60,eq,32) output(73,eq,57) output(82,eq,73) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(88,eq,72) output(20,eq,50) output(32,eq,78) output(82,eq,57) output(51,eq,60) output(51,eq,32) output(21,eq,73) output(100,eq,73) output(21,eq,57) output(60,eq,78) output(20,eq,72) output(51,eq,78) output(100,eq,57)
Optimization: 28 1
Answer: 3
preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,8),2,for(atom(hasCost(1))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(82,better,73) output(50,better,72) output(82,better,78) output(60,better,73) output(21,better,32) output(51,better,32) output(21,better,73) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(100,worse,21) output(73,worse,57) output(88,worse,50) output(20,worse,50) output(32,worse,57) output(100,worse,60) output(100,worse,57) output(21,eq,60) output(32,eq,73) output(56,eq,89) output(73,eq,78) output(20,eq,88) output(88,eq,72) output(32,eq,78) output(82,eq,57) output(51,eq,21) output(51,eq,60) output(100,eq,32) output(100,eq,73) output(60,eq,57) output(21,eq,57) output(20,eq,72) output(100,eq,78) output(51,eq,57)
Optimization: 24 1
Answer: 4
preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(82,better,73) output(50,better,72) output(82,better,78) output(60,better,73) output(21,better,32) output(51,better,32) output(21,better,73) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(32,better,78) output(32,better,73) output(100,worse,21) output(73,worse,57) output(88,worse,50) output(20,worse,50) output(32,worse,57) output(100,worse,60) output(100,worse,57) output(20,worse,88) output(20,worse,72) output(100,worse,32) output(21,eq,60) output(56,eq,89) output(73,eq,78) output(88,eq,72) output(82,eq,57) output(51,eq,21) output(51,eq,60) output(100,eq,73) output(60,eq,57) output(21,eq,57) output(100,eq,78) output(51,eq,57)
Optimization: 22 1
Answer: 5
preference(1,(1,8),1,for(atom(hasPrepTime(3))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(60,better,73) output(51,better,32) output(51,better,73) output(100,better,21) output(73,better,57) output(88,better,50) output(20,better,50) output(32,better,57) output(100,better,57) output(51,better,21) output(51,better,57) output(20,better,88) output(60,better,57) output(20,better,72) output(100,worse,60) output(82,worse,73) output(50,worse,72) output(82,worse,78) output(21,worse,32) output(21,worse,73) output(60,worse,78) output(21,worse,78) output(51,worse,78) output(73,worse,78) output(32,worse,78) output(100,worse,78) output(21,worse,60) output(32,eq,73) output(56,eq,89) output(88,eq,72) output(82,eq,57) output(51,eq,60) output(100,eq,32) output(100,eq,73) output(21,eq,57)
Optimization: 21 1
Answer: 6
preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,8),2,for(atom(hasPrep(2))),()) preference(1,poset) output(60,better,32) output(82,better,73) output(50,better,72) output(82,better,78) output(60,better,73) output(51,better,32) output(60,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(100,better,78) output(51,better,21) output(100,better,73) output(20,better,88) output(60,better,57) output(20,better,72) output(100,better,32) output(73,worse,57) output(88,worse,50) output(32,worse,57) output(100,worse,60) output(51,worse,60) output(21,worse,57) output(21,worse,60) output(32,eq,73) output(56,eq,89) output(73,eq,78) output(88,eq,72) output(32,eq,78) output(82,eq,57) output(21,eq,32) output(21,eq,73) output(21,eq,78) output(100,eq,57) output(51,unc,100) output(20,unc,50) output(51,unc,57)
Optimization: 20 2
Answer: 7
preference(1,(1,8),1,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(82,better,73) output(50,better,72) output(82,better,78) output(60,better,73) output(21,better,32) output(51,better,32) output(21,better,73) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(73,better,78) output(100,better,78) output(21,better,60) output(100,better,32) output(56,better,89) output(100,worse,21) output(73,worse,57) output(88,worse,50) output(20,worse,50) output(32,worse,57) output(100,worse,60) output(100,worse,57) output(51,worse,21) output(51,worse,57) output(32,worse,73) output(60,worse,57) output(20,eq,88) output(88,eq,72) output(32,eq,78) output(82,eq,57) output(51,eq,60) output(100,eq,73) output(21,eq,57) output(20,eq,72)
Optimization: 19 1
Answer: 8
preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(82,better,73) output(50,better,72) output(60,better,73) output(21,better,32) output(51,better,32) output(60,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(51,better,21) output(51,better,57) output(100,better,73) output(20,better,88) output(60,better,57) output(20,better,72) output(100,better,32) output(56,better,89) output(73,worse,57) output(88,worse,50) output(32,worse,57) output(100,worse,60) output(21,worse,78) output(51,worse,60) output(73,worse,78) output(32,worse,78) output(32,worse,73) output(21,worse,57) output(21,worse,60) output(88,eq,72) output(82,eq,57) output(21,eq,73) output(100,eq,57) output(20,unc,50) output(82,unc,78) output(100,unc,78)
Optimization: 18 2
Answer: 9
preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,8),1,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,8),2,for(atom(hasCost(1))),()) preference(1,poset) output(60,better,32) output(82,better,73) output(50,better,72) output(82,better,78) output(60,better,73) output(21,better,32) output(51,better,32) output(21,better,73) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(100,better,60) output(100,better,57) output(100,better,78) output(100,better,73) output(20,better,88) output(20,better,72) output(100,better,32) output(73,worse,57) output(88,worse,50) output(32,worse,57) output(51,worse,100) output(51,worse,60) output(51,worse,57) output(21,worse,57) output(21,worse,60) output(32,eq,73) output(56,eq,89) output(73,eq,78) output(88,eq,72) output(32,eq,78) output(82,eq,57) output(51,eq,21) output(60,eq,57) output(20,unc,50)
Optimization: 17 2
Answer: 10
preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(82,better,73) output(50,better,72) output(82,better,78) output(60,better,73) output(51,better,32) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(73,better,78) output(32,better,78) output(100,better,78) output(51,better,21) output(51,better,57) output(32,better,73) output(100,better,73) output(60,better,57) output(100,better,32) output(56,better,89) output(73,worse,57) output(88,worse,50) output(20,worse,50) output(32,worse,57) output(100,worse,60) output(21,worse,32) output(88,worse,72) output(21,worse,57) output(20,worse,72) output(21,worse,60) output(20,eq,88) output(82,eq,57) output(51,eq,60) output(21,eq,73) output(100,eq,57)
Optimization: 15 2
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,7),1,for(atom(hasPrep(3))),()) preference(1,(1,8),1,for(atom(hasPrep(1))),()) preference(1,(1,9),1,for(atom(hasPrep(2))),()) preference(1,(1,10),1,for(atom(hasPrep(2))),()) preference(1,(1,11),1,for(atom(hasPrepTime(3))),()) preference(1,(1,12),1,for(atom(hasPrepTime(2))),()) preference(1,(1,13),1,for(atom(hasPrep(7))),()) preference(1,(1,14),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasPrepTime(3))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,7),2,for(atom(hasPrep(5))),()) preference(1,(1,8),2,for(atom(hasPrep(4))),()) preference(1,(1,9),2,for(atom(hasPrepTime(3))),()) preference(1,(1,10),2,for(atom(hasPrep(1))),()) preference(1,(1,11),2,for(atom(hasPrep(0))),()) preference(1,(1,12),2,for(atom(hasPrepTime(3))),()) preference(1,(1,13),2,for(atom(hasPrep(6))),()) preference(1,(1,14),2,for(atom(hasPrep(3))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(50,better,72) output(82,better,78) output(60,better,73) output(21,better,32) output(51,better,32) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(73,better,57) output(100,better,57) output(73,better,78) output(100,better,78) output(51,better,21) output(51,better,57) output(88,better,72) output(21,better,57) output(100,better,73) output(60,better,57) output(100,better,32) output(56,better,89) output(88,worse,50) output(20,worse,50) output(32,worse,57) output(100,worse,60) output(82,worse,73) output(21,worse,73) output(51,worse,60) output(32,worse,73) output(20,worse,88) output(20,worse,72) output(21,worse,60) output(82,worse,57) output(32,unc,78)
Optimization: 13 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,7),1,for(atom(hasPrep(4))),()) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,9),1,for(atom(hasPrep(7))),()) preference(1,(1,10),1,for(atom(hasPrepTime(2))),()) preference(1,(1,11),1,for(atom(hasPrepTime(3))),()) preference(1,(1,12),1,for(atom(hasPrep(4))),()) preference(1,(1,13),1,for(atom(hasPrepTime(3))),()) preference(1,(1,14),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,7),2,for(atom(hasCost(1))),()) preference(1,(1,8),2,for(atom(hasDifficulty(2))),()) preference(1,(1,9),2,for(atom(hasPrep(1))),()) preference(1,(1,10),2,for(atom(hasPrepTime(1))),()) preference(1,(1,11),2,for(atom(hasPrepTime(1))),()) preference(1,(1,12),2,for(atom(hasPrepTime(3))),()) preference(1,(1,13),2,for(atom(hasPrepTime(2))),()) preference(1,(1,14),2,for(atom(hasPrep(6))),()) preference(1,poset) output(60,better,32) output(82,better,73) output(60,better,73) output(51,better,32) output(21,better,73) output(60,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(88,better,50) output(20,better,50) output(32,better,57) output(100,better,60) output(100,better,57) output(100,better,78) output(51,better,21) output(51,better,60) output(51,better,57) output(32,better,73) output(100,better,73) output(20,better,88) output(60,better,57) output(20,better,72) output(100,better,32) output(56,better,89) output(73,worse,57) output(51,worse,100) output(50,worse,72) output(82,worse,78) output(21,worse,32) output(21,worse,78) output(73,worse,78) output(32,worse,78) output(88,worse,72) output(21,worse,57) output(21,worse,60) output(82,worse,57)
Optimization: 12 14
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(2))),()) preference(1,(1,7),1,for(atom(hasPrepTime(2))),()) preference(1,(1,8),1,for(atom(hasPrep(4))),()) preference(1,(1,9),1,for(atom(hasPrepTime(1))),()) preference(1,(1,10),1,for(atom(hasPrep(5))),()) preference(1,(1,11),1,for(atom(hasPrepTime(1))),()) preference(1,(1,12),1,for(atom(hasPrep(5))),()) preference(1,(1,13),1,for(atom(hasPrep(1))),()) preference(1,(1,14),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,(1,7),2,for(atom(hasPrep(1))),()) preference(1,(1,8),2,for(atom(hasPrepTime(1))),()) preference(1,(1,9),2,for(atom(hasDifficulty(2))),()) preference(1,(1,10),2,for(atom(hasPrepTime(2))),()) preference(1,(1,11),2,for(atom(hasPrepTime(3))),()) preference(1,(1,12),2,for(atom(hasCost(1))),()) preference(1,(1,13),2,for(atom(hasPrep(6))),()) preference(1,(1,14),2,for(atom(hasPrep(3))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(50,better,72) output(60,better,73) output(21,better,32) output(51,better,32) output(21,better,73) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(73,better,57) output(32,better,57) output(100,better,57) output(73,better,78) output(100,better,78) output(51,better,21) output(51,better,60) output(51,better,57) output(88,better,72) output(21,better,57) output(100,better,73) output(60,better,57) output(100,better,32) output(56,better,89) output(88,worse,50) output(20,worse,50) output(100,worse,60) output(82,worse,73) output(82,worse,78) output(32,worse,78) output(32,worse,73) output(20,worse,88) output(21,worse,60) output(82,worse,57) output(20,unc,72)
Optimization: 11 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,7),1,for(atom(hasPrep(1))),()) preference(1,(1,8),1,for(atom(hasDifficulty(2))),()) preference(1,(1,9),1,for(atom(hasPrepTime(1))),()) preference(1,(1,10),1,for(atom(hasPrep(6))),()) preference(1,(1,11),1,for(atom(hasPrep(2))),()) preference(1,(1,12),1,for(atom(hasPrep(5))),()) preference(1,(1,13),1,for(atom(hasPrep(3))),()) preference(1,(1,14),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,7),2,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,(1,9),2,for(atom(hasDifficulty(2))),()) preference(1,(1,10),2,for(atom(hasPrep(0))),()) preference(1,(1,11),2,for(atom(hasPrep(1))),()) preference(1,(1,12),2,for(atom(hasPrep(6))),()) preference(1,(1,13),2,for(atom(hasDifficulty(2))),()) preference(1,(1,14),2,for(atom(hasPrep(3))),()) preference(1,poset) output(60,better,32) output(51,better,100) output(50,better,72) output(82,better,78) output(60,better,73) output(21,better,32) output(51,better,32) output(21,better,73) output(60,better,78) output(21,better,78) output(51,better,78) output(51,better,73) output(100,better,21) output(73,better,57) output(100,better,57) output(73,better,78) output(32,better,78) output(100,better,78) output(51,better,21) output(51,better,60) output(51,better,57) output(88,better,72) output(21,better,57) output(100,better,73) output(60,better,57) output(100,better,32) output(56,better,89) output(88,worse,50) output(20,worse,50) output(32,worse,57) output(100,worse,60) output(82,worse,73) output(32,worse,73) output(20,worse,88) output(20,worse,72) output(21,worse,60) output(82,worse,57)
Optimization: 10 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.068 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 10 14
Calls        : 1
Time         : 297.269s (Solving: 292.33s 1st Model: 0.78s Unsat: 0.00s)
CPU Time     : 1173.434s
Threads      : 4        (Winner: 4)

Choices      : 2351149  (Domain: 4601)
Conflicts    : 122553   (Analyzed: 122553)
Restarts     : 132      (Average: 928.43 Last: 10158)
Model-Level  : 597.7   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 6918464  (Deleted: 6786130)
  Binary     : 3408     (Ratio:   0.05%)
  Ternary    : 41078    (Ratio:   0.59%)
  Conflict   : 122553   (Average Length: 1307.0 Ratio:   1.77%) 
  Loop       : 6743305  (Average Length:  239.6 Ratio:  97.47%) 
  Other      : 52606    (Average Length:    3.5 Ratio:   0.76%) 
  Distributed: 17575    (Ratio:   0.26% Average LBD: 2.76) 
  Integrated : 52700    (Ratio: 299.86% Unit: 327 Average Jumps: 763.57)
Backjumps    : 122553   (Average: 15.28 Max: 41550 Sum: 1872157)
  Executed   : 122508   (Average: 15.28 Max: 41550 Sum: 1872071 Ratio: 100.00%)
  Bounded    : 45       (Average:  1.91 Max:   2 Sum:     86 Ratio:   0.00%)

Rules        : 1014862 
  Choice     : 43      
  Minimize   : 2       
Atoms        : 23781   
Bodies       : 736755  
  Count      : 56      
Equivalences : 25701    (Atom=Atom: 4485 Body=Body: 6130 Other: 15086)
Tight        : No       (SCCs: 38 Non-Hcfs: 0 Nodes: 687960 Gammas: 0)
Variables    : 697514   (Eliminated:    0 Frozen: 690488)
Constraints  : 4169535  (Binary:  82.8% Ternary:   2.8% Other:  14.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(1)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrepTime(3)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasCost(1)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(2)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(2)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(7)) ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(7)) >> atom(hasCost(2)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(5)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(0)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(5)) >> atom(hasPrep(7)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(5)) ; 
  atom(hasCost(1)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(5)) >> atom(hasCost(1)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) ; 
  atom(hasPrep(6)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(1)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(7)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(2)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(5)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(1)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrep(5)) >> atom(hasCost(1)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(6)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrep(2)) >> atom(hasPrep(4)) ; 
  atom(hasPrep(0)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrepTime(1)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrepTime(3)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(5)) ; 
  atom(hasPrepTime(1)) >> atom(hasPrepTime(2)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(6)) ; 
  atom(hasDifficulty(2)) >> atom(hasPrep(5)) ; 
  atom(hasPrepTime(1)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(0)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(1)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(6)) ; 
  atom(hasPrep(3)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(3)) 
}.
