asprin_vL version 1.0
Reading from stdin
-:1233:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1258:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1339:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1613:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1790:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1991:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1995:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2100:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2126:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2246:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2280:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1150:1-16: info: no atoms over signature occur in program:
  output/3

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1144:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1145:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1175:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(65,better,10) output(84,better,79) output(51,better,64) output(75,better,52) output(75,better,84) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(22,eq,84) output(92,eq,77) output(92,eq,38) output(52,eq,84) output(100,eq,92) output(100,eq,77) output(100,eq,38)
Optimization: 15 6
Progression : [ 1;15] (Error: 14)
Answer: 2
preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,5),2,for(atom(hasPrepTime(1))),()) preference(1,aso) output(10,better,16) output(84,better,79) output(58,better,92) output(51,better,64) output(75,better,52) output(75,better,84) output(58,better,38) output(58,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(65,eq,10) output(22,eq,84) output(92,eq,77) output(92,eq,38) output(52,eq,84) output(100,eq,92) output(100,eq,77) output(100,eq,38)
Optimization: 12 6
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(65,better,10) output(10,better,16) output(84,better,79) output(58,better,92) output(51,better,64) output(75,better,52) output(75,better,84) output(58,better,38) output(100,better,92) output(58,better,77) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38) output(22,worse,84) output(92,eq,77) output(92,eq,38) output(52,eq,84)
Optimization: 9 6
Answer: 4
preference(1,(1,1),0,for(atom(hasCost(1))),()) preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(atom(hasCost(1))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(1))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(65,better,10) output(84,better,79) output(58,better,92) output(24,better,92) output(51,better,64) output(75,better,52) output(75,better,84) output(58,better,38) output(24,better,38) output(100,better,92) output(58,better,77) output(24,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38) output(92,worse,77) output(92,worse,38) output(10,eq,16) output(22,eq,84) output(100,eq,24) output(52,eq,84)
Optimization: 6 6
Answer: 5
preference(1,(1,2),0,for(atom(hasCost(1))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,aso) output(10,better,16) output(58,better,92) output(92,better,77) output(24,better,92) output(92,better,38) output(51,better,64) output(75,better,52) output(75,better,84) output(58,better,38) output(24,better,38) output(100,better,92) output(58,better,77) output(24,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38) output(100,worse,24) output(65,eq,10)
Optimization: 5 6
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasPrep(3))),()) preference(1,aso) output(65,better,10) output(10,better,16) output(22,better,84) output(58,better,92) output(92,better,77) output(100,better,24) output(24,better,92) output(51,better,64) output(75,better,52) output(52,better,84) output(75,better,84) output(58,better,38) output(24,better,38) output(100,better,92) output(58,better,77) output(24,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38) output(84,eq,79)
Optimization: 2 6
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(1))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasPrep(5))),()) preference(1,aso) output(65,better,10) output(10,better,16) output(22,better,84) output(58,better,92) output(92,better,77) output(100,better,24) output(24,better,92) output(92,better,38) output(51,better,64) output(75,better,52) output(52,better,84) output(75,better,84) output(58,better,38) output(24,better,38) output(100,better,92) output(58,better,77) output(24,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,aso) output(65,better,10) output(10,better,16) output(22,better,84) output(58,better,92) output(92,better,77) output(100,better,24) output(24,better,92) output(92,better,38) output(51,better,64) output(75,better,52) output(52,better,84) output(75,better,84) output(58,better,38) output(24,better,38) output(100,better,92) output(58,better,77) output(24,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38)
Optimization: 1 5
Progression : 1 [2;5] (Error: 1.5)
Answer: 9
preference(1,(1,3),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,aso) output(65,better,10) output(10,better,16) output(22,better,84) output(58,better,92) output(92,better,77) output(100,better,24) output(24,better,92) output(92,better,38) output(51,better,64) output(75,better,52) output(52,better,84) output(75,better,84) output(58,better,38) output(24,better,38) output(100,better,92) output(58,better,77) output(24,better,77) output(22,better,79) output(52,better,79) output(65,better,16) output(75,better,79) output(100,better,77) output(100,better,38)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 9
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 2.055s (Solving: 0.58s 1st Model: 0.02s Unsat: 0.13s)
CPU Time     : 2.370s
Threads      : 4        (Winner: 1)

Choices      : 15754    (Domain: 570)
Conflicts    : 3481     (Analyzed: 3475)
Restarts     : 14       (Average: 248.21 Last: 356)
Model-Level  : 295.2   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 5101     (Deleted: 0)
  Binary     : 202      (Ratio:   3.96%)
  Ternary    : 170      (Ratio:   3.33%)
  Conflict   : 3475     (Average Length:   32.3 Ratio:  68.12%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 1626     (Average Length:   20.5 Ratio:  31.88%) 
  Distributed: 551      (Ratio:  15.86% Average LBD: 2.97) 
  Integrated : 1653     (Ratio: 300.00% Unit: 40 Average Jumps: 38.23)
Backjumps    : 3475     (Average:  3.72 Max: 388 Sum:  12934)
  Executed   : 3465     (Average:  3.68 Max: 388 Sum:  12800 Ratio:  98.96%)
  Bounded    : 10       (Average: 13.40 Max:  23 Sum:    134 Ratio:   1.04%)

Rules        : 335387  
  Choice     : 19      
  Minimize   : 2       
Atoms        : 79290   
Bodies       : 86419   
  Count      : 450     
Equivalences : 217466   (Atom=Atom: 66050 Body=Body: 71483 Other: 79933)
Tight        : Yes
Variables    : 13781    (Eliminated:    0 Frozen: 5663)
Constraints  : 280269   (Binary:  95.3% Ternary:   3.9% Other:   0.8%)


Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) ; 
  not atom(hasPrep(5))  >> atom(hasPrep(1)) ; 
  not atom(hasPrep(7))  >> atom(hasCost(1)) ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) ; 
  not atom(hasPrep(5))  >> atom(hasPrep(1)) ; 
  not atom(hasPrep(7))  >> atom(hasPrepTime(1)) ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) ; 
  not atom(hasPrep(5))  >> atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) ; 
  not atom(hasPrep(5))  >> not atom(hasPrep(3))  ; 
  not atom(hasPrep(0))  >> atom(hasCost(1)) ; 
  atom(hasPrep(7)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrepTime(2)) || atom(hasCost(1)) ; 
  not atom(hasCost(1))  >> atom(hasPrep(0)) || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> not atom(hasPrep(5))  || atom(hasCost(1)) ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(6))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(3))  || atom(hasCost(1)) ; 
  not atom(hasPrep(4))  >> atom(hasPrepTime(1)) ; 
  not atom(hasDifficulty(1))  >> atom(hasPrep(0)) ; 
  atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasPrep(6))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(0)) >> not atom(hasCost(1))  || not atom(hasCost(2))  ; 
  not atom(hasCost(1))  >> atom(hasPrep(3)) || atom(hasDifficulty(1)) ; 
  not atom(hasCost(1))  >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  ; 
  atom(hasPrepTime(3)) >> not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasPrepTime(1)) || not atom(hasPrep(5))  ; 
  not atom(hasCost(1))  >> atom(hasPrep(0)) || not atom(hasCost(2))  ; 
  not atom(hasCost(1))  >> atom(hasPrep(2)) || atom(hasDifficulty(1)) ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(5)) || not atom(hasPrep(5))  ; 
  not atom(hasCost(1))  >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasPrepTime(1)) || not atom(hasPrep(5))  ; 
  not atom(hasCost(1))  >> atom(hasPrep(0)) || not atom(hasCost(2))  ; 
  not atom(hasCost(1))  >> atom(hasPrep(2)) || atom(hasDifficulty(1)) ; 
  not atom(hasCost(1))  >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(0))  >> atom(hasCost(1)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(5))  || not atom(hasPrepTime(3))  ; 
  atom(hasCost(2)) >> not atom(hasPrep(4))  || atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> not atom(hasPrep(4))  
}.
