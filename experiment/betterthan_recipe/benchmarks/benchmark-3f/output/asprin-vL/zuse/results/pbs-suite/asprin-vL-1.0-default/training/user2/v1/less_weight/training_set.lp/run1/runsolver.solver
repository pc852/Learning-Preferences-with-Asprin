asprin_vL version 1.0
Reading from stdin
-:1270:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1280:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1295:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1376:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1637:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1650:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1827:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1956:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2028:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2032:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2032:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2038:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2137:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2163:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2283:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2317:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2339:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1187:1-16: info: no atoms over signature occur in program:
  output/3

-:1179:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1180:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,50) output(50,eq,18) output(18,eq,23) output(47,eq,24) output(49,eq,70) output(70,eq,29) output(64,eq,47) output(24,eq,49) output(13,eq,10) output(10,eq,14) output(14,eq,48) output(48,eq,70) output(70,eq,18) output(18,eq,51) output(51,eq,65) output(18,eq,65) output(50,eq,51) output(70,eq,51) output(49,eq,18) output(48,eq,18) output(14,eq,70) output(10,eq,48) output(13,eq,14) output(47,eq,49) output(49,eq,29) output(48,eq,29) output(24,eq,70) output(64,eq,24) output(50,eq,23) output(70,eq,23) output(10,eq,18) output(13,eq,50) output(13,eq,18) output(49,eq,23) output(48,eq,23) output(14,eq,23) output(24,eq,23) output(10,eq,23) output(13,eq,23) output(47,eq,70) output(64,eq,70) output(14,eq,29) output(10,eq,29) output(24,eq,29) output(47,eq,29) output(64,eq,49) output(13,eq,48) output(10,eq,70) output(13,eq,70) output(14,eq,18) output(24,eq,18) output(47,eq,18) output(49,eq,51) output(48,eq,51) output(14,eq,51) output(24,eq,51) output(10,eq,51) output(13,eq,51) output(50,eq,65) output(70,eq,65) output(49,eq,65) output(48,eq,65) output(10,eq,65) output(13,eq,65) output(14,eq,65) output(24,eq,65) output(47,eq,65) output(64,eq,65) output(47,eq,51) output(64,eq,51) output(64,eq,18) output(64,eq,29) output(13,eq,29) output(47,eq,23) output(64,eq,23)
Optimization: 75 0
Progression : [ 1;75] (Error: 74)
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(10,better,50) output(13,better,50) output(64,better,47) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,49) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(10,worse,14) output(10,worse,48) output(13,worse,14) output(13,worse,48) output(50,worse,18) output(50,worse,51) output(50,worse,23) output(50,worse,65) output(47,worse,24) output(49,worse,70) output(49,worse,18) output(49,worse,29) output(49,worse,23) output(49,worse,51) output(49,worse,65) output(18,eq,23) output(70,eq,29) output(13,eq,10) output(14,eq,48) output(70,eq,18) output(18,eq,51) output(51,eq,65) output(18,eq,65) output(70,eq,51) output(64,eq,24) output(70,eq,23) output(10,eq,18) output(13,eq,18) output(10,eq,23) output(13,eq,23) output(47,eq,70) output(10,eq,29) output(47,eq,29) output(10,eq,70) output(13,eq,70) output(47,eq,18) output(10,eq,51) output(13,eq,51) output(70,eq,65) output(10,eq,65) output(13,eq,65) output(47,eq,65) output(47,eq,51) output(13,eq,29) output(47,eq,23)
Optimization: 45 5
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),2) preference(1,(1,10),1,for(atom(hasPrep(3))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,65) output(13,better,14) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(18,better,23) output(18,better,65) output(47,better,24) output(47,better,65) output(47,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(10,worse,50) output(10,worse,70) output(13,worse,10) output(13,worse,50) output(13,worse,18) output(13,worse,23) output(13,worse,48) output(13,worse,70) output(13,worse,51) output(13,worse,29) output(14,worse,48) output(14,worse,70) output(14,worse,23) output(14,worse,29) output(14,worse,18) output(14,worse,51) output(14,worse,65) output(18,worse,51) output(24,worse,49) output(24,worse,70) output(24,worse,23) output(24,worse,29) output(24,worse,18) output(24,worse,51) output(24,worse,65) output(47,worse,49) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,70) output(48,worse,18) output(48,worse,29) output(48,worse,23) output(48,worse,51) output(10,eq,29) output(64,eq,49) output(47,eq,18) output(10,eq,51) output(13,eq,65)
Optimization: 39 12
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(7))),8) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),2) preference(1,(1,10),1,for(atom(hasDifficulty(2))),4) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,70) output(10,better,65) output(13,better,10) output(13,better,14) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,65) output(24,better,18) output(24,better,65) output(47,better,18) output(48,better,18) output(49,better,18) output(49,better,23) output(49,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,29) output(10,worse,51) output(13,worse,50) output(13,worse,51) output(50,worse,51) output(64,worse,51) output(70,worse,29) output(70,worse,51) output(14,worse,29) output(14,worse,51) output(18,worse,23) output(18,worse,51) output(18,worse,65) output(24,worse,49) output(24,worse,70) output(24,worse,29) output(24,worse,51) output(47,worse,24) output(47,worse,49) output(47,worse,70) output(47,worse,29) output(47,worse,65) output(47,worse,51) output(47,worse,23) output(48,worse,70) output(48,worse,29) output(48,worse,23) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(24,eq,23) output(48,eq,65) output(13,eq,29)
Optimization: 36 12
Progression : [ 2;36] (Error: 17)
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(2))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,14) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,65) output(14,better,48) output(14,better,65) output(18,better,65) output(24,better,49) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,18) output(47,better,65) output(49,better,18) output(49,better,65) output(13,worse,10) output(13,worse,50) output(13,worse,51) output(50,worse,51) output(64,worse,51) output(70,worse,29) output(70,worse,51) output(14,worse,70) output(14,worse,23) output(14,worse,29) output(14,worse,51) output(18,worse,23) output(18,worse,51) output(24,worse,29) output(24,worse,51) output(47,worse,24) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(47,worse,23) output(48,worse,70) output(48,worse,18) output(48,worse,29) output(48,worse,23) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,23) output(49,worse,51) output(24,eq,70) output(70,eq,23) output(24,eq,23) output(14,eq,18) output(10,eq,51) output(48,eq,65) output(13,eq,29)
Optimization: 36 11
Progression : [ 3;36] (Error: 11)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,65) output(13,better,14) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,23) output(14,better,65) output(18,better,23) output(18,better,65) output(24,better,23) output(24,better,65) output(47,better,24) output(47,better,65) output(47,better,23) output(49,better,18) output(49,better,23) output(49,better,65) output(10,worse,50) output(10,worse,70) output(13,worse,10) output(13,worse,50) output(13,worse,70) output(13,worse,51) output(64,worse,70) output(64,worse,51) output(64,worse,29) output(14,worse,70) output(14,worse,29) output(14,worse,51) output(18,worse,51) output(24,worse,49) output(24,worse,70) output(24,worse,29) output(24,worse,18) output(24,worse,51) output(47,worse,49) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,70) output(48,worse,18) output(48,worse,29) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(48,eq,23) output(14,eq,18) output(47,eq,18) output(10,eq,51) output(48,eq,65) output(13,eq,29)
Optimization: 35 11
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(10,better,50) output(10,better,23) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(50,better,23) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,23) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,23) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,65) output(24,better,49) output(24,better,23) output(24,better,65) output(47,better,49) output(47,better,65) output(47,better,23) output(48,better,18) output(48,better,23) output(48,better,51) output(48,better,65) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,29) output(10,worse,70) output(10,worse,51) output(50,worse,18) output(50,worse,51) output(50,worse,65) output(70,worse,29) output(14,worse,70) output(14,worse,29) output(24,worse,70) output(24,worse,29) output(47,worse,70) output(47,worse,29) output(48,worse,70) output(48,worse,29) output(49,worse,70) output(49,worse,18) output(49,worse,29) output(49,worse,23) output(49,worse,51) output(49,worse,65) output(47,eq,24) output(18,eq,51) output(24,eq,18) output(47,eq,18) output(24,eq,51) output(10,eq,65) output(47,eq,51) output(64,eq,29) output(13,eq,29)
Optimization: 33 12
Progression : [ 4;33] (Error: 7.25)
Progression : [ 5;33] (Error: 5.6)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasCost(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,24) output(64,better,70) output(64,better,65) output(64,better,18) output(64,better,23) output(70,better,23) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,65) output(18,better,23) output(18,better,65) output(24,better,23) output(47,better,24) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,65) output(10,worse,50) output(10,worse,51) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,51) output(50,worse,51) output(64,worse,47) output(64,worse,49) output(64,worse,51) output(64,worse,29) output(70,worse,29) output(70,worse,18) output(70,worse,51) output(14,worse,51) output(18,worse,51) output(24,worse,49) output(24,worse,70) output(24,worse,29) output(24,worse,18) output(24,worse,51) output(24,worse,65) output(47,worse,49) output(47,worse,51) output(48,worse,51) output(49,worse,51) output(10,eq,14) output(48,eq,29) output(13,eq,48) output(70,eq,65) output(13,eq,29)
Optimization: 31 11
Answer: 9
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,14) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,18) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,23) output(10,worse,50) output(13,worse,10) output(13,worse,50) output(13,worse,48) output(13,worse,51) output(70,worse,29) output(70,worse,51) output(14,worse,48) output(14,worse,29) output(14,worse,51) output(18,worse,51) output(18,worse,65) output(24,worse,29) output(24,worse,51) output(47,worse,24) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(49,worse,65) output(18,eq,23) output(10,eq,51) output(47,eq,65) output(64,eq,51) output(13,eq,29)
Optimization: 28 10
Answer: 10
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,18) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,23) output(13,worse,10) output(13,worse,48) output(13,worse,51) output(50,worse,51) output(70,worse,29) output(70,worse,51) output(14,worse,48) output(14,worse,29) output(14,worse,51) output(18,worse,51) output(18,worse,65) output(24,worse,29) output(24,worse,51) output(47,worse,24) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(49,worse,65) output(18,eq,23) output(10,eq,51) output(47,eq,65) output(64,eq,51) output(13,eq,29)
Optimization: 27 10
Answer: 11
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),2) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,14) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,65) output(18,better,23) output(24,better,49) output(24,better,23) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,23) output(49,better,65) output(10,worse,50) output(13,worse,10) output(13,worse,50) output(13,worse,51) output(70,worse,29) output(70,worse,51) output(14,worse,48) output(14,worse,29) output(14,worse,51) output(18,worse,51) output(18,worse,65) output(24,worse,70) output(24,worse,29) output(24,worse,51) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,29) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(47,eq,24) output(10,eq,51) output(64,eq,51) output(13,eq,29)
Optimization: 26 10
Answer: 12
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,23) output(49,better,65) output(13,worse,10) output(13,worse,51) output(50,worse,51) output(70,worse,29) output(70,worse,51) output(14,worse,29) output(14,worse,51) output(18,worse,51) output(24,worse,29) output(24,worse,51) output(47,worse,24) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,29) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(18,eq,23) output(14,eq,48) output(18,eq,65) output(10,eq,51) output(64,eq,51) output(13,eq,29)
Optimization: 25 10
Answer: 13
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrep(7))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrepTime(1))),1) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,18) output(13,better,23) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,65) output(18,better,23) output(24,better,49) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,65) output(10,worse,50) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,48) output(13,worse,70) output(13,worse,51) output(64,worse,51) output(70,worse,51) output(14,worse,51) output(18,worse,51) output(18,worse,65) output(24,worse,70) output(24,worse,51) output(47,worse,70) output(47,worse,51) output(48,worse,70) output(48,worse,51) output(49,worse,70) output(49,worse,51) output(47,eq,24) output(10,eq,51) output(13,eq,65) output(13,eq,29)
Optimization: 24 11
Answer: 14
preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(1))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,65) output(13,better,18) output(13,better,23) output(13,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,23) output(70,better,65) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,65) output(47,better,49) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,65) output(10,worse,50) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,48) output(13,worse,70) output(13,worse,51) output(64,worse,51) output(70,worse,51) output(14,worse,51) output(18,worse,51) output(24,worse,51) output(47,worse,24) output(47,worse,70) output(47,worse,51) output(48,worse,51) output(49,worse,70) output(49,worse,51) output(18,eq,23) output(14,eq,48) output(18,eq,65) output(10,eq,51) output(13,eq,29)
Optimization: 23 11
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,23) output(13,better,51) output(13,better,65) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,49) output(47,better,29) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,23) output(49,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,18) output(13,worse,48) output(13,worse,70) output(50,worse,18) output(47,worse,24) output(49,worse,70) output(49,worse,18) output(49,worse,29) output(49,worse,51) output(70,eq,18) output(13,eq,50) output(47,eq,70) output(47,eq,18) output(10,eq,51) output(13,eq,29)
Optimization: 22 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,50) output(13,better,23) output(13,better,51) output(13,better,65) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,49) output(47,better,29) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,23) output(49,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,18) output(13,worse,48) output(13,worse,70) output(50,worse,18) output(47,worse,24) output(49,worse,70) output(49,worse,18) output(49,worse,29) output(49,worse,51) output(70,eq,18) output(47,eq,70) output(47,eq,18) output(10,eq,51) output(13,eq,29)
Optimization: 21 12
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,(1,14),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,23) output(13,better,51) output(13,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,49) output(47,better,29) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,50) output(13,worse,18) output(13,worse,48) output(13,worse,70) output(47,worse,24) output(49,worse,70) output(49,worse,18) output(70,eq,18) output(47,eq,70) output(47,eq,18) output(10,eq,51) output(13,eq,29)
Optimization: 19 12
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(7))),6) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,51) output(13,better,65) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,48) output(70,worse,29) output(50,eq,18) output(70,eq,18) output(10,eq,51) output(13,eq,29)
Optimization: 13 10
Progression : [ 6;13] (Error: 1.16667)
Progression : [ 7;13] (Error: 0.857143)
Progression : [ 8;13] (Error: 0.625)
Progression : [ 9;13] (Error: 0.444444)
Progression : [10;13] (Error: 0.3)
Progression : [11;13] (Error: 0.181818)
Answer: 19
preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasCost(2))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),5) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(10,better,50) output(10,better,18) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,51) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,65) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(10,worse,14) output(10,worse,48) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,48) output(50,worse,51) output(70,worse,29) output(18,worse,51) output(24,eq,49) output(10,eq,51) output(13,eq,29)
Optimization: 12 11
Progression : [12;12] (Error: 0)
Progression : 12 [ 1;11] (Error: 10)
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),5) preference(1,(1,9),1,for(atom(hasPrep(6))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,51) output(13,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,50) output(13,worse,48) output(70,worse,29) output(10,eq,51) output(13,eq,29)
Optimization: 12 10
Progression : 12 [ 2;10] (Error: 4)
Progression : 12 [ 3;10] (Error: 2.33333)
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(10,better,50) output(10,better,18) output(10,better,23) output(10,better,65) output(13,better,10) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,51) output(13,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(18,better,23) output(18,better,65) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(10,worse,14) output(10,worse,48) output(10,worse,29) output(10,worse,70) output(13,worse,14) output(13,worse,48) output(13,worse,70) output(50,worse,51) output(18,worse,51) output(24,worse,49) output(10,eq,51) output(13,eq,29)
Optimization: 12 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.072 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 12 8
Bounds       : 12 [3;8]
Calls        : 1
Time         : 296.926s (Solving: 295.05s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1179.981s
Threads      : 4        (Winner: 4)

Choices      : 10241170 (Domain: 774320)
Conflicts    : 8057017  (Analyzed: 8057002)
Restarts     : 8603     (Average: 936.53 Last: 363296)
Model-Level  : 44.4    
Problems     : 22       (Average Length: 0.18 Splits: 0)
Lemmas       : 8194434  (Deleted: 7834174)
  Binary     : 422      (Ratio:   0.01%)
  Ternary    : 11137    (Ratio:   0.14%)
  Conflict   : 8057000  (Average Length:  134.7 Ratio:  98.32%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 137434   (Average Length:   28.1 Ratio:   1.68%) 
  Distributed: 45900    (Ratio:   0.57% Average LBD: 3.64) 
  Integrated : 137700   (Ratio: 300.00% Unit: 260 Average Jumps: 5.67)
Backjumps    : 8057002  (Average:  1.24 Max: 324 Sum: 9993176)
  Executed   : 8056981  (Average:  1.24 Max: 324 Sum: 9992621 Ratio:  99.99%)
  Bounded    : 21       (Average: 26.43 Max:  68 Sum:    555 Ratio:   0.01%)

Rules        : 162161  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 12970   
Bodies       : 6066    
  Sum        : 150     
  Count      : 14      
Equivalences : 5043     (Atom=Atom: 763 Body=Body: 314 Other: 3966)
Tight        : Yes
Variables    : 4965     (Eliminated:    0 Frozen: 3495)
Constraints  : 157452   (Binary:  97.9% Ternary:   1.0% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) 
}.
