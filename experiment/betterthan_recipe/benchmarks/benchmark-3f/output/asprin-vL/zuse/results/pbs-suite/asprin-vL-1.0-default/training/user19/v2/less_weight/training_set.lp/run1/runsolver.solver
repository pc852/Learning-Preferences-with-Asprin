asprin_vL version 1.0
Reading from stdin
-:1228:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1238:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1253:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1334:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1595:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1608:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1785:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1914:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1986:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1990:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1996:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2095:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2121:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2241:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2275:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2297:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1145:1-16: info: no atoms over signature occur in program:
  output/3

-:1137:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(73,eq,75) output(62,eq,11) output(11,eq,76) output(76,eq,57) output(57,eq,38) output(10,eq,25) output(25,eq,26) output(73,eq,11) output(32,eq,23) output(23,eq,25) output(25,eq,36) output(36,eq,42) output(22,eq,51) output(25,eq,42) output(10,eq,36) output(23,eq,36) output(32,eq,25) output(10,eq,26) output(23,eq,26) output(76,eq,38) output(11,eq,57) output(62,eq,76) output(73,eq,76) output(62,eq,57) output(73,eq,57) output(11,eq,38) output(62,eq,38) output(73,eq,38) output(32,eq,26) output(32,eq,36) output(10,eq,42) output(23,eq,42) output(32,eq,42)
Optimization: 33 0
Answer: 2
preference(1,(1,1),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,36) output(10,better,42) output(11,better,57) output(25,better,36) output(25,better,42) output(62,better,11) output(62,better,57) output(76,better,57) output(76,better,38) output(23,better,36) output(23,better,42) output(32,better,36) output(32,better,42) output(73,better,57) output(10,worse,25) output(10,worse,26) output(11,worse,76) output(11,worse,38) output(57,worse,38) output(62,worse,76) output(23,worse,25) output(23,worse,26) output(32,worse,25) output(32,worse,26) output(73,worse,76) output(73,worse,38) output(73,eq,75) output(25,eq,26) output(73,eq,11) output(32,eq,23) output(36,eq,42) output(22,eq,51) output(62,eq,38)
Optimization: 19 7
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(6))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(11,better,76) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,26) output(32,better,23) output(32,better,25) output(32,better,26) output(73,better,57) output(10,worse,25) output(10,worse,36) output(10,worse,26) output(10,worse,42) output(25,worse,36) output(25,worse,42) output(57,worse,38) output(62,worse,11) output(23,worse,36) output(23,worse,42) output(73,worse,75) output(73,worse,11) output(73,worse,76) output(73,worse,38) output(36,eq,42) output(62,eq,76) output(32,eq,36) output(32,eq,42)
Optimization: 18 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(1))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,14),1,for(atom(hasPrep(3))),3) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,57) output(11,better,38) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(62,better,57) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,57) output(11,worse,76) output(22,worse,51) output(57,worse,38) output(62,worse,11) output(62,worse,76) output(62,worse,38) output(32,worse,23) output(32,worse,25) output(73,worse,75) output(73,worse,11) output(73,worse,76) output(73,worse,38)
Optimization: 12 8
Progression : [ 1;12] (Error: 11)
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasCost(2))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasDifficulty(1))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,57) output(11,better,38) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(11,worse,76) output(62,worse,76) output(73,worse,75) output(73,worse,11) output(73,worse,76) output(73,worse,57) output(62,eq,11) output(22,eq,51) output(73,eq,38)
Optimization: 9 11
Progression : [2;9] (Error: 3.5)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,38) output(22,better,51) output(36,better,42) output(57,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,57) output(73,better,38) output(11,worse,76) output(25,worse,26) output(25,worse,36) output(25,worse,42) output(32,eq,23) output(11,eq,57) output(62,eq,76) output(73,eq,76)
Optimization: 8 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,57) output(73,better,38) output(11,worse,76) output(32,eq,23) output(23,eq,25) output(32,eq,25) output(11,eq,57) output(62,eq,76) output(73,eq,76)
Optimization: 7 9
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,57) output(73,better,38) output(11,worse,76) output(32,eq,23) output(11,eq,57) output(62,eq,76) output(73,eq,76)
Optimization: 5 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,57) output(73,better,38) output(11,worse,76) output(25,eq,36) output(62,eq,76) output(73,eq,76)
Optimization: 4 10
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(11,worse,76) output(25,eq,36) output(62,eq,76)
Optimization: 3 11
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasCost(1))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(11,worse,76) output(62,eq,76)
Optimization: 2 11
Progression : 2 [ 1;11] (Error: 10)
Progression : 2 [ 2;11] (Error: 4.5)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(2))),2) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,76) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(62,worse,11) output(62,eq,76)
Optimization: 2 9
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,76) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(62,worse,11) output(62,eq,76)
Optimization: 2 8
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,76) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(62,worse,11) output(62,eq,76)
Optimization: 2 7
Progression : 2 [3;7] (Error: 1.33333)
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,76) output(11,better,57) output(11,better,38) output(22,better,51) output(25,better,26) output(25,better,36) output(25,better,42) output(36,better,42) output(57,better,38) output(62,better,57) output(62,better,38) output(76,better,57) output(76,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(62,worse,11) output(62,eq,76)
Optimization: 2 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.022 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 2 6
Bounds       : 2 [3;6]
Calls        : 1
Time         : 296.853s (Solving: 295.26s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1182.483s
Threads      : 4        (Winner: 4)

Choices      : 7978959  (Domain: 822878)
Conflicts    : 7293117  (Analyzed: 7293112)
Restarts     : 6390     (Average: 1141.33 Last: 603349)
Model-Level  : 35.5    
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 7437571  (Deleted: 7180682)
  Binary     : 651      (Ratio:   0.01%)
  Ternary    : 4137     (Ratio:   0.06%)
  Conflict   : 7293112  (Average Length:  215.6 Ratio:  98.06%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 144459   (Average Length:  167.4 Ratio:   1.94%) 
  Distributed: 48244    (Ratio:   0.66% Average LBD: 3.79) 
  Integrated : 144732   (Ratio: 300.00% Unit: 112 Average Jumps: 5.21)
Backjumps    : 7293112  (Average:  1.08 Max:  70 Sum: 7907120)
  Executed   : 7293102  (Average:  1.08 Max:  70 Sum: 7906986 Ratio: 100.00%)
  Bounded    : 10       (Average: 13.40 Max:  26 Sum:    134 Ratio:   0.00%)

Rules        : 96683   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8862    
Bodies       : 5604    
  Sum        : 66      
  Count      : 14      
Equivalences : 3573     (Atom=Atom: 343 Body=Body: 146 Other: 3084)
Tight        : Yes
Variables    : 4805     (Eliminated:    0 Frozen: 3335)
Constraints  : 95804    (Binary:  96.7% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) 
}.
