asprin_vL version 1.0
Reading from stdin
-:1231:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1241:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1256:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1337:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1598:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1611:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1788:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1917:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1989:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1993:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1993:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2098:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2124:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2244:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2278:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2300:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1148:1-16: info: no atoms over signature occur in program:
  output/3

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1141:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(39,eq,82) output(82,eq,65) output(65,eq,33) output(68,eq,22) output(10,eq,74) output(74,eq,80) output(46,eq,39) output(39,eq,60) output(60,eq,68) output(52,eq,74) output(74,eq,66) output(66,eq,55) output(55,eq,47) output(66,eq,47) output(74,eq,55) output(10,eq,66) output(52,eq,66) output(39,eq,68) output(46,eq,60) output(10,eq,80) output(52,eq,80) output(60,eq,22) output(82,eq,33) output(39,eq,65) output(46,eq,82) output(46,eq,65) output(39,eq,33) output(46,eq,33) output(39,eq,22) output(46,eq,22) output(46,eq,68) output(10,eq,55) output(52,eq,55) output(74,eq,47) output(10,eq,47) output(52,eq,47)
Optimization: 36 0
Answer: 2
preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(39,better,82) output(39,better,60) output(46,better,60) output(46,better,82) output(52,better,66) output(52,better,80) output(74,better,80) output(74,better,66) output(10,worse,74) output(10,worse,55) output(10,worse,47) output(60,worse,68) output(60,worse,22) output(66,worse,55) output(66,worse,47) output(82,worse,65) output(82,worse,33) output(65,eq,33) output(68,eq,22) output(46,eq,39) output(52,eq,74) output(55,eq,47) output(74,eq,55) output(10,eq,66) output(39,eq,68) output(10,eq,80) output(39,eq,65) output(46,eq,65) output(39,eq,33) output(46,eq,33) output(39,eq,22) output(46,eq,22) output(46,eq,68) output(52,eq,55) output(74,eq,47) output(52,eq,47)
Optimization: 28 1
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(39,better,65) output(46,better,65) output(52,better,55) output(66,better,55) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(10,worse,74) output(10,worse,66) output(10,worse,80) output(10,worse,55) output(10,worse,47) output(52,worse,74) output(55,worse,47) output(65,worse,33) output(39,eq,82) output(68,eq,22) output(46,eq,39) output(39,eq,60) output(60,eq,68) output(66,eq,47) output(52,eq,66) output(39,eq,68) output(46,eq,60) output(52,eq,80) output(60,eq,22) output(82,eq,33) output(46,eq,82) output(39,eq,33) output(46,eq,33) output(39,eq,22) output(46,eq,22) output(46,eq,68) output(52,eq,47)
Optimization: 27 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(39,better,65) output(46,better,65) output(52,better,55) output(52,better,47) output(55,better,47) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(10,worse,74) output(10,worse,66) output(10,worse,80) output(10,worse,55) output(10,worse,47) output(52,worse,74) output(65,worse,33) output(39,eq,82) output(68,eq,22) output(46,eq,39) output(39,eq,60) output(60,eq,68) output(52,eq,66) output(39,eq,68) output(46,eq,60) output(52,eq,80) output(60,eq,22) output(82,eq,33) output(46,eq,82) output(39,eq,33) output(46,eq,33) output(39,eq,22) output(46,eq,22) output(46,eq,68)
Optimization: 24 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasPrep(4))),8) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),5) preference(1,less(weight)) output(10,better,47) output(39,better,65) output(46,better,65) output(52,better,55) output(52,better,47) output(55,better,47) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(10,worse,74) output(10,worse,66) output(10,worse,80) output(10,worse,55) output(52,worse,74) output(65,worse,33) output(39,eq,82) output(68,eq,22) output(46,eq,39) output(39,eq,60) output(60,eq,68) output(52,eq,66) output(39,eq,68) output(46,eq,60) output(52,eq,80) output(60,eq,22) output(82,eq,33) output(46,eq,82) output(39,eq,33) output(46,eq,33) output(39,eq,22) output(46,eq,22) output(46,eq,68)
Optimization: 23 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(46,better,39) output(46,better,65) output(46,better,22) output(46,better,68) output(52,better,55) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(10,worse,74) output(10,worse,66) output(10,worse,80) output(10,worse,55) output(10,worse,47) output(39,worse,82) output(39,worse,60) output(39,worse,65) output(39,worse,33) output(52,worse,74) output(65,worse,33) output(68,eq,22) output(52,eq,66) output(39,eq,68) output(46,eq,60) output(52,eq,80) output(82,eq,33) output(46,eq,82) output(46,eq,33) output(39,eq,22)
Optimization: 20 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),6) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),6) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(10,better,47) output(39,better,68) output(39,better,65) output(39,better,33) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,80) output(52,better,47) output(55,better,47) output(60,better,68) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,47) output(82,better,65) output(82,better,33) output(10,worse,74) output(10,worse,66) output(10,worse,55) output(52,worse,74) output(52,worse,55) output(66,worse,55) output(68,worse,22) output(39,eq,82) output(65,eq,33) output(39,eq,60) output(74,eq,55) output(52,eq,66) output(10,eq,80) output(60,eq,22) output(39,eq,22)
Optimization: 15 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),6) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(2))),6) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasCost(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasPrep(2))),4) preference(1,less(weight)) output(10,better,80) output(10,better,47) output(39,better,68) output(39,better,65) output(39,better,33) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,80) output(52,better,47) output(55,better,47) output(60,better,68) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,47) output(82,better,65) output(82,better,33) output(10,worse,74) output(10,worse,66) output(10,worse,55) output(52,worse,74) output(52,worse,55) output(66,worse,55) output(68,worse,22) output(39,eq,82) output(65,eq,33) output(39,eq,60) output(74,eq,55) output(52,eq,66) output(60,eq,22) output(39,eq,22)
Optimization: 14 14
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),7) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),7) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,68) output(52,better,74) output(52,better,66) output(52,better,80) output(52,better,55) output(52,better,47) output(55,better,47) output(60,better,68) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(10,worse,74) output(10,worse,66) output(10,worse,80) output(10,worse,55) output(46,worse,39) output(46,worse,22) output(60,worse,22) output(65,worse,33) output(68,worse,22) output(39,eq,22) output(10,eq,47)
Optimization: 11 11
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),7) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,66) output(10,better,80) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(55,better,47) output(60,better,68) output(60,better,22) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(68,better,22) output(10,worse,74) output(52,worse,74) output(52,worse,55) output(52,worse,47) output(66,worse,55) output(66,worse,47) output(65,eq,33) output(52,eq,66) output(52,eq,80) output(10,eq,55)
Optimization: 10 11
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),6) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,66) output(10,better,80) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(10,worse,74) output(52,worse,74) output(52,worse,55) output(66,worse,55) output(68,worse,22) output(65,eq,33) output(52,eq,66) output(52,eq,80) output(10,eq,55)
Optimization: 9 11
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),7) preference(1,(1,9),1,for(atom(hasPrep(3))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(1))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,66) output(10,better,80) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,80) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(68,better,22) output(10,worse,74) output(46,worse,39) output(52,worse,74) output(52,worse,55) output(66,worse,55) output(65,eq,33) output(52,eq,66) output(10,eq,55)
Optimization: 8 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(1))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasCost(2))),2) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),7) preference(1,(1,9),1,for(atom(hasPrep(3))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(10,better,66) output(10,better,55) output(10,better,47) output(39,better,82) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,66) output(52,better,80) output(52,better,55) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(10,worse,74) output(10,worse,80) output(52,worse,74) output(82,worse,33) output(65,worse,33) output(68,eq,22) output(39,eq,60) output(66,eq,55)
Optimization: 8 11
Answer: 14
preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,74) output(10,better,66) output(10,better,80) output(10,better,55) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,66) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(52,worse,74) output(52,worse,80) output(52,worse,55) output(66,worse,55) output(65,worse,33) output(68,eq,22) output(46,eq,39)
Optimization: 7 7
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasPrep(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasPrep(4))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(10,better,74) output(10,better,66) output(10,better,80) output(10,better,55) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,74) output(52,better,66) output(52,better,80) output(52,better,55) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(65,better,33) output(68,better,22)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrep(3))),5) preference(1,(1,13),1,for(atom(hasPrepTime(3))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),4) preference(1,less(weight)) output(10,better,74) output(10,better,66) output(10,better,80) output(10,better,55) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,74) output(52,better,66) output(52,better,80) output(52,better,55) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(65,better,33) output(68,better,22)
Optimization: 0 10
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(10,better,74) output(10,better,66) output(10,better,80) output(10,better,55) output(10,better,47) output(39,better,82) output(39,better,60) output(39,better,68) output(39,better,65) output(39,better,33) output(39,better,22) output(46,better,39) output(46,better,60) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,22) output(46,better,68) output(52,better,74) output(52,better,66) output(52,better,80) output(52,better,55) output(52,better,47) output(55,better,47) output(60,better,68) output(60,better,22) output(66,better,55) output(66,better,47) output(74,better,80) output(74,better,66) output(74,better,55) output(74,better,47) output(82,better,65) output(82,better,33) output(65,better,33) output(68,better,22)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.038 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 297.632s (Solving: 296.16s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1185.704s
Threads      : 4        (Winner: 4)

Choices      : 9495921  (Domain: 815237)
Conflicts    : 7843872  (Analyzed: 7843869)
Restarts     : 6371     (Average: 1231.18 Last: 303973)
Model-Level  : 37.2    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7987258  (Deleted: 7722921)
  Binary     : 604      (Ratio:   0.01%)
  Ternary    : 7303     (Ratio:   0.09%)
  Conflict   : 7843869  (Average Length:  214.2 Ratio:  98.20%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 143389   (Average Length:   41.2 Ratio:   1.80%) 
  Distributed: 47853    (Ratio:   0.61% Average LBD: 3.73) 
  Integrated : 143559   (Ratio: 300.00% Unit: 536 Average Jumps: 13.73)
Backjumps    : 7843869  (Average:  1.18 Max: 403 Sum: 9262152)
  Executed   : 7843866  (Average:  1.18 Max: 403 Sum: 9262120 Ratio: 100.00%)
  Bounded    : 3        (Average: 10.67 Max:  30 Sum:     32 Ratio:   0.00%)

Rules        : 101160  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9148    
Bodies       : 5637    
  Sum        : 72      
  Count      : 14      
Equivalences : 3678     (Atom=Atom: 373 Body=Body: 158 Other: 3147)
Tight        : Yes
Variables    : 4809     (Eliminated:    0 Frozen: 3339)
Constraints  : 100000   (Binary:  96.9% Ternary:   1.5% Other:   1.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(4)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(7)) 
}.
