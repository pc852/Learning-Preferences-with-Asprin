asprin_vL version 1.0
Reading from stdin
-:1227:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1237:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1252:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1333:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1594:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1607:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1784:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1913:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1985:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1989:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1989:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2094:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2120:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2240:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2274:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2296:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1144:1-16: info: no atoms over signature occur in program:
  output/3

-:1136:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1137:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(69,eq,72) output(72,eq,52) output(52,eq,65) output(65,eq,24) output(42,eq,67) output(67,eq,64) output(10,eq,65) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(42,eq,25) output(18,eq,51) output(13,eq,25) output(48,eq,42) output(70,eq,13) output(42,eq,64) output(13,eq,67) output(52,eq,24) output(10,eq,24) output(72,eq,65) output(69,eq,52) output(69,eq,65) output(72,eq,24) output(69,eq,24) output(48,eq,67) output(70,eq,67) output(13,eq,64) output(48,eq,64) output(70,eq,42) output(48,eq,25) output(70,eq,25) output(70,eq,64)
Optimization: 32 0
Answer: 2
preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(52,better,65) output(52,better,24) output(69,better,72) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,64) output(48,better,13) output(48,better,42) output(65,better,24) output(13,worse,42) output(13,worse,25) output(13,worse,67) output(13,worse,64) output(67,worse,64) output(70,worse,25) output(18,worse,51) output(42,worse,67) output(42,worse,25) output(42,worse,64) output(48,worse,64) output(48,worse,25) output(72,worse,52) output(72,worse,65) output(72,worse,24) output(69,eq,52) output(48,eq,67)
Optimization: 17 6
Progression : [ 1;17] (Error: 16)
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(13,better,42) output(13,better,25) output(13,better,64) output(52,better,24) output(67,better,64) output(69,better,24) output(70,better,25) output(18,better,51) output(42,better,25) output(48,better,13) output(48,better,42) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,52) output(72,better,65) output(72,better,24) output(10,worse,65) output(10,worse,24) output(13,worse,67) output(69,worse,72) output(70,worse,48) output(70,worse,13) output(70,worse,67) output(70,worse,42) output(70,worse,64) output(42,worse,67) output(52,eq,65) output(42,eq,64) output(69,eq,52) output(69,eq,65) output(48,eq,67)
Optimization: 15 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCost(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(10,better,24) output(13,better,42) output(52,better,24) output(67,better,64) output(69,better,72) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(48,better,13) output(48,better,42) output(48,better,64) output(65,better,24) output(72,better,24) output(10,worse,65) output(13,worse,25) output(13,worse,67) output(13,worse,64) output(52,worse,65) output(69,worse,65) output(42,worse,67) output(42,worse,25) output(42,worse,64) output(48,worse,67) output(48,worse,25) output(72,worse,52) output(72,worse,65) output(69,eq,52)
Optimization: 14 13
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(10,better,24) output(52,better,65) output(52,better,24) output(69,better,72) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,25) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,25) output(65,better,24) output(72,better,24) output(10,worse,65) output(13,worse,42) output(13,worse,25) output(13,worse,67) output(13,worse,64) output(67,worse,64) output(42,worse,67) output(42,worse,64) output(48,worse,64) output(72,worse,52) output(72,worse,65) output(69,eq,52)
Optimization: 12 13
Progression : [ 2;12] (Error: 5)
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,less(weight)) output(10,better,24) output(52,better,24) output(67,better,64) output(69,better,72) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,24) output(10,worse,65) output(13,worse,42) output(13,worse,25) output(13,worse,67) output(13,worse,64) output(52,worse,65) output(69,worse,65) output(72,worse,52) output(72,worse,65) output(18,eq,51) output(69,eq,52)
Optimization: 11 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,42) output(13,better,25) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,72) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(42,better,25) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,24) output(13,worse,67) output(18,worse,51) output(42,worse,67) output(42,worse,64) output(72,worse,52) output(72,worse,65) output(69,eq,52) output(13,eq,64)
Optimization: 8 12
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,42) output(13,better,25) output(13,better,64) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,52) output(72,better,65) output(72,better,24) output(69,worse,72) output(42,worse,67) output(13,eq,67) output(69,eq,52)
Optimization: 4 14
Progression : [3;4] (Error: 0.333333)
Progression : [4;4] (Error: 0)
Progression : 4 [ 1;14] (Error: 13)
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,42) output(13,better,25) output(13,better,64) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,52) output(72,better,65) output(72,better,24) output(69,worse,72) output(42,worse,67) output(13,eq,67) output(69,eq,52)
Optimization: 4 13
Answer: 10
preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,25) output(13,better,64) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,72) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,67) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,65) output(72,better,24) output(13,worse,42) output(72,worse,52) output(13,eq,67) output(69,eq,52)
Optimization: 4 12
Answer: 11
preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasCost(1))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,25) output(13,better,64) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,72) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,67) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,65) output(72,better,24) output(13,worse,42) output(72,worse,52) output(13,eq,67) output(69,eq,52)
Optimization: 4 11
Progression : 4 [ 2;11] (Error: 4.5)
Progression : 4 [ 3;11] (Error: 2.66667)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasPrep(7))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,42) output(13,better,25) output(13,better,64) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,52) output(72,better,65) output(72,better,24) output(69,worse,72) output(42,worse,67) output(13,eq,67) output(69,eq,52)
Optimization: 4 10
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(13,better,25) output(13,better,64) output(52,better,65) output(52,better,24) output(67,better,64) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(18,better,51) output(42,better,67) output(42,better,25) output(42,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(72,better,52) output(72,better,65) output(72,better,24) output(13,worse,42) output(69,worse,72) output(13,eq,67) output(69,eq,52)
Optimization: 4 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.035 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 4 9
Bounds       : 4 [3;9]
Calls        : 1
Time         : 297.216s (Solving: 295.59s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1180.826s
Threads      : 4        (Winner: 4)

Choices      : 14493315 (Domain: 989518)
Conflicts    : 9409796  (Analyzed: 9409787)
Restarts     : 7355     (Average: 1279.37 Last: 473975)
Model-Level  : 73.7    
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 9548403  (Deleted: 9213591)
  Binary     : 1192     (Ratio:   0.01%)
  Ternary    : 12493    (Ratio:   0.13%)
  Conflict   : 9409786  (Average Length:  236.1 Ratio:  98.55%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 138617   (Average Length:  101.7 Ratio:   1.45%) 
  Distributed: 46295    (Ratio:   0.49% Average LBD: 3.68) 
  Integrated : 138885   (Ratio: 300.00% Unit: 206 Average Jumps: 12.82)
Backjumps    : 9409787  (Average:  1.46 Max: 376 Sum: 13713288)
  Executed   : 9409770  (Average:  1.46 Max: 376 Sum: 13713113 Ratio: 100.00%)
  Bounded    : 17       (Average: 10.29 Max:  32 Sum:    175 Ratio:   0.00%)

Rules        : 94668   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 8756    
Bodies       : 5593    
  Sum        : 64      
  Count      : 14      
Equivalences : 3538     (Atom=Atom: 333 Body=Body: 142 Other: 3063)
Tight        : Yes
Variables    : 4793     (Eliminated:    0 Frozen: 3323)
Constraints  : 93872    (Binary:  96.7% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.
