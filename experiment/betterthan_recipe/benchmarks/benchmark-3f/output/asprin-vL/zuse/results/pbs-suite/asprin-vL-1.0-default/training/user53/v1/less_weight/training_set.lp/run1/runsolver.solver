asprin_vL version 1.0
Reading from stdin
-:1331:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1341:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1356:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1437:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1698:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1711:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1888:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2017:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2089:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2093:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2093:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2099:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2198:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2224:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2344:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2378:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2400:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1248:1-16: info: no atoms over signature occur in program:
  output/3

-:1240:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1241:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(100,eq,16) output(67,eq,44) output(90,eq,100) output(79,eq,67) output(100,eq,24) output(24,eq,92) output(38,eq,51) output(51,eq,64) output(64,eq,75) output(75,eq,52) output(52,eq,84) output(58,eq,100) output(92,eq,38) output(24,eq,38) output(75,eq,84) output(9,eq,52) output(64,eq,52) output(51,eq,75) output(75,eq,64) output(38,eq,64) output(92,eq,51) output(100,eq,92) output(90,eq,24) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(90,eq,16) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,16) output(51,eq,16) output(51,eq,100) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(51,eq,24) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(24,eq,51) output(100,eq,51) output(92,eq,64) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(51,eq,52) output(38,eq,52) output(9,eq,84) output(64,eq,84) output(51,eq,84) output(100,eq,38) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(51,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(38,eq,84) output(92,eq,84) output(24,eq,84) output(100,eq,84) output(92,eq,52) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(58,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(75,eq,16) output(38,eq,16) output(92,eq,16) output(9,eq,16) output(64,eq,16) output(24,eq,16) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84) output(58,eq,84) output(33,eq,84)
Optimization: 136 0
Answer: 2
preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,38) output(67,better,44) output(79,better,44) output(90,better,100) output(90,better,24) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,64) output(90,better,33) output(92,better,38) output(92,better,33) output(92,better,64) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(9,better,52) output(9,better,33) output(9,better,64) output(9,better,38) output(9,better,24) output(9,better,100) output(9,better,16) output(75,better,52) output(75,better,64) output(75,better,33) output(75,better,100) output(75,better,38) output(75,better,24) output(75,better,16) output(38,worse,51) output(38,worse,90) output(38,worse,75) output(38,worse,84) output(38,worse,92) output(52,worse,84) output(58,worse,92) output(58,worse,75) output(58,worse,51) output(58,worse,90) output(58,worse,84) output(64,worse,75) output(64,worse,51) output(64,worse,90) output(64,worse,84) output(64,worse,92) output(24,worse,92) output(24,worse,51) output(24,worse,84) output(24,worse,75) output(24,worse,90) output(33,worse,90) output(33,worse,92) output(33,worse,75) output(33,worse,51) output(33,worse,84) output(100,worse,92) output(100,worse,51) output(100,worse,84) output(100,worse,75) output(100,worse,90) output(9,eq,75) output(75,eq,51) output(100,eq,16) output(79,eq,67) output(100,eq,24) output(58,eq,100) output(24,eq,38) output(75,eq,84) output(64,eq,52) output(51,eq,75) output(38,eq,64) output(92,eq,51) output(58,eq,24) output(33,eq,100) output(58,eq,16) output(51,eq,90) output(38,eq,33) output(9,eq,51) output(51,eq,51) output(24,eq,33) output(64,eq,33) output(75,eq,90) output(92,eq,90) output(9,eq,90) output(33,eq,16) output(38,eq,100) output(33,eq,24) output(90,eq,92) output(24,eq,64) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,52) output(9,eq,84) output(51,eq,84) output(100,eq,38) output(58,eq,38) output(33,eq,38) output(38,eq,38) output(64,eq,38) output(92,eq,84) output(24,eq,52) output(100,eq,52) output(58,eq,52) output(90,eq,75) output(100,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(51,eq,92) output(75,eq,92) output(92,eq,92) output(9,eq,92) output(38,eq,24) output(64,eq,24) output(24,eq,24) output(24,eq,100) output(100,eq,100) output(64,eq,100) output(38,eq,16) output(64,eq,16) output(24,eq,16) output(90,eq,90) output(100,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84)
Optimization: 99 2
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(38,better,51) output(38,better,90) output(38,better,84) output(38,better,24) output(38,better,16) output(52,better,84) output(58,better,51) output(58,better,90) output(58,better,84) output(64,better,51) output(64,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(79,better,67) output(92,better,51) output(92,better,90) output(92,better,84) output(92,better,24) output(92,better,16) output(9,better,51) output(9,better,90) output(9,better,84) output(9,better,24) output(9,better,16) output(24,better,51) output(24,better,84) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,24) output(33,better,51) output(33,better,84) output(75,better,51) output(75,better,84) output(75,better,90) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,24) output(100,better,51) output(100,better,84) output(100,better,90) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,16) output(51,worse,100) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(58,worse,100) output(58,worse,92) output(58,worse,38) output(58,worse,52) output(58,worse,75) output(58,worse,64) output(58,worse,33) output(67,worse,44) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,33) output(24,worse,92) output(24,worse,38) output(24,worse,33) output(24,worse,64) output(24,worse,52) output(24,worse,75) output(24,worse,100) output(9,eq,75) output(64,eq,75) output(75,eq,52) output(92,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(100,eq,92) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(92,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,100) output(38,eq,100) output(33,eq,92) output(92,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(38,eq,52) output(51,eq,84) output(100,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(92,eq,52) output(100,eq,52) output(100,eq,75) output(33,eq,75) output(100,eq,64) output(33,eq,64) output(90,eq,51) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(24,eq,16) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84)
Optimization: 93 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,2),1,for(atom(hasPrep(7))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),3) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),3) preference(1,less(weight)) output(38,better,51) output(38,better,90) output(38,better,84) output(38,better,24) output(38,better,16) output(52,better,84) output(58,better,16) output(58,better,51) output(58,better,90) output(58,better,84) output(64,better,51) output(64,better,90) output(64,better,84) output(64,better,24) output(64,better,16) output(79,better,67) output(92,better,51) output(92,better,90) output(92,better,84) output(92,better,24) output(92,better,16) output(9,better,51) output(9,better,90) output(9,better,84) output(9,better,24) output(9,better,16) output(24,better,51) output(24,better,84) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,24) output(33,better,51) output(33,better,84) output(75,better,51) output(75,better,84) output(75,better,90) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,24) output(100,better,51) output(100,better,84) output(100,better,90) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,16) output(51,worse,100) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(58,worse,100) output(58,worse,92) output(58,worse,38) output(58,worse,52) output(58,worse,75) output(58,worse,64) output(58,worse,33) output(67,worse,44) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,33) output(24,worse,92) output(24,worse,38) output(24,worse,33) output(24,worse,64) output(24,worse,52) output(24,worse,75) output(24,worse,100) output(9,eq,75) output(64,eq,75) output(75,eq,52) output(92,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(100,eq,92) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(92,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,100) output(38,eq,100) output(33,eq,92) output(92,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(38,eq,52) output(51,eq,84) output(100,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(92,eq,52) output(100,eq,52) output(100,eq,75) output(33,eq,75) output(100,eq,64) output(33,eq,64) output(90,eq,51) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84)
Optimization: 91 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(3))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasPrep(4))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasCost(2))),7) preference(1,(1,11),1,for(atom(hasCost(1))),2) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(51,better,33) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(51,better,92) output(52,better,84) output(58,better,100) output(58,better,16) output(64,better,75) output(64,better,52) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,92) output(64,better,100) output(64,better,16) output(67,better,44) output(79,better,67) output(79,better,44) output(90,better,100) output(90,better,16) output(90,better,33) output(92,better,33) output(92,better,90) output(92,better,84) output(92,better,100) output(92,better,16) output(9,better,33) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,100) output(33,better,16) output(75,better,52) output(75,better,84) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,92) output(75,better,16) output(38,worse,24) output(51,worse,24) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,52) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,90) output(58,worse,33) output(58,worse,84) output(64,worse,24) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(92,worse,38) output(92,worse,51) output(92,worse,64) output(92,worse,75) output(92,worse,24) output(9,worse,75) output(9,worse,52) output(9,worse,51) output(9,worse,90) output(9,worse,64) output(9,worse,84) output(9,worse,38) output(9,worse,92) output(9,worse,24) output(33,worse,90) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,75) output(33,worse,64) output(33,worse,51) output(33,worse,52) output(33,worse,84) output(75,worse,51) output(75,worse,64) output(75,worse,38) output(75,worse,24) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(100,eq,16) output(38,eq,51) output(51,eq,64) output(38,eq,64) output(64,eq,51) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(51,eq,38) output(38,eq,38) output(64,eq,38) output(92,eq,52) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(90,eq,84)
Optimization: 75 14
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(38,better,51) output(38,better,33) output(38,better,100) output(38,better,75) output(38,better,24) output(38,better,16) output(51,better,75) output(51,better,16) output(51,better,100) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,75) output(58,better,51) output(58,better,33) output(64,better,75) output(64,better,52) output(64,better,51) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,38) output(64,better,92) output(64,better,24) output(64,better,100) output(64,better,16) output(67,better,44) output(79,better,67) output(79,better,44) output(90,better,100) output(90,better,24) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,75) output(90,better,51) output(90,better,33) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,75) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(9,better,75) output(9,better,51) output(9,better,33) output(9,better,100) output(9,better,16) output(24,better,33) output(24,better,51) output(24,better,75) output(24,better,100) output(24,better,16) output(33,better,100) output(33,better,16) output(33,better,75) output(75,better,16) output(100,better,16) output(100,better,75) output(38,worse,64) output(38,worse,90) output(38,worse,52) output(38,worse,84) output(38,worse,92) output(51,worse,64) output(51,worse,90) output(51,worse,24) output(51,worse,52) output(51,worse,84) output(51,worse,38) output(51,worse,92) output(52,worse,84) output(58,worse,92) output(58,worse,38) output(58,worse,52) output(58,worse,64) output(58,worse,90) output(58,worse,84) output(90,worse,64) output(92,worse,64) output(9,worse,52) output(9,worse,90) output(9,worse,64) output(9,worse,84) output(9,worse,38) output(9,worse,92) output(24,worse,92) output(24,worse,38) output(24,worse,64) output(24,worse,84) output(24,worse,52) output(24,worse,90) output(33,worse,90) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,64) output(33,worse,52) output(33,worse,84) output(75,worse,51) output(75,worse,52) output(75,worse,84) output(75,worse,64) output(75,worse,33) output(75,worse,90) output(75,worse,100) output(75,worse,38) output(75,worse,92) output(75,worse,24) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(51,eq,33) output(51,eq,51) output(92,eq,90) output(90,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(92,eq,84) output(33,eq,51) output(92,eq,92) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(90,eq,84)
Optimization: 75 13
Progression : [11;75] (Error: 5.81818)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasPrep(4))),1) preference(1,(1,6),1,for(atom(hasPrep(3))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),4) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasPrepTime(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(38,better,16) output(51,better,16) output(51,better,38) output(58,better,16) output(58,better,38) output(58,better,51) output(64,better,51) output(64,better,38) output(64,better,16) output(67,better,44) output(79,better,67) output(79,better,44) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,64) output(90,better,51) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(38,worse,51) output(38,worse,64) output(38,worse,33) output(38,worse,90) output(38,worse,100) output(38,worse,75) output(38,worse,52) output(38,worse,84) output(38,worse,92) output(38,worse,24) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,100) output(51,worse,24) output(51,worse,52) output(51,worse,84) output(51,worse,92) output(52,worse,84) output(58,worse,100) output(58,worse,24) output(58,worse,92) output(58,worse,75) output(58,worse,90) output(58,worse,33) output(58,worse,84) output(64,worse,75) output(64,worse,33) output(64,worse,90) output(64,worse,84) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,75) output(90,worse,33) output(24,worse,92) output(24,worse,75) output(33,worse,24) output(33,worse,92) output(33,worse,75) output(100,worse,24) output(100,worse,92) output(100,worse,75) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(58,eq,52) output(58,eq,64) output(75,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 64 14
Progression : [12;64] (Error: 4.33333)
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(38,better,64) output(38,better,33) output(38,better,100) output(38,better,52) output(38,better,92) output(38,better,16) output(51,better,33) output(51,better,64) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(58,better,100) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,16) output(90,better,100) output(90,better,16) output(90,better,92) output(90,better,38) output(90,better,52) output(90,better,64) output(90,better,33) output(92,better,33) output(92,better,64) output(92,better,52) output(92,better,100) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,16) output(33,better,64) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,16) output(100,better,16) output(100,better,64) output(38,worse,51) output(38,worse,90) output(38,worse,75) output(38,worse,84) output(38,worse,24) output(51,worse,24) output(52,worse,84) output(58,worse,24) output(64,worse,75) output(64,worse,52) output(64,worse,51) output(64,worse,33) output(64,worse,90) output(64,worse,84) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(67,worse,44) output(79,worse,67) output(79,worse,44) output(90,worse,24) output(90,worse,75) output(90,worse,51) output(92,worse,38) output(92,worse,51) output(92,worse,90) output(92,worse,75) output(92,worse,84) output(92,worse,24) output(9,worse,24) output(33,worse,90) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,75) output(33,worse,51) output(33,worse,52) output(33,worse,84) output(75,worse,51) output(75,worse,24) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,90) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(58,eq,51) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 62 12
Progression : [13;62] (Error: 3.76923)
Progression : [14;62] (Error: 3.42857)
Progression : [15;62] (Error: 3.13333)
Progression : [16;62] (Error: 2.875)
Progression : [17;62] (Error: 2.64706)
Progression : [18;62] (Error: 2.44444)
Progression : [19;62] (Error: 2.26316)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(1))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(38,better,64) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(51,better,33) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(58,better,100) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,64) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,52) output(64,better,90) output(64,better,84) output(90,better,52) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,92) output(33,better,38) output(33,better,64) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,16) output(100,better,16) output(100,better,92) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(38,worse,51) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,24) output(51,worse,75) output(51,worse,24) output(52,worse,84) output(58,worse,24) output(58,worse,75) output(58,worse,51) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(67,worse,44) output(79,worse,67) output(79,worse,44) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(9,worse,24) output(33,worse,24) output(33,worse,75) output(33,worse,51) output(75,worse,24) output(100,worse,24) output(100,worse,51) output(100,worse,75) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(64,eq,16) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 57 8
Progression : [20;57] (Error: 1.85)
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),7) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(38,better,51) output(38,better,64) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,24) output(38,better,16) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,92) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,90) output(64,better,84) output(79,better,67) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,16) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,24) output(33,better,92) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,92) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,24) output(100,better,92) output(100,better,51) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(51,worse,33) output(51,worse,75) output(51,worse,100) output(51,worse,38) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(67,worse,44) output(79,worse,44) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,100) output(9,worse,38) output(24,worse,92) output(24,worse,38) output(24,worse,33) output(24,worse,51) output(24,worse,75) output(24,worse,100) output(33,worse,38) output(33,worse,75) output(75,worse,38) output(100,worse,38) output(100,worse,75) output(9,eq,75) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(58,eq,38) output(38,eq,38) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(64,eq,16) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 56 10
Progression : [21;56] (Error: 1.66667)
Progression : [22;56] (Error: 1.54545)
Progression : [23;56] (Error: 1.43478)
Progression : [24;56] (Error: 1.33333)
Progression : [25;56] (Error: 1.24)
Progression : [26;56] (Error: 1.15385)
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasPrep(3))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),3) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(38,better,51) output(38,better,64) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,92) output(52,better,84) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,84) output(64,better,90) output(64,better,84) output(64,better,16) output(79,better,67) output(90,better,16) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,24) output(33,better,92) output(33,better,38) output(33,better,75) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,90) output(75,better,38) output(75,better,92) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,24) output(100,better,92) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,75) output(100,better,64) output(100,better,90) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,24) output(51,worse,33) output(51,worse,75) output(51,worse,100) output(51,worse,24) output(51,worse,38) output(58,worse,100) output(58,worse,24) output(58,worse,75) output(58,worse,33) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(67,worse,44) output(79,worse,44) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(24,worse,33) output(24,worse,75) output(24,worse,100) output(75,worse,33) output(75,worse,100) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 55 12
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasPrep(1))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(38,better,64) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,16) output(51,better,33) output(51,better,64) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,90) output(64,better,84) output(64,better,16) output(79,better,67) output(90,better,16) output(92,better,38) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,92) output(33,better,38) output(33,better,64) output(33,better,52) output(33,better,84) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,90) output(75,better,38) output(75,better,92) output(75,better,16) output(100,better,16) output(100,better,92) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(38,worse,51) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,92) output(38,worse,24) output(51,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(67,worse,44) output(79,worse,44) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(33,worse,24) output(33,worse,51) output(75,worse,51) output(75,worse,24) output(100,worse,24) output(100,worse,51) output(64,eq,52) output(33,eq,100) output(75,eq,33) output(51,eq,51) output(75,eq,100) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(100,eq,75) output(33,eq,75) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 53 10
Answer: 13
preference(1,(1,4),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasPrep(3))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(38,better,64) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,16) output(51,better,33) output(51,better,64) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,90) output(64,better,84) output(64,better,16) output(67,better,44) output(79,better,44) output(90,better,16) output(92,better,38) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,16) output(33,better,92) output(33,better,38) output(33,better,75) output(33,better,64) output(33,better,52) output(33,better,84) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,90) output(75,better,38) output(75,better,16) output(100,better,16) output(100,better,92) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,75) output(100,better,64) output(100,better,90) output(38,worse,51) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,92) output(38,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,51) output(92,worse,33) output(92,worse,24) output(92,worse,100) output(24,worse,51) output(33,worse,24) output(33,worse,51) output(75,worse,51) output(75,worse,33) output(75,worse,100) output(75,worse,24) output(100,worse,24) output(100,worse,51) output(79,eq,67) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(58,eq,51) output(75,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(90,eq,84)
Optimization: 52 9
Progression : [27;52] (Error: 0.925926)
Progression : [28;52] (Error: 0.857143)
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasPrep(3))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),2) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(38,better,64) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,24) output(38,better,16) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,24) output(51,better,52) output(51,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,90) output(64,better,84) output(64,better,16) output(67,better,44) output(79,better,67) output(79,better,44) output(90,better,16) output(92,better,38) output(92,better,51) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,24) output(33,better,92) output(33,better,38) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,24) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,92) output(51,worse,33) output(51,worse,75) output(51,worse,100) output(51,worse,92) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,33) output(92,worse,75) output(24,worse,92) output(24,worse,38) output(24,worse,33) output(24,worse,51) output(24,worse,75) output(24,worse,100) output(33,worse,75) output(100,worse,75) output(100,worse,33) output(38,eq,51) output(64,eq,52) output(100,eq,92) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(51,eq,38) output(38,eq,38) output(58,eq,75) output(92,eq,92) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(90,eq,84)
Optimization: 51 12
Progression : [29;51] (Error: 0.758621)
Progression : [30;51] (Error: 0.7)
Progression : [31;51] (Error: 0.645161)
Progression : [32;51] (Error: 0.59375)
Progression : [33;51] (Error: 0.545455)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(3))),3) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),7) preference(1,less(weight)) output(38,better,64) output(38,better,90) output(38,better,84) output(38,better,16) output(51,better,33) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,90) output(64,better,84) output(64,better,16) output(67,better,44) output(79,better,44) output(90,better,16) output(92,better,38) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,100) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(38,worse,51) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,92) output(38,worse,24) output(51,worse,75) output(51,worse,24) output(64,worse,75) output(64,worse,52) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(79,worse,67) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,51) output(92,worse,75) output(92,worse,24) output(24,worse,75) output(33,worse,24) output(33,worse,92) output(33,worse,75) output(33,worse,51) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,75) output(100,worse,33) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,52) output(38,eq,38) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(90,eq,84)
Optimization: 50 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(1))),5) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),4) preference(1,(1,5),1,for(atom(hasPrep(3))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrepTime(1))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(38,better,64) output(38,better,90) output(38,better,84) output(38,better,16) output(51,better,33) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(64,better,90) output(64,better,84) output(64,better,16) output(67,better,44) output(79,better,67) output(79,better,44) output(90,better,16) output(92,better,38) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(24,better,38) output(24,better,33) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,52) output(33,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,24) output(75,better,16) output(100,better,16) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(38,worse,51) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,92) output(38,worse,24) output(51,worse,75) output(64,worse,75) output(64,worse,52) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(92,worse,51) output(92,worse,75) output(24,worse,92) output(24,worse,51) output(24,worse,75) output(33,worse,24) output(33,worse,92) output(33,worse,75) output(33,worse,51) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,75) output(100,worse,33) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,52) output(38,eq,38) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(90,eq,84)
Optimization: 49 12
Progression : [34;49] (Error: 0.441176)
Progression : [35;49] (Error: 0.4)
Progression : [36;49] (Error: 0.361111)
Progression : [37;49] (Error: 0.324324)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.025 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 49 12
Bounds       : [37;49] [0;12]
Calls        : 1
Time         : 297.949s (Solving: 295.64s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1184.740s
Threads      : 4        (Winner: 4)

Choices      : 13943120 (Domain: 2373528)
Conflicts    : 11129648 (Analyzed: 11129621)
Restarts     : 8998     (Average: 1236.90 Last: 662964)
Model-Level  : 53.1    
Problems     : 32       (Average Length: 0.12 Splits: 0)
Lemmas       : 11340560 (Deleted: 10995887)
  Binary     : 598      (Ratio:   0.01%)
  Ternary    : 15193    (Ratio:   0.13%)
  Conflict   : 11129621 (Average Length:   97.2 Ratio:  98.14%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 210939   (Average Length:   29.0 Ratio:   1.86%) 
  Distributed: 70459    (Ratio:   0.63% Average LBD: 3.66) 
  Integrated : 211377   (Ratio: 300.00% Unit: 381 Average Jumps: 4.94)
Backjumps    : 11129621 (Average:  1.23 Max:  66 Sum: 13716264)
  Executed   : 11129586 (Average:  1.23 Max:  66 Sum: 13715634 Ratio: 100.00%)
  Bounded    : 35       (Average: 18.00 Max:  65 Sum:    630 Ratio:   0.00%)

Rules        : 257718  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 18948   
Bodies       : 6706    
  Sum        : 241     
  Count      : 14      
Equivalences : 10385    (Atom=Atom: 1405 Body=Body: 620 Other: 8360)
Tight        : Yes
Variables    : 5158     (Eliminated:    0 Frozen: 3688)
Constraints  : 247388   (Binary:  98.6% Ternary:   0.6% Other:   0.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(3)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(1)) 
}.
