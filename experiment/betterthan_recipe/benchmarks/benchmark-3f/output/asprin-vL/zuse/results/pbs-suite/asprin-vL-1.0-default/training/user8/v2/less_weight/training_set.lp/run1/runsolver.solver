asprin_vL version 1.0
Reading from stdin
-:1230:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1240:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1255:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1336:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1597:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1610:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1787:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1916:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1988:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1992:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1992:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1998:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2097:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2123:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2243:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2277:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2299:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1147:1-16: info: no atoms over signature occur in program:
  output/3

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(23,eq,72) output(72,eq,42) output(42,eq,90) output(90,eq,18) output(18,eq,51) output(51,eq,79) output(41,eq,92) output(32,eq,76) output(4,eq,72) output(42,eq,18) output(18,eq,37) output(90,eq,37) output(42,eq,37) output(72,eq,18) output(18,eq,79) output(90,eq,51) output(42,eq,51) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(23,eq,90) output(4,eq,90) output(72,eq,51) output(23,eq,51) output(4,eq,51) output(90,eq,79) output(42,eq,79) output(72,eq,79) output(23,eq,18) output(4,eq,18) output(72,eq,37) output(23,eq,37) output(4,eq,37) output(23,eq,79) output(4,eq,79)
Optimization: 35 0
Answer: 2
preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(51,better,79) output(4,worse,51) output(90,worse,51) output(18,worse,51) output(23,worse,51) output(42,worse,51) output(72,worse,51) output(23,eq,72) output(72,eq,42) output(42,eq,90) output(90,eq,18) output(41,eq,92) output(32,eq,76) output(4,eq,72) output(42,eq,18) output(18,eq,37) output(90,eq,37) output(42,eq,37) output(72,eq,18) output(18,eq,79) output(72,eq,90) output(23,eq,42) output(4,eq,42) output(23,eq,90) output(4,eq,90) output(90,eq,79) output(42,eq,79) output(72,eq,79) output(23,eq,18) output(4,eq,18) output(72,eq,37) output(23,eq,37) output(4,eq,37) output(23,eq,79) output(4,eq,79)
Optimization: 34 5
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(51,better,79) output(90,better,37) output(90,better,79) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(42,better,37) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,79) output(90,worse,18) output(90,worse,51) output(18,worse,51) output(41,worse,92) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,79) output(72,worse,42) output(72,worse,18) output(72,worse,90) output(72,worse,51) output(72,worse,79) output(4,eq,37)
Optimization: 20 12
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(4))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrep(7))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(42,better,37) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,worse,79) output(90,worse,18) output(41,worse,92) output(42,worse,90) output(42,worse,18) output(42,worse,51) output(42,worse,79) output(72,worse,42) output(72,worse,18) output(72,worse,90) output(72,worse,51) output(72,worse,79) output(51,eq,79) output(4,eq,37)
Optimization: 19 13
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(4,better,72) output(4,better,42) output(4,better,51) output(4,better,18) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(18,better,51) output(32,better,76) output(42,better,18) output(42,better,37) output(42,better,51) output(72,better,42) output(72,better,18) output(72,better,51) output(72,better,37) output(51,worse,79) output(18,worse,37) output(18,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,90) output(23,worse,51) output(23,worse,18) output(23,worse,37) output(23,worse,79) output(41,worse,92) output(42,worse,90) output(42,worse,79) output(72,worse,90) output(72,worse,79) output(4,eq,90) output(90,eq,79) output(4,eq,79)
Optimization: 18 6
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(1))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCost(2))),6) preference(1,(1,12),1,for(atom(hasPrep(4))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(51,better,79) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,37) output(18,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(23,worse,72) output(23,worse,42) output(23,worse,90) output(23,worse,51) output(23,worse,18) output(72,eq,42) output(18,eq,51) output(23,eq,37) output(4,eq,37) output(23,eq,79) output(4,eq,79)
Optimization: 16 14
Progression : [ 1;16] (Error: 15)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(4,better,42) output(4,better,51) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,51) output(32,better,76) output(41,better,92) output(42,better,37) output(42,better,51) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,90) output(4,worse,18) output(51,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,90) output(23,worse,18) output(23,worse,37) output(23,worse,79) output(42,worse,90) output(42,worse,18) output(42,worse,79) output(4,eq,79)
Optimization: 14 10
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,51) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,18) output(51,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,90) output(23,worse,18) output(23,worse,37) output(23,worse,79) output(4,eq,79)
Optimization: 12 9
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,51) output(23,better,37) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,18) output(51,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,90) output(23,worse,18) output(23,worse,79) output(4,eq,79)
Optimization: 11 10
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),4) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,18) output(51,worse,79) output(23,worse,72) output(23,worse,42) output(23,worse,90) output(42,worse,90) output(4,eq,79)
Optimization: 10 10
Progression : [ 2;10] (Error: 4)
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(4,better,37) output(51,better,79) output(90,better,37) output(90,better,79) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(90,eq,18) output(18,eq,51) output(90,eq,51) output(4,eq,79)
Optimization: 9 10
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(4,better,18) output(4,better,37) output(51,better,79) output(90,better,18) output(90,better,37) output(90,better,79) output(18,better,37) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(18,worse,51) output(18,worse,79) output(90,eq,51) output(4,eq,79)
Optimization: 8 10
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,37) output(90,better,37) output(90,better,51) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,18) output(51,worse,79) output(90,worse,18) output(90,worse,79) output(23,worse,72) output(4,eq,79)
Optimization: 8 9
Progression : [3;8] (Error: 1.66667)
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),1) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(18,better,51) output(18,better,37) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(51,worse,79) output(90,worse,79) output(18,worse,79) output(32,eq,76) output(4,eq,79)
Optimization: 7 10
Progression : [4;7] (Error: 0.75)
Answer: 15
preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,18) output(51,worse,79) output(4,eq,79)
Optimization: 6 12
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(7))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(18,better,51) output(18,better,37) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,79) output(51,worse,79) output(90,worse,79) output(18,worse,79)
Optimization: 6 11
Progression : [5;6] (Error: 0.2)
Progression : [6;6] (Error: 0)
Progression : 6 [ 1;11] (Error: 10)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(4,better,90) output(4,better,51) output(4,better,18) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(18,better,51) output(18,better,37) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(51,worse,79) output(90,worse,79) output(18,worse,79) output(4,eq,79)
Optimization: 6 10
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(4,better,37) output(51,better,79) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,eq,79)
Optimization: 6 9
Answer: 19
preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,11),1,for(atom(hasCost(2))),1) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasDifficulty(2))),8) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(4,better,51) output(4,better,37) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,18) output(51,worse,79) output(4,eq,79)
Optimization: 6 8
Progression : 6 [2;8] (Error: 3)
Answer: 20
preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,12),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(4,better,37) output(51,better,79) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,eq,79)
Optimization: 6 6
Answer: 21
preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(4,better,37) output(51,better,79) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,eq,79)
Optimization: 6 5
Answer: 22
preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(4,better,37) output(51,better,79) output(90,better,18) output(90,better,37) output(90,better,51) output(90,better,79) output(18,better,51) output(18,better,37) output(18,better,79) output(23,better,72) output(23,better,42) output(23,better,90) output(23,better,51) output(23,better,18) output(23,better,37) output(23,better,79) output(32,better,76) output(41,better,92) output(42,better,90) output(42,better,18) output(42,better,37) output(42,better,51) output(42,better,79) output(72,better,42) output(72,better,18) output(72,better,90) output(72,better,51) output(72,better,79) output(72,better,37) output(4,worse,72) output(4,worse,42) output(4,worse,90) output(4,worse,51) output(4,worse,18) output(4,eq,79)
Optimization: 6 4
Progression : 6 [3;4] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.033 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 6 4
Bounds       : 6 [3;4]
Calls        : 1
Time         : 297.931s (Solving: 296.30s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1186.176s
Threads      : 4        (Winner: 4)

Choices      : 8913442  (Domain: 522184)
Conflicts    : 8119410  (Analyzed: 8119401)
Restarts     : 6590     (Average: 1232.08 Last: 432722)
Model-Level  : 34.6    
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 8253483  (Deleted: 7881384)
  Binary     : 897      (Ratio:   0.01%)
  Ternary    : 3532     (Ratio:   0.04%)
  Conflict   : 8119401  (Average Length:  205.4 Ratio:  98.38%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 134082   (Average Length:  173.7 Ratio:   1.62%) 
  Distributed: 44854    (Ratio:   0.55% Average LBD: 3.75) 
  Integrated : 134562   (Ratio: 300.00% Unit: 78 Average Jumps: 5.63)
Backjumps    : 8119401  (Average:  1.09 Max:  41 Sum: 8832508)
  Executed   : 8119390  (Average:  1.09 Max:  41 Sum: 8832473 Ratio: 100.00%)
  Bounded    : 11       (Average:  3.18 Max:  14 Sum:     35 Ratio:   0.00%)

Rules        : 96345   
  Choice     : 15      
  Minimize   : 2       
Atoms        : 9010    
Bodies       : 5624    
  Sum        : 68      
  Count      : 14      
Equivalences : 3647     (Atom=Atom: 368 Body=Body: 159 Other: 3120)
Tight        : Yes
Variables    : 4762     (Eliminated:    0 Frozen: 3292)
Constraints  : 95231    (Binary:  96.8% Ternary:   1.6% Other:   1.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) 
}.
