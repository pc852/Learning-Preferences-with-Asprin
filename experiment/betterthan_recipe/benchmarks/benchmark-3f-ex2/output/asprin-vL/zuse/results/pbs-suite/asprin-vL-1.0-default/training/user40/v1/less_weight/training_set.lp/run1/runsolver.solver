asprin_vL version 1.0
Reading from stdin
-:1311:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1321:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1336:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1417:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1678:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1691:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1868:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1997:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2069:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2073:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2073:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2079:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2178:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2204:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2324:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2358:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2380:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1228:1-16: info: no atoms over signature occur in program:
  output/3

-:1220:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1221:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(21,eq,60) output(60,eq,32) output(32,eq,73) output(57,eq,56) output(56,eq,89) output(89,eq,67) output(67,eq,72) output(100,eq,21) output(73,eq,57) output(16,eq,17) output(17,eq,15) output(15,eq,67) output(67,eq,57) output(57,eq,20) output(89,eq,5) output(51,eq,16) output(82,eq,89) output(56,eq,5) output(82,eq,5) output(73,eq,20) output(67,eq,20) output(89,eq,57) output(15,eq,57) output(17,eq,67) output(16,eq,15) output(51,eq,17) output(32,eq,57) output(89,eq,72) output(15,eq,72) output(56,eq,67) output(82,eq,67) output(57,eq,89) output(73,eq,56) output(67,eq,56) output(60,eq,73) output(21,eq,32) output(100,eq,60) output(100,eq,32) output(21,eq,73) output(100,eq,73) output(89,eq,56) output(15,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(32,eq,56) output(60,eq,56) output(73,eq,89) output(67,eq,89) output(89,eq,89) output(15,eq,89) output(32,eq,89) output(57,eq,67) output(73,eq,67) output(67,eq,67) output(17,eq,72) output(16,eq,72) output(56,eq,72) output(82,eq,72) output(57,eq,72) output(60,eq,57) output(21,eq,57) output(51,eq,15) output(16,eq,67) output(51,eq,67) output(17,eq,57) output(16,eq,57) output(56,eq,57) output(82,eq,57) output(57,eq,57) output(89,eq,20) output(15,eq,20) output(17,eq,20) output(56,eq,20) output(82,eq,20) output(32,eq,20) output(60,eq,20) output(57,eq,5) output(73,eq,5) output(67,eq,5) output(15,eq,5) output(17,eq,5) output(16,eq,5) output(51,eq,5) output(32,eq,5) output(60,eq,5) output(21,eq,5) output(100,eq,5) output(21,eq,20) output(100,eq,20) output(16,eq,20) output(51,eq,20) output(51,eq,57) output(100,eq,57) output(73,eq,72) output(32,eq,72) output(60,eq,72) output(21,eq,72) output(51,eq,72) output(32,eq,67) output(60,eq,67) output(21,eq,67) output(100,eq,67) output(60,eq,89) output(21,eq,89) output(100,eq,89) output(17,eq,89) output(16,eq,89) output(51,eq,89) output(21,eq,56) output(100,eq,56) output(16,eq,56) output(51,eq,56) output(100,eq,72)
Optimization: 114 0
Answer: 2
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(5))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasIngredient(9))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasPrep(7))),1) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(51,better,17) output(51,better,15) output(60,better,32) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(56,better,20) output(89,better,20) output(100,better,32) output(16,better,17) output(16,better,15) output(16,better,20) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,5) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(51,worse,16) output(51,worse,67) output(51,worse,5) output(51,worse,57) output(51,worse,72) output(51,worse,89) output(51,worse,56) output(60,worse,73) output(60,worse,56) output(60,worse,57) output(60,worse,5) output(60,worse,72) output(60,worse,67) output(60,worse,89) output(15,worse,67) output(15,worse,57) output(15,worse,72) output(15,worse,56) output(15,worse,89) output(15,worse,20) output(15,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(82,worse,89) output(82,worse,5) output(82,worse,67) output(82,worse,56) output(82,worse,72) output(82,worse,57) output(82,worse,20) output(89,worse,67) output(89,worse,57) output(89,worse,72) output(100,worse,21) output(100,worse,60) output(100,worse,73) output(100,worse,5) output(100,worse,20) output(100,worse,57) output(100,worse,67) output(100,worse,89) output(100,worse,56) output(100,worse,72) output(16,worse,72) output(16,worse,67) output(16,worse,57) output(32,worse,73) output(32,worse,57) output(32,worse,56) output(32,worse,89) output(32,worse,20) output(32,worse,5) output(32,worse,72) output(32,worse,67) output(17,worse,67) output(17,worse,56) output(17,worse,72) output(17,worse,57) output(17,worse,20) output(17,worse,5) output(17,worse,89) output(56,eq,89) output(67,eq,72) output(67,eq,57) output(89,eq,5) output(56,eq,5) output(21,eq,73) output(89,eq,56) output(56,eq,56) output(89,eq,89) output(57,eq,67) output(67,eq,67) output(57,eq,72) output(57,eq,57) output(60,eq,20) output(16,eq,5) output(51,eq,20) output(16,eq,89) output(16,eq,56)
Optimization: 80 13
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(5))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasIngredient(9))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasIngredient(6))),1) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(51,better,17) output(51,better,15) output(60,better,32) output(67,better,57) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(56,better,20) output(89,better,20) output(100,better,32) output(16,better,17) output(16,better,15) output(16,better,20) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,5) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(51,worse,16) output(51,worse,67) output(51,worse,5) output(51,worse,57) output(51,worse,72) output(51,worse,89) output(51,worse,56) output(60,worse,73) output(60,worse,56) output(60,worse,57) output(60,worse,5) output(60,worse,72) output(60,worse,67) output(60,worse,89) output(15,worse,67) output(15,worse,57) output(15,worse,72) output(15,worse,56) output(15,worse,89) output(15,worse,20) output(15,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(82,worse,89) output(82,worse,5) output(82,worse,67) output(82,worse,56) output(82,worse,72) output(82,worse,57) output(82,worse,20) output(89,worse,67) output(89,worse,57) output(89,worse,72) output(100,worse,21) output(100,worse,60) output(100,worse,73) output(100,worse,5) output(100,worse,20) output(100,worse,57) output(100,worse,67) output(100,worse,89) output(100,worse,56) output(100,worse,72) output(16,worse,72) output(16,worse,67) output(16,worse,57) output(32,worse,73) output(32,worse,57) output(32,worse,56) output(32,worse,89) output(32,worse,20) output(32,worse,5) output(32,worse,72) output(32,worse,67) output(57,worse,67) output(57,worse,72) output(17,worse,67) output(17,worse,56) output(17,worse,72) output(17,worse,57) output(17,worse,20) output(17,worse,5) output(17,worse,89) output(56,eq,89) output(67,eq,72) output(89,eq,5) output(56,eq,5) output(21,eq,73) output(89,eq,56) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(60,eq,20) output(16,eq,5) output(51,eq,20) output(16,eq,89) output(16,eq,56)
Optimization: 79 13
Answer: 4
preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(51,better,16) output(51,better,5) output(51,better,20) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,73) output(60,better,56) output(60,better,20) output(60,better,5) output(60,better,72) output(60,better,89) output(67,better,72) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,20) output(15,better,5) output(82,better,89) output(82,better,5) output(82,better,56) output(82,better,72) output(82,better,20) output(100,better,21) output(100,better,32) output(100,better,73) output(100,better,5) output(100,better,20) output(100,better,89) output(100,better,56) output(100,better,72) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,72) output(57,better,5) output(17,better,56) output(17,better,72) output(17,better,20) output(17,better,5) output(17,better,89) output(56,worse,67) output(56,worse,57) output(89,worse,67) output(89,worse,57) output(16,worse,17) output(16,worse,15) output(16,worse,67) output(16,worse,57) output(21,worse,60) output(21,worse,57) output(21,worse,67) output(32,worse,57) output(32,worse,67) output(73,worse,57) output(73,worse,67) output(32,eq,73) output(56,eq,89) output(17,eq,15) output(15,eq,67) output(67,eq,57) output(89,eq,5) output(56,eq,5) output(73,eq,20) output(15,eq,57) output(17,eq,67) output(51,eq,17) output(89,eq,72) output(82,eq,67) output(73,eq,56) output(21,eq,32) output(100,eq,60) output(21,eq,73) output(89,eq,56) output(56,eq,56) output(32,eq,56) output(73,eq,89) output(89,eq,89) output(32,eq,89) output(57,eq,67) output(67,eq,67) output(16,eq,72) output(56,eq,72) output(60,eq,57) output(51,eq,15) output(51,eq,67) output(17,eq,57) output(82,eq,57) output(57,eq,57) output(89,eq,20) output(56,eq,20) output(32,eq,20) output(73,eq,5) output(16,eq,5) output(32,eq,5) output(21,eq,5) output(21,eq,20) output(16,eq,20) output(51,eq,57) output(100,eq,57) output(73,eq,72) output(32,eq,72) output(21,eq,72) output(60,eq,67) output(100,eq,67) output(21,eq,89) output(16,eq,89) output(21,eq,56) output(16,eq,56)
Optimization: 68 2
Answer: 5
preference(1,(1,4),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(51,better,16) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,73) output(60,better,56) output(60,better,57) output(60,better,20) output(60,better,5) output(60,better,72) output(60,better,89) output(67,better,72) output(67,better,57) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,57) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,20) output(15,better,5) output(82,better,89) output(82,better,5) output(82,better,56) output(82,better,72) output(82,better,57) output(82,better,20) output(100,better,21) output(100,better,32) output(100,better,73) output(100,better,5) output(100,better,20) output(100,better,57) output(100,better,89) output(100,better,56) output(100,better,72) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,20) output(17,better,5) output(17,better,89) output(56,worse,67) output(89,worse,67) output(16,worse,17) output(16,worse,15) output(16,worse,67) output(21,worse,60) output(21,worse,67) output(32,worse,67) output(57,worse,67) output(73,worse,67) output(32,eq,73) output(57,eq,56) output(56,eq,89) output(73,eq,57) output(17,eq,15) output(15,eq,67) output(57,eq,20) output(89,eq,5) output(56,eq,5) output(73,eq,20) output(89,eq,57) output(17,eq,67) output(51,eq,17) output(32,eq,57) output(89,eq,72) output(82,eq,67) output(57,eq,89) output(73,eq,56) output(21,eq,32) output(100,eq,60) output(21,eq,73) output(89,eq,56) output(56,eq,56) output(32,eq,56) output(73,eq,89) output(89,eq,89) output(32,eq,89) output(67,eq,67) output(16,eq,72) output(56,eq,72) output(57,eq,72) output(21,eq,57) output(51,eq,15) output(51,eq,67) output(16,eq,57) output(56,eq,57) output(57,eq,57) output(89,eq,20) output(56,eq,20) output(32,eq,20) output(57,eq,5) output(73,eq,5) output(16,eq,5) output(32,eq,5) output(21,eq,5) output(21,eq,20) output(16,eq,20) output(73,eq,72) output(32,eq,72) output(21,eq,72) output(60,eq,67) output(100,eq,67) output(21,eq,89) output(16,eq,89) output(21,eq,56) output(16,eq,56)
Optimization: 66 3
Progression : [ 5;66] (Error: 12.2)
Progression : [ 6;66] (Error: 10)
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasCategory(4))),7) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasCost(3))),3) preference(1,(1,10),1,for(atom(hasCategory(3))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasIngredient(9))),6) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,57) output(60,better,20) output(60,better,5) output(60,better,67) output(60,better,89) output(67,better,57) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,57) output(15,better,89) output(56,better,89) output(56,better,57) output(82,better,89) output(82,better,5) output(82,better,56) output(82,better,57) output(82,better,20) output(100,better,21) output(100,better,5) output(100,better,20) output(100,better,57) output(100,better,89) output(100,better,56) output(21,better,57) output(21,better,89) output(21,better,56) output(32,better,73) output(32,better,57) output(32,better,56) output(32,better,89) output(32,better,20) output(32,better,5) output(32,better,67) output(57,better,89) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(17,better,57) output(17,better,89) output(60,worse,32) output(60,worse,72) output(67,worse,72) output(15,worse,67) output(15,worse,72) output(15,worse,56) output(15,worse,20) output(15,worse,5) output(56,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,20) output(82,worse,72) output(89,worse,67) output(89,worse,5) output(89,worse,57) output(89,worse,72) output(89,worse,56) output(89,worse,20) output(100,worse,60) output(100,worse,32) output(100,worse,73) output(100,worse,72) output(16,worse,17) output(16,worse,15) output(16,worse,72) output(16,worse,67) output(16,worse,57) output(16,worse,5) output(16,worse,20) output(16,worse,89) output(16,worse,56) output(21,worse,60) output(21,worse,32) output(21,worse,73) output(21,worse,5) output(21,worse,20) output(21,worse,72) output(21,worse,67) output(57,worse,56) output(57,worse,20) output(57,worse,67) output(57,worse,72) output(57,worse,5) output(73,worse,72) output(17,worse,67) output(17,worse,56) output(17,worse,72) output(17,worse,20) output(17,worse,5) output(17,eq,15) output(82,eq,67) output(60,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(32,eq,72) output(100,eq,67)
Optimization: 59 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasIngredient(4))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),6) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),1) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasCategory(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,56) output(60,better,57) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,5) output(56,better,5) output(56,better,67) output(56,better,72) output(56,better,57) output(89,better,67) output(89,better,5) output(89,better,57) output(89,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,57) output(32,better,56) output(32,better,89) output(32,better,5) output(32,better,72) output(32,better,67) output(57,better,5) output(73,better,57) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,72) output(17,better,57) output(17,better,5) output(51,worse,20) output(60,worse,73) output(60,worse,20) output(67,worse,20) output(67,worse,56) output(67,worse,89) output(15,worse,67) output(15,worse,57) output(15,worse,72) output(15,worse,56) output(15,worse,89) output(15,worse,20) output(15,worse,5) output(56,worse,20) output(82,worse,89) output(82,worse,5) output(82,worse,67) output(82,worse,56) output(82,worse,72) output(82,worse,57) output(82,worse,20) output(89,worse,20) output(100,worse,21) output(100,worse,60) output(100,worse,32) output(100,worse,73) output(100,worse,5) output(100,worse,20) output(100,worse,57) output(100,worse,67) output(100,worse,89) output(100,worse,56) output(100,worse,72) output(16,worse,20) output(21,worse,73) output(21,worse,20) output(32,worse,73) output(32,worse,20) output(57,worse,56) output(57,worse,20) output(57,worse,89) output(17,worse,20) output(21,eq,60) output(56,eq,89) output(67,eq,72) output(67,eq,57) output(51,eq,16) output(73,eq,20) output(89,eq,56) output(17,eq,56) output(56,eq,56) output(89,eq,89) output(57,eq,67) output(67,eq,67) output(57,eq,72) output(57,eq,57) output(17,eq,89)
Optimization: 57 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasIngredient(4))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),1) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasCategory(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,56) output(60,better,57) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(15,better,67) output(15,better,57) output(15,better,72) output(15,better,5) output(56,better,5) output(56,better,67) output(56,better,72) output(56,better,57) output(89,better,67) output(89,better,5) output(89,better,57) output(89,better,72) output(100,better,5) output(100,better,57) output(100,better,67) output(100,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,57) output(32,better,5) output(32,better,72) output(32,better,67) output(73,better,57) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,67) output(17,better,72) output(17,better,57) output(17,better,5) output(51,worse,20) output(60,worse,73) output(60,worse,20) output(67,worse,20) output(67,worse,56) output(67,worse,89) output(15,worse,20) output(56,worse,20) output(82,worse,89) output(82,worse,56) output(82,worse,20) output(89,worse,20) output(100,worse,21) output(100,worse,60) output(100,worse,73) output(100,worse,20) output(16,worse,20) output(21,worse,73) output(21,worse,20) output(32,worse,73) output(32,worse,20) output(57,worse,56) output(57,worse,20) output(57,worse,89) output(17,worse,15) output(17,worse,56) output(17,worse,20) output(17,worse,89) output(21,eq,60) output(56,eq,89) output(67,eq,72) output(67,eq,57) output(51,eq,16) output(82,eq,5) output(73,eq,20) output(82,eq,67) output(100,eq,32) output(89,eq,56) output(15,eq,56) output(56,eq,56) output(32,eq,56) output(89,eq,89) output(15,eq,89) output(32,eq,89) output(57,eq,67) output(67,eq,67) output(82,eq,72) output(57,eq,72) output(82,eq,57) output(57,eq,57) output(57,eq,5) output(67,eq,5) output(100,eq,89) output(100,eq,56)
Optimization: 54 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasIngredient(4))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),1) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,57) output(60,better,5) output(60,better,89) output(67,better,57) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,57) output(15,better,5) output(56,better,5) output(56,better,57) output(89,better,5) output(89,better,57) output(100,better,5) output(100,better,57) output(16,better,15) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,57) output(32,better,56) output(32,better,89) output(32,better,20) output(32,better,5) output(32,better,72) output(32,better,67) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,20) output(17,better,5) output(17,better,89) output(60,worse,32) output(60,worse,73) output(60,worse,20) output(60,worse,72) output(60,worse,67) output(15,worse,67) output(15,worse,72) output(15,worse,20) output(56,worse,67) output(56,worse,72) output(56,worse,20) output(82,worse,89) output(82,worse,67) output(82,worse,56) output(82,worse,72) output(82,worse,20) output(89,worse,67) output(89,worse,72) output(89,worse,20) output(100,worse,21) output(100,worse,60) output(100,worse,32) output(100,worse,73) output(100,worse,20) output(100,worse,67) output(100,worse,72) output(16,worse,17) output(16,worse,72) output(16,worse,67) output(16,worse,20) output(21,worse,73) output(32,worse,73) output(57,worse,56) output(57,worse,20) output(57,worse,89) output(57,worse,67) output(57,worse,72) output(56,eq,89) output(67,eq,72) output(82,eq,5) output(89,eq,56) output(15,eq,56) output(56,eq,56) output(89,eq,89) output(15,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(57,eq,5) output(100,eq,89) output(100,eq,56)
Optimization: 51 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasIngredient(4))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),1) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasCategory(3))),5) preference(1,(1,13),1,for(atom(hasCategory(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,57) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,56) output(67,better,89) output(15,better,67) output(15,better,57) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,5) output(82,better,89) output(82,better,56) output(100,better,5) output(100,better,57) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,57) output(32,better,56) output(32,better,89) output(32,better,5) output(32,better,72) output(32,better,67) output(57,better,56) output(57,better,89) output(73,better,57) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,5) output(17,better,89) output(51,worse,20) output(60,worse,73) output(60,worse,20) output(67,worse,20) output(15,worse,20) output(56,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(56,worse,20) output(82,worse,20) output(89,worse,67) output(89,worse,5) output(89,worse,57) output(89,worse,72) output(89,worse,20) output(100,worse,21) output(100,worse,73) output(100,worse,20) output(16,worse,20) output(21,worse,73) output(21,worse,20) output(32,worse,73) output(32,worse,20) output(57,worse,20) output(17,worse,15) output(17,worse,20) output(60,eq,32) output(56,eq,89) output(67,eq,72) output(67,eq,57) output(51,eq,16) output(82,eq,5) output(73,eq,20) output(82,eq,67) output(100,eq,60) output(100,eq,32) output(89,eq,56) output(56,eq,56) output(89,eq,89) output(57,eq,67) output(67,eq,67) output(82,eq,72) output(57,eq,72) output(82,eq,57) output(57,eq,57) output(57,eq,5) output(67,eq,5)
Optimization: 48 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(5))),5) preference(1,(1,2),1,for(atom(hasIngredient(4))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),1) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasCost(1))),4) preference(1,(1,13),1,for(atom(hasCategory(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,57) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,56) output(67,better,89) output(15,better,67) output(15,better,57) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,5) output(82,better,89) output(82,better,56) output(100,better,60) output(100,better,5) output(100,better,57) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,57) output(21,better,5) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,57) output(32,better,56) output(32,better,89) output(32,better,5) output(32,better,72) output(32,better,67) output(57,better,56) output(57,better,89) output(73,better,57) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,5) output(17,better,89) output(51,worse,20) output(60,worse,32) output(60,worse,73) output(60,worse,20) output(67,worse,20) output(15,worse,20) output(56,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(56,worse,20) output(82,worse,20) output(89,worse,67) output(89,worse,5) output(89,worse,57) output(89,worse,72) output(89,worse,20) output(100,worse,21) output(100,worse,73) output(100,worse,20) output(16,worse,20) output(21,worse,73) output(21,worse,20) output(32,worse,73) output(32,worse,20) output(57,worse,20) output(17,worse,15) output(17,worse,20) output(56,eq,89) output(67,eq,72) output(67,eq,57) output(51,eq,16) output(82,eq,5) output(73,eq,20) output(82,eq,67) output(100,eq,32) output(89,eq,56) output(56,eq,56) output(89,eq,89) output(57,eq,67) output(67,eq,67) output(82,eq,72) output(57,eq,72) output(82,eq,57) output(57,eq,57) output(57,eq,5) output(67,eq,5)
Optimization: 47 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),1) preference(1,(1,2),1,for(atom(hasIngredient(7))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasCategory(4))),8) preference(1,(1,9),1,for(atom(hasCategory(1))),8) preference(1,(1,11),1,for(atom(hasCost(3))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasCost(1))),2) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,89) output(67,better,56) output(67,better,89) output(15,better,67) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,5) output(82,better,89) output(82,better,5) output(82,better,67) output(82,better,56) output(82,better,72) output(82,better,20) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,5) output(100,better,20) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,72) output(16,better,67) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,5) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,56) output(32,better,89) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,67) output(57,better,72) output(57,better,5) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,20) output(17,better,5) output(17,better,89) output(60,worse,73) output(60,worse,57) output(60,worse,20) output(60,worse,5) output(67,worse,57) output(67,worse,20) output(67,worse,5) output(15,worse,57) output(56,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(56,worse,20) output(89,worse,67) output(89,worse,5) output(89,worse,57) output(89,worse,72) output(89,worse,20) output(16,worse,17) output(16,worse,15) output(16,worse,57) output(16,worse,20) output(21,worse,57) output(32,worse,73) output(32,worse,57) output(32,worse,20) output(32,worse,5) output(73,worse,57) output(60,eq,32) output(56,eq,89) output(67,eq,72) output(73,eq,20) output(21,eq,73) output(89,eq,56) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(15,eq,20) output(16,eq,5) output(21,eq,20) output(100,eq,57) output(32,eq,72) output(60,eq,72) output(32,eq,67) output(60,eq,67)
Optimization: 47 13
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasCategory(3))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasCategory(4))),6) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(7))),3) preference(1,(1,12),1,for(atom(hasCost(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,73) output(60,better,56) output(60,better,20) output(60,better,5) output(60,better,72) output(60,better,89) output(67,better,72) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,20) output(15,better,5) output(56,better,72) output(56,better,20) output(82,better,89) output(82,better,5) output(82,better,67) output(82,better,56) output(82,better,72) output(82,better,20) output(89,better,72) output(89,better,20) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,5) output(100,better,20) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,72) output(16,better,20) output(21,better,32) output(21,better,20) output(21,better,72) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,67) output(57,better,72) output(57,better,5) output(73,better,20) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,20) output(17,better,5) output(17,better,89) output(60,worse,57) output(67,worse,57) output(15,worse,67) output(15,worse,57) output(56,worse,67) output(56,worse,57) output(89,worse,67) output(89,worse,57) output(16,worse,17) output(16,worse,15) output(16,worse,67) output(16,worse,57) output(21,worse,60) output(21,worse,57) output(21,worse,67) output(32,worse,73) output(32,worse,57) output(32,worse,56) output(32,worse,89) output(32,worse,5) output(32,worse,72) output(32,worse,67) output(73,worse,57) output(73,worse,67) output(56,eq,89) output(89,eq,5) output(56,eq,5) output(73,eq,56) output(21,eq,73) output(89,eq,56) output(56,eq,56) output(73,eq,89) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(32,eq,20) output(73,eq,5) output(16,eq,5) output(21,eq,5) output(100,eq,57) output(60,eq,67) output(21,eq,89) output(16,eq,89) output(21,eq,56) output(16,eq,56)
Optimization: 46 13
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasCategory(3))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasCategory(4))),6) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(9))),1) preference(1,(1,12),1,for(atom(hasCost(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),7) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,73) output(60,better,56) output(60,better,57) output(60,better,20) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,72) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,20) output(15,better,5) output(56,better,72) output(82,better,89) output(82,better,5) output(82,better,67) output(82,better,56) output(82,better,72) output(82,better,20) output(89,better,5) output(89,better,72) output(89,better,56) output(89,better,20) output(100,better,21) output(100,better,32) output(100,better,73) output(100,better,5) output(100,better,20) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,72) output(21,better,32) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,56) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,67) output(57,better,72) output(57,better,5) output(73,better,20) output(73,better,56) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,20) output(17,better,5) output(17,better,89) output(67,worse,57) output(15,worse,67) output(15,worse,57) output(56,worse,89) output(56,worse,67) output(56,worse,57) output(89,worse,67) output(89,worse,57) output(100,worse,60) output(16,worse,17) output(16,worse,15) output(16,worse,67) output(16,worse,57) output(16,worse,89) output(21,worse,60) output(21,worse,57) output(21,worse,67) output(32,worse,73) output(32,worse,57) output(32,worse,56) output(32,worse,89) output(32,worse,20) output(32,worse,5) output(32,worse,72) output(32,worse,67) output(73,worse,57) output(73,worse,67) output(56,eq,5) output(21,eq,73) output(56,eq,56) output(73,eq,89) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(56,eq,20) output(16,eq,5) output(16,eq,20) output(100,eq,57) output(21,eq,89) output(16,eq,56)
Optimization: 41 13
Answer: 15
preference(1,(1,1),1,for(atom(hasIngredient(6))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasCategory(3))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(3))),3) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,56) output(60,better,57) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,72) output(67,better,56) output(15,better,67) output(15,better,57) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,5) output(56,better,72) output(82,better,89) output(82,better,67) output(82,better,56) output(82,better,72) output(89,better,72) output(89,better,56) output(100,better,32) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,5) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,56) output(32,better,89) output(32,better,72) output(32,better,67) output(57,better,56) output(57,better,89) output(57,better,67) output(57,better,72) output(73,better,57) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,5) output(17,better,89) output(60,worse,20) output(67,worse,57) output(67,worse,20) output(67,worse,5) output(15,worse,20) output(56,worse,89) output(56,worse,5) output(56,worse,67) output(56,worse,57) output(56,worse,20) output(82,worse,5) output(82,worse,57) output(82,worse,20) output(89,worse,5) output(89,worse,57) output(89,worse,20) output(100,worse,21) output(100,worse,60) output(100,worse,73) output(100,worse,5) output(100,worse,20) output(100,worse,57) output(16,worse,20) output(21,worse,20) output(32,worse,73) output(32,worse,57) output(32,worse,20) output(32,worse,5) output(57,worse,20) output(73,worse,20) output(17,worse,20) output(89,eq,67) output(60,eq,73) output(56,eq,56) output(67,eq,89) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(57,eq,5) output(51,eq,20)
Optimization: 40 11
Answer: 16
preference(1,(1,1),1,for(atom(hasCategory(3))),7) preference(1,(1,2),1,for(atom(hasCategory(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(3))),3) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,72) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,5) output(82,better,89) output(82,better,5) output(82,better,67) output(82,better,56) output(82,better,72) output(89,better,56) output(100,better,60) output(100,better,32) output(100,better,5) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,56) output(32,better,89) output(32,better,5) output(32,better,72) output(32,better,67) output(57,better,56) output(57,better,89) output(57,better,67) output(57,better,72) output(57,better,5) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,5) output(17,better,89) output(60,worse,73) output(60,worse,57) output(60,worse,20) output(67,worse,57) output(67,worse,20) output(15,worse,67) output(15,worse,57) output(15,worse,20) output(56,worse,89) output(56,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(56,worse,20) output(82,worse,20) output(89,worse,67) output(89,worse,5) output(89,worse,57) output(89,worse,72) output(89,worse,20) output(100,worse,21) output(100,worse,73) output(100,worse,20) output(16,worse,17) output(16,worse,20) output(32,worse,73) output(32,worse,57) output(32,worse,20) output(57,worse,20) output(60,eq,32) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(17,eq,20) output(100,eq,57)
Optimization: 37 11
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(1))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasCategory(3))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(3))),3) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,56) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,72) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,5) output(82,better,89) output(82,better,5) output(82,better,67) output(82,better,56) output(82,better,72) output(89,better,56) output(100,better,60) output(100,better,32) output(100,better,5) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,56) output(32,better,89) output(32,better,5) output(32,better,72) output(32,better,67) output(57,better,56) output(57,better,89) output(57,better,67) output(57,better,72) output(57,better,5) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,5) output(17,better,89) output(60,worse,32) output(60,worse,73) output(60,worse,57) output(60,worse,20) output(67,worse,57) output(67,worse,20) output(15,worse,67) output(15,worse,57) output(15,worse,20) output(56,worse,89) output(56,worse,5) output(56,worse,67) output(56,worse,72) output(56,worse,57) output(56,worse,20) output(82,worse,20) output(89,worse,67) output(89,worse,5) output(89,worse,57) output(89,worse,72) output(89,worse,20) output(100,worse,21) output(100,worse,73) output(100,worse,20) output(16,worse,20) output(32,worse,73) output(32,worse,57) output(32,worse,20) output(57,worse,20) output(17,worse,20) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(100,eq,57)
Optimization: 36 11
Answer: 18
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,3),1,for(atom(hasCost(3))),6) preference(1,(1,4),1,for(atom(hasCost(4))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasCategory(4))),7) preference(1,(1,7),1,for(atom(hasCategory(5))),5) preference(1,(1,8),1,for(atom(hasPrep(3))),2) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasIngredient(6))),4) preference(1,(1,12),1,for(atom(hasCategory(3))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(51,better,16) output(51,better,17) output(51,better,15) output(51,better,67) output(51,better,5) output(51,better,20) output(51,better,57) output(51,better,72) output(51,better,89) output(51,better,56) output(60,better,32) output(60,better,73) output(60,better,56) output(60,better,57) output(60,better,20) output(60,better,5) output(60,better,72) output(60,better,67) output(60,better,89) output(67,better,72) output(67,better,20) output(67,better,56) output(67,better,89) output(67,better,5) output(15,better,67) output(15,better,57) output(15,better,72) output(15,better,56) output(15,better,89) output(15,better,20) output(15,better,5) output(56,better,72) output(56,better,20) output(82,better,89) output(82,better,5) output(82,better,67) output(82,better,56) output(82,better,72) output(82,better,57) output(82,better,20) output(89,better,72) output(89,better,56) output(89,better,20) output(100,better,21) output(100,better,60) output(100,better,32) output(100,better,73) output(100,better,5) output(100,better,20) output(100,better,57) output(100,better,67) output(100,better,89) output(100,better,56) output(100,better,72) output(16,better,17) output(16,better,15) output(16,better,72) output(16,better,67) output(16,better,57) output(16,better,5) output(16,better,20) output(16,better,89) output(16,better,56) output(21,better,60) output(21,better,32) output(21,better,73) output(21,better,57) output(21,better,5) output(21,better,20) output(21,better,72) output(21,better,67) output(21,better,89) output(21,better,56) output(32,better,73) output(32,better,57) output(32,better,56) output(32,better,89) output(32,better,20) output(32,better,5) output(32,better,72) output(32,better,67) output(57,better,56) output(57,better,20) output(57,better,89) output(57,better,67) output(57,better,72) output(57,better,5) output(73,better,57) output(73,better,20) output(73,better,56) output(73,better,89) output(73,better,67) output(73,better,5) output(73,better,72) output(17,better,15) output(17,better,67) output(17,better,56) output(17,better,72) output(17,better,57) output(17,better,20) output(17,better,5) output(17,better,89) output(67,worse,57) output(56,worse,89) output(56,worse,5) output(56,worse,67) output(56,worse,57) output(89,worse,67) output(89,worse,57) output(89,eq,5) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57)
Optimization: 12 14
Progression : [ 7;12] (Error: 0.714286)
Progression : [ 8;12] (Error: 0.5)
Progression : [ 9;12] (Error: 0.333333)
Progression : [10;12] (Error: 0.2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.039 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 12 14
Bounds       : [10;12] [0;14]
Calls        : 1
Time         : 298.236s (Solving: 294.00s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1180.051s
Threads      : 4        (Winner: 4)

Choices      : 8498757  (Domain: 278407)
Conflicts    : 6326445  (Analyzed: 6326439)
Restarts     : 5541     (Average: 1141.75 Last: 413822)
Model-Level  : 63.8    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 6427982  (Deleted: 6057118)
  Binary     : 119      (Ratio:   0.00%)
  Ternary    : 5839     (Ratio:   0.09%)
  Conflict   : 6326439  (Average Length:  238.2 Ratio:  98.42%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 101543   (Average Length:   41.5 Ratio:   1.58%) 
  Distributed: 33877    (Ratio:   0.54% Average LBD: 3.66) 
  Integrated : 101631   (Ratio: 300.00% Unit: 189 Average Jumps: 8.12)
Backjumps    : 6326439  (Average:  1.30 Max: 398 Sum: 8251003)
  Executed   : 6326431  (Average:  1.30 Max: 398 Sum: 8250812 Ratio: 100.00%)
  Bounded    : 8        (Average: 23.88 Max:  69 Sum:    191 Ratio:   0.00%)

Rules        : 1173900 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 21790   
Bodies       : 19779   
  Sum        : 224     
  Count      : 14      
Equivalences : 16412    (Atom=Atom: 1145 Body=Body: 474 Other: 14793)
Tight        : Yes
Variables    : 17383    (Eliminated:    0 Frozen: 8059)
Constraints  : 1188564  (Binary:  98.9% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(1)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(6)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCategory(5)) ; 
  2 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(6)) ; 
  8 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) 
}.
