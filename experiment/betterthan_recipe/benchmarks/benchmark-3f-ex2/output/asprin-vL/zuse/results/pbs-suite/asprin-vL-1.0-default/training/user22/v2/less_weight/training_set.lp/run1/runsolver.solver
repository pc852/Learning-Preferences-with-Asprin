asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1247:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1604:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1923:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(73,eq,57) output(57,eq,11) output(11,eq,10) output(10,eq,76) output(76,eq,38) output(25,eq,62) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(5,eq,11) output(22,eq,25) output(25,eq,36) output(22,eq,36) output(42,eq,23) output(51,eq,73) output(22,eq,62) output(10,eq,38) output(11,eq,76) output(57,eq,10) output(5,eq,10) output(73,eq,11) output(42,eq,57) output(51,eq,57) output(42,eq,11) output(51,eq,11) output(73,eq,10) output(42,eq,10) output(57,eq,76) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(57,eq,38) output(5,eq,38) output(51,eq,23) output(73,eq,38) output(42,eq,38) output(51,eq,38) output(42,eq,76) output(51,eq,76) output(51,eq,10)
Optimization: 40 0
Answer: 2
preference(1,(1,14),1,for(atom(hasPrep(7))),1) preference(1,less(weight)) output(51,better,23) output(51,better,10) output(5,better,10) output(11,better,10) output(42,better,23) output(42,better,10) output(57,better,10) output(73,better,23) output(73,better,10) output(10,worse,76) output(10,worse,38) output(73,eq,57) output(57,eq,11) output(76,eq,38) output(25,eq,62) output(51,eq,42) output(42,eq,73) output(5,eq,11) output(22,eq,25) output(25,eq,36) output(22,eq,36) output(51,eq,73) output(22,eq,62) output(11,eq,76) output(73,eq,11) output(42,eq,57) output(51,eq,57) output(42,eq,11) output(51,eq,11) output(57,eq,76) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(57,eq,38) output(5,eq,38) output(73,eq,38) output(42,eq,38) output(51,eq,38) output(42,eq,76) output(51,eq,76)
Optimization: 31 1
Answer: 3
preference(1,(1,14),1,for(atom(hasIngredient(9))),1) preference(1,less(weight)) output(51,better,42) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,10) output(25,better,62) output(57,better,11) output(57,better,10) output(57,better,38) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,38) output(76,better,38) output(10,worse,76) output(22,worse,25) output(22,worse,36) output(5,worse,76) output(11,worse,76) output(42,worse,73) output(42,worse,57) output(42,worse,76) output(73,eq,57) output(11,eq,10) output(5,eq,11) output(25,eq,36) output(42,eq,23) output(51,eq,73) output(22,eq,62) output(10,eq,38) output(5,eq,10) output(51,eq,57) output(42,eq,11) output(42,eq,10) output(57,eq,76) output(73,eq,76) output(11,eq,38) output(5,eq,38) output(42,eq,38) output(51,eq,76)
Optimization: 26 1
Answer: 4
preference(1,(1,13),1,for(atom(hasIngredient(7))),1) preference(1,(1,14),1,for(atom(hasDifficulty(3))),1) preference(1,less(weight)) output(51,better,11) output(51,better,23) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(42,better,23) output(42,better,11) output(42,better,10) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(10,worse,38) output(22,worse,25) output(11,worse,38) output(76,worse,38) output(73,eq,57) output(11,eq,10) output(10,eq,76) output(51,eq,42) output(42,eq,73) output(22,eq,36) output(51,eq,73) output(22,eq,62) output(11,eq,76) output(42,eq,57) output(51,eq,57) output(57,eq,38) output(5,eq,38) output(73,eq,38) output(42,eq,38) output(51,eq,38)
Optimization: 20 2
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(3))),1) preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasIngredient(12))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),1) preference(1,(1,6),1,for(atom(hasCategory(5))),1) preference(1,(1,7),1,for(atom(hasIngredient(7))),1) preference(1,(1,8),1,for(atom(hasIngredient(4))),1) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(5,better,38) output(42,better,23) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(22,worse,25) output(73,eq,57) output(11,eq,10) output(10,eq,76) output(76,eq,38) output(51,eq,42) output(42,eq,73) output(22,eq,36) output(51,eq,73) output(22,eq,62) output(10,eq,38) output(11,eq,76) output(42,eq,57) output(51,eq,57) output(11,eq,38)
Optimization: 15 9
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(2))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,6),1,for(atom(hasCategory(4))),4) preference(1,(1,7),1,for(atom(hasDifficulty(3))),7) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,10),1,for(atom(hasIngredient(9))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasIngredient(6))),4) preference(1,(1,13),1,for(atom(hasIngredient(7))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,57) output(51,better,11) output(51,better,38) output(51,better,76) output(51,better,10) output(11,better,10) output(11,better,38) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(76,better,38) output(10,worse,76) output(51,worse,73) output(51,worse,23) output(5,worse,11) output(5,worse,76) output(42,worse,73) output(42,worse,23) output(42,worse,57) output(10,eq,38) output(11,eq,76) output(5,eq,10) output(5,eq,38)
Optimization: 12 14
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(12))),1) preference(1,(1,2),1,for(atom(hasIngredient(4))),1) preference(1,(1,3),1,for(atom(hasIngredient(10))),8) preference(1,(1,4),1,for(atom(hasIngredient(8))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasCategory(2))),1) preference(1,(1,9),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasCategory(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),1) preference(1,less(weight)) output(22,better,25) output(22,better,36) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(5,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(42,better,23) output(42,better,10) output(42,better,38) output(42,better,76) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(42,worse,73) output(25,worse,62) output(57,eq,11) output(10,eq,76) output(76,eq,38) output(25,eq,36) output(22,eq,62) output(10,eq,38) output(42,eq,57) output(42,eq,11)
Optimization: 10 12
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasIngredient(10))),8) preference(1,(1,3),1,for(atom(hasIngredient(12))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),1) preference(1,(1,5),1,for(atom(hasPrep(7))),1) preference(1,(1,6),1,for(atom(hasDifficulty(3))),8) preference(1,(1,7),1,for(atom(hasCategory(5))),6) preference(1,(1,8),1,for(atom(hasIngredient(4))),6) preference(1,(1,9),1,for(atom(hasPrep(3))),7) preference(1,(1,10),1,for(atom(hasPrep(4))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasIngredient(7))),7) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(5,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(76,better,38)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(5))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasCategory(4))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,(1,9),1,for(atom(hasDifficulty(3))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(4))),4) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(5,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(76,better,38)
Optimization: 0 10
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(5))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasCategory(4))),4) preference(1,(1,9),1,for(atom(hasDifficulty(3))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(4))),4) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(5,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(76,better,38)
Optimization: 0 9
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasDifficulty(3))),5) preference(1,(1,3),1,for(atom(hasIngredient(7))),5) preference(1,(1,5),1,for(atom(hasCategory(4))),2) preference(1,(1,9),1,for(atom(hasIngredient(4))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasIngredient(10))),4) preference(1,less(weight)) output(10,better,76) output(10,better,38) output(22,better,25) output(22,better,36) output(22,better,62) output(51,better,42) output(51,better,73) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(51,better,76) output(51,better,10) output(5,better,11) output(5,better,10) output(5,better,76) output(5,better,38) output(11,better,10) output(11,better,76) output(11,better,38) output(42,better,73) output(42,better,23) output(42,better,57) output(42,better,11) output(42,better,10) output(42,better,38) output(42,better,76) output(25,better,62) output(25,better,36) output(57,better,11) output(57,better,10) output(57,better,76) output(57,better,38) output(73,better,57) output(73,better,23) output(73,better,11) output(73,better,10) output(73,better,76) output(73,better,38) output(76,better,38)
Optimization: 0 8
Progression : 0 [3;8] (Error: 1.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 598.314s (Solving: 595.39s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2384.059s
Threads      : 4        (Winner: 4)

Choices      : 12640338 (Domain: 437236)
Conflicts    : 7741584  (Analyzed: 7741581)
Restarts     : 7747     (Average: 999.30 Last: 409972)
Model-Level  : 51.3    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7752722  (Deleted: 7386589)
  Binary     : 918      (Ratio:   0.01%)
  Ternary    : 1357     (Ratio:   0.02%)
  Conflict   : 7741581  (Average Length:  515.0 Ratio:  99.86%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 11141    (Average Length:   50.0 Ratio:   0.14%) 
  Distributed: 3716     (Ratio:   0.05% Average LBD: 3.48) 
  Integrated : 11148    (Ratio: 300.00% Unit: 8 Average Jumps: 12.62)
Backjumps    : 7741581  (Average:  1.44 Max: 935 Sum: 11124422)
  Executed   : 7741580  (Average:  1.44 Max: 935 Sum: 11124398 Ratio: 100.00%)
  Bounded    : 1        (Average: 24.00 Max:  24 Sum:     24 Ratio:   0.00%)

Rules        : 474966  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14514   
Bodies       : 18969   
  Sum        : 80      
  Count      : 14      
Equivalences : 7250     (Atom=Atom: 413 Body=Body: 174 Other: 6663)
Tight        : Yes
Variables    : 17071    (Eliminated:    0 Frozen: 7747)
Constraints  : 496348   (Binary:  97.4% Ternary:   1.9% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(6)) ; 
  6 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCost(5)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasCategory(5)) ; 
  6 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasPrep(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(10)) 
}.
