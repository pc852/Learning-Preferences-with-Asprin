asprin_vL version 1.0
Reading from stdin
-:1251:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1276:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1357:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1631:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1808:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2009:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2013:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2118:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2144:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2264:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1168:1-16: info: no atoms over signature occur in program:
  output/3

-:1160:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1161:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1162:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1163:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1193:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(100,better,28) output(54,better,67) output(98,better,63) output(54,better,100) output(54,better,28) output(50,worse,54) output(67,worse,100) output(100,worse,52) output(67,worse,52) output(46,worse,54) output(22,worse,86) output(50,worse,52) output(46,worse,52) output(46,eq,50) output(68,eq,88) output(54,eq,52)
Optimization: 27 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasDifficulty(4))),()) preference(1,(1,4),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(22,better,19) output(50,better,54) output(46,better,54) output(67,better,28) output(22,better,86) output(50,better,19) output(46,better,19) output(50,better,86) output(46,better,86) output(50,better,28) output(46,better,28) output(68,worse,88) output(54,worse,67) output(100,worse,52) output(98,worse,63) output(54,worse,52) output(46,eq,50) output(50,eq,22) output(19,eq,86) output(65,eq,73) output(50,eq,67) output(46,eq,22) output(54,eq,28) output(46,eq,67)
Optimization: 21 6
Answer: 3
preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,aso) output(50,better,22) output(19,better,86) output(67,better,100) output(65,better,73) output(67,better,52) output(54,better,100) output(46,better,22) output(50,better,86) output(46,better,86) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(22,worse,19) output(100,worse,28) output(54,worse,67) output(98,worse,63) output(22,worse,86) output(46,eq,50) output(68,eq,88) output(100,eq,52) output(50,eq,19) output(46,eq,19) output(50,eq,28) output(46,eq,28)
Optimization: 18 6
Answer: 4
preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,aso) output(50,better,22) output(19,better,86) output(67,better,100) output(65,better,73) output(67,better,52) output(54,better,100) output(46,better,22) output(50,better,86) output(46,better,86) output(50,better,28) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28) output(22,worse,19) output(54,worse,67) output(98,worse,63) output(22,worse,86) output(46,eq,50) output(68,eq,88) output(100,eq,52) output(50,eq,19) output(46,eq,19)
Optimization: 16 6
Answer: 5
preference(1,(1,3),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(50,better,22) output(68,better,88) output(67,better,100) output(65,better,73) output(67,better,52) output(54,better,100) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(50,better,28) output(50,better,100) output(46,better,100) output(50,better,52) output(46,better,52) output(46,better,28) output(22,worse,19) output(54,worse,67) output(100,worse,52) output(98,worse,63) output(22,worse,86) output(46,eq,50)
Optimization: 15 6
Answer: 6
preference(1,(1,4),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,aso) output(50,better,22) output(19,better,86) output(67,better,100) output(65,better,73) output(67,better,52) output(54,better,100) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(50,better,28) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28) output(22,worse,19) output(54,worse,67) output(100,worse,52) output(98,worse,63) output(22,worse,86) output(46,eq,50) output(68,eq,88)
Optimization: 14 6
Answer: 7
preference(1,(1,3),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(50,better,22) output(19,better,86) output(68,better,88) output(67,better,100) output(65,better,73) output(67,better,52) output(54,better,100) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(50,better,28) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28) output(22,worse,19) output(54,worse,67) output(22,worse,86) output(46,eq,50) output(100,eq,52) output(98,eq,63)
Optimization: 13 6
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCategory(3))),()) preference(1,(1,6),0,for(atom(hasPrep(6))),()) preference(1,(1,1),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,aso) output(50,better,22) output(68,better,88) output(54,better,67) output(65,better,73) output(98,better,63) output(54,better,100) output(50,better,67) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(54,better,28) output(50,better,28) output(46,better,67) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28) output(46,eq,50) output(50,eq,54) output(100,eq,52) output(46,eq,54)
Optimization: 11 6
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCategory(3))),()) preference(1,(1,6),0,for(atom(hasPrep(6))),()) preference(1,(1,1),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,aso) output(50,better,22) output(68,better,88) output(54,better,67) output(100,better,52) output(65,better,73) output(98,better,63) output(54,better,100) output(50,better,67) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(54,better,28) output(50,better,28) output(46,better,67) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28) output(67,worse,28) output(46,eq,50) output(50,eq,54) output(46,eq,54)
Optimization: 10 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(atom(hasCategory(3))),()) preference(1,(1,6),0,for(atom(hasPrep(6))),()) preference(1,(1,1),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(7))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,aso) output(50,better,22) output(68,better,88) output(50,better,54) output(54,better,67) output(65,better,73) output(98,better,63) output(54,better,100) output(50,better,67) output(46,better,54) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(54,better,28) output(50,better,28) output(46,better,67) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28) output(46,eq,50) output(100,eq,52)
Optimization: 9 6
Answer: 11
preference(1,(1,2),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasCategory(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasPrep(6))),()) preference(1,(1,5),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(46,better,50) output(50,better,22) output(22,better,19) output(19,better,86) output(68,better,88) output(100,better,28) output(50,better,54) output(54,better,67) output(67,better,100) output(100,better,52) output(65,better,73) output(98,better,63) output(67,better,52) output(54,better,100) output(50,better,67) output(46,better,54) output(67,better,28) output(22,better,86) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(54,better,28) output(50,better,28) output(46,better,67) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 12
preference(1,(1,2),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasCategory(3))),()) preference(1,(1,1),3,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasPrep(6))),()) preference(1,(1,5),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(46,better,50) output(50,better,22) output(22,better,19) output(19,better,86) output(68,better,88) output(100,better,28) output(50,better,54) output(54,better,67) output(67,better,100) output(100,better,52) output(65,better,73) output(98,better,63) output(67,better,52) output(54,better,100) output(50,better,67) output(46,better,54) output(67,better,28) output(22,better,86) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(54,better,28) output(50,better,28) output(46,better,67) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 13
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(46,better,50) output(50,better,22) output(22,better,19) output(19,better,86) output(68,better,88) output(100,better,28) output(50,better,54) output(54,better,67) output(67,better,100) output(100,better,52) output(65,better,73) output(98,better,63) output(67,better,52) output(54,better,100) output(50,better,67) output(46,better,54) output(67,better,28) output(22,better,86) output(50,better,19) output(46,better,22) output(46,better,19) output(50,better,86) output(46,better,86) output(54,better,28) output(50,better,28) output(46,better,67) output(50,better,100) output(46,better,100) output(54,better,52) output(50,better,52) output(46,better,52) output(46,better,28)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 0 4
Calls        : 1
Time         : 17.697s (Solving: 11.31s 1st Model: 0.42s Unsat: 9.94s)
CPU Time     : 51.133s
Threads      : 4        (Winner: 3)

Choices      : 175307   (Domain: 419)
Conflicts    : 31258    (Analyzed: 31254)
Restarts     : 49       (Average: 637.84 Last: 4821)
Model-Level  : 687.2   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 56952    (Deleted: 5645)
  Binary     : 3300     (Ratio:   5.79%)
  Ternary    : 9261     (Ratio:  16.26%)
  Conflict   : 31253    (Average Length:  167.0 Ratio:  54.88%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 25699    (Average Length:   67.3 Ratio:  45.12%) 
  Distributed: 8675     (Ratio:  27.76% Average LBD: 2.99) 
  Integrated : 26023    (Ratio: 299.98% Unit: 423 Average Jumps: 34.88)
Backjumps    : 31254    (Average:  4.83 Max: 1017 Sum: 150934)
  Executed   : 31240    (Average:  4.82 Max: 1017 Sum: 150616 Ratio:  99.79%)
  Bounded    : 14       (Average: 22.71 Max:  31 Sum:    318 Ratio:   0.21%)

Rules        : 3098584 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 518262  
Bodies       : 644409  
  Count      : 1176    
Equivalences : 1571617  (Atom=Atom: 462505 Body=Body: 502041 Other: 607071)
Tight        : Yes
Variables    : 95809    (Eliminated:    0 Frozen: 30601)
Constraints  : 2741362  (Binary:  96.6% Ternary:   3.2% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> not atom(hasPrep(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasPrep(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(2)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(8)) >> atom(hasDifficulty(4)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(2)) >> atom(hasCost(5)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> not atom(hasPrep(6))  >> atom(hasPrep(1)) || atom(hasPrepTime(2)) ; 
  atom(hasIngredient(8)) >> atom(hasCategory(2)) >> not atom(hasIngredient(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasCost(5)) >> not atom(hasPrepTime(2))  >> not atom(hasDifficulty(3))  ; 
  atom(hasCost(5)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> not atom(hasPrep(6))  >> atom(hasPrep(1)) || atom(hasPrepTime(2)) ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasIngredient(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(8)) >> atom(hasDifficulty(3)) >> atom(hasCost(5)) ; 
  atom(hasCost(5)) >> not atom(hasPrepTime(2))  >> not atom(hasDifficulty(3))  ; 
  atom(hasCategory(5)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasDifficulty(3)) >> atom(hasDifficulty(1)) || not atom(hasCategory(4))  ; 
  atom(hasCost(2)) >> atom(hasPrep(1)) >> not atom(hasPrep(6))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasIngredient(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasPrep(4))  ; 
  atom(hasCost(5)) >> not atom(hasPrepTime(2))  >> not atom(hasDifficulty(3))  ; 
  atom(hasCategory(5)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasPrep(6))  >> atom(hasPrep(1)) || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasIngredient(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(8)) >> atom(hasDifficulty(3)) >> atom(hasCost(5)) ; 
  atom(hasCost(5)) >> not atom(hasPrepTime(2))  >> not atom(hasDifficulty(3))  ; 
  atom(hasCategory(5)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasDifficulty(3)) >> atom(hasDifficulty(1)) || not atom(hasCategory(4))  ; 
  atom(hasIngredient(4)) >> atom(hasPrep(1)) >> not atom(hasPrepTime(1))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasIngredient(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasPrep(4))  ; 
  atom(hasCost(5)) >> not atom(hasPrepTime(2))  >> not atom(hasDifficulty(3))  ; 
  atom(hasCategory(5)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> not atom(hasCategory(4))  || not atom(hasPrep(2))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(7))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrepTime(2)) >> not atom(hasIngredient(2))  || atom(hasCost(1)) ; 
  not atom(hasPrep(2))  >> not atom(hasIngredient(7))  >> not atom(hasIngredient(6))  || atom(hasCategory(3)) ; 
  not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  >> not atom(hasIngredient(1))  || atom(hasPrep(6)) ; 
  not atom(hasCost(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> not atom(hasCategory(4))  || not atom(hasPrep(2))  ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(9))  || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(2)) >> not atom(hasIngredient(2))  || atom(hasCost(1)) ; 
  not atom(hasPrep(2))  >> not atom(hasIngredient(7))  >> not atom(hasIngredient(6))  || atom(hasCategory(3)) ; 
  not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  >> not atom(hasIngredient(1))  || atom(hasPrep(6)) ; 
  not atom(hasCost(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> not atom(hasCategory(4))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(7)) >> not atom(hasIngredient(10))  || not atom(hasIngredient(7))  ; 
  atom(hasPrepTime(2)) >> not atom(hasIngredient(6))  || not atom(hasPrep(2))  ; 
  not atom(hasPrep(2))  >> not atom(hasIngredient(7))  >> not atom(hasIngredient(6))  || atom(hasCategory(3)) ; 
  not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  >> not atom(hasIngredient(1))  || atom(hasPrep(6)) ; 
  not atom(hasCost(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(3))  || atom(hasPrepTime(3)) ; 
  atom(hasCost(4)) >> atom(hasCategory(3)) >> atom(hasPrepTime(3)) || not atom(hasPrep(7))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(6)) >> atom(hasDifficulty(3)) ; 
  atom(hasIngredient(8)) >> not atom(hasIngredient(3))  >> atom(hasPrep(6)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(7)) >> not atom(hasPrep(2))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(6)) >> not atom(hasCost(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(3))  || atom(hasPrepTime(3)) ; 
  atom(hasCost(4)) >> atom(hasCategory(3)) >> atom(hasPrepTime(3)) || not atom(hasPrep(7))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(6)) >> atom(hasDifficulty(3)) ; 
  atom(hasIngredient(8)) >> not atom(hasIngredient(3))  >> atom(hasPrep(6)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(7)) >> not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasCategory(4))  >> atom(hasCost(2)) || atom(hasIngredient(7)) ; 
  atom(hasPrep(5)) >> atom(hasPrep(6)) >> atom(hasDifficulty(3)) || not atom(hasCost(4))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(4)) >> not atom(hasCategory(1))  || not atom(hasDifficulty(1))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(7)) >> not atom(hasPrep(2))  
}.
