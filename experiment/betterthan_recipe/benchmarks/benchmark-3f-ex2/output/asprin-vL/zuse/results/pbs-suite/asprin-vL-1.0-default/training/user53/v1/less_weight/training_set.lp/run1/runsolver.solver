asprin_vL version 1.0
Reading from stdin
-:1333:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1343:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1358:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1439:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1700:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1713:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1890:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2019:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2091:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2095:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2095:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2101:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2200:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2226:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2346:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2380:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2402:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1250:1-16: info: no atoms over signature occur in program:
  output/3

-:1242:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1243:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(100,eq,16) output(67,eq,44) output(90,eq,100) output(79,eq,67) output(100,eq,24) output(24,eq,92) output(38,eq,51) output(51,eq,64) output(64,eq,75) output(75,eq,52) output(52,eq,84) output(58,eq,100) output(92,eq,38) output(24,eq,38) output(75,eq,84) output(9,eq,52) output(64,eq,52) output(51,eq,75) output(75,eq,64) output(38,eq,64) output(92,eq,51) output(100,eq,92) output(90,eq,24) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(90,eq,16) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,16) output(51,eq,16) output(51,eq,100) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(51,eq,24) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(24,eq,51) output(100,eq,51) output(92,eq,64) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(51,eq,52) output(38,eq,52) output(9,eq,84) output(64,eq,84) output(51,eq,84) output(100,eq,38) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(51,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(38,eq,84) output(92,eq,84) output(24,eq,84) output(100,eq,84) output(92,eq,52) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(58,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(75,eq,16) output(38,eq,16) output(92,eq,16) output(9,eq,16) output(64,eq,16) output(24,eq,16) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84) output(58,eq,84) output(33,eq,84)
Optimization: 136 0
Answer: 2
preference(1,(1,7),1,for(atom(hasCategory(5))),8) preference(1,less(weight)) output(51,better,24) output(9,better,24) output(38,better,24) output(64,better,24) output(92,better,24) output(100,better,24) output(33,better,24) output(58,better,24) output(75,better,24) output(90,better,24) output(24,worse,92) output(24,worse,38) output(24,worse,33) output(24,worse,51) output(24,worse,64) output(24,worse,84) output(24,worse,52) output(24,worse,75) output(24,worse,100) output(24,worse,16) output(24,worse,90) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(100,eq,16) output(67,eq,44) output(90,eq,100) output(79,eq,67) output(38,eq,51) output(51,eq,64) output(64,eq,75) output(75,eq,52) output(52,eq,84) output(58,eq,100) output(92,eq,38) output(75,eq,84) output(9,eq,52) output(64,eq,52) output(51,eq,75) output(75,eq,64) output(38,eq,64) output(92,eq,51) output(100,eq,92) output(33,eq,100) output(79,eq,44) output(90,eq,16) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(92,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,16) output(51,eq,16) output(51,eq,100) output(75,eq,100) output(38,eq,100) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(100,eq,51) output(92,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(51,eq,52) output(38,eq,52) output(9,eq,84) output(64,eq,84) output(51,eq,84) output(100,eq,38) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(51,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(38,eq,84) output(92,eq,84) output(100,eq,84) output(92,eq,52) output(100,eq,52) output(90,eq,52) output(58,eq,52) output(100,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(75,eq,16) output(38,eq,16) output(92,eq,16) output(9,eq,16) output(64,eq,16) output(100,eq,90) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84) output(58,eq,84) output(33,eq,84)
Optimization: 126 1
Progression : [ 10;126] (Error: 11.6)
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,84) output(67,better,44) output(9,better,51) output(9,better,84) output(38,better,51) output(38,better,84) output(64,better,51) output(64,better,84) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,51) output(100,better,84) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(90,better,51) output(90,better,84) output(24,better,51) output(24,better,84) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,16) output(51,worse,100) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(9,worse,92) output(9,worse,16) output(38,worse,92) output(38,worse,16) output(64,worse,92) output(64,worse,16) output(79,worse,67) output(79,worse,44) output(100,worse,16) output(100,worse,92) output(33,worse,16) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(75,worse,16) output(90,worse,16) output(90,worse,92) output(24,worse,92) output(24,worse,16) output(9,eq,75) output(33,eq,90) output(90,eq,100) output(100,eq,24) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(33,eq,100) output(58,eq,16) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(9,eq,90) output(64,eq,90) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(100,eq,38) output(90,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(100,eq,33) output(90,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 96 9
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,3),1,for(atom(hasPrep(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,100) output(51,better,84) output(67,better,44) output(9,better,51) output(9,better,84) output(9,better,100) output(38,better,51) output(38,better,100) output(38,better,84) output(64,better,51) output(64,better,84) output(64,better,100) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(33,better,100) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,100) output(90,better,100) output(90,better,51) output(90,better,84) output(24,better,51) output(24,better,84) output(24,better,100) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,16) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(9,worse,92) output(9,worse,16) output(38,worse,92) output(38,worse,16) output(64,worse,92) output(64,worse,16) output(79,worse,67) output(79,worse,44) output(100,worse,16) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,16) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(75,worse,16) output(90,worse,16) output(90,worse,92) output(24,worse,92) output(24,worse,16) output(9,eq,75) output(33,eq,90) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(58,eq,16) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,24) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(90,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(90,eq,52) output(24,eq,75) output(90,eq,75) output(33,eq,75) output(90,eq,64) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(24,eq,90) output(90,eq,90) output(90,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 90 10
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(8))),6) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,16) output(51,better,84) output(67,better,44) output(9,better,51) output(9,better,84) output(9,better,16) output(38,better,51) output(38,better,84) output(38,better,16) output(64,better,51) output(64,better,84) output(64,better,16) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,51) output(100,better,84) output(33,better,16) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,16) output(90,better,16) output(90,better,51) output(90,better,84) output(24,better,51) output(24,better,84) output(24,better,16) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,100) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(79,worse,67) output(79,worse,44) output(100,worse,92) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(90,worse,92) output(24,worse,92) output(9,eq,75) output(33,eq,90) output(90,eq,100) output(100,eq,24) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(33,eq,100) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(9,eq,90) output(64,eq,90) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(100,eq,38) output(90,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(100,eq,33) output(90,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 86 10
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(8))),6) preference(1,(1,5),1,for(atom(hasPrep(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,16) output(51,better,100) output(51,better,84) output(67,better,44) output(9,better,51) output(9,better,84) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,100) output(38,better,84) output(38,better,16) output(64,better,51) output(64,better,84) output(64,better,100) output(64,better,16) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(33,better,100) output(33,better,16) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,100) output(75,better,16) output(90,better,100) output(90,better,16) output(90,better,51) output(90,better,84) output(24,better,51) output(24,better,84) output(24,better,100) output(24,better,16) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(79,worse,67) output(79,worse,44) output(100,worse,16) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(90,worse,92) output(24,worse,92) output(9,eq,75) output(33,eq,90) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,24) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(90,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(90,eq,52) output(24,eq,75) output(90,eq,75) output(33,eq,75) output(90,eq,64) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(24,eq,90) output(90,eq,90) output(90,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 81 11
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,5),1,for(atom(hasPrep(4))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),7) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasIngredient(8))),6) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,16) output(51,better,100) output(51,better,84) output(67,better,44) output(9,better,51) output(9,better,84) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,100) output(38,better,84) output(38,better,16) output(64,better,51) output(64,better,84) output(64,better,100) output(64,better,16) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(33,better,100) output(33,better,16) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,100) output(75,better,16) output(90,better,100) output(90,better,16) output(90,better,51) output(90,better,84) output(24,better,51) output(24,better,84) output(24,better,100) output(24,better,16) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(79,worse,67) output(79,worse,44) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(90,worse,92) output(24,worse,92) output(9,eq,75) output(33,eq,90) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,24) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(90,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(90,eq,52) output(24,eq,75) output(90,eq,75) output(33,eq,75) output(90,eq,64) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(24,eq,90) output(90,eq,90) output(90,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 80 12
Progression : [11;80] (Error: 6.27273)
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(8))),2) preference(1,(1,4),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasPrep(4))),5) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasPrep(3))),6) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,16) output(51,better,100) output(51,better,84) output(67,better,44) output(9,better,51) output(9,better,84) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,100) output(38,better,84) output(38,better,16) output(64,better,51) output(64,better,84) output(64,better,100) output(64,better,16) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,84) output(33,better,100) output(33,better,16) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,100) output(75,better,16) output(90,better,100) output(90,better,16) output(90,better,51) output(90,better,84) output(24,better,51) output(24,better,84) output(24,better,100) output(24,better,16) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(79,worse,67) output(79,worse,44) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(90,worse,92) output(24,worse,92) output(9,eq,75) output(33,eq,90) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,24) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(90,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(90,eq,52) output(24,eq,75) output(90,eq,75) output(33,eq,75) output(90,eq,64) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(24,eq,90) output(90,eq,90) output(90,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 79 13
Answer: 9
preference(1,(1,2),1,for(atom(hasIngredient(8))),6) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasCost(3))),2) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,90) output(51,better,16) output(51,better,84) output(9,better,51) output(9,better,90) output(9,better,84) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,90) output(38,better,100) output(38,better,84) output(38,better,16) output(64,better,51) output(64,better,90) output(64,better,84) output(64,better,100) output(64,better,16) output(79,better,67) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,84) output(100,better,90) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,90) output(75,better,100) output(75,better,16) output(24,better,51) output(24,better,84) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(67,worse,44) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(79,worse,44) output(100,worse,24) output(100,worse,92) output(100,worse,38) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,33) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(24,worse,92) output(9,eq,75) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(51,eq,100) output(33,eq,24) output(100,eq,51) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(24,eq,75) output(33,eq,75) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 76 12
Progression : [12;76] (Error: 5.33333)
Answer: 10
preference(1,(1,2),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasPrep(4))),1) preference(1,(1,5),1,for(atom(hasIngredient(8))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(4))),7) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(51,better,90) output(51,better,16) output(51,better,84) output(9,better,51) output(9,better,90) output(9,better,84) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,90) output(38,better,100) output(38,better,84) output(38,better,16) output(64,better,51) output(64,better,90) output(64,better,84) output(64,better,100) output(64,better,16) output(79,better,67) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,84) output(100,better,90) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,51) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,90) output(75,better,100) output(75,better,16) output(90,better,16) output(24,better,51) output(24,better,84) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(67,worse,44) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(79,worse,44) output(100,worse,24) output(100,worse,92) output(100,worse,38) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,33) output(33,worse,92) output(58,worse,92) output(75,worse,92) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(24,worse,92) output(9,eq,75) output(64,eq,75) output(75,eq,52) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(51,eq,100) output(33,eq,24) output(100,eq,51) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(38,eq,52) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(24,eq,75) output(33,eq,75) output(33,eq,64) output(92,eq,92) output(75,eq,24) output(38,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 75 13
Progression : [13;75] (Error: 4.76923)
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(3))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasIngredient(7))),2) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasCategory(3))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,10),1,for(atom(hasPrepTime(1))),3) preference(1,(1,11),1,for(atom(hasCategory(1))),7) preference(1,(1,12),1,for(atom(hasCategory(4))),5) preference(1,(1,13),1,for(atom(hasIngredient(9))),6) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(9,better,75) output(9,better,52) output(9,better,16) output(38,better,64) output(38,better,33) output(38,better,90) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,24) output(38,better,16) output(64,better,75) output(64,better,52) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,92) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,75) output(92,better,52) output(92,better,16) output(100,better,16) output(100,better,24) output(100,better,92) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,75) output(100,better,64) output(100,better,90) output(100,better,33) output(33,better,16) output(33,better,92) output(33,better,75) output(33,better,52) output(58,better,16) output(75,better,16) output(90,better,16) output(90,better,92) output(90,better,52) output(90,better,75) output(24,better,92) output(24,better,33) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,16) output(24,better,90) output(67,worse,44) output(9,worse,51) output(9,worse,33) output(9,worse,90) output(9,worse,64) output(9,worse,84) output(9,worse,38) output(9,worse,24) output(9,worse,100) output(38,worse,51) output(38,worse,100) output(64,worse,51) output(64,worse,38) output(64,worse,100) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,90) output(92,worse,64) output(92,worse,84) output(92,worse,24) output(92,worse,100) output(100,worse,51) output(33,worse,100) output(33,worse,24) output(33,worse,38) output(33,worse,64) output(33,worse,51) output(52,worse,84) output(58,worse,100) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,52) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,90) output(58,worse,33) output(58,worse,84) output(75,worse,51) output(75,worse,52) output(75,worse,84) output(75,worse,64) output(75,worse,33) output(75,worse,90) output(75,worse,100) output(75,worse,38) output(75,worse,92) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,38) output(90,worse,64) output(90,worse,51) output(24,worse,38) output(24,worse,51) output(24,worse,100) output(33,eq,90) output(51,eq,51) output(24,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(92,eq,92) output(9,eq,92) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(90,eq,33) output(33,eq,33) output(90,eq,84) output(33,eq,84)
Optimization: 74 14
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(4))),8) preference(1,(1,2),1,for(atom(hasIngredient(4))),3) preference(1,(1,3),1,for(atom(hasCategory(3))),2) preference(1,(1,4),1,for(atom(hasIngredient(10))),6) preference(1,(1,5),1,for(atom(hasCost(3))),3) preference(1,(1,6),1,for(atom(hasCategory(4))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,84) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,24) output(38,better,16) output(64,better,75) output(64,better,52) output(64,better,51) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,24) output(64,better,100) output(64,better,16) output(79,better,67) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,90) output(58,better,84) output(75,better,52) output(75,better,84) output(75,better,90) output(75,better,100) output(75,better,16) output(90,better,100) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,64) output(51,worse,38) output(51,worse,92) output(67,worse,44) output(9,worse,64) output(9,worse,38) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(100,worse,16) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,92) output(33,worse,38) output(33,worse,64) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,33) output(75,worse,64) output(75,worse,38) output(75,worse,92) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(24,worse,92) output(24,worse,38) output(24,worse,64) output(75,eq,51) output(51,eq,33) output(51,eq,75) output(38,eq,64) output(79,eq,44) output(58,eq,16) output(75,eq,33) output(51,eq,51) output(24,eq,33) output(33,eq,24) output(51,eq,24) output(24,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(64,eq,38) output(58,eq,52) output(24,eq,75) output(33,eq,75) output(33,eq,51) output(92,eq,92) output(75,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 72 14
Progression : [14;72] (Error: 4.14286)
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(4))),8) preference(1,(1,2),1,for(atom(hasIngredient(4))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasIngredient(10))),6) preference(1,(1,5),1,for(atom(hasCost(3))),3) preference(1,(1,6),1,for(atom(hasCategory(4))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,84) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,24) output(38,better,16) output(64,better,75) output(64,better,52) output(64,better,51) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,24) output(64,better,100) output(64,better,16) output(79,better,67) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,16) output(58,better,90) output(58,better,84) output(75,better,52) output(75,better,84) output(75,better,90) output(75,better,100) output(75,better,16) output(90,better,100) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,64) output(51,worse,38) output(51,worse,92) output(67,worse,44) output(9,worse,64) output(9,worse,38) output(9,worse,92) output(38,worse,92) output(64,worse,92) output(100,worse,16) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,84) output(100,worse,52) output(100,worse,75) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,92) output(33,worse,38) output(33,worse,64) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,33) output(75,worse,64) output(75,worse,38) output(75,worse,92) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(24,worse,92) output(24,worse,38) output(24,worse,64) output(75,eq,51) output(51,eq,33) output(51,eq,75) output(38,eq,64) output(79,eq,44) output(75,eq,33) output(51,eq,51) output(24,eq,33) output(33,eq,24) output(51,eq,24) output(24,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(64,eq,38) output(58,eq,52) output(24,eq,75) output(33,eq,75) output(33,eq,51) output(92,eq,92) output(75,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 71 14
Progression : [15;71] (Error: 3.73333)
Progression : [16;71] (Error: 3.4375)
Answer: 14
preference(1,(1,4),1,for(atom(hasCategory(1))),8) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasCategory(4))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,92) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,16) output(38,better,64) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(64,better,52) output(64,better,90) output(79,better,67) output(92,better,90) output(92,better,52) output(100,better,16) output(100,better,92) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(100,better,33) output(33,better,90) output(33,better,16) output(33,better,92) output(33,better,38) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(58,better,92) output(58,better,52) output(58,better,64) output(58,better,90) output(58,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,33) output(51,worse,75) output(51,worse,100) output(51,worse,24) output(67,worse,44) output(9,worse,75) output(9,worse,24) output(38,worse,33) output(38,worse,100) output(38,worse,75) output(38,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,24) output(64,worse,100) output(64,worse,16) output(79,worse,44) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(92,worse,16) output(100,worse,24) output(100,worse,75) output(33,worse,100) output(33,worse,24) output(33,worse,75) output(52,worse,84) output(58,worse,100) output(58,worse,24) output(58,worse,38) output(58,worse,75) output(58,worse,51) output(58,worse,33) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(38,eq,51) output(58,eq,16) output(51,eq,51) output(92,eq,64) output(64,eq,64) output(75,eq,75) output(64,eq,84) output(51,eq,38) output(38,eq,38) output(92,eq,84) output(90,eq,52) output(92,eq,92) output(64,eq,92) output(24,eq,24) output(100,eq,100) output(9,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 67 4
Answer: 15
preference(1,(1,4),1,for(atom(hasCategory(1))),8) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasCategory(4))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,92) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,16) output(38,better,64) output(38,better,33) output(38,better,90) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(64,better,52) output(64,better,90) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,90) output(92,better,52) output(92,better,16) output(100,better,16) output(100,better,92) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,75) output(100,better,64) output(100,better,90) output(100,better,33) output(33,better,90) output(33,better,16) output(33,better,92) output(33,better,64) output(33,better,52) output(33,better,84) output(58,better,52) output(58,better,90) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,38) output(75,better,92) output(75,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,75) output(51,worse,100) output(51,worse,24) output(67,worse,44) output(9,worse,24) output(38,worse,100) output(38,worse,75) output(38,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,38) output(64,worse,24) output(64,worse,100) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(100,worse,24) output(33,worse,100) output(33,worse,24) output(33,worse,38) output(33,worse,75) output(33,worse,51) output(52,worse,84) output(58,worse,100) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,33) output(58,worse,84) output(75,worse,100) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(38,eq,51) output(58,eq,16) output(51,eq,51) output(92,eq,64) output(64,eq,64) output(75,eq,75) output(64,eq,84) output(51,eq,38) output(38,eq,38) output(92,eq,84) output(90,eq,52) output(92,eq,92) output(64,eq,92) output(24,eq,24) output(100,eq,100) output(9,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 66 4
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasIngredient(7))),6) preference(1,(1,7),1,for(atom(hasIngredient(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(3))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasCategory(4))),8) preference(1,(1,14),1,for(atom(hasIngredient(10))),7) preference(1,less(weight)) output(51,better,33) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,92) output(67,better,44) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,24) output(38,better,16) output(64,better,75) output(64,better,52) output(64,better,51) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,38) output(64,better,92) output(64,better,24) output(64,better,100) output(64,better,16) output(79,better,44) output(92,better,33) output(92,better,90) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,16) output(100,better,16) output(100,better,24) output(100,better,92) output(100,better,84) output(100,better,52) output(100,better,75) output(100,better,90) output(100,better,33) output(33,better,16) output(33,better,52) output(58,better,52) output(75,better,52) output(75,better,16) output(90,better,16) output(90,better,52) output(24,better,33) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,16) output(24,better,90) output(51,worse,64) output(51,worse,38) output(38,worse,64) output(79,worse,67) output(92,worse,38) output(92,worse,51) output(92,worse,64) output(92,worse,100) output(100,worse,51) output(100,worse,38) output(100,worse,64) output(33,worse,100) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,64) output(33,worse,51) output(33,worse,84) output(52,worse,84) output(58,worse,100) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,90) output(58,worse,33) output(58,worse,84) output(75,worse,51) output(75,worse,84) output(75,worse,64) output(75,worse,100) output(75,worse,38) output(75,worse,92) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,38) output(90,worse,64) output(90,worse,51) output(90,worse,84) output(24,worse,92) output(24,worse,38) output(24,worse,51) output(24,worse,64) output(24,worse,100) output(33,eq,90) output(58,eq,16) output(75,eq,33) output(51,eq,51) output(75,eq,90) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(90,eq,75) output(33,eq,75) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(90,eq,33) output(33,eq,33)
Optimization: 65 13
Progression : [17;65] (Error: 2.82353)
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(4))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasIngredient(3))),4) preference(1,(1,5),1,for(atom(hasIngredient(8))),2) preference(1,(1,6),1,for(atom(hasCategory(3))),6) preference(1,(1,7),1,for(atom(hasIngredient(12))),1) preference(1,(1,8),1,for(atom(hasCost(3))),5) preference(1,(1,9),1,for(atom(hasPrep(2))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasIngredient(7))),1) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,38) output(67,better,44) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,64) output(38,better,33) output(38,better,100) output(38,better,52) output(38,better,84) output(38,better,16) output(64,better,84) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,84) output(33,better,16) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,100) output(75,better,16) output(90,better,100) output(90,better,16) output(90,better,52) output(90,better,64) output(90,better,33) output(90,better,84) output(24,better,33) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(51,worse,92) output(38,worse,51) output(38,worse,92) output(64,worse,75) output(64,worse,51) output(64,worse,90) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,75) output(100,worse,90) output(33,worse,90) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,75) output(33,worse,51) output(75,worse,51) output(75,worse,92) output(90,worse,92) output(90,worse,51) output(24,worse,92) output(24,worse,51) output(24,eq,38) output(64,eq,52) output(90,eq,24) output(33,eq,100) output(51,eq,51) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(90,eq,38) output(75,eq,38) output(38,eq,38) output(100,eq,52) output(24,eq,75) output(90,eq,75) output(100,eq,64) output(33,eq,64) output(92,eq,92) output(9,eq,92) output(75,eq,24) output(38,eq,24) output(24,eq,24) output(100,eq,100) output(64,eq,100) output(24,eq,90) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 58 14
Progression : [18;58] (Error: 2.22222)
Progression : [19;58] (Error: 2.05263)
Progression : [20;58] (Error: 1.9)
Progression : [21;58] (Error: 1.7619)
Progression : [22;58] (Error: 1.63636)
Progression : [23;58] (Error: 1.52174)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(4))),2) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasCategory(4))),3) preference(1,(1,6),1,for(atom(hasIngredient(7))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasDifficulty(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(3))),6) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(67,better,44) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,64) output(38,better,52) output(38,better,84) output(38,better,16) output(79,better,44) output(92,better,38) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,16) output(100,better,16) output(100,better,92) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(100,better,33) output(33,better,90) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,16) output(58,better,52) output(58,better,64) output(58,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,16) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,64) output(90,better,84) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,75) output(51,worse,100) output(51,worse,24) output(38,worse,51) output(38,worse,33) output(38,worse,90) output(38,worse,100) output(38,worse,75) output(38,worse,92) output(38,worse,24) output(64,worse,75) output(64,worse,52) output(64,worse,51) output(64,worse,33) output(64,worse,90) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(64,worse,16) output(79,worse,67) output(92,worse,51) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(100,worse,24) output(100,worse,75) output(33,worse,100) output(33,worse,24) output(33,worse,92) output(33,worse,75) output(33,worse,51) output(58,worse,100) output(58,worse,24) output(58,worse,92) output(58,worse,38) output(58,worse,75) output(58,worse,51) output(58,worse,90) output(58,worse,33) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,75) output(90,worse,51) output(90,worse,33) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(64,eq,84) output(38,eq,38) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 57 14
Progression : [24;57] (Error: 1.375)
Progression : [25;57] (Error: 1.28)
Answer: 19
preference(1,(1,1),1,for(atom(hasIngredient(3))),5) preference(1,(1,2),1,for(atom(hasDifficulty(4))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasCategory(1))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasIngredient(7))),4) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(51,better,16) output(51,better,84) output(67,better,44) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,51) output(38,better,75) output(38,better,84) output(38,better,16) output(64,better,75) output(64,better,52) output(64,better,51) output(64,better,84) output(64,better,38) output(64,better,92) output(64,better,100) output(64,better,16) output(92,better,38) output(92,better,51) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,75) output(33,better,100) output(33,better,16) output(33,better,24) output(33,better,92) output(33,better,38) output(33,better,75) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,51) output(58,better,84) output(75,better,51) output(75,better,84) output(75,better,16) output(90,better,100) output(90,better,24) output(90,better,16) output(90,better,92) output(90,better,38) output(90,better,52) output(90,better,75) output(90,better,64) output(90,better,51) output(90,better,33) output(90,better,84) output(24,better,92) output(24,better,38) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(51,worse,33) output(51,worse,64) output(51,worse,75) output(51,worse,90) output(51,worse,100) output(51,worse,24) output(51,worse,52) output(51,worse,38) output(51,worse,92) output(38,worse,64) output(38,worse,33) output(38,worse,90) output(38,worse,100) output(38,worse,52) output(38,worse,92) output(38,worse,24) output(64,worse,33) output(64,worse,90) output(64,worse,24) output(79,worse,67) output(79,worse,44) output(92,worse,33) output(92,worse,90) output(92,worse,64) output(92,worse,24) output(100,worse,24) output(100,worse,92) output(100,worse,64) output(100,worse,90) output(100,worse,33) output(33,worse,90) output(58,worse,24) output(58,worse,64) output(58,worse,90) output(58,worse,33) output(75,worse,52) output(75,worse,64) output(75,worse,33) output(75,worse,90) output(75,worse,100) output(75,worse,38) output(75,worse,92) output(75,worse,24) output(24,worse,33) output(24,worse,90) output(51,eq,51) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(100,eq,52) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 56 14
Progression : [26;56] (Error: 1.15385)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasIngredient(7))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasCost(4))),6) preference(1,(1,11),1,for(atom(hasDifficulty(4))),3) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasCost(3))),1) preference(1,less(weight)) output(51,better,64) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,38) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(64,better,84) output(64,better,38) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,100) output(75,better,38) output(75,better,16) output(90,better,100) output(90,better,24) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,75) output(90,better,64) output(90,better,51) output(90,better,33) output(90,better,84) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(51,worse,33) output(51,worse,75) output(51,worse,90) output(51,worse,100) output(51,worse,24) output(51,worse,92) output(67,worse,44) output(38,worse,51) output(38,worse,64) output(38,worse,33) output(38,worse,90) output(38,worse,100) output(38,worse,75) output(38,worse,52) output(38,worse,84) output(38,worse,92) output(38,worse,24) output(38,worse,16) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,90) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(100,worse,24) output(100,worse,92) output(100,worse,75) output(100,worse,90) output(33,worse,90) output(33,worse,24) output(33,worse,92) output(33,worse,75) output(75,worse,90) output(75,worse,92) output(24,worse,92) output(24,worse,90) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(92,eq,90) output(90,eq,92) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(24,eq,75) output(92,eq,92) output(75,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(33,eq,33)
Optimization: 55 14
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasIngredient(7))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasCost(4))),6) preference(1,(1,11),1,for(atom(hasDifficulty(4))),3) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasPrep(3))),6) preference(1,less(weight)) output(51,better,64) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,38) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,16) output(64,better,84) output(64,better,38) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,100) output(75,better,38) output(75,better,16) output(90,better,100) output(90,better,24) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,75) output(90,better,64) output(90,better,51) output(90,better,33) output(90,better,84) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(51,worse,33) output(51,worse,75) output(51,worse,90) output(51,worse,100) output(51,worse,24) output(51,worse,92) output(67,worse,44) output(38,worse,51) output(38,worse,64) output(38,worse,33) output(38,worse,90) output(38,worse,100) output(38,worse,75) output(38,worse,52) output(38,worse,84) output(38,worse,92) output(38,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,90) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(100,worse,24) output(100,worse,92) output(100,worse,75) output(100,worse,90) output(33,worse,90) output(33,worse,24) output(33,worse,92) output(33,worse,75) output(75,worse,90) output(75,worse,92) output(24,worse,92) output(24,worse,90) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(92,eq,90) output(90,eq,92) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(24,eq,75) output(92,eq,92) output(75,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(33,eq,33)
Optimization: 54 14
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasIngredient(7))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasCost(4))),6) preference(1,(1,11),1,for(atom(hasDifficulty(4))),3) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(51,better,64) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,38) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,92) output(9,better,24) output(9,better,100) output(9,better,16) output(64,better,84) output(64,better,38) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,38) output(92,better,51) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,16) output(100,better,16) output(100,better,92) output(100,better,51) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,64) output(100,better,90) output(33,better,90) output(33,better,16) output(33,better,92) output(33,better,38) output(33,better,64) output(33,better,51) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,16) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,64) output(90,better,51) output(90,better,84) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,33) output(51,worse,75) output(51,worse,90) output(51,worse,100) output(51,worse,24) output(51,worse,92) output(67,worse,44) output(38,worse,51) output(38,worse,64) output(38,worse,33) output(38,worse,90) output(38,worse,100) output(38,worse,75) output(38,worse,52) output(38,worse,84) output(38,worse,92) output(38,worse,24) output(38,worse,16) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,90) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(92,worse,33) output(92,worse,75) output(92,worse,24) output(92,worse,100) output(100,worse,24) output(100,worse,75) output(33,worse,24) output(33,worse,75) output(90,worse,100) output(90,worse,24) output(90,worse,75) output(90,worse,33) output(64,eq,52) output(33,eq,100) output(51,eq,51) output(92,eq,90) output(90,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(24,eq,75) output(92,eq,92) output(75,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33)
Optimization: 53 14
Progression : [27;53] (Error: 0.962963)
Progression : [28;53] (Error: 0.892857)
Progression : [29;53] (Error: 0.827586)
Progression : [30;53] (Error: 0.766667)
Progression : [31;53] (Error: 0.709677)
Progression : [32;53] (Error: 0.65625)
Progression : [33;53] (Error: 0.606061)
Progression : [34;53] (Error: 0.558824)
Progression : [35;53] (Error: 0.514286)
Progression : [36;53] (Error: 0.472222)
Progression : [37;53] (Error: 0.432432)
Progression : [38;53] (Error: 0.394737)
Progression : [39;53] (Error: 0.358974)
Progression : [40;53] (Error: 0.325)
Progression : [41;53] (Error: 0.292683)
Progression : [42;53] (Error: 0.261905)
Progression : [43;53] (Error: 0.232558)
Progression : [44;53] (Error: 0.204545)
Progression : [45;53] (Error: 0.177778)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.192 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 53 14
Bounds       : [45;53] [0;14]
Calls        : 1
Time         : 598.189s (Solving: 593.35s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2377.275s
Threads      : 4        (Winner: 4)

Choices      : 30614494 (Domain: 1542230)
Conflicts    : 23575443 (Analyzed: 23575407)
Restarts     : 34285    (Average: 687.63 Last: 454408)
Model-Level  : 258.5   
Problems     : 40       (Average Length: 0.10 Splits: 0)
Lemmas       : 23681809 (Deleted: 21815696)
  Binary     : 542      (Ratio:   0.00%)
  Ternary    : 3754     (Ratio:   0.02%)
  Conflict   : 23575407 (Average Length:  159.1 Ratio:  99.55%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 106402   (Average Length:   24.0 Ratio:   0.45%) 
  Distributed: 35514    (Ratio:   0.15% Average LBD: 3.72) 
  Integrated : 106535   (Ratio: 299.98% Unit: 63 Average Jumps: 14.25)
Backjumps    : 23575407 (Average:  1.22 Max: 2605 Sum: 28826008)
  Executed   : 23575374 (Average:  1.22 Max: 2605 Sum: 28825091 Ratio: 100.00%)
  Bounded    : 33       (Average: 27.79 Max:  94 Sum:    917 Ratio:   0.00%)

Rules        : 1381931 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 23946   
Bodies       : 20016   
  Sum        : 263     
  Count      : 14      
Equivalences : 17291    (Atom=Atom: 1355 Body=Body: 567 Other: 15369)
Tight        : Yes
Variables    : 17461    (Eliminated:    0 Frozen: 8137)
Constraints  : 1394583  (Binary:  99.0% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasPrep(4)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasPrep(4)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasPrep(4)) ; 
  7 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  6 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasPrep(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(4)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(4)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(4)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) 
}.
