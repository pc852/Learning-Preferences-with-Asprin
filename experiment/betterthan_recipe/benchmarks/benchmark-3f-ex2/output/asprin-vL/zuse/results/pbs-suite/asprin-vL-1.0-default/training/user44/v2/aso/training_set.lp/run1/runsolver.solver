asprin_vL version 1.0
Reading from stdin
-:1254:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1279:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1360:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1634:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1811:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2012:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2016:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2016:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2022:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2121:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2147:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2267:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2301:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2323:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1171:1-16: info: no atoms over signature occur in program:
  output/3

-:1163:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1164:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1165:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1166:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1196:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(77,better,10) output(100,better,58) output(52,better,84) output(38,better,84) output(58,better,10) output(100,better,77) output(92,better,10) output(100,better,10) output(100,better,16) output(10,worse,16) output(84,worse,22) output(51,worse,38) output(84,worse,24) output(52,worse,24) output(51,worse,52) output(84,worse,90) output(51,worse,22) output(38,worse,24) output(51,worse,24) output(51,worse,90) output(92,eq,58) output(58,eq,77) output(65,eq,79) output(92,eq,64) output(38,eq,52) output(77,eq,16) output(92,eq,77) output(58,eq,16) output(92,eq,16) output(52,eq,90) output(38,eq,90) output(51,eq,84)
Optimization: 26 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasCategory(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(77,better,10) output(65,better,79) output(100,better,58) output(52,better,84) output(38,better,84) output(58,better,10) output(100,better,77) output(92,better,10) output(100,better,10) output(100,better,16) output(10,worse,16) output(84,worse,22) output(51,worse,38) output(84,worse,24) output(52,worse,24) output(51,worse,52) output(84,worse,90) output(51,worse,22) output(38,worse,24) output(51,worse,24) output(51,worse,90) output(92,eq,58) output(58,eq,77) output(92,eq,64) output(38,eq,52) output(77,eq,16) output(92,eq,77) output(58,eq,16) output(92,eq,16) output(52,eq,90) output(38,eq,90) output(51,eq,84)
Optimization: 25 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,1),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(100,better,58) output(52,better,84) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(92,better,16) output(100,better,16) output(10,worse,16) output(65,worse,79) output(84,worse,22) output(51,worse,38) output(38,worse,52) output(51,worse,52) output(84,worse,90) output(51,worse,22) output(38,worse,90) output(51,worse,84) output(38,worse,24) output(51,worse,24) output(51,worse,90) output(58,eq,77) output(92,eq,64) output(77,eq,16) output(58,eq,16) output(52,eq,90)
Optimization: 24 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(100,better,58) output(38,better,52) output(52,better,84) output(38,better,84) output(77,better,16) output(58,better,10) output(100,better,77) output(92,better,10) output(100,better,10) output(92,better,16) output(100,better,16) output(38,better,90) output(58,worse,77) output(10,worse,16) output(65,worse,79) output(84,worse,22) output(51,worse,38) output(84,worse,24) output(52,worse,24) output(51,worse,52) output(84,worse,90) output(51,worse,22) output(51,worse,24) output(51,worse,90) output(92,eq,64) output(92,eq,77) output(58,eq,16) output(52,eq,90) output(51,eq,84)
Optimization: 21 6
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(58,better,77) output(10,better,16) output(22,better,90) output(100,better,58) output(51,better,38) output(51,better,52) output(84,better,90) output(92,better,77) output(100,better,77) output(58,better,16) output(100,better,16) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(92,worse,58) output(77,worse,10) output(52,worse,24) output(58,worse,10) output(92,worse,10) output(100,worse,10) output(38,worse,24) output(84,eq,22) output(92,eq,64)
Optimization: 20 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),0,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,aso) output(92,better,58) output(10,better,16) output(84,better,22) output(22,better,90) output(100,better,58) output(38,better,52) output(84,better,24) output(51,better,52) output(84,better,90) output(77,better,16) output(100,better,77) output(100,better,10) output(92,better,16) output(100,better,16) output(38,better,90) output(51,better,90) output(58,worse,77) output(65,worse,79) output(52,worse,84) output(52,worse,24) output(38,worse,84) output(52,worse,22) output(58,worse,10) output(51,worse,84) output(77,eq,10) output(92,eq,64) output(51,eq,38) output(92,eq,77) output(92,eq,10) output(58,eq,16) output(38,eq,22) output(51,eq,22) output(52,eq,90) output(38,eq,24) output(51,eq,24)
Optimization: 19 2
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(58,better,77) output(10,better,16) output(65,better,79) output(22,better,90) output(92,better,64) output(100,better,58) output(51,better,38) output(51,better,52) output(84,better,90) output(92,better,77) output(100,better,77) output(58,better,16) output(100,better,16) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(92,worse,58) output(77,worse,10) output(52,worse,24) output(58,worse,10) output(92,worse,10) output(100,worse,10) output(38,worse,24) output(84,eq,22)
Optimization: 18 6
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,aso) output(58,better,77) output(10,better,16) output(65,better,79) output(22,better,90) output(92,better,64) output(100,better,58) output(51,better,38) output(52,better,24) output(51,better,52) output(84,better,90) output(92,better,77) output(100,better,77) output(58,better,16) output(100,better,16) output(51,better,22) output(51,better,84) output(51,better,24) output(51,better,90) output(92,worse,58) output(77,worse,10) output(58,worse,10) output(92,worse,10) output(100,worse,10) output(84,eq,22)
Optimization: 17 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,aso) output(58,better,77) output(10,better,16) output(65,better,79) output(22,better,90) output(92,better,64) output(100,better,58) output(51,better,38) output(52,better,24) output(51,better,52) output(84,better,90) output(92,better,77) output(100,better,77) output(58,better,16) output(100,better,16) output(51,better,22) output(52,better,90) output(51,better,84) output(51,better,24) output(51,better,90) output(92,worse,58) output(77,worse,10) output(58,worse,10) output(92,worse,10) output(100,worse,10) output(84,eq,22)
Optimization: 16 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,aso) output(58,better,77) output(77,better,10) output(65,better,79) output(84,better,22) output(92,better,64) output(51,better,38) output(52,better,84) output(52,better,24) output(38,better,84) output(52,better,22) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(38,better,22) output(51,better,22) output(52,better,90) output(51,better,84) output(51,better,24) output(10,worse,16) output(22,worse,90) output(38,worse,52) output(84,worse,24) output(51,worse,52) output(84,worse,90) output(77,worse,16) output(38,worse,90) output(92,eq,58) output(100,eq,58) output(58,eq,16) output(92,eq,16) output(100,eq,16)
Optimization: 15 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,aso) output(58,better,77) output(77,better,10) output(65,better,79) output(92,better,64) output(51,better,38) output(52,better,84) output(52,better,24) output(38,better,84) output(52,better,22) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(51,better,84) output(10,worse,16) output(22,worse,90) output(38,worse,52) output(84,worse,24) output(51,worse,52) output(84,worse,90) output(77,worse,16) output(38,worse,90) output(38,worse,24) output(92,eq,58) output(84,eq,22) output(100,eq,58) output(51,eq,24)
Optimization: 14 6
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,aso) output(58,better,77) output(77,better,10) output(65,better,79) output(92,better,64) output(51,better,38) output(52,better,84) output(52,better,24) output(38,better,84) output(52,better,22) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(51,better,84) output(51,better,24) output(10,worse,16) output(22,worse,90) output(38,worse,52) output(84,worse,24) output(51,worse,52) output(84,worse,90) output(77,worse,16) output(38,worse,90) output(92,eq,58) output(84,eq,22) output(100,eq,58)
Optimization: 13 6
Answer: 13
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasIngredient(12))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(10,better,16) output(65,better,79) output(84,better,22) output(92,better,64) output(100,better,58) output(38,better,52) output(38,better,84) output(51,better,52) output(84,better,90) output(77,better,16) output(92,better,77) output(92,better,10) output(100,better,10) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(58,worse,77) output(52,worse,84) output(58,worse,10) output(58,worse,16) output(51,eq,38) output(100,eq,77) output(52,eq,90)
Optimization: 11 6
Answer: 14
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasIngredient(12))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(10,better,16) output(84,better,22) output(92,better,64) output(100,better,58) output(38,better,52) output(84,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(77,better,16) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(58,worse,77) output(65,worse,79) output(52,worse,84) output(58,worse,10) output(58,worse,16) output(51,eq,38) output(52,eq,90)
Optimization: 10 6
Answer: 15
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(atom(hasPrep(7))),()) preference(1,(1,3),0,for(atom(hasIngredient(12))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(10,better,16) output(84,better,22) output(92,better,64) output(100,better,58) output(38,better,52) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(77,better,16) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(58,worse,77) output(65,worse,79) output(52,worse,84) output(58,worse,10) output(58,worse,16) output(51,eq,38) output(52,eq,90)
Optimization: 9 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(10))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasIngredient(10))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(58,better,77) output(65,better,79) output(84,better,22) output(100,better,58) output(38,better,52) output(52,better,84) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(52,better,22) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(92,worse,58) output(77,worse,16) output(22,eq,90)
Optimization: 8 6
Progression : [1;8] (Error: 7)
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,1),2,for(atom(hasIngredient(10))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasIngredient(10))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(8))),()) preference(1,aso) output(58,better,77) output(65,better,79) output(84,better,22) output(100,better,58) output(38,better,52) output(52,better,84) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(52,better,22) output(77,better,16) output(58,better,10) output(92,better,77) output(100,better,77) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(92,worse,58) output(22,eq,90)
Optimization: 7 6
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasIngredient(10))),()) preference(1,(1,5),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(10,better,16) output(65,better,79) output(84,better,22) output(22,better,90) output(92,better,64) output(100,better,58) output(38,better,52) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(52,better,22) output(77,better,16) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(58,worse,77) output(52,eq,84) output(58,eq,10) output(92,eq,77)
Optimization: 5 6
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,5),0,for(atom(hasPrep(0))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(10))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(8))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(10,better,16) output(65,better,79) output(84,better,22) output(22,better,90) output(92,better,64) output(100,better,58) output(51,better,38) output(38,better,52) output(52,better,84) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(52,better,22) output(77,better,16) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 20
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasPrep(5))),()) preference(1,aso) output(92,better,58) output(77,better,10) output(10,better,16) output(65,better,79) output(84,better,22) output(22,better,90) output(92,better,64) output(100,better,58) output(51,better,38) output(38,better,52) output(52,better,84) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(52,better,22) output(77,better,16) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90)
Optimization: 1 5
Progression : 1 [3;5] (Error: 0.666667)
Answer: 21
preference(1,(1,2),0,for(atom(hasPrep(0))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasCategory(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(58,better,77) output(77,better,10) output(10,better,16) output(65,better,79) output(84,better,22) output(22,better,90) output(92,better,64) output(100,better,58) output(51,better,38) output(38,better,52) output(52,better,84) output(84,better,24) output(52,better,24) output(38,better,84) output(51,better,52) output(84,better,90) output(52,better,22) output(77,better,16) output(58,better,10) output(92,better,77) output(100,better,77) output(92,better,10) output(100,better,10) output(58,better,16) output(92,better,16) output(100,better,16) output(38,better,22) output(51,better,22) output(52,better,90) output(38,better,90) output(51,better,84) output(38,better,24) output(51,better,24) output(51,better,90) output(92,eq,58)
Optimization: 1 4
OPTIMUM FOUND

Models       : 21
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 28.044s (Solving: 20.11s 1st Model: 0.41s Unsat: 10.26s)
CPU Time     : 88.164s
Threads      : 4        (Winner: 1)

Choices      : 311521   (Domain: 5162)
Conflicts    : 69041    (Analyzed: 69035)
Restarts     : 89       (Average: 775.67 Last: 8286)
Model-Level  : 676.9   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 108054   (Deleted: 31053)
  Binary     : 4394     (Ratio:   4.07%)
  Ternary    : 10388    (Ratio:   9.61%)
  Conflict   : 69035    (Average Length:  214.8 Ratio:  63.89%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 39019    (Average Length:   78.8 Ratio:  36.11%) 
  Distributed: 13033    (Ratio:  18.88% Average LBD: 3.06) 
  Integrated : 39098    (Ratio: 299.99% Unit: 321 Average Jumps: 60.38)
Backjumps    : 69035    (Average:  3.91 Max: 1375 Sum: 269901)
  Executed   : 69018    (Average:  3.90 Max: 1375 Sum: 269565 Ratio:  99.88%)
  Bounded    : 17       (Average: 19.76 Max:  34 Sum:    336 Ratio:   0.12%)

Rules        : 3379021 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 562182  
Bodies       : 695167  
  Count      : 1284    
Equivalences : 1706744  (Atom=Atom: 502152 Body=Body: 546264 Other: 658328)
Tight        : Yes
Variables    : 98923    (Eliminated:    0 Frozen: 33679)
Constraints  : 2977816  (Binary:  96.7% Ternary:   3.0% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(4)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> not atom(hasCost(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasCategory(2)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(4)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(4)) >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(2))  ; 
  atom(hasIngredient(1)) >> atom(hasCategory(2)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(4)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(4)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> not atom(hasPrepTime(1))  >> not atom(hasCost(1))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(4))  >> not atom(hasCost(4))  >> not atom(hasCategory(2))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(6)) >> atom(hasIngredient(1)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(3))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasCategory(4))  >> not atom(hasIngredient(11))  || not atom(hasPrep(4))  ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(1))  >> not atom(hasCost(3))  || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> not atom(hasPrepTime(1))  >> not atom(hasCost(1))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(4))  >> not atom(hasCost(4))  >> not atom(hasCategory(2))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(6)) >> atom(hasIngredient(1)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(3))  || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> not atom(hasPrepTime(1))  >> not atom(hasCost(1))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(4))  >> not atom(hasCost(4))  >> not atom(hasCategory(2))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(6)) >> atom(hasCategory(5)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  >> not atom(hasPrepTime(1))  >> not atom(hasCost(1))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(4))  >> not atom(hasCost(4))  >> not atom(hasCategory(2))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> atom(hasDifficulty(2)) >> atom(hasCategory(5)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasCategory(1))  >> not atom(hasCost(4))  >> not atom(hasCategory(5))  || atom(hasIngredient(11)) ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(1))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(2)) >> not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(2))  || not atom(hasDifficulty(4))  ; 
  not atom(hasCategory(1))  >> not atom(hasCost(4))  >> not atom(hasCategory(5))  || atom(hasIngredient(11)) ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(1))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(2)) >> not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(2))  || not atom(hasDifficulty(4))  ; 
  not atom(hasCategory(1))  >> not atom(hasCost(4))  >> not atom(hasCategory(5))  || atom(hasIngredient(11)) ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(1))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(2)) >> not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(3))  >> not atom(hasIngredient(12))  >> atom(hasIngredient(3)) || atom(hasIngredient(7)) ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasIngredient(11))  || atom(hasPrep(7)) ; 
  not atom(hasIngredient(12))  >> atom(hasIngredient(3)) || atom(hasIngredient(12)) ; 
  not atom(hasIngredient(12))  >> not atom(hasPrepTime(3))  || atom(hasIngredient(11)) ; 
  atom(hasDifficulty(4)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(3))  || not atom(hasCost(3))  ; 
  not atom(hasCategory(4))  >> not atom(hasIngredient(6))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(3))  >> not atom(hasIngredient(12))  >> not atom(hasCategory(1))  || atom(hasIngredient(7)) ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasIngredient(11))  || atom(hasPrep(7)) ; 
  not atom(hasIngredient(12))  >> not atom(hasCategory(1))  || atom(hasIngredient(12)) ; 
  not atom(hasIngredient(12))  >> not atom(hasPrepTime(3))  || atom(hasIngredient(11)) ; 
  atom(hasPrep(4)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(3))  || not atom(hasDifficulty(4))  ; 
  not atom(hasCategory(4))  >> not atom(hasIngredient(6))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(3))  >> not atom(hasIngredient(12))  >> not atom(hasCategory(1))  || atom(hasIngredient(7)) ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  >> not atom(hasIngredient(11))  || atom(hasPrep(7)) ; 
  not atom(hasIngredient(12))  >> not atom(hasCategory(1))  || atom(hasIngredient(12)) ; 
  not atom(hasIngredient(11))  >> not atom(hasCost(5))  || atom(hasIngredient(11)) ; 
  atom(hasPrep(4)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(3))  || not atom(hasDifficulty(4))  ; 
  atom(hasCategory(1)) >> not atom(hasIngredient(6))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasIngredient(10)) >> not atom(hasPrep(6))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasIngredient(10)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(11)) >> atom(hasPrepTime(1)) >> not atom(hasCategory(3))  || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> atom(hasCategory(5)) || not atom(hasDifficulty(2))  ; 
  atom(hasCost(4)) >> not atom(hasPrep(1))  >> atom(hasPrep(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(4)) >> not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasIngredient(10)) >> not atom(hasPrep(6))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasIngredient(10)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(11)) >> atom(hasPrepTime(1)) >> not atom(hasCategory(3))  || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> atom(hasCategory(5)) || not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(1))  >> atom(hasIngredient(8)) || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(4)) >> not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasIngredient(12)) >> atom(hasIngredient(8)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(7))  >> atom(hasCost(3)) || not atom(hasCategory(3))  ; 
  atom(hasIngredient(9)) >> atom(hasPrep(2)) >> atom(hasIngredient(10)) || not atom(hasCategory(1))  ; 
  atom(hasPrep(6)) >> atom(hasCategory(5)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(10))  ; 
  not atom(hasDifficulty(1))  || atom(hasCost(2)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(4)) >> not atom(hasIngredient(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasIngredient(12)) >> atom(hasIngredient(8)) || not atom(hasCost(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(5)) >> not atom(hasPrep(0))  || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> atom(hasCategory(1)) >> not atom(hasPrep(6))  || not atom(hasPrep(0))  ; 
  atom(hasIngredient(10)) >> atom(hasCost(3)) >> not atom(hasPrep(6))  || atom(hasPrepTime(2)) ; 
  atom(hasPrep(4)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(3))  || atom(hasPrep(0)) ; 
  atom(hasIngredient(11)) >> not atom(hasCategory(2))  || not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(1)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(10)) >> atom(hasPrep(5)) >> atom(hasPrepTime(2)) || not atom(hasPrep(6))  ; 
  atom(hasPrep(0)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(4))  || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCost(3))  >> atom(hasPrep(5)) || not atom(hasCost(4))  ; 
  not atom(hasPrep(0))  >> not atom(hasPrep(1))  >> not atom(hasCategory(3))  || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(3))  || atom(hasPrep(0)) ; 
  atom(hasCategory(3)) >> atom(hasPrep(5)) >> atom(hasDifficulty(2)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(4))  || not atom(hasCategory(3))  ; 
  atom(hasCategory(2)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  
}.
