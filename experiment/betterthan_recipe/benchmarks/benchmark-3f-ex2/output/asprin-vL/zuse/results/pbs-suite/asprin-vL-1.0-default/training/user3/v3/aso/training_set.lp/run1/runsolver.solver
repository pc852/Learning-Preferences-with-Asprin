asprin_vL version 1.0
Reading from stdin
-:1247:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1272:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1353:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1627:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1804:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2005:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2009:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2009:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2015:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2114:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2140:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2260:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2294:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2316:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1164:1-16: info: no atoms over signature occur in program:
  output/3

-:1156:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1157:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1158:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1159:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1189:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(47,better,70) output(24,better,50) output(52,better,69) output(23,better,67) output(24,better,67) output(72,better,69) output(64,worse,47) output(49,worse,24) output(50,worse,23) output(64,worse,72) output(42,worse,24) output(49,worse,23) output(42,worse,23) output(64,worse,52) output(29,worse,24) output(64,worse,70) output(29,worse,23) output(29,eq,49) output(72,eq,52) output(24,eq,23) output(50,eq,67) output(49,eq,50) output(42,eq,50) output(29,eq,50) output(64,eq,69) output(49,eq,67) output(42,eq,67) output(29,eq,67)
Optimization: 22 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(47,better,70) output(29,better,49) output(24,better,50) output(52,better,69) output(72,better,69) output(42,better,50) output(29,better,50) output(49,worse,24) output(50,worse,23) output(64,worse,72) output(50,worse,67) output(49,worse,23) output(64,worse,52) output(49,worse,67) output(72,eq,52) output(24,eq,23) output(49,eq,50) output(64,eq,69) output(42,eq,67) output(29,eq,67)
Optimization: 21 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(47,better,70) output(29,better,49) output(24,better,50) output(52,better,69) output(23,better,67) output(24,better,67) output(42,better,50) output(29,better,50) output(42,better,67) output(29,better,67) output(49,worse,24) output(50,worse,23) output(72,worse,52) output(49,worse,23) output(64,worse,52) output(24,eq,23) output(50,eq,67) output(49,eq,50) output(64,eq,69) output(49,eq,67)
Optimization: 18 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(47,better,70) output(24,better,50) output(72,better,52) output(52,better,69) output(23,better,67) output(24,better,67) output(72,better,69) output(49,better,50) output(42,better,50) output(49,better,67) output(42,better,67) output(64,worse,47) output(29,worse,49) output(49,worse,24) output(50,worse,23) output(64,worse,72) output(42,worse,24) output(49,worse,23) output(42,worse,23) output(64,worse,52) output(29,worse,24) output(64,worse,70) output(29,worse,23) output(24,eq,23) output(50,eq,67) output(29,eq,50) output(64,eq,69) output(29,eq,67)
Optimization: 17 6
Answer: 5
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,aso) output(64,better,47) output(49,better,24) output(50,better,23) output(64,better,72) output(42,better,24) output(50,better,67) output(49,better,23) output(42,better,23) output(64,better,52) output(29,better,24) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67) output(47,worse,70) output(24,worse,50) output(52,worse,69) output(72,worse,69) output(29,eq,49) output(72,eq,52) output(24,eq,23) output(23,eq,67) output(24,eq,67) output(49,eq,50) output(42,eq,50) output(64,eq,70) output(29,eq,50) output(64,eq,69)
Optimization: 14 2
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(64,better,47) output(29,better,49) output(49,better,24) output(50,better,23) output(64,better,72) output(42,better,24) output(50,better,67) output(42,better,23) output(64,better,52) output(29,better,24) output(64,better,70) output(64,better,69) output(29,better,23) output(42,better,67) output(29,better,67) output(24,worse,50) output(72,worse,52) output(24,worse,23) output(24,worse,67) output(49,worse,50) output(47,eq,70) output(23,eq,67) output(49,eq,23) output(42,eq,50) output(29,eq,50) output(49,eq,67)
Optimization: 13 5
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(64,better,47) output(29,better,49) output(49,better,24) output(50,better,23) output(64,better,72) output(72,better,52) output(42,better,24) output(50,better,67) output(42,better,23) output(64,better,52) output(29,better,24) output(64,better,70) output(64,better,69) output(29,better,23) output(42,better,67) output(29,better,67) output(47,worse,70) output(24,worse,50) output(52,worse,69) output(24,worse,23) output(24,worse,67) output(72,worse,69) output(49,worse,50) output(29,worse,50) output(23,eq,67) output(49,eq,23) output(42,eq,50) output(49,eq,67)
Optimization: 12 5
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),0,for(atom(hasCategory(2))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasPrep(4))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,2),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(47,better,70) output(49,better,24) output(50,better,23) output(52,better,69) output(42,better,24) output(24,better,23) output(50,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(49,better,50) output(42,better,50) output(29,better,24) output(29,better,50) output(64,better,69) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67) output(64,worse,47) output(72,worse,52) output(64,worse,52) output(29,eq,49) output(24,eq,50) output(23,eq,67)
Optimization: 9 6
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasPrep(0))),()) preference(1,(1,5),3,for(atom(hasIngredient(10))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(24,better,50) output(64,better,72) output(52,better,69) output(42,better,24) output(24,better,23) output(23,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(72,better,69) output(64,better,52) output(49,better,50) output(42,better,50) output(64,better,70) output(64,better,69) output(49,better,67) output(42,better,67) output(29,better,67) output(29,worse,49) output(72,worse,52) output(29,worse,24) output(49,eq,24) output(29,eq,23)
Optimization: 8 6
Progression : [1;8] (Error: 7)
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(49,better,24) output(24,better,50) output(64,better,72) output(72,better,52) output(42,better,24) output(23,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(72,better,69) output(64,better,52) output(49,better,50) output(42,better,50) output(64,better,70) output(29,better,50) output(64,better,69) output(49,better,67) output(42,better,67) output(29,better,67) output(29,worse,49) output(50,worse,23) output(52,worse,69) output(29,worse,24) output(29,worse,23) output(24,eq,23)
Optimization: 7 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(49,better,24) output(24,better,50) output(64,better,72) output(42,better,24) output(23,better,67) output(50,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(64,better,52) output(49,better,50) output(42,better,50) output(29,better,24) output(64,better,70) output(29,better,50) output(64,better,69) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67) output(50,worse,23) output(52,worse,69) output(72,worse,69) output(29,eq,49)
Optimization: 6 6
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(7))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(29,better,49) output(24,better,50) output(64,better,72) output(42,better,24) output(24,better,23) output(23,better,67) output(50,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(64,better,52) output(49,better,50) output(42,better,50) output(29,better,24) output(64,better,70) output(29,better,50) output(64,better,69) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67) output(50,worse,23) output(52,worse,69) output(72,worse,69)
Optimization: 5 6
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasCategory(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,(1,6),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(29,better,49) output(49,better,24) output(24,better,50) output(50,better,23) output(64,better,72) output(72,better,52) output(52,better,69) output(42,better,24) output(24,better,23) output(49,better,23) output(42,better,23) output(72,better,69) output(64,better,52) output(49,better,50) output(42,better,50) output(29,better,24) output(64,better,70) output(29,better,50) output(64,better,69) output(29,better,23) output(42,better,67) output(29,better,67)
Optimization: 4 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),0,for(atom(hasCategory(3))),()) preference(1,(1,4),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,3),2,for(atom(hasCategory(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,(1,1),3,for(atom(hasPrep(7))),()) preference(1,(1,2),3,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(29,better,49) output(49,better,24) output(24,better,50) output(64,better,72) output(72,better,52) output(52,better,69) output(42,better,24) output(24,better,23) output(23,better,67) output(50,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(72,better,69) output(64,better,52) output(49,better,50) output(42,better,50) output(29,better,24) output(64,better,70) output(29,better,50) output(64,better,69) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 15
preference(1,(1,4),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasPrep(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),3,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(29,better,49) output(49,better,24) output(24,better,50) output(64,better,72) output(72,better,52) output(52,better,69) output(42,better,24) output(24,better,23) output(23,better,67) output(50,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(72,better,69) output(64,better,52) output(49,better,50) output(42,better,50) output(29,better,24) output(64,better,70) output(29,better,50) output(64,better,69) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67)
Optimization: 1 5
Answer: 16
preference(1,(1,3),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(64,better,47) output(47,better,70) output(29,better,49) output(49,better,24) output(24,better,50) output(64,better,72) output(72,better,52) output(52,better,69) output(42,better,24) output(24,better,23) output(23,better,67) output(50,better,67) output(24,better,67) output(49,better,23) output(42,better,23) output(72,better,69) output(64,better,52) output(49,better,50) output(42,better,50) output(29,better,24) output(64,better,70) output(29,better,50) output(64,better,69) output(29,better,23) output(49,better,67) output(42,better,67) output(29,better,67)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 19.194s (Solving: 12.91s 1st Model: 0.35s Unsat: 10.73s)
CPU Time     : 57.743s
Threads      : 4        (Winner: 1)

Choices      : 241280   (Domain: 2894)
Conflicts    : 54432    (Analyzed: 54426)
Restarts     : 90       (Average: 604.73 Last: 3121)
Model-Level  : 843.0   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 90640    (Deleted: 18990)
  Binary     : 3754     (Ratio:   4.14%)
  Ternary    : 11961    (Ratio:  13.20%)
  Conflict   : 54425    (Average Length:  146.2 Ratio:  60.05%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 36215    (Average Length:   63.7 Ratio:  39.95%) 
  Distributed: 12181    (Ratio:  22.38% Average LBD: 3.03) 
  Integrated : 36536    (Ratio: 299.94% Unit: 326 Average Jumps: 46.19)
Backjumps    : 54426    (Average:  3.82 Max: 1255 Sum: 208021)
  Executed   : 54406    (Average:  3.82 Max: 1255 Sum: 207747 Ratio:  99.87%)
  Bounded    : 20       (Average: 13.70 Max:  27 Sum:    274 Ratio:   0.13%)

Rules        : 2715690 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 455252  
Bodies       : 572605  
  Count      : 1032    
Equivalences : 1376799  (Atom=Atom: 405187 Body=Body: 439061 Other: 532551)
Tight        : Yes
Variables    : 92723    (Eliminated:    0 Frozen: 27563)
Constraints  : 2427968  (Binary:  96.3% Ternary:   3.5% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasDifficulty(4)) >> not atom(hasPrepTime(2))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(10)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(10)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(1)) >> not atom(hasPrep(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(10)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(10)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasDifficulty(4)) >> not atom(hasCost(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasCost(4)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(6)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(10)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasCost(1))  >> not atom(hasCategory(2))  || atom(hasCost(4)) ; 
  atom(hasCategory(3)) >> not atom(hasCost(4))  >> atom(hasPrep(5)) || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasCost(1)) >> not atom(hasCost(1))  || not atom(hasPrep(2))  ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(0))  >> not atom(hasCost(1))  ; 
  atom(hasIngredient(8)) >> atom(hasPrep(4)) >> atom(hasCost(4)) ; 
  atom(hasCost(1)) >> atom(hasCategory(5)) >> atom(hasIngredient(5)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(1))  >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasCategory(3)) >> not atom(hasCost(1))  || not atom(hasPrep(2))  ; 
  atom(hasCost(1)) >> atom(hasCategory(5)) >> atom(hasPrep(1)) || not atom(hasCategory(3))  ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(0))  >> not atom(hasCost(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(1))  >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasIngredient(7)) >> not atom(hasPrepTime(1))  || not atom(hasCost(5))  ; 
  not atom(hasCost(4))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasPrepTime(2))  >> not atom(hasIngredient(10))  || not atom(hasDifficulty(2))  ; 
  not atom(hasPrep(4))  >> not atom(hasIngredient(8))  || atom(hasPrep(4)) ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(4))  >> not atom(hasPrep(1))  || atom(hasCategory(4)) ; 
  not atom(hasIngredient(8))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(3)) >> not atom(hasCost(1))  || not atom(hasPrep(0))  ; 
  atom(hasIngredient(8)) >> atom(hasCost(5)) >> atom(hasPrep(0)) || not atom(hasPrep(1))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(4)) >> atom(hasPrep(2)) || not atom(hasCategory(5))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCategory(2))  >> not atom(hasCost(1))  ; 
  atom(hasPrep(0)) >> atom(hasPrep(4)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(1)) >> atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasPrep(7)) >> not atom(hasCost(3))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(4)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasCost(5))  ; 
  atom(hasCost(1)) >> atom(hasCost(5)) >> atom(hasPrep(0)) || not atom(hasPrep(1))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(4)) >> atom(hasPrep(2)) || not atom(hasCategory(5))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCategory(2))  >> not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasPrep(7)) >> not atom(hasCost(3))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(4)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasCost(5))  ; 
  atom(hasCost(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || not atom(hasCategory(3))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCategory(2))  >> not atom(hasCost(1))  ; 
  atom(hasCost(5)) >> atom(hasCategory(5)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasCost(3)) >> not atom(hasCost(3))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(4)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasCost(5))  ; 
  atom(hasCost(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || not atom(hasCategory(3))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCategory(2))  >> not atom(hasCost(1))  ; 
  atom(hasCost(5)) >> atom(hasPrep(7)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasIngredient(4)) >> not atom(hasPrepTime(2))  || not atom(hasCost(5))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(4)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  not atom(hasPrepTime(2))  >> atom(hasIngredient(3)) >> atom(hasPrep(4)) || not atom(hasCost(5))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(7)) >> atom(hasIngredient(9)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(5)) >> atom(hasCategory(1)) >> atom(hasIngredient(9)) || not atom(hasPrep(1))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCategory(2))  >> not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(4))  >> atom(hasCost(3)) >> atom(hasPrep(7)) || not atom(hasIngredient(12))  ; 
  atom(hasPrep(0)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(4)) || not atom(hasCategory(5))  ; 
  atom(hasPrep(4)) >> atom(hasCategory(4)) >> atom(hasPrepTime(3)) || atom(hasCategory(3)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(1))  >> not atom(hasIngredient(9))  || not atom(hasCost(5))  ; 
  atom(hasCategory(2)) >> atom(hasPrepTime(3)) >> atom(hasCost(2)) || not atom(hasPrep(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(0))  || not atom(hasPrep(3))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> not atom(hasIngredient(9))  || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(9)) >> atom(hasIngredient(4)) || not atom(hasPrep(1))  ; 
  atom(hasIngredient(8)) >> not atom(hasPrep(4))  >> not atom(hasCost(5))  ; 
  atom(hasPrep(1)) >> atom(hasPrep(7)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> not atom(hasCost(2))  >> not atom(hasIngredient(9))  || not atom(hasPrep(0))  ; 
  not atom(hasCost(2))  >> atom(hasPrep(0)) >> not atom(hasPrep(0))  || not atom(hasPrep(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(7)) >> not atom(hasCost(3))  || not atom(hasPrep(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(7))  >> atom(hasPrep(4)) || not atom(hasPrep(0))  
}.
