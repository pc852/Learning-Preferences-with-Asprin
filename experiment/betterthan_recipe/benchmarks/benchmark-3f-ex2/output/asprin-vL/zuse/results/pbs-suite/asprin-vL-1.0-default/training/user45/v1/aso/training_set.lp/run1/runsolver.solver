asprin_vL version 1.0
Reading from stdin
-:1324:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1349:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1430:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1704:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1881:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2082:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2086:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2086:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2092:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2191:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2217:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2337:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2371:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2393:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1241:1-16: info: no atoms over signature occur in program:
  output/3

-:1233:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1234:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1235:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1236:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1266:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(100,better,90) output(44,better,16) output(100,better,52) output(24,better,84) output(38,better,84) output(9,better,52) output(44,better,67) output(100,better,33) output(75,better,16) output(9,better,90) output(51,better,16) output(58,better,16) output(79,better,16) output(9,better,33) output(75,better,67) output(51,better,67) output(58,better,67) output(64,better,84) output(75,better,84) output(51,better,84) output(58,better,84) output(79,better,84) output(100,better,84) output(9,better,84) output(79,better,67) output(100,better,67) output(9,better,67) output(100,better,16) output(9,better,16) output(33,worse,79) output(52,worse,51) output(52,worse,58) output(33,worse,51) output(52,worse,75) output(90,worse,79) output(33,worse,75) output(90,worse,75) output(52,worse,44) output(33,worse,44) output(90,worse,51) output(33,worse,58) output(90,worse,58) output(52,worse,64) output(33,worse,64) output(52,worse,38) output(75,worse,24) output(51,worse,24) output(58,worse,24) output(52,worse,24) output(33,worse,24) output(90,worse,24) output(33,worse,38) output(90,worse,38) output(90,worse,64) output(90,worse,44) output(9,eq,100) output(51,eq,75) output(75,eq,44) output(90,eq,33) output(16,eq,67) output(51,eq,58) output(64,eq,38) output(58,eq,75) output(51,eq,44) output(58,eq,44) output(100,eq,79) output(9,eq,79) output(52,eq,16) output(79,eq,64) output(100,eq,64) output(79,eq,38) output(52,eq,84) output(33,eq,84) output(90,eq,84) output(100,eq,38) output(9,eq,38) output(9,eq,64) output(52,eq,67) output(33,eq,67) output(90,eq,67) output(33,eq,16) output(90,eq,16)
Optimization: 76 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(100,better,90) output(44,better,16) output(16,better,67) output(100,better,52) output(24,better,84) output(38,better,84) output(9,better,52) output(44,better,67) output(100,better,33) output(75,better,16) output(9,better,90) output(58,better,16) output(79,better,16) output(9,better,33) output(75,better,67) output(51,better,67) output(58,better,67) output(64,better,84) output(75,better,84) output(51,better,84) output(58,better,84) output(79,better,84) output(52,better,84) output(100,better,84) output(9,better,84) output(33,better,84) output(90,better,84) output(79,better,67) output(52,better,67) output(100,better,67) output(9,better,67) output(33,better,67) output(90,better,67) output(100,better,16) output(9,better,16) output(33,worse,79) output(51,worse,75) output(51,worse,58) output(52,worse,58) output(51,worse,44) output(52,worse,75) output(90,worse,79) output(33,worse,75) output(90,worse,75) output(52,worse,44) output(33,worse,44) output(33,worse,58) output(90,worse,58) output(52,worse,64) output(33,worse,64) output(52,worse,38) output(75,worse,24) output(51,worse,24) output(58,worse,24) output(52,worse,24) output(33,worse,24) output(90,worse,24) output(33,worse,38) output(90,worse,38) output(90,worse,64) output(90,worse,44) output(9,eq,100) output(75,eq,44) output(90,eq,33) output(64,eq,38) output(58,eq,75) output(58,eq,44) output(100,eq,79) output(9,eq,79) output(52,eq,16) output(79,eq,64) output(100,eq,64) output(79,eq,38) output(100,eq,38) output(9,eq,38) output(9,eq,64) output(33,eq,16) output(90,eq,16)
Optimization: 70 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(100,better,90) output(51,better,75) output(44,better,16) output(100,better,52) output(24,better,84) output(58,better,75) output(38,better,84) output(9,better,52) output(44,better,67) output(100,better,33) output(9,better,90) output(100,better,79) output(9,better,79) output(51,better,16) output(58,better,16) output(9,better,33) output(51,better,67) output(58,better,67) output(100,better,64) output(64,better,84) output(75,better,84) output(51,better,84) output(58,better,84) output(79,better,84) output(52,better,84) output(100,better,84) output(9,better,84) output(33,better,84) output(90,better,84) output(100,better,38) output(9,better,38) output(9,better,64) output(100,better,67) output(9,better,67) output(100,better,16) output(9,better,16) output(75,worse,44) output(52,worse,51) output(52,worse,58) output(33,worse,51) output(52,worse,44) output(33,worse,44) output(90,worse,51) output(33,worse,58) output(90,worse,58) output(75,worse,24) output(51,worse,24) output(58,worse,24) output(52,worse,24) output(33,worse,24) output(90,worse,24) output(90,worse,44) output(9,eq,100) output(90,eq,33) output(16,eq,67) output(51,eq,58) output(64,eq,38) output(51,eq,44) output(58,eq,44) output(52,eq,16) output(79,eq,64) output(79,eq,38) output(52,eq,67) output(33,eq,67) output(90,eq,67) output(33,eq,16) output(90,eq,16)
Optimization: 69 6
Answer: 4
preference(1,(1,1),0,for(atom(hasDifficulty(4))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(79,better,51) output(52,better,51) output(64,better,38) output(64,better,24) output(79,better,58) output(52,better,58) output(100,better,51) output(33,better,51) output(79,better,75) output(52,better,75) output(100,better,75) output(9,better,75) output(33,better,75) output(90,better,75) output(79,better,44) output(52,better,44) output(100,better,44) output(33,better,44) output(79,better,16) output(52,better,16) output(90,better,51) output(9,better,51) output(100,better,58) output(9,better,58) output(33,better,58) output(90,better,58) output(79,better,38) output(52,better,38) output(79,better,24) output(52,better,24) output(100,better,24) output(9,better,24) output(33,better,24) output(90,better,24) output(100,better,38) output(9,better,38) output(33,better,38) output(90,better,38) output(100,better,16) output(9,better,16) output(33,better,16) output(90,better,16) output(90,better,44) output(9,better,44) output(16,worse,67) output(75,worse,64) output(24,worse,84) output(38,worse,84) output(51,worse,64) output(58,worse,64) output(44,worse,67) output(75,worse,67) output(51,worse,67) output(58,worse,67) output(75,worse,84) output(51,worse,84) output(58,worse,84) output(9,eq,100) output(100,eq,90) output(33,eq,79) output(75,eq,44) output(44,eq,16) output(90,eq,33) output(100,eq,52) output(38,eq,24) output(58,eq,75) output(75,eq,38) output(9,eq,52) output(100,eq,33) output(75,eq,16) output(58,eq,44) output(90,eq,79) output(9,eq,90) output(100,eq,79) output(9,eq,79) output(58,eq,16) output(9,eq,33) output(79,eq,64) output(52,eq,64) output(100,eq,64) output(33,eq,64) output(58,eq,38) output(75,eq,24) output(58,eq,24) output(64,eq,84) output(79,eq,84) output(52,eq,84) output(100,eq,84) output(9,eq,84) output(33,eq,84) output(90,eq,84) output(90,eq,64) output(9,eq,64) output(79,eq,67) output(52,eq,67) output(100,eq,67) output(9,eq,67) output(33,eq,67) output(90,eq,67)
Optimization: 61 2
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(1))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(33,better,79) output(16,better,67) output(100,better,52) output(52,better,51) output(75,better,64) output(58,better,75) output(75,better,38) output(51,better,64) output(58,better,64) output(100,better,51) output(9,better,52) output(44,better,67) output(33,better,51) output(52,better,75) output(90,better,79) output(100,better,79) output(9,better,79) output(100,better,75) output(9,better,75) output(33,better,75) output(90,better,75) output(100,better,44) output(33,better,44) output(90,better,51) output(58,better,67) output(9,better,51) output(100,better,58) output(9,better,58) output(33,better,58) output(90,better,58) output(79,better,64) output(52,better,64) output(100,better,64) output(33,better,64) output(51,better,38) output(58,better,38) output(79,better,38) output(52,better,38) output(58,better,24) output(58,better,84) output(52,better,84) output(100,better,84) output(9,better,84) output(33,better,84) output(90,better,84) output(52,better,24) output(100,better,24) output(9,better,24) output(33,better,24) output(90,better,24) output(100,better,38) output(9,better,38) output(33,better,38) output(90,better,38) output(90,better,64) output(9,better,64) output(52,better,67) output(100,better,67) output(9,better,67) output(33,better,67) output(90,better,67) output(100,better,16) output(9,better,16) output(33,better,16) output(90,better,16) output(90,better,44) output(9,better,44) output(75,worse,44) output(51,worse,58) output(38,worse,24) output(38,worse,84) output(64,worse,24) output(79,worse,58) output(75,worse,16) output(51,worse,44) output(79,worse,44) output(51,worse,16) output(79,worse,16) output(64,worse,84) output(9,eq,100) output(100,eq,90) output(44,eq,16) output(90,eq,33) output(64,eq,38) output(24,eq,84) output(52,eq,58) output(100,eq,33) output(58,eq,44) output(79,eq,75) output(9,eq,90) output(52,eq,44) output(58,eq,16) output(52,eq,16) output(9,eq,33) output(51,eq,67) output(51,eq,24) output(51,eq,84)
Optimization: 38 2
Answer: 6
preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(7))),()) preference(1,(1,5),1,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),3,for(atom(hasPrep(7))),()) preference(1,aso) output(33,better,79) output(51,better,75) output(44,better,16) output(16,better,67) output(100,better,52) output(51,better,58) output(75,better,64) output(64,better,38) output(75,better,38) output(51,better,64) output(58,better,64) output(79,better,58) output(9,better,52) output(44,better,67) output(75,better,16) output(51,better,44) output(90,better,79) output(100,better,79) output(9,better,79) output(100,better,75) output(9,better,75) output(33,better,75) output(90,better,75) output(100,better,44) output(33,better,44) output(51,better,16) output(79,better,16) output(75,better,67) output(51,better,67) output(58,better,67) output(100,better,58) output(9,better,58) output(33,better,58) output(90,better,58) output(79,better,64) output(52,better,64) output(100,better,64) output(33,better,64) output(51,better,38) output(58,better,38) output(79,better,38) output(52,better,38) output(75,better,24) output(51,better,24) output(75,better,84) output(51,better,84) output(79,better,84) output(100,better,84) output(9,better,84) output(33,better,84) output(90,better,84) output(79,better,24) output(100,better,24) output(9,better,24) output(33,better,24) output(90,better,24) output(100,better,38) output(9,better,38) output(33,better,38) output(90,better,38) output(90,better,64) output(9,better,64) output(79,better,67) output(52,better,67) output(100,better,67) output(9,better,67) output(33,better,67) output(90,better,67) output(100,better,16) output(9,better,16) output(33,better,16) output(90,better,16) output(90,better,44) output(9,better,44) output(79,worse,51) output(52,worse,51) output(38,worse,24) output(58,worse,75) output(38,worse,84) output(64,worse,24) output(58,worse,44) output(52,worse,75) output(52,worse,44) output(64,worse,84) output(9,eq,100) output(100,eq,90) output(75,eq,44) output(90,eq,33) output(24,eq,84) output(52,eq,58) output(100,eq,51) output(33,eq,51) output(100,eq,33) output(79,eq,75) output(9,eq,90) output(79,eq,44) output(58,eq,16) output(52,eq,16) output(9,eq,33) output(90,eq,51) output(9,eq,51)
Optimization: 31 3
Progression : [ 1;31] (Error: 30)
Answer: 7
preference(1,(1,2),0,for(atom(hasIngredient(9))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(2))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasPrep(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasCategory(1))),()) preference(1,(1,2),3,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasCost(3))),()) preference(1,aso) output(9,better,100) output(100,better,90) output(33,better,79) output(51,better,75) output(79,better,51) output(16,better,67) output(100,better,52) output(52,better,51) output(64,better,38) output(38,better,24) output(58,better,75) output(64,better,24) output(79,better,58) output(52,better,58) output(100,better,51) output(9,better,52) output(33,better,51) output(100,better,33) output(51,better,44) output(58,better,44) output(79,better,75) output(52,better,75) output(9,better,90) output(100,better,79) output(9,better,79) output(100,better,75) output(9,better,75) output(33,better,75) output(90,better,75) output(79,better,44) output(52,better,44) output(100,better,44) output(33,better,44) output(51,better,16) output(58,better,16) output(79,better,16) output(52,better,16) output(9,better,33) output(90,better,51) output(51,better,67) output(58,better,67) output(9,better,51) output(100,better,58) output(9,better,58) output(33,better,58) output(90,better,58) output(79,better,64) output(52,better,64) output(100,better,64) output(33,better,64) output(51,better,38) output(58,better,38) output(79,better,38) output(52,better,38) output(51,better,24) output(58,better,24) output(51,better,84) output(58,better,84) output(79,better,84) output(52,better,84) output(100,better,84) output(9,better,84) output(33,better,84) output(90,better,84) output(79,better,24) output(52,better,24) output(100,better,24) output(9,better,24) output(33,better,24) output(90,better,24) output(100,better,38) output(9,better,38) output(33,better,38) output(90,better,38) output(90,better,64) output(9,better,64) output(79,better,67) output(52,better,67) output(100,better,67) output(9,better,67) output(33,better,67) output(90,better,67) output(100,better,16) output(9,better,16) output(33,better,16) output(90,better,16) output(90,better,44) output(9,better,44) output(90,worse,33) output(51,eq,58) output(90,eq,79)
Optimization: 17 6
Progression : [ 2;17] (Error: 7.5)
Progression : [ 3;17] (Error: 4.66667)
Progression : [ 4;17] (Error: 3.25)
Progression : [ 5;17] (Error: 2.4)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.027 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 17 6
Bounds       : [5;17] [0;6]
Calls        : 1
Time         : 298.174s (Solving: 277.52s 1st Model: 2.14s Unsat: 0.00s)
CPU Time     : 1129.698s
Threads      : 4        (Winner: 4)

Choices      : 4265222  (Domain: 97977)
Conflicts    : 723934   (Analyzed: 723929)
Restarts     : 705      (Average: 1026.85 Last: 43421)
Model-Level  : 811.9   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 924277   (Deleted: 736271)
  Binary     : 13603    (Ratio:   1.47%)
  Ternary    : 61441    (Ratio:   6.65%)
  Conflict   : 723929   (Average Length:  483.4 Ratio:  78.32%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 200348   (Average Length:   57.5 Ratio:  21.68%) 
  Distributed: 66797    (Ratio:   9.23% Average LBD: 3.19) 
  Integrated : 200387   (Ratio: 299.99% Unit: 731 Average Jumps: 88.70)
Backjumps    : 723929   (Average:  5.62 Max: 1385 Sum: 4071140)
  Executed   : 723882   (Average:  5.62 Max: 1385 Sum: 4068082 Ratio:  99.92%)
  Bounded    : 47       (Average: 65.06 Max: 101 Sum:   3058 Ratio:   0.08%)

Rules        : 10004813
  Choice     : 25      
  Minimize   : 2       
Atoms        : 1623628 
Bodies       : 1919445 
  Count      : 3804    
Equivalences : 4982154  (Atom=Atom: 1472418 Body=Body: 1629400 Other: 1880336)
Tight        : Yes
Variables    : 159711   (Eliminated:    0 Frozen: 93627)
Constraints  : 8464506  (Binary:  98.1% Ternary:   1.6% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasCost(5)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> not atom(hasCategory(5))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(4))  >> not atom(hasPrep(2))  >> atom(hasPrepTime(3)) || atom(hasDifficulty(4)) ; 
  atom(hasCost(4)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> not atom(hasCategory(1))  || atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(7)) >> not atom(hasPrep(3))  >> atom(hasPrep(7)) || atom(hasDifficulty(1)) ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(11))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> not atom(hasIngredient(9))  >> atom(hasCost(3)) || atom(hasIngredient(9)) ; 
  atom(hasIngredient(11)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) || not atom(hasPrep(4))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(3)) >> not atom(hasPrep(6))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(4)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(1)) ; 
  atom(hasIngredient(11)) >> not atom(hasDifficulty(3))  >> not atom(hasCost(4))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCost(4))  
}.
