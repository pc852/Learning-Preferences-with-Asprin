asprin_vL version 1.0
Reading from stdin
-:1256:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1281:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1362:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1636:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1813:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2014:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2018:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2018:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2024:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2123:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2149:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2269:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2303:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2325:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1173:1-16: info: no atoms over signature occur in program:
  output/3

-:1165:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1167:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1168:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1198:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(32,better,73) output(88,better,50) output(32,better,78) output(32,better,57) output(60,worse,32) output(20,worse,88) output(50,worse,72) output(21,worse,32) output(100,worse,32) output(51,worse,32) output(20,worse,72) output(100,eq,21) output(21,eq,60) output(73,eq,57) output(56,eq,89) output(51,eq,100) output(82,eq,73) output(73,eq,78) output(88,eq,72) output(20,eq,50) output(82,eq,78) output(82,eq,57) output(60,eq,73) output(100,eq,60) output(51,eq,21) output(51,eq,60) output(21,eq,73) output(100,eq,73) output(60,eq,57) output(21,eq,57) output(60,eq,78) output(21,eq,78) output(100,eq,78) output(51,eq,78) output(100,eq,57) output(51,eq,57) output(51,eq,73)
Optimization: 33 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(32,better,73) output(88,better,50) output(20,better,50) output(32,better,78) output(32,better,57) output(100,better,60) output(60,worse,32) output(51,worse,100) output(50,worse,72) output(60,worse,73) output(21,worse,32) output(51,worse,21) output(100,worse,32) output(51,worse,32) output(60,worse,57) output(60,worse,78) output(51,worse,78) output(51,worse,57) output(51,worse,73) output(100,eq,21) output(73,eq,57) output(56,eq,89) output(82,eq,73) output(73,eq,78) output(88,eq,72) output(82,eq,78) output(82,eq,57) output(51,eq,60) output(21,eq,73) output(100,eq,73) output(21,eq,57) output(21,eq,78) output(100,eq,78) output(100,eq,57)
Optimization: 30 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(32,better,73) output(51,better,100) output(73,better,78) output(88,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(60,better,78) output(21,better,78) output(51,better,78) output(100,worse,21) output(60,worse,32) output(20,worse,88) output(50,worse,72) output(21,worse,32) output(100,worse,60) output(100,worse,32) output(51,worse,32) output(100,worse,73) output(20,worse,72) output(100,worse,57) output(21,eq,60) output(73,eq,57) output(56,eq,89) output(82,eq,73) output(88,eq,72) output(20,eq,50) output(82,eq,57) output(60,eq,73) output(51,eq,21) output(51,eq,60) output(21,eq,73) output(60,eq,57) output(21,eq,57) output(100,eq,78) output(51,eq,57) output(51,eq,73)
Optimization: 27 6
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),0,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(56,better,89) output(51,better,100) output(82,better,73) output(20,better,88) output(50,better,72) output(82,better,78) output(82,better,57) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(20,better,72) output(51,better,78) output(51,better,57) output(51,better,73) output(32,worse,73) output(88,worse,50) output(32,worse,78) output(32,worse,57) output(60,worse,73) output(60,worse,57) output(60,worse,78) output(100,eq,21) output(73,eq,57) output(73,eq,78) output(88,eq,72) output(20,eq,50) output(21,eq,73) output(100,eq,73) output(21,eq,57) output(21,eq,78) output(100,eq,78) output(100,eq,57)
Optimization: 18 2
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(100,better,21) output(21,better,60) output(60,better,32) output(82,better,73) output(20,better,88) output(50,better,72) output(82,better,78) output(82,better,57) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(32,worse,73) output(88,worse,50) output(32,worse,78) output(32,worse,57) output(60,worse,73) output(60,worse,57) output(60,worse,78) output(73,eq,57) output(56,eq,89) output(51,eq,100) output(73,eq,78) output(88,eq,72) output(20,eq,50) output(21,eq,73) output(21,eq,57) output(21,eq,78)
Optimization: 16 2
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,aso) output(100,better,21) output(21,better,60) output(60,better,32) output(82,better,73) output(73,better,78) output(20,better,88) output(50,better,72) output(82,better,78) output(82,better,57) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(32,worse,73) output(88,worse,50) output(32,worse,78) output(32,worse,57) output(60,worse,73) output(60,worse,57) output(73,eq,57) output(56,eq,89) output(51,eq,100) output(88,eq,72) output(20,eq,50) output(21,eq,73) output(21,eq,57) output(60,eq,78)
Optimization: 14 2
Progression : [ 1;14] (Error: 13)
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,aso) output(100,better,21) output(60,better,32) output(73,better,57) output(56,better,89) output(82,better,73) output(50,better,72) output(88,better,72) output(82,better,78) output(82,better,57) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(60,better,57) output(21,better,57) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(32,worse,73) output(32,worse,78) output(21,eq,60) output(51,eq,100) output(73,eq,78) output(20,eq,88) output(88,eq,50) output(20,eq,50) output(32,eq,57) output(60,eq,73) output(21,eq,73) output(60,eq,78) output(21,eq,78)
Optimization: 13 1
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(atom(hasCategory(4))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,1),3,for(atom(hasCost(4))),()) preference(1,(1,2),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(100,better,21) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(50,better,72) output(88,better,72) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(21,better,57) output(60,better,78) output(21,better,78) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(60,worse,32) output(88,worse,50) output(20,worse,50) output(21,eq,73)
Optimization: 11 6
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),0,for(atom(hasCategory(4))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,aso) output(100,better,21) output(60,better,32) output(32,better,73) output(73,better,57) output(51,better,100) output(82,better,73) output(88,better,50) output(50,better,72) output(88,better,72) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(60,better,73) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(60,better,57) output(60,better,78) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(21,worse,60) output(20,worse,88) output(20,worse,50) output(21,worse,32) output(21,worse,73) output(21,worse,78) output(56,eq,89) output(100,eq,60) output(21,eq,57)
Optimization: 11 5
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(atom(hasCost(5))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasCost(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,3),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(100,better,21) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(20,better,88) output(88,better,50) output(50,better,72) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(82,better,57) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(32,worse,73) output(21,worse,73)
Optimization: 10 6
Answer: 11
preference(1,(1,1),0,for(atom(hasCategory(1))),()) preference(1,(1,2),0,for(atom(hasIngredient(7))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,aso) output(100,better,21) output(21,better,60) output(32,better,73) output(73,better,57) output(56,better,89) output(82,better,73) output(73,better,78) output(88,better,50) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(21,better,73) output(100,better,73) output(21,better,57) output(21,better,78) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(60,worse,32) output(20,worse,88) output(50,worse,72) output(20,worse,72) output(51,eq,100) output(21,eq,32)
Optimization: 9 5
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrepTime(3))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,5),3,for(atom(hasPrep(3))),()) preference(1,aso) output(100,better,21) output(21,better,60) output(32,better,73) output(73,better,57) output(56,better,89) output(82,better,73) output(73,better,78) output(20,better,88) output(88,better,50) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(100,better,60) output(51,better,60) output(100,better,32) output(21,better,73) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(60,worse,32) output(51,worse,100) output(50,eq,72) output(21,eq,32)
Optimization: 8 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrepTime(3))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,5),3,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(100,better,21) output(32,better,73) output(73,better,57) output(56,better,89) output(82,better,73) output(73,better,78) output(20,better,88) output(88,better,50) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(60,worse,32) output(51,worse,100) output(50,worse,72) output(21,worse,32) output(21,eq,60)
Optimization: 7 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrepTime(3))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,5),3,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(100,better,21) output(32,better,73) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(20,better,88) output(88,better,50) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(60,worse,32) output(50,worse,72) output(21,worse,32) output(21,eq,60)
Optimization: 6 6
Progression : [2;6] (Error: 2)
Answer: 15
preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(atom(hasPrep(6))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(12))),()) preference(1,(1,3),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(100,better,21) output(60,better,32) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(88,better,50) output(50,better,72) output(88,better,72) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(60,better,73) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(21,better,73) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(20,worse,88) output(20,worse,50) output(21,eq,60)
Optimization: 5 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(atom(hasPrep(6))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasCategory(3))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(100,better,21) output(21,better,60) output(60,better,32) output(32,better,73) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(20,better,88) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(60,better,73) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(21,better,73) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(88,eq,72)
Optimization: 4 6
Answer: 17
preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCategory(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(100,better,21) output(60,better,32) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(20,better,88) output(88,better,50) output(50,better,72) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(60,better,73) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(21,better,73) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(21,eq,60)
Optimization: 2 6
Progression : 2 [1;6] (Error: 5)
Progression : 2 [2;6] (Error: 2)
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,6),0,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(3))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(100,better,21) output(21,better,60) output(60,better,32) output(32,better,73) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(20,better,88) output(50,better,72) output(88,better,72) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(60,better,73) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(21,better,73) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(88,worse,50) output(20,worse,50)
Optimization: 2 5
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(100,better,21) output(60,better,32) output(73,better,57) output(56,better,89) output(51,better,100) output(82,better,73) output(73,better,78) output(20,better,88) output(88,better,50) output(50,better,72) output(88,better,72) output(20,better,50) output(32,better,78) output(82,better,78) output(32,better,57) output(82,better,57) output(60,better,73) output(21,better,32) output(100,better,60) output(51,better,21) output(51,better,60) output(100,better,32) output(51,better,32) output(21,better,73) output(100,better,73) output(60,better,57) output(21,better,57) output(60,better,78) output(21,better,78) output(20,better,72) output(100,better,78) output(51,better,78) output(100,better,57) output(51,better,57) output(51,better,73) output(21,eq,60)
Optimization: 2 4
Progression : 2 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 19
  Optimum    : yes
Optimization : 2 4
Calls        : 1
Time         : 41.173s (Solving: 33.65s 1st Model: 0.44s Unsat: 22.51s)
CPU Time     : 141.862s
Threads      : 4        (Winner: 1)

Choices      : 443156   (Domain: 9150)
Conflicts    : 109729   (Analyzed: 109722)
Restarts     : 120      (Average: 914.35 Last: 6726)
Model-Level  : 546.1   
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 161096   (Deleted: 81626)
  Binary     : 4420     (Ratio:   2.74%)
  Ternary    : 17325    (Ratio:  10.75%)
  Conflict   : 109722   (Average Length:  189.7 Ratio:  68.11%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 51374    (Average Length:   59.3 Ratio:  31.89%) 
  Distributed: 17174    (Ratio:  15.65% Average LBD: 3.09) 
  Integrated : 51522    (Ratio: 300.00% Unit: 352 Average Jumps: 56.30)
Backjumps    : 109722   (Average:  3.60 Max: 1012 Sum: 395458)
  Executed   : 109701   (Average:  3.60 Max: 1012 Sum: 395063 Ratio:  99.90%)
  Bounded    : 21       (Average: 18.81 Max:  35 Sum:    395 Ratio:   0.10%)

Rules        : 3573303 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 594692  
Bodies       : 732962  
  Count      : 1356    
Equivalences : 1807651  (Atom=Atom: 532563 Body=Body: 580622 Other: 694466)
Tight        : Yes
Variables    : 100175   (Eliminated:    0 Frozen: 34907)
Constraints  : 3132680  (Binary:  96.9% Ternary:   2.9% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(1)) >> atom(hasPrep(7)) >> not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> not atom(hasIngredient(11))  || not atom(hasIngredient(9))  ; 
  atom(hasCost(1)) >> not atom(hasCategory(2))  || atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasPrep(6)) >> not atom(hasIngredient(11))  || not atom(hasDifficulty(4))  ; 
  atom(hasCost(1)) >> not atom(hasCategory(2))  || atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasPrep(1)) >> not atom(hasIngredient(11))  || not atom(hasDifficulty(4))  ; 
  atom(hasCost(1)) >> not atom(hasCategory(2))  || atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(4))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasPrep(1)) >> atom(hasCost(4)) || not atom(hasCategory(3))  ; 
  atom(hasIngredient(3)) >> atom(hasPrepTime(2)) >> atom(hasPrepTime(3)) || not atom(hasCategory(3))  ; 
  atom(hasIngredient(3)) >> atom(hasPrep(0)) >> atom(hasDifficulty(1)) || atom(hasCategory(4)) ; 
  atom(hasCategory(3)) >> atom(hasDifficulty(1)) >> not atom(hasCategory(4))  || not atom(hasPrep(2))  ; 
  atom(hasCost(3)) >> atom(hasPrep(0)) >> not atom(hasDifficulty(2))  || atom(hasCategory(4)) ; 
  atom(hasIngredient(1)) >> atom(hasPrep(4)) >> not atom(hasDifficulty(4))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(2))  || not atom(hasIngredient(6))  ; 
  atom(hasCost(3)) >> not atom(hasCategory(2))  || atom(hasCategory(4)) ; 
  atom(hasDifficulty(4)) >> not atom(hasCategory(4))  >> not atom(hasCategory(2))  || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(12)) >> not atom(hasCategory(2))  || atom(hasCategory(4)) ; 
  not atom(hasDifficulty(2))  >> not atom(hasIngredient(7))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasPrep(6)) || not atom(hasCost(3))  ; 
  not atom(hasIngredient(11))  >> atom(hasPrep(0)) || atom(hasCost(5)) ; 
  not atom(hasCategory(1))  >> atom(hasPrep(6)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> not atom(hasIngredient(11))  || not atom(hasDifficulty(4))  ; 
  atom(hasCost(2)) >> not atom(hasPrepTime(1))  || not atom(hasPrep(0))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrep(0))  >> atom(hasCost(2)) || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasCategory(1)) ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(6))  || atom(hasIngredient(7)) ; 
  not atom(hasIngredient(7))  >> atom(hasPrep(6)) >> not atom(hasDifficulty(4))  || not atom(hasIngredient(12))  ; 
  atom(hasCategory(3)) >> not atom(hasDifficulty(1))  || not atom(hasDifficulty(4))  ; 
  not atom(hasPrep(6))  >> atom(hasCost(3)) >> not atom(hasIngredient(3))  || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasDifficulty(1)) >> not atom(hasCost(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(10)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(4))  || not atom(hasIngredient(9))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(1)) || atom(hasPrepTime(3)) ; 
  atom(hasIngredient(11)) >> not atom(hasCost(5))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(4)) >> not atom(hasCost(2))  >> atom(hasPrep(3)) || atom(hasPrep(6)) ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(1)) >> not atom(hasCategory(4))  || not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasCategory(5)) >> not atom(hasCost(3))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(10)) >> atom(hasCost(5)) >> not atom(hasPrep(4))  || not atom(hasIngredient(9))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(1)) || atom(hasPrepTime(3)) ; 
  atom(hasCategory(3)) >> not atom(hasPrep(4))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> not atom(hasCost(2))  >> atom(hasPrep(3)) || atom(hasPrep(6)) ; 
  atom(hasDifficulty(4)) >> atom(hasDifficulty(1)) >> atom(hasCategory(1)) || not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasCategory(2)) >> not atom(hasCost(3))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(10)) >> atom(hasDifficulty(4)) >> not atom(hasDifficulty(4))  || not atom(hasIngredient(9))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(1)) || atom(hasPrepTime(3)) ; 
  atom(hasIngredient(9)) >> not atom(hasPrep(4))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> not atom(hasCost(2))  >> atom(hasPrep(3)) || atom(hasPrep(6)) ; 
  atom(hasCost(1)) >> atom(hasDifficulty(1)) >> atom(hasCategory(1)) || not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(10)) >> atom(hasIngredient(12)) || not atom(hasPrep(5))  ; 
  atom(hasCost(1)) >> atom(hasCost(3)) >> atom(hasPrepTime(3)) || atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> not atom(hasCategory(3))  || not atom(hasPrep(2))  ; 
  atom(hasPrep(4)) >> not atom(hasCategory(3))  >> not atom(hasCost(2))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(5)) >> atom(hasPrep(6)) || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasDifficulty(1)) >> not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrep(4)) >> not atom(hasCategory(2))  || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(4)) >> not atom(hasCost(2))  >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasCategory(3)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || atom(hasPrep(6)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(2)) || not atom(hasPrepTime(3))  ; 
  atom(hasCategory(3)) >> atom(hasCost(3)) >> not atom(hasIngredient(3))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(3)) >> atom(hasCategory(1)) >> atom(hasDifficulty(3)) || not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCategory(4))  || not atom(hasPrep(0))  ; 
  atom(hasCost(1)) >> not atom(hasPrep(1))  >> atom(hasIngredient(6)) || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> atom(hasCost(3)) >> not atom(hasIngredient(3))  || atom(hasPrep(6)) ; 
  atom(hasPrep(1)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(9)) >> atom(hasPrep(4)) >> not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(4)) >> atom(hasCategory(3)) >> not atom(hasIngredient(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrep(4)) >> not atom(hasCategory(2))  || not atom(hasDifficulty(4))  ; 
  atom(hasCost(1)) >> not atom(hasCost(2))  >> atom(hasIngredient(6)) || not atom(hasCategory(3))  ; 
  atom(hasCategory(3)) >> not atom(hasCost(2))  >> not atom(hasPrepTime(1))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(1)) >> not atom(hasCategory(4))  || atom(hasCost(3)) ; 
  atom(hasPrep(4)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(6))  >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> atom(hasDifficulty(1)) >> atom(hasCategory(1)) || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(9)) >> atom(hasCategory(3)) >> not atom(hasIngredient(10))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(10)) >> atom(hasPrepTime(2)) >> atom(hasDifficulty(3)) || not atom(hasCategory(3))  
}.
