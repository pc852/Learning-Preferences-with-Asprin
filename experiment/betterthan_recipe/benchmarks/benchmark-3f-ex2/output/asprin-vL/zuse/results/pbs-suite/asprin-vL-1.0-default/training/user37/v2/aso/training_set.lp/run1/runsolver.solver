asprin_vL version 1.0
Reading from stdin
-:1247:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1272:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1353:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1627:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1804:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2005:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2009:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2009:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2015:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2114:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2140:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2260:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2294:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2316:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1164:1-16: info: no atoms over signature occur in program:
  output/3

-:1156:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1157:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1158:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1159:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1189:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(51,better,76) output(78,better,71) output(71,better,98) output(78,better,98) output(78,better,67) output(51,better,55) output(78,better,53) output(91,worse,51) output(30,worse,60) output(98,worse,53) output(99,worse,60) output(91,worse,76) output(57,worse,51) output(99,worse,51) output(57,worse,76) output(99,worse,76) output(91,worse,55) output(57,worse,55) output(99,worse,55) output(57,eq,91) output(76,eq,55) output(71,eq,67) output(94,eq,76) output(71,eq,53) output(94,eq,55)
Optimization: 21 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(57,better,91) output(51,better,76) output(71,better,67) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(78,better,67) output(51,better,55) output(78,better,53) output(91,worse,51) output(98,worse,53) output(99,worse,60) output(91,worse,76) output(99,worse,51) output(99,worse,76) output(91,worse,55) output(99,worse,55) output(76,eq,55) output(94,eq,76) output(94,eq,55)
Optimization: 18 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(51,better,76) output(71,better,67) output(94,better,76) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(78,better,67) output(51,better,55) output(94,better,55) output(78,better,53) output(98,worse,53) output(57,eq,91) output(76,eq,55)
Optimization: 17 6
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(99,better,57) output(91,better,51) output(71,better,67) output(99,better,30) output(30,better,60) output(98,better,53) output(71,better,53) output(99,better,60) output(78,better,67) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55) output(57,eq,91) output(51,eq,76) output(76,eq,55) output(94,eq,76) output(71,eq,98) output(51,eq,55) output(94,eq,55)
Optimization: 9 2
Answer: 5
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrep(7))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,aso) output(99,better,57) output(91,better,51) output(51,better,76) output(71,better,67) output(30,better,60) output(94,better,76) output(71,better,98) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(78,better,53) output(99,better,55) output(57,worse,91) output(98,worse,53) output(99,eq,30) output(78,eq,71) output(99,eq,91)
Optimization: 8 5
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrep(7))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasPrepTime(1))),()) preference(1,aso) output(99,better,57) output(91,better,51) output(51,better,76) output(71,better,67) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(78,better,53) output(99,better,55) output(57,worse,91) output(98,worse,53) output(99,eq,30) output(99,eq,91)
Optimization: 7 5
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrep(7))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,aso) output(99,better,57) output(91,better,51) output(51,better,76) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(78,better,53) output(99,better,55) output(57,worse,91) output(98,worse,53) output(99,eq,91)
Optimization: 6 5
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(atom(hasPrep(7))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,aso) output(99,better,57) output(91,better,51) output(51,better,76) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(78,better,53) output(99,better,55)
Optimization: 5 5
Answer: 9
preference(1,(1,2),0,for(atom(hasIngredient(4))),()) preference(1,(1,3),0,for(atom(hasPrep(7))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,aso) output(57,better,91) output(91,better,51) output(51,better,76) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(71,better,98) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(51,better,55) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55) output(99,eq,57) output(78,eq,71) output(98,eq,53)
Optimization: 4 5
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(atom(hasPrep(7))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,aso) output(57,better,91) output(91,better,51) output(51,better,76) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(98,better,53) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(51,better,55) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55) output(99,eq,57)
Optimization: 3 5
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(99,better,57) output(57,better,91) output(91,better,51) output(51,better,76) output(76,better,55) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(51,better,55) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(99,better,57) output(57,better,91) output(91,better,51) output(51,better,76) output(76,better,55) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(51,better,55) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasCategory(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(99,better,57) output(57,better,91) output(91,better,51) output(51,better,76) output(76,better,55) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(51,better,55) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55)
Optimization: 0 4
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(99,better,57) output(57,better,91) output(91,better,51) output(51,better,76) output(76,better,55) output(71,better,67) output(99,better,30) output(30,better,60) output(94,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(71,better,53) output(78,better,98) output(99,better,60) output(78,better,67) output(51,better,55) output(94,better,55) output(91,better,76) output(57,better,51) output(99,better,91) output(99,better,51) output(57,better,76) output(99,better,76) output(91,better,55) output(57,better,55) output(78,better,53) output(99,better,55)
Optimization: 0 3
OPTIMUM FOUND

Models       : 14
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 8.271s (Solving: 2.30s 1st Model: 0.33s Unsat: 0.79s)
CPU Time     : 14.947s
Threads      : 4        (Winner: 3)

Choices      : 74160    (Domain: 277)
Conflicts    : 6930     (Analyzed: 6927)
Restarts     : 24       (Average: 288.62 Last: 344)
Model-Level  : 519.6   
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 12400    (Deleted: 0)
  Binary     : 655      (Ratio:   5.28%)
  Ternary    : 1688     (Ratio:  13.61%)
  Conflict   : 6927     (Average Length:  105.9 Ratio:  55.86%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 5473     (Average Length:   34.1 Ratio:  44.14%) 
  Distributed: 1858     (Ratio:  26.82% Average LBD: 3.00) 
  Integrated : 5558     (Ratio: 299.14% Unit: 106 Average Jumps: 68.31)
Backjumps    : 6927     (Average:  8.48 Max: 1566 Sum:  58715)
  Executed   : 6919     (Average:  8.46 Max: 1566 Sum:  58572 Ratio:  99.76%)
  Bounded    : 8        (Average: 17.88 Max:  27 Sum:    143 Ratio:   0.24%)

Rules        : 2716854 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 455966  
Bodies       : 573604  
  Count      : 1032    
Equivalences : 1379376  (Atom=Atom: 405244 Body=Body: 438923 Other: 535209)
Tight        : Yes
Variables    : 93071    (Eliminated:    0 Frozen: 27911)
Constraints  : 2429456  (Binary:  96.2% Ternary:   3.5% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCategory(2)) >> not atom(hasIngredient(10))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(2)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCategory(2)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(2)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCategory(2)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(2)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> not atom(hasCategory(2))  >> not atom(hasCategory(4))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(1)) >> not atom(hasIngredient(5))  >> atom(hasIngredient(4)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(1))  || not atom(hasIngredient(9))  ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(0))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> not atom(hasCategory(2))  || not atom(hasCategory(4))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(1))  || not atom(hasIngredient(9))  ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(0))  || not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(1))  || not atom(hasDifficulty(3))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(1))  || not atom(hasIngredient(9))  ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(0))  || not atom(hasPrep(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(2))  || not atom(hasIngredient(6))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(1))  || not atom(hasIngredient(9))  ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(0))  || not atom(hasPrep(6))  ; 
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasCost(3))  || not atom(hasIngredient(6))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(1))  || atom(hasIngredient(4)) ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(0))  || not atom(hasPrep(6))  ; 
  atom(hasIngredient(8)) >> not atom(hasPrepTime(3))  >> not atom(hasDifficulty(3))  || not atom(hasIngredient(6))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(1))  || not atom(hasPrep(6))  ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> not atom(hasIngredient(5))  || atom(hasPrep(7)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(0))  || not atom(hasPrep(6))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(3))  || not atom(hasCost(3))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> atom(hasPrep(4)) >> not atom(hasPrep(6))  || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(5)) >> atom(hasPrepTime(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(1)) >> not atom(hasIngredient(7))  >> atom(hasDifficulty(2)) || not atom(hasCost(3))  ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(3))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(4))  || not atom(hasCost(3))  ; 
  atom(hasCost(4)) >> not atom(hasIngredient(12))  || atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> atom(hasPrep(4)) >> not atom(hasPrep(6))  || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(5)) >> atom(hasPrepTime(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(1)) >> not atom(hasIngredient(7))  >> atom(hasDifficulty(2)) || not atom(hasCost(3))  ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(3))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(4))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasIngredient(7)) || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(8)) >> atom(hasPrepTime(2)) >> not atom(hasCategory(4))  || not atom(hasCost(3))  ; 
  atom(hasCategory(4)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(7)) || not atom(hasCost(3))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasIngredient(6)) >> not atom(hasCost(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(5)) >> not atom(hasCategory(3))  >> not atom(hasPrep(6))  || not atom(hasIngredient(6))  ; 
  atom(hasIngredient(6)) >> atom(hasDifficulty(1)) >> atom(hasDifficulty(2)) 
}.
