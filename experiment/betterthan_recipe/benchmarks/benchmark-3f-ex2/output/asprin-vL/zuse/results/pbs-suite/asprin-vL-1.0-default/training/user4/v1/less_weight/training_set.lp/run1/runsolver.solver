asprin_vL version 1.0
Reading from stdin
-:1300:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1310:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1325:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1406:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1667:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1680:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1857:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1986:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2058:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2062:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2062:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2068:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2167:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2193:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2313:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2347:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2369:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1217:1-16: info: no atoms over signature occur in program:
  output/3

-:1209:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1210:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(52,eq,78) output(60,eq,79) output(4,eq,46) output(46,eq,39) output(39,eq,7) output(32,eq,33) output(78,eq,60) output(79,eq,4) output(7,eq,32) output(41,eq,4) output(4,eq,72) output(60,eq,76) output(76,eq,37) output(37,eq,42) output(92,eq,32) output(72,eq,60) output(18,eq,92) output(4,eq,60) output(18,eq,32) output(76,eq,42) output(60,eq,37) output(78,eq,76) output(72,eq,76) output(79,eq,72) output(41,eq,72) output(39,eq,32) output(60,eq,4) output(52,eq,60) output(7,eq,33) output(92,eq,33) output(46,eq,7) output(4,eq,39) output(79,eq,46) output(41,eq,46) output(78,eq,79) output(72,eq,79) output(4,eq,79) output(79,eq,79) output(41,eq,79) output(52,eq,79) output(60,eq,46) output(78,eq,46) output(72,eq,46) output(79,eq,39) output(41,eq,39) output(60,eq,39) output(4,eq,7) output(79,eq,7) output(41,eq,7) output(18,eq,33) output(39,eq,33) output(46,eq,33) output(78,eq,4) output(72,eq,4) output(4,eq,4) output(52,eq,4) output(46,eq,32) output(4,eq,32) output(60,eq,72) output(78,eq,72) output(72,eq,72) output(4,eq,76) output(79,eq,76) output(41,eq,76) output(52,eq,76) output(78,eq,37) output(72,eq,37) output(4,eq,37) output(52,eq,37) output(60,eq,42) output(78,eq,42) output(72,eq,42) output(79,eq,60) output(41,eq,60) output(60,eq,60) output(4,eq,42) output(79,eq,42) output(41,eq,42) output(52,eq,42) output(79,eq,37) output(41,eq,37) output(52,eq,72) output(79,eq,32) output(41,eq,32) output(60,eq,32) output(78,eq,32) output(72,eq,32) output(52,eq,32) output(4,eq,33) output(79,eq,33) output(41,eq,33) output(60,eq,33) output(78,eq,33) output(72,eq,33) output(60,eq,7) output(78,eq,7) output(72,eq,7) output(52,eq,7) output(78,eq,39) output(72,eq,39) output(52,eq,39) output(52,eq,46) output(52,eq,33)
Optimization: 103 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(60,better,76) output(72,better,76) output(4,better,76) output(79,better,76) output(41,better,76) output(52,better,76) output(78,better,76) output(76,worse,37) output(76,worse,42) output(52,eq,78) output(60,eq,79) output(4,eq,46) output(46,eq,39) output(39,eq,7) output(32,eq,33) output(78,eq,60) output(79,eq,4) output(7,eq,32) output(41,eq,4) output(4,eq,72) output(37,eq,42) output(92,eq,32) output(72,eq,60) output(18,eq,92) output(4,eq,60) output(18,eq,32) output(60,eq,37) output(79,eq,72) output(41,eq,72) output(39,eq,32) output(60,eq,4) output(52,eq,60) output(7,eq,33) output(92,eq,33) output(46,eq,7) output(4,eq,39) output(79,eq,46) output(41,eq,46) output(78,eq,79) output(72,eq,79) output(4,eq,79) output(79,eq,79) output(41,eq,79) output(52,eq,79) output(60,eq,46) output(78,eq,46) output(72,eq,46) output(79,eq,39) output(41,eq,39) output(60,eq,39) output(4,eq,7) output(79,eq,7) output(41,eq,7) output(18,eq,33) output(39,eq,33) output(46,eq,33) output(78,eq,4) output(72,eq,4) output(4,eq,4) output(52,eq,4) output(46,eq,32) output(4,eq,32) output(60,eq,72) output(78,eq,72) output(72,eq,72) output(78,eq,37) output(72,eq,37) output(4,eq,37) output(52,eq,37) output(60,eq,42) output(78,eq,42) output(72,eq,42) output(79,eq,60) output(41,eq,60) output(60,eq,60) output(4,eq,42) output(79,eq,42) output(41,eq,42) output(52,eq,42) output(79,eq,37) output(41,eq,37) output(52,eq,72) output(79,eq,32) output(41,eq,32) output(60,eq,32) output(78,eq,32) output(72,eq,32) output(52,eq,32) output(4,eq,33) output(79,eq,33) output(41,eq,33) output(60,eq,33) output(78,eq,33) output(72,eq,33) output(60,eq,7) output(78,eq,7) output(72,eq,7) output(52,eq,7) output(78,eq,39) output(72,eq,39) output(52,eq,39) output(52,eq,46) output(52,eq,33)
Optimization: 96 14
Progression : [ 5;96] (Error: 18.2)
Progression : [ 6;96] (Error: 15)
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCost(3))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasIngredient(9))),8) preference(1,(1,5),1,for(atom(hasDifficulty(3))),2) preference(1,(1,6),1,for(atom(hasPrep(2))),4) preference(1,(1,7),1,for(atom(hasCost(1))),5) preference(1,(1,8),1,for(atom(hasCategory(2))),1) preference(1,(1,9),1,for(atom(hasCategory(5))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasPrep(3))),1) preference(1,(1,13),1,for(atom(hasPrep(4))),1) preference(1,(1,14),1,for(atom(hasDifficulty(4))),1) preference(1,less(weight)) output(46,better,7) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,42) output(60,better,7) output(72,better,60) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,7) output(72,better,39) output(4,better,7) output(4,better,42) output(37,better,42) output(39,better,7) output(79,better,4) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,60) output(79,better,42) output(79,better,37) output(41,better,4) output(41,better,72) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,60) output(41,better,42) output(41,better,37) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(78,better,60) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,7) output(78,better,39) output(76,better,37) output(76,better,42) output(18,worse,92) output(18,worse,32) output(18,worse,33) output(46,worse,39) output(46,worse,33) output(46,worse,32) output(60,worse,79) output(60,worse,76) output(60,worse,39) output(60,worse,72) output(60,worse,32) output(60,worse,33) output(72,worse,76) output(72,worse,32) output(72,worse,33) output(4,worse,72) output(4,worse,60) output(4,worse,39) output(4,worse,79) output(4,worse,32) output(4,worse,76) output(4,worse,33) output(39,worse,32) output(39,worse,33) output(79,worse,76) output(79,worse,32) output(79,worse,33) output(92,worse,32) output(92,worse,33) output(7,worse,32) output(7,worse,33) output(32,worse,33) output(41,worse,76) output(41,worse,33) output(78,worse,76) output(78,worse,33) output(4,eq,46) output(79,eq,72) output(72,eq,79) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(4,eq,37) output(60,eq,60) output(41,eq,32) output(52,eq,33)
Optimization: 46 14
Progression : [ 7;46] (Error: 5.57143)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrepTime(2))),7) preference(1,(1,3),1,for(atom(hasIngredient(9))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),1) preference(1,(1,6),1,for(atom(hasPrep(6))),6) preference(1,(1,7),1,for(atom(hasCost(4))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),7) preference(1,(1,9),1,for(atom(hasCategory(1))),3) preference(1,(1,10),1,for(atom(hasIngredient(3))),6) preference(1,(1,11),1,for(atom(hasCost(3))),6) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCategory(3))),7) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(18,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(72,better,4) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,33) output(37,better,42) output(39,better,33) output(79,better,4) output(79,better,72) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,33) output(7,better,33) output(32,better,33) output(41,better,4) output(41,better,39) output(41,better,7) output(41,better,42) output(41,better,32) output(41,better,33) output(52,better,4) output(52,better,42) output(52,better,7) output(52,better,39) output(52,better,33) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(76,better,42) output(18,worse,92) output(18,worse,32) output(72,worse,60) output(72,worse,76) output(72,worse,79) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,7) output(4,worse,32) output(4,worse,76) output(4,worse,37) output(39,worse,7) output(39,worse,32) output(79,worse,76) output(79,worse,60) output(92,worse,32) output(7,worse,32) output(41,worse,79) output(41,worse,76) output(41,worse,60) output(52,worse,78) output(52,worse,60) output(52,worse,79) output(52,worse,76) output(52,worse,37) output(52,worse,72) output(52,worse,46) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(41,eq,72) output(4,eq,39) output(41,eq,46) output(79,eq,79) output(72,eq,46) output(4,eq,4) output(72,eq,72) output(72,eq,37) output(60,eq,60) output(4,eq,42) output(41,eq,37) output(52,eq,32)
Optimization: 44 14
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasIngredient(10))),2) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasCategory(3))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),2) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(18,better,92) output(18,better,32) output(18,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(72,better,76) output(72,better,79) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,33) output(72,better,7) output(72,better,39) output(37,better,42) output(39,better,33) output(79,better,4) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,33) output(7,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,33) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(76,better,42) output(46,worse,32) output(72,worse,60) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,39) output(4,worse,79) output(4,worse,7) output(4,worse,32) output(4,worse,76) output(4,worse,37) output(39,worse,32) output(79,worse,72) output(79,worse,60) output(79,worse,32) output(92,worse,32) output(7,worse,32) output(41,worse,60) output(52,worse,78) output(52,worse,60) output(52,worse,79) output(52,worse,76) output(52,worse,37) output(52,worse,72) output(52,worse,32) output(52,worse,7) output(52,worse,39) output(52,worse,46) output(39,eq,7) output(41,eq,72) output(92,eq,33) output(79,eq,79) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,60) output(4,eq,42) output(52,eq,42) output(41,eq,32) output(72,eq,32) output(4,eq,33) output(52,eq,33)
Optimization: 42 9
Answer: 6
preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(3))),3) preference(1,(1,11),1,for(atom(hasCost(3))),6) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(18,better,32) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,7) output(72,better,76) output(72,better,79) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,7) output(72,better,39) output(4,better,72) output(4,better,39) output(4,better,79) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(37,better,42) output(39,better,7) output(39,better,32) output(79,better,39) output(79,better,7) output(79,better,42) output(79,better,37) output(79,better,32) output(92,better,32) output(92,better,33) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,42) output(41,better,37) output(41,better,32) output(52,better,79) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(78,better,76) output(78,better,79) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,7) output(78,better,39) output(76,better,37) output(76,better,42) output(18,worse,92) output(60,worse,46) output(72,worse,60) output(72,worse,46) output(72,worse,4) output(72,worse,33) output(4,worse,46) output(39,worse,33) output(79,worse,4) output(79,worse,72) output(79,worse,46) output(79,worse,60) output(79,worse,33) output(7,worse,32) output(7,worse,33) output(32,worse,33) output(41,worse,4) output(41,worse,46) output(41,worse,60) output(41,worse,33) output(52,worse,46) output(78,worse,46) output(52,eq,78) output(78,eq,60) output(4,eq,60) output(41,eq,72) output(60,eq,4) output(52,eq,60) output(79,eq,79) output(18,eq,33) output(78,eq,4) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(79,eq,76) output(60,eq,60) output(4,eq,33) output(60,eq,33) output(78,eq,33) output(52,eq,33)
Optimization: 40 8
Answer: 7
preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(3))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(18,better,32) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,76) output(60,better,37) output(60,better,39) output(60,better,32) output(60,better,7) output(72,better,60) output(72,better,76) output(72,better,79) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(79,better,4) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,60) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,32) output(41,better,4) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,32) output(41,better,33) output(52,better,76) output(52,better,37) output(52,better,32) output(52,better,7) output(52,better,39) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(18,worse,92) output(60,worse,79) output(60,worse,46) output(60,worse,72) output(4,worse,46) output(4,worse,72) output(4,worse,79) output(37,worse,42) output(39,worse,7) output(39,worse,32) output(39,worse,33) output(79,worse,72) output(79,worse,46) output(7,worse,33) output(32,worse,33) output(52,worse,78) output(52,worse,79) output(52,worse,72) output(52,worse,46) output(76,worse,42) output(4,eq,60) output(41,eq,72) output(60,eq,4) output(52,eq,60) output(41,eq,46) output(79,eq,79) output(72,eq,46) output(18,eq,33) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,42) output(60,eq,60) output(4,eq,42) output(52,eq,42) output(4,eq,33) output(60,eq,33) output(52,eq,33)
Optimization: 38 8
Answer: 8
preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(18,better,32) output(46,better,39) output(46,better,7) output(46,better,32) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,46) output(60,better,39) output(60,better,32) output(60,better,7) output(72,better,60) output(72,better,76) output(72,better,79) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,46) output(4,better,39) output(4,better,79) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,37) output(79,better,32) output(92,better,32) output(92,better,33) output(41,better,4) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,32) output(41,better,33) output(52,better,79) output(52,better,76) output(52,better,37) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(18,worse,92) output(46,worse,33) output(60,worse,72) output(4,worse,72) output(37,worse,42) output(39,worse,7) output(39,worse,32) output(39,worse,33) output(79,worse,4) output(79,worse,72) output(79,worse,60) output(79,worse,42) output(79,worse,33) output(7,worse,32) output(7,worse,33) output(32,worse,33) output(52,worse,78) output(52,worse,72) output(78,worse,72) output(76,worse,42) output(4,eq,60) output(41,eq,72) output(60,eq,4) output(52,eq,60) output(79,eq,46) output(79,eq,79) output(18,eq,33) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,42) output(60,eq,60) output(4,eq,42) output(52,eq,42) output(4,eq,33) output(60,eq,33) output(52,eq,33)
Optimization: 37 8
Answer: 9
preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(18,better,32) output(18,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,39) output(60,better,32) output(60,better,33) output(60,better,7) output(72,better,60) output(72,better,76) output(72,better,79) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,39) output(4,better,79) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,33) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,33) output(32,better,33) output(41,better,4) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,32) output(41,better,33) output(52,better,79) output(52,better,76) output(52,better,37) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,33) output(78,better,60) output(78,better,76) output(78,better,79) output(78,better,4) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(18,worse,92) output(60,worse,46) output(60,worse,72) output(4,worse,46) output(4,worse,72) output(37,worse,42) output(39,worse,7) output(39,worse,32) output(79,worse,4) output(79,worse,72) output(79,worse,46) output(79,worse,60) output(79,worse,42) output(7,worse,32) output(52,worse,78) output(52,worse,72) output(52,worse,46) output(78,worse,46) output(78,worse,72) output(76,worse,42) output(4,eq,60) output(41,eq,72) output(60,eq,4) output(52,eq,60) output(41,eq,46) output(79,eq,79) output(72,eq,46) output(39,eq,33) output(4,eq,4) output(52,eq,4) output(72,eq,72) output(60,eq,42) output(60,eq,60) output(4,eq,42) output(52,eq,42)
Optimization: 35 8
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasIngredient(10))),7) preference(1,(1,3),1,for(atom(hasIngredient(3))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasCost(4))),8) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasIngredient(9))),5) preference(1,(1,10),1,for(atom(hasCost(3))),4) preference(1,(1,11),1,for(atom(hasIngredient(12))),7) preference(1,(1,12),1,for(atom(hasCategory(4))),2) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(18,better,32) output(18,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,37) output(60,better,4) output(60,better,39) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(72,better,60) output(72,better,76) output(72,better,79) output(72,better,46) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,37) output(4,better,33) output(79,better,4) output(79,better,39) output(79,better,7) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(32,better,33) output(41,better,4) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,32) output(41,better,33) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(78,better,37) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(76,better,42) output(18,worse,92) output(60,worse,76) output(60,worse,46) output(60,worse,72) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,79) output(4,worse,76) output(37,worse,42) output(39,worse,32) output(39,worse,33) output(79,worse,72) output(79,worse,46) output(79,worse,76) output(7,worse,32) output(7,worse,33) output(41,worse,72) output(52,worse,72) output(78,worse,60) output(78,worse,76) output(78,worse,79) output(78,worse,46) output(78,worse,4) output(78,worse,72) output(78,worse,42) output(60,eq,79) output(39,eq,7) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(79,eq,60) output(60,eq,60) output(4,eq,42)
Optimization: 34 14
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasIngredient(12))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasIngredient(7))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasIngredient(9))),7) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(18,better,32) output(18,better,33) output(46,better,39) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,79) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(72,better,79) output(72,better,4) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,39) output(4,better,79) output(4,better,7) output(4,better,32) output(4,better,37) output(4,better,33) output(39,better,7) output(39,better,32) output(39,better,33) output(92,better,32) output(92,better,33) output(41,better,4) output(41,better,72) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,32) output(41,better,33) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,37) output(76,better,42) output(18,worse,92) output(60,worse,76) output(72,worse,60) output(72,worse,76) output(72,worse,46) output(4,worse,46) output(4,worse,72) output(4,worse,60) output(4,worse,76) output(4,worse,42) output(37,worse,42) output(79,worse,4) output(79,worse,72) output(79,worse,46) output(79,worse,39) output(79,worse,7) output(79,worse,76) output(79,worse,60) output(79,worse,42) output(79,worse,37) output(79,worse,32) output(79,worse,33) output(78,worse,60) output(78,worse,76) output(32,eq,33) output(7,eq,32) output(7,eq,33) output(79,eq,79) output(4,eq,4) output(72,eq,72) output(60,eq,60)
Optimization: 31 13
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasCost(4))),4) preference(1,(1,3),1,for(atom(hasCost(3))),4) preference(1,(1,4),1,for(atom(hasPrep(1))),7) preference(1,(1,5),1,for(atom(hasIngredient(4))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasIngredient(12))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasCategory(4))),1) preference(1,less(weight)) output(18,better,92) output(18,better,32) output(18,better,33) output(46,better,7) output(46,better,33) output(46,better,32) output(60,better,79) output(60,better,76) output(60,better,37) output(60,better,4) output(60,better,46) output(60,better,39) output(60,better,72) output(60,better,42) output(60,better,32) output(60,better,33) output(60,better,7) output(72,better,76) output(72,better,46) output(72,better,37) output(72,better,42) output(72,better,32) output(72,better,33) output(72,better,7) output(72,better,39) output(4,better,46) output(4,better,39) output(4,better,7) output(4,better,32) output(4,better,76) output(4,better,37) output(4,better,42) output(4,better,33) output(37,better,42) output(39,better,7) output(39,better,32) output(39,better,33) output(79,better,46) output(79,better,39) output(79,better,7) output(79,better,76) output(79,better,42) output(79,better,37) output(79,better,32) output(79,better,33) output(92,better,32) output(92,better,33) output(7,better,32) output(7,better,33) output(32,better,33) output(41,better,4) output(41,better,72) output(41,better,46) output(41,better,79) output(41,better,39) output(41,better,7) output(41,better,76) output(41,better,60) output(41,better,42) output(41,better,37) output(41,better,32) output(41,better,33) output(52,better,78) output(52,better,60) output(52,better,79) output(52,better,4) output(52,better,76) output(52,better,37) output(52,better,42) output(52,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,46) output(52,better,33) output(78,better,76) output(78,better,79) output(78,better,46) output(78,better,4) output(78,better,72) output(78,better,37) output(78,better,42) output(78,better,32) output(78,better,33) output(78,better,7) output(78,better,39) output(76,better,42) output(72,worse,60) output(4,worse,60) output(79,worse,60) output(46,eq,39) output(78,eq,60) output(79,eq,4) output(4,eq,72) output(76,eq,37) output(79,eq,72) output(72,eq,79) output(4,eq,79) output(79,eq,79) output(72,eq,4) output(4,eq,4) output(72,eq,72) output(60,eq,60)
Optimization: 16 14
Progression : [ 8;16] (Error: 1)
Progression : [ 9;16] (Error: 0.777778)
Progression : [10;16] (Error: 0.6)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.043 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 16 14
Bounds       : [10;16] [0;14]
Calls        : 1
Time         : 298.192s (Solving: 294.12s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1180.346s
Threads      : 4        (Winner: 4)

Choices      : 6675181  (Domain: 372752)
Conflicts    : 3570181  (Analyzed: 3570175)
Restarts     : 3234     (Average: 1103.95 Last: 211854)
Model-Level  : 36.3    
Problems     : 10       (Average Length: 0.40 Splits: 0)
Lemmas       : 3613405  (Deleted: 3368853)
  Binary     : 192      (Ratio:   0.01%)
  Ternary    : 3297     (Ratio:   0.09%)
  Conflict   : 3570175  (Average Length:  335.3 Ratio:  98.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 43230    (Average Length:   40.8 Ratio:   1.20%) 
  Distributed: 14486    (Ratio:   0.41% Average LBD: 3.64) 
  Integrated : 43458    (Ratio: 300.00% Unit: 139 Average Jumps: 40.01)
Backjumps    : 3570175  (Average:  1.74 Max: 721 Sum: 6205999)
  Executed   : 3570163  (Average:  1.74 Max: 721 Sum: 6205586 Ratio:  99.99%)
  Bounded    : 12       (Average: 34.42 Max:  94 Sum:    413 Ratio:   0.01%)

Rules        : 1071053 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 20712   
Bodies       : 19658   
  Sum        : 202     
  Count      : 14      
Equivalences : 15950    (Atom=Atom: 1035 Body=Body: 430 Other: 14485)
Tight        : Yes
Variables    : 17339    (Eliminated:    0 Frozen: 8015)
Constraints  : 1086718  (Binary:  98.8% Ternary:   0.9% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  1 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCost(3)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) 
}.
