asprin_vL version 1.0
Reading from stdin
-:1259:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1284:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1365:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1639:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1816:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2017:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2021:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2021:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2027:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2126:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2152:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2272:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2328:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1176:1-16: info: no atoms over signature occur in program:
  output/3

-:1168:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1169:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1170:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1171:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1201:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(1))),()) preference(1,aso) output(23,better,78) output(72,better,42) output(60,better,37) output(72,better,92) output(72,better,51) output(32,better,42) output(32,better,51) output(72,better,90) output(32,better,90) output(72,better,7) output(32,better,92) output(32,better,7) output(18,worse,23) output(31,worse,72) output(18,worse,41) output(4,worse,42) output(92,worse,76) output(4,worse,92) output(4,worse,51) output(31,worse,42) output(31,worse,51) output(4,worse,90) output(31,worse,90) output(42,worse,7) output(4,worse,7) output(31,worse,92) output(4,worse,76) output(31,worse,76) output(31,worse,7) output(51,eq,90) output(32,eq,72) output(18,eq,78)
Optimization: 28 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(23,better,78) output(72,better,42) output(42,better,51) output(51,better,90) output(42,better,92) output(72,better,92) output(42,better,90) output(72,better,51) output(18,better,78) output(72,better,90) output(4,better,90) output(31,better,90) output(32,better,90) output(72,better,7) output(31,worse,72) output(90,worse,7) output(32,worse,72) output(4,worse,42) output(92,worse,76) output(31,worse,42) output(4,worse,76) output(31,worse,76) output(60,eq,37) output(4,eq,92) output(4,eq,51) output(31,eq,51) output(31,eq,92) output(32,eq,7)
Optimization: 26 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(23,better,78) output(72,better,42) output(42,better,51) output(42,better,92) output(72,better,92) output(42,better,90) output(72,better,51) output(4,better,51) output(32,better,42) output(31,better,51) output(32,better,51) output(72,better,90) output(4,better,90) output(31,better,90) output(32,better,90) output(72,better,7) output(32,better,92) output(32,better,7) output(18,worse,23) output(31,worse,72) output(90,worse,7) output(18,worse,41) output(4,worse,42) output(92,worse,76) output(60,worse,37) output(51,worse,7) output(31,worse,42) output(4,worse,76) output(31,worse,76) output(51,eq,90) output(32,eq,72) output(4,eq,92) output(18,eq,78) output(31,eq,92)
Optimization: 22 6
Answer: 4
preference(1,(1,5),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasPrepTime(3))),()) preference(1,(1,6),2,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasPrep(2))),()) preference(1,aso) output(18,better,23) output(23,better,78) output(51,better,90) output(18,better,41) output(42,better,92) output(60,better,37) output(42,better,76) output(72,better,92) output(4,better,92) output(51,better,7) output(42,better,90) output(18,better,78) output(72,better,90) output(42,better,7) output(72,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(32,better,76) output(42,worse,51) output(90,worse,7) output(72,worse,51) output(31,worse,51) output(72,eq,42)
Optimization: 21 6
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(atom(hasCategory(1))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(atom(hasCost(3))),()) preference(1,(1,6),0,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,aso) output(72,better,42) output(51,better,90) output(90,better,7) output(4,better,42) output(60,better,37) output(72,better,92) output(4,better,92) output(51,better,7) output(31,better,42) output(32,better,42) output(72,better,90) output(32,better,90) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(32,better,76) output(31,better,7) output(32,better,7) output(23,worse,78) output(31,worse,72) output(42,worse,51) output(42,worse,92) output(92,worse,76) output(42,worse,76) output(42,worse,90) output(4,worse,51) output(18,worse,78) output(31,worse,51) output(42,worse,7) output(18,eq,23) output(32,eq,72) output(72,eq,51) output(32,eq,51) output(31,eq,90) output(31,eq,76)
Optimization: 20 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(atom(hasCategory(1))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(atom(hasIngredient(9))),()) preference(1,(1,6),0,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,aso) output(72,better,42) output(51,better,90) output(90,better,7) output(4,better,42) output(60,better,37) output(72,better,92) output(4,better,92) output(51,better,7) output(31,better,42) output(32,better,42) output(72,better,90) output(31,better,90) output(32,better,90) output(72,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7) output(23,worse,78) output(42,worse,51) output(92,worse,76) output(42,worse,76) output(42,worse,90) output(4,worse,51) output(18,worse,78) output(42,worse,7) output(18,eq,23) output(31,eq,72) output(32,eq,72) output(42,eq,92) output(72,eq,51) output(31,eq,51) output(32,eq,51)
Optimization: 19 6
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(atom(hasCategory(1))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(atom(hasCost(3))),()) preference(1,(1,6),0,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,aso) output(72,better,42) output(51,better,90) output(90,better,7) output(4,better,42) output(60,better,37) output(72,better,92) output(4,better,92) output(51,better,7) output(31,better,42) output(32,better,42) output(72,better,90) output(31,better,90) output(32,better,90) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7) output(23,worse,78) output(42,worse,51) output(42,worse,92) output(92,worse,76) output(42,worse,76) output(42,worse,90) output(4,worse,51) output(18,worse,78) output(42,worse,7) output(18,eq,23) output(31,eq,72) output(32,eq,72) output(72,eq,51) output(31,eq,51) output(32,eq,51)
Optimization: 18 6
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(atom(hasCategory(1))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(atom(hasCost(3))),()) preference(1,(1,6),0,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,aso) output(31,better,72) output(72,better,42) output(51,better,90) output(90,better,7) output(32,better,72) output(4,better,42) output(60,better,37) output(72,better,92) output(4,better,92) output(51,better,7) output(31,better,42) output(32,better,42) output(31,better,51) output(32,better,51) output(72,better,90) output(31,better,90) output(32,better,90) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7) output(23,worse,78) output(42,worse,51) output(42,worse,92) output(92,worse,76) output(42,worse,76) output(42,worse,90) output(18,worse,78) output(42,worse,7) output(18,eq,23) output(72,eq,51)
Optimization: 14 6
Answer: 9
preference(1,(1,1),0,for(atom(hasPrep(2))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(72,better,42) output(90,better,7) output(18,better,41) output(32,better,72) output(4,better,42) output(42,better,92) output(60,better,37) output(42,better,76) output(72,better,92) output(4,better,92) output(72,better,51) output(4,better,51) output(31,better,42) output(32,better,42) output(32,better,51) output(72,better,90) output(4,better,90) output(32,better,90) output(42,better,7) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(4,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7) output(18,eq,23) output(23,eq,78) output(92,eq,76) output(18,eq,78)
Optimization: 11 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,(1,4),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(18,better,23) output(23,better,78) output(31,better,72) output(72,better,42) output(42,better,51) output(51,better,90) output(90,better,7) output(18,better,41) output(32,better,72) output(4,better,42) output(42,better,92) output(92,better,76) output(60,better,37) output(42,better,76) output(72,better,92) output(4,better,92) output(51,better,7) output(42,better,90) output(72,better,51) output(4,better,51) output(31,better,42) output(32,better,42) output(18,better,78) output(31,better,51) output(32,better,51) output(72,better,90) output(4,better,90) output(31,better,90) output(32,better,90) output(42,better,7) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(4,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 11
preference(1,(1,1),0,for(atom(hasCategory(4))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,2),3,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(18,better,23) output(23,better,78) output(31,better,72) output(72,better,42) output(42,better,51) output(51,better,90) output(90,better,7) output(18,better,41) output(32,better,72) output(4,better,42) output(42,better,92) output(92,better,76) output(60,better,37) output(42,better,76) output(72,better,92) output(4,better,92) output(51,better,7) output(42,better,90) output(72,better,51) output(4,better,51) output(31,better,42) output(32,better,42) output(18,better,78) output(31,better,51) output(32,better,51) output(72,better,90) output(4,better,90) output(31,better,90) output(32,better,90) output(42,better,7) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(4,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,aso) output(18,better,23) output(23,better,78) output(31,better,72) output(72,better,42) output(42,better,51) output(51,better,90) output(90,better,7) output(18,better,41) output(32,better,72) output(4,better,42) output(42,better,92) output(92,better,76) output(60,better,37) output(42,better,76) output(72,better,92) output(4,better,92) output(51,better,7) output(42,better,90) output(72,better,51) output(4,better,51) output(31,better,42) output(32,better,42) output(18,better,78) output(31,better,51) output(32,better,51) output(72,better,90) output(4,better,90) output(31,better,90) output(32,better,90) output(42,better,7) output(72,better,7) output(4,better,7) output(31,better,92) output(32,better,92) output(72,better,76) output(4,better,76) output(31,better,76) output(32,better,76) output(31,better,7) output(32,better,7)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 12
  Optimum    : yes
Optimization : 0 4
Calls        : 1
Time         : 13.862s (Solving: 5.44s 1st Model: 0.49s Unsat: 3.61s)
CPU Time     : 29.979s
Threads      : 4        (Winner: 3)

Choices      : 125006   (Domain: 695)
Conflicts    : 14000    (Analyzed: 13996)
Restarts     : 36       (Average: 388.78 Last: 993)
Model-Level  : 699.3   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 26925    (Deleted: 0)
  Binary     : 1728     (Ratio:   6.42%)
  Ternary    : 3952     (Ratio:  14.68%)
  Conflict   : 13996    (Average Length:  116.9 Ratio:  51.98%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12929    (Average Length:   43.1 Ratio:  48.02%) 
  Distributed: 4377     (Ratio:  31.27% Average LBD: 2.99) 
  Integrated : 13121    (Ratio: 299.77% Unit: 294 Average Jumps: 51.29)
Backjumps    : 13996    (Average:  7.17 Max: 976 Sum: 100411)
  Executed   : 13979    (Average:  7.14 Max: 976 Sum: 100001 Ratio:  99.59%)
  Bounded    : 17       (Average: 24.12 Max:  38 Sum:    410 Ratio:   0.41%)

Rules        : 3854532 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 638810  
Bodies       : 783674  
  Count      : 1464    
Equivalences : 1943854  (Atom=Atom: 572730 Body=Body: 625265 Other: 745859)
Tight        : Yes
Variables    : 102779   (Eliminated:    0 Frozen: 37475)
Constraints  : 3367802  (Binary:  97.0% Ternary:   2.8% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(5)) >> atom(hasCategory(2)) >> not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasPrep(4)) >> atom(hasPrep(3)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasPrepTime(3)) >> atom(hasPrep(2)) || not atom(hasCategory(1))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(5)) >> not atom(hasCost(3))  || not atom(hasCategory(1))  ; 
  atom(hasPrep(4)) >> atom(hasCost(5)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(12)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(11)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasIngredient(12))  || not atom(hasCategory(1))  ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasCategory(1)) ; 
  not atom(hasCost(5))  >> not atom(hasPrep(4))  >> not atom(hasPrep(3))  || atom(hasCategory(1)) ; 
  not atom(hasIngredient(10))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrep(3))  || atom(hasCost(3)) ; 
  not atom(hasIngredient(9))  >> not atom(hasIngredient(11))  || atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasCost(1))  || not atom(hasIngredient(12))  ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasCategory(1)) ; 
  not atom(hasCost(5))  >> not atom(hasPrep(4))  >> not atom(hasPrep(3))  || atom(hasCategory(1)) ; 
  not atom(hasIngredient(10))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrep(3))  || atom(hasIngredient(9)) ; 
  not atom(hasIngredient(9))  >> not atom(hasIngredient(11))  || atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasCost(1))  || not atom(hasIngredient(12))  ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasCategory(1)) ; 
  not atom(hasCost(5))  >> not atom(hasPrep(4))  >> not atom(hasPrep(3))  || atom(hasCategory(1)) ; 
  not atom(hasIngredient(10))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrep(3))  || atom(hasCost(3)) ; 
  not atom(hasIngredient(9))  >> not atom(hasIngredient(11))  || atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasCategory(1)) >> not atom(hasCategory(2))  || not atom(hasPrepTime(1))  ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  || atom(hasCategory(1)) ; 
  not atom(hasCost(5))  >> not atom(hasPrep(4))  >> not atom(hasPrep(3))  || atom(hasCategory(1)) ; 
  not atom(hasIngredient(10))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasCategory(3))  >> not atom(hasPrep(3))  || atom(hasCost(3)) ; 
  not atom(hasIngredient(9))  >> not atom(hasIngredient(11))  || atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> not atom(hasPrepTime(3))  >> atom(hasPrep(1)) || atom(hasPrep(2)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(6)) >> not atom(hasIngredient(12))  || not atom(hasCost(1))  ; 
  atom(hasIngredient(12)) >> not atom(hasCost(2))  >> not atom(hasPrep(2))  || not atom(hasCategory(1))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(1))  >> atom(hasIngredient(3)) || atom(hasPrep(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(12)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> not atom(hasIngredient(1))  >> not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasCost(4)) >> atom(hasPrepTime(3)) || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(2)) >> not atom(hasCategory(3))  || not atom(hasCategory(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(7)) >> not atom(hasCost(1))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(5))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(1)) >> not atom(hasPrep(2))  >> atom(hasPrep(2)) ; 
  atom(hasCategory(3)) >> atom(hasPrep(7)) >> atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasCategory(4))  >> atom(hasPrep(2)) || atom(hasCategory(4)) ; 
  atom(hasIngredient(12)) >> atom(hasPrep(2)) >> atom(hasCost(2)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(7)) >> atom(hasCost(4)) || not atom(hasCategory(1))  ; 
  atom(hasCost(1)) >> not atom(hasPrep(5))  >> atom(hasIngredient(7)) || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(7)) >> not atom(hasCost(1))  || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasIngredient(7))  >> atom(hasPrep(6)) || not atom(hasCategory(3))  ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(5))  >> not atom(hasCategory(1))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> not atom(hasIngredient(7))  >> not atom(hasCategory(1))  || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(2)) >> atom(hasCost(2)) || not atom(hasCost(1))  
}.
