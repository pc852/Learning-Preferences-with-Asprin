asprin_vL version 1.0
Reading from stdin
-:1258:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1283:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1364:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1638:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1815:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2016:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2020:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2020:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2026:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2125:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2151:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2271:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2305:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2327:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1175:1-16: info: no atoms over signature occur in program:
  output/3

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1168:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1169:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1170:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1200:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(60,better,75) output(26,better,55) output(55,better,48) output(10,better,75) output(26,better,38) output(57,better,75) output(26,better,48) output(26,better,5) output(25,better,48) output(20,worse,60) output(75,worse,32) output(73,worse,57) output(57,worse,10) output(75,worse,62) output(25,worse,26) output(75,worse,76) output(73,worse,10) output(73,worse,32) output(20,worse,32) output(57,worse,62) output(73,worse,62) output(20,worse,62) output(57,worse,76) output(20,worse,76) output(73,worse,76) output(38,eq,5) output(62,eq,76) output(25,eq,38) output(25,eq,55) output(20,eq,75) output(25,eq,5) output(73,eq,75)
Optimization: 30 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(60,better,75) output(26,better,55) output(10,better,75) output(26,better,38) output(25,better,38) output(57,better,75) output(26,better,48) output(25,better,55) output(26,better,5) output(25,better,5) output(25,better,48) output(20,worse,60) output(75,worse,32) output(73,worse,57) output(57,worse,10) output(62,worse,76) output(25,worse,26) output(75,worse,76) output(73,worse,10) output(73,worse,32) output(20,worse,32) output(57,worse,76) output(20,worse,76) output(73,worse,76) output(38,eq,5) output(20,eq,75) output(73,eq,75)
Optimization: 28 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasCategory(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(60,better,75) output(26,better,55) output(55,better,48) output(10,better,75) output(26,better,38) output(25,better,38) output(57,better,75) output(26,better,48) output(25,better,55) output(26,better,5) output(20,better,75) output(25,better,5) output(25,better,48) output(73,better,75) output(20,worse,60) output(75,worse,32) output(73,worse,57) output(75,worse,62) output(62,worse,76) output(25,worse,26) output(75,worse,76) output(73,worse,32) output(20,worse,32) output(57,worse,76) output(20,worse,76) output(73,worse,76) output(38,eq,5)
Optimization: 25 6
Answer: 4
preference(1,(1,1),0,for(atom(hasPrep(5))),()) preference(1,(1,6),0,for(atom(hasCategory(2))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(75,better,32) output(75,better,62) output(25,better,26) output(75,better,76) output(60,better,62) output(10,better,62) output(60,better,32) output(10,better,32) output(57,better,32) output(73,better,32) output(20,better,32) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(26,worse,55) output(26,worse,38) output(26,worse,48) output(26,worse,5) output(20,eq,60) output(60,eq,75) output(38,eq,5) output(55,eq,48) output(73,eq,57) output(57,eq,10) output(10,eq,75) output(62,eq,76) output(25,eq,38) output(57,eq,75) output(73,eq,10) output(25,eq,55) output(20,eq,75) output(25,eq,5) output(25,eq,48) output(73,eq,75)
Optimization: 20 2
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(75,better,32) output(26,better,55) output(75,better,62) output(26,better,38) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(57,better,32) output(73,better,32) output(25,better,5) output(25,better,48) output(57,better,62) output(73,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(73,better,76) output(20,worse,60) output(20,worse,75) output(60,eq,75) output(38,eq,5) output(55,eq,48) output(73,eq,57) output(57,eq,10) output(10,eq,75) output(62,eq,76) output(25,eq,26) output(57,eq,75) output(73,eq,10) output(20,eq,32) output(73,eq,75) output(20,eq,62) output(20,eq,76)
Optimization: 16 2
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(75,better,32) output(26,better,55) output(55,better,48) output(75,better,62) output(26,better,38) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(57,better,32) output(73,better,32) output(25,better,5) output(25,better,48) output(57,better,62) output(73,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(73,better,76) output(20,worse,60) output(20,worse,75) output(60,eq,75) output(38,eq,5) output(73,eq,57) output(57,eq,10) output(10,eq,75) output(62,eq,76) output(25,eq,26) output(57,eq,75) output(73,eq,10) output(20,eq,32) output(73,eq,75) output(20,eq,62) output(20,eq,76)
Optimization: 15 2
Answer: 7
preference(1,(1,3),0,for(atom(hasIngredient(10))),()) preference(1,(1,4),0,for(atom(hasPrep(5))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(75,better,32) output(57,better,10) output(10,better,75) output(75,better,62) output(25,better,26) output(75,better,76) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(25,better,55) output(60,better,32) output(10,better,32) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(26,worse,55) output(55,worse,48) output(62,worse,76) output(26,worse,38) output(26,worse,48) output(26,worse,5) output(20,eq,60) output(60,eq,75) output(38,eq,5) output(73,eq,57) output(25,eq,38) output(20,eq,75) output(25,eq,5)
Optimization: 13 5
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(atom(hasPrep(5))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(9))),()) preference(1,(1,6),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(20,better,60) output(75,better,32) output(57,better,10) output(75,better,62) output(25,better,26) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(25,better,55) output(10,better,32) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(60,worse,75) output(26,worse,55) output(55,worse,48) output(62,worse,76) output(26,worse,48) output(38,eq,5) output(73,eq,57) output(10,eq,75) output(20,eq,75)
Optimization: 12 5
Progression : [ 1;12] (Error: 11)
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(atom(hasIngredient(10))),()) preference(1,(1,4),0,for(atom(hasPrep(5))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(20,better,60) output(75,better,32) output(55,better,48) output(57,better,10) output(75,better,62) output(25,better,26) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(25,better,55) output(10,better,32) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(60,worse,75) output(26,worse,55) output(62,worse,76) output(26,worse,38) output(26,worse,5) output(38,eq,5) output(73,eq,57) output(10,eq,75) output(20,eq,75)
Optimization: 11 5
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(2))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,1),3,for(atom(hasPrep(7))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(60,better,75) output(75,better,32) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(10,better,75) output(62,better,76) output(25,better,26) output(26,better,38) output(25,better,38) output(60,better,62) output(10,better,62) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(20,better,76) output(73,better,76) output(20,worse,60)
Optimization: 10 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(atom(hasIngredient(8))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(20,better,60) output(60,better,75) output(75,better,32) output(26,better,55) output(55,better,48) output(57,better,10) output(10,better,75) output(62,better,76) output(26,better,38) output(25,better,38) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(38,eq,5) output(73,eq,57)
Optimization: 7 3
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(atom(hasIngredient(8))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(20,better,60) output(60,better,75) output(75,better,32) output(26,better,55) output(55,better,48) output(57,better,10) output(10,better,75) output(62,better,76) output(25,better,26) output(26,better,38) output(25,better,38) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(38,eq,5) output(73,eq,57)
Optimization: 6 3
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasIngredient(9))),()) preference(1,(1,4),3,for(atom(hasDifficulty(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(60,better,75) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(57,better,10) output(10,better,75) output(25,better,26) output(26,better,38) output(25,better,38) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(20,worse,60) output(75,worse,32)
Optimization: 5 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(9))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasCategory(3))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasCategory(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(9))),()) preference(1,(1,3),3,for(atom(hasDifficulty(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(9))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(60,better,75) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(57,better,10) output(10,better,75) output(75,better,62) output(25,better,26) output(26,better,38) output(25,better,38) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(20,worse,60)
Optimization: 4 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasPrep(7))),()) preference(1,(1,4),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(60,better,75) output(75,better,32) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(57,better,10) output(10,better,75) output(75,better,62) output(25,better,26) output(26,better,38) output(25,better,38) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(20,worse,60)
Optimization: 3 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(2))),()) preference(1,(1,3),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasIngredient(9))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(60,better,75) output(75,better,32) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(57,better,10) output(10,better,75) output(75,better,62) output(62,better,76) output(25,better,26) output(26,better,38) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(20,eq,60)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(2))),()) preference(1,(1,3),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasIngredient(9))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(60,better,75) output(75,better,32) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(57,better,10) output(10,better,75) output(75,better,62) output(62,better,76) output(25,better,26) output(26,better,38) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(20,eq,60)
Optimization: 1 5
Progression : 1 [2;5] (Error: 1.5)
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasCategory(3))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(60,better,75) output(75,better,32) output(38,better,5) output(26,better,55) output(55,better,48) output(73,better,57) output(57,better,10) output(10,better,75) output(75,better,62) output(62,better,76) output(25,better,26) output(26,better,38) output(25,better,38) output(75,better,76) output(60,better,62) output(10,better,62) output(57,better,75) output(73,better,10) output(26,better,48) output(25,better,55) output(26,better,5) output(60,better,32) output(10,better,32) output(20,better,75) output(57,better,32) output(73,better,32) output(20,better,32) output(25,better,5) output(25,better,48) output(73,better,75) output(57,better,62) output(73,better,62) output(20,better,62) output(60,better,76) output(10,better,76) output(57,better,76) output(20,better,76) output(73,better,76) output(20,eq,60)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 18
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 21.546s (Solving: 13.93s 1st Model: 0.46s Unsat: 6.90s)
CPU Time     : 62.706s
Threads      : 4        (Winner: 1)

Choices      : 348325   (Domain: 2636)
Conflicts    : 63303    (Analyzed: 63297)
Restarts     : 113      (Average: 560.15 Last: 4344)
Model-Level  : 556.7   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 108092   (Deleted: 27614)
  Binary     : 4640     (Ratio:   4.29%)
  Ternary    : 12651    (Ratio:  11.70%)
  Conflict   : 63297    (Average Length:  167.0 Ratio:  58.56%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 44795    (Average Length:   69.0 Ratio:  41.44%) 
  Distributed: 14983    (Ratio:  23.67% Average LBD: 3.09) 
  Integrated : 44946    (Ratio: 299.98% Unit: 253 Average Jumps: 95.81)
Backjumps    : 63297    (Average:  4.63 Max: 1267 Sum: 293126)
  Executed   : 63274    (Average:  4.62 Max: 1267 Sum: 292697 Ratio:  99.85%)
  Bounded    : 23       (Average: 18.65 Max:  38 Sum:    429 Ratio:   0.15%)

Rules        : 3754289 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 621154  
Bodies       : 762585  
  Count      : 1428    
Equivalences : 1887834  (Atom=Atom: 556500 Body=Body: 606784 Other: 724550)
Tight        : Yes
Variables    : 102159   (Eliminated:    0 Frozen: 36867)
Constraints  : 3291012  (Binary:  96.9% Ternary:   2.8% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasPrep(4)) >> atom(hasCategory(2)) >> not atom(hasPrep(5))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasCategory(2)) >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(5))  >> not atom(hasCategory(2))  >> atom(hasIngredient(7)) || atom(hasPrep(5)) ; 
  not atom(hasCategory(2))  >> not atom(hasCost(4))  >> atom(hasDifficulty(2)) || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> not atom(hasCategory(2))  >> atom(hasIngredient(7)) || not atom(hasPrep(6))  ; 
  not atom(hasCategory(2))  >> not atom(hasCost(4))  >> atom(hasDifficulty(2)) || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(7)) >> not atom(hasCategory(2))  || not atom(hasPrep(6))  ; 
  not atom(hasCategory(2))  >> not atom(hasCost(4))  >> atom(hasDifficulty(2)) || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(0))  >> atom(hasIngredient(4)) >> atom(hasIngredient(9)) || atom(hasIngredient(10)) ; 
  not atom(hasPrep(5))  >> not atom(hasIngredient(8))  >> not atom(hasIngredient(2))  || atom(hasPrep(5)) ; 
  atom(hasPrepTime(1)) >> not atom(hasCost(4))  >> not atom(hasCategory(2))  || not atom(hasIngredient(6))  ; 
  not atom(hasIngredient(7))  >> not atom(hasCategory(2))  >> not atom(hasPrep(7))  || atom(hasPrep(5)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(7))  >> not atom(hasPrep(5))  >> not atom(hasIngredient(5))  || not atom(hasCategory(4))  ; 
  not atom(hasPrep(0))  >> atom(hasIngredient(4)) >> atom(hasIngredient(9)) || not atom(hasPrep(2))  ; 
  not atom(hasPrep(5))  >> not atom(hasIngredient(8))  >> not atom(hasIngredient(2))  || atom(hasPrep(5)) ; 
  atom(hasPrep(3)) >> not atom(hasIngredient(8))  >> not atom(hasCost(1))  || not atom(hasPrepTime(1))  ; 
  not atom(hasPrep(7))  >> not atom(hasCategory(2))  >> atom(hasIngredient(7)) || atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasPrep(5))  >> not atom(hasIngredient(5))  || not atom(hasCategory(4))  ; 
  not atom(hasPrep(0))  >> atom(hasIngredient(4)) >> atom(hasIngredient(9)) || atom(hasIngredient(10)) ; 
  not atom(hasPrep(5))  >> not atom(hasIngredient(8))  >> not atom(hasIngredient(2))  || atom(hasPrep(5)) ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(1))  || not atom(hasIngredient(6))  ; 
  not atom(hasPrep(7))  >> not atom(hasPrep(2))  || atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasCategory(4))  >> atom(hasPrep(7)) || not atom(hasDifficulty(3))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(3))  >> not atom(hasIngredient(10))  || atom(hasDifficulty(2)) ; 
  atom(hasCategory(1)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(2))  || not atom(hasCost(1))  ; 
  atom(hasPrep(3)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  not atom(hasCategory(4))  >> not atom(hasIngredient(7))  >> atom(hasIngredient(12)) || not atom(hasPrepTime(1))  ; 
  not atom(hasCategory(5))  >> not atom(hasCost(4))  >> not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> not atom(hasCost(3))  >> atom(hasIngredient(12)) || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(10))  >> not atom(hasCategory(1))  >> not atom(hasDifficulty(1))  || atom(hasIngredient(8)) ; 
  atom(hasPrep(6)) >> not atom(hasCost(3))  >> atom(hasIngredient(12)) || not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasCost(3))  >> atom(hasIngredient(12)) || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(10))  >> not atom(hasCategory(1))  >> not atom(hasDifficulty(1))  || atom(hasIngredient(8)) ; 
  atom(hasPrep(2)) >> not atom(hasCost(3))  >> atom(hasIngredient(12)) || not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasDifficulty(3)) >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(1)) >> atom(hasPrep(5)) >> atom(hasIngredient(9)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(6)) >> not atom(hasPrep(6))  >> atom(hasDifficulty(1)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(5)) >> atom(hasCategory(3)) >> atom(hasPrep(7)) || atom(hasDifficulty(2)) ; 
  atom(hasCost(1)) >> not atom(hasCategory(5))  >> not atom(hasIngredient(9))  ; 
  atom(hasPrep(4)) >> not atom(hasPrepTime(1))  >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasCategory(3)) >> atom(hasCategory(5)) || not atom(hasPrep(7))  ; 
  atom(hasPrep(5)) >> atom(hasIngredient(2)) >> atom(hasDifficulty(2)) || atom(hasIngredient(9)) ; 
  atom(hasPrep(6)) >> atom(hasPrep(5)) >> atom(hasIngredient(9)) || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(1)) >> atom(hasCategory(3)) >> atom(hasIngredient(3)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(1)) >> atom(hasDifficulty(3)) >> not atom(hasCategory(1))  || not atom(hasPrep(3))  ; 
  atom(hasCost(1)) >> not atom(hasIngredient(3))  >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> atom(hasDifficulty(1)) >> atom(hasCategory(3)) || not atom(hasPrep(7))  ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(3))  >> atom(hasPrep(7)) || not atom(hasPrep(0))  ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(3)) >> not atom(hasPrepTime(3))  || not atom(hasIngredient(6))  ; 
  atom(hasPrep(6)) >> atom(hasPrep(5)) >> atom(hasIngredient(9)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(11)) >> not atom(hasPrep(5))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(7)) >> not atom(hasCategory(1))  || not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasDifficulty(1)) >> atom(hasPrep(5)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> atom(hasCategory(5)) || atom(hasDifficulty(2)) ; 
  not atom(hasIngredient(12))  >> atom(hasCost(4)) >> atom(hasIngredient(9)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(3)) >> not atom(hasPrep(5))  >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(6)) >> not atom(hasPrepTime(1))  >> atom(hasIngredient(9)) || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrep(5))  >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasDifficulty(1)) >> atom(hasPrep(5)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> atom(hasCategory(5)) || atom(hasDifficulty(2)) ; 
  not atom(hasIngredient(12))  >> atom(hasCost(4)) >> atom(hasIngredient(9)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(3)) >> not atom(hasPrep(5))  >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(8)) >> not atom(hasPrepTime(1))  >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasIngredient(12)) >> atom(hasPrep(5)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(5))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(3)) >> atom(hasCategory(5)) || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(11)) >> not atom(hasPrepTime(1))  >> atom(hasCategory(3)) 
}.
