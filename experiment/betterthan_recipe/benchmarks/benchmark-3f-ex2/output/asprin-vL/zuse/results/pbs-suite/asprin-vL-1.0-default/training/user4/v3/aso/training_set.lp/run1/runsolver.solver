asprin_vL version 1.0
Reading from stdin
-:1244:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1269:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1350:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1624:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1801:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2002:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2006:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2006:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2012:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2111:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2137:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2257:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2313:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1161:1-16: info: no atoms over signature occur in program:
  output/3

-:1153:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1154:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1155:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1156:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1186:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(78,better,60) output(39,better,7) output(72,better,31) output(18,better,51) output(90,better,79) output(23,better,7) output(51,better,79) output(18,better,90) output(18,better,79) output(52,worse,78) output(79,worse,4) output(46,worse,39) output(7,worse,32) output(42,worse,23) output(90,worse,4) output(51,worse,4) output(42,worse,32) output(46,worse,32) output(51,eq,90) output(42,eq,7) output(39,eq,32) output(23,eq,32) output(46,eq,7) output(52,eq,60) output(18,eq,4)
Optimization: 16 6
Answer: 2
preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasPrep(3))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(46,better,39) output(7,better,32) output(72,better,31) output(51,better,90) output(51,better,79) output(18,better,90) output(23,better,32) output(51,better,4) output(18,better,4) output(46,better,32) output(18,better,79) output(52,worse,78) output(39,worse,7) output(42,worse,23) output(42,worse,7) output(52,worse,60) output(79,eq,4) output(18,eq,51) output(90,eq,79) output(23,eq,7) output(39,eq,32) output(90,eq,4) output(42,eq,32)
Optimization: 14 6
Answer: 3
preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasPrep(3))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(46,better,39) output(7,better,32) output(72,better,31) output(51,better,90) output(51,better,79) output(18,better,90) output(39,better,32) output(23,better,32) output(51,better,4) output(18,better,4) output(42,better,32) output(46,better,32) output(18,better,79) output(52,worse,78) output(90,worse,79) output(90,worse,4) output(52,worse,60) output(79,eq,4) output(18,eq,51) output(23,eq,7)
Optimization: 12 6
Answer: 4
preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(atom(hasCost(4))),()) preference(1,(1,6),0,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(52,better,78) output(39,better,7) output(7,better,32) output(72,better,31) output(18,better,51) output(90,better,79) output(42,better,23) output(42,better,7) output(39,better,32) output(23,better,32) output(46,better,7) output(90,better,4) output(18,better,4) output(42,better,32) output(46,better,32) output(18,better,79) output(78,worse,60) output(51,worse,90) output(79,eq,4) output(46,eq,39) output(23,eq,7) output(18,eq,90) output(52,eq,60)
Optimization: 9 4
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),1,for(atom(hasCategory(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,(1,4),3,for(atom(hasPrep(5))),()) preference(1,(1,5),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(52,better,78) output(78,better,60) output(46,better,39) output(39,better,7) output(72,better,31) output(51,better,90) output(90,better,79) output(42,better,23) output(23,better,7) output(42,better,7) output(51,better,79) output(39,better,32) output(46,better,7) output(52,better,60) output(51,better,4) output(42,better,32) output(46,better,32) output(18,worse,51)
Optimization: 8 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),0,for(atom(hasPrep(0))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(12))),()) preference(1,(1,4),3,for(atom(hasIngredient(9))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(52,better,78) output(78,better,60) output(79,better,4) output(46,better,39) output(39,better,7) output(7,better,32) output(72,better,31) output(18,better,51) output(51,better,90) output(90,better,79) output(42,better,23) output(23,better,7) output(42,better,7) output(51,better,79) output(18,better,90) output(39,better,32) output(23,better,32) output(46,better,7) output(90,better,4) output(52,better,60) output(51,better,4) output(18,better,4) output(42,better,32) output(46,better,32) output(18,better,79)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Progression : 0 [2;6] (Error: 2)
Answer: 7
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(12))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasCategory(3))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasPrep(5))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(52,better,78) output(78,better,60) output(79,better,4) output(46,better,39) output(39,better,7) output(7,better,32) output(72,better,31) output(18,better,51) output(51,better,90) output(90,better,79) output(42,better,23) output(23,better,7) output(42,better,7) output(51,better,79) output(18,better,90) output(39,better,32) output(23,better,32) output(46,better,7) output(90,better,4) output(52,better,60) output(51,better,4) output(18,better,4) output(42,better,32) output(46,better,32) output(18,better,79)
Optimization: 0 5
Answer: 8
preference(1,(1,3),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(12))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(52,better,78) output(78,better,60) output(79,better,4) output(46,better,39) output(39,better,7) output(7,better,32) output(72,better,31) output(18,better,51) output(51,better,90) output(90,better,79) output(42,better,23) output(23,better,7) output(42,better,7) output(51,better,79) output(18,better,90) output(39,better,32) output(23,better,32) output(46,better,7) output(90,better,4) output(52,better,60) output(51,better,4) output(18,better,4) output(42,better,32) output(46,better,32) output(18,better,79)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(52,better,78) output(78,better,60) output(79,better,4) output(46,better,39) output(39,better,7) output(7,better,32) output(72,better,31) output(18,better,51) output(51,better,90) output(90,better,79) output(42,better,23) output(23,better,7) output(42,better,7) output(51,better,79) output(18,better,90) output(39,better,32) output(23,better,32) output(46,better,7) output(90,better,4) output(52,better,60) output(51,better,4) output(18,better,4) output(42,better,32) output(46,better,32) output(18,better,79)
Optimization: 0 3
OPTIMUM FOUND

Models       : 9
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 12.254s (Solving: 6.46s 1st Model: 0.55s Unsat: 0.01s)
CPU Time     : 31.239s
Threads      : 4        (Winner: 0)

Choices      : 151728   (Domain: 380)
Conflicts    : 22381    (Analyzed: 22378)
Restarts     : 53       (Average: 422.23 Last: 1650)
Model-Level  : 840.4   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 43431    (Deleted: 5443)
  Binary     : 2840     (Ratio:   6.54%)
  Ternary    : 6570     (Ratio:  15.13%)
  Conflict   : 22377    (Average Length:  141.1 Ratio:  51.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 21054    (Average Length:   71.6 Ratio:  48.48%) 
  Distributed: 7095     (Ratio:  31.71% Average LBD: 2.99) 
  Integrated : 21279    (Ratio: 299.92% Unit: 245 Average Jumps: 51.70)
Backjumps    : 22378    (Average:  5.58 Max: 1245 Sum: 124884)
  Executed   : 22365    (Average:  5.57 Max: 1245 Sum: 124688 Ratio:  99.84%)
  Bounded    : 13       (Average: 15.08 Max:  24 Sum:    196 Ratio:   0.16%)

Rules        : 2430135 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 409538  
Bodies       : 518886  
  Count      : 924     
Equivalences : 1235381  (Atom=Atom: 362519 Body=Body: 390164 Other: 482698)
Tight        : Yes
Variables    : 90353    (Eliminated:    0 Frozen: 25229)
Constraints  : 2194592  (Binary:  96.0% Ternary:   3.8% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCost(5)) >> not atom(hasCost(5))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasPrep(4)) >> atom(hasPrep(3)) ; 
  atom(hasCost(5)) >> atom(hasCategory(5)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(5)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasPrep(4)) >> atom(hasPrep(3)) ; 
  atom(hasCost(5)) >> atom(hasCategory(5)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(5)) >> atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> atom(hasPrep(6)) >> atom(hasIngredient(12)) || not atom(hasCategory(1))  ; 
  not atom(hasCategory(5))  >> not atom(hasIngredient(11))  || atom(hasCost(4)) ; 
  not atom(hasPrepTime(3))  >> atom(hasCost(2)) || atom(hasCategory(1)) ; 
  not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(3))  >> not atom(hasIngredient(9))  >> atom(hasIngredient(3)) || not atom(hasCategory(1))  ; 
  atom(hasCategory(4)) >> atom(hasCategory(5)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(3)) >> atom(hasPrepTime(3)) >> not atom(hasIngredient(9))  || not atom(hasIngredient(12))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(9)) >> atom(hasPrep(5)) || not atom(hasCategory(1))  ; 
  atom(hasCategory(3)) >> atom(hasIngredient(9)) >> atom(hasPrepTime(3)) || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(2)) >> atom(hasPrepTime(1)) >> atom(hasIngredient(10)) || not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(3))  || not atom(hasCost(4))  ; 
  not atom(hasCost(2))  >> atom(hasCost(2)) || atom(hasPrep(0)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) >> atom(hasIngredient(12)) || not atom(hasPrepTime(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrepTime(3)) >> atom(hasIngredient(9)) || not atom(hasIngredient(9))  ; 
  atom(hasPrepTime(3)) >> atom(hasDifficulty(1)) >> atom(hasIngredient(7)) || not atom(hasCost(1))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(7)) >> atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasDifficulty(3)) >> atom(hasPrep(2)) || atom(hasIngredient(7)) ; 
  atom(hasIngredient(3)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasCategory(1))  ; 
  not atom(hasPrepTime(2))  >> atom(hasIngredient(9)) >> atom(hasPrep(5)) || atom(hasIngredient(12)) ; 
  atom(hasCategory(1)) >> atom(hasCategory(3)) >> atom(hasCost(3)) || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasPrep(5)) >> not atom(hasIngredient(9))  || atom(hasIngredient(7)) ; 
  not atom(hasPrepTime(2))  >> atom(hasIngredient(9)) >> atom(hasPrep(5)) || atom(hasIngredient(12)) ; 
  atom(hasCategory(1)) >> atom(hasCategory(3)) >> atom(hasCost(3)) || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(3))  || not atom(hasCost(3))  ; 
  atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(12)) || not atom(hasCost(4))  ; 
  not atom(hasIngredient(7))  >> atom(hasPrep(5)) >> not atom(hasIngredient(9))  || not atom(hasDifficulty(1))  
}.
