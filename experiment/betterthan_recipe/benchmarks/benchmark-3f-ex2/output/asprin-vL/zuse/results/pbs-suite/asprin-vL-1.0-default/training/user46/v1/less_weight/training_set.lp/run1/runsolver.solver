asprin_vL version 1.0
Reading from stdin
-:1275:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1285:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1300:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1381:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1642:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1655:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1832:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1961:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2033:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2037:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2037:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2043:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2142:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2168:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2288:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2322:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2344:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1192:1-16: info: no atoms over signature occur in program:
  output/3

-:1184:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1185:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(79,eq,88) output(49,eq,28) output(65,eq,95) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(88,eq,49) output(86,eq,65) output(54,eq,67) output(67,eq,100) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(100,eq,52) output(73,eq,98) output(65,eq,98) output(67,eq,52) output(95,eq,63) output(73,eq,63) output(86,eq,73) output(52,eq,73) output(100,eq,65) output(54,eq,100) output(50,eq,67) output(79,eq,49) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(73,eq,25) output(86,eq,95) output(52,eq,95) output(88,eq,28) output(79,eq,28) output(100,eq,95) output(67,eq,95) output(65,eq,25) output(86,eq,25) output(52,eq,25) output(95,eq,33) output(73,eq,33) output(65,eq,33) output(50,eq,100) output(67,eq,65) output(54,eq,65) output(100,eq,73) output(67,eq,73) output(65,eq,63) output(86,eq,63) output(52,eq,63) output(54,eq,52) output(50,eq,52) output(86,eq,98) output(52,eq,98) output(100,eq,98) output(67,eq,98) output(54,eq,98) output(50,eq,98) output(100,eq,63) output(67,eq,63) output(54,eq,63) output(50,eq,63) output(54,eq,73) output(50,eq,73) output(50,eq,65) output(86,eq,33) output(52,eq,33) output(100,eq,33) output(67,eq,33) output(54,eq,33) output(100,eq,25) output(67,eq,25) output(54,eq,25) output(50,eq,25) output(54,eq,95) output(50,eq,95) output(50,eq,33)
Optimization: 78 0
Answer: 2
preference(1,(1,13),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(50,better,67) output(54,better,67) output(67,worse,100) output(67,worse,52) output(67,worse,95) output(67,worse,65) output(67,worse,73) output(67,worse,98) output(67,worse,63) output(67,worse,33) output(67,worse,25) output(79,eq,88) output(49,eq,28) output(65,eq,95) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(88,eq,49) output(86,eq,65) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(100,eq,52) output(73,eq,98) output(65,eq,98) output(95,eq,63) output(73,eq,63) output(86,eq,73) output(52,eq,73) output(100,eq,65) output(54,eq,100) output(79,eq,49) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(73,eq,25) output(86,eq,95) output(52,eq,95) output(88,eq,28) output(79,eq,28) output(100,eq,95) output(65,eq,25) output(86,eq,25) output(52,eq,25) output(95,eq,33) output(73,eq,33) output(65,eq,33) output(50,eq,100) output(54,eq,65) output(100,eq,73) output(65,eq,63) output(86,eq,63) output(52,eq,63) output(54,eq,52) output(50,eq,52) output(86,eq,98) output(52,eq,98) output(100,eq,98) output(54,eq,98) output(50,eq,98) output(100,eq,63) output(54,eq,63) output(50,eq,63) output(54,eq,73) output(50,eq,73) output(50,eq,65) output(86,eq,33) output(52,eq,33) output(100,eq,33) output(54,eq,33) output(100,eq,25) output(54,eq,25) output(50,eq,25) output(54,eq,95) output(50,eq,95) output(50,eq,33)
Optimization: 76 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(67,better,25) output(63,better,25) output(98,better,25) output(100,better,25) output(52,better,25) output(65,better,25) output(73,better,25) output(86,better,25) output(95,better,25) output(50,worse,67) output(50,worse,100) output(50,worse,52) output(50,worse,98) output(50,worse,63) output(50,worse,73) output(50,worse,65) output(50,worse,95) output(50,worse,33) output(54,worse,67) output(54,worse,100) output(54,worse,65) output(54,worse,52) output(54,worse,98) output(54,worse,63) output(54,worse,73) output(54,worse,33) output(54,worse,95) output(79,worse,88) output(79,worse,49) output(79,worse,28) output(25,worse,33) output(49,eq,28) output(65,eq,95) output(95,eq,98) output(88,eq,49) output(86,eq,65) output(67,eq,100) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(50,eq,54) output(100,eq,52) output(73,eq,98) output(65,eq,98) output(67,eq,52) output(95,eq,63) output(73,eq,63) output(86,eq,73) output(52,eq,73) output(100,eq,65) output(98,eq,33) output(63,eq,33) output(86,eq,95) output(52,eq,95) output(88,eq,28) output(100,eq,95) output(67,eq,95) output(95,eq,33) output(73,eq,33) output(65,eq,33) output(67,eq,65) output(100,eq,73) output(67,eq,73) output(65,eq,63) output(86,eq,63) output(52,eq,63) output(86,eq,98) output(52,eq,98) output(100,eq,98) output(67,eq,98) output(100,eq,63) output(67,eq,63) output(86,eq,33) output(52,eq,33) output(100,eq,33) output(67,eq,33) output(54,eq,25) output(50,eq,25)
Optimization: 69 11
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasCost(4))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(50,better,54) output(50,better,100) output(50,better,33) output(67,better,100) output(67,better,33) output(63,better,33) output(98,better,33) output(25,better,33) output(52,better,33) output(65,better,33) output(73,better,33) output(86,better,33) output(95,better,33) output(54,worse,67) output(54,worse,65) output(54,worse,52) output(54,worse,98) output(54,worse,63) output(54,worse,73) output(54,worse,25) output(54,worse,95) output(79,worse,88) output(79,worse,49) output(79,worse,28) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,98) output(100,worse,63) output(100,worse,25) output(49,eq,28) output(65,eq,95) output(95,eq,98) output(98,eq,25) output(88,eq,49) output(86,eq,65) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(73,eq,98) output(65,eq,98) output(67,eq,52) output(95,eq,63) output(73,eq,63) output(86,eq,73) output(52,eq,73) output(54,eq,100) output(50,eq,67) output(95,eq,25) output(73,eq,25) output(86,eq,95) output(52,eq,95) output(88,eq,28) output(67,eq,95) output(65,eq,25) output(86,eq,25) output(52,eq,25) output(67,eq,65) output(67,eq,73) output(65,eq,63) output(86,eq,63) output(52,eq,63) output(50,eq,52) output(86,eq,98) output(52,eq,98) output(67,eq,98) output(50,eq,98) output(67,eq,63) output(50,eq,63) output(50,eq,73) output(50,eq,65) output(100,eq,33) output(54,eq,33) output(67,eq,25) output(50,eq,25) output(50,eq,95)
Optimization: 65 11
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(50,better,54) output(50,better,98) output(50,better,63) output(50,better,65) output(50,better,33) output(67,better,65) output(67,better,98) output(67,better,63) output(67,better,33) output(88,better,49) output(88,better,28) output(100,better,65) output(100,better,98) output(100,better,63) output(100,better,33) output(25,better,33) output(52,better,65) output(52,better,63) output(52,better,98) output(52,better,33) output(73,better,98) output(73,better,63) output(73,better,33) output(86,better,65) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,33) output(54,worse,67) output(54,worse,100) output(54,worse,52) output(54,worse,73) output(54,worse,25) output(54,worse,95) output(63,worse,25) output(79,worse,88) output(98,worse,25) output(65,worse,95) output(65,worse,73) output(65,worse,25) output(49,eq,28) output(67,eq,100) output(98,eq,63) output(100,eq,52) output(65,eq,98) output(67,eq,52) output(86,eq,73) output(52,eq,73) output(50,eq,67) output(79,eq,49) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(73,eq,25) output(86,eq,95) output(52,eq,95) output(79,eq,28) output(100,eq,95) output(67,eq,95) output(86,eq,25) output(52,eq,25) output(65,eq,33) output(50,eq,100) output(54,eq,65) output(100,eq,73) output(67,eq,73) output(65,eq,63) output(50,eq,52) output(54,eq,98) output(54,eq,63) output(50,eq,73) output(54,eq,33) output(100,eq,25) output(67,eq,25) output(50,eq,25) output(50,eq,95)
Optimization: 48 11
Answer: 6
preference(1,(1,3),1,for(atom(hasIngredient(4))),8) preference(1,(1,7),1,for(atom(hasCost(4))),8) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(50,better,67) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,25) output(50,better,95) output(50,better,33) output(54,better,67) output(54,better,100) output(54,better,98) output(54,better,63) output(54,better,33) output(54,better,25) output(54,better,95) output(49,better,28) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,95) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(67,worse,52) output(67,worse,65) output(67,worse,73) output(88,worse,49) output(79,worse,49) output(100,worse,52) output(100,worse,65) output(100,worse,73) output(79,eq,88) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(86,eq,65) output(67,eq,100) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(95,eq,63) output(86,eq,73) output(52,eq,73) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(88,eq,28) output(79,eq,28) output(100,eq,95) output(67,eq,95) output(95,eq,33) output(54,eq,65) output(54,eq,52) output(50,eq,52) output(100,eq,98) output(67,eq,98) output(100,eq,63) output(67,eq,63) output(54,eq,73) output(50,eq,73) output(50,eq,65) output(100,eq,33) output(67,eq,33) output(100,eq,25) output(67,eq,25)
Optimization: 44 6
Answer: 7
preference(1,(1,10),1,for(atom(hasIngredient(4))),8) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(50,better,67) output(50,better,98) output(50,better,63) output(50,better,65) output(50,better,25) output(50,better,33) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,65) output(54,better,98) output(54,better,63) output(54,better,33) output(54,better,25) output(100,better,65) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(52,better,65) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,65) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(67,worse,100) output(67,worse,52) output(67,worse,95) output(67,worse,73) output(79,worse,88) output(65,worse,95) output(65,worse,73) output(49,eq,28) output(98,eq,25) output(25,eq,33) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(100,eq,52) output(65,eq,98) output(86,eq,73) output(52,eq,73) output(54,eq,100) output(79,eq,49) output(98,eq,33) output(63,eq,33) output(86,eq,95) output(52,eq,95) output(79,eq,28) output(100,eq,95) output(65,eq,25) output(65,eq,33) output(50,eq,100) output(67,eq,65) output(100,eq,73) output(65,eq,63) output(54,eq,52) output(50,eq,52) output(67,eq,98) output(67,eq,63) output(54,eq,73) output(50,eq,73) output(67,eq,33) output(67,eq,25) output(54,eq,95) output(50,eq,95)
Optimization: 41 3
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(1))),8) preference(1,(1,2),1,for(atom(hasCategory(4))),8) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),6) preference(1,(1,5),1,for(atom(hasCost(3))),6) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasCategory(3))),6) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasIngredient(10))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(50,better,100) output(50,better,98) output(50,better,63) output(50,better,25) output(67,better,100) output(67,better,98) output(67,better,63) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(63,better,25) output(98,better,25) output(100,better,25) output(52,better,25) output(52,better,63) output(52,better,98) output(65,better,98) output(65,better,25) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(86,better,25) output(86,better,63) output(86,better,98) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(50,worse,54) output(50,worse,95) output(67,worse,95) output(54,worse,95) output(63,worse,33) output(79,worse,88) output(79,worse,49) output(79,worse,28) output(98,worse,33) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(100,worse,33) output(25,worse,33) output(49,worse,28) output(52,worse,95) output(65,worse,95) output(86,worse,95) output(86,eq,65) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(67,eq,52) output(86,eq,73) output(52,eq,73) output(50,eq,67) output(73,eq,33) output(65,eq,33) output(67,eq,65) output(67,eq,73) output(50,eq,52) output(100,eq,98) output(100,eq,63) output(50,eq,73) output(50,eq,65) output(86,eq,33) output(52,eq,33) output(67,eq,33) output(50,eq,33)
Optimization: 40 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasCost(4))),7) preference(1,(1,3),1,for(atom(hasCategory(3))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(10))),7) preference(1,(1,8),1,for(atom(hasCost(3))),8) preference(1,(1,9),1,for(atom(hasCategory(2))),7) preference(1,(1,10),1,for(atom(hasDifficulty(3))),7) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),7) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),8) preference(1,less(weight)) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(79,better,88) output(79,better,49) output(79,better,28) output(49,better,28) output(65,better,95) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(88,worse,49) output(100,worse,65) output(100,worse,73) output(52,worse,65) output(52,worse,73) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(86,eq,65) output(54,eq,67) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(100,eq,52) output(95,eq,63) output(86,eq,73) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(52,eq,95) output(88,eq,28) output(100,eq,95) output(52,eq,25) output(95,eq,33) output(52,eq,63) output(52,eq,98) output(100,eq,98) output(100,eq,63) output(52,eq,33) output(100,eq,33) output(100,eq,25)
Optimization: 31 14
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),8) preference(1,(1,4),1,for(atom(hasCost(4))),7) preference(1,(1,5),1,for(atom(hasPrep(4))),8) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasDifficulty(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),7) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(79,better,88) output(79,better,49) output(79,better,28) output(49,better,28) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,95) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(88,worse,49) output(100,worse,52) output(100,worse,65) output(100,worse,73) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(86,eq,65) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(95,eq,63) output(86,eq,73) output(52,eq,73) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(88,eq,28) output(100,eq,95) output(95,eq,33) output(100,eq,98) output(100,eq,63) output(100,eq,33) output(100,eq,25)
Optimization: 26 12
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),8) preference(1,(1,4),1,for(atom(hasCost(4))),7) preference(1,(1,5),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasDifficulty(3))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasIngredient(10))),7) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasIngredient(11))),7) preference(1,(1,12),1,for(atom(hasIngredient(4))),7) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(79,better,49) output(79,better,28) output(49,better,28) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,95) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(100,worse,52) output(100,worse,65) output(100,worse,73) output(79,eq,88) output(95,eq,98) output(98,eq,25) output(25,eq,33) output(86,eq,65) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(95,eq,63) output(86,eq,73) output(52,eq,73) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(100,eq,95) output(95,eq,33) output(100,eq,98) output(100,eq,63) output(100,eq,33) output(100,eq,25)
Optimization: 25 12
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,3),1,for(atom(hasCategory(4))),8) preference(1,(1,4),1,for(atom(hasPrep(4))),8) preference(1,(1,5),1,for(atom(hasIngredient(12))),8) preference(1,(1,7),1,for(atom(hasIngredient(4))),7) preference(1,(1,8),1,for(atom(hasCost(4))),7) preference(1,(1,9),1,for(atom(hasIngredient(10))),7) preference(1,(1,10),1,for(atom(hasDifficulty(3))),7) preference(1,(1,11),1,for(atom(hasIngredient(11))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),8) preference(1,(1,14),1,for(atom(hasCategory(3))),7) preference(1,less(weight)) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(79,better,49) output(79,better,28) output(49,better,28) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(79,worse,88) output(100,worse,52) output(100,worse,65) output(100,worse,95) output(100,worse,73) output(65,eq,95) output(98,eq,25) output(25,eq,33) output(86,eq,65) output(52,eq,65) output(65,eq,73) output(98,eq,63) output(63,eq,25) output(50,eq,54) output(86,eq,73) output(52,eq,73) output(98,eq,33) output(63,eq,33) output(86,eq,95) output(52,eq,95) output(100,eq,98) output(100,eq,63) output(100,eq,33) output(100,eq,25)
Optimization: 24 11
Answer: 13
preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),6) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCategory(4))),4) preference(1,(1,6),1,for(atom(hasIngredient(12))),7) preference(1,(1,7),1,for(atom(hasCost(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasIngredient(10))),7) preference(1,less(weight)) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(63,better,25) output(63,better,33) output(79,better,49) output(79,better,28) output(98,better,25) output(100,better,65) output(100,better,73) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(52,better,65) output(52,better,73) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(73,better,25) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(50,worse,54) output(50,worse,67) output(50,worse,100) output(50,worse,52) output(50,worse,95) output(67,worse,95) output(54,worse,67) output(54,worse,95) output(98,worse,63) output(100,worse,95) output(25,worse,33) output(49,worse,28) output(52,worse,95) output(65,worse,95) output(65,worse,63) output(73,worse,63) output(86,worse,95) output(79,eq,88) output(100,eq,52) output(73,eq,98) output(98,eq,33) output(73,eq,33)
Optimization: 22 10
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(3))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasCategory(4))),5) preference(1,(1,10),1,for(atom(hasIngredient(12))),8) preference(1,(1,11),1,for(atom(hasCost(3))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(79,better,88) output(79,better,49) output(79,better,28) output(100,better,52) output(100,better,65) output(100,better,95) output(100,better,73) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(25,better,33) output(52,better,65) output(52,better,73) output(52,better,63) output(52,better,98) output(52,better,33) output(73,better,98) output(73,better,63) output(73,better,33) output(86,better,65) output(86,better,73) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,33) output(50,worse,54) output(50,worse,67) output(54,worse,67) output(63,worse,25) output(98,worse,25) output(49,worse,28) output(52,worse,95) output(52,worse,25) output(65,worse,95) output(65,worse,73) output(65,worse,25) output(73,worse,25) output(98,eq,63) output(65,eq,98) output(98,eq,33) output(63,eq,33) output(95,eq,25) output(65,eq,33) output(65,eq,63)
Optimization: 19 8
Answer: 15
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),1) preference(1,(1,5),1,for(atom(hasCategory(2))),3) preference(1,(1,6),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasCost(1))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasIngredient(9))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(63,better,25) output(63,better,33) output(79,better,49) output(79,better,28) output(98,better,25) output(98,better,33) output(100,better,65) output(100,better,73) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(25,better,33) output(49,better,28) output(52,better,65) output(52,better,73) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(86,better,65) output(86,better,73) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33) output(50,worse,54) output(50,worse,67) output(54,worse,67) output(79,worse,88) output(100,worse,52) output(100,worse,95) output(65,worse,95) output(73,worse,98) output(73,worse,63) output(73,worse,25) output(73,worse,33) output(98,eq,63) output(86,eq,95) output(52,eq,95)
Optimization: 14 14
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(4))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),8) preference(1,(1,3),1,for(atom(hasCategory(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasCost(3))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasIngredient(12))),7) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasIngredient(9))),1) preference(1,(1,11),1,for(atom(hasCost(4))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasCategory(4))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(63,better,25) output(63,better,33) output(79,better,88) output(79,better,49) output(79,better,28) output(98,better,25) output(98,better,63) output(98,better,33) output(100,better,52) output(100,better,65) output(100,better,95) output(100,better,73) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(25,better,33) output(49,better,28) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,95) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,65) output(86,better,73) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasIngredient(4))),1) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasDifficulty(3))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCategory(4))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasIngredient(12))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasCost(4))),2) preference(1,less(weight)) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(63,better,25) output(63,better,33) output(79,better,88) output(79,better,49) output(79,better,28) output(98,better,25) output(98,better,63) output(98,better,33) output(100,better,52) output(100,better,65) output(100,better,95) output(100,better,73) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(25,better,33) output(49,better,28) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,95) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,65) output(86,better,73) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33)
Optimization: 0 13
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCategory(4))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasIngredient(12))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasPrep(5))),8) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasCost(4))),2) preference(1,less(weight)) output(50,better,54) output(50,better,67) output(50,better,100) output(50,better,52) output(50,better,98) output(50,better,63) output(50,better,73) output(50,better,65) output(50,better,25) output(50,better,95) output(50,better,33) output(67,better,100) output(67,better,52) output(67,better,95) output(67,better,65) output(67,better,73) output(67,better,98) output(67,better,63) output(67,better,33) output(67,better,25) output(88,better,49) output(88,better,28) output(54,better,67) output(54,better,100) output(54,better,65) output(54,better,52) output(54,better,98) output(54,better,63) output(54,better,73) output(54,better,33) output(54,better,25) output(54,better,95) output(63,better,25) output(63,better,33) output(79,better,88) output(79,better,49) output(79,better,28) output(98,better,25) output(98,better,63) output(98,better,33) output(100,better,52) output(100,better,65) output(100,better,95) output(100,better,73) output(100,better,98) output(100,better,63) output(100,better,33) output(100,better,25) output(25,better,33) output(49,better,28) output(52,better,65) output(52,better,73) output(52,better,95) output(52,better,25) output(52,better,63) output(52,better,98) output(52,better,33) output(65,better,95) output(65,better,73) output(65,better,98) output(65,better,25) output(65,better,33) output(65,better,63) output(73,better,98) output(73,better,63) output(73,better,25) output(73,better,33) output(86,better,65) output(86,better,73) output(86,better,95) output(86,better,25) output(86,better,63) output(86,better,98) output(86,better,33) output(95,better,98) output(95,better,63) output(95,better,25) output(95,better,33)
Optimization: 0 12
Progression : 0 [ 3;12] (Error: 3)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.047 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 298.179s (Solving: 294.63s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1181.800s
Threads      : 4        (Winner: 4)

Choices      : 6460067  (Domain: 298937)
Conflicts    : 4492921  (Analyzed: 4492918)
Restarts     : 4734     (Average: 949.07 Last: 389341)
Model-Level  : 82.2    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 4554335  (Deleted: 4334600)
  Binary     : 284      (Ratio:   0.01%)
  Ternary    : 910      (Ratio:   0.02%)
  Conflict   : 4492918  (Average Length:  358.9 Ratio:  98.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 61417    (Average Length:   47.6 Ratio:   1.35%) 
  Distributed: 20619    (Ratio:   0.46% Average LBD: 3.71) 
  Integrated : 61857    (Ratio: 300.00% Unit: 172 Average Jumps: 3.90)
Backjumps    : 4492918  (Average:  1.34 Max: 1096 Sum: 6024550)
  Executed   : 4492917  (Average:  1.34 Max: 1096 Sum: 6024476 Ratio: 100.00%)
  Bounded    : 1        (Average: 74.00 Max:  74 Sum:     74 Ratio:   0.00%)

Rules        : 834196  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 18262   
Bodies       : 19387   
  Sum        : 156     
  Count      : 14      
Equivalences : 8580     (Atom=Atom: 793 Body=Body: 326 Other: 7461)
Tight        : Yes
Variables    : 17247    (Eliminated:    0 Frozen: 7923)
Constraints  : 852144   (Binary:  98.5% Ternary:   1.1% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(4)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(3)) ; 
  8 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(2)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(11)) ; 
  7 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(11)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCategory(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(4)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  1 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(4)) 
}.
