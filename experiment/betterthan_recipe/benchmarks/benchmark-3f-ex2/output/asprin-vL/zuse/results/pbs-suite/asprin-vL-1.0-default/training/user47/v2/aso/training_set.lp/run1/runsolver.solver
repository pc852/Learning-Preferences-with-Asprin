asprin_vL version 1.0
Reading from stdin
-:1244:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1269:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1350:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1624:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1801:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2002:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2006:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2006:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2012:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2111:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2137:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2257:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2313:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1161:1-16: info: no atoms over signature occur in program:
  output/3

-:1153:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1154:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1155:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1156:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1186:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(73,worse,86) output(19,worse,86) output(65,worse,86) output(100,worse,86) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(100,eq,73) output(100,eq,52) output(19,eq,54) output(65,eq,54) output(100,eq,54)
Optimization: 25 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(52,better,54) output(73,better,54) output(65,better,54) output(19,worse,73) output(73,worse,86) output(19,worse,52) output(19,worse,86) output(65,worse,86) output(100,worse,73) output(100,worse,86) output(100,worse,52) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(65,eq,52) output(19,eq,54) output(100,eq,54)
Optimization: 22 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(100,better,19) output(52,better,54) output(73,better,54) output(65,better,54) output(100,better,54) output(19,worse,73) output(19,worse,52) output(19,worse,86) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(65,eq,52) output(100,eq,73) output(100,eq,52) output(19,eq,54)
Optimization: 20 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(19,better,73) output(19,better,52) output(100,better,73) output(100,better,52) output(19,better,54) output(100,better,54) output(73,worse,86) output(65,worse,86) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(65,eq,52) output(65,eq,54)
Optimization: 19 6
Answer: 5
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(19,better,73) output(50,better,46) output(65,better,73) output(19,better,52) output(65,better,52) output(19,better,54) output(65,better,54) output(100,worse,19) output(73,worse,86) output(19,worse,86) output(65,worse,86) output(100,worse,86) output(100,eq,63) output(73,eq,52) output(52,eq,54) output(73,eq,54) output(100,eq,73) output(100,eq,52) output(100,eq,54)
Optimization: 18 6
Answer: 6
preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(100,better,19) output(73,better,86) output(68,better,50) output(52,better,54) output(98,better,50) output(73,better,54) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(100,better,54) output(22,worse,28) output(100,worse,63) output(50,eq,46) output(73,eq,52) output(25,eq,67)
Optimization: 10 6
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(100,better,19) output(73,better,86) output(68,better,50) output(100,better,63) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(65,better,52) output(68,better,46) output(19,better,86) output(65,better,86) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(19,worse,73) output(98,worse,50) output(98,worse,46) output(50,eq,46) output(100,eq,73)
Optimization: 8 6
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(100,better,19) output(73,better,86) output(68,better,50) output(100,better,63) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(65,better,52) output(68,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(19,worse,73) output(98,worse,50) output(98,worse,46) output(50,eq,46)
Optimization: 7 6
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(100,better,19) output(73,better,86) output(68,better,50) output(100,better,63) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(19,eq,73) output(50,eq,46)
Optimization: 6 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(100,better,63) output(65,better,73) output(52,better,54) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(50,eq,46) output(73,eq,52)
Optimization: 5 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(100,better,19) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(22,worse,28) output(19,eq,73)
Optimization: 4 6
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(98,worse,50) output(19,eq,73)
Optimization: 3 6
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(98,worse,50)
Optimization: 2 6
Answer: 14
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54) output(98,worse,50)
Optimization: 1 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(98,better,50) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(98,better,50) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54)
Optimization: 0 5
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(98,better,50) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54)
Optimization: 0 4
Progression : 0 [2;4] (Error: 1)
Answer: 18
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(22,better,28) output(100,better,19) output(19,better,73) output(73,better,86) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(98,better,50) output(25,better,67) output(73,better,54) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(19,better,86) output(65,better,86) output(100,better,73) output(100,better,86) output(100,better,52) output(19,better,54) output(65,better,54) output(100,better,54)
Optimization: 0 2
OPTIMUM FOUND

Models       : 18
  Optimum    : yes
Optimization : 0 2
Calls        : 1
Time         : 8.229s (Solving: 1.90s 1st Model: 0.78s Unsat: 0.01s)
CPU Time     : 12.616s
Threads      : 4        (Winner: 1)

Choices      : 54155    (Domain: 560)
Conflicts    : 3354     (Analyzed: 3351)
Restarts     : 11       (Average: 304.64 Last: 163)
Model-Level  : 979.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6678     (Deleted: 0)
  Binary     : 932      (Ratio:  13.96%)
  Ternary    : 1360     (Ratio:  20.37%)
  Conflict   : 3351     (Average Length:  112.7 Ratio:  50.18%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 3327     (Average Length:   21.6 Ratio:  49.82%) 
  Distributed: 1110     (Ratio:  33.12% Average LBD: 2.83) 
  Integrated : 3327     (Ratio: 299.73% Unit: 97 Average Jumps: 107.90)
Backjumps    : 3351     (Average: 10.72 Max: 830 Sum:  35913)
  Executed   : 3338     (Average: 10.66 Max: 830 Sum:  35707 Ratio:  99.43%)
  Bounded    : 13       (Average: 15.85 Max:  24 Sum:    206 Ratio:   0.57%)

Rules        : 2432187 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 410000  
Bodies       : 520029  
  Count      : 924     
Equivalences : 1238054  (Atom=Atom: 363392 Body=Body: 391724 Other: 482938)
Tight        : Yes
Variables    : 89903    (Eliminated:    0 Frozen: 24779)
Constraints  : 2192624  (Binary:  96.0% Ternary:   3.8% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCost(5)) >> not atom(hasCategory(1))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(6)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> not atom(hasPrep(0))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(5)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(6)) >> not atom(hasIngredient(12))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(8)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasDifficulty(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(11)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(3)) || not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(11)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(3)) || not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> not atom(hasCategory(3))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(12)) >> atom(hasPrepTime(3)) || not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> atom(hasCost(5)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> not atom(hasPrep(4))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(6))  || not atom(hasCost(3))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  not atom(hasCost(2))  >> atom(hasIngredient(10)) >> atom(hasPrepTime(3)) || not atom(hasCategory(4))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(6))  || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(2))  >> atom(hasPrepTime(3)) || not atom(hasIngredient(7))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(6))  || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(2))  >> atom(hasPrepTime(3)) || not atom(hasIngredient(7))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(6))  || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(2))  >> atom(hasPrepTime(3)) || not atom(hasIngredient(7))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(7)) >> not atom(hasCategory(3))  || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> not atom(hasPrep(6))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(1))  >> not atom(hasIngredient(12))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> not atom(hasPrep(6))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) >> atom(hasDifficulty(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(1))  >> not atom(hasIngredient(12))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(12))  || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasCost(3)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(0)) >> not atom(hasPrep(6))  || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(1))  >> not atom(hasIngredient(12))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasCategory(3)) >> not atom(hasIngredient(12))  || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> atom(hasCategory(4)) >> not atom(hasIngredient(7))  || not atom(hasCost(3))  
}.
