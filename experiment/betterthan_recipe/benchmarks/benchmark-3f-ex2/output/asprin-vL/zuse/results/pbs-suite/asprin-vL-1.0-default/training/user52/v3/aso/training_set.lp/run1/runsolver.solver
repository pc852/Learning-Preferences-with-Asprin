asprin_vL version 1.0
Reading from stdin
-:1253:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1278:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1359:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1633:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1810:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2011:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2015:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2015:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2021:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2120:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2146:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2266:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2300:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2322:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1170:1-16: info: no atoms over signature occur in program:
  output/3

-:1162:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1163:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1164:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1165:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1195:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasDifficulty(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(32,better,17) output(10,better,39) output(66,better,32) output(66,better,17) output(10,better,18) output(66,better,69) output(71,worse,7) output(30,worse,32) output(17,worse,69) output(69,worse,61) output(50,worse,58) output(84,worse,66) output(84,worse,32) output(67,worse,66) output(21,worse,58) output(17,worse,61) output(30,worse,69) output(84,worse,69) output(32,worse,61) output(30,worse,61) output(67,worse,32) output(84,worse,61) output(67,worse,61) output(67,worse,69) output(84,eq,30) output(21,eq,50) output(67,eq,84) output(32,eq,69) output(30,eq,17) output(67,eq,30) output(84,eq,17) output(67,eq,17) output(66,eq,61)
Optimization: 28 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasDifficulty(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(84,better,30) output(32,better,17) output(10,better,39) output(66,better,17) output(67,better,30) output(10,better,18) output(84,better,17) output(67,better,17) output(30,worse,32) output(17,worse,69) output(21,worse,50) output(21,worse,58) output(17,worse,61) output(30,worse,69) output(30,worse,61) output(71,eq,7) output(69,eq,61) output(67,eq,84) output(66,eq,32) output(32,eq,69) output(30,eq,17) output(66,eq,69) output(32,eq,61) output(66,eq,61)
Optimization: 26 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasDifficulty(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(39,better,18) output(32,better,17) output(69,better,61) output(21,better,50) output(66,better,32) output(30,better,17) output(66,better,17) output(10,better,18) output(66,better,61) output(84,worse,30) output(17,worse,69) output(50,worse,58) output(84,worse,66) output(84,worse,32) output(67,worse,66) output(21,worse,58) output(17,worse,61) output(32,worse,69) output(67,worse,30) output(30,worse,69) output(84,worse,69) output(67,worse,32) output(84,worse,61) output(67,worse,61) output(67,worse,69) output(71,eq,7) output(10,eq,39) output(67,eq,84) output(84,eq,17) output(67,eq,17) output(66,eq,69) output(32,eq,61)
Optimization: 25 6
Answer: 4
preference(1,(1,1),0,for(atom(hasPrep(3))),()) preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,aso) output(30,better,32) output(17,better,69) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(30,better,69) output(84,better,69) output(30,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,worse,17) output(66,worse,17) output(71,eq,7) output(39,eq,18) output(84,eq,30) output(69,eq,61) output(10,eq,39) output(21,eq,50) output(67,eq,84) output(66,eq,32) output(32,eq,69) output(30,eq,17) output(67,eq,30) output(10,eq,18) output(84,eq,17) output(67,eq,17) output(66,eq,69) output(32,eq,61) output(66,eq,61)
Optimization: 19 3
Answer: 5
preference(1,(1,1),0,for(atom(hasPrep(3))),()) preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,aso) output(30,better,32) output(17,better,69) output(10,better,39) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(10,better,18) output(30,better,69) output(84,better,69) output(30,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,worse,17) output(66,worse,17) output(71,eq,7) output(39,eq,18) output(84,eq,30) output(69,eq,61) output(21,eq,50) output(67,eq,84) output(66,eq,32) output(32,eq,69) output(30,eq,17) output(67,eq,30) output(84,eq,17) output(67,eq,17) output(66,eq,69) output(32,eq,61) output(66,eq,61)
Optimization: 17 3
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),0,for(atom(hasIngredient(7))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(39,better,18) output(84,better,30) output(30,better,32) output(50,better,58) output(67,better,84) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(67,better,30) output(67,better,17) output(30,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,worse,17) output(10,worse,39) output(32,worse,69) output(32,worse,61) output(21,eq,50) output(10,eq,18)
Optimization: 16 6
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),0,for(atom(hasIngredient(7))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(39,better,18) output(84,better,30) output(30,better,32) output(50,better,58) output(67,better,84) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(67,better,30) output(10,better,18) output(67,better,17) output(30,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,worse,17) output(10,worse,39) output(32,worse,69) output(32,worse,61) output(21,eq,50)
Optimization: 15 6
Answer: 8
preference(1,(1,1),0,for(atom(hasPrep(3))),()) preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasCategory(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,aso) output(39,better,18) output(30,better,32) output(17,better,69) output(69,better,61) output(10,better,39) output(50,better,58) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(10,better,18) output(30,better,69) output(84,better,69) output(30,better,61) output(66,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,worse,17) output(32,worse,69) output(66,worse,17) output(71,eq,7) output(84,eq,30) output(21,eq,50) output(67,eq,84) output(30,eq,17) output(67,eq,30) output(84,eq,17) output(67,eq,17) output(66,eq,69) output(32,eq,61)
Optimization: 13 3
Answer: 9
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(7))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrep(3))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(30,better,32) output(32,better,17) output(69,better,61) output(10,better,39) output(50,better,58) output(67,better,84) output(66,better,32) output(21,better,58) output(30,better,17) output(66,better,17) output(67,better,30) output(10,better,18) output(67,better,17) output(66,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(67,better,61) output(67,better,69) output(17,worse,69) output(32,worse,69) output(21,eq,50) output(30,eq,69)
Optimization: 12 5
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(7))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,1),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(30,better,32) output(32,better,17) output(69,better,61) output(10,better,39) output(21,better,50) output(50,better,58) output(67,better,84) output(66,better,32) output(21,better,58) output(30,better,17) output(66,better,17) output(10,better,18) output(67,better,17) output(30,better,69) output(66,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(67,better,61) output(67,better,69) output(84,worse,30) output(17,worse,69) output(84,worse,66) output(84,worse,32) output(84,worse,69) output(32,eq,69) output(67,eq,30)
Optimization: 11 5
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,6),2,for(atom(hasPrep(7))),()) preference(1,(1,2),3,for(atom(hasCategory(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(30,better,32) output(17,better,69) output(69,better,61) output(10,better,39) output(21,better,50) output(67,better,84) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(67,better,30) output(10,better,18) output(67,better,17) output(30,better,69) output(66,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(67,better,61) output(67,better,69)
Optimization: 10 6
Answer: 12
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(atom(hasPrepTime(2))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(atom(hasIngredient(7))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(84,better,30) output(32,better,17) output(17,better,69) output(10,better,39) output(21,better,50) output(50,better,58) output(84,better,66) output(84,better,32) output(67,better,66) output(21,better,58) output(32,better,69) output(30,better,17) output(67,better,30) output(10,better,18) output(84,better,17) output(67,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(69,worse,61) output(66,worse,32) output(17,worse,61) output(66,worse,61) output(30,eq,32) output(67,eq,84) output(66,eq,17) output(32,eq,61) output(30,eq,61)
Optimization: 9 6
Progression : [1;9] (Error: 8)
Answer: 13
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(7))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,3),2,for(atom(hasCategory(5))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,1),3,for(atom(hasCategory(3))),()) preference(1,(1,3),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(71,better,7) output(84,better,30) output(30,better,32) output(17,better,69) output(69,better,61) output(10,better,39) output(21,better,50) output(67,better,84) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(67,better,30) output(10,better,18) output(84,better,17) output(67,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,eq,17)
Optimization: 3 6
Answer: 14
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,1),3,for(atom(hasCategory(3))),()) preference(1,aso) output(71,better,7) output(84,better,30) output(30,better,32) output(32,better,17) output(17,better,69) output(69,better,61) output(10,better,39) output(21,better,50) output(50,better,58) output(67,better,84) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(67,better,30) output(10,better,18) output(84,better,17) output(67,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasCategory(1))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,2),3,for(atom(hasCategory(3))),()) preference(1,aso) output(71,better,7) output(84,better,30) output(30,better,32) output(32,better,17) output(17,better,69) output(69,better,61) output(10,better,39) output(21,better,50) output(50,better,58) output(67,better,84) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(67,better,30) output(10,better,18) output(84,better,17) output(67,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69)
Optimization: 1 5
Progression : 1 [2;5] (Error: 1.5)
Answer: 16
preference(1,(1,2),0,for(atom(hasIngredient(12))),()) preference(1,(1,3),0,for(atom(hasPrepTime(2))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasCategory(3))),()) preference(1,aso) output(71,better,7) output(39,better,18) output(84,better,30) output(30,better,32) output(17,better,69) output(69,better,61) output(10,better,39) output(21,better,50) output(50,better,58) output(67,better,84) output(84,better,66) output(66,better,32) output(84,better,32) output(67,better,66) output(21,better,58) output(17,better,61) output(32,better,69) output(30,better,17) output(66,better,17) output(67,better,30) output(10,better,18) output(84,better,17) output(67,better,17) output(30,better,69) output(66,better,69) output(84,better,69) output(32,better,61) output(30,better,61) output(66,better,61) output(67,better,32) output(84,better,61) output(67,better,61) output(67,better,69) output(32,eq,17)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 23.060s (Solving: 15.63s 1st Model: 0.46s Unsat: 11.57s)
CPU Time     : 69.703s
Threads      : 4        (Winner: 1)

Choices      : 211306   (Domain: 3571)
Conflicts    : 42351    (Analyzed: 42345)
Restarts     : 68       (Average: 622.72 Last: 4297)
Model-Level  : 542.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 68309    (Deleted: 16571)
  Binary     : 2968     (Ratio:   4.34%)
  Ternary    : 12007    (Ratio:  17.58%)
  Conflict   : 42345    (Average Length:  163.0 Ratio:  61.99%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 25964    (Average Length:   45.3 Ratio:  38.01%) 
  Distributed: 8713     (Ratio:  20.58% Average LBD: 3.03) 
  Integrated : 26139    (Ratio: 300.00% Unit: 305 Average Jumps: 61.33)
Backjumps    : 42345    (Average:  4.25 Max: 795 Sum: 179929)
  Executed   : 42326    (Average:  4.24 Max: 795 Sum: 179564 Ratio:  99.80%)
  Bounded    : 19       (Average: 19.21 Max:  32 Sum:    365 Ratio:   0.20%)

Rules        : 3282564 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 546380  
Bodies       : 674991  
  Count      : 1248    
Equivalences : 1656071  (Atom=Atom: 488459 Body=Body: 529961 Other: 637651)
Tight        : Yes
Variables    : 97307    (Eliminated:    0 Frozen: 32075)
Constraints  : 2897192  (Binary:  96.7% Ternary:   3.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasCost(5)) >> not atom(hasPrep(0))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasCost(5)) >> not atom(hasCategory(1))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(6)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasCost(5)) >> not atom(hasPrep(1))  ; 
  atom(hasPrep(3)) >> atom(hasCategory(2)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(6)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasDifficulty(1)) >> not atom(hasDifficulty(3))  || atom(hasPrep(3)) ; 
  atom(hasCategory(4)) >> atom(hasIngredient(2)) || atom(hasDifficulty(3)) ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(12)) || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasDifficulty(1)) >> not atom(hasDifficulty(3))  || atom(hasPrep(3)) ; 
  atom(hasCategory(4)) >> atom(hasIngredient(1)) || atom(hasDifficulty(3)) ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(12)) || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(3)) >> atom(hasPrep(1)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(4))  || not atom(hasPrep(4))  ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(0)) >> atom(hasIngredient(12)) || atom(hasIngredient(7)) ; 
  atom(hasCategory(5)) >> atom(hasPrepTime(3)) >> atom(hasCost(3)) || not atom(hasIngredient(3))  ; 
  not atom(hasIngredient(8))  >> not atom(hasDifficulty(3))  >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(3)) >> atom(hasPrep(1)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(4))  || not atom(hasPrep(4))  ; 
  atom(hasPrepTime(3)) >> atom(hasPrep(0)) >> atom(hasIngredient(12)) || atom(hasIngredient(7)) ; 
  atom(hasCategory(5)) >> atom(hasPrepTime(3)) >> atom(hasCost(3)) || not atom(hasIngredient(3))  ; 
  not atom(hasIngredient(8))  >> not atom(hasDifficulty(3))  >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(4)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasDifficulty(1)) >> not atom(hasDifficulty(3))  || atom(hasPrep(3)) ; 
  atom(hasCategory(4)) >> atom(hasIngredient(5)) || atom(hasDifficulty(3)) ; 
  not atom(hasIngredient(12))  >> atom(hasPrep(1)) >> not atom(hasIngredient(1))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasPrep(1)) >> not atom(hasCategory(1))  || atom(hasPrepTime(2)) ; 
  atom(hasIngredient(7)) >> atom(hasPrep(3)) || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasIngredient(8))  ; 
  not atom(hasIngredient(9))  >> not atom(hasIngredient(6))  || atom(hasIngredient(7)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) || atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(7)) >> atom(hasIngredient(12)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(7)) >> atom(hasCost(1)) || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasIngredient(8))  ; 
  not atom(hasIngredient(9))  >> not atom(hasCost(5))  || atom(hasIngredient(7)) ; 
  atom(hasPrep(4)) >> atom(hasCost(1)) || atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(12))  >> not atom(hasIngredient(8))  >> not atom(hasDifficulty(3))  || not atom(hasIngredient(9))  ; 
  not atom(hasDifficulty(1))  >> atom(hasCategory(5)) >> atom(hasCategory(3)) || not atom(hasIngredient(8))  ; 
  not atom(hasIngredient(7))  >> atom(hasCost(4)) >> atom(hasDifficulty(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(7)) >> not atom(hasIngredient(4))  || atom(hasPrep(2)) ; 
  atom(hasCategory(1)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || atom(hasPrepTime(2)) ; 
  atom(hasCategory(5)) >> atom(hasPrep(7)) >> atom(hasPrepTime(3)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(0))  || atom(hasIngredient(7)) ; 
  atom(hasCategory(1)) >> not atom(hasIngredient(11))  || atom(hasPrepTime(2)) ; 
  not atom(hasPrep(4))  >> not atom(hasDifficulty(3))  || not atom(hasPrep(1))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(7)) || not atom(hasCost(3))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(11))  >> atom(hasCost(2)) || atom(hasPrep(6)) ; 
  not atom(hasPrep(1))  >> atom(hasPrep(4)) >> not atom(hasCategory(3))  || atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasCategory(3)) || atom(hasPrepTime(2)) ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasCategory(1))  ; 
  atom(hasIngredient(7)) >> atom(hasCategory(5)) >> atom(hasPrepTime(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(4)) >> not atom(hasPrep(1))  || not atom(hasPrep(5))  ; 
  atom(hasCost(4)) >> atom(hasCost(1)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(5)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(4)) || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasCategory(3)) || atom(hasPrepTime(2)) ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasCategory(1))  ; 
  atom(hasCategory(1)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasCategory(4))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(4)) >> not atom(hasPrep(1))  || not atom(hasPrep(5))  ; 
  atom(hasCost(4)) >> atom(hasCost(1)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(5)) >> not atom(hasPrepTime(2))  >> not atom(hasIngredient(7))  || atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(12))  >> atom(hasPrep(4)) >> not atom(hasPrep(1))  || not atom(hasCategory(4))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(7)) >> atom(hasCategory(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasCategory(1)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasCategory(4))  ; 
  atom(hasCategory(1)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(4)) >> atom(hasCost(1)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || atom(hasIngredient(12)) ; 
  atom(hasCategory(1)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || atom(hasPrepTime(2)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(7)) >> atom(hasCategory(3)) || not atom(hasCost(1))  ; 
  not atom(hasPrepTime(2))  >> atom(hasIngredient(10)) >> not atom(hasCategory(1))  
}.
