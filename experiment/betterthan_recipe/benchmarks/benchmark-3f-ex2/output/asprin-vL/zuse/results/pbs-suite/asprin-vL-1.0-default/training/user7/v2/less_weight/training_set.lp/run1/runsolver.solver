asprin_vL version 1.0
Reading from stdin
-:1241:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1251:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1266:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1347:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1608:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1621:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1798:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1927:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1999:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2003:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2009:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2108:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2134:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2254:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2288:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2310:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1158:1-16: info: no atoms over signature occur in program:
  output/3

-:1150:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1151:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(90,eq,42) output(42,eq,78) output(51,eq,18) output(18,eq,72) output(72,eq,31) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(41,eq,37) output(32,eq,72) output(72,eq,92) output(18,eq,92) output(32,eq,92) output(76,eq,37) output(18,eq,41) output(51,eq,76) output(4,eq,76) output(31,eq,79) output(72,eq,23) output(18,eq,31) output(32,eq,31) output(51,eq,72) output(4,eq,72) output(90,eq,78) output(51,eq,31) output(4,eq,31) output(18,eq,23) output(32,eq,23) output(51,eq,23) output(4,eq,23) output(72,eq,79) output(18,eq,79) output(32,eq,79) output(51,eq,41) output(4,eq,41) output(18,eq,37) output(51,eq,37) output(4,eq,37) output(51,eq,92) output(4,eq,92) output(51,eq,79) output(4,eq,79)
Optimization: 44 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrepTime(2))),8) preference(1,(1,2),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasIngredient(9))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(42,worse,78) output(90,worse,78) output(90,eq,42) output(18,eq,72) output(72,eq,31) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(41,eq,37) output(32,eq,72) output(72,eq,92) output(18,eq,92) output(32,eq,92) output(76,eq,37) output(18,eq,41) output(4,eq,76) output(31,eq,79) output(72,eq,23) output(18,eq,31) output(32,eq,31) output(4,eq,72) output(4,eq,31) output(18,eq,23) output(32,eq,23) output(4,eq,23) output(72,eq,79) output(18,eq,79) output(32,eq,79) output(4,eq,41) output(18,eq,37) output(4,eq,37) output(4,eq,92) output(4,eq,79)
Optimization: 35 5
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(9))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(31,better,23) output(31,better,79) output(18,worse,31) output(72,worse,31) output(4,worse,31) output(42,worse,78) output(32,worse,31) output(90,worse,78) output(90,eq,42) output(18,eq,72) output(23,eq,79) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(41,eq,37) output(32,eq,72) output(72,eq,92) output(18,eq,92) output(32,eq,92) output(76,eq,37) output(18,eq,41) output(4,eq,76) output(72,eq,23) output(4,eq,72) output(51,eq,31) output(18,eq,23) output(32,eq,23) output(4,eq,23) output(72,eq,79) output(18,eq,79) output(32,eq,79) output(4,eq,41) output(18,eq,37) output(4,eq,37) output(4,eq,92) output(4,eq,79)
Optimization: 34 3
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasIngredient(12))),6) preference(1,(1,5),1,for(atom(hasCategory(4))),6) preference(1,(1,6),1,for(atom(hasIngredient(9))),3) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasIngredient(7))),6) preference(1,(1,13),1,for(atom(hasCost(4))),6) preference(1,(1,14),1,for(atom(hasCategory(3))),3) preference(1,less(weight)) output(51,better,18) output(51,better,76) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(18,worse,72) output(51,worse,72) output(4,worse,72) output(42,worse,78) output(32,worse,72) output(90,worse,78) output(90,eq,42) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(18,eq,76) output(76,eq,41) output(41,eq,37) output(18,eq,92) output(32,eq,92) output(76,eq,37) output(18,eq,41) output(4,eq,76) output(31,eq,79) output(18,eq,31) output(32,eq,31) output(4,eq,31) output(18,eq,23) output(32,eq,23) output(4,eq,23) output(18,eq,79) output(32,eq,79) output(4,eq,41) output(18,eq,37) output(4,eq,37) output(4,eq,92) output(4,eq,79)
Optimization: 32 14
Answer: 5
preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(9))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasDifficulty(3))),8) preference(1,less(weight)) output(51,better,18) output(51,better,31) output(51,better,23) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,37) output(18,worse,72) output(18,worse,76) output(18,worse,41) output(4,worse,76) output(4,worse,72) output(4,worse,41) output(42,eq,78) output(31,eq,23) output(23,eq,79) output(4,eq,18) output(76,eq,41) output(32,eq,72) output(18,eq,92) output(51,eq,76) output(31,eq,79) output(18,eq,31) output(51,eq,72) output(4,eq,31) output(18,eq,23) output(4,eq,23) output(18,eq,79) output(51,eq,41) output(18,eq,37) output(4,eq,37) output(4,eq,92) output(4,eq,79)
Optimization: 26 5
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),3) preference(1,(1,4),1,for(atom(hasIngredient(12))),6) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasIngredient(9))),3) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrepTime(3))),6) preference(1,(1,12),1,for(atom(hasIngredient(7))),6) preference(1,(1,13),1,for(atom(hasCost(4))),6) preference(1,(1,14),1,for(atom(hasCategory(3))),3) preference(1,less(weight)) output(18,better,72) output(18,better,41) output(18,better,23) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,23) output(4,better,72) output(4,better,23) output(4,better,41) output(31,better,23) output(90,better,42) output(76,better,41) output(72,worse,31) output(72,worse,92) output(72,worse,79) output(42,worse,78) output(23,worse,79) output(32,worse,72) output(32,worse,92) output(32,worse,31) output(32,worse,79) output(41,worse,37) output(90,worse,78) output(4,eq,18) output(18,eq,76) output(18,eq,92) output(76,eq,37) output(4,eq,76) output(31,eq,79) output(18,eq,31) output(4,eq,31) output(32,eq,23) output(18,eq,79) output(18,eq,37) output(4,eq,37) output(4,eq,92) output(4,eq,79)
Optimization: 25 14
Progression : [ 1;25] (Error: 24)
Answer: 7
preference(1,(1,6),1,for(atom(hasIngredient(10))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(51,better,18) output(51,better,31) output(51,better,23) output(51,better,37) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,31) output(4,better,23) output(4,better,37) output(4,better,79) output(42,better,78) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,78) output(76,better,37) output(18,worse,72) output(18,worse,76) output(18,worse,92) output(18,worse,41) output(90,eq,42) output(31,eq,23) output(23,eq,79) output(76,eq,41) output(32,eq,72) output(72,eq,92) output(32,eq,92) output(51,eq,76) output(4,eq,76) output(31,eq,79) output(18,eq,31) output(51,eq,72) output(4,eq,72) output(18,eq,23) output(18,eq,79) output(51,eq,41) output(4,eq,41) output(18,eq,37) output(51,eq,92) output(4,eq,92)
Optimization: 24 4
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasCost(3))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),4) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasIngredient(7))),2) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasCategory(4))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,92) output(72,better,79) output(4,better,31) output(4,better,37) output(23,better,79) output(32,better,31) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,23) output(72,worse,23) output(4,worse,18) output(4,worse,76) output(4,worse,72) output(4,worse,23) output(4,worse,41) output(4,worse,92) output(4,worse,79) output(31,worse,23) output(31,worse,79) output(42,worse,78) output(32,worse,72) output(32,worse,92) output(32,worse,23) output(32,worse,79)
Optimization: 16 11
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasCost(4))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasIngredient(10))),7) preference(1,(1,10),1,for(atom(hasPrep(3))),7) preference(1,(1,11),1,for(atom(hasDifficulty(3))),8) preference(1,(1,12),1,for(atom(hasIngredient(8))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(42,better,78) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(4,worse,18) output(32,worse,72) output(32,worse,92) output(31,eq,23) output(23,eq,79) output(41,eq,37) output(72,eq,92) output(4,eq,76) output(31,eq,79) output(32,eq,31) output(4,eq,72) output(32,eq,23) output(32,eq,79) output(4,eq,92)
Optimization: 14 13
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(4))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasDifficulty(3))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(10))),7) preference(1,(1,8),1,for(atom(hasIngredient(4))),8) preference(1,(1,9),1,for(atom(hasIngredient(8))),7) preference(1,(1,10),1,for(atom(hasCategory(5))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasCost(4))),7) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,76) output(4,better,31) output(4,better,23) output(4,better,37) output(4,better,79) output(42,better,78) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,78) output(4,worse,18) output(76,worse,41) output(90,eq,42) output(31,eq,23) output(23,eq,79) output(32,eq,72) output(72,eq,92) output(32,eq,92) output(76,eq,37) output(31,eq,79) output(4,eq,72) output(4,eq,41) output(4,eq,92)
Optimization: 13 14
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(3))),8) preference(1,(1,2),1,for(atom(hasCategory(5))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(3))),8) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(4))),7) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrep(3))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasCost(4))),7) preference(1,(1,13),1,for(atom(hasIngredient(4))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,76) output(4,better,31) output(4,better,23) output(4,better,37) output(4,better,79) output(42,better,78) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(4,worse,18) output(76,worse,41) output(31,eq,23) output(23,eq,79) output(32,eq,72) output(72,eq,92) output(32,eq,92) output(76,eq,37) output(31,eq,79) output(4,eq,72) output(4,eq,41) output(4,eq,92)
Optimization: 12 14
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(3))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(2))),7) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasPrep(7))),8) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasIngredient(4))),7) preference(1,(1,9),1,for(atom(hasIngredient(8))),7) preference(1,(1,10),1,for(atom(hasCost(4))),7) preference(1,(1,11),1,for(atom(hasPrep(4))),7) preference(1,(1,12),1,for(atom(hasIngredient(10))),8) preference(1,(1,13),1,for(atom(hasCategory(2))),7) preference(1,(1,14),1,for(atom(hasCategory(5))),7) preference(1,less(weight)) output(18,better,72) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,79) output(72,better,31) output(72,better,79) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(42,better,78) output(23,better,79) output(32,better,31) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,92) output(72,worse,92) output(31,worse,23) output(32,worse,92) output(18,eq,76) output(32,eq,72) output(31,eq,79) output(72,eq,23) output(32,eq,23) output(51,eq,92) output(4,eq,92)
Optimization: 11 14
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(3))),8) preference(1,(1,2),1,for(atom(hasCost(3))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(4))),7) preference(1,(1,5),1,for(atom(hasIngredient(10))),7) preference(1,(1,6),1,for(atom(hasCategory(5))),7) preference(1,(1,7),1,for(atom(hasPrep(7))),7) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasIngredient(8))),7) preference(1,(1,10),1,for(atom(hasCost(4))),7) preference(1,(1,11),1,for(atom(hasIngredient(5))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),7) preference(1,(1,13),1,for(atom(hasCategory(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(18,better,72) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(42,better,78) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,92) output(72,worse,92) output(32,worse,92) output(31,eq,23) output(23,eq,79) output(18,eq,76) output(32,eq,72) output(31,eq,79) output(51,eq,92) output(4,eq,92)
Optimization: 10 14
Progression : [ 2;10] (Error: 4)
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(7))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasCost(3))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasDifficulty(3))),1) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasCategory(3))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasCategory(4))),7) preference(1,less(weight)) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(42,better,78) output(23,better,79) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,72) output(18,worse,76) output(18,worse,92) output(4,worse,76) output(4,worse,72) output(31,worse,23) output(31,worse,79) output(32,worse,72) output(32,worse,92) output(4,eq,92)
Optimization: 10 13
Progression : [ 3;10] (Error: 2.33333)
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasIngredient(7))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasCategory(3))),5) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasIngredient(10))),2) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasDifficulty(3))),7) preference(1,(1,13),1,for(atom(hasCategory(4))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(42,better,78) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(76,better,41) output(76,better,37) output(18,worse,92) output(72,worse,92) output(23,worse,79) output(32,worse,92) output(90,worse,42) output(90,worse,78) output(32,eq,72) output(31,eq,79) output(4,eq,92)
Optimization: 9 14
Progression : [4;9] (Error: 1.25)
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(3))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasDifficulty(3))),8) preference(1,(1,5),1,for(atom(hasCategory(4))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),2) preference(1,(1,9),1,for(atom(hasIngredient(7))),1) preference(1,(1,10),1,for(atom(hasIngredient(9))),7) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,92) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,31) output(4,better,23) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,92) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,72) output(18,worse,76) output(18,worse,92) output(18,worse,41) output(4,worse,76) output(4,worse,72) output(4,worse,41) output(4,eq,92)
Optimization: 8 14
Answer: 17
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasDifficulty(3))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),1) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasCategory(5))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasCategory(3))),4) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(4))),2) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasIngredient(10))),5) preference(1,(1,13),1,for(atom(hasCost(5))),3) preference(1,(1,14),1,for(atom(hasCost(4))),2) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(72,worse,92) output(4,worse,18) output(32,worse,92) output(4,eq,92)
Optimization: 4 14
Progression : 4 [ 1;14] (Error: 13)
Progression : 4 [ 2;14] (Error: 6)
Answer: 18
preference(1,(1,1),1,for(atom(hasCategory(4))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),6) preference(1,(1,8),1,for(atom(hasCost(3))),3) preference(1,(1,9),1,for(atom(hasCost(1))),1) preference(1,(1,10),1,for(atom(hasIngredient(4))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),6) preference(1,(1,12),1,for(atom(hasDifficulty(3))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(72,worse,92) output(4,worse,18) output(32,worse,92) output(4,eq,92)
Optimization: 4 12
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasIngredient(10))),7) preference(1,(1,3),1,for(atom(hasDifficulty(3))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasIngredient(4))),3) preference(1,(1,12),1,for(atom(hasIngredient(12))),5) preference(1,(1,14),1,for(atom(hasCost(3))),6) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,92) output(72,worse,92) output(32,worse,92) output(4,eq,92)
Optimization: 4 11
Answer: 20
preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasCost(4))),1) preference(1,(1,4),1,for(atom(hasIngredient(4))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasCost(3))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),4) preference(1,(1,10),1,for(atom(hasCategory(4))),4) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(3))),7) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,92) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(72,worse,92) output(4,worse,18) output(32,worse,92) output(4,eq,92)
Optimization: 4 10
Answer: 21
preference(1,(1,2),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasIngredient(10))),5) preference(1,(1,9),1,for(atom(hasCost(3))),6) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasDifficulty(3))),8) preference(1,(1,12),1,for(atom(hasCost(4))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,92) output(72,worse,92) output(32,worse,92) output(4,eq,92)
Optimization: 4 9
Progression : 4 [3;9] (Error: 2)
Answer: 22
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasCost(3))),4) preference(1,(1,6),1,for(atom(hasCost(4))),3) preference(1,(1,7),1,for(atom(hasIngredient(4))),3) preference(1,(1,8),1,for(atom(hasDifficulty(3))),5) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(18,better,72) output(18,better,76) output(18,better,41) output(18,better,31) output(18,better,23) output(18,better,79) output(18,better,37) output(51,better,18) output(51,better,76) output(51,better,72) output(51,better,31) output(51,better,23) output(51,better,41) output(51,better,37) output(51,better,92) output(51,better,79) output(72,better,31) output(72,better,23) output(72,better,79) output(4,better,18) output(4,better,76) output(4,better,72) output(4,better,31) output(4,better,23) output(4,better,41) output(4,better,37) output(4,better,79) output(31,better,23) output(31,better,79) output(42,better,78) output(23,better,79) output(32,better,72) output(32,better,31) output(32,better,23) output(32,better,79) output(41,better,37) output(90,better,42) output(90,better,78) output(76,better,41) output(76,better,37) output(18,worse,92) output(72,worse,92) output(32,worse,92) output(4,eq,92)
Optimization: 4 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.170 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 4 8
Bounds       : 4 [3;8]
Calls        : 1
Time         : 597.303s (Solving: 594.65s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2380.535s
Threads      : 4        (Winner: 4)

Choices      : 12874659 (Domain: 614210)
Conflicts    : 8410336  (Analyzed: 8410329)
Restarts     : 7460     (Average: 1127.39 Last: 514682)
Model-Level  : 69.8    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 8427093  (Deleted: 7997814)
  Binary     : 751      (Ratio:   0.01%)
  Ternary    : 1538     (Ratio:   0.02%)
  Conflict   : 8410326  (Average Length:  475.8 Ratio:  99.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 16767    (Average Length:   30.0 Ratio:   0.20%) 
  Distributed: 5604     (Ratio:   0.07% Average LBD: 3.55) 
  Integrated : 16812    (Ratio: 300.00% Unit: 66 Average Jumps: 32.36)
Backjumps    : 8410329  (Average:  1.40 Max: 790 Sum: 11769216)
  Executed   : 8410311  (Average:  1.40 Max: 790 Sum: 11769096 Ratio: 100.00%)
  Bounded    : 18       (Average:  6.67 Max:  23 Sum:    120 Ratio:   0.00%)

Rules        : 512538  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14914   
Bodies       : 19013   
  Sum        : 88      
  Count      : 14      
Equivalences : 7390     (Atom=Atom: 453 Body=Body: 190 Other: 6747)
Tight        : Yes
Variables    : 17095    (Eliminated:    0 Frozen: 7771)
Constraints  : 533564   (Binary:  97.6% Ternary:   1.8% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(4)) ; 
  3 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(4)) ; 
  3 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasIngredient(8)) ; 
  7 :: atom(hasCategory(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(2)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasIngredient(8)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasPrep(4)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(2)) ; 
  7 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(8)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(5)) ; 
  7 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCategory(2)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(5)) ; 
  2 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(1)) ; 
  2 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasCost(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(3)) ; 
  3 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(2)) 
}.
