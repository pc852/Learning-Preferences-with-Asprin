asprin_vL version 1.0
Reading from stdin
-:1257:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1282:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1363:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1637:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1814:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2015:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2019:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2025:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2124:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2150:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2270:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2326:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1174:1-16: info: no atoms over signature occur in program:
  output/3

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1168:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1169:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1199:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(67,better,72) output(69,better,72) output(52,better,72) output(65,better,72) output(64,worse,10) output(49,worse,23) output(49,worse,18) output(47,worse,10) output(25,worse,10) output(23,eq,18) output(50,eq,29) output(25,eq,64) output(24,eq,23) output(52,eq,69) output(69,eq,67) output(52,eq,67) output(47,eq,24) output(64,eq,50) output(24,eq,18) output(47,eq,18) output(25,eq,50) output(64,eq,29) output(25,eq,29) output(47,eq,23)
Optimization: 34 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(50,better,29) output(25,better,64) output(52,better,69) output(67,better,72) output(25,better,29) output(52,better,72) output(65,better,72) output(64,worse,10) output(49,worse,23) output(69,worse,67) output(64,worse,50) output(49,worse,18) output(47,worse,10) output(25,worse,10) output(23,eq,18) output(24,eq,23) output(52,eq,67) output(47,eq,24) output(24,eq,18) output(47,eq,18) output(25,eq,50) output(64,eq,29) output(47,eq,23)
Optimization: 31 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(64,better,24) output(69,better,67) output(67,better,72) output(69,better,72) output(64,better,23) output(47,better,24) output(25,better,24) output(64,better,50) output(47,better,50) output(64,better,29) output(47,better,29) output(47,better,23) output(52,better,72) output(65,better,72) output(23,worse,18) output(24,worse,50) output(25,worse,64) output(24,worse,23) output(52,worse,69) output(65,worse,69) output(24,worse,29) output(49,worse,18) output(24,worse,18) output(25,worse,10) output(25,worse,18) output(47,eq,64) output(64,eq,10) output(49,eq,23) output(50,eq,29) output(52,eq,67) output(47,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,50) output(25,eq,29)
Optimization: 24 6
Answer: 4
preference(1,(1,4),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasCost(1))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(49,better,23) output(50,better,29) output(64,better,24) output(69,better,67) output(67,better,72) output(69,better,72) output(64,better,23) output(47,better,24) output(25,better,24) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(52,better,72) output(65,better,72) output(23,worse,18) output(24,worse,50) output(24,worse,23) output(52,worse,69) output(65,worse,69) output(24,worse,29) output(24,worse,18) output(47,eq,64) output(64,eq,10) output(52,eq,67) output(47,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,50)
Optimization: 23 6
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,aso) output(47,better,64) output(24,better,50) output(25,better,64) output(24,better,23) output(65,better,52) output(65,better,69) output(64,better,23) output(25,better,24) output(24,better,29) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(47,better,50) output(25,better,50) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(65,better,72) output(64,worse,24) output(52,worse,69) output(52,worse,67) output(52,worse,72) output(64,eq,10) output(49,eq,23) output(50,eq,29) output(69,eq,67) output(67,eq,72) output(69,eq,72) output(64,eq,50) output(64,eq,29)
Optimization: 15 2
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,aso) output(47,better,64) output(24,better,50) output(25,better,64) output(24,better,23) output(65,better,52) output(69,better,67) output(69,better,72) output(65,better,69) output(64,better,23) output(47,better,24) output(25,better,24) output(24,better,29) output(64,better,50) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(47,better,50) output(25,better,50) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(65,better,72) output(52,worse,69) output(64,eq,10) output(49,eq,23) output(50,eq,29) output(64,eq,24) output(67,eq,72)
Optimization: 10 2
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,aso) output(47,better,64) output(64,better,10) output(49,better,23) output(24,better,50) output(50,better,29) output(25,better,64) output(24,better,23) output(52,better,69) output(69,better,67) output(69,better,72) output(52,better,67) output(65,better,69) output(64,better,23) output(24,better,29) output(49,better,18) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(25,better,50) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(52,better,72) output(65,better,72) output(64,worse,24) output(47,worse,24) output(64,worse,50) output(47,worse,50) output(67,eq,72) output(25,eq,24)
Optimization: 8 4
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(47,better,64) output(64,better,10) output(49,better,23) output(23,better,18) output(24,better,50) output(50,better,29) output(25,better,64) output(64,better,24) output(24,better,23) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(69,better,72) output(52,better,67) output(65,better,69) output(64,better,23) output(47,better,24) output(25,better,24) output(24,better,29) output(64,better,50) output(49,better,18) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(47,better,50) output(25,better,50) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(52,better,72) output(65,better,72)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,aso) output(47,better,64) output(64,better,10) output(49,better,23) output(23,better,18) output(24,better,50) output(50,better,29) output(25,better,64) output(64,better,24) output(24,better,23) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(69,better,72) output(52,better,67) output(65,better,69) output(64,better,23) output(47,better,24) output(25,better,24) output(24,better,29) output(64,better,50) output(49,better,18) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(47,better,50) output(25,better,50) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(52,better,72) output(65,better,72)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 10
preference(1,(1,3),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasCost(2))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasCategory(1))),()) preference(1,(1,4),3,for(atom(hasPrep(0))),()) preference(1,aso) output(47,better,64) output(64,better,10) output(49,better,23) output(23,better,18) output(24,better,50) output(50,better,29) output(25,better,64) output(64,better,24) output(24,better,23) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(69,better,72) output(52,better,67) output(65,better,69) output(64,better,23) output(47,better,24) output(25,better,24) output(24,better,29) output(64,better,50) output(49,better,18) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(47,better,50) output(25,better,50) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(52,better,72) output(65,better,72)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
Answer: 11
preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(47,better,64) output(64,better,10) output(49,better,23) output(23,better,18) output(24,better,50) output(50,better,29) output(25,better,64) output(64,better,24) output(24,better,23) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(69,better,72) output(52,better,67) output(65,better,69) output(64,better,23) output(47,better,24) output(25,better,24) output(24,better,29) output(64,better,50) output(49,better,18) output(24,better,18) output(47,better,10) output(25,better,10) output(64,better,18) output(47,better,18) output(25,better,18) output(47,better,50) output(25,better,50) output(64,better,29) output(47,better,29) output(25,better,29) output(47,better,23) output(25,better,23) output(65,better,67) output(52,better,72) output(65,better,72)
Optimization: 0 3
OPTIMUM FOUND

Models       : 11
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 11.685s (Solving: 3.36s 1st Model: 0.48s Unsat: 0.02s)
CPU Time     : 21.594s
Threads      : 4        (Winner: 1)

Choices      : 122311   (Domain: 461)
Conflicts    : 11973    (Analyzed: 11969)
Restarts     : 33       (Average: 362.70 Last: 886)
Model-Level  : 761.5   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 25585    (Deleted: 1157)
  Binary     : 1674     (Ratio:   6.54%)
  Ternary    : 4572     (Ratio:  17.87%)
  Conflict   : 11969    (Average Length:  121.9 Ratio:  46.78%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 13616    (Average Length:   50.9 Ratio:  53.22%) 
  Distributed: 4575     (Ratio:  38.22% Average LBD: 2.90) 
  Integrated : 13725    (Ratio: 300.00% Unit: 188 Average Jumps: 94.31)
Backjumps    : 11969    (Average:  7.75 Max: 1275 Sum:  92701)
  Executed   : 11959    (Average:  7.73 Max: 1275 Sum:  92466 Ratio:  99.75%)
  Bounded    : 10       (Average: 23.50 Max:  37 Sum:    235 Ratio:   0.25%)

Rules        : 3660820 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 606384  
Bodies       : 746477  
  Count      : 1392    
Equivalences : 1843221  (Atom=Atom: 542783 Body=Body: 592017 Other: 708421)
Tight        : Yes
Variables    : 101539   (Eliminated:    0 Frozen: 36259)
Constraints  : 3212968  (Binary:  96.9% Ternary:   2.9% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(8)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCost(1)) >> atom(hasCategory(2)) >> not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(5)) >> not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(2)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(8)) >> not atom(hasPrepTime(1))  ; 
  not atom(hasDifficulty(4))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasDifficulty(4)) >> atom(hasCost(1)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasCost(4))  >> not atom(hasIngredient(11))  || not atom(hasCategory(5))  ; 
  atom(hasIngredient(10)) >> not atom(hasCategory(4))  >> not atom(hasIngredient(7))  || not atom(hasCost(5))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCost(4))  >> not atom(hasIngredient(11))  || not atom(hasCategory(4))  ; 
  atom(hasIngredient(10)) >> not atom(hasCategory(4))  >> not atom(hasIngredient(7))  || not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasPrep(7))  >> not atom(hasDifficulty(2))  || not atom(hasCategory(5))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(2))  >> not atom(hasIngredient(6))  || not atom(hasIngredient(3))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasCategory(2)) ; 
  atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(4))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> not atom(hasCost(5))  >> not atom(hasIngredient(7))  || not atom(hasPrep(0))  ; 
  atom(hasIngredient(8)) >> atom(hasDifficulty(3)) >> not atom(hasCategory(4))  || not atom(hasDifficulty(1))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(4))  || not atom(hasIngredient(4))  ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) || not atom(hasPrep(2))  ; 
  atom(hasCategory(4)) >> not atom(hasPrepTime(3))  >> not atom(hasIngredient(7))  || not atom(hasPrep(0))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> atom(hasIngredient(4)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> not atom(hasCost(5))  >> not atom(hasIngredient(7))  || not atom(hasPrep(0))  ; 
  atom(hasIngredient(8)) >> atom(hasDifficulty(3)) >> not atom(hasCategory(4))  || not atom(hasDifficulty(1))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(4))  || not atom(hasIngredient(4))  ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) || not atom(hasPrep(2))  ; 
  atom(hasCategory(4)) >> not atom(hasPrepTime(3))  >> not atom(hasIngredient(7))  || not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) || not atom(hasCategory(5))  ; 
  atom(hasPrep(1)) >> not atom(hasIngredient(7))  >> atom(hasPrep(0)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(3)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  || not atom(hasIngredient(10))  ; 
  atom(hasPrep(3)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(3)) >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(10)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(4))  
}.
