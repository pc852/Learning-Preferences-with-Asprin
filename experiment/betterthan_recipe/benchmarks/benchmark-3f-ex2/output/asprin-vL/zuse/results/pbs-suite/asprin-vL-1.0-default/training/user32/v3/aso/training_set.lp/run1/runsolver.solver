asprin_vL version 1.0
Reading from stdin
-:1246:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1271:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1352:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1626:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1803:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2004:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2008:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2008:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2014:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2113:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2139:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2259:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2293:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2315:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1163:1-16: info: no atoms over signature occur in program:
  output/3

-:1155:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1156:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1157:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1158:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1188:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(91,better,51) output(71,better,57) output(76,worse,91) output(8,eq,55) output(55,eq,52) output(52,eq,78) output(86,eq,75) output(75,eq,62) output(62,eq,25) output(25,eq,94) output(99,eq,55) output(52,eq,67) output(76,eq,51) output(55,eq,67) output(62,eq,94) output(75,eq,25) output(86,eq,62) output(55,eq,78) output(8,eq,52) output(99,eq,52) output(8,eq,78) output(99,eq,78) output(86,eq,25) output(75,eq,94) output(86,eq,94) output(8,eq,67) output(99,eq,67)
Optimization: 25 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(91,better,51) output(71,better,57) output(76,better,51) output(76,worse,91) output(8,eq,55) output(55,eq,52) output(52,eq,78) output(86,eq,75) output(75,eq,62) output(62,eq,25) output(25,eq,94) output(99,eq,55) output(52,eq,67) output(55,eq,67) output(62,eq,94) output(75,eq,25) output(86,eq,62) output(55,eq,78) output(8,eq,52) output(99,eq,52) output(8,eq,78) output(99,eq,78) output(86,eq,25) output(75,eq,94) output(86,eq,94) output(8,eq,67) output(99,eq,67)
Optimization: 24 6
Answer: 3
preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,1),3,for(atom(hasPrep(7))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,aso) output(8,better,55) output(99,better,55) output(91,better,51) output(76,better,51) output(8,better,52) output(8,better,78) output(8,better,67) output(55,worse,52) output(55,worse,67) output(55,worse,78) output(52,eq,78) output(86,eq,75) output(75,eq,62) output(62,eq,25) output(25,eq,94) output(52,eq,67) output(76,eq,91) output(71,eq,57) output(62,eq,94) output(75,eq,25) output(86,eq,62) output(99,eq,52) output(99,eq,78) output(86,eq,25) output(75,eq,94) output(86,eq,94) output(99,eq,67)
Optimization: 20 5
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,4),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(4))),()) preference(1,aso) output(55,better,52) output(62,better,25) output(25,better,94) output(76,better,91) output(76,better,51) output(55,better,67) output(62,better,94) output(55,better,78) output(99,better,52) output(99,better,78) output(86,better,94) output(99,better,67) output(8,worse,55) output(75,worse,62) output(71,worse,57) output(86,worse,62) output(99,eq,55) output(8,eq,78) output(86,eq,25) output(8,eq,67)
Optimization: 15 5
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(atom(hasCost(4))),()) preference(1,(1,6),0,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(55,better,52) output(52,better,78) output(62,better,25) output(52,better,67) output(71,better,57) output(55,better,67) output(75,better,25) output(55,better,78) output(8,better,78) output(99,better,78) output(86,better,25) output(8,better,67) output(99,better,67) output(8,worse,55) output(75,worse,62) output(25,worse,94) output(99,worse,55) output(76,worse,91) output(76,worse,51) output(86,worse,62) output(75,worse,94) output(86,worse,94) output(86,eq,75) output(91,eq,51) output(62,eq,94) output(8,eq,52) output(99,eq,52)
Optimization: 14 4
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(atom(hasCost(4))),()) preference(1,(1,6),0,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(55,better,52) output(52,better,78) output(62,better,25) output(52,better,67) output(91,better,51) output(71,better,57) output(76,better,51) output(55,better,67) output(75,better,25) output(55,better,78) output(8,better,78) output(99,better,78) output(86,better,25) output(8,better,67) output(99,better,67) output(8,worse,55) output(75,worse,62) output(25,worse,94) output(99,worse,55) output(76,worse,91) output(86,worse,62) output(75,worse,94) output(86,worse,94) output(86,eq,75) output(62,eq,94) output(8,eq,52) output(99,eq,52)
Optimization: 12 4
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(atom(hasCost(4))),()) preference(1,(1,6),0,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(55,better,52) output(75,better,62) output(62,better,25) output(91,better,51) output(71,better,57) output(76,better,51) output(55,better,67) output(75,better,25) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(8,better,67) output(99,better,67) output(52,worse,78) output(86,worse,75) output(25,worse,94) output(76,worse,91) output(86,worse,62) output(86,worse,94) output(52,eq,67) output(62,eq,94)
Optimization: 10 4
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,aso) output(8,better,55) output(55,better,52) output(52,better,78) output(86,better,75) output(75,better,62) output(25,better,94) output(76,better,91) output(71,better,57) output(76,better,51) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(8,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,worse,55) output(52,worse,67) output(91,worse,51) output(99,worse,52) output(99,worse,67) output(55,eq,67)
Optimization: 9 5
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasPrep(5))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(8,better,55) output(55,better,52) output(25,better,94) output(99,better,55) output(76,better,91) output(71,better,57) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67) output(52,eq,78)
Optimization: 8 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(55,better,52) output(52,better,78) output(25,better,94) output(99,better,55) output(76,better,91) output(71,better,57) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67) output(8,eq,55)
Optimization: 7 6
Progression : [1;7] (Error: 6)
Answer: 11
preference(1,(1,1),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(9))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasCost(4))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(8,better,55) output(52,better,78) output(86,better,75) output(75,better,62) output(62,better,25) output(25,better,94) output(99,better,55) output(52,better,67) output(76,better,91) output(91,better,51) output(76,better,51) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67) output(55,eq,52)
Optimization: 2 6
Answer: 12
preference(1,(1,1),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(9))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasCost(4))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(8,better,55) output(55,better,52) output(52,better,78) output(86,better,75) output(75,better,62) output(62,better,25) output(25,better,94) output(99,better,55) output(52,better,67) output(76,better,91) output(91,better,51) output(76,better,51) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(atom(hasCost(2))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasDifficulty(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,2),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(8,better,55) output(55,better,52) output(52,better,78) output(75,better,62) output(62,better,25) output(25,better,94) output(99,better,55) output(52,better,67) output(76,better,91) output(91,better,51) output(71,better,57) output(76,better,51) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67) output(86,eq,75)
Optimization: 1 5
Answer: 14
preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(atom(hasDifficulty(2))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasPrepTime(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),2,for(atom(hasDifficulty(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasCategory(1))),()) preference(1,aso) output(8,better,55) output(55,better,52) output(52,better,78) output(75,better,62) output(62,better,25) output(25,better,94) output(99,better,55) output(52,better,67) output(76,better,91) output(91,better,51) output(71,better,57) output(76,better,51) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67) output(86,worse,75)
Optimization: 1 4
Answer: 15
preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,4),2,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(8,better,55) output(55,better,52) output(86,better,75) output(75,better,62) output(62,better,25) output(25,better,94) output(99,better,55) output(52,better,67) output(76,better,91) output(91,better,51) output(71,better,57) output(76,better,51) output(55,better,67) output(62,better,94) output(75,better,25) output(86,better,62) output(55,better,78) output(8,better,52) output(99,better,52) output(8,better,78) output(99,better,78) output(86,better,25) output(75,better,94) output(86,better,94) output(8,better,67) output(99,better,67)
Optimization: 1 3
OPTIMUM FOUND

Models       : 15
  Optimum    : yes
Optimization : 1 3
Calls        : 1
Time         : 15.656s (Solving: 9.51s 1st Model: 0.45s Unsat: 1.43s)
CPU Time     : 44.004s
Threads      : 4        (Winner: 1)

Choices      : 207447   (Domain: 1473)
Conflicts    : 39637    (Analyzed: 39632)
Restarts     : 59       (Average: 671.73 Last: 410)
Model-Level  : 602.1   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 68307    (Deleted: 4067)
  Binary     : 3267     (Ratio:   4.78%)
  Ternary    : 9621     (Ratio:  14.08%)
  Conflict   : 39632    (Average Length:  151.8 Ratio:  58.02%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 28675    (Average Length:   53.3 Ratio:  41.98%) 
  Distributed: 9590     (Ratio:  24.20% Average LBD: 3.01) 
  Integrated : 28756    (Ratio: 299.85% Unit: 184 Average Jumps: 70.53)
Backjumps    : 39632    (Average:  4.57 Max: 1449 Sum: 181109)
  Executed   : 39612    (Average:  4.56 Max: 1449 Sum: 180821 Ratio:  99.84%)
  Bounded    : 20       (Average: 14.40 Max:  26 Sum:    288 Ratio:   0.16%)

Rules        : 2621585 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 440716  
Bodies       : 555048  
  Count      : 996     
Equivalences : 1331979  (Atom=Atom: 391107 Body=Body: 422290 Other: 518582)
Tight        : Yes
Variables    : 91959    (Eliminated:    0 Frozen: 26811)
Constraints  : 2350776  (Binary:  96.2% Ternary:   3.6% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasIngredient(5))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(5)) >> not atom(hasCost(5))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasIngredient(5))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(5)) >> not atom(hasCost(5))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(4)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> atom(hasIngredient(3)) || not atom(hasPrep(1))  ; 
  not atom(hasCategory(1))  >> atom(hasIngredient(11)) >> not atom(hasIngredient(9))  || atom(hasCost(4)) ; 
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasPrep(7)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasDifficulty(4)) >> not atom(hasIngredient(3))  || not atom(hasCategory(5))  ; 
  atom(hasCost(3)) >> atom(hasPrep(6)) || not atom(hasCost(4))  ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(1))  >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(5)) >> atom(hasDifficulty(1)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasIngredient(7)) >> not atom(hasPrepTime(3))  || not atom(hasPrep(1))  ; 
  atom(hasPrep(7)) >> not atom(hasIngredient(2))  || not atom(hasIngredient(8))  ; 
  not atom(hasCategory(1))  >> atom(hasIngredient(11)) >> not atom(hasIngredient(9))  || atom(hasCost(4)) ; 
  not atom(hasIngredient(12))  >> not atom(hasIngredient(1))  >> atom(hasIngredient(10)) || atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasIngredient(7)) >> not atom(hasPrep(4))  || not atom(hasPrep(1))  ; 
  atom(hasPrep(7)) >> not atom(hasIngredient(2))  || not atom(hasIngredient(8))  ; 
  not atom(hasCategory(1))  >> atom(hasIngredient(11)) >> not atom(hasIngredient(9))  || atom(hasCost(4)) ; 
  not atom(hasIngredient(12))  >> not atom(hasIngredient(1))  >> atom(hasIngredient(10)) || atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasIngredient(7)) >> not atom(hasIngredient(11))  || not atom(hasDifficulty(1))  ; 
  atom(hasPrep(7)) >> not atom(hasIngredient(2))  || not atom(hasDifficulty(1))  ; 
  not atom(hasCategory(1))  >> atom(hasIngredient(11)) >> not atom(hasIngredient(9))  || atom(hasCost(4)) ; 
  not atom(hasIngredient(12))  >> not atom(hasIngredient(1))  >> atom(hasIngredient(10)) || atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(0))  >> not atom(hasIngredient(3))  >> not atom(hasCost(1))  || not atom(hasCategory(2))  ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  || atom(hasCategory(1)) ; 
  atom(hasCategory(5)) >> not atom(hasIngredient(1))  || not atom(hasCategory(2))  ; 
  not atom(hasCost(4))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(7)) >> atom(hasIngredient(3)) >> not atom(hasPrep(5))  || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasCategory(1)) >> atom(hasPrep(6)) || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) || not atom(hasPrep(5))  ; 
  atom(hasCost(3)) >> atom(hasPrep(6)) || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(4)) >> atom(hasCost(3)) >> not atom(hasCost(3))  || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(5)) >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> not atom(hasCost(2))  >> atom(hasCategory(3)) || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasCategory(1)) >> atom(hasPrep(6)) || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) || not atom(hasPrep(5))  ; 
  atom(hasCost(3)) >> atom(hasPrep(6)) || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(6)) >> atom(hasCost(3)) >> not atom(hasCost(3))  || not atom(hasDifficulty(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(4)) >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> not atom(hasCost(2))  >> atom(hasCategory(3)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(10)) >> atom(hasPrep(0)) || not atom(hasCategory(2))  ; 
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(3)) >> atom(hasCategory(3)) >> atom(hasCategory(1)) || not atom(hasPrep(1))  ; 
  atom(hasCost(3)) >> not atom(hasPrep(5))  >> atom(hasPrepTime(2)) || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(9)) >> atom(hasDifficulty(4)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(10)) >> atom(hasPrep(0)) || not atom(hasCategory(2))  ; 
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(3)) >> atom(hasCategory(3)) >> atom(hasCategory(1)) || not atom(hasPrep(1))  ; 
  atom(hasIngredient(9)) >> atom(hasPrepTime(2)) >> atom(hasCost(4)) || not atom(hasIngredient(6))  ; 
  atom(hasCost(3)) >> not atom(hasPrep(5))  >> atom(hasPrepTime(2)) || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasDifficulty(3)) >> atom(hasCategory(3)) || not atom(hasCategory(3))  ; 
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || atom(hasDifficulty(2)) ; 
  atom(hasCost(3)) >> atom(hasPrep(6)) >> atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(10)) >> atom(hasPrep(0)) || atom(hasCost(2)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(3))  >> atom(hasCost(4)) || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) || not atom(hasCategory(3))  ; 
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || atom(hasDifficulty(2)) ; 
  atom(hasCategory(2)) >> atom(hasPrep(7)) >> not atom(hasCost(3))  || not atom(hasCategory(5))  ; 
  atom(hasIngredient(10)) >> atom(hasPrep(0)) >> not atom(hasCost(2))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(7))  || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  || not atom(hasIngredient(8))  ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(3))  >> atom(hasIngredient(12)) || not atom(hasCategory(5))  
}.
