asprin_vL version 1.0
Reading from stdin
-:1333:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1358:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1439:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1713:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1890:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2091:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2095:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2095:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2101:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2200:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2226:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2346:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2380:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2402:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1250:1-16: info: no atoms over signature occur in program:
  output/3

-:1242:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1243:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1244:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1245:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1275:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCost(5))),()) preference(1,(1,6),3,for(atom(hasCost(5))),()) preference(1,aso) output(57,better,56) output(100,better,21) output(16,better,17) output(15,better,67) output(57,better,20) output(15,better,72) output(57,better,89) output(100,better,60) output(100,better,32) output(100,better,73) output(15,better,56) output(15,better,89) output(57,better,67) output(16,better,72) output(57,better,72) output(16,better,67) output(15,better,20) output(57,better,5) output(15,better,5) output(16,better,5) output(100,better,5) output(100,better,20) output(16,better,20) output(100,better,67) output(100,better,89) output(16,better,89) output(100,better,56) output(16,better,56) output(100,better,72) output(73,worse,57) output(17,worse,15) output(67,worse,57) output(51,worse,16) output(89,worse,57) output(32,worse,57) output(60,worse,57) output(21,worse,57) output(51,worse,15) output(17,worse,57) output(56,worse,57) output(82,worse,57) output(51,worse,57) output(21,eq,60) output(60,eq,32) output(32,eq,73) output(56,eq,89) output(89,eq,67) output(67,eq,72) output(89,eq,5) output(82,eq,89) output(56,eq,5) output(82,eq,5) output(73,eq,20) output(67,eq,20) output(17,eq,67) output(51,eq,17) output(89,eq,72) output(56,eq,67) output(82,eq,67) output(73,eq,56) output(67,eq,56) output(60,eq,73) output(21,eq,32) output(21,eq,73) output(89,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(32,eq,56) output(60,eq,56) output(73,eq,89) output(67,eq,89) output(89,eq,89) output(32,eq,89) output(73,eq,67) output(67,eq,67) output(17,eq,72) output(56,eq,72) output(82,eq,72) output(51,eq,67) output(16,eq,57) output(57,eq,57) output(89,eq,20) output(17,eq,20) output(56,eq,20) output(82,eq,20) output(32,eq,20) output(60,eq,20) output(73,eq,5) output(67,eq,5) output(17,eq,5) output(51,eq,5) output(32,eq,5) output(60,eq,5) output(21,eq,5) output(21,eq,20) output(51,eq,20) output(73,eq,72) output(32,eq,72) output(60,eq,72) output(21,eq,72) output(51,eq,72) output(32,eq,67) output(60,eq,67) output(21,eq,67) output(60,eq,89) output(21,eq,89) output(17,eq,89) output(51,eq,89) output(21,eq,56) output(51,eq,56)
Optimization: 85 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCost(5))),()) preference(1,(1,6),3,for(atom(hasCost(5))),()) preference(1,aso) output(60,better,32) output(57,better,56) output(100,better,21) output(16,better,17) output(15,better,67) output(57,better,20) output(51,better,17) output(15,better,72) output(57,better,89) output(60,better,73) output(100,better,32) output(100,better,73) output(15,better,56) output(60,better,56) output(15,better,89) output(57,better,67) output(16,better,72) output(57,better,72) output(16,better,67) output(51,better,67) output(15,better,20) output(60,better,20) output(57,better,5) output(15,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(100,better,5) output(100,better,20) output(16,better,20) output(51,better,20) output(60,better,72) output(51,better,72) output(60,better,67) output(100,better,67) output(60,better,89) output(100,better,89) output(16,better,89) output(51,better,89) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(21,worse,60) output(73,worse,57) output(17,worse,15) output(67,worse,57) output(89,worse,57) output(32,worse,57) output(21,worse,57) output(17,worse,57) output(56,worse,57) output(82,worse,57) output(32,eq,73) output(56,eq,89) output(89,eq,67) output(67,eq,72) output(89,eq,5) output(82,eq,89) output(56,eq,5) output(82,eq,5) output(73,eq,20) output(67,eq,20) output(17,eq,67) output(89,eq,72) output(56,eq,67) output(82,eq,67) output(73,eq,56) output(67,eq,56) output(21,eq,32) output(21,eq,73) output(89,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(32,eq,56) output(73,eq,89) output(67,eq,89) output(89,eq,89) output(32,eq,89) output(73,eq,67) output(67,eq,67) output(17,eq,72) output(56,eq,72) output(82,eq,72) output(16,eq,57) output(57,eq,57) output(89,eq,20) output(17,eq,20) output(56,eq,20) output(82,eq,20) output(32,eq,20) output(73,eq,5) output(67,eq,5) output(17,eq,5) output(32,eq,5) output(21,eq,5) output(21,eq,20) output(73,eq,72) output(32,eq,72) output(21,eq,72) output(32,eq,67) output(21,eq,67) output(21,eq,89) output(17,eq,89) output(21,eq,56)
Optimization: 71 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCost(5))),()) preference(1,(1,6),3,for(atom(hasCost(5))),()) preference(1,aso) output(21,better,60) output(57,better,56) output(16,better,17) output(15,better,67) output(57,better,20) output(73,better,20) output(51,better,17) output(15,better,72) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(15,better,56) output(73,better,89) output(15,better,89) output(57,better,67) output(73,better,67) output(16,better,72) output(57,better,72) output(16,better,67) output(51,better,67) output(16,better,57) output(15,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(16,better,5) output(51,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(73,better,72) output(21,better,72) output(51,better,72) output(21,better,67) output(100,better,67) output(21,better,89) output(100,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(17,worse,15) output(67,worse,57) output(51,worse,16) output(89,worse,57) output(32,worse,57) output(60,worse,73) output(60,worse,57) output(17,worse,57) output(56,worse,57) output(82,worse,57) output(60,eq,32) output(56,eq,89) output(89,eq,67) output(67,eq,72) output(89,eq,5) output(82,eq,89) output(56,eq,5) output(82,eq,5) output(67,eq,20) output(17,eq,67) output(89,eq,72) output(56,eq,67) output(82,eq,67) output(67,eq,56) output(21,eq,73) output(89,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(32,eq,56) output(60,eq,56) output(67,eq,89) output(89,eq,89) output(32,eq,89) output(67,eq,67) output(17,eq,72) output(56,eq,72) output(82,eq,72) output(57,eq,57) output(89,eq,20) output(17,eq,20) output(56,eq,20) output(82,eq,20) output(32,eq,20) output(60,eq,20) output(67,eq,5) output(17,eq,5) output(32,eq,5) output(60,eq,5) output(32,eq,72) output(60,eq,72) output(32,eq,67) output(60,eq,67) output(60,eq,89) output(17,eq,89)
Optimization: 65 6
Progression : [ 1;65] (Error: 64)
Progression : [ 2;65] (Error: 31.5)
Answer: 4
preference(1,(1,1),0,for(atom(hasCategory(2))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasIngredient(12))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasCost(1))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(89,better,67) output(73,better,57) output(16,better,17) output(15,better,67) output(57,better,20) output(89,better,5) output(56,better,5) output(73,better,20) output(67,better,20) output(89,better,57) output(15,better,57) output(51,better,17) output(89,better,72) output(15,better,72) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(89,better,56) output(15,better,56) output(60,better,56) output(57,better,67) output(73,better,67) output(16,better,72) output(57,better,72) output(21,better,57) output(16,better,67) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(100,better,57) output(73,better,72) output(60,better,72) output(21,better,72) output(60,better,67) output(21,better,67) output(100,better,67) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(56,worse,89) output(17,worse,15) output(67,worse,57) output(51,worse,16) output(82,worse,89) output(17,worse,67) output(32,worse,57) output(82,worse,67) output(57,worse,89) output(60,worse,73) output(17,worse,56) output(82,worse,56) output(32,worse,56) output(67,worse,89) output(32,worse,89) output(17,worse,72) output(82,worse,72) output(51,worse,15) output(17,worse,57) output(82,worse,57) output(32,worse,72) output(32,worse,67) output(60,worse,89) output(17,worse,89) output(51,worse,89) output(67,eq,72) output(100,eq,21) output(82,eq,5) output(16,eq,15) output(21,eq,73) output(100,eq,73) output(56,eq,56) output(73,eq,89) output(89,eq,89) output(15,eq,89) output(67,eq,67) output(57,eq,57) output(82,eq,20) output(32,eq,20) output(32,eq,5) output(21,eq,89) output(100,eq,89) output(16,eq,89)
Optimization: 53 5
Progression : [ 3;53] (Error: 16.6667)
Progression : [ 4;53] (Error: 12.25)
Progression : [ 5;53] (Error: 9.6)
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(9))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,5),2,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(56,better,89) output(89,better,67) output(73,better,57) output(16,better,17) output(15,better,67) output(82,better,89) output(73,better,20) output(89,better,57) output(15,better,57) output(17,better,67) output(16,better,15) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(73,better,89) output(15,better,89) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(21,better,57) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(56,better,57) output(82,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(73,better,5) output(16,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(100,better,57) output(73,better,72) output(32,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(100,better,72) output(60,worse,32) output(32,worse,73) output(57,worse,56) output(57,worse,20) output(89,worse,5) output(51,worse,16) output(67,worse,20) output(57,worse,89) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(32,worse,56) output(60,worse,56) output(67,worse,89) output(60,worse,20) output(57,worse,5) output(67,worse,5) output(32,worse,5) output(60,worse,5) output(60,worse,89) output(67,eq,72) output(100,eq,21) output(17,eq,15) output(56,eq,5) output(82,eq,5) output(21,eq,73) output(100,eq,73) output(15,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(32,eq,89) output(67,eq,67) output(57,eq,57) output(89,eq,20) output(32,eq,20) output(15,eq,5) output(17,eq,5) output(60,eq,72) output(60,eq,67)
Optimization: 52 6
Progression : [ 6;52] (Error: 7.66667)
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),0,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(9))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,5),2,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(56,better,89) output(89,better,67) output(73,better,57) output(16,better,17) output(15,better,67) output(82,better,89) output(73,better,20) output(89,better,57) output(15,better,57) output(17,better,67) output(16,better,15) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(73,better,89) output(15,better,89) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(21,better,57) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(56,better,57) output(82,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(73,better,5) output(16,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(100,better,72) output(32,worse,73) output(57,worse,56) output(57,worse,20) output(89,worse,5) output(51,worse,16) output(67,worse,20) output(57,worse,89) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(32,worse,56) output(67,worse,89) output(57,worse,5) output(67,worse,5) output(32,worse,5) output(67,eq,72) output(100,eq,21) output(17,eq,15) output(56,eq,5) output(82,eq,5) output(21,eq,73) output(100,eq,73) output(15,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(32,eq,89) output(67,eq,67) output(57,eq,57) output(89,eq,20) output(32,eq,20) output(15,eq,5) output(17,eq,5)
Optimization: 50 6
Answer: 7
preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(6))),()) preference(1,aso) output(32,better,73) output(89,better,67) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(89,better,5) output(51,better,16) output(73,better,20) output(89,better,57) output(15,better,57) output(17,better,67) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(73,better,56) output(60,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(32,better,56) output(60,better,56) output(32,better,89) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(60,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(32,better,20) output(60,better,20) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(100,better,5) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(100,better,67) output(60,better,89) output(17,better,89) output(51,better,89) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(21,worse,60) output(56,worse,89) output(16,worse,17) output(82,worse,89) output(67,worse,20) output(57,worse,89) output(67,worse,56) output(21,worse,32) output(100,worse,60) output(100,worse,32) output(21,worse,73) output(67,worse,89) output(67,worse,5) output(21,worse,89) output(60,eq,32) output(67,eq,72) output(56,eq,5) output(82,eq,5) output(16,eq,15) output(51,eq,17) output(100,eq,73) output(56,eq,56) output(82,eq,56) output(73,eq,89) output(89,eq,89) output(15,eq,89) output(67,eq,67) output(21,eq,57) output(57,eq,57) output(56,eq,20) output(82,eq,20) output(100,eq,89) output(16,eq,89)
Optimization: 46 3
Answer: 8
preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasPrep(6))),()) preference(1,aso) output(32,better,73) output(89,better,67) output(73,better,57) output(17,better,15) output(15,better,67) output(89,better,5) output(51,better,16) output(73,better,20) output(89,better,57) output(15,better,57) output(17,better,67) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(73,better,56) output(60,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(32,better,56) output(60,better,56) output(32,better,89) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(60,better,57) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(32,better,20) output(60,better,20) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(17,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(21,worse,60) output(56,worse,89) output(16,worse,17) output(82,worse,89) output(67,worse,20) output(57,worse,89) output(67,worse,56) output(21,worse,32) output(100,worse,60) output(100,worse,32) output(67,worse,89) output(67,worse,5) output(60,eq,32) output(67,eq,72) output(100,eq,21) output(56,eq,5) output(82,eq,5) output(16,eq,15) output(51,eq,17) output(21,eq,73) output(100,eq,73) output(56,eq,56) output(82,eq,56) output(73,eq,89) output(89,eq,89) output(15,eq,89) output(67,eq,67) output(57,eq,57) output(56,eq,20) output(82,eq,20) output(21,eq,89) output(100,eq,89) output(16,eq,89)
Optimization: 41 3
Progression : [ 7;41] (Error: 4.85714)
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),3,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCost(3))),()) preference(1,(1,4),3,for(atom(hasCost(3))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(21,better,60) output(89,better,67) output(67,better,72) output(16,better,17) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(51,better,17) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(21,better,73) output(15,better,56) output(15,better,89) output(57,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(21,better,89) output(100,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(100,worse,21) output(17,worse,15) output(67,worse,57) output(67,worse,56) output(67,worse,89) output(56,eq,89) output(82,eq,89) output(89,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(17,eq,89)
Optimization: 40 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),3,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCost(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(21,better,60) output(89,better,67) output(67,better,72) output(16,better,17) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(16,better,15) output(51,better,17) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(21,better,73) output(15,better,56) output(15,better,89) output(57,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(21,better,89) output(100,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(17,worse,15) output(67,worse,57) output(67,worse,56) output(67,worse,89) output(56,eq,89) output(82,eq,89) output(89,eq,56) output(17,eq,56) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(17,eq,89)
Optimization: 39 6
Progression : [ 8;39] (Error: 3.875)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),0,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasPrepTime(2))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasPrep(3))),()) preference(1,(1,2),3,for(atom(hasCost(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(32,better,73) output(100,better,21) output(16,better,17) output(15,better,67) output(89,better,5) output(51,better,16) output(82,better,89) output(82,better,5) output(73,better,20) output(15,better,57) output(17,better,67) output(51,better,17) output(32,better,57) output(89,better,72) output(15,better,72) output(82,better,67) output(67,better,56) output(60,better,73) output(100,better,60) output(100,better,32) output(21,better,73) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(15,better,89) output(32,better,89) output(17,better,72) output(16,better,72) output(82,better,72) output(60,better,57) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(82,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(21,worse,60) output(56,worse,89) output(17,worse,15) output(56,worse,5) output(56,worse,67) output(21,worse,32) output(60,eq,32) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57)
Optimization: 34 6
Progression : [ 9;34] (Error: 2.77778)
Progression : [10;34] (Error: 2.4)
Progression : [11;34] (Error: 2.09091)
Progression : [12;34] (Error: 1.83333)
Progression : [13;34] (Error: 1.61538)
Progression : [14;34] (Error: 1.42857)
Answer: 12
preference(1,(1,1),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,aso) output(21,better,60) output(57,better,56) output(56,better,89) output(89,better,67) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(51,better,16) output(82,better,89) output(73,better,20) output(17,better,67) output(16,better,15) output(51,better,17) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(15,better,56) output(17,better,56) output(60,better,56) output(73,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(67,worse,57) output(89,worse,5) output(67,worse,20) output(89,worse,57) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(67,worse,89) output(56,worse,57) output(82,worse,57) output(67,worse,5) output(67,eq,72) output(100,eq,21) output(16,eq,17) output(56,eq,5) output(82,eq,5) output(21,eq,73) output(100,eq,73) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(67,eq,67) output(60,eq,57) output(57,eq,57) output(89,eq,20)
Optimization: 33 4
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(57,better,56) output(56,better,89) output(89,better,67) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(51,better,16) output(82,better,89) output(73,better,20) output(15,better,57) output(17,better,67) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,32) output(15,better,56) output(17,better,56) output(60,better,56) output(73,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(100,worse,21) output(16,worse,17) output(67,worse,57) output(89,worse,5) output(67,worse,20) output(89,worse,57) output(32,worse,57) output(67,worse,56) output(60,worse,73) output(100,worse,73) output(89,worse,56) output(67,worse,89) output(56,worse,57) output(82,worse,57) output(67,worse,5) output(67,eq,72) output(56,eq,5) output(82,eq,5) output(51,eq,17) output(21,eq,73) output(56,eq,56) output(82,eq,56) output(32,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(89,eq,20) output(32,eq,5)
Optimization: 32 4
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(57,better,56) output(56,better,89) output(89,better,67) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(51,better,16) output(82,better,89) output(73,better,20) output(15,better,57) output(17,better,67) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(15,better,56) output(17,better,56) output(60,better,56) output(73,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(16,worse,17) output(67,worse,57) output(89,worse,5) output(67,worse,20) output(89,worse,57) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(67,worse,89) output(56,worse,57) output(82,worse,57) output(67,worse,5) output(67,eq,72) output(100,eq,21) output(56,eq,5) output(82,eq,5) output(16,eq,15) output(51,eq,17) output(21,eq,73) output(100,eq,73) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(89,eq,20)
Optimization: 31 4
Progression : [15;31] (Error: 1.06667)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(57,better,56) output(56,better,89) output(89,better,67) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(51,better,16) output(82,better,89) output(82,better,5) output(73,better,20) output(17,better,67) output(51,better,17) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(15,better,56) output(17,better,56) output(82,better,56) output(73,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(67,worse,57) output(89,worse,5) output(67,worse,20) output(89,worse,57) output(32,worse,57) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(67,worse,89) output(56,worse,57) output(67,worse,5) output(67,eq,72) output(56,eq,5) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(89,eq,20)
Optimization: 30 4
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(57,better,56) output(56,better,89) output(89,better,67) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(51,better,16) output(82,better,89) output(82,better,5) output(73,better,20) output(17,better,67) output(51,better,17) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(15,better,56) output(17,better,56) output(82,better,56) output(73,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(67,worse,57) output(89,worse,5) output(67,worse,20) output(89,worse,57) output(32,worse,57) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(67,worse,89) output(56,worse,57) output(67,worse,5) output(67,eq,72) output(56,eq,5) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(89,eq,20)
Optimization: 29 4
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(57,better,56) output(56,better,89) output(89,better,67) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(51,better,16) output(82,better,89) output(82,better,5) output(73,better,20) output(17,better,67) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(57,better,89) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(15,better,56) output(17,better,56) output(82,better,56) output(60,better,56) output(73,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(16,worse,17) output(67,worse,57) output(89,worse,5) output(67,worse,20) output(89,worse,57) output(32,worse,57) output(67,worse,56) output(60,worse,73) output(89,worse,56) output(67,worse,89) output(56,worse,57) output(67,worse,5) output(67,eq,72) output(56,eq,5) output(51,eq,17) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(60,eq,57) output(82,eq,57) output(57,eq,57) output(89,eq,20)
Optimization: 28 4
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,1),3,for(atom(hasPrepTime(1))),()) preference(1,(1,2),3,for(atom(hasCost(3))),()) preference(1,aso) output(60,better,32) output(89,better,67) output(67,better,72) output(100,better,21) output(73,better,57) output(16,better,17) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(89,better,57) output(15,better,57) output(17,better,67) output(51,better,17) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(73,better,56) output(60,better,73) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(60,better,56) output(73,better,89) output(15,better,89) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(60,better,57) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(73,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(60,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(21,worse,60) output(32,worse,73) output(56,worse,89) output(82,worse,89) output(57,worse,89) output(67,worse,56) output(32,worse,56) output(67,worse,89) output(32,worse,89) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(57,eq,57) output(32,eq,67)
Optimization: 26 6
Progression : [16;26] (Error: 0.625)
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),0,for(atom(hasCost(3))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),0,for(atom(hasDifficulty(2))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),3,for(atom(hasCategory(1))),()) preference(1,(1,4),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(21,better,60) output(60,better,32) output(89,better,67) output(67,better,72) output(73,better,57) output(16,better,17) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(89,better,57) output(15,better,57) output(17,better,67) output(16,better,15) output(51,better,17) output(32,better,57) output(89,better,72) output(15,better,72) output(56,better,67) output(82,better,67) output(73,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(89,better,56) output(15,better,56) output(17,better,56) output(73,better,89) output(73,better,67) output(17,better,72) output(16,better,72) output(56,better,72) output(82,better,72) output(57,better,72) output(60,better,57) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(56,better,57) output(82,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(60,better,67) output(21,better,67) output(100,better,67) output(21,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(32,worse,73) output(57,worse,56) output(56,worse,89) output(82,worse,89) output(57,worse,89) output(67,worse,56) output(60,worse,73) output(67,worse,89) output(67,eq,57) output(21,eq,73) output(56,eq,56) output(82,eq,56) output(89,eq,89) output(57,eq,67) output(67,eq,67) output(57,eq,57)
Optimization: 25 6
Answer: 20
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(32,better,73) output(57,better,56) output(67,better,72) output(100,better,21) output(73,better,57) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(82,better,89) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(51,better,17) output(32,better,57) output(15,better,72) output(82,better,67) output(57,better,89) output(73,better,56) output(67,better,56) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(73,better,89) output(67,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(56,worse,89) output(89,worse,67) output(67,worse,57) output(89,worse,57) output(16,worse,15) output(56,worse,67) output(21,worse,32) output(56,worse,57) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57)
Optimization: 24 6
Answer: 21
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(2))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(32,better,73) output(57,better,56) output(67,better,72) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(82,better,89) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(51,better,17) output(32,better,57) output(15,better,72) output(82,better,67) output(57,better,89) output(73,better,56) output(67,better,56) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(73,better,89) output(67,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(56,worse,89) output(89,worse,67) output(67,worse,57) output(89,worse,57) output(56,worse,67) output(21,worse,32) output(56,worse,57) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57)
Optimization: 23 6
Answer: 22
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(2))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(32,better,73) output(57,better,56) output(67,better,72) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(82,better,89) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(16,better,15) output(51,better,17) output(32,better,57) output(15,better,72) output(82,better,67) output(57,better,89) output(73,better,56) output(67,better,56) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(73,better,89) output(67,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(60,worse,32) output(56,worse,89) output(89,worse,67) output(67,worse,57) output(89,worse,57) output(56,worse,67) output(21,worse,32) output(56,worse,57) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57)
Optimization: 22 6
Answer: 23
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(21,better,60) output(57,better,56) output(67,better,72) output(100,better,21) output(73,better,57) output(17,better,15) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(82,better,89) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(16,better,15) output(51,better,17) output(32,better,57) output(15,better,72) output(82,better,67) output(57,better,89) output(73,better,56) output(67,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(73,better,89) output(67,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(60,worse,32) output(32,worse,73) output(56,worse,89) output(89,worse,67) output(67,worse,57) output(89,worse,57) output(56,worse,67) output(60,worse,73) output(60,worse,57) output(56,worse,57) output(60,worse,67) output(16,eq,17) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57)
Optimization: 21 6
Answer: 24
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(21,better,60) output(57,better,56) output(67,better,72) output(100,better,21) output(73,better,57) output(16,better,17) output(17,better,15) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(82,better,89) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(16,better,15) output(51,better,17) output(32,better,57) output(15,better,72) output(82,better,67) output(57,better,89) output(73,better,56) output(67,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(73,better,89) output(67,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(60,worse,32) output(32,worse,73) output(56,worse,89) output(89,worse,67) output(67,worse,57) output(89,worse,57) output(56,worse,67) output(60,worse,73) output(60,worse,57) output(56,worse,57) output(60,worse,67) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57)
Optimization: 20 6
Answer: 25
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(21,better,60) output(57,better,56) output(67,better,72) output(100,better,21) output(73,better,57) output(16,better,17) output(17,better,15) output(15,better,67) output(57,better,20) output(89,better,5) output(51,better,16) output(82,better,89) output(56,better,5) output(82,better,5) output(73,better,20) output(67,better,20) output(15,better,57) output(17,better,67) output(16,better,15) output(51,better,17) output(32,better,57) output(15,better,72) output(82,better,67) output(57,better,89) output(73,better,56) output(67,better,56) output(21,better,32) output(100,better,60) output(100,better,32) output(100,better,73) output(89,better,56) output(15,better,56) output(17,better,56) output(82,better,56) output(32,better,56) output(60,better,56) output(73,better,89) output(67,better,89) output(15,better,89) output(32,better,89) output(57,better,67) output(73,better,67) output(17,better,72) output(16,better,72) output(82,better,72) output(57,better,72) output(21,better,57) output(51,better,15) output(16,better,67) output(51,better,67) output(17,better,57) output(16,better,57) output(89,better,20) output(15,better,20) output(17,better,20) output(56,better,20) output(82,better,20) output(32,better,20) output(60,better,20) output(57,better,5) output(73,better,5) output(67,better,5) output(15,better,5) output(17,better,5) output(16,better,5) output(51,better,5) output(32,better,5) output(60,better,5) output(21,better,5) output(100,better,5) output(21,better,20) output(100,better,20) output(16,better,20) output(51,better,20) output(51,better,57) output(100,better,57) output(73,better,72) output(32,better,72) output(60,better,72) output(21,better,72) output(51,better,72) output(32,better,67) output(21,better,67) output(100,better,67) output(60,better,89) output(21,better,89) output(100,better,89) output(17,better,89) output(16,better,89) output(51,better,89) output(21,better,56) output(100,better,56) output(16,better,56) output(51,better,56) output(100,better,72) output(60,worse,32) output(32,worse,73) output(56,worse,89) output(89,worse,67) output(67,worse,57) output(89,worse,57) output(56,worse,67) output(60,worse,73) output(60,worse,57) output(56,worse,57) output(21,eq,73) output(56,eq,56) output(89,eq,89) output(67,eq,67) output(82,eq,57) output(57,eq,57) output(60,eq,67)
Optimization: 19 6
Progression : [17;19] (Error: 0.117647)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.036 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 19 6
Bounds       : [17;19] [0;6]
Calls        : 1
Time         : 598.083s (Solving: 576.98s 1st Model: 1.32s Unsat: 0.00s)
CPU Time     : 2328.554s
Threads      : 4        (Winner: 4)

Choices      : 9939641  (Domain: 270713)
Conflicts    : 1834867  (Analyzed: 1834850)
Restarts     : 2323     (Average: 789.86 Last: 79309)
Model-Level  : 491.6   
Problems     : 21       (Average Length: 0.19 Splits: 0)
Lemmas       : 2260460  (Deleted: 1938208)
  Binary     : 27422    (Ratio:   1.21%)
  Ternary    : 119348   (Ratio:   5.28%)
  Conflict   : 1834850  (Average Length:  466.2 Ratio:  81.17%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 425610   (Average Length:   86.2 Ratio:  18.83%) 
  Distributed: 141881   (Ratio:   7.73% Average LBD: 3.21) 
  Integrated : 425643   (Ratio: 300.00% Unit: 1302 Average Jumps: 87.32)
Backjumps    : 1834850  (Average:  5.16 Max: 1441 Sum: 9470355)
  Executed   : 1834745  (Average:  5.16 Max: 1441 Sum: 9464337 Ratio:  99.94%)
  Bounded    : 105      (Average: 57.31 Max: 116 Sum:   6018 Ratio:   0.06%)

Rules        : 10870682
  Choice     : 25      
  Minimize   : 2       
Atoms        : 1766746 
Bodies       : 2080195 
  Count      : 4128    
Equivalences : 5420701  (Atom=Atom: 1605353 Body=Body: 1774825 Other: 2040523)
Tight        : Yes
Variables    : 165849   (Eliminated:    0 Frozen: 99657)
Constraints  : 9165474  (Binary:  98.2% Ternary:   1.6% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasCost(4))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(7)) >> atom(hasCategory(2)) ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> not atom(hasCost(4))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasPrep(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasPrep(7)) >> not atom(hasCost(4))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasPrep(7)) >> atom(hasCategory(2)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(2)) >> atom(hasCategory(2)) >> not atom(hasPrep(3))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(1)) >> atom(hasCost(5)) ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(11)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(1))  || atom(hasCategory(2)) ; 
  atom(hasPrep(6)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(1))  || not atom(hasPrep(6))  ; 
  atom(hasIngredient(3)) >> not atom(hasCost(1))  || not atom(hasCost(4))  ; 
  not atom(hasCost(5))  >> not atom(hasPrep(4))  >> not atom(hasIngredient(2))  || atom(hasIngredient(12)) ; 
  atom(hasIngredient(10)) >> atom(hasCost(1)) >> not atom(hasIngredient(3))  || not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(3))  || not atom(hasPrep(4))  ; 
  not atom(hasIngredient(5))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  not atom(hasCategory(2))  >> not atom(hasCategory(5))  || not atom(hasPrep(1))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCost(5))  >> not atom(hasIngredient(8))  || atom(hasCategory(2)) ; 
  atom(hasCategory(3)) >> atom(hasCategory(1)) || not atom(hasCategory(3))  ; 
  atom(hasIngredient(9)) >> not atom(hasIngredient(4))  || atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(9)) >> not atom(hasPrep(4))  || not atom(hasIngredient(3))  ; 
  not atom(hasIngredient(5))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  not atom(hasCategory(2))  >> not atom(hasCategory(5))  || not atom(hasPrep(1))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCost(5))  >> not atom(hasIngredient(8))  || atom(hasCategory(2)) ; 
  atom(hasCategory(3)) >> atom(hasCategory(1)) || not atom(hasCategory(3))  ; 
  atom(hasIngredient(9)) >> not atom(hasIngredient(4))  || atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(1))  >> atom(hasCost(2)) || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(12)) >> atom(hasPrepTime(2)) || atom(hasCategory(1)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(12))  || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(1))  >> atom(hasIngredient(6)) || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(12)) >> atom(hasPrepTime(2)) || atom(hasCategory(1)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(12))  || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCategory(3))  >> atom(hasPrepTime(1)) || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> not atom(hasCost(3))  >> atom(hasCost(3)) || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(12))  || not atom(hasPrep(3))  ; 
  atom(hasPrepTime(2)) >> not atom(hasPrep(0))  >> atom(hasPrep(7)) || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(4)) >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCategory(3))  >> atom(hasPrepTime(1)) || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> not atom(hasCost(3))  >> not atom(hasIngredient(12))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(12))  || not atom(hasPrep(3))  ; 
  atom(hasPrepTime(2)) >> not atom(hasPrep(0))  >> atom(hasIngredient(1)) || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> atom(hasPrepTime(1)) >> atom(hasPrep(3)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(12)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(8)) >> atom(hasPrep(4)) >> not atom(hasIngredient(5))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(2))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(4)) >> atom(hasDifficulty(1)) || not atom(hasIngredient(7))  ; 
  atom(hasPrepTime(2)) >> atom(hasIngredient(3)) >> not atom(hasCategory(5))  || atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  || atom(hasCategory(1)) ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(3))  || atom(hasCategory(5)) ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(12)) >> not atom(hasCategory(5))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(9)) >> not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasPrep(2))  || not atom(hasIngredient(3))  ; 
  atom(hasCost(4)) >> atom(hasPrep(3)) >> not atom(hasIngredient(3))  || not atom(hasCategory(5))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(3))  || atom(hasCategory(5)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(5))  >> atom(hasCategory(1)) || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> not atom(hasPrep(2))  || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(3)) >> atom(hasPrep(3)) >> not atom(hasCategory(5))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(3))  || atom(hasCategory(5)) ; 
  atom(hasPrep(2)) >> atom(hasPrep(0)) >> atom(hasCategory(1)) || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasPrep(2))  || not atom(hasPrep(4))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(1)) >> not atom(hasIngredient(9))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(3))  || atom(hasCategory(5)) ; 
  atom(hasIngredient(6)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(1)) || not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasPrep(2))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(1)) >> not atom(hasIngredient(9))  || not atom(hasDifficulty(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(3))  || atom(hasCategory(5)) ; 
  atom(hasPrep(2)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(1)) || not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> not atom(hasPrep(1))  || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(3)) >> not atom(hasCategory(5))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(2))  >> not atom(hasCost(3))  || atom(hasCategory(5)) ; 
  atom(hasPrep(2)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(1)) || not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> atom(hasDifficulty(4)) >> atom(hasPrepTime(1)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(6)) >> atom(hasCost(3)) || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(6)) >> not atom(hasPrep(6))  || not atom(hasCategory(5))  ; 
  atom(hasIngredient(1)) >> atom(hasPrep(2)) >> not atom(hasCost(4))  || not atom(hasDifficulty(4))  ; 
  atom(hasIngredient(3)) >> atom(hasCategory(5)) >> not atom(hasPrep(2))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(2)) >> atom(hasPrepTime(1)) >> not atom(hasIngredient(9))  || not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasIngredient(3))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(6)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(1)) || atom(hasCost(3)) ; 
  atom(hasIngredient(1)) >> not atom(hasDifficulty(4))  || not atom(hasPrep(4))  ; 
  atom(hasIngredient(3)) >> not atom(hasCategory(3))  >> atom(hasPrepTime(1)) || atom(hasDifficulty(2)) ; 
  atom(hasIngredient(10)) >> not atom(hasIngredient(3))  || not atom(hasCategory(5))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(12)) >> not atom(hasCost(4))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(1)) >> not atom(hasPrep(5))  || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(12)) >> not atom(hasCost(4))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(2))  >> atom(hasIngredient(7)) || not atom(hasPrep(4))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(3)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(1)) >> not atom(hasPrep(5))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> not atom(hasCost(4))  || not atom(hasCategory(5))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(1)) >> not atom(hasPrepTime(2))  || atom(hasPrepTime(2)) ; 
  atom(hasIngredient(3)) >> not atom(hasCost(3))  >> not atom(hasIngredient(12))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(1)) >> not atom(hasPrep(5))  || not atom(hasIngredient(3))  ; 
  atom(hasCategory(5)) >> atom(hasCost(4)) >> not atom(hasDifficulty(4))  || not atom(hasIngredient(8))  ; 
  atom(hasPrep(4)) >> not atom(hasCost(3))  >> not atom(hasIngredient(12))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(7))  >> not atom(hasPrep(5))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasDifficulty(4))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(12)) >> not atom(hasCost(4))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(7))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(4))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(12)) >> not atom(hasCost(4))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(7))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(2)) >> atom(hasCost(1)) >> not atom(hasPrepTime(2))  || not atom(hasPrep(6))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(4))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(12)) >> not atom(hasCost(4))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(7))  >> not atom(hasIngredient(7))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(6)) >> atom(hasPrepTime(1)) >> atom(hasCost(3)) || not atom(hasIngredient(12))  
}.
