asprin_vL version 1.0
Reading from stdin
-:1257:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1282:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1363:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1637:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1814:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2015:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2019:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2025:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2124:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2150:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2270:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2326:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1174:1-16: info: no atoms over signature occur in program:
  output/3

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1168:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1169:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1199:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(51,better,42) output(23,better,72) output(23,better,41) output(51,better,72) output(23,better,18) output(51,better,23) output(51,better,18) output(23,better,90) output(51,better,90) output(51,better,41) output(51,better,78) output(31,worse,79) output(42,worse,23) output(90,worse,78) output(18,worse,78) output(60,worse,23) output(72,worse,78) output(4,worse,78) output(42,worse,78) output(60,worse,78) output(72,eq,18) output(18,eq,90) output(92,eq,37) output(60,eq,42) output(42,eq,72) output(72,eq,41) output(32,eq,76) output(4,eq,18) output(42,eq,41) output(60,eq,72) output(72,eq,90) output(4,eq,90) output(42,eq,18) output(60,eq,18) output(42,eq,90) output(60,eq,90) output(23,eq,78) output(60,eq,41)
Optimization: 27 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(51,better,42) output(23,better,72) output(32,better,76) output(23,better,41) output(51,better,72) output(23,better,18) output(51,better,23) output(51,better,18) output(23,better,90) output(51,better,90) output(51,better,41) output(51,better,78) output(42,worse,23) output(90,worse,78) output(18,worse,78) output(60,worse,23) output(72,worse,78) output(4,worse,78) output(42,worse,78) output(60,worse,78) output(31,eq,79) output(72,eq,18) output(18,eq,90) output(92,eq,37) output(60,eq,42) output(42,eq,72) output(72,eq,41) output(4,eq,18) output(42,eq,41) output(60,eq,72) output(72,eq,90) output(4,eq,90) output(42,eq,18) output(60,eq,18) output(42,eq,90) output(60,eq,90) output(23,eq,78) output(60,eq,41)
Optimization: 26 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(10))),()) preference(1,(1,6),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(23,better,72) output(32,better,76) output(23,better,41) output(51,better,72) output(23,better,18) output(51,better,23) output(51,better,18) output(23,better,90) output(51,better,90) output(51,better,41) output(51,better,78) output(42,worse,23) output(90,worse,78) output(18,worse,78) output(60,worse,23) output(72,worse,78) output(4,worse,78) output(42,worse,78) output(60,worse,78) output(72,eq,18) output(18,eq,90) output(92,eq,37) output(60,eq,42) output(42,eq,72) output(72,eq,41) output(4,eq,18) output(42,eq,41) output(60,eq,72) output(72,eq,90) output(4,eq,90) output(42,eq,18) output(60,eq,18) output(42,eq,90) output(60,eq,90) output(23,eq,78) output(60,eq,41)
Optimization: 25 6
Answer: 4
preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(51,better,42) output(42,better,23) output(72,better,18) output(90,better,78) output(60,better,42) output(51,better,72) output(60,better,72) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(51,better,90) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78) output(23,worse,72) output(18,worse,90) output(92,worse,37) output(23,worse,41) output(18,worse,78) output(72,worse,90) output(4,worse,90) output(23,worse,90) output(42,worse,90) output(60,worse,90) output(23,worse,78) output(31,eq,79) output(72,eq,41) output(23,eq,18) output(72,eq,78)
Optimization: 21 4
Answer: 5
preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(72,better,18) output(90,better,78) output(60,better,42) output(51,better,72) output(60,better,72) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(51,better,90) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78) output(23,worse,72) output(18,worse,90) output(92,worse,37) output(23,worse,41) output(18,worse,78) output(72,worse,90) output(4,worse,90) output(23,worse,90) output(42,worse,90) output(60,worse,90) output(23,worse,78) output(72,eq,41) output(23,eq,18) output(72,eq,78)
Optimization: 20 4
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(72,better,18) output(90,better,78) output(60,better,42) output(51,better,72) output(60,better,72) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(51,better,90) output(72,better,78) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78) output(23,worse,72) output(18,worse,90) output(92,worse,37) output(23,worse,41) output(18,worse,78) output(4,worse,90) output(23,worse,90) output(42,worse,90) output(23,worse,78) output(72,eq,41) output(23,eq,18)
Optimization: 19 4
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(72,better,18) output(90,better,78) output(60,better,42) output(51,better,72) output(60,better,72) output(23,better,18) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(51,better,90) output(72,better,78) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78) output(23,worse,72) output(18,worse,90) output(92,worse,37) output(23,worse,41) output(18,worse,78) output(4,worse,90) output(72,eq,41)
Optimization: 18 4
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(72,better,18) output(90,better,78) output(60,better,42) output(32,better,76) output(51,better,72) output(60,better,72) output(23,better,18) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(51,better,90) output(72,better,78) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78) output(23,worse,72) output(18,worse,90) output(92,worse,37) output(23,worse,41) output(18,worse,78) output(72,worse,90) output(23,worse,90) output(72,eq,41)
Optimization: 17 4
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,3),3,for(atom(hasPrep(7))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(23,better,72) output(72,better,18) output(18,better,90) output(90,better,78) output(92,better,37) output(60,better,42) output(42,better,72) output(72,better,41) output(32,better,76) output(4,better,18) output(23,better,41) output(42,better,41) output(51,better,72) output(60,better,72) output(18,better,78) output(72,better,90) output(4,better,90) output(23,better,18) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(23,better,90) output(42,better,90) output(51,better,90) output(60,better,90) output(72,better,78) output(4,better,78) output(23,better,78) output(42,better,78) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(23,better,72) output(72,better,18) output(18,better,90) output(90,better,78) output(92,better,37) output(60,better,42) output(42,better,72) output(72,better,41) output(32,better,76) output(4,better,18) output(23,better,41) output(42,better,41) output(51,better,72) output(60,better,72) output(18,better,78) output(72,better,90) output(4,better,90) output(23,better,18) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(23,better,90) output(42,better,90) output(51,better,90) output(60,better,90) output(72,better,78) output(4,better,78) output(23,better,78) output(42,better,78) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasPrep(7))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,aso) output(31,better,79) output(51,better,42) output(42,better,23) output(23,better,72) output(72,better,18) output(18,better,90) output(90,better,78) output(92,better,37) output(60,better,42) output(42,better,72) output(72,better,41) output(32,better,76) output(4,better,18) output(23,better,41) output(42,better,41) output(51,better,72) output(60,better,72) output(18,better,78) output(72,better,90) output(4,better,90) output(23,better,18) output(42,better,18) output(51,better,23) output(60,better,23) output(51,better,18) output(60,better,18) output(23,better,90) output(42,better,90) output(51,better,90) output(60,better,90) output(72,better,78) output(4,better,78) output(23,better,78) output(42,better,78) output(51,better,41) output(60,better,41) output(51,better,78) output(60,better,78)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 11
  Optimum    : yes
Optimization : 0 4
Calls        : 1
Time         : 18.506s (Solving: 10.27s 1st Model: 0.57s Unsat: 8.45s)
CPU Time     : 49.084s
Threads      : 4        (Winner: 1)

Choices      : 114249   (Domain: 395)
Conflicts    : 18730    (Analyzed: 18725)
Restarts     : 47       (Average: 398.40 Last: 2071)
Model-Level  : 818.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 36603    (Deleted: 2492)
  Binary     : 1941     (Ratio:   5.30%)
  Ternary    : 5671     (Ratio:  15.49%)
  Conflict   : 18723    (Average Length:  119.6 Ratio:  51.15%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 17880    (Average Length:   68.5 Ratio:  48.85%) 
  Distributed: 6031     (Ratio:  32.21% Average LBD: 3.00) 
  Integrated : 18084    (Ratio: 299.85% Unit: 397 Average Jumps: 20.72)
Backjumps    : 18725    (Average:  5.29 Max: 1287 Sum:  99131)
  Executed   : 18705    (Average:  5.27 Max: 1287 Sum:  98685 Ratio:  99.55%)
  Bounded    : 20       (Average: 22.30 Max:  37 Sum:    446 Ratio:   0.45%)

Rules        : 3669142 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 610308  
Bodies       : 751334  
  Count      : 1392    
Equivalences : 1856502  (Atom=Atom: 546722 Body=Body: 596667 Other: 713113)
Tight        : Yes
Variables    : 100945   (Eliminated:    0 Frozen: 35665)
Constraints  : 3210970  (Binary:  96.9% Ternary:   2.9% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasPrep(3)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasCategory(2)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(2)) ; 
  atom(hasIngredient(8)) >> atom(hasCost(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasCategory(2)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasPrep(3)) >> atom(hasCategory(2)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(10)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasCost(1))  || not atom(hasPrep(1))  ; 
  atom(hasPrep(4)) >> not atom(hasIngredient(3))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(9)) ; 
  atom(hasCategory(2)) >> not atom(hasCost(2))  >> not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasCost(1))  || not atom(hasPrep(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(3))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(9)) ; 
  atom(hasCategory(2)) >> not atom(hasCost(2))  >> not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasIngredient(3))  || not atom(hasPrep(5))  ; 
  atom(hasCost(2)) >> not atom(hasCost(1))  || not atom(hasPrep(1))  ; 
  atom(hasCategory(2)) >> not atom(hasCost(2))  >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasIngredient(3))  || not atom(hasCost(3))  ; 
  atom(hasCost(2)) >> not atom(hasCost(1))  || not atom(hasPrep(1))  ; 
  atom(hasCategory(2)) >> not atom(hasCost(2))  >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasIngredient(3))  || not atom(hasCost(1))  ; 
  atom(hasCost(2)) >> not atom(hasCost(1))  || not atom(hasCost(3))  ; 
  atom(hasCategory(2)) >> not atom(hasCost(2))  >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(1)) >> atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasPrep(7)) >> not atom(hasDifficulty(4))  || not atom(hasCost(1))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(5)) >> atom(hasPrep(7)) || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(4)) >> atom(hasCategory(3)) >> not atom(hasCost(3))  || not atom(hasPrep(0))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrepTime(1)) >> not atom(hasDifficulty(2))  || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(4)) >> atom(hasCost(3)) >> not atom(hasCategory(3))  || not atom(hasCost(1))  ; 
  atom(hasCost(3)) >> atom(hasPrep(7)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasPrep(7)) >> not atom(hasDifficulty(4))  || not atom(hasCost(1))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(2)) >> not atom(hasPrep(0))  || not atom(hasPrep(7))  ; 
  atom(hasCost(1)) >> atom(hasCost(3)) >> not atom(hasCategory(3))  || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(1)) >> atom(hasDifficulty(1)) || not atom(hasPrep(1))  ; 
  atom(hasCost(3)) >> atom(hasPrep(7)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasCost(3)) >> not atom(hasCategory(3))  || not atom(hasCost(1))  ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(7)) || not atom(hasCategory(1))  ; 
  atom(hasPrep(0)) >> atom(hasCategory(4)) >> atom(hasCategory(5)) || not atom(hasPrep(7))  ; 
  atom(hasIngredient(3)) >> atom(hasPrep(7)) >> not atom(hasCategory(3))  || not atom(hasCost(1))  
}.
