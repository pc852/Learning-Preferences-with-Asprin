asprin_vL version 1.0
Reading from stdin
-:1224:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1234:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1249:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1330:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1591:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1604:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1781:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1910:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1982:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1986:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1986:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1992:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2091:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2117:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2237:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2271:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2293:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1141:1-16: info: no atoms over signature occur in program:
  output/3

-:1133:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1134:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(96,eq,20) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(26,eq,74) output(74,eq,28) output(2,eq,3) output(3,eq,20) output(7,eq,74) output(74,eq,86) output(86,eq,76) output(79,eq,28) output(74,eq,76) output(26,eq,86) output(7,eq,86) output(2,eq,20) output(26,eq,28) output(7,eq,28) output(20,eq,98) output(96,eq,52) output(3,eq,52) output(2,eq,52) output(96,eq,98) output(3,eq,98) output(2,eq,98) output(26,eq,76) output(7,eq,76)
Optimization: 27 0
Answer: 2
preference(1,(1,14),1,for(atom(hasIngredient(12))),1) preference(1,less(weight)) output(26,better,28) output(2,better,98) output(3,better,98) output(79,better,28) output(96,better,98) output(7,better,28) output(20,better,98) output(52,better,98) output(74,better,28) output(96,eq,20) output(20,eq,52) output(8,eq,41) output(26,eq,74) output(2,eq,3) output(3,eq,20) output(7,eq,74) output(74,eq,86) output(86,eq,76) output(74,eq,76) output(26,eq,86) output(7,eq,86) output(2,eq,20) output(96,eq,52) output(3,eq,52) output(2,eq,52) output(26,eq,76) output(7,eq,76)
Optimization: 18 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasIngredient(12))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasDifficulty(3))),6) preference(1,(1,5),1,for(atom(hasIngredient(11))),8) preference(1,(1,6),1,for(atom(hasIngredient(1))),8) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),1) preference(1,(1,9),1,for(atom(hasPrep(3))),8) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasCategory(5))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasCategory(4))),6) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),3) preference(1,(1,6),1,for(atom(hasCost(1))),3) preference(1,(1,7),1,for(atom(hasIngredient(3))),2) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasCategory(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasCost(3))),2) preference(1,(1,14),1,for(atom(hasIngredient(12))),5) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 13
Answer: 5
preference(1,(1,2),1,for(atom(hasIngredient(4))),8) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasIngredient(12))),7) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasIngredient(4))),8) preference(1,(1,6),1,for(atom(hasCost(1))),2) preference(1,(1,7),1,for(atom(hasIngredient(12))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasIngredient(3))),6) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,12),1,for(atom(hasCategory(5))),3) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 11
Answer: 7
preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasIngredient(12))),6) preference(1,(1,10),1,for(atom(hasIngredient(3))),2) preference(1,(1,12),1,for(atom(hasCost(3))),1) preference(1,(1,13),1,for(atom(hasCategory(4))),4) preference(1,(1,14),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 9
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,2),1,for(atom(hasCategory(5))),5) preference(1,(1,3),1,for(atom(hasCost(1))),2) preference(1,(1,4),1,for(atom(hasIngredient(12))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 6
Progression : 0 [3;6] (Error: 1)
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),1) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasCategory(5))),6) preference(1,less(weight)) output(26,better,74) output(26,better,86) output(26,better,28) output(26,better,76) output(8,better,41) output(2,better,3) output(2,better,20) output(2,better,52) output(2,better,98) output(3,better,20) output(3,better,52) output(3,better,98) output(79,better,28) output(96,better,20) output(96,better,52) output(96,better,98) output(7,better,74) output(7,better,86) output(7,better,28) output(7,better,76) output(20,better,52) output(20,better,98) output(52,better,98) output(74,better,28) output(74,better,86) output(74,better,76) output(86,better,76)
Optimization: 0 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.050 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 598.015s (Solving: 595.51s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2384.321s
Threads      : 4        (Winner: 4)

Choices      : 12460511 (Domain: 345128)
Conflicts    : 8311314  (Analyzed: 8311311)
Restarts     : 7511     (Average: 1106.55 Last: 127527)
Model-Level  : 58.9    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 8333548  (Deleted: 7998782)
  Binary     : 376      (Ratio:   0.00%)
  Ternary    : 689      (Ratio:   0.01%)
  Conflict   : 8311311  (Average Length:  442.9 Ratio:  99.73%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 22237    (Average Length:  102.4 Ratio:   0.27%) 
  Distributed: 7413     (Ratio:   0.09% Average LBD: 3.88) 
  Integrated : 22239    (Ratio: 300.00% Unit: 11 Average Jumps: 4.64)
Backjumps    : 8311311  (Average:  1.36 Max: 753 Sum: 11340729)
  Executed   : 8311310  (Average:  1.36 Max: 753 Sum: 11340709 Ratio: 100.00%)
  Bounded    : 1        (Average: 20.00 Max:  20 Sum:     20 Ratio:   0.00%)

Rules        : 352493  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13248   
Bodies       : 18826   
  Sum        : 54      
  Count      : 14      
Equivalences : 6795     (Atom=Atom: 283 Body=Body: 122 Other: 6390)
Tight        : Yes
Variables    : 17027    (Eliminated:    0 Frozen: 7703)
Constraints  : 375066   (Binary:  96.6% Ternary:   2.5% Other:   0.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(11)) ; 
  8 :: atom(hasIngredient(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCategory(5)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCost(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCategory(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCost(3)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCategory(5)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(5)) 
}.
