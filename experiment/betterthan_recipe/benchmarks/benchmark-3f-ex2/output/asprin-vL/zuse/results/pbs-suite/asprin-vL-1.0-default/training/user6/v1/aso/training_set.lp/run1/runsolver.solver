asprin_vL version 1.0
Reading from stdin
-:1342:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1367:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1448:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1722:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1899:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2100:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2104:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2104:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2110:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2209:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2235:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2355:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2389:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2411:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1259:1-16: info: no atoms over signature occur in program:
  output/3

-:1251:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1252:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1253:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1254:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1284:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(60,better,78) output(39,better,79) output(78,better,52) output(76,better,42) output(60,better,32) output(37,better,72) output(42,better,41) output(37,better,92) output(76,better,41) output(46,better,32) output(18,better,42) output(60,better,52) output(60,better,7) output(78,better,33) output(76,better,78) output(60,better,33) output(46,better,33) output(78,better,32) output(60,better,79) output(46,better,52) output(42,better,52) output(4,better,52) output(42,better,32) output(76,better,32) output(4,better,32) output(60,better,72) output(18,better,41) output(4,better,41) output(60,better,92) output(76,better,92) output(18,better,92) output(76,better,72) output(18,better,72) output(18,better,32) output(76,better,52) output(18,better,52) output(76,better,79) output(18,better,79) output(76,better,7) output(18,better,7) output(42,better,33) output(76,better,33) output(18,better,33) output(4,better,33) output(18,better,78) output(46,worse,60) output(32,worse,7) output(7,worse,39) output(4,worse,18) output(41,worse,60) output(32,worse,37) output(4,worse,76) output(32,worse,72) output(33,worse,37) output(42,worse,60) output(32,worse,39) output(33,worse,7) output(41,worse,78) output(4,worse,60) output(41,worse,7) output(52,worse,7) output(32,worse,79) output(33,worse,79) output(33,worse,39) output(46,worse,39) output(41,worse,39) output(52,worse,39) output(46,worse,37) output(41,worse,37) output(42,worse,37) output(4,worse,37) output(52,worse,37) output(78,worse,37) output(33,worse,72) output(41,worse,72) output(52,worse,72) output(32,worse,92) output(33,worse,92) output(41,worse,92) output(52,worse,92) output(78,worse,39) output(42,worse,39) output(4,worse,39) output(41,worse,79) output(52,worse,79) output(4,eq,46) output(52,eq,33) output(33,eq,32) output(18,eq,76) output(72,eq,92) output(60,eq,37) output(41,eq,32) output(52,eq,32) output(41,eq,33) output(78,eq,7) output(41,eq,52) output(60,eq,39) output(4,eq,42) output(76,eq,60) output(18,eq,60) output(46,eq,72) output(46,eq,92) output(42,eq,92) output(4,eq,92) output(42,eq,72) output(4,eq,72) output(76,eq,37) output(18,eq,37) output(76,eq,39) output(18,eq,39) output(46,eq,79) output(42,eq,79) output(4,eq,79)
Optimization: 78 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCost(5))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(46,better,60) output(60,better,78) output(32,better,7) output(60,better,32) output(72,better,92) output(37,better,92) output(60,better,37) output(46,better,32) output(32,better,39) output(60,better,52) output(60,better,7) output(46,better,78) output(41,better,78) output(42,better,78) output(76,better,78) output(60,better,33) output(46,better,33) output(41,better,33) output(46,better,7) output(41,better,7) output(42,better,7) output(32,better,79) output(60,better,79) output(46,better,52) output(41,better,52) output(42,better,52) output(60,better,39) output(46,better,39) output(41,better,39) output(46,better,37) output(46,better,72) output(32,better,92) output(60,better,92) output(46,better,92) output(41,better,92) output(42,better,92) output(76,better,92) output(18,better,92) output(42,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(42,better,79) output(76,better,79) output(18,better,79) output(76,better,7) output(18,better,7) output(42,better,33) output(76,better,33) output(18,better,33) output(18,better,78) output(4,worse,46) output(33,worse,32) output(4,worse,18) output(41,worse,60) output(37,worse,72) output(4,worse,76) output(32,worse,72) output(33,worse,37) output(42,worse,60) output(52,worse,32) output(4,worse,60) output(78,worse,32) output(4,worse,42) output(76,worse,60) output(18,worse,60) output(4,worse,32) output(4,worse,37) output(52,worse,37) output(78,worse,37) output(33,worse,72) output(41,worse,72) output(52,worse,72) output(4,worse,41) output(78,worse,72) output(42,worse,72) output(4,worse,72) output(76,worse,72) output(18,worse,72) output(52,eq,33) output(39,eq,79) output(78,eq,52) output(7,eq,39) output(76,eq,42) output(32,eq,37) output(42,eq,41) output(76,eq,41) output(41,eq,32) output(7,eq,79) output(33,eq,7) output(78,eq,33) output(4,eq,78) output(4,eq,7) output(52,eq,7) output(78,eq,7) output(33,eq,79) output(4,eq,52) output(33,eq,39) output(52,eq,39) output(42,eq,32) output(76,eq,32) output(41,eq,37) output(42,eq,37) output(60,eq,72) output(33,eq,92) output(4,eq,92) output(52,eq,92) output(78,eq,92) output(76,eq,37) output(78,eq,39) output(4,eq,39) output(4,eq,79) output(52,eq,79) output(78,eq,79) output(4,eq,33)
Optimization: 69 6
Answer: 3
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(4,better,46) output(46,better,60) output(32,better,7) output(39,better,79) output(76,better,42) output(41,better,60) output(37,better,72) output(72,better,92) output(37,better,92) output(76,better,41) output(18,better,42) output(33,better,7) output(4,better,60) output(76,better,78) output(4,better,78) output(46,better,7) output(41,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(4,better,52) output(4,better,42) output(76,better,60) output(18,better,60) output(76,better,32) output(4,better,32) output(18,better,41) output(4,better,41) output(32,better,92) output(33,better,92) output(46,better,92) output(41,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(4,better,72) output(76,better,72) output(18,better,72) output(18,better,32) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(76,better,33) output(18,better,33) output(4,better,33) output(18,better,78) output(60,worse,78) output(7,worse,39) output(60,worse,32) output(32,worse,37) output(42,worse,41) output(33,worse,37) output(60,worse,37) output(60,worse,52) output(42,worse,78) output(60,worse,33) output(42,worse,52) output(60,worse,39) output(42,worse,32) output(46,worse,37) output(41,worse,37) output(42,worse,37) output(52,worse,37) output(78,worse,37) output(60,worse,72) output(42,worse,72) output(42,worse,39) output(42,worse,33) output(52,eq,33) output(33,eq,32) output(78,eq,52) output(4,eq,18) output(18,eq,76) output(4,eq,76) output(32,eq,72) output(46,eq,32) output(41,eq,32) output(42,eq,60) output(32,eq,39) output(7,eq,79) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(46,eq,78) output(41,eq,78) output(46,eq,33) output(41,eq,33) output(78,eq,32) output(42,eq,7) output(60,eq,79) output(46,eq,52) output(41,eq,52) output(33,eq,39) output(46,eq,39) output(41,eq,39) output(52,eq,39) output(4,eq,37) output(33,eq,72) output(46,eq,72) output(41,eq,72) output(52,eq,72) output(60,eq,92) output(42,eq,92) output(78,eq,72) output(76,eq,37) output(18,eq,37) output(78,eq,39) output(42,eq,79)
Optimization: 62 4
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(4,better,46) output(46,better,60) output(33,better,32) output(32,better,7) output(39,better,79) output(78,better,52) output(76,better,42) output(41,better,60) output(32,better,37) output(72,better,92) output(76,better,41) output(33,better,37) output(18,better,42) output(33,better,7) output(4,better,60) output(78,better,32) output(46,better,7) output(41,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(4,better,52) output(33,better,39) output(4,better,42) output(76,better,60) output(18,better,60) output(76,better,32) output(4,better,32) output(46,better,37) output(41,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(33,better,72) output(18,better,41) output(4,better,41) output(32,better,92) output(33,better,92) output(46,better,92) output(41,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(78,better,72) output(4,better,72) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(78,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(60,worse,78) output(52,worse,33) output(7,worse,39) output(60,worse,32) output(37,worse,72) output(42,worse,41) output(60,worse,52) output(46,worse,78) output(41,worse,78) output(42,worse,78) output(60,worse,33) output(46,worse,33) output(41,worse,33) output(42,worse,52) output(60,worse,39) output(42,worse,32) output(60,worse,72) output(42,worse,72) output(42,worse,39) output(42,worse,33) output(4,eq,18) output(18,eq,76) output(37,eq,92) output(4,eq,76) output(32,eq,72) output(60,eq,37) output(46,eq,32) output(41,eq,32) output(42,eq,60) output(32,eq,39) output(7,eq,79) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(76,eq,78) output(4,eq,78) output(42,eq,7) output(60,eq,79) output(46,eq,52) output(41,eq,52) output(46,eq,39) output(41,eq,39) output(52,eq,39) output(42,eq,37) output(46,eq,72) output(41,eq,72) output(52,eq,72) output(60,eq,92) output(42,eq,92) output(42,eq,79) output(76,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 54 4
Answer: 5
preference(1,(1,2),0,for(atom(hasIngredient(1))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,aso) output(46,better,60) output(32,better,7) output(39,better,79) output(76,better,42) output(41,better,60) output(32,better,37) output(72,better,92) output(76,better,41) output(33,better,37) output(46,better,32) output(18,better,42) output(33,better,7) output(46,better,78) output(4,better,60) output(76,better,78) output(4,better,78) output(46,better,33) output(46,better,7) output(41,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(46,better,52) output(4,better,52) output(46,better,39) output(4,better,42) output(76,better,60) output(18,better,60) output(76,better,32) output(4,better,32) output(46,better,37) output(41,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(46,better,72) output(18,better,41) output(4,better,41) output(32,better,92) output(33,better,92) output(46,better,92) output(41,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(4,better,72) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(76,better,33) output(18,better,33) output(4,better,33) output(18,better,78) output(60,worse,78) output(7,worse,39) output(60,worse,32) output(37,worse,72) output(42,worse,41) output(60,worse,52) output(42,worse,78) output(60,worse,33) output(42,worse,52) output(60,worse,39) output(42,worse,32) output(60,worse,72) output(42,worse,72) output(42,worse,39) output(42,worse,33) output(4,eq,46) output(52,eq,33) output(33,eq,32) output(78,eq,52) output(4,eq,18) output(18,eq,76) output(37,eq,92) output(4,eq,76) output(32,eq,72) output(60,eq,37) output(41,eq,32) output(42,eq,60) output(32,eq,39) output(7,eq,79) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(41,eq,78) output(41,eq,33) output(78,eq,32) output(42,eq,7) output(60,eq,79) output(41,eq,52) output(33,eq,39) output(41,eq,39) output(52,eq,39) output(42,eq,37) output(33,eq,72) output(41,eq,72) output(52,eq,72) output(60,eq,92) output(42,eq,92) output(78,eq,72) output(78,eq,39) output(42,eq,79)
Optimization: 50 3
Progression : [ 1;50] (Error: 49)
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(atom(hasIngredient(5))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(4,better,46) output(33,better,32) output(39,better,79) output(7,better,39) output(60,better,32) output(37,better,72) output(18,better,76) output(42,better,41) output(37,better,92) output(76,better,41) output(4,better,76) output(33,better,37) output(46,better,32) output(42,better,60) output(7,better,79) output(33,better,7) output(52,better,32) output(4,better,60) output(78,better,32) output(42,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(60,better,79) output(33,better,39) output(60,better,39) output(46,better,39) output(52,better,39) output(18,better,60) output(42,better,32) output(76,better,32) output(4,better,32) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(33,better,72) output(60,better,72) output(46,better,72) output(52,better,72) output(18,better,41) output(4,better,41) output(33,better,92) output(60,better,92) output(46,better,92) output(42,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(78,better,72) output(42,better,72) output(4,better,72) output(76,better,72) output(18,better,72) output(18,better,37) output(18,better,32) output(78,better,39) output(42,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(18,better,7) output(60,worse,78) output(76,worse,42) output(41,worse,60) output(32,worse,37) output(60,worse,52) output(46,worse,78) output(41,worse,78) output(76,worse,78) output(60,worse,33) output(46,worse,33) output(41,worse,33) output(46,worse,52) output(41,worse,52) output(41,worse,37) output(76,worse,52) output(76,worse,33) output(46,eq,60) output(52,eq,33) output(78,eq,52) output(4,eq,18) output(72,eq,92) output(32,eq,72) output(60,eq,37) output(41,eq,32) output(18,eq,42) output(78,eq,33) output(42,eq,78) output(4,eq,78) output(42,eq,52) output(4,eq,52) output(4,eq,42) output(76,eq,60) output(46,eq,37) output(41,eq,72) output(32,eq,92) output(41,eq,92) output(76,eq,37) output(18,eq,52) output(42,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 49 3
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(4,better,46) output(33,better,32) output(39,better,79) output(7,better,39) output(60,better,32) output(18,better,76) output(42,better,41) output(76,better,41) output(4,better,76) output(33,better,37) output(60,better,37) output(46,better,32) output(41,better,32) output(42,better,60) output(7,better,79) output(33,better,7) output(52,better,32) output(4,better,60) output(42,better,78) output(4,better,78) output(78,better,32) output(42,better,7) output(4,better,7) output(52,better,7) output(33,better,79) output(60,better,79) output(33,better,39) output(60,better,39) output(46,better,39) output(52,better,39) output(18,better,60) output(42,better,32) output(76,better,32) output(4,better,32) output(46,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(33,better,72) output(60,better,72) output(46,better,72) output(52,better,72) output(18,better,41) output(4,better,41) output(33,better,92) output(60,better,92) output(46,better,92) output(42,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(42,better,72) output(4,better,72) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(78,better,39) output(42,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(18,better,7) output(18,better,78) output(32,worse,7) output(78,worse,52) output(76,worse,42) output(41,worse,60) output(32,worse,37) output(32,worse,72) output(32,worse,39) output(60,worse,52) output(78,worse,33) output(60,worse,33) output(46,worse,33) output(41,worse,33) output(46,worse,52) output(41,worse,52) output(32,worse,92) output(76,worse,52) output(76,worse,33) output(46,eq,60) output(52,eq,33) output(4,eq,18) output(72,eq,92) output(18,eq,42) output(78,eq,7) output(32,eq,79) output(42,eq,52) output(4,eq,52) output(4,eq,42) output(76,eq,60) output(41,eq,72) output(41,eq,92) output(18,eq,52) output(42,eq,33) output(18,eq,33) output(4,eq,33)
Optimization: 48 3
Progression : [ 2;48] (Error: 23)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),0,for(atom(hasPrep(1))),()) preference(1,(1,5),0,for(atom(hasPrep(1))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasCategory(2))),()) preference(1,(1,4),3,for(atom(hasCategory(3))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(46,better,60) output(60,better,78) output(52,better,33) output(7,better,39) output(76,better,42) output(60,better,32) output(32,better,37) output(42,better,41) output(72,better,92) output(76,better,41) output(33,better,37) output(60,better,37) output(46,better,32) output(18,better,42) output(32,better,39) output(60,better,52) output(7,better,79) output(60,better,7) output(46,better,78) output(41,better,78) output(42,better,78) output(76,better,78) output(60,better,33) output(46,better,33) output(41,better,33) output(46,better,7) output(42,better,7) output(32,better,79) output(60,better,79) output(46,better,52) output(42,better,52) output(33,better,39) output(60,better,39) output(46,better,39) output(41,better,39) output(52,better,39) output(76,better,60) output(42,better,32) output(76,better,32) output(46,better,37) output(41,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(46,better,72) output(18,better,41) output(32,better,92) output(60,better,92) output(46,better,92) output(41,better,92) output(42,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(76,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(42,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(42,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(76,better,7) output(18,better,7) output(42,better,33) output(76,better,33) output(18,better,33) output(18,better,78) output(4,worse,46) output(33,worse,32) output(39,worse,79) output(78,worse,52) output(4,worse,18) output(41,worse,60) output(37,worse,72) output(18,worse,76) output(37,worse,92) output(4,worse,76) output(32,worse,72) output(42,worse,60) output(33,worse,7) output(4,worse,60) output(78,worse,32) output(4,worse,7) output(78,worse,7) output(4,worse,52) output(4,worse,42) output(4,worse,32) output(33,worse,72) output(41,worse,72) output(52,worse,72) output(4,worse,41) output(4,worse,92) output(78,worse,72) output(42,worse,72) output(4,worse,72) output(4,worse,33) output(32,eq,7) output(41,eq,32) output(52,eq,32) output(41,eq,7) output(52,eq,7) output(41,eq,52) output(18,eq,60) output(60,eq,72) output(18,eq,72)
Optimization: 47 6
Progression : [ 3;47] (Error: 14.6667)
Progression : [ 4;47] (Error: 10.75)
Progression : [ 5;47] (Error: 8.4)
Answer: 9
preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(4,better,46) output(33,better,32) output(32,better,7) output(4,better,18) output(32,better,37) output(42,better,41) output(4,better,76) output(32,better,72) output(33,better,37) output(60,better,37) output(42,better,60) output(32,better,39) output(33,better,7) output(60,better,7) output(52,better,32) output(4,better,60) output(42,better,78) output(4,better,78) output(46,better,7) output(41,better,7) output(42,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(60,better,79) output(33,better,39) output(60,better,39) output(46,better,39) output(41,better,39) output(52,better,39) output(42,better,32) output(4,better,32) output(46,better,37) output(41,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(33,better,72) output(60,better,72) output(46,better,72) output(41,better,72) output(52,better,72) output(4,better,41) output(32,better,92) output(33,better,92) output(60,better,92) output(46,better,92) output(41,better,92) output(42,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(78,better,72) output(42,better,72) output(4,better,72) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(78,better,39) output(42,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(78,worse,52) output(76,worse,42) output(18,worse,42) output(60,worse,52) output(78,worse,33) output(60,worse,33) output(46,worse,33) output(41,worse,33) output(46,worse,52) output(41,worse,52) output(76,worse,52) output(18,worse,52) output(76,worse,33) output(18,worse,33) output(46,eq,60) output(60,eq,78) output(52,eq,33) output(7,eq,39) output(41,eq,60) output(60,eq,32) output(18,eq,76) output(72,eq,92) output(76,eq,41) output(46,eq,32) output(41,eq,32) output(46,eq,78) output(41,eq,78) output(76,eq,78) output(78,eq,32) output(42,eq,52) output(4,eq,52) output(4,eq,42) output(76,eq,60) output(18,eq,60) output(76,eq,32) output(18,eq,41) output(18,eq,32) output(42,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 44 2
Progression : [ 6;44] (Error: 6.33333)
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(atom(hasIngredient(5))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(60,better,78) output(33,better,32) output(39,better,79) output(76,better,42) output(60,better,32) output(32,better,37) output(72,better,92) output(76,better,41) output(33,better,37) output(60,better,37) output(46,better,32) output(41,better,32) output(18,better,42) output(60,better,52) output(7,better,79) output(33,better,7) output(60,better,7) output(52,better,32) output(46,better,78) output(41,better,78) output(76,better,78) output(4,better,78) output(60,better,33) output(46,better,33) output(46,better,7) output(41,better,7) output(4,better,7) output(52,better,7) output(32,better,79) output(33,better,79) output(60,better,79) output(46,better,52) output(33,better,39) output(60,better,39) output(46,better,39) output(41,better,39) output(52,better,39) output(4,better,42) output(76,better,32) output(4,better,32) output(46,better,37) output(41,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(60,better,72) output(46,better,72) output(18,better,41) output(33,better,92) output(60,better,92) output(46,better,92) output(41,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(76,better,33) output(18,better,33) output(18,better,78) output(4,worse,46) output(78,worse,52) output(4,worse,18) output(41,worse,60) output(37,worse,72) output(42,worse,41) output(37,worse,92) output(4,worse,76) output(32,worse,72) output(42,worse,60) output(78,worse,33) output(4,worse,60) output(42,worse,52) output(78,worse,72) output(42,worse,72) output(42,worse,33) output(46,eq,60) output(52,eq,33) output(32,eq,7) output(7,eq,39) output(18,eq,76) output(32,eq,39) output(41,eq,33) output(78,eq,32) output(78,eq,7) output(41,eq,52) output(4,eq,52) output(76,eq,60) output(18,eq,60) output(33,eq,72) output(41,eq,72) output(52,eq,72) output(4,eq,41) output(42,eq,92) output(4,eq,72) output(78,eq,39) output(4,eq,33)
Optimization: 43 5
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,5),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(60,better,78) output(52,better,33) output(39,better,79) output(7,better,39) output(76,better,42) output(60,better,32) output(32,better,37) output(72,better,92) output(76,better,41) output(33,better,37) output(60,better,37) output(46,better,32) output(41,better,32) output(18,better,42) output(32,better,39) output(60,better,52) output(7,better,79) output(60,better,7) output(52,better,32) output(78,better,33) output(46,better,78) output(76,better,78) output(60,better,33) output(46,better,33) output(41,better,33) output(46,better,7) output(41,better,7) output(42,better,7) output(52,better,7) output(32,better,79) output(33,better,79) output(60,better,79) output(46,better,52) output(33,better,39) output(60,better,39) output(46,better,39) output(41,better,39) output(52,better,39) output(42,better,32) output(76,better,32) output(46,better,37) output(41,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(18,better,41) output(33,better,92) output(60,better,92) output(46,better,92) output(41,better,92) output(42,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(76,better,37) output(18,better,37) output(18,better,32) output(78,better,39) output(42,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(42,better,33) output(76,better,33) output(18,better,33) output(18,better,78) output(4,worse,46) output(4,worse,18) output(41,worse,60) output(37,worse,72) output(37,worse,92) output(4,worse,76) output(32,worse,72) output(42,worse,60) output(4,worse,60) output(4,worse,78) output(4,worse,52) output(4,worse,42) output(33,worse,72) output(41,worse,72) output(52,worse,72) output(4,worse,41) output(78,worse,72) output(42,worse,72) output(4,worse,72) output(46,eq,60) output(32,eq,7) output(18,eq,76) output(42,eq,41) output(41,eq,52) output(42,eq,52) output(76,eq,60) output(18,eq,60) output(60,eq,72) output(46,eq,72) output(76,eq,72) output(18,eq,72) output(4,eq,33)
Optimization: 42 5
Progression : [ 7;42] (Error: 5)
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasCategory(1))),()) preference(1,(1,2),3,for(atom(hasCost(1))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(5))),()) preference(1,aso) output(46,better,60) output(33,better,32) output(78,better,52) output(76,better,42) output(18,better,76) output(76,better,41) output(32,better,72) output(33,better,37) output(60,better,37) output(46,better,32) output(18,better,42) output(33,better,7) output(60,better,7) output(52,better,32) output(78,better,33) output(46,better,78) output(46,better,33) output(78,better,32) output(46,better,7) output(42,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(60,better,79) output(46,better,52) output(4,better,52) output(33,better,39) output(46,better,39) output(52,better,39) output(4,better,42) output(76,better,60) output(18,better,60) output(76,better,32) output(4,better,32) output(46,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(33,better,72) output(46,better,72) output(41,better,72) output(52,better,72) output(18,better,41) output(4,better,41) output(33,better,92) output(60,better,92) output(46,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(78,better,72) output(4,better,72) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(78,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(76,better,33) output(18,better,33) output(4,better,33) output(18,better,78) output(4,worse,46) output(60,worse,78) output(4,worse,18) output(37,worse,92) output(42,worse,60) output(41,worse,78) output(42,worse,78) output(41,worse,33) output(41,worse,52) output(42,worse,52) output(42,worse,92) output(42,worse,33) output(52,eq,33) output(41,eq,32) output(76,eq,78)
Optimization: 41 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasCategory(1))),()) preference(1,(1,2),3,for(atom(hasCost(1))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(46,better,60) output(33,better,32) output(78,better,52) output(76,better,42) output(18,better,76) output(76,better,41) output(32,better,72) output(33,better,37) output(60,better,37) output(46,better,32) output(18,better,42) output(33,better,7) output(60,better,7) output(52,better,32) output(78,better,33) output(46,better,78) output(46,better,33) output(78,better,32) output(46,better,7) output(42,better,7) output(4,better,7) output(52,better,7) output(78,better,7) output(32,better,79) output(33,better,79) output(60,better,79) output(46,better,52) output(4,better,52) output(33,better,39) output(46,better,39) output(52,better,39) output(4,better,42) output(76,better,60) output(18,better,60) output(76,better,32) output(4,better,32) output(46,better,37) output(42,better,37) output(4,better,37) output(52,better,37) output(78,better,37) output(33,better,72) output(46,better,72) output(41,better,72) output(52,better,72) output(18,better,41) output(4,better,41) output(32,better,92) output(33,better,92) output(60,better,92) output(46,better,92) output(41,better,92) output(42,better,92) output(4,better,92) output(76,better,92) output(18,better,92) output(52,better,92) output(78,better,92) output(78,better,72) output(4,better,72) output(76,better,72) output(18,better,72) output(76,better,37) output(18,better,37) output(18,better,32) output(78,better,39) output(4,better,39) output(76,better,39) output(18,better,39) output(76,better,52) output(18,better,52) output(46,better,79) output(41,better,79) output(42,better,79) output(4,better,79) output(76,better,79) output(18,better,79) output(52,better,79) output(78,better,79) output(76,better,7) output(18,better,7) output(76,better,33) output(18,better,33) output(4,better,33) output(18,better,78) output(60,worse,78) output(4,worse,18) output(42,worse,60) output(41,worse,78) output(42,worse,78) output(41,worse,33) output(41,worse,52) output(42,worse,52) output(42,worse,33) output(52,eq,33) output(41,eq,32) output(76,eq,78)
Optimization: 38 6
Progression : [ 8;38] (Error: 3.75)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.024 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 38 6
Bounds       : [8;38] [0;6]
Calls        : 1
Time         : 298.081s (Solving: 273.92s 1st Model: 1.39s Unsat: 0.00s)
CPU Time     : 1119.298s
Threads      : 4        (Winner: 4)

Choices      : 4890684  (Domain: 200225)
Conflicts    : 1002644  (Analyzed: 1002636)
Restarts     : 924      (Average: 1085.10 Last: 26238)
Model-Level  : 389.0   
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 1273643  (Deleted: 1014442)
  Binary     : 15223    (Ratio:   1.20%)
  Ternary    : 79689    (Ratio:   6.26%)
  Conflict   : 1002636  (Average Length:  400.5 Ratio:  78.72%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 271007   (Average Length:   68.1 Ratio:  21.28%) 
  Distributed: 90342    (Ratio:   9.01% Average LBD: 3.21) 
  Integrated : 271023   (Ratio: 300.00% Unit: 770 Average Jumps: 91.91)
Backjumps    : 1002636  (Average:  4.65 Max: 1282 Sum: 4659677)
  Executed   : 1002565  (Average:  4.64 Max: 1282 Sum: 4655117 Ratio:  99.90%)
  Bounded    : 71       (Average: 64.23 Max: 122 Sum:   4560 Ratio:   0.10%)

Rules        : 11712119
  Choice     : 25      
  Minimize   : 2       
Atoms        : 1898392 
Bodies       : 2233887 
  Count      : 4452    
Equivalences : 5828670  (Atom=Atom: 1725036 Body=Body: 1910092 Other: 2193542)
Tight        : Yes
Variables    : 173703   (Eliminated:    0 Frozen: 107403)
Constraints  : 9870738  (Binary:  98.3% Ternary:   1.5% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(11))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasPrep(4)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasCost(5)) ; 
  atom(hasPrep(3)) >> atom(hasPrep(4)) >> atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(12))  || not atom(hasPrep(7))  ; 
  not atom(hasCost(3))  >> atom(hasIngredient(7)) || atom(hasIngredient(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(7))  >> atom(hasDifficulty(2)) || atom(hasCategory(2)) ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(1))  || atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(12))  || not atom(hasCategory(5))  ; 
  not atom(hasCost(3))  >> atom(hasIngredient(7)) || atom(hasIngredient(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(7))  >> atom(hasDifficulty(2)) || atom(hasCategory(2)) ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(1))  || atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(6))  >> not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  || atom(hasIngredient(1)) ; 
  not atom(hasPrep(6))  || atom(hasCategory(2)) ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(12))  || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(6))  || atom(hasIngredient(5)) ; 
  not atom(hasPrep(6))  >> atom(hasIngredient(7)) || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(6))  || atom(hasCost(1)) ; 
  atom(hasCategory(1)) >> atom(hasIngredient(7)) || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasCategory(4)) >> not atom(hasCost(3))  || not atom(hasCategory(1))  ; 
  not atom(hasIngredient(7))  >> atom(hasCategory(3)) >> not atom(hasDifficulty(2))  || not atom(hasCost(3))  ; 
  atom(hasPrepTime(1)) >> atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasIngredient(11))  ; 
  atom(hasCost(3)) >> atom(hasCost(4)) >> atom(hasCategory(3)) || atom(hasPrep(1)) ; 
  atom(hasCost(3)) >> atom(hasDifficulty(3)) >> not atom(hasCategory(4))  || atom(hasPrep(1)) ; 
  atom(hasPrep(1)) >> atom(hasCategory(2)) >> atom(hasCost(4)) || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(4)) >> atom(hasPrepTime(2)) || not atom(hasPrep(1))  ; 
  atom(hasCost(5)) >> not atom(hasPrep(1))  >> atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasIngredient(7))  >> not atom(hasCategory(1))  || not atom(hasPrepTime(1))  ; 
  not atom(hasPrep(2))  >> not atom(hasCost(5))  >> atom(hasPrepTime(2)) || atom(hasIngredient(5)) ; 
  not atom(hasPrep(0))  >> not atom(hasIngredient(12))  || atom(hasCategory(3)) ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(2))  >> not atom(hasIngredient(3))  || atom(hasCategory(2)) ; 
  not atom(hasIngredient(9))  || atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(12)) >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasCost(5))  >> not atom(hasPrep(4))  || atom(hasDifficulty(3)) ; 
  atom(hasCategory(1)) >> not atom(hasIngredient(7))  >> not atom(hasCost(4))  || not atom(hasIngredient(4))  ; 
  not atom(hasPrep(7))  >> not atom(hasIngredient(6))  >> atom(hasIngredient(12)) || atom(hasCategory(2)) ; 
  not atom(hasPrepTime(1))  >> not atom(hasCost(2))  >> not atom(hasIngredient(12))  || atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> atom(hasIngredient(9)) >> atom(hasCategory(1)) || not atom(hasPrep(0))  ; 
  atom(hasCategory(1)) >> atom(hasIngredient(3)) >> atom(hasCost(1)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(4)) >> atom(hasPrepTime(2)) >> atom(hasPrep(1)) || not atom(hasIngredient(11))  ; 
  atom(hasIngredient(1)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(12))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasPrepTime(3))  || not atom(hasCost(2))  ; 
  atom(hasIngredient(11)) >> not atom(hasIngredient(8))  >> atom(hasIngredient(5)) || not atom(hasIngredient(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> atom(hasIngredient(9)) >> atom(hasCategory(1)) || not atom(hasPrep(0))  ; 
  atom(hasCategory(1)) >> atom(hasIngredient(3)) >> atom(hasCost(1)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(4)) >> atom(hasPrepTime(2)) >> atom(hasPrep(1)) || not atom(hasIngredient(11))  ; 
  atom(hasIngredient(11)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(12))  || not atom(hasPrep(3))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) >> not atom(hasPrepTime(3))  || not atom(hasPrep(1))  ; 
  atom(hasIngredient(5)) >> not atom(hasIngredient(8))  >> atom(hasIngredient(6)) || not atom(hasPrepTime(1))  
}.
