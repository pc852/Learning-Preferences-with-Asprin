asprin_vL version 1.0
Reading from stdin
-:1261:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1286:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1367:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1641:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1818:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2019:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2023:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2023:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2029:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2128:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2154:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2274:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1178:1-16: info: no atoms over signature occur in program:
  output/3

-:1170:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1171:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1172:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1173:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1203:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(67,better,50) output(66,better,58) output(62,better,10) output(67,better,21) output(61,better,47) output(8,better,21) output(62,better,32) output(89,better,10) output(8,better,50) output(67,better,58) output(8,better,58) output(66,better,10) output(67,better,10) output(8,better,10) output(50,worse,39) output(21,worse,66) output(58,worse,62) output(10,worse,32) output(18,worse,89) output(89,worse,62) output(18,worse,62) output(66,worse,62) output(67,worse,39) output(8,worse,39) output(21,worse,62) output(67,worse,62) output(58,worse,32) output(18,worse,32) output(21,worse,32) output(8,worse,62) output(8,eq,67) output(58,eq,10) output(21,eq,58) output(18,eq,10) output(21,eq,10) output(67,eq,32) output(8,eq,32)
Optimization: 28 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(67,better,50) output(66,better,58) output(62,better,10) output(67,better,21) output(61,better,47) output(8,better,21) output(62,better,32) output(89,better,10) output(8,better,50) output(67,better,58) output(8,better,58) output(66,better,10) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(50,worse,39) output(21,worse,66) output(58,worse,62) output(18,worse,89) output(89,worse,62) output(18,worse,62) output(58,worse,10) output(66,worse,62) output(67,worse,39) output(8,worse,39) output(21,worse,62) output(67,worse,62) output(21,worse,10) output(58,worse,32) output(21,worse,32) output(8,worse,62) output(8,eq,67) output(21,eq,58) output(18,eq,10)
Optimization: 26 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(2))),()) preference(1,aso) output(67,better,50) output(66,better,58) output(62,better,10) output(67,better,21) output(61,better,47) output(8,better,21) output(62,better,32) output(58,better,10) output(89,better,10) output(8,better,50) output(67,better,58) output(8,better,58) output(18,better,10) output(66,better,10) output(21,better,10) output(67,better,10) output(8,better,10) output(50,worse,39) output(21,worse,66) output(58,worse,62) output(10,worse,32) output(18,worse,89) output(89,worse,62) output(18,worse,62) output(66,worse,62) output(67,worse,39) output(8,worse,39) output(21,worse,62) output(67,worse,62) output(58,worse,32) output(18,worse,32) output(21,worse,32) output(8,worse,62) output(8,eq,67) output(21,eq,58) output(67,eq,32) output(8,eq,32)
Optimization: 25 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(67,better,50) output(66,better,58) output(62,better,10) output(67,better,21) output(61,better,47) output(8,better,21) output(62,better,32) output(89,better,10) output(21,better,58) output(8,better,50) output(67,better,58) output(8,better,58) output(66,better,10) output(21,better,10) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(58,worse,62) output(10,worse,32) output(18,worse,89) output(89,worse,62) output(18,worse,62) output(66,worse,62) output(21,worse,62) output(67,worse,62) output(58,worse,32) output(18,worse,32) output(8,worse,62) output(8,eq,67) output(58,eq,10) output(18,eq,10)
Optimization: 24 6
Answer: 5
preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(8,better,67) output(67,better,21) output(7,better,42) output(8,better,21) output(62,better,32) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(89,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(58,worse,62) output(61,worse,47) output(66,worse,62) output(21,worse,62) output(66,worse,32) output(89,eq,62) output(21,eq,58) output(58,eq,32) output(21,eq,32)
Optimization: 22 5
Answer: 6
preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,66) output(8,better,67) output(89,better,62) output(8,better,21) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(89,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(61,worse,47) output(66,worse,62) output(18,worse,10) output(66,worse,32) output(58,eq,62) output(7,eq,42) output(62,eq,32) output(58,eq,32)
Optimization: 21 5
Answer: 7
preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(58,better,62) output(8,better,67) output(67,better,21) output(89,better,62) output(8,better,21) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(67,better,62) output(58,better,32) output(89,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(61,worse,47) output(66,worse,62) output(21,worse,58) output(18,worse,10) output(66,worse,32) output(7,eq,42) output(62,eq,32) output(21,eq,62) output(21,eq,32)
Optimization: 20 5
Answer: 8
preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(atom(hasIngredient(7))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(58,better,62) output(8,better,67) output(67,better,21) output(89,better,62) output(8,better,21) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(58,better,32) output(89,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(7,worse,42) output(66,worse,62) output(18,worse,10) output(66,worse,32) output(62,eq,32) output(21,eq,58)
Optimization: 18 5
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(58,better,62) output(67,better,21) output(7,better,42) output(89,better,62) output(62,better,32) output(89,better,10) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(21,better,10) output(58,better,32) output(89,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,62) output(66,worse,58) output(61,worse,47) output(18,worse,89) output(18,worse,10)
Optimization: 17 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(atom(hasPrepTime(2))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasCategory(3))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(58,better,62) output(8,better,67) output(67,better,21) output(7,better,42) output(89,better,62) output(8,better,21) output(62,better,32) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(58,better,32) output(89,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(61,worse,47) output(18,worse,10) output(21,eq,58)
Optimization: 16 6
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(atom(hasIngredient(12))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasPrepTime(3))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(58,better,62) output(8,better,67) output(67,better,21) output(7,better,42) output(89,better,62) output(8,better,21) output(62,better,32) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(58,better,32) output(89,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(61,worse,47)
Optimization: 15 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCost(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,aso) output(67,better,50) output(21,better,66) output(58,better,62) output(8,better,67) output(67,better,21) output(61,better,47) output(7,better,42) output(89,better,62) output(8,better,21) output(62,better,32) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(58,better,32) output(89,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62) output(66,worse,58) output(18,worse,10)
Optimization: 14 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasPrep(2))),()) preference(1,(1,5),3,for(atom(hasCategory(4))),()) preference(1,aso) output(67,better,50) output(50,better,39) output(21,better,66) output(66,better,58) output(58,better,62) output(62,better,10) output(10,better,32) output(8,better,67) output(67,better,21) output(61,better,47) output(7,better,42) output(18,better,89) output(89,better,62) output(18,better,62) output(8,better,21) output(62,better,32) output(58,better,10) output(89,better,10) output(66,better,62) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(18,better,10) output(66,better,10) output(21,better,10) output(58,better,32) output(89,better,32) output(18,better,32) output(66,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasPrep(5))),()) preference(1,(1,5),3,for(atom(hasCategory(4))),()) preference(1,aso) output(67,better,50) output(50,better,39) output(21,better,66) output(66,better,58) output(58,better,62) output(62,better,10) output(10,better,32) output(8,better,67) output(67,better,21) output(61,better,47) output(7,better,42) output(18,better,89) output(89,better,62) output(18,better,62) output(8,better,21) output(62,better,32) output(58,better,10) output(89,better,10) output(66,better,62) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(18,better,10) output(66,better,10) output(21,better,10) output(58,better,32) output(89,better,32) output(18,better,32) output(66,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 15
preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,1),2,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasIngredient(12))),()) preference(1,(1,5),3,for(atom(hasCost(3))),()) preference(1,aso) output(67,better,50) output(50,better,39) output(21,better,66) output(66,better,58) output(58,better,62) output(62,better,10) output(10,better,32) output(8,better,67) output(67,better,21) output(61,better,47) output(7,better,42) output(18,better,89) output(89,better,62) output(18,better,62) output(8,better,21) output(62,better,32) output(58,better,10) output(89,better,10) output(66,better,62) output(21,better,58) output(67,better,66) output(67,better,39) output(8,better,50) output(8,better,39) output(8,better,66) output(67,better,58) output(8,better,58) output(21,better,62) output(67,better,62) output(18,better,10) output(66,better,10) output(21,better,10) output(58,better,32) output(89,better,32) output(18,better,32) output(66,better,32) output(21,better,32) output(67,better,32) output(8,better,32) output(67,better,10) output(8,better,10) output(8,better,62)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 15
  Optimum    : yes
Optimization : 0 4
Calls        : 1
Time         : 13.310s (Solving: 5.48s 1st Model: 0.55s Unsat: 3.21s)
CPU Time     : 29.412s
Threads      : 4        (Winner: 1)

Choices      : 146218   (Domain: 727)
Conflicts    : 19080    (Analyzed: 19075)
Restarts     : 42       (Average: 454.17 Last: 1393)
Model-Level  : 560.3   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 34862    (Deleted: 916)
  Binary     : 2230     (Ratio:   6.40%)
  Ternary    : 4495     (Ratio:  12.89%)
  Conflict   : 19075    (Average Length:  132.3 Ratio:  54.72%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 15787    (Average Length:   54.8 Ratio:  45.28%) 
  Distributed: 5347     (Ratio:  28.03% Average LBD: 3.03) 
  Integrated : 16007    (Ratio: 299.36% Unit: 205 Average Jumps: 72.21)
Backjumps    : 19075    (Average:  6.30 Max: 971 Sum: 120155)
  Executed   : 19053    (Average:  6.27 Max: 971 Sum: 119579 Ratio:  99.52%)
  Bounded    : 22       (Average: 26.18 Max:  41 Sum:    576 Ratio:   0.48%)

Rules        : 4032068 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 663748  
Bodies       : 811204  
  Count      : 1536    
Equivalences : 2018716  (Atom=Atom: 594998 Body=Body: 649243 Other: 774475)
Tight        : Yes
Variables    : 105045   (Eliminated:    0 Frozen: 39717)
Constraints  : 3527196  (Binary:  97.1% Ternary:   2.7% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasPrep(4)) >> not atom(hasCategory(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(1)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCost(4)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasIngredient(10))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || atom(hasPrepTime(2)) ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasPrepTime(1)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasCategory(2))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || atom(hasPrepTime(2)) ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasCost(1))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasPrep(7))  || not atom(hasIngredient(4))  ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasCost(1))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  atom(hasPrep(7)) >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> atom(hasIngredient(3)) >> atom(hasCost(3)) || not atom(hasCategory(1))  ; 
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasCost(1))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(5))  || not atom(hasIngredient(4))  ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasCategory(3)) >> not atom(hasPrepTime(3))  || not atom(hasPrep(6))  ; 
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasCost(1))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  not atom(hasPrep(0))  >> not atom(hasIngredient(5))  || atom(hasPrepTime(2)) ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(4))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(1))  >> not atom(hasPrep(4))  || not atom(hasCost(1))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  atom(hasPrepTime(3)) >> not atom(hasIngredient(5))  || atom(hasIngredient(12)) ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> not atom(hasPrepTime(1))  || not atom(hasCategory(1))  ; 
  atom(hasCost(2)) >> not atom(hasCost(3))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(1))  >> atom(hasPrep(1)) || not atom(hasCost(1))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(4))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(10)) >> not atom(hasCost(2))  || not atom(hasCategory(2))  ; 
  atom(hasCategory(1)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) >> atom(hasCost(3)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(0)) >> not atom(hasCost(2))  || not atom(hasPrep(6))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(5)) >> atom(hasPrep(2)) || not atom(hasPrep(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(4)) >> not atom(hasIngredient(4))  || not atom(hasCost(4))  ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(1)) >> atom(hasCategory(4)) || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(1)) >> not atom(hasIngredient(7))  >> not atom(hasPrep(6))  || atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) >> atom(hasCost(3)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> not atom(hasCost(3))  >> not atom(hasCost(2))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(4)) >> atom(hasPrep(2)) >> atom(hasPrep(5)) || not atom(hasIngredient(10))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(6)) >> not atom(hasPrepTime(1))  || not atom(hasIngredient(4))  ; 
  atom(hasDifficulty(1)) >> atom(hasPrep(1)) >> atom(hasCategory(4)) || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> atom(hasPrepTime(1)) >> not atom(hasCategory(2))  || not atom(hasCost(4))  ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(9)) >> atom(hasCost(3)) || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> atom(hasCategory(3)) >> atom(hasIngredient(12)) 
}.
