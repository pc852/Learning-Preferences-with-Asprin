asprin_vL version 1.0
Reading from stdin
-:1245:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1270:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1351:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1625:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1802:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2003:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2007:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2007:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2112:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2138:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2258:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2292:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2314:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1162:1-16: info: no atoms over signature occur in program:
  output/3

-:1154:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1155:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1156:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1157:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1187:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(52,better,68) output(65,worse,33) output(68,worse,22) output(39,worse,47) output(10,worse,47) output(60,worse,47) output(88,worse,33) output(46,worse,47) output(10,eq,39) output(39,eq,82) output(82,eq,80) output(88,eq,65) output(46,eq,60) output(60,eq,39) output(83,eq,55) output(55,eq,74) output(83,eq,74) output(46,eq,39) output(52,eq,22) output(39,eq,80) output(10,eq,82) output(60,eq,82) output(46,eq,82) output(10,eq,80) output(60,eq,80) output(46,eq,80)
Optimization: 25 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(1))),()) preference(1,aso) output(60,better,39) output(46,better,39) output(60,better,82) output(46,better,82) output(60,better,80) output(46,better,80) output(39,worse,47) output(52,worse,68) output(10,worse,47) output(52,worse,22) output(10,eq,39) output(39,eq,82) output(82,eq,80) output(88,eq,65) output(68,eq,22) output(46,eq,60) output(83,eq,55) output(55,eq,74) output(83,eq,74) output(60,eq,47) output(39,eq,80) output(10,eq,82) output(10,eq,80) output(46,eq,47)
Optimization: 20 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(10,better,39) output(88,better,65) output(60,better,39) output(52,better,68) output(46,better,39) output(10,better,82) output(60,better,82) output(46,better,82) output(10,better,80) output(60,better,80) output(46,better,80) output(65,worse,33) output(68,worse,22) output(39,worse,47) output(52,worse,22) output(39,eq,82) output(82,eq,80) output(46,eq,60) output(83,eq,55) output(55,eq,74) output(83,eq,74) output(39,eq,80)
Optimization: 15 6
Answer: 4
preference(1,(1,1),0,for(atom(hasCategory(5))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,aso) output(39,better,82) output(65,better,33) output(68,better,22) output(39,better,47) output(10,better,47) output(60,better,47) output(52,better,22) output(88,better,33) output(39,better,80) output(10,better,82) output(60,better,82) output(46,better,82) output(10,better,80) output(60,better,80) output(46,better,80) output(46,better,47) output(55,worse,74) output(83,worse,74) output(10,eq,39) output(82,eq,80) output(88,eq,65) output(46,eq,60) output(60,eq,39) output(52,eq,68) output(83,eq,55) output(46,eq,39)
Optimization: 10 2
Answer: 5
preference(1,(1,2),0,for(atom(hasIngredient(7))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(atom(hasPrep(0))),()) preference(1,(1,6),0,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(7))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(10,better,39) output(39,better,82) output(82,better,80) output(88,better,65) output(65,better,33) output(68,better,22) output(46,better,60) output(60,better,39) output(39,better,47) output(52,better,68) output(83,better,55) output(55,better,74) output(83,better,74) output(10,better,47) output(60,better,47) output(46,better,39) output(52,better,22) output(88,better,33) output(39,better,80) output(10,better,82) output(60,better,82) output(46,better,82) output(10,better,80) output(60,better,80) output(46,better,80) output(46,better,47)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 6
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,2),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(10,better,39) output(39,better,82) output(82,better,80) output(88,better,65) output(65,better,33) output(68,better,22) output(46,better,60) output(60,better,39) output(39,better,47) output(52,better,68) output(83,better,55) output(55,better,74) output(83,better,74) output(10,better,47) output(60,better,47) output(46,better,39) output(52,better,22) output(88,better,33) output(39,better,80) output(10,better,82) output(60,better,82) output(46,better,82) output(10,better,80) output(60,better,80) output(46,better,80) output(46,better,47)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 7
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(10,better,39) output(39,better,82) output(82,better,80) output(88,better,65) output(65,better,33) output(68,better,22) output(46,better,60) output(60,better,39) output(39,better,47) output(52,better,68) output(83,better,55) output(55,better,74) output(83,better,74) output(10,better,47) output(60,better,47) output(46,better,39) output(52,better,22) output(88,better,33) output(39,better,80) output(10,better,82) output(60,better,82) output(46,better,82) output(10,better,80) output(60,better,80) output(46,better,80) output(46,better,47)
Optimization: 0 4
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(10,better,39) output(39,better,82) output(82,better,80) output(88,better,65) output(65,better,33) output(68,better,22) output(46,better,60) output(60,better,39) output(39,better,47) output(52,better,68) output(83,better,55) output(55,better,74) output(83,better,74) output(10,better,47) output(60,better,47) output(46,better,39) output(52,better,22) output(88,better,33) output(39,better,80) output(10,better,82) output(60,better,82) output(46,better,82) output(10,better,80) output(60,better,80) output(46,better,80) output(46,better,47)
Optimization: 0 3
OPTIMUM FOUND

Models       : 8
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 9.234s (Solving: 3.54s 1st Model: 0.32s Unsat: 2.16s)
CPU Time     : 19.595s
Threads      : 4        (Winner: 0)

Choices      : 116794   (Domain: 170)
Conflicts    : 14079    (Analyzed: 14076)
Restarts     : 36       (Average: 391.00 Last: 1464)
Model-Level  : 912.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 28014    (Deleted: 0)
  Binary     : 1419     (Ratio:   5.07%)
  Ternary    : 5856     (Ratio:  20.90%)
  Conflict   : 14076    (Average Length:  130.2 Ratio:  50.25%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 13938    (Average Length:   46.5 Ratio:  49.75%) 
  Distributed: 4656     (Ratio:  33.08% Average LBD: 3.01) 
  Integrated : 13955    (Ratio: 299.72% Unit: 241 Average Jumps: 60.10)
Backjumps    : 14076    (Average:  6.65 Max: 1319 Sum:  93563)
  Executed   : 14071    (Average:  6.64 Max: 1319 Sum:  93478 Ratio:  99.91%)
  Bounded    : 5        (Average: 17.00 Max:  24 Sum:     85 Ratio:   0.09%)

Rules        : 2524546 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 424386  
Bodies       : 536010  
  Count      : 960     
Equivalences : 1281424  (Atom=Atom: 376294 Body=Body: 405627 Other: 499503)
Tight        : Yes
Variables    : 91021    (Eliminated:    0 Frozen: 25885)
Constraints  : 2271958  (Binary:  96.1% Ternary:   3.7% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(5)) >> not atom(hasCost(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasPrep(4)) >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasCost(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(8)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasPrepTime(1))  >> not atom(hasPrep(7))  || atom(hasCategory(5)) ; 
  atom(hasCost(3)) >> not atom(hasIngredient(3))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> not atom(hasDifficulty(2))  >> not atom(hasIngredient(7))  || atom(hasIngredient(7)) ; 
  atom(hasCost(3)) >> atom(hasPrep(5)) >> not atom(hasIngredient(3))  || not atom(hasCategory(1))  ; 
  not atom(hasPrepTime(1))  >> not atom(hasPrep(6))  >> atom(hasCategory(2)) || atom(hasPrep(0)) ; 
  atom(hasIngredient(7)) >> atom(hasPrep(1)) >> atom(hasDifficulty(2)) || atom(hasPrep(5)) ; 
  atom(hasPrep(2)) >> atom(hasCategory(4)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(10)) >> not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> not atom(hasCost(5))  || atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(1)) >> atom(hasCategory(2)) || atom(hasIngredient(7)) ; 
  atom(hasCategory(1)) >> atom(hasIngredient(9)) >> not atom(hasPrep(5))  || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(8)) >> not atom(hasIngredient(10))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(2))  >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasIngredient(7)) || atom(hasDifficulty(1)) ; 
  atom(hasCategory(1)) >> atom(hasIngredient(9)) >> not atom(hasPrep(5))  || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(7)) >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(12)) >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(12)) >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  atom(hasCategory(3)) >> atom(hasPrepTime(1)) >> not atom(hasPrep(0))  || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(0)) || not atom(hasCost(3))  
}.
